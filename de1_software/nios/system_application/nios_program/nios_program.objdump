
nios_program.elf:     file format elf32-littlenios2
nios_program.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x08000230

Program Header:
    LOAD off    0x00001000 vaddr 0x08000000 paddr 0x08000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x08000020 paddr 0x08000020 align 2**12
         filesz 0x00017cbc memsz 0x00017cbc flags r-x
    LOAD off    0x00018cdc vaddr 0x08017cdc paddr 0x0801996c align 2**12
         filesz 0x00001c90 memsz 0x00001c90 flags rw-
    LOAD off    0x0001b5fc vaddr 0x0801b5fc paddr 0x0801b5fc align 2**12
         filesz 0x00000000 memsz 0x00000a78 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  08000000  08000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000210  08000020  08000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00017274  08000230  08000230  00001230  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000838  080174a4  080174a4  000184a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001c90  08017cdc  0801996c  00018cdc  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000a78  0801b5fc  0801b5fc  0001b5fc  2**2
                  ALLOC, SMALL_DATA
  6 .sdram_controller 00000000  0801c074  0801c074  0001a96c  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  0001a96c  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 000012f8  00000000  00000000  0001a990  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   00035880  00000000  00000000  0001bc88  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 0000dc19  00000000  00000000  00051508  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0001102b  00000000  00000000  0005f121  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  00003778  00000000  00000000  0007014c  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00006dfd  00000000  00000000  000738c4  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    0001fce9  00000000  00000000  0007a6c1  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000010  00000000  00000000  0009a3ac  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00001cf8  00000000  00000000  0009a3c0  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  000a1a74  2**0
                  CONTENTS, READONLY
 18 .cpu          0000000c  00000000  00000000  000a1a77  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  000a1a83  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  000a1a84  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  000a1a85  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  000a1a89  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  000a1a8d  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   0000000b  00000000  00000000  000a1a91  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    0000000b  00000000  00000000  000a1a9c  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   0000000b  00000000  00000000  000a1aa7  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 0000000f  00000000  00000000  000a1ab2  2**0
                  CONTENTS, READONLY
 28 .quartus_project_dir 0000001d  00000000  00000000  000a1ac1  2**0
                  CONTENTS, READONLY
 29 .jdi          00007b07  00000000  00000000  000a1ade  2**0
                  CONTENTS, READONLY
 30 .sopcinfo     002dcdb0  00000000  00000000  000a95e5  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
08000000 l    d  .entry	00000000 .entry
08000020 l    d  .exceptions	00000000 .exceptions
08000230 l    d  .text	00000000 .text
080174a4 l    d  .rodata	00000000 .rodata
08017cdc l    d  .rwdata	00000000 .rwdata
0801b5fc l    d  .bss	00000000 .bss
0801c074 l    d  .sdram_controller	00000000 .sdram_controller
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 D:/tag2/de1_software/nios/system_application/nios_program_bsp//obj/HAL/src/crt0.o
08000268 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 BTUart.cpp
00000000 l    df *ABS*	00000000 WiFiUart.cpp
00000000 l    df *ABS*	00000000 dma.cpp
08000c68 l     F .text	00000024 alt_dma_txchan_close
08000c8c l     F .text	00000068 alt_dma_txchan_send
08000cf4 l     F .text	00000058 alt_dma_txchan_ioctl
00000000 l    df *ABS*	00000000 main.cpp
00000000 l    df *ABS*	00000000 wifi_task.cpp
00000000 l    df *ABS*	00000000 eh_personality.cc
080012d8 l     F .text	00000058 _ZL12read_sleb128PKhPl
08001330 l     F .text	00000088 _ZL16get_adjusted_ptrPKSt9type_infoS1_PPv
080013b8 l     F .text	000000a0 _ZL21size_of_encoded_valueh
08001458 l     F .text	00000210 _ZL28read_encoded_value_with_basehjPKhPj
08001668 l     F .text	00000054 _ZL15get_ttype_entryP16lsda_header_infom
080016bc l     F .text	000000a8 _ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl
08001764 l     F .text	00000088 _ZL21base_of_encoded_valuehP15_Unwind_Context
080017ec l     F .text	00000240 _ZL28check_compact_exception_specPKSt9type_infoPvPKhij
08001a2c l     F .text	00000134 _ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info
00000000 l    df *ABS*	00000000 eh_globals.cc
0801b600 l     O .bss	00000008 _ZL10eh_globals
00000000 l    df *ABS*	00000000 class_type_info.cc
00000000 l    df *ABS*	00000000 del_op.cc
00000000 l    df *ABS*	00000000 eh_terminate.cc
00000000 l    df *ABS*	00000000 si_class_type_info.cc
00000000 l    df *ABS*	00000000 eh_catch.cc
00000000 l    df *ABS*	00000000 eh_call.cc
00000000 l    df *ABS*	00000000 eh_term_handler.cc
00000000 l    df *ABS*	00000000 eh_throw.cc
08002b68 l     F .text	00000044 _ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception
00000000 l    df *ABS*	00000000 tinfo.cc
00000000 l    df *ABS*	00000000 eh_alloc.cc
0801b60c l     O .bss	00000004 _ZL14emergency_used
0801b74c l     O .bss	00000800 _ZL16emergency_buffer
0801b608 l     O .bss	00000004 _ZL15dependents_used
0801b64c l     O .bss	00000100 _ZL17dependents_buffer
00000000 l    df *ABS*	00000000 eh_exception.cc
00000000 l    df *ABS*	00000000 eh_unex_handler.cc
00000000 l    df *ABS*	00000000 pure.cc
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 unwind-sjlj.c
08002f80 l     F .text	00000118 _Unwind_ForcedUnwind_Phase2
0801b610 l     O .bss	00000004 fc_static
08003098 l     F .text	000000c0 _Unwind_RaiseException_Phase2
08003158 l     F .text	00000030 uw_install_context.isra.1
00000000 l    df *ABS*	00000000 abort.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 impure.c
08017cdc l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 signal.c
00000000 l    df *ABS*	00000000 signalr.c
00000000 l    df *ABS*	00000000 snprintf.c
00000000 l    df *ABS*	00000000 strcat.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strcpy.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
080179a2 l     O .rodata	00000010 zeroes.4166
080179b2 l     O .rodata	00000010 blanks.4165
00000000 l    df *ABS*	00000000 vfprintf.c
080179c2 l     O .rodata	00000010 zeroes.4181
080179d2 l     O .rodata	00000010 blanks.4180
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 dtoa.c
08008ad0 l     F .text	00000228 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
0800a678 l     F .text	00000008 __fp_lock
0800a680 l     F .text	00000008 __fp_unlock
0800a694 l     F .text	000001a0 __sinit.part.1
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 locale.c
08018528 l     O .rwdata	00000020 lc_ctype_charset
08018508 l     O .rwdata	00000020 lc_message_charset
08018548 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 mprec.c
08017a00 l     O .rodata	0000000c p05.2678
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 vfprintf.c
08017b24 l     O .rodata	00000010 zeroes.4110
08017b34 l     O .rodata	00000010 blanks.4109
00000000 l    df *ABS*	00000000 vfprintf.c
0800e598 l     F .text	000000fc __sprint_r.part.0
08017b54 l     O .rodata	00000010 blanks.4125
08017b44 l     O .rodata	00000010 zeroes.4126
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
0801109c l     F .text	0000006c udivmodsi4
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
080139c4 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
08013aec l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_dma_txchan_open.c
08013b18 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_exit.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_fstat.c
08013c80 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_getpid.c
00000000 l    df *ABS*	00000000 alt_isatty.c
08013da8 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_kill.c
08013ea4 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
08014024 l     F .text	00000064 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
08014108 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_printf.c
00000000 l    df *ABS*	00000000 alt_putchar.c
00000000 l    df *ABS*	00000000 alt_read.c
08014558 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
08019954 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
080147dc l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0801492c l     F .text	00000038 alt_dev_reg
08018728 l     O .rwdata	000000a4 dma_fpga_to_hps_priv
080187cc l     O .rwdata	0000001c dma_fpga_to_hps_tx
080187e8 l     O .rwdata	0000001c dma_fpga_to_hps_rx
08018804 l     O .rwdata	00001060 jtag_uart_0
08019864 l     O .rwdata	0000002c bt_rs232_uart
08019890 l     O .rwdata	0000002c wifi_rs232_uart
00000000 l    df *ABS*	00000000 altera_avalon_dma.c
08014a1c l     F .text	00000038 alt_dma_txchan_reg
08014a54 l     F .text	00000038 alt_dma_rxchan_reg
08014b80 l     F .text	00000098 alt_avalon_dma_launch_txonly
08014c18 l     F .text	00000098 alt_avalon_dma_launch_rxonly
08014cb0 l     F .text	00000344 alt_avalon_dma_ioctl
08015368 l     F .text	000001c0 alt_avalon_dma_irq
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
080157ec l     F .text	00000208 altera_avalon_jtag_uart_irq
080159f4 l     F .text	000000a8 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_up_avalon_rs232.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
080164fc l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_dma_rxchan_open.c
080165f0 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
08016768 l     F .text	000000e0 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_register.c
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
08016a70 l     F .text	00000050 alt_get_errno
08016ac0 l     F .text	000000f4 alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 putc.c
00000000 l    df *ABS*	00000000 __atexit.c
0801b648 g     O .bss	00000004 alt_instruction_exception_handler
08002dc8 g     F .text	00000044 __cxa_free_exception
08002ccc g     F .text	00000008 _ZNKSt9type_info15__is_function_pEv
0800c938 g     F .text	00000074 _mprec_log10
08002660 g     F .text	00000018 _ZSt10unexpectedv
0800ca24 g     F .text	0000008c __any_on
0800ffc4 g     F .text	00000054 _isatty_r
08017a0c g     O .rodata	00000028 __mprec_tinytens
08014234 g     F .text	00000078 alt_main
08004554 g     F .text	00000090 strcpy
08000a50 g     F .text	00000080 _ZN8WiFiUart6read_mEPii
08003e4c g     F .text	000000b8 _puts_r
0801bf74 g     O .bss	00000100 alt_irq
08002f08 g     F .text	00000004 _ZN10__cxxabiv115__forced_unwindD1Ev
08010018 g     F .text	0000005c _lseek_r
08000654 g     F .text	00000048 _ZN8WiFiUartD1Ev
08003214 g     F .text	00000020 .hidden _Unwind_GetIPInfo
0801996c g       *ABS*	00000000 __flash_rwdata_start
080123e4 g     F .text	00000084 .hidden __eqdf2
08002c3c g     F .text	00000084 __cxa_rethrow
080031a0 g     F .text	00000014 .hidden _Unwind_SjLj_Unregister
0800269c g     F .text	00000014 _ZSt14set_unexpectedPFvvE
08003204 g     F .text	00000010 .hidden _Unwind_GetIP
0801c074 g       *ABS*	00000000 __alt_heap_start
08004210 g     F .text	00000058 _kill_r
08003e10 g     F .text	0000003c printf
08010240 g     F .text	0000009c _wcrtomb_r
08003fd4 g     F .text	00000084 _signal_r
080174bc  w    O .rodata	00000010 _ZTV6BTUart
0800d19c g     F .text	0000005c __sseek
0800a9dc g     F .text	00000010 __sinit
08015528 g     F .text	000000a8 alt_avalon_dma_init
080100d0 g     F .text	00000154 __swbuf_r
08002ea0 g     F .text	00000040 __cxa_free_dependent_exception
080026c0 g     F .text	00000010 _ZN10__cxxabiv120__si_class_type_infoD2Ev
0800b454 g     F .text	0000007c _setlocale_r
080177a4  w    O .rodata	00000025 _ZTSN10__cxxabiv120__si_class_type_infoE
0800a834 g     F .text	00000078 __sfmoreglue
080142cc g     F .text	00000020 __malloc_unlock
0801623c g     F .text	00000090 alt_up_rs232_read_fd
08002f08 g     F .text	00000004 _ZN10__cxxabiv115__forced_unwindD2Ev
08002af0 g     F .text	00000020 _ZSt18uncaught_exceptionv
08002f38 g     F .text	00000020 __cxa_deleted_virtual
0800b90c g     F .text	0000015c memmove
080005d8 g     F .text	0000004c _ZN6BTUart5flushEv
08002ee0 g     F .text	00000004 _ZNSt9exceptionD2Ev
0800a9c4 g     F .text	00000018 _cleanup
08004344 g     F .text	000000e4 snprintf
0800ba68 g     F .text	000000a8 _Balloc
08012468 g     F .text	000000e0 .hidden __gtdf2
080178e0  w    O .rodata	00000014 _ZTVSt13bad_exception
08016eb0 g     F .text	00000020 altera_nios2_gen2_irq_init
00000000  w      *UND*	00000000 __errno
08000000 g     F .entry	0000000c __reset
08003250 g     F .text	00000008 .hidden _Unwind_GetRegionStart
08000020 g       *ABS*	00000000 __flash_exceptions_start
0800ff6c g     F .text	00000058 _fstat_r
0801b620 g     O .bss	00000004 errno
0800d118 g     F .text	00000008 __seofread
08000824 g     F .text	000001b8 _ZN8WiFiUart12update_entryEPViS1_
08000000 g       *ABS*	00000000 __alt_mem_sdram_controller
0800d3c8 g     F .text	000011d0 ___svfiprintf_internal_r
0800342c g     F .text	00000074 .hidden _Unwind_Backtrace
0801b634 g     O .bss	00000004 alt_argv
080218bc g       *ABS*	00000000 _gp
08013d88 g     F .text	00000020 getpid
0801754c  w    O .rodata	0000000a _ZTS8WiFiUart
08002060 g     F .text	00000234 __cxa_call_unexpected
08002984 g     F .text	00000008 __cxa_get_exception_ptr
08013b68 g     F .text	00000054 alt_dma_txchan_open
080185a8 g     O .rwdata	00000180 alt_fd_list
080198c4  w    O .rwdata	00000008 _ZTS6BTUart
08003340 g     F .text	00000044 .hidden _Unwind_SjLj_ForcedUnwind
080031d0 g     F .text	00000018 .hidden _Unwind_GetCFA
08002678 g     F .text	00000014 _ZSt13set_terminatePFvvE
08013bf0 g     F .text	00000090 alt_find_dev
0800b7d4 g     F .text	00000138 memcpy
08002e0c g     F .text	00000094 __cxa_allocate_dependent_exception
0800a688 g     F .text	0000000c _cleanup_r
08002324 g     F .text	00000018 _ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_
080137ec g     F .text	000000d0 .hidden __floatsidf
08016848 g     F .text	00000078 alt_io_redirect
08012548 g     F .text	000000e0 .hidden __ltdf2
080174a4 g       *ABS*	00000000 __DTOR_END__
0800233c g     F .text	00000010 _ZN10__cxxabiv117__class_type_infoD1Ev
080161c8 g     F .text	00000074 alt_up_rs232_read_data
08003f04 g     F .text	00000014 puts
080170b8 g     F .text	0000009c alt_exception_cause_generated_bad_addr
08000c1c g     F .text	0000004c _ZN8WiFiUart5flushEv
0800d050 g     F .text	00000074 __fpclassifyd
080198dc g     O .rwdata	00000004 tag_id
0800c894 g     F .text	000000a4 __ratio
0800fad0 g     F .text	00000024 __vfiprintf_internal
08015bf0 g     F .text	0000020c altera_avalon_jtag_uart_read
080034f0 g     F .text	00000014 malloc
08003de4 g     F .text	0000002c _printf_r
080111b8 g     F .text	00000008 .hidden __udivsi3
08013df8 g     F .text	000000ac isatty
08004058 g     F .text	000000bc _raise_r
08017a5c g     O .rodata	000000c8 __mprec_tens
0800b4d0 g     F .text	0000000c __locale_charset
08000624 g     F .text	00000030 _ZN8WiFiUartC2Ev
0801b61c g     O .bss	00000004 __malloc_top_pad
080198e0 g     O .rwdata	00000004 input
08004268 g     F .text	00000004 _getpid_r
08000624 g     F .text	00000030 _ZN8WiFiUartC1Ev
0801992c g     O .rwdata	00000004 __mb_cur_max
0800b500 g     F .text	0000000c _localeconv_r
0800069c g     F .text	00000038 _ZN8WiFiUartD0Ev
0800be90 g     F .text	0000003c __i2b
0800ae40 g     F .text	000004a4 __sfvwrite_r
080023ec g     F .text	000000b8 _ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj
08004114 g     F .text	000000a8 __sigtramp_r
08003f18 g     F .text	00000054 _sbrk_r
08017814  w    O .rodata	00000020 _ZTVSt9type_info
08010074 g     F .text	0000005c _read_r
08002ee8 g     F .text	0000000c _ZNKSt9exception4whatEv
08019944 g     O .rwdata	00000004 alt_max_fd
08016144 g     F .text	00000044 alt_up_rs232_check_parity
0800fc7c g     F .text	00000100 _fclose_r
0800a648 g     F .text	00000030 fflush
0801b618 g     O .bss	00000004 __malloc_max_sbrked_mem
080168c0 g     F .text	000001b0 alt_irq_register
080111c8 g     F .text	0000089c .hidden __adddf3
08014a8c g     F .text	000000f4 alt_avalon_dma_launch_bidir
080177d8  w    O .rodata	0000002c _ZTVN10__cxxabiv120__si_class_type_infoE
08000654 g     F .text	00000048 _ZN8WiFiUartD2Ev
0800c63c g     F .text	0000011c __b2d
080198d0  w    O .rwdata	00000008 _ZTI8WiFiUart
08016640 g     F .text	00000054 alt_dma_rxchan_open
08010a80 g     F .text	0000061c .hidden __umoddi3
08014158 g     F .text	000000dc lseek
08002380 g     F .text	0000006c _ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE
08002574 g     F .text	00000004 _ZdlPv
0800029c g     F .text	00000048 _ZN6BTUartD1Ev
0801753c  w    O .rodata	00000010 _ZTV8WiFiUart
0801991c g     O .rwdata	00000004 _global_impure_ptr
0800cab0 g     F .text	000005a0 _realloc_r
0801c074 g       *ABS*	00000000 __bss_end
08016dac g     F .text	00000104 alt_tick
08003188 g     F .text	00000018 .hidden _Unwind_SjLj_Register
08010440 g     F .text	00000640 .hidden __udivdi3
0800fd90 g     F .text	00000184 _fputwc_r
08017a34 g     O .rodata	00000028 __mprec_bigtens
0800bc74 g     F .text	00000104 __s2b
080034a0 g     F .text	00000018 abort
080138bc g     F .text	000000a4 .hidden __floatunsidf
0800c3e4 g     F .text	00000060 __mcmp
08002a40 g     F .text	000000b0 __cxa_end_catch
0800a9fc g     F .text	00000018 __fp_lock_all
08002ee4 g     F .text	00000004 _ZNSt13bad_exceptionD2Ev
08016d14 g     F .text	00000098 alt_alarm_stop
08000b74 g     F .text	00000060 _ZN8WiFiUart6read_sEv
0801b63c g     O .bss	00000004 alt_irq_active
080198e4 g     O .rwdata	00000004 id
08002638 g     F .text	00000018 _ZSt9terminatev
08001084 g     F .text	00000254 _Z9wifi_taskv
080000fc g     F .exceptions	000000d4 alt_irq_handler
08018580 g     O .rwdata	00000028 alt_dev_null
08000d74 g     F .text	000000d8 _Z9start_dmav
08002f10 g     F .text	00000004 _ZN10__cxxabiv119__foreign_exceptionD2Ev
0800026c g     F .text	00000030 _ZN6BTUartC2Ev
0800026c g     F .text	00000030 _ZN6BTUartC1Ev
08017748  w    O .rodata	00000022 _ZTSN10__cxxabiv117__class_type_infoE
080164e0 g     F .text	0000001c alt_dcache_flush_all
0800bd78 g     F .text	00000068 __hi0bits
08019900  w    O .rwdata	00000008 _ZTISt9exception
08013764 g     F .text	00000088 .hidden __fixdfsi
0801996c g       *ABS*	00000000 __ram_rwdata_end
08002cc0 g     F .text	00000004 _ZNSt9type_infoD1Ev
0801993c g     O .rwdata	00000008 alt_dev_list
08002f10 g     F .text	00000004 _ZN10__cxxabiv119__foreign_exceptionD1Ev
080151bc g     F .text	00000074 alt_avalon_dma_space
0801482c g     F .text	00000100 write
080171e4 g     F .text	000000a0 _putc_r
08002cdc g     F .text	00000004 _ZNSt9type_infoD0Ev
08017cdc g       *ABS*	00000000 __ram_rodata_end
08013cd0 g     F .text	000000b8 fstat
080162cc g     F .text	00000094 alt_up_rs232_write_fd
080198cc g     O .rwdata	00000004 script
08013ef4 g     F .text	00000130 kill
08012548 g     F .text	000000e0 .hidden __ledf2
080009dc g     F .text	00000074 _ZN8WiFiUart7write_mEPci
08004428 g     F .text	00000088 strcat
0800c15c g     F .text	00000140 __pow5mult
0800e6ac g     F .text	00001424 ___vfiprintf_internal_r
0801b62c g     O .bss	00000004 __nlocale_changed
080111c0 g     F .text	00000008 .hidden __umodsi3
08002cd4 g     F .text	00000008 _ZNKSt9type_info11__do_upcastEPKN10__cxxabiv117__class_type_infoEPPv
0800268c g     F .text	00000010 _ZSt13get_terminatev
0801c074 g       *ABS*	00000000 end
08003414 g     F .text	00000018 .hidden _Unwind_DeleteException
08015734 g     F .text	000000b8 altera_avalon_jtag_uart_init
080001d0 g     F .exceptions	00000060 alt_instruction_exception_entry
080024a4 g     F .text	000000d0 _ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE
080174a4 g       *ABS*	00000000 __CTOR_LIST__
0c000000 g       *ABS*	00000000 __alt_stack_pointer
08013960 g     F .text	00000064 .hidden __clzsi2
0800426c g     F .text	000000d8 _snprintf_r
080022ac g     F .text	00000078 _ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv
08015dfc g     F .text	00000218 altera_avalon_jtag_uart_write
0800a9ec g     F .text	00000004 __sfp_lock_acquire
08017868  w    O .rodata	00000012 _ZTSSt13bad_exception
0800b6ec g     F .text	000000e8 memchr
080066ec g     F .text	000020fc ___vfprintf_internal_r
0800ab50 g     F .text	000002f0 _free_r
080142ec g     F .text	00000228 alt_printf
0800b4dc g     F .text	00000010 __locale_mb_cur_max
08015230 g     F .text	00000138 alt_avalon_dma_send
0800893c g     F .text	00000194 __call_exitprocs
08019948 g     O .rwdata	00000008 alt_dma_txchan_list
0801b628 g     O .bss	00000004 __mlocale_changed
0800029c g     F .text	00000048 _ZN6BTUartD2Ev
080198d8 g     O .rwdata	00000004 dnn_acc
08019924 g     O .rwdata	00000004 __malloc_sbrk_base
08000230 g     F .text	0000003c _start
0801b640 g     O .bss	00000004 _alt_tick_rate
08017804  w    O .rodata	0000000d _ZTSSt9type_info
08002f18 g     F .text	00000020 __cxa_pure_virtual
0800c29c g     F .text	00000148 __lshift
0801b644 g     O .bss	00000004 _alt_nticks
080041d0 g     F .text	0000001c signal
080145a8 g     F .text	00000104 read
08014998 g     F .text	00000084 alt_sys_init
0800d200 g     F .text	000001c8 __ssprint_r
0801734c g     F .text	00000114 __register_exitproc
08002704 g     F .text	00000160 _ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE
08016108 g     F .text	0000003c alt_up_rs232_get_available_space_in_write_FIFO
0800073c g     F .text	000000e8 _ZN8WiFiUart4initEv
0800becc g     F .text	00000290 __multiply
08015a9c g     F .text	00000068 altera_avalon_jtag_uart_close
08002f58 g     F .text	00000028 .hidden __mulsi3
08017cdc g       *ABS*	00000000 __ram_rwdata_start
08003270 g     F .text	000000d0 .hidden _Unwind_SjLj_RaiseException
080174a4 g       *ABS*	00000000 __ram_rodata_start
0801bf4c g     O .bss	00000028 __malloc_current_mallinfo
08003384 g     F .text	00000044 .hidden _Unwind_SjLj_Resume
0800c758 g     F .text	0000013c __d2b
08017908  w    O .rodata	00000014 _ZTVN10__cxxabiv119__foreign_exceptionE
08002cc0 g     F .text	00000004 _ZNSt9type_infoD2Ev
08002f14 g     F .text	00000004 _ZN10__cxxabiv119__foreign_exceptionD0Ev
08002900 g     F .text	00000084 _ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE
080155d0 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
08016fe4 g     F .text	000000d4 alt_get_fd
08000ad0 g     F .text	000000a4 _ZN8WiFiUart7write_sEh
08019910  w    O .rwdata	00000008 _ZTIN10__cxxabiv119__foreign_exceptionE
0800fb50 g     F .text	00000054 _close_r
08017168 g     F .text	0000007c memcmp
08015690 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
0801c074 g       *ABS*	00000000 __alt_stack_base
080156e0 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
080026c0 g     F .text	00000010 _ZN10__cxxabiv120__si_class_type_infoD1Ev
0800880c g     F .text	00000130 __swsetup_r
080033c8 g     F .text	0000004c .hidden _Unwind_SjLj_Resume_or_Rethrow
08011a64 g     F .text	00000980 .hidden __divdf3
0800a8ac g     F .text	00000118 __sfp
0800c9ac g     F .text	00000078 __copybits
08002cc4 g     F .text	00000008 _ZNKSt9type_info14__is_pointer_pEv
08018100 g     O .rwdata	00000408 __malloc_av_
0800a9f8 g     F .text	00000004 __sinit_lock_release
08012628 g     F .text	0000086c .hidden __muldf3
0800d0c4 g     F .text	00000054 __sread
080178cc  w    O .rodata	00000014 _ZTVSt9exception
08002f0c g     F .text	00000004 _ZN10__cxxabiv115__forced_unwindD0Ev
0801606c g     F .text	0000005c alt_up_rs232_disable_read_interrupt
08016ed0 g     F .text	00000114 alt_find_file
0801654c g     F .text	000000a4 alt_dev_llist_insert
080142ac g     F .text	00000020 __malloc_lock
0801472c g     F .text	000000b0 sbrk
0800467c g     F .text	00002070 ___svfprintf_internal_r
08017778  w    O .rodata	0000002c _ZTVN10__cxxabiv117__class_type_infoE
08002bac g     F .text	00000090 __cxa_throw
0800a420 g     F .text	00000228 _fflush_r
08003234 g     F .text	00000010 .hidden _Unwind_SetIP
0800fba4 g     F .text	000000d8 _calloc_r
0801b5fc g       *ABS*	00000000 __bss_start
080003e8 g     F .text	000000b8 _ZN6BTUart7write_sEh
08003cc0 g     F .text	00000124 memset
08000e4c g     F .text	00000238 main
0801503c g     F .text	00000048 alt_avalon_dma_rx_ioctl
0801b638 g     O .bss	00000004 alt_envp
0801b614 g     O .bss	00000004 __malloc_max_total_mem
08015630 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
08010224 g     F .text	0000001c __swbuf
08002294 g     F .text	0000000c __cxa_get_globals_fast
0800d1f8 g     F .text	00000008 __sclose
0c000000 g       *ABS*	00000000 __alt_heap_limit
080198ec g     O .rwdata	00000004 tagid
0800fd7c g     F .text	00000014 fclose
08000384 g     F .text	00000064 _ZN6BTUart6read_sEv
08008cf8 g     F .text	00001728 _dtoa_r
08003518 g     F .text	000007a8 _malloc_r
080103b4 g     F .text	00000030 __ascii_wctomb
080002e4 g     F .text	00000038 _ZN6BTUartD0Ev
08002ef4 g     F .text	0000000c _ZNKSt13bad_exception4whatEv
08019950 g     O .rwdata	00000004 alt_errno
080041ec g     F .text	00000010 _init_signal
0801776c  w    O .rodata	0000000c _ZTIN10__cxxabiv117__class_type_infoE
0800b2e4 g     F .text	000000b8 _fwalk
0800051c g     F .text	00000074 _ZN6BTUart7write_mEPci
08002ee4 g     F .text	00000004 _ZNSt13bad_exceptionD1Ev
08017284 g     F .text	000000c8 putc
08011108 g     F .text	00000054 .hidden __divsi3
0800aa2c g     F .text	00000124 _malloc_trim_r
080174a4 g       *ABS*	00000000 __CTOR_END__
080044b0 g     F .text	000000a4 strcmp
080174a4 g       *ABS*	00000000 __flash_rodata_start
080178f4  w    O .rodata	00000014 _ZTVN10__cxxabiv115__forced_unwindE
080174a4 g       *ABS*	00000000 __DTOR_LIST__
08016360 g     F .text	00000040 alt_up_rs232_open_dev
080123e4 g     F .text	00000084 .hidden __nedf2
08014964 g     F .text	00000034 alt_irq_init
080146ac g     F .text	00000080 alt_release_fd
080026d0 g     F .text	00000034 _ZN10__cxxabiv120__si_class_type_infoD0Ev
08017b64 g     O .rodata	00000100 .hidden __clz_tab
0801b624 g     O .bss	00000004 _PathLocale
08017154 g     F .text	00000014 atexit
080198f0 g     O .rwdata	00000004 result
0800faf4 g     F .text	0000005c _write_r
0800b50c g     F .text	0000001c setlocale
08003268 g     F .text	00000008 .hidden _Unwind_GetTextRelBase
08002b10 g     F .text	00000058 __cxa_call_terminate
08019920 g     O .rwdata	00000004 _impure_ptr
08019908  w    O .rwdata	00000008 _ZTIN10__cxxabiv115__forced_unwindE
0801b630 g     O .bss	00000004 alt_argc
080166f0 g     F .text	0000005c _do_dtors
0800b4f8 g     F .text	00000008 __locale_cjk_lang
08000d4c g     F .text	00000028 _Z8dma_donePv
080198bc  w    O .rwdata	00000008 _ZTI6BTUart
08000bd4 g     F .text	00000048 _ZN8WiFiUart10read_readyEv
080026b0 g     F .text	00000010 _ZSt14get_unexpectedv
08000020 g       .exceptions	00000000 alt_irq_entry
0800c5dc g     F .text	00000060 __ulp
08003258 g     F .text	00000008 .hidden _Unwind_FindEnclosingFunction
0800aa14 g     F .text	00000018 __fp_unlock_all
08019934 g     O .rwdata	00000008 alt_fs_list
080178a8  w    O .rodata	00000024 _ZTSN10__cxxabiv119__foreign_exceptionE
08016014 g     F .text	00000058 alt_up_rs232_enable_read_interrupt
08003244 g     F .text	0000000c .hidden _Unwind_GetLanguageSpecificData
08016188 g     F .text	00000040 alt_up_rs232_write_data
0800298c g     F .text	000000b4 __cxa_begin_catch
0800233c g     F .text	00000010 _ZN10__cxxabiv117__class_type_infoD2Ev
08002650 g     F .text	00000010 _ZN10__cxxabiv112__unexpectedEPFvvE
08000020 g       *ABS*	00000000 __ram_exceptions_start
0800b528 g     F .text	0000000c localeconv
08002f04 g     F .text	00000004 _ZNSt13bad_exceptionD0Ev
080198f4 g     O .rwdata	00000004 _ZN10__cxxabiv119__terminate_handlerE
08002d24 g     F .text	000000a4 __cxa_allocate_exception
080177cc  w    O .rodata	0000000c _ZTIN10__cxxabiv120__si_class_type_infoE
0801996c g       *ABS*	00000000 _edata
0801c074 g       *ABS*	00000000 _end
08001b60 g     F .text	00000500 __gxx_personality_sj0
08000230 g       *ABS*	00000000 __ram_exceptions_end
08015b04 g     F .text	000000ec altera_avalon_jtag_uart_ioctl
08002ee0 g     F .text	00000004 _ZNSt9exceptionD1Ev
0800d120 g     F .text	0000007c __swrite
08019928 g     O .rwdata	00000004 __malloc_trim_threshold
080198e8 g     O .rwdata	00000004 res
0800b4ec g     F .text	0000000c __locale_msgcharset
080034b8 g     F .text	00000038 exit
080031e8 g     F .text	0000001c .hidden _Unwind_SetGR
0800b39c g     F .text	000000b8 _fwalk_reent
08002864 g     F .text	0000009c _ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_
0800c444 g     F .text	00000198 __mdiff
08002578 g     F .text	000000c0 _ZN10__cxxabiv111__terminateEPFvvE
0801115c g     F .text	0000005c .hidden __modsi3
0c000000 g       *ABS*	00000000 __alt_data_end
08000020 g     F .exceptions	00000000 alt_exception
0800a9f0 g     F .text	00000004 __sfp_lock_release
0801787c  w    O .rodata	0000000c _ZTISt13bad_exception
0801b5fc g     O .bss	00000004 dma_complete
08013bbc g     F .text	00000034 _exit
080163a0 g     F .text	00000140 alt_alarm_start
080031b4 g     F .text	0000001c .hidden _Unwind_GetGR
080022a0 g     F .text	0000000c __cxa_get_globals
0800b534 g     F .text	000001b8 __smakebuf_r
08019918 g     O .rwdata	00000004 _ZN10__cxxabiv120__unexpected_handlerE
080045e4 g     F .text	00000098 strlen
08003f6c g     F .text	00000068 _init_signal_r
080198f8  w    O .rwdata	00000008 _ZTISt9type_info
08016bb4 g     F .text	00000160 open
08012468 g     F .text	000000e0 .hidden __gedf2
08014514 g     F .text	00000044 alt_putchar
0800031c g     F .text	00000068 _ZN6BTUart4openEPKc
08017858  w    O .rodata	0000000d _ZTSSt9exception
08019930 g     O .rwdata	00000004 __wctomb
08002f00 g     F .text	00000004 _ZNSt9exceptionD0Ev
0800e694 g     F .text	00000018 __sprint_r
0801674c g     F .text	0000001c alt_icache_flush_all
08003260 g     F .text	00000008 .hidden _Unwind_GetDataRelBase
08019960 g     O .rwdata	00000004 alt_priority_mask
080087e8 g     F .text	00000024 __vfprintf_internal
080103e4 g     F .text	0000005c _wctomb_r
080004a0 g     F .text	0000007c _ZN6BTUart6read_mEPii
08015084 g     F .text	00000138 alt_avalon_dma_prepare
08012e94 g     F .text	000008d0 .hidden __subdf3
08019958 g     O .rwdata	00000008 alt_dma_rxchan_list
0800bde0 g     F .text	000000b0 __lo0bits
080006d4 g     F .text	00000068 _ZN8WiFiUart4openEPKc
08019964 g     O .rwdata	00000008 alt_alarm_list
08016694 g     F .text	0000005c _do_ctors
080041fc g     F .text	00000014 __sigtramp
08000590 g     F .text	00000048 _ZN6BTUart10read_readyEv
080160c8 g     F .text	00000040 alt_up_rs232_get_used_space_in_read_FIFO
080102dc g     F .text	000000d8 wcrtomb
08013a14 g     F .text	000000d8 close
08017888  w    O .rodata	00000020 _ZTSN10__cxxabiv115__forced_unwindE
08014088 g     F .text	00000080 alt_load
08014ff4 g     F .text	00000048 alt_avalon_dma_tx_ioctl
08002ce0 g     F .text	00000044 _ZNKSt9type_info10__do_catchEPKS_PPvj
0800ff14 g     F .text	00000058 fputwc
080041bc g     F .text	00000014 raise
08003504 g     F .text	00000014 free
0800a9f4 g     F .text	00000004 __sinit_lock_acquire
0800bb38 g     F .text	0000013c __multadd
0800234c g     F .text	00000034 _ZN10__cxxabiv117__class_type_infoD0Ev
0800bb10 g     F .text	00000028 _Bfree



Disassembly of section .entry:

08000000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
 8000000:	00420034 	movhi	at,2048
    ori r1, r1, %lo(_start)
 8000004:	08408c14 	ori	at,at,560
    jmp r1
 8000008:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

08000020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
 8000020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
 8000024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
 8000028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
 800002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
 8000030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
 8000034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
 8000038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
 800003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
 8000040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
 8000044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
 8000048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
 800004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
 8000050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
 8000054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
 8000058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
 800005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
 8000060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
 8000064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
 8000068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
 800006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
 8000070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
 8000074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
 8000078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
 800007c:	10000326 	beq	r2,zero,800008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
 8000080:	20000226 	beq	r4,zero,800008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
 8000084:	80000fc0 	call	80000fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
 8000088:	00000706 	br	80000a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw   ea,  72(sp)  /* Don't re-issue */
 800008c:	df401215 	stw	ea,72(sp)
        ldhu.n  r2, 0(r4)
        ldhu.n  r3, 2(r4)
        slli.n  r3, r3, 16
        or.n    r2, r2, r3 /* Instruction that caused exception */
#else
        ldw   r2, -4(ea)   /* Instruction that caused exception */
 8000090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
 8000094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
 8000098:	80001d00 	call	80001d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
 800009c:	1000021e 	bne	r2,zero,80000a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
 80000a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
 80000a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
 80000a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
 80000ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
 80000b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
 80000b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
 80000b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
 80000bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
 80000c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
 80000c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
 80000c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
 80000cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
 80000d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
 80000d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
 80000d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
 80000dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
 80000e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
 80000e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
 80000e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
 80000ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
 80000f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
 80000f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
 80000f8:	ef80083a 	eret

080000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
 80000fc:	defff904 	addi	sp,sp,-28
 8000100:	dfc00615 	stw	ra,24(sp)
 8000104:	df000515 	stw	fp,20(sp)
 8000108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
 800010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 8000110:	0005313a 	rdctl	r2,ipending
 8000114:	e0bffe15 	stw	r2,-8(fp)

  return active;
 8000118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 800011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
 8000120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 8000124:	00800044 	movi	r2,1
 8000128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 800012c:	e0fffb17 	ldw	r3,-20(fp)
 8000130:	e0bffc17 	ldw	r2,-16(fp)
 8000134:	1884703a 	and	r2,r3,r2
 8000138:	10001526 	beq	r2,zero,8000190 <alt_irq_handler+0x94>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
 800013c:	008200b4 	movhi	r2,2050
 8000140:	10afdd04 	addi	r2,r2,-16524
 8000144:	e0fffd17 	ldw	r3,-12(fp)
 8000148:	180690fa 	slli	r3,r3,3
 800014c:	10c5883a 	add	r2,r2,r3
 8000150:	10c00017 	ldw	r3,0(r2)
 8000154:	008200b4 	movhi	r2,2050
 8000158:	10afdd04 	addi	r2,r2,-16524
 800015c:	e13ffd17 	ldw	r4,-12(fp)
 8000160:	200890fa 	slli	r4,r4,3
 8000164:	1105883a 	add	r2,r2,r4
 8000168:	10800104 	addi	r2,r2,4
 800016c:	10800017 	ldw	r2,0(r2)
 8000170:	1009883a 	mov	r4,r2
 8000174:	e17ffd17 	ldw	r5,-12(fp)
 8000178:	183ee83a 	callr	r3
#endif
        break;
 800017c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 8000180:	0005313a 	rdctl	r2,ipending
 8000184:	e0bfff15 	stw	r2,-4(fp)

  return active;
 8000188:	e0bfff17 	ldw	r2,-4(fp)
 800018c:	00000706 	br	80001ac <alt_irq_handler+0xb0>
      }
      mask <<= 1;
 8000190:	e0bffc17 	ldw	r2,-16(fp)
 8000194:	1085883a 	add	r2,r2,r2
 8000198:	e0bffc15 	stw	r2,-16(fp)
      i++;
 800019c:	e0bffd17 	ldw	r2,-12(fp)
 80001a0:	10800044 	addi	r2,r2,1
 80001a4:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
 80001a8:	003fe006 	br	800012c <__alt_data_end+0xfc00012c>

    active = alt_irq_pending ();
 80001ac:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
 80001b0:	e0bffb17 	ldw	r2,-20(fp)
 80001b4:	103fda1e 	bne	r2,zero,8000120 <__alt_data_end+0xfc000120>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
 80001b8:	0001883a 	nop
}
 80001bc:	e037883a 	mov	sp,fp
 80001c0:	dfc00117 	ldw	ra,4(sp)
 80001c4:	df000017 	ldw	fp,0(sp)
 80001c8:	dec00204 	addi	sp,sp,8
 80001cc:	f800283a 	ret

080001d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
 80001d0:	defffb04 	addi	sp,sp,-20
 80001d4:	dfc00415 	stw	ra,16(sp)
 80001d8:	df000315 	stw	fp,12(sp)
 80001dc:	df000304 	addi	fp,sp,12
 80001e0:	e13fff15 	stw	r4,-4(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
 80001e4:	00bfffc4 	movi	r2,-1
 80001e8:	e0bffd15 	stw	r2,-12(fp)
  badaddr = 0;
 80001ec:	e03ffe15 	stw	zero,-8(fp)
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
 80001f0:	d0a76317 	ldw	r2,-25204(gp)
 80001f4:	10000726 	beq	r2,zero,8000214 <alt_instruction_exception_entry+0x44>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
 80001f8:	d0a76317 	ldw	r2,-25204(gp)
 80001fc:	e0fffd17 	ldw	r3,-12(fp)
 8000200:	1809883a 	mov	r4,r3
 8000204:	e17fff17 	ldw	r5,-4(fp)
 8000208:	e1bffe17 	ldw	r6,-8(fp)
 800020c:	103ee83a 	callr	r2
 8000210:	00000206 	br	800021c <alt_instruction_exception_entry+0x4c>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
 8000214:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
 8000218:	0005883a 	mov	r2,zero
}
 800021c:	e037883a 	mov	sp,fp
 8000220:	dfc00117 	ldw	ra,4(sp)
 8000224:	df000017 	ldw	fp,0(sp)
 8000228:	dec00204 	addi	sp,sp,8
 800022c:	f800283a 	ret

Disassembly of section .text:

08000230 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
 8000230:	06c30034 	movhi	sp,3072
    ori sp, sp, %lo(__alt_stack_pointer)
 8000234:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
 8000238:	068200b4 	movhi	gp,2050
    ori gp, gp, %lo(_gp)
 800023c:	d6862f14 	ori	gp,gp,6332
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
 8000240:	00820074 	movhi	r2,2049
    ori r2, r2, %lo(__bss_start)
 8000244:	10ad7f14 	ori	r2,r2,46588

    movhi r3, %hi(__bss_end)
 8000248:	00c20074 	movhi	r3,2049
    ori r3, r3, %lo(__bss_end)
 800024c:	18f01d14 	ori	r3,r3,49268

    beq r2, r3, 1f
 8000250:	10c00326 	beq	r2,r3,8000260 <_start+0x30>

0:
    stw zero, (r2)
 8000254:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
 8000258:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
 800025c:	10fffd36 	bltu	r2,r3,8000254 <__alt_data_end+0xfc000254>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
 8000260:	80140880 	call	8014088 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
 8000264:	80142340 	call	8014234 <alt_main>

08000268 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
 8000268:	003fff06 	br	8000268 <__alt_data_end+0xfc000268>

0800026c <_ZN6BTUartC1Ev>:
#include "BTUart.h"
#include "sys/alt_dev.h"
#include "altera_up_avalon_rs232.h"


BTUart::BTUart()
 800026c:	defffe04 	addi	sp,sp,-8
 8000270:	df000115 	stw	fp,4(sp)
 8000274:	df000104 	addi	fp,sp,4
 8000278:	e13fff15 	stw	r4,-4(fp)
 800027c:	e0ffff17 	ldw	r3,-4(fp)
 8000280:	00820074 	movhi	r2,2049
 8000284:	109d3104 	addi	r2,r2,29892
 8000288:	18800015 	stw	r2,0(r3)
{
    // TODO Auto-generated constructor stub
}
 800028c:	e037883a 	mov	sp,fp
 8000290:	df000017 	ldw	fp,0(sp)
 8000294:	dec00104 	addi	sp,sp,4
 8000298:	f800283a 	ret

0800029c <_ZN6BTUartD1Ev>:


BTUart::~BTUart()
 800029c:	defffd04 	addi	sp,sp,-12
 80002a0:	dfc00215 	stw	ra,8(sp)
 80002a4:	df000115 	stw	fp,4(sp)
 80002a8:	df000104 	addi	fp,sp,4
 80002ac:	e13fff15 	stw	r4,-4(fp)
 80002b0:	e0ffff17 	ldw	r3,-4(fp)
 80002b4:	00820074 	movhi	r2,2049
 80002b8:	109d3104 	addi	r2,r2,29892
 80002bc:	18800015 	stw	r2,0(r3)
{
	// TODO Auto-generated destructor stub
}
 80002c0:	0005883a 	mov	r2,zero
 80002c4:	10000226 	beq	r2,zero,80002d0 <_ZN6BTUartD1Ev+0x34>
 80002c8:	e13fff17 	ldw	r4,-4(fp)
 80002cc:	80025740 	call	8002574 <_ZdlPv>
 80002d0:	e037883a 	mov	sp,fp
 80002d4:	dfc00117 	ldw	ra,4(sp)
 80002d8:	df000017 	ldw	fp,0(sp)
 80002dc:	dec00204 	addi	sp,sp,8
 80002e0:	f800283a 	ret

080002e4 <_ZN6BTUartD0Ev>:
{
    // TODO Auto-generated constructor stub
}


BTUart::~BTUart()
 80002e4:	defffd04 	addi	sp,sp,-12
 80002e8:	dfc00215 	stw	ra,8(sp)
 80002ec:	df000115 	stw	fp,4(sp)
 80002f0:	df000104 	addi	fp,sp,4
 80002f4:	e13fff15 	stw	r4,-4(fp)
{
	// TODO Auto-generated destructor stub
}
 80002f8:	e13fff17 	ldw	r4,-4(fp)
 80002fc:	800029c0 	call	800029c <_ZN6BTUartD1Ev>
 8000300:	e13fff17 	ldw	r4,-4(fp)
 8000304:	80025740 	call	8002574 <_ZdlPv>
 8000308:	e037883a 	mov	sp,fp
 800030c:	dfc00117 	ldw	ra,4(sp)
 8000310:	df000017 	ldw	fp,0(sp)
 8000314:	dec00204 	addi	sp,sp,8
 8000318:	f800283a 	ret

0800031c <_ZN6BTUart4openEPKc>:


int BTUart::open(const char *device_name)
{
 800031c:	defffc04 	addi	sp,sp,-16
 8000320:	dfc00315 	stw	ra,12(sp)
 8000324:	df000215 	stw	fp,8(sp)
 8000328:	df000204 	addi	fp,sp,8
 800032c:	e13ffe15 	stw	r4,-8(fp)
 8000330:	e17fff15 	stw	r5,-4(fp)
	RS232_DEV = alt_up_rs232_open_dev(device_name);
 8000334:	e13fff17 	ldw	r4,-4(fp)
 8000338:	80163600 	call	8016360 <alt_up_rs232_open_dev>
 800033c:	1007883a 	mov	r3,r2
 8000340:	e0bffe17 	ldw	r2,-8(fp)
 8000344:	10c00115 	stw	r3,4(r2)

    // Enable the read interrupts for the RS232 UART core 
    alt_up_rs232_enable_read_interrupt(RS232_DEV);
 8000348:	e0bffe17 	ldw	r2,-8(fp)
 800034c:	10800117 	ldw	r2,4(r2)
 8000350:	1009883a 	mov	r4,r2
 8000354:	80160140 	call	8016014 <alt_up_rs232_enable_read_interrupt>

    if (RS232_DEV == NULL) {
 8000358:	e0bffe17 	ldw	r2,-8(fp)
 800035c:	10800117 	ldw	r2,4(r2)
 8000360:	1000021e 	bne	r2,zero,800036c <_ZN6BTUart4openEPKc+0x50>
        return 0;
 8000364:	0005883a 	mov	r2,zero
 8000368:	00000106 	br	8000370 <_ZN6BTUart4openEPKc+0x54>
    }
        
    return 1;
 800036c:	00800044 	movi	r2,1
}
 8000370:	e037883a 	mov	sp,fp
 8000374:	dfc00117 	ldw	ra,4(sp)
 8000378:	df000017 	ldw	fp,0(sp)
 800037c:	dec00204 	addi	sp,sp,8
 8000380:	f800283a 	ret

08000384 <_ZN6BTUart6read_sEv>:


int BTUart::read_s(void)
{
 8000384:	defffc04 	addi	sp,sp,-16
 8000388:	dfc00315 	stw	ra,12(sp)
 800038c:	df000215 	stw	fp,8(sp)
 8000390:	df000204 	addi	fp,sp,8
 8000394:	e13fff15 	stw	r4,-4(fp)
    while (!read_ready()) {}    // Wait for data to be available to read
 8000398:	0001883a 	nop
 800039c:	e13fff17 	ldw	r4,-4(fp)
 80003a0:	80005900 	call	8000590 <_ZN6BTUart10read_readyEv>
 80003a4:	1005003a 	cmpeq	r2,r2,zero
 80003a8:	10803fcc 	andi	r2,r2,255
 80003ac:	103ffb1e 	bne	r2,zero,800039c <__alt_data_end+0xfc00039c>

    alt_u8 buffer;
    alt_u8 parity_error;

    alt_up_rs232_read_data(RS232_DEV, &buffer, &parity_error);
 80003b0:	e0bfff17 	ldw	r2,-4(fp)
 80003b4:	10c00117 	ldw	r3,4(r2)
 80003b8:	e0bffe44 	addi	r2,fp,-7
 80003bc:	1809883a 	mov	r4,r3
 80003c0:	e17ffe04 	addi	r5,fp,-8
 80003c4:	100d883a 	mov	r6,r2
 80003c8:	80161c80 	call	80161c8 <alt_up_rs232_read_data>

    return (int) buffer;
 80003cc:	e0bffe03 	ldbu	r2,-8(fp)
 80003d0:	10803fcc 	andi	r2,r2,255
}
 80003d4:	e037883a 	mov	sp,fp
 80003d8:	dfc00117 	ldw	ra,4(sp)
 80003dc:	df000017 	ldw	fp,0(sp)
 80003e0:	dec00204 	addi	sp,sp,8
 80003e4:	f800283a 	ret

080003e8 <_ZN6BTUart7write_sEh>:


int BTUart::write_s(alt_u8 data)
{
 80003e8:	defffb04 	addi	sp,sp,-20
 80003ec:	dfc00415 	stw	ra,16(sp)
 80003f0:	df000315 	stw	fp,12(sp)
 80003f4:	df000304 	addi	fp,sp,12
 80003f8:	e13ffe15 	stw	r4,-8(fp)
 80003fc:	2805883a 	mov	r2,r5
 8000400:	e0bfff05 	stb	r2,-4(fp)
    alt_up_rs232_disable_read_interrupt(RS232_DEV);
 8000404:	e0bffe17 	ldw	r2,-8(fp)
 8000408:	10800117 	ldw	r2,4(r2)
 800040c:	1009883a 	mov	r4,r2
 8000410:	801606c0 	call	801606c <alt_up_rs232_disable_read_interrupt>

    int result = 0;
 8000414:	e03ffd15 	stw	zero,-12(fp)
    WRITE_FIFO_SPACE = alt_up_rs232_get_available_space_in_write_FIFO(RS232_DEV);
 8000418:	e0bffe17 	ldw	r2,-8(fp)
 800041c:	10800117 	ldw	r2,4(r2)
 8000420:	1009883a 	mov	r4,r2
 8000424:	80161080 	call	8016108 <alt_up_rs232_get_available_space_in_write_FIFO>
 8000428:	1007883a 	mov	r3,r2
 800042c:	e0bffe17 	ldw	r2,-8(fp)
 8000430:	10c00215 	stw	r3,8(r2)

    if (WRITE_FIFO_SPACE >= WRITE_FIFO_EMPTY) {
 8000434:	e0bffe17 	ldw	r2,-8(fp)
 8000438:	10800217 	ldw	r2,8(r2)
 800043c:	10802030 	cmpltui	r2,r2,128
 8000440:	10000d1e 	bne	r2,zero,8000478 <_ZN6BTUart7write_sEh+0x90>
        alt_up_rs232_write_data(RS232_DEV, data);
 8000444:	e0bffe17 	ldw	r2,-8(fp)
 8000448:	10c00117 	ldw	r3,4(r2)
 800044c:	e0bfff03 	ldbu	r2,-4(fp)
 8000450:	1809883a 	mov	r4,r3
 8000454:	100b883a 	mov	r5,r2
 8000458:	80161880 	call	8016188 <alt_up_rs232_write_data>
        alt_printf("write %c to RS232 UART\n", data);
 800045c:	e0bfff03 	ldbu	r2,-4(fp)
 8000460:	01020074 	movhi	r4,2049
 8000464:	211d2904 	addi	r4,r4,29860
 8000468:	100b883a 	mov	r5,r2
 800046c:	80142ec0 	call	80142ec <alt_printf>
        result = 1;
 8000470:	00800044 	movi	r2,1
 8000474:	e0bffd15 	stw	r2,-12(fp)
    }

    // Enable the read interrupts for the RS232 UART core 
    alt_up_rs232_enable_read_interrupt(RS232_DEV);
 8000478:	e0bffe17 	ldw	r2,-8(fp)
 800047c:	10800117 	ldw	r2,4(r2)
 8000480:	1009883a 	mov	r4,r2
 8000484:	80160140 	call	8016014 <alt_up_rs232_enable_read_interrupt>
    return result;
 8000488:	e0bffd17 	ldw	r2,-12(fp)
}
 800048c:	e037883a 	mov	sp,fp
 8000490:	dfc00117 	ldw	ra,4(sp)
 8000494:	df000017 	ldw	fp,0(sp)
 8000498:	dec00204 	addi	sp,sp,8
 800049c:	f800283a 	ret

080004a0 <_ZN6BTUart6read_mEPii>:


void BTUart::read_m(int *buffer, int length)
{
 80004a0:	defff904 	addi	sp,sp,-28
 80004a4:	dfc00615 	stw	ra,24(sp)
 80004a8:	df000515 	stw	fp,20(sp)
 80004ac:	dc000415 	stw	r16,16(sp)
 80004b0:	df000504 	addi	fp,sp,20
 80004b4:	e13ffc15 	stw	r4,-16(fp)
 80004b8:	e17ffd15 	stw	r5,-12(fp)
 80004bc:	e1bffe15 	stw	r6,-8(fp)
    int count;

    for (count = 0; count < length; count++) {
 80004c0:	e03ffb15 	stw	zero,-20(fp)
 80004c4:	00000c06 	br	80004f8 <_ZN6BTUart6read_mEPii+0x58>
		buffer[count] = read_s();
 80004c8:	e0bffb17 	ldw	r2,-20(fp)
 80004cc:	1085883a 	add	r2,r2,r2
 80004d0:	1085883a 	add	r2,r2,r2
 80004d4:	1007883a 	mov	r3,r2
 80004d8:	e0bffd17 	ldw	r2,-12(fp)
 80004dc:	10e1883a 	add	r16,r2,r3
 80004e0:	e13ffc17 	ldw	r4,-16(fp)
 80004e4:	80003840 	call	8000384 <_ZN6BTUart6read_sEv>
 80004e8:	80800015 	stw	r2,0(r16)

void BTUart::read_m(int *buffer, int length)
{
    int count;

    for (count = 0; count < length; count++) {
 80004ec:	e0bffb17 	ldw	r2,-20(fp)
 80004f0:	10800044 	addi	r2,r2,1
 80004f4:	e0bffb15 	stw	r2,-20(fp)
 80004f8:	e0fffb17 	ldw	r3,-20(fp)
 80004fc:	e0bffe17 	ldw	r2,-8(fp)
 8000500:	18bff116 	blt	r3,r2,80004c8 <__alt_data_end+0xfc0004c8>
		buffer[count] = read_s();
	}
}
 8000504:	e6ffff04 	addi	sp,fp,-4
 8000508:	dfc00217 	ldw	ra,8(sp)
 800050c:	df000117 	ldw	fp,4(sp)
 8000510:	dc000017 	ldw	r16,0(sp)
 8000514:	dec00304 	addi	sp,sp,12
 8000518:	f800283a 	ret

0800051c <_ZN6BTUart7write_mEPci>:


int BTUart::write_m(char data[], int length)
{
 800051c:	defffa04 	addi	sp,sp,-24
 8000520:	dfc00515 	stw	ra,20(sp)
 8000524:	df000415 	stw	fp,16(sp)
 8000528:	df000404 	addi	fp,sp,16
 800052c:	e13ffd15 	stw	r4,-12(fp)
 8000530:	e17ffe15 	stw	r5,-8(fp)
 8000534:	e1bfff15 	stw	r6,-4(fp)
    int count;

	for (count = 0; count < length; count++) {
 8000538:	e03ffc15 	stw	zero,-16(fp)
 800053c:	00000b06 	br	800056c <_ZN6BTUart7write_mEPci+0x50>
        // printf("Write from m: %c\n", data[count]);
		write_s(data[count]);
 8000540:	e0bffc17 	ldw	r2,-16(fp)
 8000544:	e0fffe17 	ldw	r3,-8(fp)
 8000548:	1885883a 	add	r2,r3,r2
 800054c:	10800003 	ldbu	r2,0(r2)
 8000550:	10803fcc 	andi	r2,r2,255
 8000554:	e13ffd17 	ldw	r4,-12(fp)
 8000558:	100b883a 	mov	r5,r2
 800055c:	80003e80 	call	80003e8 <_ZN6BTUart7write_sEh>

int BTUart::write_m(char data[], int length)
{
    int count;

	for (count = 0; count < length; count++) {
 8000560:	e0bffc17 	ldw	r2,-16(fp)
 8000564:	10800044 	addi	r2,r2,1
 8000568:	e0bffc15 	stw	r2,-16(fp)
 800056c:	e0fffc17 	ldw	r3,-16(fp)
 8000570:	e0bfff17 	ldw	r2,-4(fp)
 8000574:	18bff216 	blt	r3,r2,8000540 <__alt_data_end+0xfc000540>
        // printf("Write from m: %c\n", data[count]);
		write_s(data[count]);
	}
    return count;
 8000578:	e0bffc17 	ldw	r2,-16(fp)
}
 800057c:	e037883a 	mov	sp,fp
 8000580:	dfc00117 	ldw	ra,4(sp)
 8000584:	df000017 	ldw	fp,0(sp)
 8000588:	dec00204 	addi	sp,sp,8
 800058c:	f800283a 	ret

08000590 <_ZN6BTUart10read_readyEv>:


int BTUart::read_ready(void)
{
 8000590:	defffc04 	addi	sp,sp,-16
 8000594:	dfc00315 	stw	ra,12(sp)
 8000598:	df000215 	stw	fp,8(sp)
 800059c:	df000204 	addi	fp,sp,8
 80005a0:	e13fff15 	stw	r4,-4(fp)
    alt_u16 read_fifo_used = alt_up_rs232_get_used_space_in_read_FIFO(RS232_DEV);
 80005a4:	e0bfff17 	ldw	r2,-4(fp)
 80005a8:	10800117 	ldw	r2,4(r2)
 80005ac:	1009883a 	mov	r4,r2
 80005b0:	80160c80 	call	80160c8 <alt_up_rs232_get_used_space_in_read_FIFO>
 80005b4:	e0bffe0d 	sth	r2,-8(fp)
    return (read_fifo_used > READ_FIFO_EMPTY);
 80005b8:	e0bffe0b 	ldhu	r2,-8(fp)
 80005bc:	1004c03a 	cmpne	r2,r2,zero
 80005c0:	10803fcc 	andi	r2,r2,255
}
 80005c4:	e037883a 	mov	sp,fp
 80005c8:	dfc00117 	ldw	ra,4(sp)
 80005cc:	df000017 	ldw	fp,0(sp)
 80005d0:	dec00204 	addi	sp,sp,8
 80005d4:	f800283a 	ret

080005d8 <_ZN6BTUart5flushEv>:


void BTUart::flush(void)
{
 80005d8:	defffd04 	addi	sp,sp,-12
 80005dc:	dfc00215 	stw	ra,8(sp)
 80005e0:	df000115 	stw	fp,4(sp)
 80005e4:	df000104 	addi	fp,sp,4
 80005e8:	e13fff15 	stw	r4,-4(fp)
    while (read_ready()) {
 80005ec:	00000206 	br	80005f8 <_ZN6BTUart5flushEv+0x20>
        // read unwanted char out of fifo receiver buffer
        read_s();
 80005f0:	e13fff17 	ldw	r4,-4(fp)
 80005f4:	80003840 	call	8000384 <_ZN6BTUart6read_sEv>
}


void BTUart::flush(void)
{
    while (read_ready()) {
 80005f8:	e13fff17 	ldw	r4,-4(fp)
 80005fc:	80005900 	call	8000590 <_ZN6BTUart10read_readyEv>
 8000600:	1004c03a 	cmpne	r2,r2,zero
 8000604:	10803fcc 	andi	r2,r2,255
 8000608:	103ff91e 	bne	r2,zero,80005f0 <__alt_data_end+0xfc0005f0>
        // read unwanted char out of fifo receiver buffer
        read_s();
    }
    return; // no more characters so return 
 800060c:	0001883a 	nop
 8000610:	e037883a 	mov	sp,fp
 8000614:	dfc00117 	ldw	ra,4(sp)
 8000618:	df000017 	ldw	fp,0(sp)
 800061c:	dec00204 	addi	sp,sp,8
 8000620:	f800283a 	ret

08000624 <_ZN8WiFiUartC1Ev>:
#include "sys/alt_dev.h"
#include "altera_up_avalon_rs232.h"

char *script = "dofile(\"patch_data.lua\")";

WiFiUart::WiFiUart()
 8000624:	defffe04 	addi	sp,sp,-8
 8000628:	df000115 	stw	fp,4(sp)
 800062c:	df000104 	addi	fp,sp,4
 8000630:	e13fff15 	stw	r4,-4(fp)
 8000634:	e0ffff17 	ldw	r3,-4(fp)
 8000638:	00820074 	movhi	r2,2049
 800063c:	109d5104 	addi	r2,r2,30020
 8000640:	18800015 	stw	r2,0(r3)
{
    // TODO Auto-generated constructor stub
}
 8000644:	e037883a 	mov	sp,fp
 8000648:	df000017 	ldw	fp,0(sp)
 800064c:	dec00104 	addi	sp,sp,4
 8000650:	f800283a 	ret

08000654 <_ZN8WiFiUartD1Ev>:


WiFiUart::~WiFiUart()
 8000654:	defffd04 	addi	sp,sp,-12
 8000658:	dfc00215 	stw	ra,8(sp)
 800065c:	df000115 	stw	fp,4(sp)
 8000660:	df000104 	addi	fp,sp,4
 8000664:	e13fff15 	stw	r4,-4(fp)
 8000668:	e0ffff17 	ldw	r3,-4(fp)
 800066c:	00820074 	movhi	r2,2049
 8000670:	109d5104 	addi	r2,r2,30020
 8000674:	18800015 	stw	r2,0(r3)
{
	// TODO Auto-generated destructor stub
}
 8000678:	0005883a 	mov	r2,zero
 800067c:	10000226 	beq	r2,zero,8000688 <_ZN8WiFiUartD1Ev+0x34>
 8000680:	e13fff17 	ldw	r4,-4(fp)
 8000684:	80025740 	call	8002574 <_ZdlPv>
 8000688:	e037883a 	mov	sp,fp
 800068c:	dfc00117 	ldw	ra,4(sp)
 8000690:	df000017 	ldw	fp,0(sp)
 8000694:	dec00204 	addi	sp,sp,8
 8000698:	f800283a 	ret

0800069c <_ZN8WiFiUartD0Ev>:
{
    // TODO Auto-generated constructor stub
}


WiFiUart::~WiFiUart()
 800069c:	defffd04 	addi	sp,sp,-12
 80006a0:	dfc00215 	stw	ra,8(sp)
 80006a4:	df000115 	stw	fp,4(sp)
 80006a8:	df000104 	addi	fp,sp,4
 80006ac:	e13fff15 	stw	r4,-4(fp)
{
	// TODO Auto-generated destructor stub
}
 80006b0:	e13fff17 	ldw	r4,-4(fp)
 80006b4:	80006540 	call	8000654 <_ZN8WiFiUartD1Ev>
 80006b8:	e13fff17 	ldw	r4,-4(fp)
 80006bc:	80025740 	call	8002574 <_ZdlPv>
 80006c0:	e037883a 	mov	sp,fp
 80006c4:	dfc00117 	ldw	ra,4(sp)
 80006c8:	df000017 	ldw	fp,0(sp)
 80006cc:	dec00204 	addi	sp,sp,8
 80006d0:	f800283a 	ret

080006d4 <_ZN8WiFiUart4openEPKc>:


int WiFiUart::open(const char *device_name)
{
 80006d4:	defffc04 	addi	sp,sp,-16
 80006d8:	dfc00315 	stw	ra,12(sp)
 80006dc:	df000215 	stw	fp,8(sp)
 80006e0:	df000204 	addi	fp,sp,8
 80006e4:	e13ffe15 	stw	r4,-8(fp)
 80006e8:	e17fff15 	stw	r5,-4(fp)
	RS232_DEV = alt_up_rs232_open_dev(device_name);
 80006ec:	e13fff17 	ldw	r4,-4(fp)
 80006f0:	80163600 	call	8016360 <alt_up_rs232_open_dev>
 80006f4:	1007883a 	mov	r3,r2
 80006f8:	e0bffe17 	ldw	r2,-8(fp)
 80006fc:	10c00115 	stw	r3,4(r2)

    // Enable the read interrupts for the RS232 UART core 
    alt_up_rs232_enable_read_interrupt(RS232_DEV);
 8000700:	e0bffe17 	ldw	r2,-8(fp)
 8000704:	10800117 	ldw	r2,4(r2)
 8000708:	1009883a 	mov	r4,r2
 800070c:	80160140 	call	8016014 <alt_up_rs232_enable_read_interrupt>

    if (RS232_DEV == NULL) {
 8000710:	e0bffe17 	ldw	r2,-8(fp)
 8000714:	10800117 	ldw	r2,4(r2)
 8000718:	1000021e 	bne	r2,zero,8000724 <_ZN8WiFiUart4openEPKc+0x50>
        return 0;
 800071c:	0005883a 	mov	r2,zero
 8000720:	00000106 	br	8000728 <_ZN8WiFiUart4openEPKc+0x54>
    }
        
    return 1;
 8000724:	00800044 	movi	r2,1
}
 8000728:	e037883a 	mov	sp,fp
 800072c:	dfc00117 	ldw	ra,4(sp)
 8000730:	df000017 	ldw	fp,0(sp)
 8000734:	dec00204 	addi	sp,sp,8
 8000738:	f800283a 	ret

0800073c <_ZN8WiFiUart4initEv>:


int WiFiUart::init()
{
 800073c:	defffa04 	addi	sp,sp,-24
 8000740:	dfc00515 	stw	ra,20(sp)
 8000744:	df000415 	stw	fp,16(sp)
 8000748:	dc000315 	stw	r16,12(sp)
 800074c:	df000404 	addi	fp,sp,16
 8000750:	e13ffe15 	stw	r4,-8(fp)
	if (RS232_DEV == NULL) {
 8000754:	e0bffe17 	ldw	r2,-8(fp)
 8000758:	10800117 	ldw	r2,4(r2)
 800075c:	1000051e 	bne	r2,zero,8000774 <_ZN8WiFiUart4initEv+0x38>
        printf("ERROR: Open RS232 port before conencting.\n");
 8000760:	01020074 	movhi	r4,2049
 8000764:	211d3a04 	addi	r4,r4,29928
 8000768:	8003f040 	call	8003f04 <puts>
        return 0;
 800076c:	0005883a 	mov	r2,zero
 8000770:	00002606 	br	800080c <_ZN8WiFiUart4initEv+0xd0>
    }

    flush();    // Clear FIFO
 8000774:	e13ffe17 	ldw	r4,-8(fp)
 8000778:	8000c1c0 	call	8000c1c <_ZN8WiFiUart5flushEv>

    int i;
    char *crlf = "\r\n";
 800077c:	00820074 	movhi	r2,2049
 8000780:	109d4504 	addi	r2,r2,29972
 8000784:	e0bffd15 	stw	r2,-12(fp)
    
    for (i = 0; i < 5; i++) {   // Send CRLF multiple times to let the wifi firmware match up the communication baud rate
 8000788:	e03ffc15 	stw	zero,-16(fp)
 800078c:	00000b06 	br	80007bc <_ZN8WiFiUart4initEv+0x80>
        write_m(crlf, strlen(crlf));
 8000790:	e13ffd17 	ldw	r4,-12(fp)
 8000794:	80045e40 	call	80045e4 <strlen>
 8000798:	e13ffe17 	ldw	r4,-8(fp)
 800079c:	e17ffd17 	ldw	r5,-12(fp)
 80007a0:	100d883a 	mov	r6,r2
 80007a4:	80009dc0 	call	80009dc <_ZN8WiFiUart7write_mEPci>
        flush();
 80007a8:	e13ffe17 	ldw	r4,-8(fp)
 80007ac:	8000c1c0 	call	8000c1c <_ZN8WiFiUart5flushEv>
    flush();    // Clear FIFO

    int i;
    char *crlf = "\r\n";
    
    for (i = 0; i < 5; i++) {   // Send CRLF multiple times to let the wifi firmware match up the communication baud rate
 80007b0:	e0bffc17 	ldw	r2,-16(fp)
 80007b4:	10800044 	addi	r2,r2,1
 80007b8:	e0bffc15 	stw	r2,-16(fp)
 80007bc:	e0bffc17 	ldw	r2,-16(fp)
 80007c0:	10800150 	cmplti	r2,r2,5
 80007c4:	103ff21e 	bne	r2,zero,8000790 <__alt_data_end+0xfc000790>
        write_m(crlf, strlen(crlf));
        flush();
    }

    write_m(script, strlen(script));
 80007c8:	d4200417 	ldw	r16,-32752(gp)
 80007cc:	d0a00417 	ldw	r2,-32752(gp)
 80007d0:	1009883a 	mov	r4,r2
 80007d4:	80045e40 	call	80045e4 <strlen>
 80007d8:	e13ffe17 	ldw	r4,-8(fp)
 80007dc:	800b883a 	mov	r5,r16
 80007e0:	100d883a 	mov	r6,r2
 80007e4:	80009dc0 	call	80009dc <_ZN8WiFiUart7write_mEPci>
    write_s('\r');
 80007e8:	e13ffe17 	ldw	r4,-8(fp)
 80007ec:	01400344 	movi	r5,13
 80007f0:	8000ad00 	call	8000ad0 <_ZN8WiFiUart7write_sEh>
    write_s('\n');
 80007f4:	e13ffe17 	ldw	r4,-8(fp)
 80007f8:	01400284 	movi	r5,10
 80007fc:	8000ad00 	call	8000ad0 <_ZN8WiFiUart7write_sEh>
    flush();
 8000800:	e13ffe17 	ldw	r4,-8(fp)
 8000804:	8000c1c0 	call	8000c1c <_ZN8WiFiUart5flushEv>

    return 1;
 8000808:	00800044 	movi	r2,1
}
 800080c:	e6ffff04 	addi	sp,fp,-4
 8000810:	dfc00217 	ldw	ra,8(sp)
 8000814:	df000117 	ldw	fp,4(sp)
 8000818:	dc000017 	ldw	r16,0(sp)
 800081c:	dec00304 	addi	sp,sp,12
 8000820:	f800283a 	ret

08000824 <_ZN8WiFiUart12update_entryEPViS1_>:


int WiFiUart::update_entry(volatile int *tag_id, volatile int *result)
{
 8000824:	deffea04 	addi	sp,sp,-88
 8000828:	dfc01515 	stw	ra,84(sp)
 800082c:	df001415 	stw	fp,80(sp)
 8000830:	df001404 	addi	fp,sp,80
 8000834:	e13ffd15 	stw	r4,-12(fp)
 8000838:	e17ffe15 	stw	r5,-8(fp)
 800083c:	e1bfff15 	stw	r6,-4(fp)
    const char *result_str = (result) ? "true" : "false";
 8000840:	e0bfff17 	ldw	r2,-4(fp)
 8000844:	10000326 	beq	r2,zero,8000854 <_ZN8WiFiUart12update_entryEPViS1_+0x30>
 8000848:	00820074 	movhi	r2,2049
 800084c:	109d4604 	addi	r2,r2,29976
 8000850:	00000206 	br	800085c <_ZN8WiFiUart12update_entryEPViS1_+0x38>
 8000854:	00820074 	movhi	r2,2049
 8000858:	109d4804 	addi	r2,r2,29984
 800085c:	e0bfed15 	stw	r2,-76(fp)

    char command[50] = "update_db_entry(\"";
 8000860:	00985934 	movhi	r2,24932
 8000864:	109c1d44 	addi	r2,r2,28789
 8000868:	e0bff015 	stw	r2,-64(fp)
 800086c:	009917f4 	movhi	r2,25695
 8000870:	10995d04 	addi	r2,r2,25972
 8000874:	e0bff115 	stw	r2,-60(fp)
 8000878:	009b9974 	movhi	r2,28261
 800087c:	1097d884 	addi	r2,r2,24418
 8000880:	e0bff215 	stw	r2,-56(fp)
 8000884:	008a1e74 	movhi	r2,10361
 8000888:	109c9d04 	addi	r2,r2,29300
 800088c:	e0bff315 	stw	r2,-52(fp)
 8000890:	00800884 	movi	r2,34
 8000894:	e0bff415 	stw	r2,-48(fp)
 8000898:	e03ff515 	stw	zero,-44(fp)
 800089c:	e03ff615 	stw	zero,-40(fp)
 80008a0:	e03ff715 	stw	zero,-36(fp)
 80008a4:	e03ff815 	stw	zero,-32(fp)
 80008a8:	e03ff915 	stw	zero,-28(fp)
 80008ac:	e03ffa15 	stw	zero,-24(fp)
 80008b0:	e03ffb15 	stw	zero,-20(fp)
 80008b4:	e03ffc0d 	sth	zero,-16(fp)
    char tid_str[8];
	snprintf(tid_str, 8, "%d", tag_id); // convert tag_id from int to string 
 80008b8:	e0bfee04 	addi	r2,fp,-72
 80008bc:	1009883a 	mov	r4,r2
 80008c0:	01400204 	movi	r5,8
 80008c4:	01820074 	movhi	r6,2049
 80008c8:	319d4a04 	addi	r6,r6,29992
 80008cc:	e1fffe17 	ldw	r7,-8(fp)
 80008d0:	80043440 	call	8004344 <snprintf>
    strcat(command, tid_str);
 80008d4:	e0fff004 	addi	r3,fp,-64
 80008d8:	e0bfee04 	addi	r2,fp,-72
 80008dc:	1809883a 	mov	r4,r3
 80008e0:	100b883a 	mov	r5,r2
 80008e4:	80044280 	call	8004428 <strcat>
	strcat(command, "\",");
 80008e8:	e0bff004 	addi	r2,fp,-64
 80008ec:	1009883a 	mov	r4,r2
 80008f0:	80045e40 	call	80045e4 <strlen>
 80008f4:	1007883a 	mov	r3,r2
 80008f8:	e0bff004 	addi	r2,fp,-64
 80008fc:	10c5883a 	add	r2,r2,r3
 8000900:	00c00884 	movi	r3,34
 8000904:	10c00005 	stb	r3,0(r2)
 8000908:	00c00b04 	movi	r3,44
 800090c:	10c00045 	stb	r3,1(r2)
 8000910:	10000085 	stb	zero,2(r2)
    strcat(command, result_str);
 8000914:	e0bff004 	addi	r2,fp,-64
 8000918:	1009883a 	mov	r4,r2
 800091c:	e17fed17 	ldw	r5,-76(fp)
 8000920:	80044280 	call	8004428 <strcat>
    strcat(command, ")");
 8000924:	e0bff004 	addi	r2,fp,-64
 8000928:	1009883a 	mov	r4,r2
 800092c:	80045e40 	call	80045e4 <strlen>
 8000930:	1007883a 	mov	r3,r2
 8000934:	e0bff004 	addi	r2,fp,-64
 8000938:	10c5883a 	add	r2,r2,r3
 800093c:	00c00a44 	movi	r3,41
 8000940:	10c00005 	stb	r3,0(r2)
 8000944:	10000045 	stb	zero,1(r2)
    
	printf("Command: %s\n", command);
 8000948:	e0bff004 	addi	r2,fp,-64
 800094c:	01020074 	movhi	r4,2049
 8000950:	211d4b04 	addi	r4,r4,29996
 8000954:	100b883a 	mov	r5,r2
 8000958:	8003e100 	call	8003e10 <printf>

    write_m(command, strlen(command));
 800095c:	e0bff004 	addi	r2,fp,-64
 8000960:	1009883a 	mov	r4,r2
 8000964:	80045e40 	call	80045e4 <strlen>
 8000968:	1007883a 	mov	r3,r2
 800096c:	e0bff004 	addi	r2,fp,-64
 8000970:	e13ffd17 	ldw	r4,-12(fp)
 8000974:	100b883a 	mov	r5,r2
 8000978:	180d883a 	mov	r6,r3
 800097c:	80009dc0 	call	80009dc <_ZN8WiFiUart7write_mEPci>
    write_s('\r');
 8000980:	e13ffd17 	ldw	r4,-12(fp)
 8000984:	01400344 	movi	r5,13
 8000988:	8000ad00 	call	8000ad0 <_ZN8WiFiUart7write_sEh>
    write_s('\n');
 800098c:	e13ffd17 	ldw	r4,-12(fp)
 8000990:	01400284 	movi	r5,10
 8000994:	8000ad00 	call	8000ad0 <_ZN8WiFiUart7write_sEh>
    for (int i = 0;i < 7000000; i++){};
 8000998:	e03fec15 	stw	zero,-80(fp)
 800099c:	00000306 	br	80009ac <_ZN8WiFiUart12update_entryEPViS1_+0x188>
 80009a0:	e0bfec17 	ldw	r2,-80(fp)
 80009a4:	10800044 	addi	r2,r2,1
 80009a8:	e0bfec15 	stw	r2,-80(fp)
 80009ac:	e0ffec17 	ldw	r3,-80(fp)
 80009b0:	00801af4 	movhi	r2,107
 80009b4:	10b3efc4 	addi	r2,r2,-12353
 80009b8:	10fff90e 	bge	r2,r3,80009a0 <__alt_data_end+0xfc0009a0>

    flush();
 80009bc:	e13ffd17 	ldw	r4,-12(fp)
 80009c0:	8000c1c0 	call	8000c1c <_ZN8WiFiUart5flushEv>
    return 1;
 80009c4:	00800044 	movi	r2,1
}
 80009c8:	e037883a 	mov	sp,fp
 80009cc:	dfc00117 	ldw	ra,4(sp)
 80009d0:	df000017 	ldw	fp,0(sp)
 80009d4:	dec00204 	addi	sp,sp,8
 80009d8:	f800283a 	ret

080009dc <_ZN8WiFiUart7write_mEPci>:


int WiFiUart::write_m(char data[], int length)
{
 80009dc:	defffa04 	addi	sp,sp,-24
 80009e0:	dfc00515 	stw	ra,20(sp)
 80009e4:	df000415 	stw	fp,16(sp)
 80009e8:	df000404 	addi	fp,sp,16
 80009ec:	e13ffd15 	stw	r4,-12(fp)
 80009f0:	e17ffe15 	stw	r5,-8(fp)
 80009f4:	e1bfff15 	stw	r6,-4(fp)
    int count;
	for (count = 0; count < length; count++) {
 80009f8:	e03ffc15 	stw	zero,-16(fp)
 80009fc:	00000b06 	br	8000a2c <_ZN8WiFiUart7write_mEPci+0x50>
		write_s(data[count]);
 8000a00:	e0bffc17 	ldw	r2,-16(fp)
 8000a04:	e0fffe17 	ldw	r3,-8(fp)
 8000a08:	1885883a 	add	r2,r3,r2
 8000a0c:	10800003 	ldbu	r2,0(r2)
 8000a10:	10803fcc 	andi	r2,r2,255
 8000a14:	e13ffd17 	ldw	r4,-12(fp)
 8000a18:	100b883a 	mov	r5,r2
 8000a1c:	8000ad00 	call	8000ad0 <_ZN8WiFiUart7write_sEh>


int WiFiUart::write_m(char data[], int length)
{
    int count;
	for (count = 0; count < length; count++) {
 8000a20:	e0bffc17 	ldw	r2,-16(fp)
 8000a24:	10800044 	addi	r2,r2,1
 8000a28:	e0bffc15 	stw	r2,-16(fp)
 8000a2c:	e0fffc17 	ldw	r3,-16(fp)
 8000a30:	e0bfff17 	ldw	r2,-4(fp)
 8000a34:	18bff216 	blt	r3,r2,8000a00 <__alt_data_end+0xfc000a00>
		write_s(data[count]);
	}
    return count;
 8000a38:	e0bffc17 	ldw	r2,-16(fp)
}
 8000a3c:	e037883a 	mov	sp,fp
 8000a40:	dfc00117 	ldw	ra,4(sp)
 8000a44:	df000017 	ldw	fp,0(sp)
 8000a48:	dec00204 	addi	sp,sp,8
 8000a4c:	f800283a 	ret

08000a50 <_ZN8WiFiUart6read_mEPii>:


void WiFiUart::read_m(int *buffer, int length)
{
 8000a50:	defff904 	addi	sp,sp,-28
 8000a54:	dfc00615 	stw	ra,24(sp)
 8000a58:	df000515 	stw	fp,20(sp)
 8000a5c:	dc000415 	stw	r16,16(sp)
 8000a60:	df000504 	addi	fp,sp,20
 8000a64:	e13ffc15 	stw	r4,-16(fp)
 8000a68:	e17ffd15 	stw	r5,-12(fp)
 8000a6c:	e1bffe15 	stw	r6,-8(fp)
    int count;
    for (count = 0; count < length; count++) {
 8000a70:	e03ffb15 	stw	zero,-20(fp)
 8000a74:	00000d06 	br	8000aac <_ZN8WiFiUart6read_mEPii+0x5c>
		buffer[count] = read_s();
 8000a78:	e0bffb17 	ldw	r2,-20(fp)
 8000a7c:	1085883a 	add	r2,r2,r2
 8000a80:	1085883a 	add	r2,r2,r2
 8000a84:	1007883a 	mov	r3,r2
 8000a88:	e0bffd17 	ldw	r2,-12(fp)
 8000a8c:	10e1883a 	add	r16,r2,r3
 8000a90:	e13ffc17 	ldw	r4,-16(fp)
 8000a94:	8000b740 	call	8000b74 <_ZN8WiFiUart6read_sEv>
 8000a98:	10803fcc 	andi	r2,r2,255
 8000a9c:	80800015 	stw	r2,0(r16)


void WiFiUart::read_m(int *buffer, int length)
{
    int count;
    for (count = 0; count < length; count++) {
 8000aa0:	e0bffb17 	ldw	r2,-20(fp)
 8000aa4:	10800044 	addi	r2,r2,1
 8000aa8:	e0bffb15 	stw	r2,-20(fp)
 8000aac:	e0fffb17 	ldw	r3,-20(fp)
 8000ab0:	e0bffe17 	ldw	r2,-8(fp)
 8000ab4:	18bff016 	blt	r3,r2,8000a78 <__alt_data_end+0xfc000a78>
		buffer[count] = read_s();
	}
}
 8000ab8:	e6ffff04 	addi	sp,fp,-4
 8000abc:	dfc00217 	ldw	ra,8(sp)
 8000ac0:	df000117 	ldw	fp,4(sp)
 8000ac4:	dc000017 	ldw	r16,0(sp)
 8000ac8:	dec00304 	addi	sp,sp,12
 8000acc:	f800283a 	ret

08000ad0 <_ZN8WiFiUart7write_sEh>:


int WiFiUart::write_s(alt_u8 data)
{
 8000ad0:	defffb04 	addi	sp,sp,-20
 8000ad4:	dfc00415 	stw	ra,16(sp)
 8000ad8:	df000315 	stw	fp,12(sp)
 8000adc:	df000304 	addi	fp,sp,12
 8000ae0:	e13ffe15 	stw	r4,-8(fp)
 8000ae4:	2805883a 	mov	r2,r5
 8000ae8:	e0bfff05 	stb	r2,-4(fp)
    alt_up_rs232_disable_read_interrupt(RS232_DEV);
 8000aec:	e0bffe17 	ldw	r2,-8(fp)
 8000af0:	10800117 	ldw	r2,4(r2)
 8000af4:	1009883a 	mov	r4,r2
 8000af8:	801606c0 	call	801606c <alt_up_rs232_disable_read_interrupt>

    int result = 0;
 8000afc:	e03ffd15 	stw	zero,-12(fp)
    WRITE_FIFO_SPACE = alt_up_rs232_get_available_space_in_write_FIFO(RS232_DEV);
 8000b00:	e0bffe17 	ldw	r2,-8(fp)
 8000b04:	10800117 	ldw	r2,4(r2)
 8000b08:	1009883a 	mov	r4,r2
 8000b0c:	80161080 	call	8016108 <alt_up_rs232_get_available_space_in_write_FIFO>
 8000b10:	1007883a 	mov	r3,r2
 8000b14:	e0bffe17 	ldw	r2,-8(fp)
 8000b18:	10c00215 	stw	r3,8(r2)

    if (WRITE_FIFO_SPACE >= WRITE_FIFO_EMPTY) {
 8000b1c:	e0bffe17 	ldw	r2,-8(fp)
 8000b20:	10800217 	ldw	r2,8(r2)
 8000b24:	10802030 	cmpltui	r2,r2,128
 8000b28:	1000081e 	bne	r2,zero,8000b4c <_ZN8WiFiUart7write_sEh+0x7c>
        alt_up_rs232_write_data(RS232_DEV, data);
 8000b2c:	e0bffe17 	ldw	r2,-8(fp)
 8000b30:	10c00117 	ldw	r3,4(r2)
 8000b34:	e0bfff03 	ldbu	r2,-4(fp)
 8000b38:	1809883a 	mov	r4,r3
 8000b3c:	100b883a 	mov	r5,r2
 8000b40:	80161880 	call	8016188 <alt_up_rs232_write_data>
        result = 1;
 8000b44:	00800044 	movi	r2,1
 8000b48:	e0bffd15 	stw	r2,-12(fp)
    }

    // Enable the read interrupts for the RS232 UART core 
    alt_up_rs232_enable_read_interrupt(RS232_DEV);
 8000b4c:	e0bffe17 	ldw	r2,-8(fp)
 8000b50:	10800117 	ldw	r2,4(r2)
 8000b54:	1009883a 	mov	r4,r2
 8000b58:	80160140 	call	8016014 <alt_up_rs232_enable_read_interrupt>
    return result;
 8000b5c:	e0bffd17 	ldw	r2,-12(fp)
}
 8000b60:	e037883a 	mov	sp,fp
 8000b64:	dfc00117 	ldw	ra,4(sp)
 8000b68:	df000017 	ldw	fp,0(sp)
 8000b6c:	dec00204 	addi	sp,sp,8
 8000b70:	f800283a 	ret

08000b74 <_ZN8WiFiUart6read_sEv>:


unsigned char WiFiUart::read_s(void)
{
 8000b74:	defffc04 	addi	sp,sp,-16
 8000b78:	dfc00315 	stw	ra,12(sp)
 8000b7c:	df000215 	stw	fp,8(sp)
 8000b80:	df000204 	addi	fp,sp,8
 8000b84:	e13fff15 	stw	r4,-4(fp)
    while (!read_ready()) {}    // Wait for data to be available to read
 8000b88:	0001883a 	nop
 8000b8c:	e13fff17 	ldw	r4,-4(fp)
 8000b90:	8000bd40 	call	8000bd4 <_ZN8WiFiUart10read_readyEv>
 8000b94:	1005003a 	cmpeq	r2,r2,zero
 8000b98:	10803fcc 	andi	r2,r2,255
 8000b9c:	103ffb1e 	bne	r2,zero,8000b8c <__alt_data_end+0xfc000b8c>

    alt_u8 buffer;
    alt_u8 parity_error;

    alt_up_rs232_read_data(RS232_DEV, &buffer, &parity_error);
 8000ba0:	e0bfff17 	ldw	r2,-4(fp)
 8000ba4:	10c00117 	ldw	r3,4(r2)
 8000ba8:	e0bffe44 	addi	r2,fp,-7
 8000bac:	1809883a 	mov	r4,r3
 8000bb0:	e17ffe04 	addi	r5,fp,-8
 8000bb4:	100d883a 	mov	r6,r2
 8000bb8:	80161c80 	call	80161c8 <alt_up_rs232_read_data>

    return (unsigned char) buffer;
 8000bbc:	e0bffe03 	ldbu	r2,-8(fp)
}
 8000bc0:	e037883a 	mov	sp,fp
 8000bc4:	dfc00117 	ldw	ra,4(sp)
 8000bc8:	df000017 	ldw	fp,0(sp)
 8000bcc:	dec00204 	addi	sp,sp,8
 8000bd0:	f800283a 	ret

08000bd4 <_ZN8WiFiUart10read_readyEv>:


int WiFiUart::read_ready(void)
{
 8000bd4:	defffc04 	addi	sp,sp,-16
 8000bd8:	dfc00315 	stw	ra,12(sp)
 8000bdc:	df000215 	stw	fp,8(sp)
 8000be0:	df000204 	addi	fp,sp,8
 8000be4:	e13fff15 	stw	r4,-4(fp)
    alt_u16 read_fifo_used = alt_up_rs232_get_used_space_in_read_FIFO(RS232_DEV);
 8000be8:	e0bfff17 	ldw	r2,-4(fp)
 8000bec:	10800117 	ldw	r2,4(r2)
 8000bf0:	1009883a 	mov	r4,r2
 8000bf4:	80160c80 	call	80160c8 <alt_up_rs232_get_used_space_in_read_FIFO>
 8000bf8:	e0bffe0d 	sth	r2,-8(fp)
    return (read_fifo_used > READ_FIFO_EMPTY);
 8000bfc:	e0bffe0b 	ldhu	r2,-8(fp)
 8000c00:	1004c03a 	cmpne	r2,r2,zero
 8000c04:	10803fcc 	andi	r2,r2,255
}
 8000c08:	e037883a 	mov	sp,fp
 8000c0c:	dfc00117 	ldw	ra,4(sp)
 8000c10:	df000017 	ldw	fp,0(sp)
 8000c14:	dec00204 	addi	sp,sp,8
 8000c18:	f800283a 	ret

08000c1c <_ZN8WiFiUart5flushEv>:


void WiFiUart::flush(void)
{
 8000c1c:	defffd04 	addi	sp,sp,-12
 8000c20:	dfc00215 	stw	ra,8(sp)
 8000c24:	df000115 	stw	fp,4(sp)
 8000c28:	df000104 	addi	fp,sp,4
 8000c2c:	e13fff15 	stw	r4,-4(fp)
    while (read_ready()) {
 8000c30:	00000206 	br	8000c3c <_ZN8WiFiUart5flushEv+0x20>
        // read unwanted char out of fifo receiver buffer
        read_s();
 8000c34:	e13fff17 	ldw	r4,-4(fp)
 8000c38:	8000b740 	call	8000b74 <_ZN8WiFiUart6read_sEv>
}


void WiFiUart::flush(void)
{
    while (read_ready()) {
 8000c3c:	e13fff17 	ldw	r4,-4(fp)
 8000c40:	8000bd40 	call	8000bd4 <_ZN8WiFiUart10read_readyEv>
 8000c44:	1004c03a 	cmpne	r2,r2,zero
 8000c48:	10803fcc 	andi	r2,r2,255
 8000c4c:	103ff91e 	bne	r2,zero,8000c34 <__alt_data_end+0xfc000c34>
        // read unwanted char out of fifo receiver buffer
        read_s();
    }
    return; // no more characters so return 
 8000c50:	0001883a 	nop
 8000c54:	e037883a 	mov	sp,fp
 8000c58:	dfc00117 	ldw	ra,4(sp)
 8000c5c:	df000017 	ldw	fp,0(sp)
 8000c60:	dec00204 	addi	sp,sp,8
 8000c64:	f800283a 	ret

08000c68 <alt_dma_txchan_close>:
 * system that it has finished with a given DMA transmit channel. This is only
 * provided for completness.
 */

static ALT_INLINE int alt_dma_txchan_close (alt_dma_txchan dma)
{
 8000c68:	defffe04 	addi	sp,sp,-8
 8000c6c:	df000115 	stw	fp,4(sp)
 8000c70:	df000104 	addi	fp,sp,4
 8000c74:	e13fff15 	stw	r4,-4(fp)
  return 0;
 8000c78:	0005883a 	mov	r2,zero
}
 8000c7c:	e037883a 	mov	sp,fp
 8000c80:	df000017 	ldw	fp,0(sp)
 8000c84:	dec00104 	addi	sp,sp,4
 8000c88:	f800283a 	ret

08000c8c <alt_dma_txchan_send>:
static ALT_INLINE int alt_dma_txchan_send (alt_dma_txchan dma, 
             const void* from, 
             alt_u32 length,
             alt_txchan_done* done, 
             void* handle)
{
 8000c8c:	defff904 	addi	sp,sp,-28
 8000c90:	dfc00615 	stw	ra,24(sp)
 8000c94:	df000515 	stw	fp,20(sp)
 8000c98:	df000504 	addi	fp,sp,20
 8000c9c:	e13ffc15 	stw	r4,-16(fp)
 8000ca0:	e17ffd15 	stw	r5,-12(fp)
 8000ca4:	e1bffe15 	stw	r6,-8(fp)
 8000ca8:	e1ffff15 	stw	r7,-4(fp)
  return dma ? dma->dma_send (dma, 
        from, 
        length,
        done, 
        handle) : -ENODEV;
 8000cac:	e0bffc17 	ldw	r2,-16(fp)
 8000cb0:	10000a26 	beq	r2,zero,8000cdc <alt_dma_txchan_send+0x50>
 8000cb4:	e0bffc17 	ldw	r2,-16(fp)
 8000cb8:	10800417 	ldw	r2,16(r2)
 8000cbc:	e0c00217 	ldw	r3,8(fp)
 8000cc0:	d8c00015 	stw	r3,0(sp)
 8000cc4:	e13ffc17 	ldw	r4,-16(fp)
 8000cc8:	e17ffd17 	ldw	r5,-12(fp)
 8000ccc:	e1bffe17 	ldw	r6,-8(fp)
 8000cd0:	e1ffff17 	ldw	r7,-4(fp)
 8000cd4:	103ee83a 	callr	r2
 8000cd8:	00000106 	br	8000ce0 <alt_dma_txchan_send+0x54>
 8000cdc:	00bffb44 	movi	r2,-19
}
 8000ce0:	e037883a 	mov	sp,fp
 8000ce4:	dfc00117 	ldw	ra,4(sp)
 8000ce8:	df000017 	ldw	fp,0(sp)
 8000cec:	dec00204 	addi	sp,sp,8
 8000cf0:	f800283a 	ret

08000cf4 <alt_dma_txchan_ioctl>:
 */

static ALT_INLINE int alt_dma_txchan_ioctl (alt_dma_txchan dma, 
              int            req, 
              void*          arg)
{
 8000cf4:	defffb04 	addi	sp,sp,-20
 8000cf8:	dfc00415 	stw	ra,16(sp)
 8000cfc:	df000315 	stw	fp,12(sp)
 8000d00:	df000304 	addi	fp,sp,12
 8000d04:	e13ffd15 	stw	r4,-12(fp)
 8000d08:	e17ffe15 	stw	r5,-8(fp)
 8000d0c:	e1bfff15 	stw	r6,-4(fp)
  return dma ? dma->ioctl (dma, req, arg) : -ENODEV;
 8000d10:	e0bffd17 	ldw	r2,-12(fp)
 8000d14:	10000726 	beq	r2,zero,8000d34 <alt_dma_txchan_ioctl+0x40>
 8000d18:	e0bffd17 	ldw	r2,-12(fp)
 8000d1c:	10800517 	ldw	r2,20(r2)
 8000d20:	e13ffd17 	ldw	r4,-12(fp)
 8000d24:	e17ffe17 	ldw	r5,-8(fp)
 8000d28:	e1bfff17 	ldw	r6,-4(fp)
 8000d2c:	103ee83a 	callr	r2
 8000d30:	00000106 	br	8000d38 <alt_dma_txchan_ioctl+0x44>
 8000d34:	00bffb44 	movi	r2,-19
}
 8000d38:	e037883a 	mov	sp,fp
 8000d3c:	dfc00117 	ldw	ra,4(sp)
 8000d40:	df000017 	ldw	fp,0(sp)
 8000d44:	dec00204 	addi	sp,sp,8
 8000d48:	f800283a 	ret

08000d4c <_Z8dma_donePv>:
volatile int dma_complete = 0; /* flag used to indicate the transaction is complete */


/* function that is called when the transaction completes */
void dma_done(void* handle)
{
 8000d4c:	defffe04 	addi	sp,sp,-8
 8000d50:	df000115 	stw	fp,4(sp)
 8000d54:	df000104 	addi	fp,sp,4
 8000d58:	e13fff15 	stw	r4,-4(fp)
    dma_complete = 1;
 8000d5c:	00800044 	movi	r2,1
 8000d60:	d0a75015 	stw	r2,-25280(gp)
}
 8000d64:	e037883a 	mov	sp,fp
 8000d68:	df000017 	ldw	fp,0(sp)
 8000d6c:	dec00104 	addi	sp,sp,4
 8000d70:	f800283a 	ret

08000d74 <_Z9start_dmav>:


int start_dma(void)
{
 8000d74:	defffc04 	addi	sp,sp,-16
 8000d78:	dfc00315 	stw	ra,12(sp)
 8000d7c:	df000215 	stw	fp,8(sp)
 8000d80:	df000204 	addi	fp,sp,8
    alt_dma_txchan tx;

    /* Obtain a handle for the device */
    if ((tx = alt_dma_txchan_open (DMA_FPGA_TO_HPS_NAME)) == NULL)
 8000d84:	01020074 	movhi	r4,2049
 8000d88:	211d5604 	addi	r4,r4,30040
 8000d8c:	8013b680 	call	8013b68 <alt_dma_txchan_open>
 8000d90:	e0bfff15 	stw	r2,-4(fp)
 8000d94:	e0bfff17 	ldw	r2,-4(fp)
 8000d98:	1005003a 	cmpeq	r2,r2,zero
 8000d9c:	10803fcc 	andi	r2,r2,255
 8000da0:	10000526 	beq	r2,zero,8000db8 <_Z9start_dmav+0x44>
    {
        printf ("Error: failed to open device\n");
 8000da4:	01020074 	movhi	r4,2049
 8000da8:	211d5c04 	addi	r4,r4,30064
 8000dac:	8003f040 	call	8003f04 <puts>
        exit (1);
 8000db0:	01000044 	movi	r4,1
 8000db4:	80034b80 	call	80034b8 <exit>
    }
    else
    {
        alt_dma_txchan_ioctl(tx, ALT_DMA_TX_ONLY_ON, dnn_acc);
 8000db8:	d0a00717 	ldw	r2,-32740(gp)
 8000dbc:	e13fff17 	ldw	r4,-4(fp)
 8000dc0:	014000c4 	movi	r5,3
 8000dc4:	100d883a 	mov	r6,r2
 8000dc8:	8000cf40 	call	8000cf4 <alt_dma_txchan_ioctl>

        /* Post the transmit request */
        if (alt_dma_txchan_send (tx, tag_id, 1, dma_done, NULL) < 0)
 8000dcc:	d0a00817 	ldw	r2,-32736(gp)
 8000dd0:	d8000015 	stw	zero,0(sp)
 8000dd4:	e13fff17 	ldw	r4,-4(fp)
 8000dd8:	100b883a 	mov	r5,r2
 8000ddc:	01800044 	movi	r6,1
 8000de0:	01c20034 	movhi	r7,2048
 8000de4:	39c35304 	addi	r7,r7,3404
 8000de8:	8000c8c0 	call	8000c8c <alt_dma_txchan_send>
 8000dec:	1004d7fa 	srli	r2,r2,31
 8000df0:	10803fcc 	andi	r2,r2,255
 8000df4:	10000526 	beq	r2,zero,8000e0c <_Z9start_dmav+0x98>
        {
            printf ("Error: failed to post transmit request\n");
 8000df8:	01020074 	movhi	r4,2049
 8000dfc:	211d6404 	addi	r4,r4,30096
 8000e00:	8003f040 	call	8003f04 <puts>
            exit (1);
 8000e04:	01000044 	movi	r4,1
 8000e08:	80034b80 	call	80034b8 <exit>
        }
        /* Wait for the transaction to complete */
        while (!dma_complete);
 8000e0c:	0001883a 	nop
 8000e10:	d0a75017 	ldw	r2,-25280(gp)
 8000e14:	1005003a 	cmpeq	r2,r2,zero
 8000e18:	10803fcc 	andi	r2,r2,255
 8000e1c:	103ffc1e 	bne	r2,zero,8000e10 <__alt_data_end+0xfc000e10>
        
        printf ("Transaction complete\n");
 8000e20:	01020074 	movhi	r4,2049
 8000e24:	211d6e04 	addi	r4,r4,30136
 8000e28:	8003f040 	call	8003f04 <puts>
        alt_dma_txchan_close (tx);
 8000e2c:	e13fff17 	ldw	r4,-4(fp)
 8000e30:	8000c680 	call	8000c68 <alt_dma_txchan_close>
    }

    return dma_complete;
 8000e34:	d0a75017 	ldw	r2,-25280(gp)
 8000e38:	e037883a 	mov	sp,fp
 8000e3c:	dfc00117 	ldw	ra,4(sp)
 8000e40:	df000017 	ldw	fp,0(sp)
 8000e44:	dec00204 	addi	sp,sp,8
 8000e48:	f800283a 	ret

08000e4c <main>:
volatile int *id = (volatile int *) 0x0A900000; /* tag id */
volatile int *res = (volatile int *) 0x0B000000; /* dnn done signal */


int main()
{
 8000e4c:	deffe004 	addi	sp,sp,-128
 8000e50:	dfc01f15 	stw	ra,124(sp)
 8000e54:	df001e15 	stw	fp,120(sp)
 8000e58:	ddc01d15 	stw	r23,116(sp)
 8000e5c:	dd801c15 	stw	r22,112(sp)
 8000e60:	dd401b15 	stw	r21,108(sp)
 8000e64:	dd001a15 	stw	r20,104(sp)
 8000e68:	dcc01915 	stw	r19,100(sp)
 8000e6c:	dc801815 	stw	r18,96(sp)
 8000e70:	dc401715 	stw	r17,92(sp)
 8000e74:	dc001615 	stw	r16,88(sp)
 8000e78:	df001e04 	addi	fp,sp,120
 8000e7c:	00820034 	movhi	r2,2048
 8000e80:	1086d804 	addi	r2,r2,7008
 8000e84:	e0bfee15 	stw	r2,-72(fp)
 8000e88:	00820074 	movhi	r2,2049
 8000e8c:	109d1804 	addi	r2,r2,29792
 8000e90:	e0bfef15 	stw	r2,-68(fp)
 8000e94:	e0bff004 	addi	r2,fp,-64
 8000e98:	e0ffe204 	addi	r3,fp,-120
 8000e9c:	10c00015 	stw	r3,0(r2)
 8000ea0:	00c20034 	movhi	r3,2048
 8000ea4:	18c41504 	addi	r3,r3,4180
 8000ea8:	10c00115 	stw	r3,4(r2)
 8000eac:	16c00215 	stw	sp,8(r2)
 8000eb0:	e0bfe804 	addi	r2,fp,-96
 8000eb4:	1009883a 	mov	r4,r2
 8000eb8:	80031880 	call	8003188 <_Unwind_SjLj_Register>
  printf("NIOS II SOFTWARE APPLICATION\n");
 8000ebc:	01020074 	movhi	r4,2049
 8000ec0:	00bfffc4 	movi	r2,-1
 8000ec4:	e0bfe915 	stw	r2,-92(fp)
 8000ec8:	211d7404 	addi	r4,r4,30160
 8000ecc:	8003f040 	call	8003f04 <puts>
  printf("===========================================\n\n");
 8000ed0:	01020074 	movhi	r4,2049
 8000ed4:	211d7c04 	addi	r4,r4,30192
 8000ed8:	8003f040 	call	8003f04 <puts>

  BTUart BT_UART;
 8000edc:	e0bfe504 	addi	r2,fp,-108
 8000ee0:	1009883a 	mov	r4,r2
 8000ee4:	800026c0 	call	800026c <_ZN6BTUartC1Ev>
  int dma_done = 0, count = 0;
 8000ee8:	e03fe315 	stw	zero,-116(fp)
 8000eec:	e03fe215 	stw	zero,-120(fp)

  int init_success = BT_UART.open(BT_RS232_UART_NAME);
 8000ef0:	e0bfe504 	addi	r2,fp,-108
 8000ef4:	1009883a 	mov	r4,r2
 8000ef8:	01420074 	movhi	r5,2049
 8000efc:	00800044 	movi	r2,1
 8000f00:	e0bfe915 	stw	r2,-92(fp)
 8000f04:	295d8804 	addi	r5,r5,30240
 8000f08:	800031c0 	call	800031c <_ZN6BTUart4openEPKc>
 8000f0c:	e0bfe415 	stw	r2,-112(fp)
  BT_UART.flush();
 8000f10:	e0bfe504 	addi	r2,fp,-108
 8000f14:	1009883a 	mov	r4,r2
 8000f18:	80005d80 	call	80005d8 <_ZN6BTUart5flushEv>

  if (init_success)
 8000f1c:	e0bfe417 	ldw	r2,-112(fp)
 8000f20:	10000326 	beq	r2,zero,8000f30 <main+0xe4>
    printf("INIT SUCCESS: RS232 UART port.\n");
 8000f24:	01020074 	movhi	r4,2049
 8000f28:	211d8d04 	addi	r4,r4,30260
 8000f2c:	8003f040 	call	8003f04 <puts>


  printf("START READING FROM UART FIFO ...\n");
 8000f30:	01020074 	movhi	r4,2049
 8000f34:	00800044 	movi	r2,1
 8000f38:	e0bfe915 	stw	r2,-92(fp)
 8000f3c:	211d9504 	addi	r4,r4,30292
 8000f40:	8003f040 	call	8003f04 <puts>

  while (1) {
    if (BT_UART.read_ready()) {
 8000f44:	e0ffe504 	addi	r3,fp,-108
 8000f48:	00800044 	movi	r2,1
 8000f4c:	e0bfe915 	stw	r2,-92(fp)
 8000f50:	1809883a 	mov	r4,r3
 8000f54:	80005900 	call	8000590 <_ZN6BTUart10read_readyEv>
 8000f58:	1004c03a 	cmpne	r2,r2,zero
 8000f5c:	10803fcc 	andi	r2,r2,255
 8000f60:	103ff826 	beq	r2,zero,8000f44 <__alt_data_end+0xfc000f44>
      if (count < INPUT_SIZE) {
 8000f64:	e0bfe217 	ldw	r2,-120(fp)
 8000f68:	10815e08 	cmpgei	r2,r2,1400
 8000f6c:	10000f1e 	bne	r2,zero,8000fac <main+0x160>
        input[count] = BT_UART.read_s();  // Store received image data in 'input' array
 8000f70:	d0e00917 	ldw	r3,-32732(gp)
 8000f74:	e0bfe217 	ldw	r2,-120(fp)
 8000f78:	1085883a 	add	r2,r2,r2
 8000f7c:	1085883a 	add	r2,r2,r2
 8000f80:	1885883a 	add	r2,r3,r2
 8000f84:	e0bff515 	stw	r2,-44(fp)
 8000f88:	e0bfe504 	addi	r2,fp,-108
 8000f8c:	1009883a 	mov	r4,r2
 8000f90:	80003840 	call	8000384 <_ZN6BTUart6read_sEv>
 8000f94:	e0fff517 	ldw	r3,-44(fp)
 8000f98:	18800015 	stw	r2,0(r3)
        count++;
 8000f9c:	e0bfe217 	ldw	r2,-120(fp)
 8000fa0:	10800044 	addi	r2,r2,1
 8000fa4:	e0bfe215 	stw	r2,-120(fp)
 8000fa8:	003fe606 	br	8000f44 <__alt_data_end+0xfc000f44>
      } else {
        while (!BT_UART.read_ready()) {} // Wait for next integer (dynamodb entry id: require to store result in the correct entry in db)
 8000fac:	0001883a 	nop
 8000fb0:	e0ffe504 	addi	r3,fp,-108
 8000fb4:	00800044 	movi	r2,1
 8000fb8:	e0bfe915 	stw	r2,-92(fp)
 8000fbc:	1809883a 	mov	r4,r3
 8000fc0:	80005900 	call	8000590 <_ZN6BTUart10read_readyEv>
 8000fc4:	1005003a 	cmpeq	r2,r2,zero
 8000fc8:	10803fcc 	andi	r2,r2,255
 8000fcc:	103ff81e 	bne	r2,zero,8000fb0 <__alt_data_end+0xfc000fb0>
        id[0] = BT_UART.read_s();
 8000fd0:	d0a00a17 	ldw	r2,-32728(gp)
 8000fd4:	e0bff615 	stw	r2,-40(fp)
 8000fd8:	e0bfe504 	addi	r2,fp,-108
 8000fdc:	1009883a 	mov	r4,r2
 8000fe0:	80003840 	call	8000384 <_ZN6BTUart6read_sEv>
 8000fe4:	e0fff617 	ldw	r3,-40(fp)
 8000fe8:	18800015 	stw	r2,0(r3)
        printf("\nTAG ID: %d\n", id[0]);
 8000fec:	d0a00a17 	ldw	r2,-32728(gp)
 8000ff0:	10800017 	ldw	r2,0(r2)
 8000ff4:	01020074 	movhi	r4,2049
 8000ff8:	211d9e04 	addi	r4,r4,30328
 8000ffc:	100b883a 	mov	r5,r2
 8001000:	8003e100 	call	8003e10 <printf>

        // Write to DMA control port slave address to start DNN accelerator on HPS side
        dma_done = start_dma();
 8001004:	8000d740 	call	8000d74 <_Z9start_dmav>
 8001008:	e0bfe315 	stw	r2,-116(fp)

        if (dma_done)
 800100c:	e0bfe317 	ldw	r2,-116(fp)
 8001010:	10000226 	beq	r2,zero,800101c <main+0x1d0>
          dma_done = 0;
 8001014:	e03fe315 	stw	zero,-116(fp)
 8001018:	00000506 	br	8001030 <main+0x1e4>
        else
          printf("DMA ERROR: Start DMA falied.\n");
 800101c:	01020074 	movhi	r4,2049
 8001020:	00800044 	movi	r2,1
 8001024:	e0bfe915 	stw	r2,-92(fp)
 8001028:	211da204 	addi	r4,r4,30344
 800102c:	8003f040 	call	8003f04 <puts>

        while (res != id) {} // wait for dnn to finish
 8001030:	0001883a 	nop
 8001034:	d0e00b17 	ldw	r3,-32724(gp)
 8001038:	d0a00a17 	ldw	r2,-32728(gp)
 800103c:	18bffd1e 	bne	r3,r2,8001034 <__alt_data_end+0xfc001034>
        wifi_task();
 8001040:	00800044 	movi	r2,1
 8001044:	e0bfe915 	stw	r2,-92(fp)
 8001048:	80010840 	call	8001084 <_Z9wifi_taskv>

        count = 0;  // Reset counter, wait for next image
 800104c:	e03fe215 	stw	zero,-120(fp)
 8001050:	003fbc06 	br	8000f44 <__alt_data_end+0xfc000f44>
 8001054:	e7001e04 	addi	fp,fp,120
 8001058:	e0bfea17 	ldw	r2,-88(fp)
 800105c:	e0bff715 	stw	r2,-36(fp)
      }
    }
  }

  return 0;
 8001060:	e0bfe504 	addi	r2,fp,-108
 8001064:	e03fe915 	stw	zero,-92(fp)
 8001068:	1009883a 	mov	r4,r2
 800106c:	800029c0 	call	800029c <_ZN6BTUartD1Ev>
 8001070:	e0fff717 	ldw	r3,-36(fp)
 8001074:	00bfffc4 	movi	r2,-1
 8001078:	e0bfe915 	stw	r2,-92(fp)
 800107c:	1809883a 	mov	r4,r3
 8001080:	80033840 	call	8003384 <_Unwind_SjLj_Resume>

08001084 <_Z9wifi_taskv>:
volatile int *tagid  = (volatile int *) 0x0a900000; /* tag id */
volatile int *result = (volatile int *) 0x0b000004; /* dnn result */


int wifi_task()
{
 8001084:	deffde04 	addi	sp,sp,-136
 8001088:	dfc02115 	stw	ra,132(sp)
 800108c:	df002015 	stw	fp,128(sp)
 8001090:	ddc01f15 	stw	r23,124(sp)
 8001094:	dd801e15 	stw	r22,120(sp)
 8001098:	dd401d15 	stw	r21,116(sp)
 800109c:	dd001c15 	stw	r20,112(sp)
 80010a0:	dcc01b15 	stw	r19,108(sp)
 80010a4:	dc801a15 	stw	r18,104(sp)
 80010a8:	dc401915 	stw	r17,100(sp)
 80010ac:	dc001815 	stw	r16,96(sp)
 80010b0:	df002004 	addi	fp,sp,128
 80010b4:	00820034 	movhi	r2,2048
 80010b8:	1086d804 	addi	r2,r2,7008
 80010bc:	e0bfed15 	stw	r2,-76(fp)
 80010c0:	00820074 	movhi	r2,2049
 80010c4:	109d1984 	addi	r2,r2,29798
 80010c8:	e0bfee15 	stw	r2,-72(fp)
 80010cc:	e0bfef04 	addi	r2,fp,-68
 80010d0:	e0ffe004 	addi	r3,fp,-128
 80010d4:	10c00015 	stw	r3,0(r2)
 80010d8:	00c20034 	movhi	r3,2048
 80010dc:	18c49904 	addi	r3,r3,4708
 80010e0:	10c00115 	stw	r3,4(r2)
 80010e4:	16c00215 	stw	sp,8(r2)
 80010e8:	e0bfe704 	addi	r2,fp,-100
 80010ec:	1009883a 	mov	r4,r2
 80010f0:	80031880 	call	8003188 <_Unwind_SjLj_Register>
    WiFiUart WiFi_UART;
 80010f4:	e0ffe404 	addi	r3,fp,-112
 80010f8:	00bfffc4 	movi	r2,-1
 80010fc:	e0bfe815 	stw	r2,-96(fp)
 8001100:	1809883a 	mov	r4,r3
 8001104:	80006240 	call	8000624 <_ZN8WiFiUartC1Ev>

    int open_success = WiFi_UART.open(WIFI_RS232_UART_NAME);
 8001108:	e0bfe404 	addi	r2,fp,-112
 800110c:	1009883a 	mov	r4,r2
 8001110:	01420074 	movhi	r5,2049
 8001114:	00800044 	movi	r2,1
 8001118:	e0bfe815 	stw	r2,-96(fp)
 800111c:	295daa04 	addi	r5,r5,30376
 8001120:	80006d40 	call	80006d4 <_ZN8WiFiUart4openEPKc>
 8001124:	e0bfe115 	stw	r2,-124(fp)
    WiFi_UART.flush();
 8001128:	e0bfe404 	addi	r2,fp,-112
 800112c:	1009883a 	mov	r4,r2
 8001130:	8000c1c0 	call	8000c1c <_ZN8WiFiUart5flushEv>

    if (!open_success) {
 8001134:	e0bfe117 	ldw	r2,-124(fp)
 8001138:	1000051e 	bne	r2,zero,8001150 <_Z9wifi_taskv+0xcc>
        printf("OPEN ERROR: RS232 UART port fail to open.\n");
 800113c:	01020074 	movhi	r4,2049
 8001140:	211db004 	addi	r4,r4,30400
 8001144:	8003f040 	call	8003f04 <puts>
        return 0;
 8001148:	e03ff415 	stw	zero,-48(fp)
 800114c:	00003d06 	br	8001244 <_Z9wifi_taskv+0x1c0>
    }

    int init_success = WiFi_UART.init();
 8001150:	e0ffe404 	addi	r3,fp,-112
 8001154:	00800044 	movi	r2,1
 8001158:	e0bfe815 	stw	r2,-96(fp)
 800115c:	1809883a 	mov	r4,r3
 8001160:	800073c0 	call	800073c <_ZN8WiFiUart4initEv>
 8001164:	e0bfe215 	stw	r2,-120(fp)

    if (!init_success)
 8001168:	e0bfe217 	ldw	r2,-120(fp)
 800116c:	1000031e 	bne	r2,zero,800117c <_Z9wifi_taskv+0xf8>
        return -1;
 8001170:	00bfffc4 	movi	r2,-1
 8001174:	e0bff415 	stw	r2,-48(fp)
 8001178:	00003206 	br	8001244 <_Z9wifi_taskv+0x1c0>

    WiFi_UART.update_entry(tagid, result);
 800117c:	d1600c17 	ldw	r5,-32720(gp)
 8001180:	d0e00d17 	ldw	r3,-32716(gp)
 8001184:	e13fe404 	addi	r4,fp,-112
 8001188:	00800044 	movi	r2,1
 800118c:	e0bfe815 	stw	r2,-96(fp)
 8001190:	180d883a 	mov	r6,r3
 8001194:	80008240 	call	8000824 <_ZN8WiFiUart12update_entryEPViS1_>

    // Check if 200 is received
    int count = 0;
 8001198:	e03fe015 	stw	zero,-128(fp)
    char *buffer;
    while (WiFi_UART.read_ready()) {
 800119c:	00000e06 	br	80011d8 <_Z9wifi_taskv+0x154>
        buffer[count] = WiFi_UART.read_s();
 80011a0:	e0bfe017 	ldw	r2,-128(fp)
 80011a4:	e0ffe317 	ldw	r3,-116(fp)
 80011a8:	1887883a 	add	r3,r3,r2
 80011ac:	e0fff515 	stw	r3,-44(fp)
 80011b0:	e0ffe404 	addi	r3,fp,-112
 80011b4:	00800044 	movi	r2,1
 80011b8:	e0bfe815 	stw	r2,-96(fp)
 80011bc:	1809883a 	mov	r4,r3
 80011c0:	8000b740 	call	8000b74 <_ZN8WiFiUart6read_sEv>
 80011c4:	e0fff517 	ldw	r3,-44(fp)
 80011c8:	18800005 	stb	r2,0(r3)
        count++;
 80011cc:	e0bfe017 	ldw	r2,-128(fp)
 80011d0:	10800044 	addi	r2,r2,1
 80011d4:	e0bfe015 	stw	r2,-128(fp)
    WiFi_UART.update_entry(tagid, result);

    // Check if 200 is received
    int count = 0;
    char *buffer;
    while (WiFi_UART.read_ready()) {
 80011d8:	e0ffe404 	addi	r3,fp,-112
 80011dc:	00800044 	movi	r2,1
 80011e0:	e0bfe815 	stw	r2,-96(fp)
 80011e4:	1809883a 	mov	r4,r3
 80011e8:	8000bd40 	call	8000bd4 <_ZN8WiFiUart10read_readyEv>
 80011ec:	1004c03a 	cmpne	r2,r2,zero
 80011f0:	10803fcc 	andi	r2,r2,255
 80011f4:	103fea1e 	bne	r2,zero,80011a0 <__alt_data_end+0xfc0011a0>
        buffer[count] = WiFi_UART.read_s();
        count++;
    }

	printf(buffer);
 80011f8:	e13fe317 	ldw	r4,-116(fp)
 80011fc:	8003e100 	call	8003e10 <printf>
	
	if (strcmp(buffer,"200\r\n") == 0) {
 8001200:	e13fe317 	ldw	r4,-116(fp)
 8001204:	01420074 	movhi	r5,2049
 8001208:	295dbb04 	addi	r5,r5,30444
 800120c:	80044b00 	call	80044b0 <strcmp>
 8001210:	1000051e 	bne	r2,zero,8001228 <_Z9wifi_taskv+0x1a4>
        printf("ERROR: Failed to updated database entry.\n");
 8001214:	01020074 	movhi	r4,2049
 8001218:	211dbd04 	addi	r4,r4,30452
 800121c:	8003f040 	call	8003f04 <puts>
        return 0;
 8001220:	e03ff415 	stw	zero,-48(fp)
 8001224:	00000706 	br	8001244 <_Z9wifi_taskv+0x1c0>
    }
		
    printf("UPDATE SUCCESS: Database entry updated.\n");
 8001228:	01020074 	movhi	r4,2049
 800122c:	00800044 	movi	r2,1
 8001230:	e0bfe815 	stw	r2,-96(fp)
 8001234:	211dc804 	addi	r4,r4,30496
 8001238:	8003f040 	call	8003f04 <puts>
    return 1;
 800123c:	00800044 	movi	r2,1
 8001240:	e0bff415 	stw	r2,-48(fp)
 8001244:	e0ffe404 	addi	r3,fp,-112
 8001248:	00bfffc4 	movi	r2,-1
 800124c:	e0bfe815 	stw	r2,-96(fp)
 8001250:	1809883a 	mov	r4,r3
 8001254:	80006540 	call	8000654 <_ZN8WiFiUartD1Ev>
 8001258:	e0fff417 	ldw	r3,-48(fp)
 800125c:	e0fff615 	stw	r3,-40(fp)
 8001260:	00000c06 	br	8001294 <_Z9wifi_taskv+0x210>
 8001264:	e7002004 	addi	fp,fp,128
 8001268:	e0bfe917 	ldw	r2,-92(fp)
 800126c:	e0bff715 	stw	r2,-36(fp)
 8001270:	e0bfe404 	addi	r2,fp,-112
 8001274:	e03fe815 	stw	zero,-96(fp)
 8001278:	1009883a 	mov	r4,r2
 800127c:	80006540 	call	8000654 <_ZN8WiFiUartD1Ev>
 8001280:	e0fff717 	ldw	r3,-36(fp)
 8001284:	00bfffc4 	movi	r2,-1
 8001288:	e0bfe815 	stw	r2,-96(fp)
 800128c:	1809883a 	mov	r4,r3
 8001290:	80033840 	call	8003384 <_Unwind_SjLj_Resume>
 8001294:	e0bfe704 	addi	r2,fp,-100
 8001298:	1009883a 	mov	r4,r2
 800129c:	80031a00 	call	80031a0 <_Unwind_SjLj_Unregister>
 80012a0:	e0bff617 	ldw	r2,-40(fp)
 80012a4:	e6fff804 	addi	sp,fp,-32
 80012a8:	dfc00917 	ldw	ra,36(sp)
 80012ac:	df000817 	ldw	fp,32(sp)
 80012b0:	ddc00717 	ldw	r23,28(sp)
 80012b4:	dd800617 	ldw	r22,24(sp)
 80012b8:	dd400517 	ldw	r21,20(sp)
 80012bc:	dd000417 	ldw	r20,16(sp)
 80012c0:	dcc00317 	ldw	r19,12(sp)
 80012c4:	dc800217 	ldw	r18,8(sp)
 80012c8:	dc400117 	ldw	r17,4(sp)
 80012cc:	dc000017 	ldw	r16,0(sp)
 80012d0:	dec00a04 	addi	sp,sp,40
 80012d4:	f800283a 	ret

080012d8 <_ZL12read_sleb128PKhPl>:
 80012d8:	0011883a 	mov	r8,zero
 80012dc:	000d883a 	mov	r6,zero
 80012e0:	21c00003 	ldbu	r7,0(r4)
 80012e4:	20800044 	addi	r2,r4,1
 80012e8:	1009883a 	mov	r4,r2
 80012ec:	38c01fcc 	andi	r3,r7,127
 80012f0:	1986983a 	sll	r3,r3,r6
 80012f4:	3a403fcc 	andi	r9,r7,255
 80012f8:	4a40201c 	xori	r9,r9,128
 80012fc:	4a7fe004 	addi	r9,r9,-128
 8001300:	40d0b03a 	or	r8,r8,r3
 8001304:	318001c4 	addi	r6,r6,7
 8001308:	483ff516 	blt	r9,zero,80012e0 <__alt_data_end+0xfc0012e0>
 800130c:	00c007c4 	movi	r3,31
 8001310:	19800536 	bltu	r3,r6,8001328 <_ZL12read_sleb128PKhPl+0x50>
 8001314:	39c0100c 	andi	r7,r7,64
 8001318:	38000326 	beq	r7,zero,8001328 <_ZL12read_sleb128PKhPl+0x50>
 800131c:	00ffffc4 	movi	r3,-1
 8001320:	198c983a 	sll	r6,r3,r6
 8001324:	3210b03a 	or	r8,r6,r8
 8001328:	2a000015 	stw	r8,0(r5)
 800132c:	f800283a 	ret

08001330 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv>:
 8001330:	28800017 	ldw	r2,0(r5)
 8001334:	30c00017 	ldw	r3,0(r6)
 8001338:	defffb04 	addi	sp,sp,-20
 800133c:	10800217 	ldw	r2,8(r2)
 8001340:	dc400315 	stw	r17,12(sp)
 8001344:	dc000215 	stw	r16,8(sp)
 8001348:	d9400115 	stw	r5,4(sp)
 800134c:	dfc00415 	stw	ra,16(sp)
 8001350:	2021883a 	mov	r16,r4
 8001354:	d8c00015 	stw	r3,0(sp)
 8001358:	2809883a 	mov	r4,r5
 800135c:	3023883a 	mov	r17,r6
 8001360:	103ee83a 	callr	r2
 8001364:	10803fcc 	andi	r2,r2,255
 8001368:	d9400117 	ldw	r5,4(sp)
 800136c:	10000326 	beq	r2,zero,800137c <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv+0x4c>
 8001370:	d8800017 	ldw	r2,0(sp)
 8001374:	10800017 	ldw	r2,0(r2)
 8001378:	d8800015 	stw	r2,0(sp)
 800137c:	80800017 	ldw	r2,0(r16)
 8001380:	8009883a 	mov	r4,r16
 8001384:	d80d883a 	mov	r6,sp
 8001388:	10800417 	ldw	r2,16(r2)
 800138c:	01c00044 	movi	r7,1
 8001390:	103ee83a 	callr	r2
 8001394:	10c03fcc 	andi	r3,r2,255
 8001398:	18000226 	beq	r3,zero,80013a4 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv+0x74>
 800139c:	d8c00017 	ldw	r3,0(sp)
 80013a0:	88c00015 	stw	r3,0(r17)
 80013a4:	dfc00417 	ldw	ra,16(sp)
 80013a8:	dc400317 	ldw	r17,12(sp)
 80013ac:	dc000217 	ldw	r16,8(sp)
 80013b0:	dec00504 	addi	sp,sp,20
 80013b4:	f800283a 	ret

080013b8 <_ZL21size_of_encoded_valueh>:
 80013b8:	deffff04 	addi	sp,sp,-4
 80013bc:	dfc00015 	stw	ra,0(sp)
 80013c0:	00803fc4 	movi	r2,255
 80013c4:	20802026 	beq	r4,r2,8001448 <_ZL21size_of_encoded_valueh+0x90>
 80013c8:	210001cc 	andi	r4,r4,7
 80013cc:	00800144 	movi	r2,5
 80013d0:	11001c36 	bltu	r2,r4,8001444 <_ZL21size_of_encoded_valueh+0x8c>
 80013d4:	200890ba 	slli	r4,r4,2
 80013d8:	00820034 	movhi	r2,2048
 80013dc:	1084fb04 	addi	r2,r2,5100
 80013e0:	2089883a 	add	r4,r4,r2
 80013e4:	20800017 	ldw	r2,0(r4)
 80013e8:	1000683a 	jmp	r2
 80013ec:	08001404 	addi	zero,at,80
 80013f0:	08001444 	addi	zero,at,81
 80013f4:	08001414 	ori	zero,at,80
 80013f8:	08001404 	addi	zero,at,80
 80013fc:	08001434 	orhi	zero,at,80
 8001400:	08001424 	muli	zero,at,80
 8001404:	00800104 	movi	r2,4
 8001408:	dfc00017 	ldw	ra,0(sp)
 800140c:	dec00104 	addi	sp,sp,4
 8001410:	f800283a 	ret
 8001414:	00800084 	movi	r2,2
 8001418:	dfc00017 	ldw	ra,0(sp)
 800141c:	dec00104 	addi	sp,sp,4
 8001420:	f800283a 	ret
 8001424:	00800044 	movi	r2,1
 8001428:	dfc00017 	ldw	ra,0(sp)
 800142c:	dec00104 	addi	sp,sp,4
 8001430:	f800283a 	ret
 8001434:	00800204 	movi	r2,8
 8001438:	dfc00017 	ldw	ra,0(sp)
 800143c:	dec00104 	addi	sp,sp,4
 8001440:	f800283a 	ret
 8001444:	80034a00 	call	80034a0 <abort>
 8001448:	0005883a 	mov	r2,zero
 800144c:	dfc00017 	ldw	ra,0(sp)
 8001450:	dec00104 	addi	sp,sp,4
 8001454:	f800283a 	ret

08001458 <_ZL28read_encoded_value_with_basehjPKhPj>:
 8001458:	defffa04 	addi	sp,sp,-24
 800145c:	dc000315 	stw	r16,12(sp)
 8001460:	dfc00515 	stw	ra,20(sp)
 8001464:	dc400415 	stw	r17,16(sp)
 8001468:	00801404 	movi	r2,80
 800146c:	2021883a 	mov	r16,r4
 8001470:	20807526 	beq	r4,r2,8001648 <_ZL28read_encoded_value_with_basehjPKhPj+0x1f0>
 8001474:	208003cc 	andi	r2,r4,15
 8001478:	00c00304 	movi	r3,12
 800147c:	18807136 	bltu	r3,r2,8001644 <_ZL28read_encoded_value_with_basehjPKhPj+0x1ec>
 8001480:	100490ba 	slli	r2,r2,2
 8001484:	00c20034 	movhi	r3,2048
 8001488:	18c52704 	addi	r3,r3,5276
 800148c:	10c5883a 	add	r2,r2,r3
 8001490:	10800017 	ldw	r2,0(r2)
 8001494:	2823883a 	mov	r17,r5
 8001498:	1000683a 	jmp	r2
 800149c:	08001584 	addi	zero,at,86
 80014a0:	080015b4 	orhi	zero,at,86
 80014a4:	0800156c 	andhi	zero,at,85
 80014a8:	080014d0 	cmplti	zero,at,83
 80014ac:	0800153c 	xorhi	zero,at,84
 80014b0:	080015f0 	cmpltui	zero,at,87
 80014b4:	08001644 	addi	zero,at,89
 80014b8:	08001644 	addi	zero,at,89
 80014bc:	08001644 	addi	zero,at,89
 80014c0:	080015fc 	xorhi	zero,at,87
 80014c4:	08001620 	cmpeqi	zero,at,88
 80014c8:	080014d0 	cmplti	zero,at,83
 80014cc:	0800153c 	xorhi	zero,at,84
 80014d0:	30800043 	ldbu	r2,1(r6)
 80014d4:	30c00083 	ldbu	r3,2(r6)
 80014d8:	310000c3 	ldbu	r4,3(r6)
 80014dc:	32000003 	ldbu	r8,0(r6)
 80014e0:	1004923a 	slli	r2,r2,8
 80014e4:	1806943a 	slli	r3,r3,16
 80014e8:	2008963a 	slli	r4,r4,24
 80014ec:	1204b03a 	or	r2,r2,r8
 80014f0:	1884b03a 	or	r2,r3,r2
 80014f4:	2086b03a 	or	r3,r4,r2
 80014f8:	30800104 	addi	r2,r6,4
 80014fc:	18000926 	beq	r3,zero,8001524 <_ZL28read_encoded_value_with_basehjPKhPj+0xcc>
 8001500:	81401c0c 	andi	r5,r16,112
 8001504:	01000404 	movi	r4,16
 8001508:	29005526 	beq	r5,r4,8001660 <_ZL28read_encoded_value_with_basehjPKhPj+0x208>
 800150c:	84003fcc 	andi	r16,r16,255
 8001510:	8400201c 	xori	r16,r16,128
 8001514:	843fe004 	addi	r16,r16,-128
 8001518:	1c47883a 	add	r3,r3,r17
 800151c:	8000010e 	bge	r16,zero,8001524 <_ZL28read_encoded_value_with_basehjPKhPj+0xcc>
 8001520:	18c00017 	ldw	r3,0(r3)
 8001524:	38c00015 	stw	r3,0(r7)
 8001528:	dfc00517 	ldw	ra,20(sp)
 800152c:	dc400417 	ldw	r17,16(sp)
 8001530:	dc000317 	ldw	r16,12(sp)
 8001534:	dec00604 	addi	sp,sp,24
 8001538:	f800283a 	ret
 800153c:	30800043 	ldbu	r2,1(r6)
 8001540:	30c00083 	ldbu	r3,2(r6)
 8001544:	310000c3 	ldbu	r4,3(r6)
 8001548:	32000003 	ldbu	r8,0(r6)
 800154c:	1004923a 	slli	r2,r2,8
 8001550:	1806943a 	slli	r3,r3,16
 8001554:	2008963a 	slli	r4,r4,24
 8001558:	1204b03a 	or	r2,r2,r8
 800155c:	1884b03a 	or	r2,r3,r2
 8001560:	2086b03a 	or	r3,r4,r2
 8001564:	30800204 	addi	r2,r6,8
 8001568:	003fe406 	br	80014fc <__alt_data_end+0xfc0014fc>
 800156c:	30c00043 	ldbu	r3,1(r6)
 8001570:	32000003 	ldbu	r8,0(r6)
 8001574:	30800084 	addi	r2,r6,2
 8001578:	1806923a 	slli	r3,r3,8
 800157c:	1a06b03a 	or	r3,r3,r8
 8001580:	003fde06 	br	80014fc <__alt_data_end+0xfc0014fc>
 8001584:	30800043 	ldbu	r2,1(r6)
 8001588:	30c00083 	ldbu	r3,2(r6)
 800158c:	314000c3 	ldbu	r5,3(r6)
 8001590:	31000003 	ldbu	r4,0(r6)
 8001594:	1004923a 	slli	r2,r2,8
 8001598:	1806943a 	slli	r3,r3,16
 800159c:	280a963a 	slli	r5,r5,24
 80015a0:	1104b03a 	or	r2,r2,r4
 80015a4:	1884b03a 	or	r2,r3,r2
 80015a8:	2886b03a 	or	r3,r5,r2
 80015ac:	30800104 	addi	r2,r6,4
 80015b0:	003fd206 	br	80014fc <__alt_data_end+0xfc0014fc>
 80015b4:	3013883a 	mov	r9,r6
 80015b8:	0007883a 	mov	r3,zero
 80015bc:	0011883a 	mov	r8,zero
 80015c0:	49000003 	ldbu	r4,0(r9)
 80015c4:	48800044 	addi	r2,r9,1
 80015c8:	1013883a 	mov	r9,r2
 80015cc:	21401fcc 	andi	r5,r4,127
 80015d0:	2a0a983a 	sll	r5,r5,r8
 80015d4:	21003fcc 	andi	r4,r4,255
 80015d8:	2100201c 	xori	r4,r4,128
 80015dc:	213fe004 	addi	r4,r4,-128
 80015e0:	1946b03a 	or	r3,r3,r5
 80015e4:	420001c4 	addi	r8,r8,7
 80015e8:	203ff516 	blt	r4,zero,80015c0 <__alt_data_end+0xfc0015c0>
 80015ec:	003fc306 	br	80014fc <__alt_data_end+0xfc0014fc>
 80015f0:	30c00003 	ldbu	r3,0(r6)
 80015f4:	30800044 	addi	r2,r6,1
 80015f8:	003fc006 	br	80014fc <__alt_data_end+0xfc0014fc>
 80015fc:	3009883a 	mov	r4,r6
 8001600:	d80b883a 	mov	r5,sp
 8001604:	d9800115 	stw	r6,4(sp)
 8001608:	d9c00215 	stw	r7,8(sp)
 800160c:	80012d80 	call	80012d8 <_ZL12read_sleb128PKhPl>
 8001610:	d8c00017 	ldw	r3,0(sp)
 8001614:	d9800117 	ldw	r6,4(sp)
 8001618:	d9c00217 	ldw	r7,8(sp)
 800161c:	003fb706 	br	80014fc <__alt_data_end+0xfc0014fc>
 8001620:	30c00043 	ldbu	r3,1(r6)
 8001624:	32000003 	ldbu	r8,0(r6)
 8001628:	30800084 	addi	r2,r6,2
 800162c:	1806923a 	slli	r3,r3,8
 8001630:	1a06b03a 	or	r3,r3,r8
 8001634:	18ffffcc 	andi	r3,r3,65535
 8001638:	18e0001c 	xori	r3,r3,32768
 800163c:	18e00004 	addi	r3,r3,-32768
 8001640:	003fae06 	br	80014fc <__alt_data_end+0xfc0014fc>
 8001644:	80034a00 	call	80034a0 <abort>
 8001648:	318000c4 	addi	r6,r6,3
 800164c:	00bfff04 	movi	r2,-4
 8001650:	3084703a 	and	r2,r6,r2
 8001654:	10c00017 	ldw	r3,0(r2)
 8001658:	10800104 	addi	r2,r2,4
 800165c:	003fb106 	br	8001524 <__alt_data_end+0xfc001524>
 8001660:	3023883a 	mov	r17,r6
 8001664:	003fa906 	br	800150c <__alt_data_end+0xfc00150c>

08001668 <_ZL15get_ttype_entryP16lsda_header_infom>:
 8001668:	defffc04 	addi	sp,sp,-16
 800166c:	dfc00315 	stw	ra,12(sp)
 8001670:	dc000215 	stw	r16,8(sp)
 8001674:	2021883a 	mov	r16,r4
 8001678:	21000503 	ldbu	r4,20(r4)
 800167c:	d9400115 	stw	r5,4(sp)
 8001680:	80013b80 	call	80013b8 <_ZL21size_of_encoded_valueh>
 8001684:	d9400117 	ldw	r5,4(sp)
 8001688:	1009883a 	mov	r4,r2
 800168c:	8002f580 	call	8002f58 <__mulsi3>
 8001690:	81800317 	ldw	r6,12(r16)
 8001694:	81000503 	ldbu	r4,20(r16)
 8001698:	81400217 	ldw	r5,8(r16)
 800169c:	308dc83a 	sub	r6,r6,r2
 80016a0:	d80f883a 	mov	r7,sp
 80016a4:	80014580 	call	8001458 <_ZL28read_encoded_value_with_basehjPKhPj>
 80016a8:	d8800017 	ldw	r2,0(sp)
 80016ac:	dfc00317 	ldw	ra,12(sp)
 80016b0:	dc000217 	ldw	r16,8(sp)
 80016b4:	dec00404 	addi	sp,sp,16
 80016b8:	f800283a 	ret

080016bc <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl>:
 80016bc:	defffb04 	addi	sp,sp,-20
 80016c0:	dc000115 	stw	r16,4(sp)
 80016c4:	24000317 	ldw	r16,12(r4)
 80016c8:	01ce303a 	nor	r7,zero,r7
 80016cc:	dc800315 	stw	r18,12(sp)
 80016d0:	dc400215 	stw	r17,8(sp)
 80016d4:	dfc00415 	stw	ra,16(sp)
 80016d8:	2023883a 	mov	r17,r4
 80016dc:	2825883a 	mov	r18,r5
 80016e0:	d9800015 	stw	r6,0(sp)
 80016e4:	81e1883a 	add	r16,r16,r7
 80016e8:	8009883a 	mov	r4,r16
 80016ec:	000b883a 	mov	r5,zero
 80016f0:	000d883a 	mov	r6,zero
 80016f4:	20800003 	ldbu	r2,0(r4)
 80016f8:	84000044 	addi	r16,r16,1
 80016fc:	8009883a 	mov	r4,r16
 8001700:	10c01fcc 	andi	r3,r2,127
 8001704:	1986983a 	sll	r3,r3,r6
 8001708:	10803fcc 	andi	r2,r2,255
 800170c:	1080201c 	xori	r2,r2,128
 8001710:	10bfe004 	addi	r2,r2,-128
 8001714:	28cab03a 	or	r5,r5,r3
 8001718:	318001c4 	addi	r6,r6,7
 800171c:	103ff516 	blt	r2,zero,80016f4 <__alt_data_end+0xfc0016f4>
 8001720:	28000e26 	beq	r5,zero,800175c <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0xa0>
 8001724:	8809883a 	mov	r4,r17
 8001728:	80016680 	call	8001668 <_ZL15get_ttype_entryP16lsda_header_infom>
 800172c:	1009883a 	mov	r4,r2
 8001730:	900b883a 	mov	r5,r18
 8001734:	d80d883a 	mov	r6,sp
 8001738:	80013300 	call	8001330 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv>
 800173c:	10c03fcc 	andi	r3,r2,255
 8001740:	183fe926 	beq	r3,zero,80016e8 <__alt_data_end+0xfc0016e8>
 8001744:	dfc00417 	ldw	ra,16(sp)
 8001748:	dc800317 	ldw	r18,12(sp)
 800174c:	dc400217 	ldw	r17,8(sp)
 8001750:	dc000117 	ldw	r16,4(sp)
 8001754:	dec00504 	addi	sp,sp,20
 8001758:	f800283a 	ret
 800175c:	0005883a 	mov	r2,zero
 8001760:	003ff806 	br	8001744 <__alt_data_end+0xfc001744>

08001764 <_ZL21base_of_encoded_valuehP15_Unwind_Context>:
 8001764:	deffff04 	addi	sp,sp,-4
 8001768:	dfc00015 	stw	ra,0(sp)
 800176c:	00803fc4 	movi	r2,255
 8001770:	20800e26 	beq	r4,r2,80017ac <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x48>
 8001774:	20801c0c 	andi	r2,r4,112
 8001778:	00c00804 	movi	r3,32
 800177c:	10c01726 	beq	r2,r3,80017dc <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x78>
 8001780:	18800e2e 	bgeu	r3,r2,80017bc <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x58>
 8001784:	00c01004 	movi	r3,64
 8001788:	10c01026 	beq	r2,r3,80017cc <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x68>
 800178c:	00c01404 	movi	r3,80
 8001790:	10c00626 	beq	r2,r3,80017ac <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x48>
 8001794:	00c00c04 	movi	r3,48
 8001798:	10c00b1e 	bne	r2,r3,80017c8 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x64>
 800179c:	2809883a 	mov	r4,r5
 80017a0:	dfc00017 	ldw	ra,0(sp)
 80017a4:	dec00104 	addi	sp,sp,4
 80017a8:	80032601 	jmpi	8003260 <_Unwind_GetDataRelBase>
 80017ac:	0005883a 	mov	r2,zero
 80017b0:	dfc00017 	ldw	ra,0(sp)
 80017b4:	dec00104 	addi	sp,sp,4
 80017b8:	f800283a 	ret
 80017bc:	103ffb26 	beq	r2,zero,80017ac <__alt_data_end+0xfc0017ac>
 80017c0:	00c00404 	movi	r3,16
 80017c4:	10fff926 	beq	r2,r3,80017ac <__alt_data_end+0xfc0017ac>
 80017c8:	80034a00 	call	80034a0 <abort>
 80017cc:	2809883a 	mov	r4,r5
 80017d0:	dfc00017 	ldw	ra,0(sp)
 80017d4:	dec00104 	addi	sp,sp,4
 80017d8:	80032501 	jmpi	8003250 <_Unwind_GetRegionStart>
 80017dc:	2809883a 	mov	r4,r5
 80017e0:	dfc00017 	ldw	ra,0(sp)
 80017e4:	dec00104 	addi	sp,sp,4
 80017e8:	80032681 	jmpi	8003268 <_Unwind_GetTextRelBase>

080017ec <_ZL28check_compact_exception_specPKSt9type_infoPvPKhij>:
 80017ec:	defff104 	addi	sp,sp,-60
 80017f0:	dd800b15 	stw	r22,44(sp)
 80017f4:	382dd23a 	srai	r22,r7,8
 80017f8:	dd400a15 	stw	r21,40(sp)
 80017fc:	dd000915 	stw	r20,36(sp)
 8001800:	dfc00e15 	stw	ra,56(sp)
 8001804:	df000d15 	stw	fp,52(sp)
 8001808:	ddc00c15 	stw	r23,48(sp)
 800180c:	dcc00815 	stw	r19,32(sp)
 8001810:	dc800715 	stw	r18,28(sp)
 8001814:	dc400615 	stw	r17,24(sp)
 8001818:	dc000515 	stw	r16,20(sp)
 800181c:	d9c00315 	stw	r7,12(sp)
 8001820:	d9400215 	stw	r5,8(sp)
 8001824:	2029883a 	mov	r20,r4
 8001828:	dd400f17 	ldw	r21,60(sp)
 800182c:	b000010e 	bge	r22,zero,8001834 <_ZL28check_compact_exception_specPKSt9type_infoPvPKhij+0x48>
 8001830:	05adc83a 	sub	r22,zero,r22
 8001834:	01000144 	movi	r4,5
 8001838:	000b883a 	mov	r5,zero
 800183c:	d9800415 	stw	r6,16(sp)
 8001840:	80017640 	call	8001764 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 8001844:	d9800417 	ldw	r6,16(sp)
 8001848:	100b883a 	mov	r5,r2
 800184c:	d9c00104 	addi	r7,sp,4
 8001850:	01000144 	movi	r4,5
 8001854:	80014580 	call	8001458 <_ZL28read_encoded_value_with_basehjPKhPj>
 8001858:	1009883a 	mov	r4,r2
 800185c:	017ffe44 	movi	r5,-7
 8001860:	1021883a 	mov	r16,r2
 8001864:	8002f580 	call	8002f58 <__mulsi3>
 8001868:	1027883a 	mov	r19,r2
 800186c:	002f883a 	mov	r23,zero
 8001870:	84400003 	ldbu	r17,0(r16)
 8001874:	8009883a 	mov	r4,r16
 8001878:	014001c4 	movi	r5,7
 800187c:	8002f580 	call	8002f58 <__mulsi3>
 8001880:	88c01fcc 	andi	r3,r17,127
 8001884:	14c5883a 	add	r2,r2,r19
 8001888:	1886983a 	sll	r3,r3,r2
 800188c:	8c403fcc 	andi	r17,r17,255
 8001890:	8c40201c 	xori	r17,r17,128
 8001894:	8c7fe004 	addi	r17,r17,-128
 8001898:	84000044 	addi	r16,r16,1
 800189c:	b8eeb03a 	or	r23,r23,r3
 80018a0:	883ff316 	blt	r17,zero,8001870 <__alt_data_end+0xfc001870>
 80018a4:	85e1883a 	add	r16,r16,r23
 80018a8:	8009883a 	mov	r4,r16
 80018ac:	017ffe44 	movi	r5,-7
 80018b0:	8002f580 	call	8002f58 <__mulsi3>
 80018b4:	102f883a 	mov	r23,r2
 80018b8:	8007883a 	mov	r3,r16
 80018bc:	0025883a 	mov	r18,zero
 80018c0:	1cc00003 	ldbu	r19,0(r3)
 80018c4:	1809883a 	mov	r4,r3
 80018c8:	014001c4 	movi	r5,7
 80018cc:	1c400044 	addi	r17,r3,1
 80018d0:	8002f580 	call	8002f58 <__mulsi3>
 80018d4:	98c01fcc 	andi	r3,r19,127
 80018d8:	15c5883a 	add	r2,r2,r23
 80018dc:	1884983a 	sll	r2,r3,r2
 80018e0:	9cc03fcc 	andi	r19,r19,255
 80018e4:	9cc0201c 	xori	r19,r19,128
 80018e8:	9cffe004 	addi	r19,r19,-128
 80018ec:	8807883a 	mov	r3,r17
 80018f0:	90a4b03a 	or	r18,r18,r2
 80018f4:	983ff216 	blt	r19,zero,80018c0 <__alt_data_end+0xfc0018c0>
 80018f8:	b7003fcc 	andi	fp,r22,255
 80018fc:	e73fffc4 	addi	fp,fp,-1
 8001900:	8f39883a 	add	fp,r17,fp
 8001904:	840000c4 	addi	r16,r16,3
 8001908:	848d883a 	add	r6,r16,r18
 800190c:	e009883a 	mov	r4,fp
 8001910:	017ffe44 	movi	r5,-7
 8001914:	04ffff04 	movi	r19,-4
 8001918:	34e6703a 	and	r19,r6,r19
 800191c:	8002f580 	call	8002f58 <__mulsi3>
 8001920:	002f883a 	mov	r23,zero
 8001924:	102d883a 	mov	r22,r2
 8001928:	e4400003 	ldbu	r17,0(fp)
 800192c:	e009883a 	mov	r4,fp
 8001930:	014001c4 	movi	r5,7
 8001934:	8002f580 	call	8002f58 <__mulsi3>
 8001938:	88c01fcc 	andi	r3,r17,127
 800193c:	1585883a 	add	r2,r2,r22
 8001940:	1886983a 	sll	r3,r3,r2
 8001944:	8c403fcc 	andi	r17,r17,255
 8001948:	8c40201c 	xori	r17,r17,128
 800194c:	e4000044 	addi	r16,fp,1
 8001950:	8c7fe004 	addi	r17,r17,-128
 8001954:	b8eeb03a 	or	r23,r23,r3
 8001958:	8039883a 	mov	fp,r16
 800195c:	883ff216 	blt	r17,zero,8001928 <__alt_data_end+0xfc001928>
 8001960:	d8800317 	ldw	r2,12(sp)
 8001964:	14803fcc 	andi	r18,r2,255
 8001968:	b8002326 	beq	r23,zero,80019f8 <_ZL28check_compact_exception_specPKSt9type_infoPvPKhij+0x20c>
 800196c:	9009883a 	mov	r4,r18
 8001970:	80013b80 	call	80013b8 <_ZL21size_of_encoded_valueh>
 8001974:	1009883a 	mov	r4,r2
 8001978:	b97fffc4 	addi	r5,r23,-1
 800197c:	8002f580 	call	8002f58 <__mulsi3>
 8001980:	9009883a 	mov	r4,r18
 8001984:	a80b883a 	mov	r5,r21
 8001988:	14cd883a 	add	r6,r2,r19
 800198c:	d80f883a 	mov	r7,sp
 8001990:	80014580 	call	8001458 <_ZL28read_encoded_value_with_basehjPKhPj>
 8001994:	d9000017 	ldw	r4,0(sp)
 8001998:	a00b883a 	mov	r5,r20
 800199c:	d9800204 	addi	r6,sp,8
 80019a0:	80013300 	call	8001330 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv>
 80019a4:	10c03fcc 	andi	r3,r2,255
 80019a8:	1800141e 	bne	r3,zero,80019fc <_ZL28check_compact_exception_specPKSt9type_infoPvPKhij+0x210>
 80019ac:	8009883a 	mov	r4,r16
 80019b0:	017ffe44 	movi	r5,-7
 80019b4:	8002f580 	call	8002f58 <__mulsi3>
 80019b8:	102d883a 	mov	r22,r2
 80019bc:	002f883a 	mov	r23,zero
 80019c0:	84400003 	ldbu	r17,0(r16)
 80019c4:	8009883a 	mov	r4,r16
 80019c8:	014001c4 	movi	r5,7
 80019cc:	8002f580 	call	8002f58 <__mulsi3>
 80019d0:	88c01fcc 	andi	r3,r17,127
 80019d4:	1585883a 	add	r2,r2,r22
 80019d8:	1886983a 	sll	r3,r3,r2
 80019dc:	8c403fcc 	andi	r17,r17,255
 80019e0:	8c40201c 	xori	r17,r17,128
 80019e4:	8c7fe004 	addi	r17,r17,-128
 80019e8:	84000044 	addi	r16,r16,1
 80019ec:	b8eeb03a 	or	r23,r23,r3
 80019f0:	883ff316 	blt	r17,zero,80019c0 <__alt_data_end+0xfc0019c0>
 80019f4:	003fdc06 	br	8001968 <__alt_data_end+0xfc001968>
 80019f8:	0005883a 	mov	r2,zero
 80019fc:	dfc00e17 	ldw	ra,56(sp)
 8001a00:	df000d17 	ldw	fp,52(sp)
 8001a04:	ddc00c17 	ldw	r23,48(sp)
 8001a08:	dd800b17 	ldw	r22,44(sp)
 8001a0c:	dd400a17 	ldw	r21,40(sp)
 8001a10:	dd000917 	ldw	r20,36(sp)
 8001a14:	dcc00817 	ldw	r19,32(sp)
 8001a18:	dc800717 	ldw	r18,28(sp)
 8001a1c:	dc400617 	ldw	r17,24(sp)
 8001a20:	dc000517 	ldw	r16,20(sp)
 8001a24:	dec00f04 	addi	sp,sp,60
 8001a28:	f800283a 	ret

08001a2c <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>:
 8001a2c:	defffb04 	addi	sp,sp,-20
 8001a30:	dcc00315 	stw	r19,12(sp)
 8001a34:	dc400115 	stw	r17,4(sp)
 8001a38:	dc000015 	stw	r16,0(sp)
 8001a3c:	dfc00415 	stw	ra,16(sp)
 8001a40:	dc800215 	stw	r18,8(sp)
 8001a44:	2027883a 	mov	r19,r4
 8001a48:	2821883a 	mov	r16,r5
 8001a4c:	3023883a 	mov	r17,r6
 8001a50:	20003f26 	beq	r4,zero,8001b50 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x124>
 8001a54:	80032500 	call	8003250 <_Unwind_GetRegionStart>
 8001a58:	88800015 	stw	r2,0(r17)
 8001a5c:	84800003 	ldbu	r18,0(r16)
 8001a60:	00c03fc4 	movi	r3,255
 8001a64:	84000044 	addi	r16,r16,1
 8001a68:	90c03726 	beq	r18,r3,8001b48 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x11c>
 8001a6c:	9009883a 	mov	r4,r18
 8001a70:	980b883a 	mov	r5,r19
 8001a74:	80017640 	call	8001764 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 8001a78:	800d883a 	mov	r6,r16
 8001a7c:	9009883a 	mov	r4,r18
 8001a80:	100b883a 	mov	r5,r2
 8001a84:	89c00104 	addi	r7,r17,4
 8001a88:	80014580 	call	8001458 <_ZL28read_encoded_value_with_basehjPKhPj>
 8001a8c:	1021883a 	mov	r16,r2
 8001a90:	80c00003 	ldbu	r3,0(r16)
 8001a94:	01003fc4 	movi	r4,255
 8001a98:	80800044 	addi	r2,r16,1
 8001a9c:	88c00505 	stb	r3,20(r17)
 8001aa0:	18c03fcc 	andi	r3,r3,255
 8001aa4:	19002c26 	beq	r3,r4,8001b58 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x12c>
 8001aa8:	100d883a 	mov	r6,r2
 8001aac:	000f883a 	mov	r7,zero
 8001ab0:	000b883a 	mov	r5,zero
 8001ab4:	30c00003 	ldbu	r3,0(r6)
 8001ab8:	10800044 	addi	r2,r2,1
 8001abc:	100d883a 	mov	r6,r2
 8001ac0:	19001fcc 	andi	r4,r3,127
 8001ac4:	2148983a 	sll	r4,r4,r5
 8001ac8:	18c03fcc 	andi	r3,r3,255
 8001acc:	18c0201c 	xori	r3,r3,128
 8001ad0:	18ffe004 	addi	r3,r3,-128
 8001ad4:	390eb03a 	or	r7,r7,r4
 8001ad8:	294001c4 	addi	r5,r5,7
 8001adc:	183ff516 	blt	r3,zero,8001ab4 <__alt_data_end+0xfc001ab4>
 8001ae0:	11cf883a 	add	r7,r2,r7
 8001ae4:	89c00315 	stw	r7,12(r17)
 8001ae8:	10c00003 	ldbu	r3,0(r2)
 8001aec:	000f883a 	mov	r7,zero
 8001af0:	10800044 	addi	r2,r2,1
 8001af4:	88c00545 	stb	r3,21(r17)
 8001af8:	000b883a 	mov	r5,zero
 8001afc:	10c00003 	ldbu	r3,0(r2)
 8001b00:	10800044 	addi	r2,r2,1
 8001b04:	19001fcc 	andi	r4,r3,127
 8001b08:	2148983a 	sll	r4,r4,r5
 8001b0c:	18c03fcc 	andi	r3,r3,255
 8001b10:	18c0201c 	xori	r3,r3,128
 8001b14:	18ffe004 	addi	r3,r3,-128
 8001b18:	390eb03a 	or	r7,r7,r4
 8001b1c:	294001c4 	addi	r5,r5,7
 8001b20:	183ff616 	blt	r3,zero,8001afc <__alt_data_end+0xfc001afc>
 8001b24:	11cf883a 	add	r7,r2,r7
 8001b28:	89c00415 	stw	r7,16(r17)
 8001b2c:	dfc00417 	ldw	ra,16(sp)
 8001b30:	dcc00317 	ldw	r19,12(sp)
 8001b34:	dc800217 	ldw	r18,8(sp)
 8001b38:	dc400117 	ldw	r17,4(sp)
 8001b3c:	dc000017 	ldw	r16,0(sp)
 8001b40:	dec00504 	addi	sp,sp,20
 8001b44:	f800283a 	ret
 8001b48:	88800115 	stw	r2,4(r17)
 8001b4c:	003fd006 	br	8001a90 <__alt_data_end+0xfc001a90>
 8001b50:	0005883a 	mov	r2,zero
 8001b54:	003fc006 	br	8001a58 <__alt_data_end+0xfc001a58>
 8001b58:	88000315 	stw	zero,12(r17)
 8001b5c:	003fe206 	br	8001ae8 <__alt_data_end+0xfc001ae8>

08001b60 <__gxx_personality_sj0>:
 8001b60:	00820034 	movhi	r2,2048
 8001b64:	deffde04 	addi	sp,sp,-136
 8001b68:	1086d804 	addi	r2,r2,7008
 8001b6c:	d8801015 	stw	r2,64(sp)
 8001b70:	00820074 	movhi	r2,2049
 8001b74:	109d1b04 	addi	r2,r2,29804
 8001b78:	d8801115 	stw	r2,68(sp)
 8001b7c:	00820034 	movhi	r2,2048
 8001b80:	10881304 	addi	r2,r2,8268
 8001b84:	d9001715 	stw	r4,92(sp)
 8001b88:	d9000a04 	addi	r4,sp,40
 8001b8c:	d8801315 	stw	r2,76(sp)
 8001b90:	dfc02115 	stw	ra,132(sp)
 8001b94:	df002015 	stw	fp,128(sp)
 8001b98:	dec01215 	stw	sp,72(sp)
 8001b9c:	dec01415 	stw	sp,80(sp)
 8001ba0:	d9401a15 	stw	r5,104(sp)
 8001ba4:	d9801815 	stw	r6,96(sp)
 8001ba8:	d9c01915 	stw	r7,100(sp)
 8001bac:	80031880 	call	8003188 <_Unwind_SjLj_Register>
 8001bb0:	d8c01717 	ldw	r3,92(sp)
 8001bb4:	d8000915 	stw	zero,36(sp)
 8001bb8:	d8000815 	stw	zero,32(sp)
 8001bbc:	00800044 	movi	r2,1
 8001bc0:	18800926 	beq	r3,r2,8001be8 <__gxx_personality_sj0+0x88>
 8001bc4:	014000c4 	movi	r5,3
 8001bc8:	d9401715 	stw	r5,92(sp)
 8001bcc:	d9000a04 	addi	r4,sp,40
 8001bd0:	80031a00 	call	80031a0 <_Unwind_SjLj_Unregister>
 8001bd4:	d8801717 	ldw	r2,92(sp)
 8001bd8:	dfc02117 	ldw	ra,132(sp)
 8001bdc:	df002017 	ldw	fp,128(sp)
 8001be0:	dec02204 	addi	sp,sp,136
 8001be4:	f800283a 	ret
 8001be8:	d9401817 	ldw	r5,96(sp)
 8001bec:	012f3574 	movhi	r4,48341
 8001bf0:	21354004 	addi	r4,r4,-11008
 8001bf4:	2909883a 	add	r4,r5,r4
 8001bf8:	2145803a 	cmpltu	r2,r4,r5
 8001bfc:	d9401917 	ldw	r5,100(sp)
 8001c00:	d8c01b05 	stb	r3,108(sp)
 8001c04:	00ee2cb4 	movhi	r3,47282
 8001c08:	18eaaf04 	addi	r3,r3,-21828
 8001c0c:	28c7883a 	add	r3,r5,r3
 8001c10:	10c5883a 	add	r2,r2,r3
 8001c14:	10003526 	beq	r2,zero,8001cec <__gxx_personality_sj0+0x18c>
 8001c18:	d8c01a17 	ldw	r3,104(sp)
 8001c1c:	00800184 	movi	r2,6
 8001c20:	18803826 	beq	r3,r2,8001d04 <__gxx_personality_sj0+0x1a4>
 8001c24:	d9002317 	ldw	r4,140(sp)
 8001c28:	00ffffc4 	movi	r3,-1
 8001c2c:	d8c00b15 	stw	r3,44(sp)
 8001c30:	80032440 	call	8003244 <_Unwind_GetLanguageSpecificData>
 8001c34:	d8801915 	stw	r2,100(sp)
 8001c38:	1000a326 	beq	r2,zero,8001ec8 <__gxx_personality_sj0+0x368>
 8001c3c:	d9002317 	ldw	r4,140(sp)
 8001c40:	d9401917 	ldw	r5,100(sp)
 8001c44:	d80d883a 	mov	r6,sp
 8001c48:	00bfffc4 	movi	r2,-1
 8001c4c:	d8800b15 	stw	r2,44(sp)
 8001c50:	8001a2c0 	call	8001a2c <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>
 8001c54:	d9000503 	ldbu	r4,20(sp)
 8001c58:	d9402317 	ldw	r5,140(sp)
 8001c5c:	d8801715 	stw	r2,92(sp)
 8001c60:	80017640 	call	8001764 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 8001c64:	d9002317 	ldw	r4,140(sp)
 8001c68:	d9400804 	addi	r5,sp,32
 8001c6c:	d8800215 	stw	r2,8(sp)
 8001c70:	80032140 	call	8003214 <_Unwind_GetIPInfo>
 8001c74:	d8c00817 	ldw	r3,32(sp)
 8001c78:	1800011e 	bne	r3,zero,8001c80 <__gxx_personality_sj0+0x120>
 8001c7c:	10bfffc4 	addi	r2,r2,-1
 8001c80:	10009116 	blt	r2,zero,8001ec8 <__gxx_personality_sj0+0x368>
 8001c84:	10004c1e 	bne	r2,zero,8001db8 <__gxx_personality_sj0+0x258>
 8001c88:	d8001c15 	stw	zero,112(sp)
 8001c8c:	00800044 	movi	r2,1
 8001c90:	d8001715 	stw	zero,92(sp)
 8001c94:	d8001815 	stw	zero,96(sp)
 8001c98:	d9001a17 	ldw	r4,104(sp)
 8001c9c:	20c0004c 	andi	r3,r4,1
 8001ca0:	18008c26 	beq	r3,zero,8001ed4 <__gxx_personality_sj0+0x374>
 8001ca4:	00c00084 	movi	r3,2
 8001ca8:	10c08726 	beq	r2,r3,8001ec8 <__gxx_personality_sj0+0x368>
 8001cac:	d8801b03 	ldbu	r2,108(sp)
 8001cb0:	1000d21e 	bne	r2,zero,8001ffc <__gxx_personality_sj0+0x49c>
 8001cb4:	d9402217 	ldw	r5,136(sp)
 8001cb8:	d8801717 	ldw	r2,92(sp)
 8001cbc:	d8c01817 	ldw	r3,96(sp)
 8001cc0:	d9001917 	ldw	r4,100(sp)
 8001cc4:	28bffb15 	stw	r2,-20(r5)
 8001cc8:	d8800917 	ldw	r2,36(sp)
 8001ccc:	28fffc15 	stw	r3,-16(r5)
 8001cd0:	00c00184 	movi	r3,6
 8001cd4:	28bfff15 	stw	r2,-4(r5)
 8001cd8:	d8801c17 	ldw	r2,112(sp)
 8001cdc:	293ffd15 	stw	r4,-12(r5)
 8001ce0:	d8c01715 	stw	r3,92(sp)
 8001ce4:	28bffe15 	stw	r2,-8(r5)
 8001ce8:	003fb806 	br	8001bcc <__alt_data_end+0xfc001bcc>
 8001cec:	d8801717 	ldw	r2,92(sp)
 8001cf0:	113fc936 	bltu	r2,r4,8001c18 <__alt_data_end+0xfc001c18>
 8001cf4:	d8c01a17 	ldw	r3,104(sp)
 8001cf8:	d8001b05 	stb	zero,108(sp)
 8001cfc:	00800184 	movi	r2,6
 8001d00:	18bfc81e 	bne	r3,r2,8001c24 <__alt_data_end+0xfc001c24>
 8001d04:	d8801b03 	ldbu	r2,108(sp)
 8001d08:	103fc61e 	bne	r2,zero,8001c24 <__alt_data_end+0xfc001c24>
 8001d0c:	d9002217 	ldw	r4,136(sp)
 8001d10:	d9402217 	ldw	r5,136(sp)
 8001d14:	d8802217 	ldw	r2,136(sp)
 8001d18:	213ffe17 	ldw	r4,-8(r4)
 8001d1c:	297ffb17 	ldw	r5,-20(r5)
 8001d20:	10bffd17 	ldw	r2,-12(r2)
 8001d24:	d9001c15 	stw	r4,112(sp)
 8001d28:	d9401715 	stw	r5,92(sp)
 8001d2c:	d8801915 	stw	r2,100(sp)
 8001d30:	20008726 	beq	r4,zero,8001f50 <__gxx_personality_sj0+0x3f0>
 8001d34:	d8801717 	ldw	r2,92(sp)
 8001d38:	10006f0e 	bge	r2,zero,8001ef8 <__gxx_personality_sj0+0x398>
 8001d3c:	d9002317 	ldw	r4,140(sp)
 8001d40:	d9401917 	ldw	r5,100(sp)
 8001d44:	d80d883a 	mov	r6,sp
 8001d48:	00bfffc4 	movi	r2,-1
 8001d4c:	d8800b15 	stw	r2,44(sp)
 8001d50:	8001a2c0 	call	8001a2c <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>
 8001d54:	d9000503 	ldbu	r4,20(sp)
 8001d58:	d9402317 	ldw	r5,140(sp)
 8001d5c:	80017640 	call	8001764 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 8001d60:	d9000503 	ldbu	r4,20(sp)
 8001d64:	d9402317 	ldw	r5,140(sp)
 8001d68:	d8800215 	stw	r2,8(sp)
 8001d6c:	80017640 	call	8001764 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 8001d70:	d8c02217 	ldw	r3,136(sp)
 8001d74:	18bffe15 	stw	r2,-8(r3)
 8001d78:	00005f06 	br	8001ef8 <__gxx_personality_sj0+0x398>
 8001d7c:	000f883a 	mov	r7,zero
 8001d80:	000d883a 	mov	r6,zero
 8001d84:	19000003 	ldbu	r4,0(r3)
 8001d88:	18c00044 	addi	r3,r3,1
 8001d8c:	d8c01715 	stw	r3,92(sp)
 8001d90:	21401fcc 	andi	r5,r4,127
 8001d94:	298a983a 	sll	r5,r5,r6
 8001d98:	21003fcc 	andi	r4,r4,255
 8001d9c:	2100201c 	xori	r4,r4,128
 8001da0:	213fe004 	addi	r4,r4,-128
 8001da4:	394eb03a 	or	r7,r7,r5
 8001da8:	318001c4 	addi	r6,r6,7
 8001dac:	203ff516 	blt	r4,zero,8001d84 <__alt_data_end+0xfc001d84>
 8001db0:	10bfffc4 	addi	r2,r2,-1
 8001db4:	10000e26 	beq	r2,zero,8001df0 <__gxx_personality_sj0+0x290>
 8001db8:	d8c01717 	ldw	r3,92(sp)
 8001dbc:	0011883a 	mov	r8,zero
 8001dc0:	000d883a 	mov	r6,zero
 8001dc4:	19000003 	ldbu	r4,0(r3)
 8001dc8:	18c00044 	addi	r3,r3,1
 8001dcc:	21401fcc 	andi	r5,r4,127
 8001dd0:	298a983a 	sll	r5,r5,r6
 8001dd4:	21003fcc 	andi	r4,r4,255
 8001dd8:	2100201c 	xori	r4,r4,128
 8001ddc:	213fe004 	addi	r4,r4,-128
 8001de0:	4150b03a 	or	r8,r8,r5
 8001de4:	318001c4 	addi	r6,r6,7
 8001de8:	203ff616 	blt	r4,zero,8001dc4 <__alt_data_end+0xfc001dc4>
 8001dec:	003fe306 	br	8001d7c <__alt_data_end+0xfc001d7c>
 8001df0:	42000044 	addi	r8,r8,1
 8001df4:	da001c15 	stw	r8,112(sp)
 8001df8:	38004f26 	beq	r7,zero,8001f38 <__gxx_personality_sj0+0x3d8>
 8001dfc:	d8800417 	ldw	r2,16(sp)
 8001e00:	39ffffc4 	addi	r7,r7,-1
 8001e04:	11c5883a 	add	r2,r2,r7
 8001e08:	d8801815 	stw	r2,96(sp)
 8001e0c:	40002e26 	beq	r8,zero,8001ec8 <__gxx_personality_sj0+0x368>
 8001e10:	10004b26 	beq	r2,zero,8001f40 <__gxx_personality_sj0+0x3e0>
 8001e14:	d8c01a17 	ldw	r3,104(sp)
 8001e18:	18c0020c 	andi	r3,r3,8
 8001e1c:	d8c01e15 	stw	r3,120(sp)
 8001e20:	1800801e 	bne	r3,zero,8002024 <__gxx_personality_sj0+0x4c4>
 8001e24:	d8801b03 	ldbu	r2,108(sp)
 8001e28:	1000821e 	bne	r2,zero,8002034 <__gxx_personality_sj0+0x4d4>
 8001e2c:	d9002217 	ldw	r4,136(sp)
 8001e30:	20800017 	ldw	r2,0(r4)
 8001e34:	1080004c 	andi	r2,r2,1
 8001e38:	1000821e 	bne	r2,zero,8002044 <__gxx_personality_sj0+0x4e4>
 8001e3c:	d9402217 	ldw	r5,136(sp)
 8001e40:	28800504 	addi	r2,r5,20
 8001e44:	d8800915 	stw	r2,36(sp)
 8001e48:	10bff017 	ldw	r2,-64(r2)
 8001e4c:	d8801d15 	stw	r2,116(sp)
 8001e50:	d9001b03 	ldbu	r4,108(sp)
 8001e54:	d8001b45 	stb	zero,109(sp)
 8001e58:	d9001f15 	stw	r4,124(sp)
 8001e5c:	00000e06 	br	8001e98 <__gxx_personality_sj0+0x338>
 8001e60:	01c03d0e 	bge	zero,r7,8001f58 <__gxx_personality_sj0+0x3f8>
 8001e64:	017fffc4 	movi	r5,-1
 8001e68:	d9400b15 	stw	r5,44(sp)
 8001e6c:	d809883a 	mov	r4,sp
 8001e70:	380b883a 	mov	r5,r7
 8001e74:	80016680 	call	8001668 <_ZL15get_ttype_entryP16lsda_header_infom>
 8001e78:	10004f26 	beq	r2,zero,8001fb8 <__gxx_personality_sj0+0x458>
 8001e7c:	d8c01d17 	ldw	r3,116(sp)
 8001e80:	1800611e 	bne	r3,zero,8002008 <__gxx_personality_sj0+0x4a8>
 8001e84:	d8800617 	ldw	r2,24(sp)
 8001e88:	10005726 	beq	r2,zero,8001fe8 <__gxx_personality_sj0+0x488>
 8001e8c:	d9401717 	ldw	r5,92(sp)
 8001e90:	2885883a 	add	r2,r5,r2
 8001e94:	d8801815 	stw	r2,96(sp)
 8001e98:	d9001817 	ldw	r4,96(sp)
 8001e9c:	d9400704 	addi	r5,sp,28
 8001ea0:	80012d80 	call	80012d8 <_ZL12read_sleb128PKhPl>
 8001ea4:	1009883a 	mov	r4,r2
 8001ea8:	d9400604 	addi	r5,sp,24
 8001eac:	d8801715 	stw	r2,92(sp)
 8001eb0:	80012d80 	call	80012d8 <_ZL12read_sleb128PKhPl>
 8001eb4:	d9c00717 	ldw	r7,28(sp)
 8001eb8:	383fe91e 	bne	r7,zero,8001e60 <__alt_data_end+0xfc001e60>
 8001ebc:	01000044 	movi	r4,1
 8001ec0:	d9001b45 	stb	r4,109(sp)
 8001ec4:	003fef06 	br	8001e84 <__alt_data_end+0xfc001e84>
 8001ec8:	01000204 	movi	r4,8
 8001ecc:	d9001715 	stw	r4,92(sp)
 8001ed0:	003f3e06 	br	8001bcc <__alt_data_end+0xfc001bcc>
 8001ed4:	d9001a17 	ldw	r4,104(sp)
 8001ed8:	20c0020c 	andi	r3,r4,8
 8001edc:	1800021e 	bne	r3,zero,8001ee8 <__gxx_personality_sj0+0x388>
 8001ee0:	d8c01b03 	ldbu	r3,108(sp)
 8001ee4:	18001826 	beq	r3,zero,8001f48 <__gxx_personality_sj0+0x3e8>
 8001ee8:	00c00044 	movi	r3,1
 8001eec:	10c05926 	beq	r2,r3,8002054 <__gxx_personality_sj0+0x4f4>
 8001ef0:	d9401717 	ldw	r5,92(sp)
 8001ef4:	28005816 	blt	r5,zero,8002058 <__gxx_personality_sj0+0x4f8>
 8001ef8:	d9802217 	ldw	r6,136(sp)
 8001efc:	d9002317 	ldw	r4,140(sp)
 8001f00:	00bfffc4 	movi	r2,-1
 8001f04:	000b883a 	mov	r5,zero
 8001f08:	d8800b15 	stw	r2,44(sp)
 8001f0c:	80031e80 	call	80031e8 <_Unwind_SetGR>
 8001f10:	d9002317 	ldw	r4,140(sp)
 8001f14:	d9801717 	ldw	r6,92(sp)
 8001f18:	01400044 	movi	r5,1
 8001f1c:	80031e80 	call	80031e8 <_Unwind_SetGR>
 8001f20:	d9002317 	ldw	r4,140(sp)
 8001f24:	d9401c17 	ldw	r5,112(sp)
 8001f28:	80032340 	call	8003234 <_Unwind_SetIP>
 8001f2c:	010001c4 	movi	r4,7
 8001f30:	d9001715 	stw	r4,92(sp)
 8001f34:	003f2506 	br	8001bcc <__alt_data_end+0xfc001bcc>
 8001f38:	d8c01c17 	ldw	r3,112(sp)
 8001f3c:	183fe226 	beq	r3,zero,8001ec8 <__alt_data_end+0xfc001ec8>
 8001f40:	00800084 	movi	r2,2
 8001f44:	003f5206 	br	8001c90 <__alt_data_end+0xfc001c90>
 8001f48:	00c00044 	movi	r3,1
 8001f4c:	10ff791e 	bne	r2,r3,8001d34 <__alt_data_end+0xfc001d34>
 8001f50:	d9002217 	ldw	r4,136(sp)
 8001f54:	8002b100 	call	8002b10 <__cxa_call_terminate>
 8001f58:	d9001d17 	ldw	r4,116(sp)
 8001f5c:	20000426 	beq	r4,zero,8001f70 <__gxx_personality_sj0+0x410>
 8001f60:	d9401e17 	ldw	r5,120(sp)
 8001f64:	2800021e 	bne	r5,zero,8001f70 <__gxx_personality_sj0+0x410>
 8001f68:	d8801f17 	ldw	r2,124(sp)
 8001f6c:	10001626 	beq	r2,zero,8001fc8 <__gxx_personality_sj0+0x468>
 8001f70:	d8c00317 	ldw	r3,12(sp)
 8001f74:	01ce303a 	nor	r7,zero,r7
 8001f78:	000d883a 	mov	r6,zero
 8001f7c:	19c7883a 	add	r3,r3,r7
 8001f80:	000b883a 	mov	r5,zero
 8001f84:	18800003 	ldbu	r2,0(r3)
 8001f88:	18c00044 	addi	r3,r3,1
 8001f8c:	11001fcc 	andi	r4,r2,127
 8001f90:	2148983a 	sll	r4,r4,r5
 8001f94:	10803fcc 	andi	r2,r2,255
 8001f98:	1080201c 	xori	r2,r2,128
 8001f9c:	10bfe004 	addi	r2,r2,-128
 8001fa0:	310cb03a 	or	r6,r6,r4
 8001fa4:	294001c4 	addi	r5,r5,7
 8001fa8:	103ff616 	blt	r2,zero,8001f84 <__alt_data_end+0xfc001f84>
 8001fac:	3005003a 	cmpeq	r2,r6,zero
 8001fb0:	10803fcc 	andi	r2,r2,255
 8001fb4:	103fb326 	beq	r2,zero,8001e84 <__alt_data_end+0xfc001e84>
 8001fb8:	d8800717 	ldw	r2,28(sp)
 8001fbc:	d8801715 	stw	r2,92(sp)
 8001fc0:	008000c4 	movi	r2,3
 8001fc4:	003f3406 	br	8001c98 <__alt_data_end+0xfc001c98>
 8001fc8:	d9401d17 	ldw	r5,116(sp)
 8001fcc:	d9800917 	ldw	r6,36(sp)
 8001fd0:	00ffffc4 	movi	r3,-1
 8001fd4:	d809883a 	mov	r4,sp
 8001fd8:	d8c00b15 	stw	r3,44(sp)
 8001fdc:	80016bc0 	call	80016bc <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl>
 8001fe0:	1080005c 	xori	r2,r2,1
 8001fe4:	003ff206 	br	8001fb0 <__alt_data_end+0xfc001fb0>
 8001fe8:	d8801b43 	ldbu	r2,109(sp)
 8001fec:	103fb626 	beq	r2,zero,8001ec8 <__alt_data_end+0xfc001ec8>
 8001ff0:	d8001715 	stw	zero,92(sp)
 8001ff4:	00800084 	movi	r2,2
 8001ff8:	003f2706 	br	8001c98 <__alt_data_end+0xfc001c98>
 8001ffc:	00800184 	movi	r2,6
 8002000:	d8801715 	stw	r2,92(sp)
 8002004:	003ef106 	br	8001bcc <__alt_data_end+0xfc001bcc>
 8002008:	1009883a 	mov	r4,r2
 800200c:	180b883a 	mov	r5,r3
 8002010:	d9800904 	addi	r6,sp,36
 8002014:	80013300 	call	8001330 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv>
 8002018:	10803fcc 	andi	r2,r2,255
 800201c:	103fe61e 	bne	r2,zero,8001fb8 <__alt_data_end+0xfc001fb8>
 8002020:	003f9806 	br	8001e84 <__alt_data_end+0xfc001e84>
 8002024:	008200b4 	movhi	r2,2050
 8002028:	10a64204 	addi	r2,r2,-26360
 800202c:	d8801d15 	stw	r2,116(sp)
 8002030:	003f8706 	br	8001e50 <__alt_data_end+0xfc001e50>
 8002034:	00c200b4 	movhi	r3,2050
 8002038:	18e64404 	addi	r3,r3,-26352
 800203c:	d8c01d15 	stw	r3,116(sp)
 8002040:	003f8306 	br	8001e50 <__alt_data_end+0xfc001e50>
 8002044:	20bff517 	ldw	r2,-44(r4)
 8002048:	003f7e06 	br	8001e44 <__alt_data_end+0xfc001e44>
 800204c:	d9000c17 	ldw	r4,48(sp)
 8002050:	800298c0 	call	800298c <__cxa_begin_catch>
 8002054:	80026380 	call	8002638 <_ZSt9terminatev>
 8002058:	d8c00b15 	stw	r3,44(sp)
 800205c:	80026600 	call	8002660 <_ZSt10unexpectedv>

08002060 <__cxa_call_unexpected>:
 8002060:	00820034 	movhi	r2,2048
 8002064:	deffe604 	addi	sp,sp,-104
 8002068:	1086d804 	addi	r2,r2,7008
 800206c:	d8800d15 	stw	r2,52(sp)
 8002070:	00820074 	movhi	r2,2049
 8002074:	109d1f04 	addi	r2,r2,29820
 8002078:	d8800e15 	stw	r2,56(sp)
 800207c:	d8800104 	addi	r2,sp,4
 8002080:	d8800f15 	stw	r2,60(sp)
 8002084:	00820034 	movhi	r2,2048
 8002088:	10883b04 	addi	r2,r2,8428
 800208c:	d9001415 	stw	r4,80(sp)
 8002090:	d9000704 	addi	r4,sp,28
 8002094:	dfc01915 	stw	ra,100(sp)
 8002098:	d8801015 	stw	r2,64(sp)
 800209c:	df001815 	stw	fp,96(sp)
 80020a0:	dec01115 	stw	sp,68(sp)
 80020a4:	80031880 	call	8003188 <_Unwind_SjLj_Register>
 80020a8:	d9001417 	ldw	r4,80(sp)
 80020ac:	800298c0 	call	800298c <__cxa_begin_catch>
 80020b0:	d8c01417 	ldw	r3,80(sp)
 80020b4:	18bffe17 	ldw	r2,-8(r3)
 80020b8:	193ff717 	ldw	r4,-36(r3)
 80020bc:	18fffd17 	ldw	r3,-12(r3)
 80020c0:	d8800315 	stw	r2,12(sp)
 80020c4:	d8c01615 	stw	r3,88(sp)
 80020c8:	d8c01417 	ldw	r3,80(sp)
 80020cc:	18fffb17 	ldw	r3,-20(r3)
 80020d0:	d8c01515 	stw	r3,84(sp)
 80020d4:	d8c01417 	ldw	r3,80(sp)
 80020d8:	18fff817 	ldw	r3,-32(r3)
 80020dc:	d8c01415 	stw	r3,80(sp)
 80020e0:	00c00044 	movi	r3,1
 80020e4:	d8c00815 	stw	r3,32(sp)
 80020e8:	80026500 	call	8002650 <_ZN10__cxxabiv112__unexpectedEPFvvE>
 80020ec:	d8c00917 	ldw	r3,36(sp)
 80020f0:	d8800817 	ldw	r2,32(sp)
 80020f4:	d8c01715 	stw	r3,92(sp)
 80020f8:	10000a26 	beq	r2,zero,8002124 <__cxa_call_unexpected+0xc4>
 80020fc:	10bfffc4 	addi	r2,r2,-1
 8002100:	10000126 	beq	r2,zero,8002108 <__cxa_call_unexpected+0xa8>
 8002104:	003da0fa 	break	3
 8002108:	d8000815 	stw	zero,32(sp)
 800210c:	8002a400 	call	8002a40 <__cxa_end_catch>
 8002110:	8002a400 	call	8002a40 <__cxa_end_catch>
 8002114:	d9001717 	ldw	r4,92(sp)
 8002118:	00bfffc4 	movi	r2,-1
 800211c:	d8800815 	stw	r2,32(sp)
 8002120:	80033840 	call	8003384 <_Unwind_SjLj_Resume>
 8002124:	d9001717 	ldw	r4,92(sp)
 8002128:	800298c0 	call	800298c <__cxa_begin_catch>
 800212c:	80022940 	call	8002294 <__cxa_get_globals_fast>
 8002130:	10800017 	ldw	r2,0(r2)
 8002134:	10c00b17 	ldw	r3,44(r2)
 8002138:	18c0004c 	andi	r3,r3,1
 800213c:	18001e26 	beq	r3,zero,80021b8 <__cxa_call_unexpected+0x158>
 8002140:	10800017 	ldw	r2,0(r2)
 8002144:	d8801715 	stw	r2,92(sp)
 8002148:	d8801517 	ldw	r2,84(sp)
 800214c:	00802b0e 	bge	zero,r2,80021fc <__cxa_call_unexpected+0x19c>
 8002150:	d8c01717 	ldw	r3,92(sp)
 8002154:	d8800317 	ldw	r2,12(sp)
 8002158:	d9801617 	ldw	r6,88(sp)
 800215c:	193ff017 	ldw	r4,-64(r3)
 8002160:	d9c01517 	ldw	r7,84(sp)
 8002164:	d8800015 	stw	r2,0(sp)
 8002168:	180b883a 	mov	r5,r3
 800216c:	00800084 	movi	r2,2
 8002170:	d8800815 	stw	r2,32(sp)
 8002174:	80017ec0 	call	80017ec <_ZL28check_compact_exception_specPKSt9type_infoPvPKhij>
 8002178:	10803fcc 	andi	r2,r2,255
 800217c:	10001e1e 	bne	r2,zero,80021f8 <__cxa_call_unexpected+0x198>
 8002180:	d8800317 	ldw	r2,12(sp)
 8002184:	d9801617 	ldw	r6,88(sp)
 8002188:	d9c01517 	ldw	r7,84(sp)
 800218c:	01020074 	movhi	r4,2049
 8002190:	d8800015 	stw	r2,0(sp)
 8002194:	211e1f04 	addi	r4,r4,30844
 8002198:	00800084 	movi	r2,2
 800219c:	000b883a 	mov	r5,zero
 80021a0:	d8800815 	stw	r2,32(sp)
 80021a4:	80017ec0 	call	80017ec <_ZL28check_compact_exception_specPKSt9type_infoPvPKhij>
 80021a8:	10803fcc 	andi	r2,r2,255
 80021ac:	1000051e 	bne	r2,zero,80021c4 <__cxa_call_unexpected+0x164>
 80021b0:	d9001417 	ldw	r4,80(sp)
 80021b4:	80025780 	call	8002578 <_ZN10__cxxabiv111__terminateEPFvvE>
 80021b8:	10801004 	addi	r2,r2,64
 80021bc:	d8801715 	stw	r2,92(sp)
 80021c0:	003fe106 	br	8002148 <__alt_data_end+0xfc002148>
 80021c4:	01000104 	movi	r4,4
 80021c8:	8002d240 	call	8002d24 <__cxa_allocate_exception>
 80021cc:	00c20074 	movhi	r3,2049
 80021d0:	18de3a04 	addi	r3,r3,30952
 80021d4:	01420074 	movhi	r5,2049
 80021d8:	01820034 	movhi	r6,2048
 80021dc:	10c00015 	stw	r3,0(r2)
 80021e0:	295e1f04 	addi	r5,r5,30844
 80021e4:	00c00084 	movi	r3,2
 80021e8:	318bb904 	addi	r6,r6,12004
 80021ec:	1009883a 	mov	r4,r2
 80021f0:	d8c00815 	stw	r3,32(sp)
 80021f4:	8002bac0 	call	8002bac <__cxa_throw>
 80021f8:	8002c3c0 	call	8002c3c <__cxa_rethrow>
 80021fc:	d9401617 	ldw	r5,88(sp)
 8002200:	00800084 	movi	r2,2
 8002204:	0009883a 	mov	r4,zero
 8002208:	d9800104 	addi	r6,sp,4
 800220c:	d8800815 	stw	r2,32(sp)
 8002210:	8001a2c0 	call	8001a2c <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>
 8002214:	d8801717 	ldw	r2,92(sp)
 8002218:	d9c01517 	ldw	r7,84(sp)
 800221c:	d9000104 	addi	r4,sp,4
 8002220:	117ff017 	ldw	r5,-64(r2)
 8002224:	100d883a 	mov	r6,r2
 8002228:	80016bc0 	call	80016bc <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl>
 800222c:	10803fcc 	andi	r2,r2,255
 8002230:	1000171e 	bne	r2,zero,8002290 <__cxa_call_unexpected+0x230>
 8002234:	d9c01517 	ldw	r7,84(sp)
 8002238:	01420074 	movhi	r5,2049
 800223c:	00800084 	movi	r2,2
 8002240:	295e1f04 	addi	r5,r5,30844
 8002244:	d9000104 	addi	r4,sp,4
 8002248:	000d883a 	mov	r6,zero
 800224c:	d8800815 	stw	r2,32(sp)
 8002250:	80016bc0 	call	80016bc <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl>
 8002254:	10803fcc 	andi	r2,r2,255
 8002258:	103fd526 	beq	r2,zero,80021b0 <__alt_data_end+0xfc0021b0>
 800225c:	01000104 	movi	r4,4
 8002260:	8002d240 	call	8002d24 <__cxa_allocate_exception>
 8002264:	00c20074 	movhi	r3,2049
 8002268:	18de3a04 	addi	r3,r3,30952
 800226c:	01420074 	movhi	r5,2049
 8002270:	01820034 	movhi	r6,2048
 8002274:	10c00015 	stw	r3,0(r2)
 8002278:	295e1f04 	addi	r5,r5,30844
 800227c:	00c00084 	movi	r3,2
 8002280:	318bb904 	addi	r6,r6,12004
 8002284:	1009883a 	mov	r4,r2
 8002288:	d8c00815 	stw	r3,32(sp)
 800228c:	8002bac0 	call	8002bac <__cxa_throw>
 8002290:	8002c3c0 	call	8002c3c <__cxa_rethrow>

08002294 <__cxa_get_globals_fast>:
 8002294:	008200b4 	movhi	r2,2050
 8002298:	10ad8004 	addi	r2,r2,-18944
 800229c:	f800283a 	ret

080022a0 <__cxa_get_globals>:
 80022a0:	008200b4 	movhi	r2,2050
 80022a4:	10ad8004 	addi	r2,r2,-18944
 80022a8:	f800283a 	ret

080022ac <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv>:
 80022ac:	20800017 	ldw	r2,0(r4)
 80022b0:	defffa04 	addi	sp,sp,-24
 80022b4:	dc000415 	stw	r16,16(sp)
 80022b8:	10800617 	ldw	r2,24(r2)
 80022bc:	3021883a 	mov	r16,r6
 80022c0:	31800017 	ldw	r6,0(r6)
 80022c4:	00c00404 	movi	r3,16
 80022c8:	d8c00215 	stw	r3,8(sp)
 80022cc:	dfc00515 	stw	ra,20(sp)
 80022d0:	d8000015 	stw	zero,0(sp)
 80022d4:	d8000115 	stw	zero,4(sp)
 80022d8:	d8000315 	stw	zero,12(sp)
 80022dc:	d80f883a 	mov	r7,sp
 80022e0:	103ee83a 	callr	r2
 80022e4:	d8800117 	ldw	r2,4(sp)
 80022e8:	00c00184 	movi	r3,6
 80022ec:	1080018c 	andi	r2,r2,6
 80022f0:	10c00526 	beq	r2,r3,8002308 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv+0x5c>
 80022f4:	0005883a 	mov	r2,zero
 80022f8:	dfc00517 	ldw	ra,20(sp)
 80022fc:	dc000417 	ldw	r16,16(sp)
 8002300:	dec00604 	addi	sp,sp,24
 8002304:	f800283a 	ret
 8002308:	d8c00017 	ldw	r3,0(sp)
 800230c:	00800044 	movi	r2,1
 8002310:	80c00015 	stw	r3,0(r16)
 8002314:	dfc00517 	ldw	ra,20(sp)
 8002318:	dc000417 	ldw	r16,16(sp)
 800231c:	dec00604 	addi	sp,sp,24
 8002320:	f800283a 	ret

08002324 <_ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_>:
 8002324:	d8800017 	ldw	r2,0(sp)
 8002328:	11800226 	beq	r2,r6,8002334 <_ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_+0x10>
 800232c:	00800044 	movi	r2,1
 8002330:	f800283a 	ret
 8002334:	00800184 	movi	r2,6
 8002338:	f800283a 	ret

0800233c <_ZN10__cxxabiv117__class_type_infoD1Ev>:
 800233c:	00820074 	movhi	r2,2049
 8002340:	109de004 	addi	r2,r2,30592
 8002344:	20800015 	stw	r2,0(r4)
 8002348:	8002cc01 	jmpi	8002cc0 <_ZNSt9type_infoD1Ev>

0800234c <_ZN10__cxxabiv117__class_type_infoD0Ev>:
 800234c:	defffe04 	addi	sp,sp,-8
 8002350:	00820074 	movhi	r2,2049
 8002354:	dc000015 	stw	r16,0(sp)
 8002358:	dfc00115 	stw	ra,4(sp)
 800235c:	109de004 	addi	r2,r2,30592
 8002360:	20800015 	stw	r2,0(r4)
 8002364:	2021883a 	mov	r16,r4
 8002368:	8002cc00 	call	8002cc0 <_ZNSt9type_infoD1Ev>
 800236c:	8009883a 	mov	r4,r16
 8002370:	dfc00117 	ldw	ra,4(sp)
 8002374:	dc000017 	ldw	r16,0(sp)
 8002378:	dec00204 	addi	sp,sp,8
 800237c:	80025741 	jmpi	8002574 <_ZdlPv>

08002380 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE>:
 8002380:	21000117 	ldw	r4,4(r4)
 8002384:	29400117 	ldw	r5,4(r5)
 8002388:	defffd04 	addi	sp,sp,-12
 800238c:	dc400115 	stw	r17,4(sp)
 8002390:	dc000015 	stw	r16,0(sp)
 8002394:	dfc00215 	stw	ra,8(sp)
 8002398:	3023883a 	mov	r17,r6
 800239c:	3821883a 	mov	r16,r7
 80023a0:	21400b26 	beq	r4,r5,80023d0 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE+0x50>
 80023a4:	20c00007 	ldb	r3,0(r4)
 80023a8:	00800a84 	movi	r2,42
 80023ac:	18800226 	beq	r3,r2,80023b8 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE+0x38>
 80023b0:	80044b00 	call	80044b0 <strcmp>
 80023b4:	10000626 	beq	r2,zero,80023d0 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE+0x50>
 80023b8:	0005883a 	mov	r2,zero
 80023bc:	dfc00217 	ldw	ra,8(sp)
 80023c0:	dc400117 	ldw	r17,4(sp)
 80023c4:	dc000017 	ldw	r16,0(sp)
 80023c8:	dec00304 	addi	sp,sp,12
 80023cc:	f800283a 	ret
 80023d0:	00800204 	movi	r2,8
 80023d4:	80800315 	stw	r2,12(r16)
 80023d8:	00800184 	movi	r2,6
 80023dc:	80800115 	stw	r2,4(r16)
 80023e0:	84400015 	stw	r17,0(r16)
 80023e4:	00800044 	movi	r2,1
 80023e8:	003ff406 	br	80023bc <__alt_data_end+0xfc0023bc>

080023ec <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj>:
 80023ec:	20800117 	ldw	r2,4(r4)
 80023f0:	28c00117 	ldw	r3,4(r5)
 80023f4:	10c02926 	beq	r2,r3,800249c <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0xb0>
 80023f8:	defffb04 	addi	sp,sp,-20
 80023fc:	dcc00315 	stw	r19,12(sp)
 8002400:	dc800215 	stw	r18,8(sp)
 8002404:	dc400115 	stw	r17,4(sp)
 8002408:	dc000015 	stw	r16,0(sp)
 800240c:	dfc00415 	stw	ra,16(sp)
 8002410:	2821883a 	mov	r16,r5
 8002414:	11400007 	ldb	r5,0(r2)
 8002418:	2025883a 	mov	r18,r4
 800241c:	01000a84 	movi	r4,42
 8002420:	3823883a 	mov	r17,r7
 8002424:	3027883a 	mov	r19,r6
 8002428:	29000426 	beq	r5,r4,800243c <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x50>
 800242c:	1009883a 	mov	r4,r2
 8002430:	180b883a 	mov	r5,r3
 8002434:	80044b00 	call	80044b0 <strcmp>
 8002438:	10000a26 	beq	r2,zero,8002464 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x78>
 800243c:	008000c4 	movi	r2,3
 8002440:	14400a2e 	bgeu	r2,r17,800246c <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x80>
 8002444:	0005883a 	mov	r2,zero
 8002448:	dfc00417 	ldw	ra,16(sp)
 800244c:	dcc00317 	ldw	r19,12(sp)
 8002450:	dc800217 	ldw	r18,8(sp)
 8002454:	dc400117 	ldw	r17,4(sp)
 8002458:	dc000017 	ldw	r16,0(sp)
 800245c:	dec00504 	addi	sp,sp,20
 8002460:	f800283a 	ret
 8002464:	00800044 	movi	r2,1
 8002468:	003ff706 	br	8002448 <__alt_data_end+0xfc002448>
 800246c:	80800017 	ldw	r2,0(r16)
 8002470:	8009883a 	mov	r4,r16
 8002474:	900b883a 	mov	r5,r18
 8002478:	10800517 	ldw	r2,20(r2)
 800247c:	980d883a 	mov	r6,r19
 8002480:	dfc00417 	ldw	ra,16(sp)
 8002484:	dcc00317 	ldw	r19,12(sp)
 8002488:	dc800217 	ldw	r18,8(sp)
 800248c:	dc400117 	ldw	r17,4(sp)
 8002490:	dc000017 	ldw	r16,0(sp)
 8002494:	dec00504 	addi	sp,sp,20
 8002498:	1000683a 	jmp	r2
 800249c:	00800044 	movi	r2,1
 80024a0:	f800283a 	ret

080024a4 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE>:
 80024a4:	defffb04 	addi	sp,sp,-20
 80024a8:	dc400315 	stw	r17,12(sp)
 80024ac:	d8800717 	ldw	r2,28(sp)
 80024b0:	dc400517 	ldw	r17,20(sp)
 80024b4:	dc000215 	stw	r16,8(sp)
 80024b8:	dfc00415 	stw	ra,16(sp)
 80024bc:	24000117 	ldw	r16,4(r4)
 80024c0:	88801026 	beq	r17,r2,8002504 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x60>
 80024c4:	39400117 	ldw	r5,4(r7)
 80024c8:	81401d26 	beq	r16,r5,8002540 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x9c>
 80024cc:	80c00007 	ldb	r3,0(r16)
 80024d0:	00800a84 	movi	r2,42
 80024d4:	18800526 	beq	r3,r2,80024ec <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x48>
 80024d8:	8009883a 	mov	r4,r16
 80024dc:	d9800115 	stw	r6,4(sp)
 80024e0:	80044b00 	call	80044b0 <strcmp>
 80024e4:	d9800117 	ldw	r6,4(sp)
 80024e8:	10001526 	beq	r2,zero,8002540 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x9c>
 80024ec:	0005883a 	mov	r2,zero
 80024f0:	dfc00417 	ldw	ra,16(sp)
 80024f4:	dc400317 	ldw	r17,12(sp)
 80024f8:	dc000217 	ldw	r16,8(sp)
 80024fc:	dec00504 	addi	sp,sp,20
 8002500:	f800283a 	ret
 8002504:	d8800617 	ldw	r2,24(sp)
 8002508:	11400117 	ldw	r5,4(r2)
 800250c:	81401326 	beq	r16,r5,800255c <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0xb8>
 8002510:	80c00007 	ldb	r3,0(r16)
 8002514:	00800a84 	movi	r2,42
 8002518:	18801326 	beq	r3,r2,8002568 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0xc4>
 800251c:	8009883a 	mov	r4,r16
 8002520:	d9800115 	stw	r6,4(sp)
 8002524:	d9c00015 	stw	r7,0(sp)
 8002528:	80044b00 	call	80044b0 <strcmp>
 800252c:	d9800117 	ldw	r6,4(sp)
 8002530:	d9c00017 	ldw	r7,0(sp)
 8002534:	10000926 	beq	r2,zero,800255c <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0xb8>
 8002538:	39400117 	ldw	r5,4(r7)
 800253c:	817fe61e 	bne	r16,r5,80024d8 <__alt_data_end+0xfc0024d8>
 8002540:	d8800817 	ldw	r2,32(sp)
 8002544:	d8c00817 	ldw	r3,32(sp)
 8002548:	14400015 	stw	r17,0(r2)
 800254c:	11800115 	stw	r6,4(r2)
 8002550:	00800044 	movi	r2,1
 8002554:	18800315 	stw	r2,12(r3)
 8002558:	003fe406 	br	80024ec <__alt_data_end+0xfc0024ec>
 800255c:	d8800817 	ldw	r2,32(sp)
 8002560:	11800215 	stw	r6,8(r2)
 8002564:	003fe106 	br	80024ec <__alt_data_end+0xfc0024ec>
 8002568:	38800117 	ldw	r2,4(r7)
 800256c:	80bfdf1e 	bne	r16,r2,80024ec <__alt_data_end+0xfc0024ec>
 8002570:	003ff306 	br	8002540 <__alt_data_end+0xfc002540>

08002574 <_ZdlPv>:
 8002574:	80035041 	jmpi	8003504 <free>

08002578 <_ZN10__cxxabiv111__terminateEPFvvE>:
 8002578:	00820034 	movhi	r2,2048
 800257c:	deffef04 	addi	sp,sp,-68
 8002580:	1086d804 	addi	r2,r2,7008
 8002584:	d8800615 	stw	r2,24(sp)
 8002588:	00820074 	movhi	r2,2049
 800258c:	109d2304 	addi	r2,r2,29836
 8002590:	d8800715 	stw	r2,28(sp)
 8002594:	00820034 	movhi	r2,2048
 8002598:	10897404 	addi	r2,r2,9680
 800259c:	d9000d15 	stw	r4,52(sp)
 80025a0:	d809883a 	mov	r4,sp
 80025a4:	d8800915 	stw	r2,36(sp)
 80025a8:	dfc01015 	stw	ra,64(sp)
 80025ac:	df000f15 	stw	fp,60(sp)
 80025b0:	dec00815 	stw	sp,32(sp)
 80025b4:	dec00a15 	stw	sp,40(sp)
 80025b8:	80031880 	call	8003188 <_Unwind_SjLj_Register>
 80025bc:	00800044 	movi	r2,1
 80025c0:	d8800115 	stw	r2,4(sp)
 80025c4:	d8800d17 	ldw	r2,52(sp)
 80025c8:	103ee83a 	callr	r2
 80025cc:	80034a00 	call	80034a0 <abort>
 80025d0:	d8c00217 	ldw	r3,8(sp)
 80025d4:	d8800117 	ldw	r2,4(sp)
 80025d8:	d8c00d15 	stw	r3,52(sp)
 80025dc:	d8c00317 	ldw	r3,12(sp)
 80025e0:	d8c00e15 	stw	r3,56(sp)
 80025e4:	10000b26 	beq	r2,zero,8002614 <_ZN10__cxxabiv111__terminateEPFvvE+0x9c>
 80025e8:	10bfffc4 	addi	r2,r2,-1
 80025ec:	10000126 	beq	r2,zero,80025f4 <_ZN10__cxxabiv111__terminateEPFvvE+0x7c>
 80025f0:	003da0fa 	break	3
 80025f4:	d8000115 	stw	zero,4(sp)
 80025f8:	8002a400 	call	8002a40 <__cxa_end_catch>
 80025fc:	d8c00e17 	ldw	r3,56(sp)
 8002600:	00bfffc4 	movi	r2,-1
 8002604:	18800826 	beq	r3,r2,8002628 <_ZN10__cxxabiv111__terminateEPFvvE+0xb0>
 8002608:	d9000d17 	ldw	r4,52(sp)
 800260c:	d8800115 	stw	r2,4(sp)
 8002610:	80033840 	call	8003384 <_Unwind_SjLj_Resume>
 8002614:	d9000d17 	ldw	r4,52(sp)
 8002618:	800298c0 	call	800298c <__cxa_begin_catch>
 800261c:	00800084 	movi	r2,2
 8002620:	d8800115 	stw	r2,4(sp)
 8002624:	80034a00 	call	80034a0 <abort>
 8002628:	d8800e17 	ldw	r2,56(sp)
 800262c:	d9000d17 	ldw	r4,52(sp)
 8002630:	d8800115 	stw	r2,4(sp)
 8002634:	80020600 	call	8002060 <__cxa_call_unexpected>

08002638 <_ZSt9terminatev>:
 8002638:	008200b4 	movhi	r2,2050
 800263c:	10a63d04 	addi	r2,r2,-26380
 8002640:	11000017 	ldw	r4,0(r2)
 8002644:	deffff04 	addi	sp,sp,-4
 8002648:	dfc00015 	stw	ra,0(sp)
 800264c:	80025780 	call	8002578 <_ZN10__cxxabiv111__terminateEPFvvE>

08002650 <_ZN10__cxxabiv112__unexpectedEPFvvE>:
 8002650:	deffff04 	addi	sp,sp,-4
 8002654:	dfc00015 	stw	ra,0(sp)
 8002658:	203ee83a 	callr	r4
 800265c:	80026380 	call	8002638 <_ZSt9terminatev>

08002660 <_ZSt10unexpectedv>:
 8002660:	008200b4 	movhi	r2,2050
 8002664:	10a64604 	addi	r2,r2,-26344
 8002668:	11000017 	ldw	r4,0(r2)
 800266c:	deffff04 	addi	sp,sp,-4
 8002670:	dfc00015 	stw	ra,0(sp)
 8002674:	80026500 	call	8002650 <_ZN10__cxxabiv112__unexpectedEPFvvE>

08002678 <_ZSt13set_terminatePFvvE>:
 8002678:	00c200b4 	movhi	r3,2050
 800267c:	18e63d04 	addi	r3,r3,-26380
 8002680:	18800017 	ldw	r2,0(r3)
 8002684:	19000015 	stw	r4,0(r3)
 8002688:	f800283a 	ret

0800268c <_ZSt13get_terminatev>:
 800268c:	008200b4 	movhi	r2,2050
 8002690:	10a63d04 	addi	r2,r2,-26380
 8002694:	10800017 	ldw	r2,0(r2)
 8002698:	f800283a 	ret

0800269c <_ZSt14set_unexpectedPFvvE>:
 800269c:	00c200b4 	movhi	r3,2050
 80026a0:	18e64604 	addi	r3,r3,-26344
 80026a4:	18800017 	ldw	r2,0(r3)
 80026a8:	19000015 	stw	r4,0(r3)
 80026ac:	f800283a 	ret

080026b0 <_ZSt14get_unexpectedv>:
 80026b0:	008200b4 	movhi	r2,2050
 80026b4:	10a64604 	addi	r2,r2,-26344
 80026b8:	10800017 	ldw	r2,0(r2)
 80026bc:	f800283a 	ret

080026c0 <_ZN10__cxxabiv120__si_class_type_infoD1Ev>:
 80026c0:	00820074 	movhi	r2,2049
 80026c4:	109df804 	addi	r2,r2,30688
 80026c8:	20800015 	stw	r2,0(r4)
 80026cc:	800233c1 	jmpi	800233c <_ZN10__cxxabiv117__class_type_infoD1Ev>

080026d0 <_ZN10__cxxabiv120__si_class_type_infoD0Ev>:
 80026d0:	defffe04 	addi	sp,sp,-8
 80026d4:	00820074 	movhi	r2,2049
 80026d8:	dc000015 	stw	r16,0(sp)
 80026dc:	dfc00115 	stw	ra,4(sp)
 80026e0:	109df804 	addi	r2,r2,30688
 80026e4:	20800015 	stw	r2,0(r4)
 80026e8:	2021883a 	mov	r16,r4
 80026ec:	800233c0 	call	800233c <_ZN10__cxxabiv117__class_type_infoD1Ev>
 80026f0:	8009883a 	mov	r4,r16
 80026f4:	dfc00117 	ldw	ra,4(sp)
 80026f8:	dc000017 	ldw	r16,0(sp)
 80026fc:	dec00204 	addi	sp,sp,8
 8002700:	80025741 	jmpi	8002574 <_ZdlPv>

08002704 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE>:
 8002704:	defff504 	addi	sp,sp,-44
 8002708:	dc000115 	stw	r16,4(sp)
 800270c:	38800117 	ldw	r2,4(r7)
 8002710:	24000117 	ldw	r16,4(r4)
 8002714:	ddc00815 	stw	r23,32(sp)
 8002718:	dd800715 	stw	r22,28(sp)
 800271c:	dd400615 	stw	r21,24(sp)
 8002720:	dd000515 	stw	r20,20(sp)
 8002724:	dcc00415 	stw	r19,16(sp)
 8002728:	dc800315 	stw	r18,12(sp)
 800272c:	dc400215 	stw	r17,8(sp)
 8002730:	dfc00a15 	stw	ra,40(sp)
 8002734:	df000915 	stw	fp,36(sp)
 8002738:	202b883a 	mov	r21,r4
 800273c:	382d883a 	mov	r22,r7
 8002740:	2823883a 	mov	r17,r5
 8002744:	dc800b17 	ldw	r18,44(sp)
 8002748:	ddc00c17 	ldw	r23,48(sp)
 800274c:	dd000d17 	ldw	r20,52(sp)
 8002750:	dcc00e17 	ldw	r19,56(sp)
 8002754:	80801f26 	beq	r16,r2,80027d4 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xd0>
 8002758:	87000007 	ldb	fp,0(r16)
 800275c:	00c00a84 	movi	r3,42
 8002760:	e0c00626 	beq	fp,r3,800277c <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x78>
 8002764:	8009883a 	mov	r4,r16
 8002768:	100b883a 	mov	r5,r2
 800276c:	d9800015 	stw	r6,0(sp)
 8002770:	80044b00 	call	80044b0 <strcmp>
 8002774:	d9800017 	ldw	r6,0(sp)
 8002778:	10001626 	beq	r2,zero,80027d4 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xd0>
 800277c:	95002c26 	beq	r18,r20,8002830 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x12c>
 8002780:	a9000217 	ldw	r4,8(r21)
 8002784:	880b883a 	mov	r5,r17
 8002788:	b00f883a 	mov	r7,r22
 800278c:	20800017 	ldw	r2,0(r4)
 8002790:	dc800b15 	stw	r18,44(sp)
 8002794:	ddc00c15 	stw	r23,48(sp)
 8002798:	dd000d15 	stw	r20,52(sp)
 800279c:	dcc00e15 	stw	r19,56(sp)
 80027a0:	10800717 	ldw	r2,28(r2)
 80027a4:	dfc00a17 	ldw	ra,40(sp)
 80027a8:	df000917 	ldw	fp,36(sp)
 80027ac:	ddc00817 	ldw	r23,32(sp)
 80027b0:	dd800717 	ldw	r22,28(sp)
 80027b4:	dd400617 	ldw	r21,24(sp)
 80027b8:	dd000517 	ldw	r20,20(sp)
 80027bc:	dcc00417 	ldw	r19,16(sp)
 80027c0:	dc800317 	ldw	r18,12(sp)
 80027c4:	dc400217 	ldw	r17,8(sp)
 80027c8:	dc000117 	ldw	r16,4(sp)
 80027cc:	dec00b04 	addi	sp,sp,44
 80027d0:	1000683a 	jmp	r2
 80027d4:	9c800015 	stw	r18,0(r19)
 80027d8:	99800115 	stw	r6,4(r19)
 80027dc:	88001116 	blt	r17,zero,8002824 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x120>
 80027e0:	9463883a 	add	r17,r18,r17
 80027e4:	a4401d26 	beq	r20,r17,800285c <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x158>
 80027e8:	00800044 	movi	r2,1
 80027ec:	98800315 	stw	r2,12(r19)
 80027f0:	0005883a 	mov	r2,zero
 80027f4:	dfc00a17 	ldw	ra,40(sp)
 80027f8:	df000917 	ldw	fp,36(sp)
 80027fc:	ddc00817 	ldw	r23,32(sp)
 8002800:	dd800717 	ldw	r22,28(sp)
 8002804:	dd400617 	ldw	r21,24(sp)
 8002808:	dd000517 	ldw	r20,20(sp)
 800280c:	dcc00417 	ldw	r19,16(sp)
 8002810:	dc800317 	ldw	r18,12(sp)
 8002814:	dc400217 	ldw	r17,8(sp)
 8002818:	dc000117 	ldw	r16,4(sp)
 800281c:	dec00b04 	addi	sp,sp,44
 8002820:	f800283a 	ret
 8002824:	00bfff84 	movi	r2,-2
 8002828:	88bff11e 	bne	r17,r2,80027f0 <__alt_data_end+0xfc0027f0>
 800282c:	003fee06 	br	80027e8 <__alt_data_end+0xfc0027e8>
 8002830:	b9400117 	ldw	r5,4(r23)
 8002834:	81400726 	beq	r16,r5,8002854 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x150>
 8002838:	00800a84 	movi	r2,42
 800283c:	e0bfd026 	beq	fp,r2,8002780 <__alt_data_end+0xfc002780>
 8002840:	8009883a 	mov	r4,r16
 8002844:	d9800015 	stw	r6,0(sp)
 8002848:	80044b00 	call	80044b0 <strcmp>
 800284c:	d9800017 	ldw	r6,0(sp)
 8002850:	103fcb1e 	bne	r2,zero,8002780 <__alt_data_end+0xfc002780>
 8002854:	99800215 	stw	r6,8(r19)
 8002858:	003fe506 	br	80027f0 <__alt_data_end+0xfc0027f0>
 800285c:	00800184 	movi	r2,6
 8002860:	003fe206 	br	80027ec <__alt_data_end+0xfc0027ec>

08002864 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_>:
 8002864:	defffa04 	addi	sp,sp,-24
 8002868:	dc000215 	stw	r16,8(sp)
 800286c:	dc000617 	ldw	r16,24(sp)
 8002870:	dc800415 	stw	r18,16(sp)
 8002874:	dc400315 	stw	r17,12(sp)
 8002878:	dfc00515 	stw	ra,20(sp)
 800287c:	2023883a 	mov	r17,r4
 8002880:	2825883a 	mov	r18,r5
 8002884:	81800b26 	beq	r16,r6,80028b4 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x50>
 8002888:	89000217 	ldw	r4,8(r17)
 800288c:	900b883a 	mov	r5,r18
 8002890:	20800017 	ldw	r2,0(r4)
 8002894:	dc000615 	stw	r16,24(sp)
 8002898:	10800817 	ldw	r2,32(r2)
 800289c:	dfc00517 	ldw	ra,20(sp)
 80028a0:	dc800417 	ldw	r18,16(sp)
 80028a4:	dc400317 	ldw	r17,12(sp)
 80028a8:	dc000217 	ldw	r16,8(sp)
 80028ac:	dec00604 	addi	sp,sp,24
 80028b0:	1000683a 	jmp	r2
 80028b4:	21000117 	ldw	r4,4(r4)
 80028b8:	39400117 	ldw	r5,4(r7)
 80028bc:	21400926 	beq	r4,r5,80028e4 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x80>
 80028c0:	20c00007 	ldb	r3,0(r4)
 80028c4:	00800a84 	movi	r2,42
 80028c8:	18bfef26 	beq	r3,r2,8002888 <__alt_data_end+0xfc002888>
 80028cc:	d9800015 	stw	r6,0(sp)
 80028d0:	d9c00115 	stw	r7,4(sp)
 80028d4:	80044b00 	call	80044b0 <strcmp>
 80028d8:	d9800017 	ldw	r6,0(sp)
 80028dc:	d9c00117 	ldw	r7,4(sp)
 80028e0:	103fe91e 	bne	r2,zero,8002888 <__alt_data_end+0xfc002888>
 80028e4:	00800184 	movi	r2,6
 80028e8:	dfc00517 	ldw	ra,20(sp)
 80028ec:	dc800417 	ldw	r18,16(sp)
 80028f0:	dc400317 	ldw	r17,12(sp)
 80028f4:	dc000217 	ldw	r16,8(sp)
 80028f8:	dec00604 	addi	sp,sp,24
 80028fc:	f800283a 	ret

08002900 <_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE>:
 8002900:	defffb04 	addi	sp,sp,-20
 8002904:	dcc00315 	stw	r19,12(sp)
 8002908:	dc800215 	stw	r18,8(sp)
 800290c:	dc400115 	stw	r17,4(sp)
 8002910:	dc000015 	stw	r16,0(sp)
 8002914:	dfc00415 	stw	ra,16(sp)
 8002918:	2027883a 	mov	r19,r4
 800291c:	2825883a 	mov	r18,r5
 8002920:	3023883a 	mov	r17,r6
 8002924:	3821883a 	mov	r16,r7
 8002928:	80023800 	call	8002380 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE>
 800292c:	10c03fcc 	andi	r3,r2,255
 8002930:	18000726 	beq	r3,zero,8002950 <_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x50>
 8002934:	dfc00417 	ldw	ra,16(sp)
 8002938:	dcc00317 	ldw	r19,12(sp)
 800293c:	dc800217 	ldw	r18,8(sp)
 8002940:	dc400117 	ldw	r17,4(sp)
 8002944:	dc000017 	ldw	r16,0(sp)
 8002948:	dec00504 	addi	sp,sp,20
 800294c:	f800283a 	ret
 8002950:	99000217 	ldw	r4,8(r19)
 8002954:	900b883a 	mov	r5,r18
 8002958:	880d883a 	mov	r6,r17
 800295c:	20800017 	ldw	r2,0(r4)
 8002960:	800f883a 	mov	r7,r16
 8002964:	10800617 	ldw	r2,24(r2)
 8002968:	dfc00417 	ldw	ra,16(sp)
 800296c:	dcc00317 	ldw	r19,12(sp)
 8002970:	dc800217 	ldw	r18,8(sp)
 8002974:	dc400117 	ldw	r17,4(sp)
 8002978:	dc000017 	ldw	r16,0(sp)
 800297c:	dec00504 	addi	sp,sp,20
 8002980:	1000683a 	jmp	r2

08002984 <__cxa_get_exception_ptr>:
 8002984:	20bfff17 	ldw	r2,-4(r4)
 8002988:	f800283a 	ret

0800298c <__cxa_begin_catch>:
 800298c:	defffe04 	addi	sp,sp,-8
 8002990:	dc000015 	stw	r16,0(sp)
 8002994:	dfc00115 	stw	ra,4(sp)
 8002998:	2021883a 	mov	r16,r4
 800299c:	80022a00 	call	80022a0 <__cxa_get_globals>
 80029a0:	81000017 	ldw	r4,0(r16)
 80029a4:	80c00117 	ldw	r3,4(r16)
 80029a8:	01af3574 	movhi	r6,48341
 80029ac:	31b54004 	addi	r6,r6,-11008
 80029b0:	016e2cb4 	movhi	r5,47282
 80029b4:	296aaf04 	addi	r5,r5,-21828
 80029b8:	218d883a 	add	r6,r4,r6
 80029bc:	3109803a 	cmpltu	r4,r6,r4
 80029c0:	1947883a 	add	r3,r3,r5
 80029c4:	20c7883a 	add	r3,r4,r3
 80029c8:	817ff504 	addi	r5,r16,-44
 80029cc:	11000017 	ldw	r4,0(r2)
 80029d0:	18000726 	beq	r3,zero,80029f0 <__cxa_begin_catch+0x64>
 80029d4:	2000191e 	bne	r4,zero,8002a3c <__cxa_begin_catch+0xb0>
 80029d8:	11400015 	stw	r5,0(r2)
 80029dc:	0005883a 	mov	r2,zero
 80029e0:	dfc00117 	ldw	ra,4(sp)
 80029e4:	dc000017 	ldw	r16,0(sp)
 80029e8:	dec00204 	addi	sp,sp,8
 80029ec:	f800283a 	ret
 80029f0:	01c00044 	movi	r7,1
 80029f4:	39bff736 	bltu	r7,r6,80029d4 <__alt_data_end+0xfc0029d4>
 80029f8:	80fffa17 	ldw	r3,-24(r16)
 80029fc:	18000d16 	blt	r3,zero,8002a34 <__cxa_begin_catch+0xa8>
 8002a00:	18c00044 	addi	r3,r3,1
 8002a04:	11800117 	ldw	r6,4(r2)
 8002a08:	80fffa15 	stw	r3,-24(r16)
 8002a0c:	30ffffc4 	addi	r3,r6,-1
 8002a10:	10c00115 	stw	r3,4(r2)
 8002a14:	21400226 	beq	r4,r5,8002a20 <__cxa_begin_catch+0x94>
 8002a18:	813ff915 	stw	r4,-28(r16)
 8002a1c:	11400015 	stw	r5,0(r2)
 8002a20:	80bfff17 	ldw	r2,-4(r16)
 8002a24:	dfc00117 	ldw	ra,4(sp)
 8002a28:	dc000017 	ldw	r16,0(sp)
 8002a2c:	dec00204 	addi	sp,sp,8
 8002a30:	f800283a 	ret
 8002a34:	38c7c83a 	sub	r3,r7,r3
 8002a38:	003ff206 	br	8002a04 <__alt_data_end+0xfc002a04>
 8002a3c:	80026380 	call	8002638 <_ZSt9terminatev>

08002a40 <__cxa_end_catch>:
 8002a40:	deffff04 	addi	sp,sp,-4
 8002a44:	dfc00015 	stw	ra,0(sp)
 8002a48:	80022940 	call	8002294 <__cxa_get_globals_fast>
 8002a4c:	11000017 	ldw	r4,0(r2)
 8002a50:	20001326 	beq	r4,zero,8002aa0 <__cxa_end_catch+0x60>
 8002a54:	21400b17 	ldw	r5,44(r4)
 8002a58:	01ef3574 	movhi	r7,48341
 8002a5c:	39f54004 	addi	r7,r7,-11008
 8002a60:	29cf883a 	add	r7,r5,r7
 8002a64:	20c00c17 	ldw	r3,48(r4)
 8002a68:	394d803a 	cmpltu	r6,r7,r5
 8002a6c:	016e2cb4 	movhi	r5,47282
 8002a70:	296aaf04 	addi	r5,r5,-21828
 8002a74:	1947883a 	add	r3,r3,r5
 8002a78:	30c7883a 	add	r3,r6,r3
 8002a7c:	18000b1e 	bne	r3,zero,8002aac <__cxa_end_catch+0x6c>
 8002a80:	00c00044 	movi	r3,1
 8002a84:	19c00936 	bltu	r3,r7,8002aac <__cxa_end_catch+0x6c>
 8002a88:	20c00517 	ldw	r3,20(r4)
 8002a8c:	18000c16 	blt	r3,zero,8002ac0 <__cxa_end_catch+0x80>
 8002a90:	197fffc4 	addi	r5,r3,-1
 8002a94:	28000f26 	beq	r5,zero,8002ad4 <__cxa_end_catch+0x94>
 8002a98:	18001426 	beq	r3,zero,8002aec <__cxa_end_catch+0xac>
 8002a9c:	21400515 	stw	r5,20(r4)
 8002aa0:	dfc00017 	ldw	ra,0(sp)
 8002aa4:	dec00104 	addi	sp,sp,4
 8002aa8:	f800283a 	ret
 8002aac:	21000b04 	addi	r4,r4,44
 8002ab0:	10000015 	stw	zero,0(r2)
 8002ab4:	dfc00017 	ldw	ra,0(sp)
 8002ab8:	dec00104 	addi	sp,sp,4
 8002abc:	80034141 	jmpi	8003414 <_Unwind_DeleteException>
 8002ac0:	19400044 	addi	r5,r3,1
 8002ac4:	283ff51e 	bne	r5,zero,8002a9c <__alt_data_end+0xfc002a9c>
 8002ac8:	20c00417 	ldw	r3,16(r4)
 8002acc:	10c00015 	stw	r3,0(r2)
 8002ad0:	003ff206 	br	8002a9c <__alt_data_end+0xfc002a9c>
 8002ad4:	20c00417 	ldw	r3,16(r4)
 8002ad8:	21000b04 	addi	r4,r4,44
 8002adc:	10c00015 	stw	r3,0(r2)
 8002ae0:	dfc00017 	ldw	ra,0(sp)
 8002ae4:	dec00104 	addi	sp,sp,4
 8002ae8:	80034141 	jmpi	8003414 <_Unwind_DeleteException>
 8002aec:	80026380 	call	8002638 <_ZSt9terminatev>

08002af0 <_ZSt18uncaught_exceptionv>:
 8002af0:	deffff04 	addi	sp,sp,-4
 8002af4:	dfc00015 	stw	ra,0(sp)
 8002af8:	80022a00 	call	80022a0 <__cxa_get_globals>
 8002afc:	10800117 	ldw	r2,4(r2)
 8002b00:	1004c03a 	cmpne	r2,r2,zero
 8002b04:	dfc00017 	ldw	ra,0(sp)
 8002b08:	dec00104 	addi	sp,sp,4
 8002b0c:	f800283a 	ret

08002b10 <__cxa_call_terminate>:
 8002b10:	defffe04 	addi	sp,sp,-8
 8002b14:	dc000015 	stw	r16,0(sp)
 8002b18:	dfc00115 	stw	ra,4(sp)
 8002b1c:	2021883a 	mov	r16,r4
 8002b20:	20000c26 	beq	r4,zero,8002b54 <__cxa_call_terminate+0x44>
 8002b24:	800298c0 	call	800298c <__cxa_begin_catch>
 8002b28:	80c00017 	ldw	r3,0(r16)
 8002b2c:	012f3574 	movhi	r4,48341
 8002b30:	21354004 	addi	r4,r4,-11008
 8002b34:	1909883a 	add	r4,r3,r4
 8002b38:	80800117 	ldw	r2,4(r16)
 8002b3c:	20cb803a 	cmpltu	r5,r4,r3
 8002b40:	00ee2cb4 	movhi	r3,47282
 8002b44:	18eaaf04 	addi	r3,r3,-21828
 8002b48:	10c5883a 	add	r2,r2,r3
 8002b4c:	2885883a 	add	r2,r5,r2
 8002b50:	10000126 	beq	r2,zero,8002b58 <__cxa_call_terminate+0x48>
 8002b54:	80026380 	call	8002638 <_ZSt9terminatev>
 8002b58:	00800044 	movi	r2,1
 8002b5c:	113ffd36 	bltu	r2,r4,8002b54 <__alt_data_end+0xfc002b54>
 8002b60:	813ff817 	ldw	r4,-32(r16)
 8002b64:	80025780 	call	8002578 <_ZN10__cxxabiv111__terminateEPFvvE>

08002b68 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception>:
 8002b68:	defffe04 	addi	sp,sp,-8
 8002b6c:	dfc00115 	stw	ra,4(sp)
 8002b70:	dc000015 	stw	r16,0(sp)
 8002b74:	00800044 	movi	r2,1
 8002b78:	11000a36 	bltu	r2,r4,8002ba4 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception+0x3c>
 8002b7c:	28bff617 	ldw	r2,-40(r5)
 8002b80:	2c000504 	addi	r16,r5,20
 8002b84:	10000226 	beq	r2,zero,8002b90 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception+0x28>
 8002b88:	8009883a 	mov	r4,r16
 8002b8c:	103ee83a 	callr	r2
 8002b90:	8009883a 	mov	r4,r16
 8002b94:	dfc00117 	ldw	ra,4(sp)
 8002b98:	dc000017 	ldw	r16,0(sp)
 8002b9c:	dec00204 	addi	sp,sp,8
 8002ba0:	8002dc81 	jmpi	8002dc8 <__cxa_free_exception>
 8002ba4:	293ff817 	ldw	r4,-32(r5)
 8002ba8:	80025780 	call	8002578 <_ZN10__cxxabiv111__terminateEPFvvE>

08002bac <__cxa_throw>:
 8002bac:	defffb04 	addi	sp,sp,-20
 8002bb0:	dfc00415 	stw	ra,16(sp)
 8002bb4:	dcc00315 	stw	r19,12(sp)
 8002bb8:	dc800215 	stw	r18,8(sp)
 8002bbc:	2827883a 	mov	r19,r5
 8002bc0:	3025883a 	mov	r18,r6
 8002bc4:	dc400115 	stw	r17,4(sp)
 8002bc8:	dc000015 	stw	r16,0(sp)
 8002bcc:	2021883a 	mov	r16,r4
 8002bd0:	80022a00 	call	80022a0 <__cxa_get_globals>
 8002bd4:	10c00117 	ldw	r3,4(r2)
 8002bd8:	847ffb04 	addi	r17,r16,-20
 8002bdc:	18c00044 	addi	r3,r3,1
 8002be0:	10c00115 	stw	r3,4(r2)
 8002be4:	00800044 	movi	r2,1
 8002be8:	80bfef15 	stw	r2,-68(r16)
 8002bec:	84fff015 	stw	r19,-64(r16)
 8002bf0:	84bff115 	stw	r18,-60(r16)
 8002bf4:	80026b00 	call	80026b0 <_ZSt14get_unexpectedv>
 8002bf8:	80bff215 	stw	r2,-56(r16)
 8002bfc:	800268c0 	call	800268c <_ZSt13get_terminatev>
 8002c00:	80bff315 	stw	r2,-52(r16)
 8002c04:	0090caf4 	movhi	r2,17195
 8002c08:	108ac004 	addi	r2,r2,11008
 8002c0c:	80bffb15 	stw	r2,-20(r16)
 8002c10:	0091d3b4 	movhi	r2,18254
 8002c14:	109550c4 	addi	r2,r2,21827
 8002c18:	80bffc15 	stw	r2,-16(r16)
 8002c1c:	00820034 	movhi	r2,2048
 8002c20:	108ada04 	addi	r2,r2,11112
 8002c24:	8809883a 	mov	r4,r17
 8002c28:	80bffd15 	stw	r2,-12(r16)
 8002c2c:	80032700 	call	8003270 <_Unwind_SjLj_RaiseException>
 8002c30:	8809883a 	mov	r4,r17
 8002c34:	800298c0 	call	800298c <__cxa_begin_catch>
 8002c38:	80026380 	call	8002638 <_ZSt9terminatev>

08002c3c <__cxa_rethrow>:
 8002c3c:	defffe04 	addi	sp,sp,-8
 8002c40:	dfc00115 	stw	ra,4(sp)
 8002c44:	dc000015 	stw	r16,0(sp)
 8002c48:	80022a00 	call	80022a0 <__cxa_get_globals>
 8002c4c:	10c00117 	ldw	r3,4(r2)
 8002c50:	11000017 	ldw	r4,0(r2)
 8002c54:	18c00044 	addi	r3,r3,1
 8002c58:	10c00115 	stw	r3,4(r2)
 8002c5c:	20001126 	beq	r4,zero,8002ca4 <__cxa_rethrow+0x68>
 8002c60:	21400b17 	ldw	r5,44(r4)
 8002c64:	01ef3574 	movhi	r7,48341
 8002c68:	39f54004 	addi	r7,r7,-11008
 8002c6c:	29cf883a 	add	r7,r5,r7
 8002c70:	20c00c17 	ldw	r3,48(r4)
 8002c74:	394d803a 	cmpltu	r6,r7,r5
 8002c78:	016e2cb4 	movhi	r5,47282
 8002c7c:	296aaf04 	addi	r5,r5,-21828
 8002c80:	1947883a 	add	r3,r3,r5
 8002c84:	30c7883a 	add	r3,r6,r3
 8002c88:	18000726 	beq	r3,zero,8002ca8 <__cxa_rethrow+0x6c>
 8002c8c:	10000015 	stw	zero,0(r2)
 8002c90:	24000b04 	addi	r16,r4,44
 8002c94:	8009883a 	mov	r4,r16
 8002c98:	80033c80 	call	80033c8 <_Unwind_SjLj_Resume_or_Rethrow>
 8002c9c:	8009883a 	mov	r4,r16
 8002ca0:	800298c0 	call	800298c <__cxa_begin_catch>
 8002ca4:	80026380 	call	8002638 <_ZSt9terminatev>
 8002ca8:	00c00044 	movi	r3,1
 8002cac:	19fff736 	bltu	r3,r7,8002c8c <__alt_data_end+0xfc002c8c>
 8002cb0:	20800517 	ldw	r2,20(r4)
 8002cb4:	0085c83a 	sub	r2,zero,r2
 8002cb8:	20800515 	stw	r2,20(r4)
 8002cbc:	003ff406 	br	8002c90 <__alt_data_end+0xfc002c90>

08002cc0 <_ZNSt9type_infoD1Ev>:
 8002cc0:	f800283a 	ret

08002cc4 <_ZNKSt9type_info14__is_pointer_pEv>:
 8002cc4:	0005883a 	mov	r2,zero
 8002cc8:	f800283a 	ret

08002ccc <_ZNKSt9type_info15__is_function_pEv>:
 8002ccc:	0005883a 	mov	r2,zero
 8002cd0:	f800283a 	ret

08002cd4 <_ZNKSt9type_info11__do_upcastEPKN10__cxxabiv117__class_type_infoEPPv>:
 8002cd4:	0005883a 	mov	r2,zero
 8002cd8:	f800283a 	ret

08002cdc <_ZNSt9type_infoD0Ev>:
 8002cdc:	80025741 	jmpi	8002574 <_ZdlPv>

08002ce0 <_ZNKSt9type_info10__do_catchEPKS_PPvj>:
 8002ce0:	21000117 	ldw	r4,4(r4)
 8002ce4:	29400117 	ldw	r5,4(r5)
 8002ce8:	21400c26 	beq	r4,r5,8002d1c <_ZNKSt9type_info10__do_catchEPKS_PPvj+0x3c>
 8002cec:	20c00007 	ldb	r3,0(r4)
 8002cf0:	00800a84 	movi	r2,42
 8002cf4:	18800726 	beq	r3,r2,8002d14 <_ZNKSt9type_info10__do_catchEPKS_PPvj+0x34>
 8002cf8:	deffff04 	addi	sp,sp,-4
 8002cfc:	dfc00015 	stw	ra,0(sp)
 8002d00:	80044b00 	call	80044b0 <strcmp>
 8002d04:	1005003a 	cmpeq	r2,r2,zero
 8002d08:	dfc00017 	ldw	ra,0(sp)
 8002d0c:	dec00104 	addi	sp,sp,4
 8002d10:	f800283a 	ret
 8002d14:	0005883a 	mov	r2,zero
 8002d18:	f800283a 	ret
 8002d1c:	00800044 	movi	r2,1
 8002d20:	f800283a 	ret

08002d24 <__cxa_allocate_exception>:
 8002d24:	defffd04 	addi	sp,sp,-12
 8002d28:	dc400115 	stw	r17,4(sp)
 8002d2c:	24401104 	addi	r17,r4,68
 8002d30:	8809883a 	mov	r4,r17
 8002d34:	dc000015 	stw	r16,0(sp)
 8002d38:	dfc00215 	stw	ra,8(sp)
 8002d3c:	80034f00 	call	80034f0 <malloc>
 8002d40:	1021883a 	mov	r16,r2
 8002d44:	10000a26 	beq	r2,zero,8002d70 <__cxa_allocate_exception+0x4c>
 8002d48:	8009883a 	mov	r4,r16
 8002d4c:	000b883a 	mov	r5,zero
 8002d50:	01801104 	movi	r6,68
 8002d54:	8003cc00 	call	8003cc0 <memset>
 8002d58:	80801104 	addi	r2,r16,68
 8002d5c:	dfc00217 	ldw	ra,8(sp)
 8002d60:	dc400117 	ldw	r17,4(sp)
 8002d64:	dc000017 	ldw	r16,0(sp)
 8002d68:	dec00304 	addi	sp,sp,12
 8002d6c:	f800283a 	ret
 8002d70:	014200b4 	movhi	r5,2050
 8002d74:	296d8304 	addi	r5,r5,-18932
 8002d78:	00808004 	movi	r2,512
 8002d7c:	29800017 	ldw	r6,0(r5)
 8002d80:	14400736 	bltu	r2,r17,8002da0 <__cxa_allocate_exception+0x7c>
 8002d84:	3005883a 	mov	r2,r6
 8002d88:	01000104 	movi	r4,4
 8002d8c:	10c0004c 	andi	r3,r2,1
 8002d90:	18000426 	beq	r3,zero,8002da4 <__cxa_allocate_exception+0x80>
 8002d94:	84000044 	addi	r16,r16,1
 8002d98:	1004d07a 	srli	r2,r2,1
 8002d9c:	813ffb1e 	bne	r16,r4,8002d8c <__alt_data_end+0xfc002d8c>
 8002da0:	80026380 	call	8002638 <_ZSt9terminatev>
 8002da4:	00800044 	movi	r2,1
 8002da8:	1404983a 	sll	r2,r2,r16
 8002dac:	8020927a 	slli	r16,r16,9
 8002db0:	118cb03a 	or	r6,r2,r6
 8002db4:	008200b4 	movhi	r2,2050
 8002db8:	10add304 	addi	r2,r2,-18612
 8002dbc:	29800015 	stw	r6,0(r5)
 8002dc0:	80a1883a 	add	r16,r16,r2
 8002dc4:	003fe006 	br	8002d48 <__alt_data_end+0xfc002d48>

08002dc8 <__cxa_free_exception>:
 8002dc8:	008200b4 	movhi	r2,2050
 8002dcc:	10add304 	addi	r2,r2,-18612
 8002dd0:	20800236 	bltu	r4,r2,8002ddc <__cxa_free_exception+0x14>
 8002dd4:	10c20004 	addi	r3,r2,2048
 8002dd8:	20c00236 	bltu	r4,r3,8002de4 <__cxa_free_exception+0x1c>
 8002ddc:	213fef04 	addi	r4,r4,-68
 8002de0:	80035041 	jmpi	8003504 <free>
 8002de4:	2089c83a 	sub	r4,r4,r2
 8002de8:	2008d27a 	srli	r4,r4,9
 8002dec:	014200b4 	movhi	r5,2050
 8002df0:	296d8304 	addi	r5,r5,-18932
 8002df4:	00ffff84 	movi	r3,-2
 8002df8:	28800017 	ldw	r2,0(r5)
 8002dfc:	1908183a 	rol	r4,r3,r4
 8002e00:	2088703a 	and	r4,r4,r2
 8002e04:	29000015 	stw	r4,0(r5)
 8002e08:	f800283a 	ret

08002e0c <__cxa_allocate_dependent_exception>:
 8002e0c:	defffe04 	addi	sp,sp,-8
 8002e10:	01001004 	movi	r4,64
 8002e14:	dc000015 	stw	r16,0(sp)
 8002e18:	dfc00115 	stw	ra,4(sp)
 8002e1c:	80034f00 	call	80034f0 <malloc>
 8002e20:	1021883a 	mov	r16,r2
 8002e24:	10000926 	beq	r2,zero,8002e4c <__cxa_allocate_dependent_exception+0x40>
 8002e28:	8009883a 	mov	r4,r16
 8002e2c:	000b883a 	mov	r5,zero
 8002e30:	01801004 	movi	r6,64
 8002e34:	8003cc00 	call	8003cc0 <memset>
 8002e38:	8005883a 	mov	r2,r16
 8002e3c:	dfc00117 	ldw	ra,4(sp)
 8002e40:	dc000017 	ldw	r16,0(sp)
 8002e44:	dec00204 	addi	sp,sp,8
 8002e48:	f800283a 	ret
 8002e4c:	01c200b4 	movhi	r7,2050
 8002e50:	39ed8204 	addi	r7,r7,-18936
 8002e54:	39800017 	ldw	r6,0(r7)
 8002e58:	0005883a 	mov	r2,zero
 8002e5c:	01400104 	movi	r5,4
 8002e60:	3007883a 	mov	r3,r6
 8002e64:	1900004c 	andi	r4,r3,1
 8002e68:	20000426 	beq	r4,zero,8002e7c <__cxa_allocate_dependent_exception+0x70>
 8002e6c:	10800044 	addi	r2,r2,1
 8002e70:	1806d07a 	srli	r3,r3,1
 8002e74:	117ffb1e 	bne	r2,r5,8002e64 <__alt_data_end+0xfc002e64>
 8002e78:	80026380 	call	8002638 <_ZSt9terminatev>
 8002e7c:	00c00044 	movi	r3,1
 8002e80:	1886983a 	sll	r3,r3,r2
 8002e84:	100491ba 	slli	r2,r2,6
 8002e88:	040200b4 	movhi	r16,2050
 8002e8c:	198cb03a 	or	r6,r3,r6
 8002e90:	842d9304 	addi	r16,r16,-18868
 8002e94:	39800015 	stw	r6,0(r7)
 8002e98:	1421883a 	add	r16,r2,r16
 8002e9c:	003fe206 	br	8002e28 <__alt_data_end+0xfc002e28>

08002ea0 <__cxa_free_dependent_exception>:
 8002ea0:	008200b4 	movhi	r2,2050
 8002ea4:	10ad9304 	addi	r2,r2,-18868
 8002ea8:	20800236 	bltu	r4,r2,8002eb4 <__cxa_free_dependent_exception+0x14>
 8002eac:	10c04004 	addi	r3,r2,256
 8002eb0:	20c00136 	bltu	r4,r3,8002eb8 <__cxa_free_dependent_exception+0x18>
 8002eb4:	80035041 	jmpi	8003504 <free>
 8002eb8:	2089c83a 	sub	r4,r4,r2
 8002ebc:	2008d1ba 	srli	r4,r4,6
 8002ec0:	014200b4 	movhi	r5,2050
 8002ec4:	296d8204 	addi	r5,r5,-18936
 8002ec8:	00ffff84 	movi	r3,-2
 8002ecc:	28800017 	ldw	r2,0(r5)
 8002ed0:	1908183a 	rol	r4,r3,r4
 8002ed4:	2088703a 	and	r4,r4,r2
 8002ed8:	29000015 	stw	r4,0(r5)
 8002edc:	f800283a 	ret

08002ee0 <_ZNSt9exceptionD1Ev>:
 8002ee0:	f800283a 	ret

08002ee4 <_ZNSt13bad_exceptionD1Ev>:
 8002ee4:	f800283a 	ret

08002ee8 <_ZNKSt9exception4whatEv>:
 8002ee8:	00820074 	movhi	r2,2049
 8002eec:	109e0d04 	addi	r2,r2,30772
 8002ef0:	f800283a 	ret

08002ef4 <_ZNKSt13bad_exception4whatEv>:
 8002ef4:	00820074 	movhi	r2,2049
 8002ef8:	109e1104 	addi	r2,r2,30788
 8002efc:	f800283a 	ret

08002f00 <_ZNSt9exceptionD0Ev>:
 8002f00:	80025741 	jmpi	8002574 <_ZdlPv>

08002f04 <_ZNSt13bad_exceptionD0Ev>:
 8002f04:	80025741 	jmpi	8002574 <_ZdlPv>

08002f08 <_ZN10__cxxabiv115__forced_unwindD1Ev>:
 8002f08:	f800283a 	ret

08002f0c <_ZN10__cxxabiv115__forced_unwindD0Ev>:
 8002f0c:	80025741 	jmpi	8002574 <_ZdlPv>

08002f10 <_ZN10__cxxabiv119__foreign_exceptionD1Ev>:
 8002f10:	f800283a 	ret

08002f14 <_ZN10__cxxabiv119__foreign_exceptionD0Ev>:
 8002f14:	80025741 	jmpi	8002574 <_ZdlPv>

08002f18 <__cxa_pure_virtual>:
 8002f18:	01420074 	movhi	r5,2049
 8002f1c:	deffff04 	addi	sp,sp,-4
 8002f20:	295e4704 	addi	r5,r5,31004
 8002f24:	01000084 	movi	r4,2
 8002f28:	018006c4 	movi	r6,27
 8002f2c:	dfc00015 	stw	ra,0(sp)
 8002f30:	801482c0 	call	801482c <write>
 8002f34:	80026380 	call	8002638 <_ZSt9terminatev>

08002f38 <__cxa_deleted_virtual>:
 8002f38:	01420074 	movhi	r5,2049
 8002f3c:	deffff04 	addi	sp,sp,-4
 8002f40:	295e4e04 	addi	r5,r5,31032
 8002f44:	01000084 	movi	r4,2
 8002f48:	01800784 	movi	r6,30
 8002f4c:	dfc00015 	stw	ra,0(sp)
 8002f50:	801482c0 	call	801482c <write>
 8002f54:	80026380 	call	8002638 <_ZSt9terminatev>

08002f58 <__mulsi3>:
 8002f58:	0005883a 	mov	r2,zero
 8002f5c:	20000726 	beq	r4,zero,8002f7c <__mulsi3+0x24>
 8002f60:	20c0004c 	andi	r3,r4,1
 8002f64:	2008d07a 	srli	r4,r4,1
 8002f68:	18000126 	beq	r3,zero,8002f70 <__mulsi3+0x18>
 8002f6c:	1145883a 	add	r2,r2,r5
 8002f70:	294b883a 	add	r5,r5,r5
 8002f74:	203ffa1e 	bne	r4,zero,8002f60 <__alt_data_end+0xfc002f60>
 8002f78:	f800283a 	ret
 8002f7c:	f800283a 	ret

08002f80 <_Unwind_ForcedUnwind_Phase2>:
 8002f80:	defff404 	addi	sp,sp,-48
 8002f84:	dd800915 	stw	r22,36(sp)
 8002f88:	058200b4 	movhi	r22,2050
 8002f8c:	ddc00a15 	stw	r23,40(sp)
 8002f90:	dd400815 	stw	r21,32(sp)
 8002f94:	dd000715 	stw	r20,28(sp)
 8002f98:	dcc00615 	stw	r19,24(sp)
 8002f9c:	dc400415 	stw	r17,16(sp)
 8002fa0:	dc000315 	stw	r16,12(sp)
 8002fa4:	dfc00b15 	stw	ra,44(sp)
 8002fa8:	dc800515 	stw	r18,20(sp)
 8002fac:	2021883a 	mov	r16,r4
 8002fb0:	2823883a 	mov	r17,r5
 8002fb4:	24c00317 	ldw	r19,12(r4)
 8002fb8:	25000417 	ldw	r20,16(r4)
 8002fbc:	28c00017 	ldw	r3,0(r5)
 8002fc0:	b5ad8404 	addi	r22,r22,-18928
 8002fc4:	054001c4 	movi	r21,7
 8002fc8:	05c00204 	movi	r23,8
 8002fcc:	00001606 	br	8003028 <_Unwind_ForcedUnwind_Phase2+0xa8>
 8002fd0:	81800017 	ldw	r6,0(r16)
 8002fd4:	81c00117 	ldw	r7,4(r16)
 8002fd8:	1c800617 	ldw	r18,24(r3)
 8002fdc:	dc000015 	stw	r16,0(sp)
 8002fe0:	dc400115 	stw	r17,4(sp)
 8002fe4:	dd000215 	stw	r20,8(sp)
 8002fe8:	983ee83a 	callr	r19
 8002fec:	01000044 	movi	r4,1
 8002ff0:	01400284 	movi	r5,10
 8002ff4:	1000241e 	bne	r2,zero,8003088 <_Unwind_ForcedUnwind_Phase2+0x108>
 8002ff8:	90000726 	beq	r18,zero,8003018 <_Unwind_ForcedUnwind_Phase2+0x98>
 8002ffc:	81800017 	ldw	r6,0(r16)
 8003000:	81c00117 	ldw	r7,4(r16)
 8003004:	dc000015 	stw	r16,0(sp)
 8003008:	dc400115 	stw	r17,4(sp)
 800300c:	903ee83a 	callr	r18
 8003010:	15401f26 	beq	r2,r21,8003090 <_Unwind_ForcedUnwind_Phase2+0x110>
 8003014:	15c01c1e 	bne	r2,r23,8003088 <_Unwind_ForcedUnwind_Phase2+0x108>
 8003018:	88800017 	ldw	r2,0(r17)
 800301c:	10c00017 	ldw	r3,0(r2)
 8003020:	b0c00015 	stw	r3,0(r22)
 8003024:	88c00015 	stw	r3,0(r17)
 8003028:	01000044 	movi	r4,1
 800302c:	01400284 	movi	r5,10
 8003030:	183fe71e 	bne	r3,zero,8002fd0 <__alt_data_end+0xfc002fd0>
 8003034:	81800017 	ldw	r6,0(r16)
 8003038:	81c00117 	ldw	r7,4(r16)
 800303c:	01000044 	movi	r4,1
 8003040:	dc000015 	stw	r16,0(sp)
 8003044:	dc400115 	stw	r17,4(sp)
 8003048:	dd000215 	stw	r20,8(sp)
 800304c:	01400684 	movi	r5,26
 8003050:	983ee83a 	callr	r19
 8003054:	10000c1e 	bne	r2,zero,8003088 <_Unwind_ForcedUnwind_Phase2+0x108>
 8003058:	00800144 	movi	r2,5
 800305c:	dfc00b17 	ldw	ra,44(sp)
 8003060:	ddc00a17 	ldw	r23,40(sp)
 8003064:	dd800917 	ldw	r22,36(sp)
 8003068:	dd400817 	ldw	r21,32(sp)
 800306c:	dd000717 	ldw	r20,28(sp)
 8003070:	dcc00617 	ldw	r19,24(sp)
 8003074:	dc800517 	ldw	r18,20(sp)
 8003078:	dc400417 	ldw	r17,16(sp)
 800307c:	dc000317 	ldw	r16,12(sp)
 8003080:	dec00c04 	addi	sp,sp,48
 8003084:	f800283a 	ret
 8003088:	00800084 	movi	r2,2
 800308c:	003ff306 	br	800305c <__alt_data_end+0xfc00305c>
 8003090:	a805883a 	mov	r2,r21
 8003094:	003ff106 	br	800305c <__alt_data_end+0xfc00305c>

08003098 <_Unwind_RaiseException_Phase2>:
 8003098:	28c00017 	ldw	r3,0(r5)
 800309c:	defff804 	addi	sp,sp,-32
 80030a0:	dcc00515 	stw	r19,20(sp)
 80030a4:	dc800415 	stw	r18,16(sp)
 80030a8:	dc400315 	stw	r17,12(sp)
 80030ac:	dc000215 	stw	r16,8(sp)
 80030b0:	dfc00715 	stw	ra,28(sp)
 80030b4:	dd000615 	stw	r20,24(sp)
 80030b8:	2823883a 	mov	r17,r5
 80030bc:	2021883a 	mov	r16,r4
 80030c0:	048001c4 	movi	r18,7
 80030c4:	04c00204 	movi	r19,8
 80030c8:	18001326 	beq	r3,zero,8003118 <_Unwind_RaiseException_Phase2+0x80>
 80030cc:	81000417 	ldw	r4,16(r16)
 80030d0:	1a000617 	ldw	r8,24(r3)
 80030d4:	19001c26 	beq	r3,r4,8003148 <_Unwind_RaiseException_Phase2+0xb0>
 80030d8:	40000b26 	beq	r8,zero,8003108 <_Unwind_RaiseException_Phase2+0x70>
 80030dc:	01400084 	movi	r5,2
 80030e0:	0029883a 	mov	r20,zero
 80030e4:	81800017 	ldw	r6,0(r16)
 80030e8:	81c00117 	ldw	r7,4(r16)
 80030ec:	01000044 	movi	r4,1
 80030f0:	dc000015 	stw	r16,0(sp)
 80030f4:	dc400115 	stw	r17,4(sp)
 80030f8:	403ee83a 	callr	r8
 80030fc:	14800f26 	beq	r2,r18,800313c <_Unwind_RaiseException_Phase2+0xa4>
 8003100:	14c0051e 	bne	r2,r19,8003118 <_Unwind_RaiseException_Phase2+0x80>
 8003104:	a0000f1e 	bne	r20,zero,8003144 <_Unwind_RaiseException_Phase2+0xac>
 8003108:	88c00017 	ldw	r3,0(r17)
 800310c:	18c00017 	ldw	r3,0(r3)
 8003110:	88c00015 	stw	r3,0(r17)
 8003114:	183fed1e 	bne	r3,zero,80030cc <__alt_data_end+0xfc0030cc>
 8003118:	00800084 	movi	r2,2
 800311c:	dfc00717 	ldw	ra,28(sp)
 8003120:	dd000617 	ldw	r20,24(sp)
 8003124:	dcc00517 	ldw	r19,20(sp)
 8003128:	dc800417 	ldw	r18,16(sp)
 800312c:	dc400317 	ldw	r17,12(sp)
 8003130:	dc000217 	ldw	r16,8(sp)
 8003134:	dec00804 	addi	sp,sp,32
 8003138:	f800283a 	ret
 800313c:	9005883a 	mov	r2,r18
 8003140:	003ff606 	br	800311c <__alt_data_end+0xfc00311c>
 8003144:	80034a00 	call	80034a0 <abort>
 8003148:	403ffe26 	beq	r8,zero,8003144 <__alt_data_end+0xfc003144>
 800314c:	01400184 	movi	r5,6
 8003150:	05000104 	movi	r20,4
 8003154:	003fe306 	br	80030e4 <__alt_data_end+0xfc0030e4>

08003158 <uw_install_context.isra.1>:
 8003158:	20c00017 	ldw	r3,0(r4)
 800315c:	deffff04 	addi	sp,sp,-4
 8003160:	014200b4 	movhi	r5,2050
 8003164:	19000917 	ldw	r4,36(r3)
 8003168:	df000015 	stw	fp,0(sp)
 800316c:	18800804 	addi	r2,r3,32
 8003170:	d839883a 	mov	fp,sp
 8003174:	296d8404 	addi	r5,r5,-18928
 8003178:	28c00015 	stw	r3,0(r5)
 800317c:	17000017 	ldw	fp,0(r2)
 8003180:	1ec00a17 	ldw	sp,40(r3)
 8003184:	2000683a 	jmp	r4

08003188 <_Unwind_SjLj_Register>:
 8003188:	008200b4 	movhi	r2,2050
 800318c:	10ad8404 	addi	r2,r2,-18928
 8003190:	10c00017 	ldw	r3,0(r2)
 8003194:	11000015 	stw	r4,0(r2)
 8003198:	20c00015 	stw	r3,0(r4)
 800319c:	f800283a 	ret

080031a0 <_Unwind_SjLj_Unregister>:
 80031a0:	20c00017 	ldw	r3,0(r4)
 80031a4:	008200b4 	movhi	r2,2050
 80031a8:	10ad8404 	addi	r2,r2,-18928
 80031ac:	10c00015 	stw	r3,0(r2)
 80031b0:	f800283a 	ret

080031b4 <_Unwind_GetGR>:
 80031b4:	20800017 	ldw	r2,0(r4)
 80031b8:	29400084 	addi	r5,r5,2
 80031bc:	294b883a 	add	r5,r5,r5
 80031c0:	294b883a 	add	r5,r5,r5
 80031c4:	114b883a 	add	r5,r2,r5
 80031c8:	28800017 	ldw	r2,0(r5)
 80031cc:	f800283a 	ret

080031d0 <_Unwind_GetCFA>:
 80031d0:	20800017 	ldw	r2,0(r4)
 80031d4:	10000226 	beq	r2,zero,80031e0 <_Unwind_GetCFA+0x10>
 80031d8:	10800a17 	ldw	r2,40(r2)
 80031dc:	f800283a 	ret
 80031e0:	0005883a 	mov	r2,zero
 80031e4:	f800283a 	ret

080031e8 <_Unwind_SetGR>:
 80031e8:	20800017 	ldw	r2,0(r4)
 80031ec:	29400084 	addi	r5,r5,2
 80031f0:	294b883a 	add	r5,r5,r5
 80031f4:	294b883a 	add	r5,r5,r5
 80031f8:	114b883a 	add	r5,r2,r5
 80031fc:	29800015 	stw	r6,0(r5)
 8003200:	f800283a 	ret

08003204 <_Unwind_GetIP>:
 8003204:	20800017 	ldw	r2,0(r4)
 8003208:	10800117 	ldw	r2,4(r2)
 800320c:	10800044 	addi	r2,r2,1
 8003210:	f800283a 	ret

08003214 <_Unwind_GetIPInfo>:
 8003214:	20800017 	ldw	r2,0(r4)
 8003218:	28000015 	stw	zero,0(r5)
 800321c:	10000326 	beq	r2,zero,800322c <_Unwind_GetIPInfo+0x18>
 8003220:	10800117 	ldw	r2,4(r2)
 8003224:	10800044 	addi	r2,r2,1
 8003228:	f800283a 	ret
 800322c:	0005883a 	mov	r2,zero
 8003230:	f800283a 	ret

08003234 <_Unwind_SetIP>:
 8003234:	20800017 	ldw	r2,0(r4)
 8003238:	297fffc4 	addi	r5,r5,-1
 800323c:	11400115 	stw	r5,4(r2)
 8003240:	f800283a 	ret

08003244 <_Unwind_GetLanguageSpecificData>:
 8003244:	20800017 	ldw	r2,0(r4)
 8003248:	10800717 	ldw	r2,28(r2)
 800324c:	f800283a 	ret

08003250 <_Unwind_GetRegionStart>:
 8003250:	0005883a 	mov	r2,zero
 8003254:	f800283a 	ret

08003258 <_Unwind_FindEnclosingFunction>:
 8003258:	0005883a 	mov	r2,zero
 800325c:	f800283a 	ret

08003260 <_Unwind_GetDataRelBase>:
 8003260:	0005883a 	mov	r2,zero
 8003264:	f800283a 	ret

08003268 <_Unwind_GetTextRelBase>:
 8003268:	0005883a 	mov	r2,zero
 800326c:	f800283a 	ret

08003270 <_Unwind_SjLj_RaiseException>:
 8003270:	008200b4 	movhi	r2,2050
 8003274:	defff804 	addi	sp,sp,-32
 8003278:	10ad8404 	addi	r2,r2,-18928
 800327c:	dc800515 	stw	r18,20(sp)
 8003280:	14800017 	ldw	r18,0(r2)
 8003284:	dfc00715 	stw	ra,28(sp)
 8003288:	dcc00615 	stw	r19,24(sp)
 800328c:	dc400415 	stw	r17,16(sp)
 8003290:	dc000315 	stw	r16,12(sp)
 8003294:	dc800215 	stw	r18,8(sp)
 8003298:	90001426 	beq	r18,zero,80032ec <_Unwind_SjLj_RaiseException+0x7c>
 800329c:	2021883a 	mov	r16,r4
 80032a0:	9005883a 	mov	r2,r18
 80032a4:	04400184 	movi	r17,6
 80032a8:	04c00204 	movi	r19,8
 80032ac:	10800617 	ldw	r2,24(r2)
 80032b0:	10000a26 	beq	r2,zero,80032dc <_Unwind_SjLj_RaiseException+0x6c>
 80032b4:	81800017 	ldw	r6,0(r16)
 80032b8:	81c00117 	ldw	r7,4(r16)
 80032bc:	01000044 	movi	r4,1
 80032c0:	d8c00204 	addi	r3,sp,8
 80032c4:	dc000015 	stw	r16,0(sp)
 80032c8:	d8c00115 	stw	r3,4(sp)
 80032cc:	200b883a 	mov	r5,r4
 80032d0:	103ee83a 	callr	r2
 80032d4:	14400d26 	beq	r2,r17,800330c <_Unwind_SjLj_RaiseException+0x9c>
 80032d8:	14c0171e 	bne	r2,r19,8003338 <_Unwind_SjLj_RaiseException+0xc8>
 80032dc:	d8800217 	ldw	r2,8(sp)
 80032e0:	10800017 	ldw	r2,0(r2)
 80032e4:	d8800215 	stw	r2,8(sp)
 80032e8:	103ff01e 	bne	r2,zero,80032ac <__alt_data_end+0xfc0032ac>
 80032ec:	00800144 	movi	r2,5
 80032f0:	dfc00717 	ldw	ra,28(sp)
 80032f4:	dcc00617 	ldw	r19,24(sp)
 80032f8:	dc800517 	ldw	r18,20(sp)
 80032fc:	dc400417 	ldw	r17,16(sp)
 8003300:	dc000317 	ldw	r16,12(sp)
 8003304:	dec00804 	addi	sp,sp,32
 8003308:	f800283a 	ret
 800330c:	d8800217 	ldw	r2,8(sp)
 8003310:	80000315 	stw	zero,12(r16)
 8003314:	8009883a 	mov	r4,r16
 8003318:	80800415 	stw	r2,16(r16)
 800331c:	d9400204 	addi	r5,sp,8
 8003320:	dc800215 	stw	r18,8(sp)
 8003324:	80030980 	call	8003098 <_Unwind_RaiseException_Phase2>
 8003328:	00c001c4 	movi	r3,7
 800332c:	10fff01e 	bne	r2,r3,80032f0 <__alt_data_end+0xfc0032f0>
 8003330:	d9000204 	addi	r4,sp,8
 8003334:	80031580 	call	8003158 <uw_install_context.isra.1>
 8003338:	008000c4 	movi	r2,3
 800333c:	003fec06 	br	80032f0 <__alt_data_end+0xfc0032f0>

08003340 <_Unwind_SjLj_ForcedUnwind>:
 8003340:	00c200b4 	movhi	r3,2050
 8003344:	18ed8404 	addi	r3,r3,-18928
 8003348:	defffe04 	addi	sp,sp,-8
 800334c:	18c00017 	ldw	r3,0(r3)
 8003350:	dfc00115 	stw	ra,4(sp)
 8003354:	21400315 	stw	r5,12(r4)
 8003358:	21800415 	stw	r6,16(r4)
 800335c:	d80b883a 	mov	r5,sp
 8003360:	d8c00015 	stw	r3,0(sp)
 8003364:	8002f800 	call	8002f80 <_Unwind_ForcedUnwind_Phase2>
 8003368:	00c001c4 	movi	r3,7
 800336c:	10c00326 	beq	r2,r3,800337c <_Unwind_SjLj_ForcedUnwind+0x3c>
 8003370:	dfc00117 	ldw	ra,4(sp)
 8003374:	dec00204 	addi	sp,sp,8
 8003378:	f800283a 	ret
 800337c:	d809883a 	mov	r4,sp
 8003380:	80031580 	call	8003158 <uw_install_context.isra.1>

08003384 <_Unwind_SjLj_Resume>:
 8003384:	00c200b4 	movhi	r3,2050
 8003388:	18ed8404 	addi	r3,r3,-18928
 800338c:	18c00017 	ldw	r3,0(r3)
 8003390:	20800317 	ldw	r2,12(r4)
 8003394:	defffe04 	addi	sp,sp,-8
 8003398:	dfc00115 	stw	ra,4(sp)
 800339c:	d8c00015 	stw	r3,0(sp)
 80033a0:	d80b883a 	mov	r5,sp
 80033a4:	1000041e 	bne	r2,zero,80033b8 <_Unwind_SjLj_Resume+0x34>
 80033a8:	80030980 	call	8003098 <_Unwind_RaiseException_Phase2>
 80033ac:	00c001c4 	movi	r3,7
 80033b0:	10c00326 	beq	r2,r3,80033c0 <_Unwind_SjLj_Resume+0x3c>
 80033b4:	80034a00 	call	80034a0 <abort>
 80033b8:	8002f800 	call	8002f80 <_Unwind_ForcedUnwind_Phase2>
 80033bc:	003ffb06 	br	80033ac <__alt_data_end+0xfc0033ac>
 80033c0:	d809883a 	mov	r4,sp
 80033c4:	80031580 	call	8003158 <uw_install_context.isra.1>

080033c8 <_Unwind_SjLj_Resume_or_Rethrow>:
 80033c8:	20800317 	ldw	r2,12(r4)
 80033cc:	defffe04 	addi	sp,sp,-8
 80033d0:	dfc00115 	stw	ra,4(sp)
 80033d4:	1000041e 	bne	r2,zero,80033e8 <_Unwind_SjLj_Resume_or_Rethrow+0x20>
 80033d8:	80032700 	call	8003270 <_Unwind_SjLj_RaiseException>
 80033dc:	dfc00117 	ldw	ra,4(sp)
 80033e0:	dec00204 	addi	sp,sp,8
 80033e4:	f800283a 	ret
 80033e8:	008200b4 	movhi	r2,2050
 80033ec:	10ad8404 	addi	r2,r2,-18928
 80033f0:	10800017 	ldw	r2,0(r2)
 80033f4:	d80b883a 	mov	r5,sp
 80033f8:	d8800015 	stw	r2,0(sp)
 80033fc:	8002f800 	call	8002f80 <_Unwind_ForcedUnwind_Phase2>
 8003400:	00c001c4 	movi	r3,7
 8003404:	10c00126 	beq	r2,r3,800340c <_Unwind_SjLj_Resume_or_Rethrow+0x44>
 8003408:	80034a00 	call	80034a0 <abort>
 800340c:	d809883a 	mov	r4,sp
 8003410:	80031580 	call	8003158 <uw_install_context.isra.1>

08003414 <_Unwind_DeleteException>:
 8003414:	20800217 	ldw	r2,8(r4)
 8003418:	200b883a 	mov	r5,r4
 800341c:	10000226 	beq	r2,zero,8003428 <_Unwind_DeleteException+0x14>
 8003420:	01000044 	movi	r4,1
 8003424:	1000683a 	jmp	r2
 8003428:	f800283a 	ret

0800342c <_Unwind_Backtrace>:
 800342c:	008200b4 	movhi	r2,2050
 8003430:	10ad8404 	addi	r2,r2,-18928
 8003434:	10800017 	ldw	r2,0(r2)
 8003438:	defffc04 	addi	sp,sp,-16
 800343c:	dc400215 	stw	r17,8(sp)
 8003440:	dc000115 	stw	r16,4(sp)
 8003444:	dfc00315 	stw	ra,12(sp)
 8003448:	2023883a 	mov	r17,r4
 800344c:	2821883a 	mov	r16,r5
 8003450:	d8800015 	stw	r2,0(sp)
 8003454:	00000506 	br	800346c <_Unwind_Backtrace+0x40>
 8003458:	883ee83a 	callr	r17
 800345c:	10000e1e 	bne	r2,zero,8003498 <_Unwind_Backtrace+0x6c>
 8003460:	d8800017 	ldw	r2,0(sp)
 8003464:	10800017 	ldw	r2,0(r2)
 8003468:	d8800015 	stw	r2,0(sp)
 800346c:	d809883a 	mov	r4,sp
 8003470:	800b883a 	mov	r5,r16
 8003474:	103ff81e 	bne	r2,zero,8003458 <__alt_data_end+0xfc003458>
 8003478:	883ee83a 	callr	r17
 800347c:	1000061e 	bne	r2,zero,8003498 <_Unwind_Backtrace+0x6c>
 8003480:	00800144 	movi	r2,5
 8003484:	dfc00317 	ldw	ra,12(sp)
 8003488:	dc400217 	ldw	r17,8(sp)
 800348c:	dc000117 	ldw	r16,4(sp)
 8003490:	dec00404 	addi	sp,sp,16
 8003494:	f800283a 	ret
 8003498:	008000c4 	movi	r2,3
 800349c:	003ff906 	br	8003484 <__alt_data_end+0xfc003484>

080034a0 <abort>:
 80034a0:	deffff04 	addi	sp,sp,-4
 80034a4:	01000184 	movi	r4,6
 80034a8:	dfc00015 	stw	ra,0(sp)
 80034ac:	80041bc0 	call	80041bc <raise>
 80034b0:	01000044 	movi	r4,1
 80034b4:	8013bbc0 	call	8013bbc <_exit>

080034b8 <exit>:
 80034b8:	defffe04 	addi	sp,sp,-8
 80034bc:	000b883a 	mov	r5,zero
 80034c0:	dc000015 	stw	r16,0(sp)
 80034c4:	dfc00115 	stw	ra,4(sp)
 80034c8:	2021883a 	mov	r16,r4
 80034cc:	800893c0 	call	800893c <__call_exitprocs>
 80034d0:	008200b4 	movhi	r2,2050
 80034d4:	10a64704 	addi	r2,r2,-26340
 80034d8:	11000017 	ldw	r4,0(r2)
 80034dc:	20800f17 	ldw	r2,60(r4)
 80034e0:	10000126 	beq	r2,zero,80034e8 <exit+0x30>
 80034e4:	103ee83a 	callr	r2
 80034e8:	8009883a 	mov	r4,r16
 80034ec:	8013bbc0 	call	8013bbc <_exit>

080034f0 <malloc>:
 80034f0:	008200b4 	movhi	r2,2050
 80034f4:	10a64804 	addi	r2,r2,-26336
 80034f8:	200b883a 	mov	r5,r4
 80034fc:	11000017 	ldw	r4,0(r2)
 8003500:	80035181 	jmpi	8003518 <_malloc_r>

08003504 <free>:
 8003504:	008200b4 	movhi	r2,2050
 8003508:	10a64804 	addi	r2,r2,-26336
 800350c:	200b883a 	mov	r5,r4
 8003510:	11000017 	ldw	r4,0(r2)
 8003514:	800ab501 	jmpi	800ab50 <_free_r>

08003518 <_malloc_r>:
 8003518:	defff504 	addi	sp,sp,-44
 800351c:	dc800315 	stw	r18,12(sp)
 8003520:	dfc00a15 	stw	ra,40(sp)
 8003524:	df000915 	stw	fp,36(sp)
 8003528:	ddc00815 	stw	r23,32(sp)
 800352c:	dd800715 	stw	r22,28(sp)
 8003530:	dd400615 	stw	r21,24(sp)
 8003534:	dd000515 	stw	r20,20(sp)
 8003538:	dcc00415 	stw	r19,16(sp)
 800353c:	dc400215 	stw	r17,8(sp)
 8003540:	dc000115 	stw	r16,4(sp)
 8003544:	288002c4 	addi	r2,r5,11
 8003548:	00c00584 	movi	r3,22
 800354c:	2025883a 	mov	r18,r4
 8003550:	18802a2e 	bgeu	r3,r2,80035fc <_malloc_r+0xe4>
 8003554:	047ffe04 	movi	r17,-8
 8003558:	1462703a 	and	r17,r2,r17
 800355c:	88009e16 	blt	r17,zero,80037d8 <_malloc_r+0x2c0>
 8003560:	89409d36 	bltu	r17,r5,80037d8 <_malloc_r+0x2c0>
 8003564:	80142ac0 	call	80142ac <__malloc_lock>
 8003568:	00807dc4 	movi	r2,503
 800356c:	14402736 	bltu	r2,r17,800360c <_malloc_r+0xf4>
 8003570:	8806d0fa 	srli	r3,r17,3
 8003574:	04c200b4 	movhi	r19,2050
 8003578:	9ce04004 	addi	r19,r19,-32512
 800357c:	18c5883a 	add	r2,r3,r3
 8003580:	1085883a 	add	r2,r2,r2
 8003584:	1085883a 	add	r2,r2,r2
 8003588:	9885883a 	add	r2,r19,r2
 800358c:	14000317 	ldw	r16,12(r2)
 8003590:	80814a26 	beq	r16,r2,8003abc <_malloc_r+0x5a4>
 8003594:	80c00117 	ldw	r3,4(r16)
 8003598:	81000317 	ldw	r4,12(r16)
 800359c:	00bfff04 	movi	r2,-4
 80035a0:	1884703a 	and	r2,r3,r2
 80035a4:	81400217 	ldw	r5,8(r16)
 80035a8:	8085883a 	add	r2,r16,r2
 80035ac:	10c00117 	ldw	r3,4(r2)
 80035b0:	29000315 	stw	r4,12(r5)
 80035b4:	21400215 	stw	r5,8(r4)
 80035b8:	18c00054 	ori	r3,r3,1
 80035bc:	10c00115 	stw	r3,4(r2)
 80035c0:	9009883a 	mov	r4,r18
 80035c4:	80142cc0 	call	80142cc <__malloc_unlock>
 80035c8:	80800204 	addi	r2,r16,8
 80035cc:	dfc00a17 	ldw	ra,40(sp)
 80035d0:	df000917 	ldw	fp,36(sp)
 80035d4:	ddc00817 	ldw	r23,32(sp)
 80035d8:	dd800717 	ldw	r22,28(sp)
 80035dc:	dd400617 	ldw	r21,24(sp)
 80035e0:	dd000517 	ldw	r20,20(sp)
 80035e4:	dcc00417 	ldw	r19,16(sp)
 80035e8:	dc800317 	ldw	r18,12(sp)
 80035ec:	dc400217 	ldw	r17,8(sp)
 80035f0:	dc000117 	ldw	r16,4(sp)
 80035f4:	dec00b04 	addi	sp,sp,44
 80035f8:	f800283a 	ret
 80035fc:	04400404 	movi	r17,16
 8003600:	89407536 	bltu	r17,r5,80037d8 <_malloc_r+0x2c0>
 8003604:	80142ac0 	call	80142ac <__malloc_lock>
 8003608:	003fd906 	br	8003570 <__alt_data_end+0xfc003570>
 800360c:	8806d27a 	srli	r3,r17,9
 8003610:	18007526 	beq	r3,zero,80037e8 <_malloc_r+0x2d0>
 8003614:	00800104 	movi	r2,4
 8003618:	10c0ef36 	bltu	r2,r3,80039d8 <_malloc_r+0x4c0>
 800361c:	8806d1ba 	srli	r3,r17,6
 8003620:	19c00e04 	addi	r7,r3,56
 8003624:	39cb883a 	add	r5,r7,r7
 8003628:	04c200b4 	movhi	r19,2050
 800362c:	294b883a 	add	r5,r5,r5
 8003630:	9ce04004 	addi	r19,r19,-32512
 8003634:	294b883a 	add	r5,r5,r5
 8003638:	994b883a 	add	r5,r19,r5
 800363c:	2c000317 	ldw	r16,12(r5)
 8003640:	2c000e26 	beq	r5,r16,800367c <_malloc_r+0x164>
 8003644:	80800117 	ldw	r2,4(r16)
 8003648:	01bfff04 	movi	r6,-4
 800364c:	010003c4 	movi	r4,15
 8003650:	1184703a 	and	r2,r2,r6
 8003654:	1447c83a 	sub	r3,r2,r17
 8003658:	20c00716 	blt	r4,r3,8003678 <_malloc_r+0x160>
 800365c:	1800650e 	bge	r3,zero,80037f4 <_malloc_r+0x2dc>
 8003660:	84000317 	ldw	r16,12(r16)
 8003664:	2c000526 	beq	r5,r16,800367c <_malloc_r+0x164>
 8003668:	80800117 	ldw	r2,4(r16)
 800366c:	1184703a 	and	r2,r2,r6
 8003670:	1447c83a 	sub	r3,r2,r17
 8003674:	20fff90e 	bge	r4,r3,800365c <__alt_data_end+0xfc00365c>
 8003678:	39ffffc4 	addi	r7,r7,-1
 800367c:	38c00044 	addi	r3,r7,1
 8003680:	018200b4 	movhi	r6,2050
 8003684:	9c000417 	ldw	r16,16(r19)
 8003688:	31a04004 	addi	r6,r6,-32512
 800368c:	32400204 	addi	r9,r6,8
 8003690:	82410326 	beq	r16,r9,8003aa0 <_malloc_r+0x588>
 8003694:	81000117 	ldw	r4,4(r16)
 8003698:	00bfff04 	movi	r2,-4
 800369c:	208e703a 	and	r7,r4,r2
 80036a0:	3c45c83a 	sub	r2,r7,r17
 80036a4:	010003c4 	movi	r4,15
 80036a8:	2080ee16 	blt	r4,r2,8003a64 <_malloc_r+0x54c>
 80036ac:	32400515 	stw	r9,20(r6)
 80036b0:	32400415 	stw	r9,16(r6)
 80036b4:	1000510e 	bge	r2,zero,80037fc <_malloc_r+0x2e4>
 80036b8:	00807fc4 	movi	r2,511
 80036bc:	11c0ce36 	bltu	r2,r7,80039f8 <_malloc_r+0x4e0>
 80036c0:	3808d0fa 	srli	r4,r7,3
 80036c4:	01c00044 	movi	r7,1
 80036c8:	30800117 	ldw	r2,4(r6)
 80036cc:	210b883a 	add	r5,r4,r4
 80036d0:	294b883a 	add	r5,r5,r5
 80036d4:	2009d0ba 	srai	r4,r4,2
 80036d8:	294b883a 	add	r5,r5,r5
 80036dc:	298b883a 	add	r5,r5,r6
 80036e0:	2a000217 	ldw	r8,8(r5)
 80036e4:	3908983a 	sll	r4,r7,r4
 80036e8:	81400315 	stw	r5,12(r16)
 80036ec:	82000215 	stw	r8,8(r16)
 80036f0:	2088b03a 	or	r4,r4,r2
 80036f4:	2c000215 	stw	r16,8(r5)
 80036f8:	31000115 	stw	r4,4(r6)
 80036fc:	44000315 	stw	r16,12(r8)
 8003700:	1805d0ba 	srai	r2,r3,2
 8003704:	01400044 	movi	r5,1
 8003708:	288a983a 	sll	r5,r5,r2
 800370c:	21404336 	bltu	r4,r5,800381c <_malloc_r+0x304>
 8003710:	2144703a 	and	r2,r4,r5
 8003714:	10000a1e 	bne	r2,zero,8003740 <_malloc_r+0x228>
 8003718:	00bfff04 	movi	r2,-4
 800371c:	294b883a 	add	r5,r5,r5
 8003720:	1886703a 	and	r3,r3,r2
 8003724:	2144703a 	and	r2,r4,r5
 8003728:	18c00104 	addi	r3,r3,4
 800372c:	1000041e 	bne	r2,zero,8003740 <_malloc_r+0x228>
 8003730:	294b883a 	add	r5,r5,r5
 8003734:	2144703a 	and	r2,r4,r5
 8003738:	18c00104 	addi	r3,r3,4
 800373c:	103ffc26 	beq	r2,zero,8003730 <__alt_data_end+0xfc003730>
 8003740:	023fff04 	movi	r8,-4
 8003744:	01c003c4 	movi	r7,15
 8003748:	18c5883a 	add	r2,r3,r3
 800374c:	1085883a 	add	r2,r2,r2
 8003750:	1085883a 	add	r2,r2,r2
 8003754:	9895883a 	add	r10,r19,r2
 8003758:	52c00304 	addi	r11,r10,12
 800375c:	1819883a 	mov	r12,r3
 8003760:	5c000017 	ldw	r16,0(r11)
 8003764:	59bffd04 	addi	r6,r11,-12
 8003768:	8180041e 	bne	r16,r6,800377c <_malloc_r+0x264>
 800376c:	0000ce06 	br	8003aa8 <_malloc_r+0x590>
 8003770:	2000d70e 	bge	r4,zero,8003ad0 <_malloc_r+0x5b8>
 8003774:	84000317 	ldw	r16,12(r16)
 8003778:	8180cb26 	beq	r16,r6,8003aa8 <_malloc_r+0x590>
 800377c:	80800117 	ldw	r2,4(r16)
 8003780:	1204703a 	and	r2,r2,r8
 8003784:	1449c83a 	sub	r4,r2,r17
 8003788:	393ff90e 	bge	r7,r4,8003770 <__alt_data_end+0xfc003770>
 800378c:	80800317 	ldw	r2,12(r16)
 8003790:	80c00217 	ldw	r3,8(r16)
 8003794:	89400054 	ori	r5,r17,1
 8003798:	81400115 	stw	r5,4(r16)
 800379c:	18800315 	stw	r2,12(r3)
 80037a0:	10c00215 	stw	r3,8(r2)
 80037a4:	8463883a 	add	r17,r16,r17
 80037a8:	9c400515 	stw	r17,20(r19)
 80037ac:	9c400415 	stw	r17,16(r19)
 80037b0:	20800054 	ori	r2,r4,1
 80037b4:	88800115 	stw	r2,4(r17)
 80037b8:	8a400315 	stw	r9,12(r17)
 80037bc:	8a400215 	stw	r9,8(r17)
 80037c0:	8923883a 	add	r17,r17,r4
 80037c4:	89000015 	stw	r4,0(r17)
 80037c8:	9009883a 	mov	r4,r18
 80037cc:	80142cc0 	call	80142cc <__malloc_unlock>
 80037d0:	80800204 	addi	r2,r16,8
 80037d4:	003f7d06 	br	80035cc <__alt_data_end+0xfc0035cc>
 80037d8:	00800304 	movi	r2,12
 80037dc:	90800015 	stw	r2,0(r18)
 80037e0:	0005883a 	mov	r2,zero
 80037e4:	003f7906 	br	80035cc <__alt_data_end+0xfc0035cc>
 80037e8:	01401f84 	movi	r5,126
 80037ec:	01c00fc4 	movi	r7,63
 80037f0:	003f8d06 	br	8003628 <__alt_data_end+0xfc003628>
 80037f4:	81000317 	ldw	r4,12(r16)
 80037f8:	003f6a06 	br	80035a4 <__alt_data_end+0xfc0035a4>
 80037fc:	81c5883a 	add	r2,r16,r7
 8003800:	10c00117 	ldw	r3,4(r2)
 8003804:	9009883a 	mov	r4,r18
 8003808:	18c00054 	ori	r3,r3,1
 800380c:	10c00115 	stw	r3,4(r2)
 8003810:	80142cc0 	call	80142cc <__malloc_unlock>
 8003814:	80800204 	addi	r2,r16,8
 8003818:	003f6c06 	br	80035cc <__alt_data_end+0xfc0035cc>
 800381c:	9c000217 	ldw	r16,8(r19)
 8003820:	00bfff04 	movi	r2,-4
 8003824:	85800117 	ldw	r22,4(r16)
 8003828:	b0ac703a 	and	r22,r22,r2
 800382c:	b4400336 	bltu	r22,r17,800383c <_malloc_r+0x324>
 8003830:	b445c83a 	sub	r2,r22,r17
 8003834:	00c003c4 	movi	r3,15
 8003838:	18805d16 	blt	r3,r2,80039b0 <_malloc_r+0x498>
 800383c:	05c200b4 	movhi	r23,2050
 8003840:	008200b4 	movhi	r2,2050
 8003844:	bde64904 	addi	r23,r23,-26332
 8003848:	10ad8704 	addi	r2,r2,-18916
 800384c:	15400017 	ldw	r21,0(r2)
 8003850:	b9000017 	ldw	r4,0(r23)
 8003854:	00ffffc4 	movi	r3,-1
 8003858:	858d883a 	add	r6,r16,r22
 800385c:	8d6b883a 	add	r21,r17,r21
 8003860:	20c0e426 	beq	r4,r3,8003bf4 <_malloc_r+0x6dc>
 8003864:	ad4403c4 	addi	r21,r21,4111
 8003868:	00fc0004 	movi	r3,-4096
 800386c:	a8ea703a 	and	r21,r21,r3
 8003870:	9009883a 	mov	r4,r18
 8003874:	a80b883a 	mov	r5,r21
 8003878:	d9800015 	stw	r6,0(sp)
 800387c:	8003f180 	call	8003f18 <_sbrk_r>
 8003880:	00ffffc4 	movi	r3,-1
 8003884:	1029883a 	mov	r20,r2
 8003888:	d9800017 	ldw	r6,0(sp)
 800388c:	10c0a426 	beq	r2,r3,8003b20 <_malloc_r+0x608>
 8003890:	1180a236 	bltu	r2,r6,8003b1c <_malloc_r+0x604>
 8003894:	070200b4 	movhi	fp,2050
 8003898:	e72fd304 	addi	fp,fp,-16564
 800389c:	e0c00017 	ldw	r3,0(fp)
 80038a0:	a8c7883a 	add	r3,r21,r3
 80038a4:	e0c00015 	stw	r3,0(fp)
 80038a8:	3500da26 	beq	r6,r20,8003c14 <_malloc_r+0x6fc>
 80038ac:	b9000017 	ldw	r4,0(r23)
 80038b0:	00bfffc4 	movi	r2,-1
 80038b4:	2080e426 	beq	r4,r2,8003c48 <_malloc_r+0x730>
 80038b8:	a185c83a 	sub	r2,r20,r6
 80038bc:	1885883a 	add	r2,r3,r2
 80038c0:	e0800015 	stw	r2,0(fp)
 80038c4:	a0c001cc 	andi	r3,r20,7
 80038c8:	1800b526 	beq	r3,zero,8003ba0 <_malloc_r+0x688>
 80038cc:	a0e9c83a 	sub	r20,r20,r3
 80038d0:	00840204 	movi	r2,4104
 80038d4:	a5000204 	addi	r20,r20,8
 80038d8:	10c7c83a 	sub	r3,r2,r3
 80038dc:	a545883a 	add	r2,r20,r21
 80038e0:	1083ffcc 	andi	r2,r2,4095
 80038e4:	18abc83a 	sub	r21,r3,r2
 80038e8:	9009883a 	mov	r4,r18
 80038ec:	a80b883a 	mov	r5,r21
 80038f0:	8003f180 	call	8003f18 <_sbrk_r>
 80038f4:	00ffffc4 	movi	r3,-1
 80038f8:	10c0d026 	beq	r2,r3,8003c3c <_malloc_r+0x724>
 80038fc:	1507c83a 	sub	r3,r2,r20
 8003900:	a8c7883a 	add	r3,r21,r3
 8003904:	18c00054 	ori	r3,r3,1
 8003908:	e0800017 	ldw	r2,0(fp)
 800390c:	9d000215 	stw	r20,8(r19)
 8003910:	a0c00115 	stw	r3,4(r20)
 8003914:	a887883a 	add	r3,r21,r2
 8003918:	e0c00015 	stw	r3,0(fp)
 800391c:	84c00e26 	beq	r16,r19,8003958 <_malloc_r+0x440>
 8003920:	018003c4 	movi	r6,15
 8003924:	3580a02e 	bgeu	r6,r22,8003ba8 <_malloc_r+0x690>
 8003928:	81400117 	ldw	r5,4(r16)
 800392c:	013ffe04 	movi	r4,-8
 8003930:	b0bffd04 	addi	r2,r22,-12
 8003934:	1104703a 	and	r2,r2,r4
 8003938:	2900004c 	andi	r4,r5,1
 800393c:	1108b03a 	or	r4,r2,r4
 8003940:	81000115 	stw	r4,4(r16)
 8003944:	01400144 	movi	r5,5
 8003948:	8089883a 	add	r4,r16,r2
 800394c:	21400115 	stw	r5,4(r4)
 8003950:	21400215 	stw	r5,8(r4)
 8003954:	3080c036 	bltu	r6,r2,8003c58 <_malloc_r+0x740>
 8003958:	008200b4 	movhi	r2,2050
 800395c:	10ad8604 	addi	r2,r2,-18920
 8003960:	11000017 	ldw	r4,0(r2)
 8003964:	20c0012e 	bgeu	r4,r3,800396c <_malloc_r+0x454>
 8003968:	10c00015 	stw	r3,0(r2)
 800396c:	008200b4 	movhi	r2,2050
 8003970:	10ad8504 	addi	r2,r2,-18924
 8003974:	11000017 	ldw	r4,0(r2)
 8003978:	9c000217 	ldw	r16,8(r19)
 800397c:	20c0012e 	bgeu	r4,r3,8003984 <_malloc_r+0x46c>
 8003980:	10c00015 	stw	r3,0(r2)
 8003984:	80c00117 	ldw	r3,4(r16)
 8003988:	00bfff04 	movi	r2,-4
 800398c:	1886703a 	and	r3,r3,r2
 8003990:	1c45c83a 	sub	r2,r3,r17
 8003994:	1c400236 	bltu	r3,r17,80039a0 <_malloc_r+0x488>
 8003998:	00c003c4 	movi	r3,15
 800399c:	18800416 	blt	r3,r2,80039b0 <_malloc_r+0x498>
 80039a0:	9009883a 	mov	r4,r18
 80039a4:	80142cc0 	call	80142cc <__malloc_unlock>
 80039a8:	0005883a 	mov	r2,zero
 80039ac:	003f0706 	br	80035cc <__alt_data_end+0xfc0035cc>
 80039b0:	88c00054 	ori	r3,r17,1
 80039b4:	80c00115 	stw	r3,4(r16)
 80039b8:	8463883a 	add	r17,r16,r17
 80039bc:	10800054 	ori	r2,r2,1
 80039c0:	9c400215 	stw	r17,8(r19)
 80039c4:	88800115 	stw	r2,4(r17)
 80039c8:	9009883a 	mov	r4,r18
 80039cc:	80142cc0 	call	80142cc <__malloc_unlock>
 80039d0:	80800204 	addi	r2,r16,8
 80039d4:	003efd06 	br	80035cc <__alt_data_end+0xfc0035cc>
 80039d8:	00800504 	movi	r2,20
 80039dc:	10c0482e 	bgeu	r2,r3,8003b00 <_malloc_r+0x5e8>
 80039e0:	00801504 	movi	r2,84
 80039e4:	10c06836 	bltu	r2,r3,8003b88 <_malloc_r+0x670>
 80039e8:	8806d33a 	srli	r3,r17,12
 80039ec:	19c01b84 	addi	r7,r3,110
 80039f0:	39cb883a 	add	r5,r7,r7
 80039f4:	003f0c06 	br	8003628 <__alt_data_end+0xfc003628>
 80039f8:	3804d27a 	srli	r2,r7,9
 80039fc:	01000104 	movi	r4,4
 8003a00:	2080422e 	bgeu	r4,r2,8003b0c <_malloc_r+0x5f4>
 8003a04:	01000504 	movi	r4,20
 8003a08:	20807c36 	bltu	r4,r2,8003bfc <_malloc_r+0x6e4>
 8003a0c:	110016c4 	addi	r4,r2,91
 8003a10:	210b883a 	add	r5,r4,r4
 8003a14:	294b883a 	add	r5,r5,r5
 8003a18:	294b883a 	add	r5,r5,r5
 8003a1c:	994b883a 	add	r5,r19,r5
 8003a20:	28800217 	ldw	r2,8(r5)
 8003a24:	020200b4 	movhi	r8,2050
 8003a28:	42204004 	addi	r8,r8,-32512
 8003a2c:	11406326 	beq	r2,r5,8003bbc <_malloc_r+0x6a4>
 8003a30:	01bfff04 	movi	r6,-4
 8003a34:	11000117 	ldw	r4,4(r2)
 8003a38:	2188703a 	and	r4,r4,r6
 8003a3c:	3900022e 	bgeu	r7,r4,8003a48 <_malloc_r+0x530>
 8003a40:	10800217 	ldw	r2,8(r2)
 8003a44:	28bffb1e 	bne	r5,r2,8003a34 <__alt_data_end+0xfc003a34>
 8003a48:	11800317 	ldw	r6,12(r2)
 8003a4c:	99000117 	ldw	r4,4(r19)
 8003a50:	81800315 	stw	r6,12(r16)
 8003a54:	80800215 	stw	r2,8(r16)
 8003a58:	34000215 	stw	r16,8(r6)
 8003a5c:	14000315 	stw	r16,12(r2)
 8003a60:	003f2706 	br	8003700 <__alt_data_end+0xfc003700>
 8003a64:	88c00054 	ori	r3,r17,1
 8003a68:	80c00115 	stw	r3,4(r16)
 8003a6c:	8463883a 	add	r17,r16,r17
 8003a70:	34400515 	stw	r17,20(r6)
 8003a74:	34400415 	stw	r17,16(r6)
 8003a78:	10c00054 	ori	r3,r2,1
 8003a7c:	8a400315 	stw	r9,12(r17)
 8003a80:	8a400215 	stw	r9,8(r17)
 8003a84:	88c00115 	stw	r3,4(r17)
 8003a88:	88a3883a 	add	r17,r17,r2
 8003a8c:	88800015 	stw	r2,0(r17)
 8003a90:	9009883a 	mov	r4,r18
 8003a94:	80142cc0 	call	80142cc <__malloc_unlock>
 8003a98:	80800204 	addi	r2,r16,8
 8003a9c:	003ecb06 	br	80035cc <__alt_data_end+0xfc0035cc>
 8003aa0:	31000117 	ldw	r4,4(r6)
 8003aa4:	003f1606 	br	8003700 <__alt_data_end+0xfc003700>
 8003aa8:	63000044 	addi	r12,r12,1
 8003aac:	608000cc 	andi	r2,r12,3
 8003ab0:	5ac00204 	addi	r11,r11,8
 8003ab4:	103f2a1e 	bne	r2,zero,8003760 <__alt_data_end+0xfc003760>
 8003ab8:	00002106 	br	8003b40 <_malloc_r+0x628>
 8003abc:	80800204 	addi	r2,r16,8
 8003ac0:	84000517 	ldw	r16,20(r16)
 8003ac4:	143eb31e 	bne	r2,r16,8003594 <__alt_data_end+0xfc003594>
 8003ac8:	18c00084 	addi	r3,r3,2
 8003acc:	003eec06 	br	8003680 <__alt_data_end+0xfc003680>
 8003ad0:	8085883a 	add	r2,r16,r2
 8003ad4:	10c00117 	ldw	r3,4(r2)
 8003ad8:	81000317 	ldw	r4,12(r16)
 8003adc:	81400217 	ldw	r5,8(r16)
 8003ae0:	18c00054 	ori	r3,r3,1
 8003ae4:	10c00115 	stw	r3,4(r2)
 8003ae8:	29000315 	stw	r4,12(r5)
 8003aec:	21400215 	stw	r5,8(r4)
 8003af0:	9009883a 	mov	r4,r18
 8003af4:	80142cc0 	call	80142cc <__malloc_unlock>
 8003af8:	80800204 	addi	r2,r16,8
 8003afc:	003eb306 	br	80035cc <__alt_data_end+0xfc0035cc>
 8003b00:	19c016c4 	addi	r7,r3,91
 8003b04:	39cb883a 	add	r5,r7,r7
 8003b08:	003ec706 	br	8003628 <__alt_data_end+0xfc003628>
 8003b0c:	3804d1ba 	srli	r2,r7,6
 8003b10:	11000e04 	addi	r4,r2,56
 8003b14:	210b883a 	add	r5,r4,r4
 8003b18:	003fbe06 	br	8003a14 <__alt_data_end+0xfc003a14>
 8003b1c:	84ff5d26 	beq	r16,r19,8003894 <__alt_data_end+0xfc003894>
 8003b20:	9c000217 	ldw	r16,8(r19)
 8003b24:	00bfff04 	movi	r2,-4
 8003b28:	80c00117 	ldw	r3,4(r16)
 8003b2c:	1886703a 	and	r3,r3,r2
 8003b30:	003f9706 	br	8003990 <__alt_data_end+0xfc003990>
 8003b34:	52800017 	ldw	r10,0(r10)
 8003b38:	18ffffc4 	addi	r3,r3,-1
 8003b3c:	50805c1e 	bne	r10,r2,8003cb0 <_malloc_r+0x798>
 8003b40:	190000cc 	andi	r4,r3,3
 8003b44:	50bffe04 	addi	r2,r10,-8
 8003b48:	203ffa1e 	bne	r4,zero,8003b34 <__alt_data_end+0xfc003b34>
 8003b4c:	98800117 	ldw	r2,4(r19)
 8003b50:	0146303a 	nor	r3,zero,r5
 8003b54:	1884703a 	and	r2,r3,r2
 8003b58:	98800115 	stw	r2,4(r19)
 8003b5c:	294b883a 	add	r5,r5,r5
 8003b60:	117f2e36 	bltu	r2,r5,800381c <__alt_data_end+0xfc00381c>
 8003b64:	283f2d26 	beq	r5,zero,800381c <__alt_data_end+0xfc00381c>
 8003b68:	1146703a 	and	r3,r2,r5
 8003b6c:	1800521e 	bne	r3,zero,8003cb8 <_malloc_r+0x7a0>
 8003b70:	6007883a 	mov	r3,r12
 8003b74:	294b883a 	add	r5,r5,r5
 8003b78:	1148703a 	and	r4,r2,r5
 8003b7c:	18c00104 	addi	r3,r3,4
 8003b80:	203ffc26 	beq	r4,zero,8003b74 <__alt_data_end+0xfc003b74>
 8003b84:	003ef006 	br	8003748 <__alt_data_end+0xfc003748>
 8003b88:	00805504 	movi	r2,340
 8003b8c:	10c01336 	bltu	r2,r3,8003bdc <_malloc_r+0x6c4>
 8003b90:	8806d3fa 	srli	r3,r17,15
 8003b94:	19c01dc4 	addi	r7,r3,119
 8003b98:	39cb883a 	add	r5,r7,r7
 8003b9c:	003ea206 	br	8003628 <__alt_data_end+0xfc003628>
 8003ba0:	00c40004 	movi	r3,4096
 8003ba4:	003f4d06 	br	80038dc <__alt_data_end+0xfc0038dc>
 8003ba8:	00800044 	movi	r2,1
 8003bac:	a0800115 	stw	r2,4(r20)
 8003bb0:	a021883a 	mov	r16,r20
 8003bb4:	0007883a 	mov	r3,zero
 8003bb8:	003f7506 	br	8003990 <__alt_data_end+0xfc003990>
 8003bbc:	200bd0ba 	srai	r5,r4,2
 8003bc0:	01800044 	movi	r6,1
 8003bc4:	41000117 	ldw	r4,4(r8)
 8003bc8:	314a983a 	sll	r5,r6,r5
 8003bcc:	100d883a 	mov	r6,r2
 8003bd0:	2908b03a 	or	r4,r5,r4
 8003bd4:	41000115 	stw	r4,4(r8)
 8003bd8:	003f9d06 	br	8003a50 <__alt_data_end+0xfc003a50>
 8003bdc:	00815504 	movi	r2,1364
 8003be0:	10c01336 	bltu	r2,r3,8003c30 <_malloc_r+0x718>
 8003be4:	8806d4ba 	srli	r3,r17,18
 8003be8:	19c01f04 	addi	r7,r3,124
 8003bec:	39cb883a 	add	r5,r7,r7
 8003bf0:	003e8d06 	br	8003628 <__alt_data_end+0xfc003628>
 8003bf4:	ad400404 	addi	r21,r21,16
 8003bf8:	003f1d06 	br	8003870 <__alt_data_end+0xfc003870>
 8003bfc:	01001504 	movi	r4,84
 8003c00:	20801c36 	bltu	r4,r2,8003c74 <_malloc_r+0x75c>
 8003c04:	3804d33a 	srli	r2,r7,12
 8003c08:	11001b84 	addi	r4,r2,110
 8003c0c:	210b883a 	add	r5,r4,r4
 8003c10:	003f8006 	br	8003a14 <__alt_data_end+0xfc003a14>
 8003c14:	3083ffcc 	andi	r2,r6,4095
 8003c18:	103f241e 	bne	r2,zero,80038ac <__alt_data_end+0xfc0038ac>
 8003c1c:	99000217 	ldw	r4,8(r19)
 8003c20:	ad85883a 	add	r2,r21,r22
 8003c24:	10800054 	ori	r2,r2,1
 8003c28:	20800115 	stw	r2,4(r4)
 8003c2c:	003f4a06 	br	8003958 <__alt_data_end+0xfc003958>
 8003c30:	01403f04 	movi	r5,252
 8003c34:	01c01f84 	movi	r7,126
 8003c38:	003e7b06 	br	8003628 <__alt_data_end+0xfc003628>
 8003c3c:	00c00044 	movi	r3,1
 8003c40:	002b883a 	mov	r21,zero
 8003c44:	003f3006 	br	8003908 <__alt_data_end+0xfc003908>
 8003c48:	008200b4 	movhi	r2,2050
 8003c4c:	10a64904 	addi	r2,r2,-26332
 8003c50:	15000015 	stw	r20,0(r2)
 8003c54:	003f1b06 	br	80038c4 <__alt_data_end+0xfc0038c4>
 8003c58:	9009883a 	mov	r4,r18
 8003c5c:	81400204 	addi	r5,r16,8
 8003c60:	800ab500 	call	800ab50 <_free_r>
 8003c64:	008200b4 	movhi	r2,2050
 8003c68:	10afd304 	addi	r2,r2,-16564
 8003c6c:	10c00017 	ldw	r3,0(r2)
 8003c70:	003f3906 	br	8003958 <__alt_data_end+0xfc003958>
 8003c74:	01005504 	movi	r4,340
 8003c78:	20800436 	bltu	r4,r2,8003c8c <_malloc_r+0x774>
 8003c7c:	3804d3fa 	srli	r2,r7,15
 8003c80:	11001dc4 	addi	r4,r2,119
 8003c84:	210b883a 	add	r5,r4,r4
 8003c88:	003f6206 	br	8003a14 <__alt_data_end+0xfc003a14>
 8003c8c:	01015504 	movi	r4,1364
 8003c90:	20800436 	bltu	r4,r2,8003ca4 <_malloc_r+0x78c>
 8003c94:	3804d4ba 	srli	r2,r7,18
 8003c98:	11001f04 	addi	r4,r2,124
 8003c9c:	210b883a 	add	r5,r4,r4
 8003ca0:	003f5c06 	br	8003a14 <__alt_data_end+0xfc003a14>
 8003ca4:	01403f04 	movi	r5,252
 8003ca8:	01001f84 	movi	r4,126
 8003cac:	003f5906 	br	8003a14 <__alt_data_end+0xfc003a14>
 8003cb0:	98800117 	ldw	r2,4(r19)
 8003cb4:	003fa906 	br	8003b5c <__alt_data_end+0xfc003b5c>
 8003cb8:	6007883a 	mov	r3,r12
 8003cbc:	003ea206 	br	8003748 <__alt_data_end+0xfc003748>

08003cc0 <memset>:
 8003cc0:	20c000cc 	andi	r3,r4,3
 8003cc4:	2005883a 	mov	r2,r4
 8003cc8:	18004326 	beq	r3,zero,8003dd8 <memset+0x118>
 8003ccc:	31ffffc4 	addi	r7,r6,-1
 8003cd0:	30004026 	beq	r6,zero,8003dd4 <memset+0x114>
 8003cd4:	2813883a 	mov	r9,r5
 8003cd8:	200d883a 	mov	r6,r4
 8003cdc:	2007883a 	mov	r3,r4
 8003ce0:	00000406 	br	8003cf4 <memset+0x34>
 8003ce4:	3a3fffc4 	addi	r8,r7,-1
 8003ce8:	31800044 	addi	r6,r6,1
 8003cec:	38003926 	beq	r7,zero,8003dd4 <memset+0x114>
 8003cf0:	400f883a 	mov	r7,r8
 8003cf4:	18c00044 	addi	r3,r3,1
 8003cf8:	32400005 	stb	r9,0(r6)
 8003cfc:	1a0000cc 	andi	r8,r3,3
 8003d00:	403ff81e 	bne	r8,zero,8003ce4 <__alt_data_end+0xfc003ce4>
 8003d04:	010000c4 	movi	r4,3
 8003d08:	21c02d2e 	bgeu	r4,r7,8003dc0 <memset+0x100>
 8003d0c:	29803fcc 	andi	r6,r5,255
 8003d10:	3008923a 	slli	r4,r6,8
 8003d14:	218cb03a 	or	r6,r4,r6
 8003d18:	3008943a 	slli	r4,r6,16
 8003d1c:	218cb03a 	or	r6,r4,r6
 8003d20:	010003c4 	movi	r4,15
 8003d24:	21c0182e 	bgeu	r4,r7,8003d88 <memset+0xc8>
 8003d28:	3b3ffc04 	addi	r12,r7,-16
 8003d2c:	6018d13a 	srli	r12,r12,4
 8003d30:	1a000104 	addi	r8,r3,4
 8003d34:	1ac00204 	addi	r11,r3,8
 8003d38:	6008913a 	slli	r4,r12,4
 8003d3c:	1a800304 	addi	r10,r3,12
 8003d40:	1813883a 	mov	r9,r3
 8003d44:	21000504 	addi	r4,r4,20
 8003d48:	1909883a 	add	r4,r3,r4
 8003d4c:	49800015 	stw	r6,0(r9)
 8003d50:	41800015 	stw	r6,0(r8)
 8003d54:	59800015 	stw	r6,0(r11)
 8003d58:	51800015 	stw	r6,0(r10)
 8003d5c:	42000404 	addi	r8,r8,16
 8003d60:	4a400404 	addi	r9,r9,16
 8003d64:	5ac00404 	addi	r11,r11,16
 8003d68:	52800404 	addi	r10,r10,16
 8003d6c:	413ff71e 	bne	r8,r4,8003d4c <__alt_data_end+0xfc003d4c>
 8003d70:	63000044 	addi	r12,r12,1
 8003d74:	6018913a 	slli	r12,r12,4
 8003d78:	39c003cc 	andi	r7,r7,15
 8003d7c:	010000c4 	movi	r4,3
 8003d80:	1b07883a 	add	r3,r3,r12
 8003d84:	21c00e2e 	bgeu	r4,r7,8003dc0 <memset+0x100>
 8003d88:	1813883a 	mov	r9,r3
 8003d8c:	3811883a 	mov	r8,r7
 8003d90:	010000c4 	movi	r4,3
 8003d94:	49800015 	stw	r6,0(r9)
 8003d98:	423fff04 	addi	r8,r8,-4
 8003d9c:	4a400104 	addi	r9,r9,4
 8003da0:	223ffc36 	bltu	r4,r8,8003d94 <__alt_data_end+0xfc003d94>
 8003da4:	393fff04 	addi	r4,r7,-4
 8003da8:	2008d0ba 	srli	r4,r4,2
 8003dac:	39c000cc 	andi	r7,r7,3
 8003db0:	21000044 	addi	r4,r4,1
 8003db4:	2109883a 	add	r4,r4,r4
 8003db8:	2109883a 	add	r4,r4,r4
 8003dbc:	1907883a 	add	r3,r3,r4
 8003dc0:	38000426 	beq	r7,zero,8003dd4 <memset+0x114>
 8003dc4:	19cf883a 	add	r7,r3,r7
 8003dc8:	19400005 	stb	r5,0(r3)
 8003dcc:	18c00044 	addi	r3,r3,1
 8003dd0:	19fffd1e 	bne	r3,r7,8003dc8 <__alt_data_end+0xfc003dc8>
 8003dd4:	f800283a 	ret
 8003dd8:	2007883a 	mov	r3,r4
 8003ddc:	300f883a 	mov	r7,r6
 8003de0:	003fc806 	br	8003d04 <__alt_data_end+0xfc003d04>

08003de4 <_printf_r>:
 8003de4:	defffd04 	addi	sp,sp,-12
 8003de8:	dfc00015 	stw	ra,0(sp)
 8003dec:	d9800115 	stw	r6,4(sp)
 8003df0:	d9c00215 	stw	r7,8(sp)
 8003df4:	280d883a 	mov	r6,r5
 8003df8:	21400217 	ldw	r5,8(r4)
 8003dfc:	d9c00104 	addi	r7,sp,4
 8003e00:	80066ec0 	call	80066ec <___vfprintf_internal_r>
 8003e04:	dfc00017 	ldw	ra,0(sp)
 8003e08:	dec00304 	addi	sp,sp,12
 8003e0c:	f800283a 	ret

08003e10 <printf>:
 8003e10:	defffc04 	addi	sp,sp,-16
 8003e14:	dfc00015 	stw	ra,0(sp)
 8003e18:	d9400115 	stw	r5,4(sp)
 8003e1c:	d9800215 	stw	r6,8(sp)
 8003e20:	d9c00315 	stw	r7,12(sp)
 8003e24:	008200b4 	movhi	r2,2050
 8003e28:	10a64804 	addi	r2,r2,-26336
 8003e2c:	10800017 	ldw	r2,0(r2)
 8003e30:	200b883a 	mov	r5,r4
 8003e34:	d9800104 	addi	r6,sp,4
 8003e38:	11000217 	ldw	r4,8(r2)
 8003e3c:	80087e80 	call	80087e8 <__vfprintf_internal>
 8003e40:	dfc00017 	ldw	ra,0(sp)
 8003e44:	dec00404 	addi	sp,sp,16
 8003e48:	f800283a 	ret

08003e4c <_puts_r>:
 8003e4c:	defff604 	addi	sp,sp,-40
 8003e50:	dc000715 	stw	r16,28(sp)
 8003e54:	2021883a 	mov	r16,r4
 8003e58:	2809883a 	mov	r4,r5
 8003e5c:	dc400815 	stw	r17,32(sp)
 8003e60:	dfc00915 	stw	ra,36(sp)
 8003e64:	2823883a 	mov	r17,r5
 8003e68:	80045e40 	call	80045e4 <strlen>
 8003e6c:	00c200b4 	movhi	r3,2050
 8003e70:	18e64804 	addi	r3,r3,-26336
 8003e74:	18c00017 	ldw	r3,0(r3)
 8003e78:	11000044 	addi	r4,r2,1
 8003e7c:	d8800115 	stw	r2,4(sp)
 8003e80:	18c00217 	ldw	r3,8(r3)
 8003e84:	01420074 	movhi	r5,2049
 8003e88:	295e5704 	addi	r5,r5,31068
 8003e8c:	1880030b 	ldhu	r2,12(r3)
 8003e90:	d9400215 	stw	r5,8(sp)
 8003e94:	d9000615 	stw	r4,24(sp)
 8003e98:	01400044 	movi	r5,1
 8003e9c:	01000084 	movi	r4,2
 8003ea0:	d9000515 	stw	r4,20(sp)
 8003ea4:	dc400015 	stw	r17,0(sp)
 8003ea8:	d9400315 	stw	r5,12(sp)
 8003eac:	dec00415 	stw	sp,16(sp)
 8003eb0:	1108000c 	andi	r4,r2,8192
 8003eb4:	2000061e 	bne	r4,zero,8003ed0 <_puts_r+0x84>
 8003eb8:	19401917 	ldw	r5,100(r3)
 8003ebc:	0137ffc4 	movi	r4,-8193
 8003ec0:	10880014 	ori	r2,r2,8192
 8003ec4:	2908703a 	and	r4,r5,r4
 8003ec8:	1880030d 	sth	r2,12(r3)
 8003ecc:	19001915 	stw	r4,100(r3)
 8003ed0:	81400217 	ldw	r5,8(r16)
 8003ed4:	8009883a 	mov	r4,r16
 8003ed8:	d9800404 	addi	r6,sp,16
 8003edc:	800ae400 	call	800ae40 <__sfvwrite_r>
 8003ee0:	1000061e 	bne	r2,zero,8003efc <_puts_r+0xb0>
 8003ee4:	00800284 	movi	r2,10
 8003ee8:	dfc00917 	ldw	ra,36(sp)
 8003eec:	dc400817 	ldw	r17,32(sp)
 8003ef0:	dc000717 	ldw	r16,28(sp)
 8003ef4:	dec00a04 	addi	sp,sp,40
 8003ef8:	f800283a 	ret
 8003efc:	00bfffc4 	movi	r2,-1
 8003f00:	003ff906 	br	8003ee8 <__alt_data_end+0xfc003ee8>

08003f04 <puts>:
 8003f04:	008200b4 	movhi	r2,2050
 8003f08:	10a64804 	addi	r2,r2,-26336
 8003f0c:	200b883a 	mov	r5,r4
 8003f10:	11000017 	ldw	r4,0(r2)
 8003f14:	8003e4c1 	jmpi	8003e4c <_puts_r>

08003f18 <_sbrk_r>:
 8003f18:	defffd04 	addi	sp,sp,-12
 8003f1c:	dc000015 	stw	r16,0(sp)
 8003f20:	040200b4 	movhi	r16,2050
 8003f24:	dc400115 	stw	r17,4(sp)
 8003f28:	842d8804 	addi	r16,r16,-18912
 8003f2c:	2023883a 	mov	r17,r4
 8003f30:	2809883a 	mov	r4,r5
 8003f34:	dfc00215 	stw	ra,8(sp)
 8003f38:	80000015 	stw	zero,0(r16)
 8003f3c:	801472c0 	call	801472c <sbrk>
 8003f40:	00ffffc4 	movi	r3,-1
 8003f44:	10c00526 	beq	r2,r3,8003f5c <_sbrk_r+0x44>
 8003f48:	dfc00217 	ldw	ra,8(sp)
 8003f4c:	dc400117 	ldw	r17,4(sp)
 8003f50:	dc000017 	ldw	r16,0(sp)
 8003f54:	dec00304 	addi	sp,sp,12
 8003f58:	f800283a 	ret
 8003f5c:	80c00017 	ldw	r3,0(r16)
 8003f60:	183ff926 	beq	r3,zero,8003f48 <__alt_data_end+0xfc003f48>
 8003f64:	88c00015 	stw	r3,0(r17)
 8003f68:	003ff706 	br	8003f48 <__alt_data_end+0xfc003f48>

08003f6c <_init_signal_r>:
 8003f6c:	2080b717 	ldw	r2,732(r4)
 8003f70:	defffe04 	addi	sp,sp,-8
 8003f74:	dc000015 	stw	r16,0(sp)
 8003f78:	dfc00115 	stw	ra,4(sp)
 8003f7c:	2021883a 	mov	r16,r4
 8003f80:	10000526 	beq	r2,zero,8003f98 <_init_signal_r+0x2c>
 8003f84:	0005883a 	mov	r2,zero
 8003f88:	dfc00117 	ldw	ra,4(sp)
 8003f8c:	dc000017 	ldw	r16,0(sp)
 8003f90:	dec00204 	addi	sp,sp,8
 8003f94:	f800283a 	ret
 8003f98:	01402004 	movi	r5,128
 8003f9c:	80035180 	call	8003518 <_malloc_r>
 8003fa0:	8080b715 	stw	r2,732(r16)
 8003fa4:	10000926 	beq	r2,zero,8003fcc <_init_signal_r+0x60>
 8003fa8:	0007883a 	mov	r3,zero
 8003fac:	01002004 	movi	r4,128
 8003fb0:	00000106 	br	8003fb8 <_init_signal_r+0x4c>
 8003fb4:	8080b717 	ldw	r2,732(r16)
 8003fb8:	10c5883a 	add	r2,r2,r3
 8003fbc:	10000015 	stw	zero,0(r2)
 8003fc0:	18c00104 	addi	r3,r3,4
 8003fc4:	193ffb1e 	bne	r3,r4,8003fb4 <__alt_data_end+0xfc003fb4>
 8003fc8:	003fee06 	br	8003f84 <__alt_data_end+0xfc003f84>
 8003fcc:	00bfffc4 	movi	r2,-1
 8003fd0:	003fed06 	br	8003f88 <__alt_data_end+0xfc003f88>

08003fd4 <_signal_r>:
 8003fd4:	00c007c4 	movi	r3,31
 8003fd8:	19401536 	bltu	r3,r5,8004030 <_signal_r+0x5c>
 8003fdc:	2080b717 	ldw	r2,732(r4)
 8003fe0:	defffc04 	addi	sp,sp,-16
 8003fe4:	dc800215 	stw	r18,8(sp)
 8003fe8:	dc400115 	stw	r17,4(sp)
 8003fec:	dc000015 	stw	r16,0(sp)
 8003ff0:	dfc00315 	stw	ra,12(sp)
 8003ff4:	3023883a 	mov	r17,r6
 8003ff8:	2021883a 	mov	r16,r4
 8003ffc:	2825883a 	mov	r18,r5
 8004000:	10000f26 	beq	r2,zero,8004040 <_signal_r+0x6c>
 8004004:	948b883a 	add	r5,r18,r18
 8004008:	294b883a 	add	r5,r5,r5
 800400c:	114b883a 	add	r5,r2,r5
 8004010:	28800017 	ldw	r2,0(r5)
 8004014:	2c400015 	stw	r17,0(r5)
 8004018:	dfc00317 	ldw	ra,12(sp)
 800401c:	dc800217 	ldw	r18,8(sp)
 8004020:	dc400117 	ldw	r17,4(sp)
 8004024:	dc000017 	ldw	r16,0(sp)
 8004028:	dec00404 	addi	sp,sp,16
 800402c:	f800283a 	ret
 8004030:	00c00584 	movi	r3,22
 8004034:	20c00015 	stw	r3,0(r4)
 8004038:	00bfffc4 	movi	r2,-1
 800403c:	f800283a 	ret
 8004040:	8003f6c0 	call	8003f6c <_init_signal_r>
 8004044:	1000021e 	bne	r2,zero,8004050 <_signal_r+0x7c>
 8004048:	8080b717 	ldw	r2,732(r16)
 800404c:	003fed06 	br	8004004 <__alt_data_end+0xfc004004>
 8004050:	00bfffc4 	movi	r2,-1
 8004054:	003ff006 	br	8004018 <__alt_data_end+0xfc004018>

08004058 <_raise_r>:
 8004058:	008007c4 	movi	r2,31
 800405c:	11402936 	bltu	r2,r5,8004104 <_raise_r+0xac>
 8004060:	20c0b717 	ldw	r3,732(r4)
 8004064:	defffd04 	addi	sp,sp,-12
 8004068:	dc400115 	stw	r17,4(sp)
 800406c:	dc000015 	stw	r16,0(sp)
 8004070:	dfc00215 	stw	ra,8(sp)
 8004074:	2023883a 	mov	r17,r4
 8004078:	2821883a 	mov	r16,r5
 800407c:	18001726 	beq	r3,zero,80040dc <_raise_r+0x84>
 8004080:	2945883a 	add	r2,r5,r5
 8004084:	1085883a 	add	r2,r2,r2
 8004088:	1887883a 	add	r3,r3,r2
 800408c:	19400017 	ldw	r5,0(r3)
 8004090:	28001226 	beq	r5,zero,80040dc <_raise_r+0x84>
 8004094:	00800044 	movi	r2,1
 8004098:	28800e26 	beq	r5,r2,80040d4 <_raise_r+0x7c>
 800409c:	013fffc4 	movi	r4,-1
 80040a0:	29000926 	beq	r5,r4,80040c8 <_raise_r+0x70>
 80040a4:	18000015 	stw	zero,0(r3)
 80040a8:	8009883a 	mov	r4,r16
 80040ac:	283ee83a 	callr	r5
 80040b0:	0005883a 	mov	r2,zero
 80040b4:	dfc00217 	ldw	ra,8(sp)
 80040b8:	dc400117 	ldw	r17,4(sp)
 80040bc:	dc000017 	ldw	r16,0(sp)
 80040c0:	dec00304 	addi	sp,sp,12
 80040c4:	f800283a 	ret
 80040c8:	00c00584 	movi	r3,22
 80040cc:	88c00015 	stw	r3,0(r17)
 80040d0:	003ff806 	br	80040b4 <__alt_data_end+0xfc0040b4>
 80040d4:	0005883a 	mov	r2,zero
 80040d8:	003ff606 	br	80040b4 <__alt_data_end+0xfc0040b4>
 80040dc:	8809883a 	mov	r4,r17
 80040e0:	80042680 	call	8004268 <_getpid_r>
 80040e4:	8809883a 	mov	r4,r17
 80040e8:	100b883a 	mov	r5,r2
 80040ec:	800d883a 	mov	r6,r16
 80040f0:	dfc00217 	ldw	ra,8(sp)
 80040f4:	dc400117 	ldw	r17,4(sp)
 80040f8:	dc000017 	ldw	r16,0(sp)
 80040fc:	dec00304 	addi	sp,sp,12
 8004100:	80042101 	jmpi	8004210 <_kill_r>
 8004104:	00800584 	movi	r2,22
 8004108:	20800015 	stw	r2,0(r4)
 800410c:	00bfffc4 	movi	r2,-1
 8004110:	f800283a 	ret

08004114 <__sigtramp_r>:
 8004114:	008007c4 	movi	r2,31
 8004118:	11402436 	bltu	r2,r5,80041ac <__sigtramp_r+0x98>
 800411c:	20c0b717 	ldw	r3,732(r4)
 8004120:	defffd04 	addi	sp,sp,-12
 8004124:	dc400115 	stw	r17,4(sp)
 8004128:	dc000015 	stw	r16,0(sp)
 800412c:	dfc00215 	stw	ra,8(sp)
 8004130:	2021883a 	mov	r16,r4
 8004134:	2823883a 	mov	r17,r5
 8004138:	18001826 	beq	r3,zero,800419c <__sigtramp_r+0x88>
 800413c:	8c45883a 	add	r2,r17,r17
 8004140:	1085883a 	add	r2,r2,r2
 8004144:	1885883a 	add	r2,r3,r2
 8004148:	10c00017 	ldw	r3,0(r2)
 800414c:	18001126 	beq	r3,zero,8004194 <__sigtramp_r+0x80>
 8004150:	013fffc4 	movi	r4,-1
 8004154:	19000d26 	beq	r3,r4,800418c <__sigtramp_r+0x78>
 8004158:	01000044 	movi	r4,1
 800415c:	19000926 	beq	r3,r4,8004184 <__sigtramp_r+0x70>
 8004160:	10000015 	stw	zero,0(r2)
 8004164:	8809883a 	mov	r4,r17
 8004168:	183ee83a 	callr	r3
 800416c:	0005883a 	mov	r2,zero
 8004170:	dfc00217 	ldw	ra,8(sp)
 8004174:	dc400117 	ldw	r17,4(sp)
 8004178:	dc000017 	ldw	r16,0(sp)
 800417c:	dec00304 	addi	sp,sp,12
 8004180:	f800283a 	ret
 8004184:	008000c4 	movi	r2,3
 8004188:	003ff906 	br	8004170 <__alt_data_end+0xfc004170>
 800418c:	00800084 	movi	r2,2
 8004190:	003ff706 	br	8004170 <__alt_data_end+0xfc004170>
 8004194:	00800044 	movi	r2,1
 8004198:	003ff506 	br	8004170 <__alt_data_end+0xfc004170>
 800419c:	8003f6c0 	call	8003f6c <_init_signal_r>
 80041a0:	1000041e 	bne	r2,zero,80041b4 <__sigtramp_r+0xa0>
 80041a4:	80c0b717 	ldw	r3,732(r16)
 80041a8:	003fe406 	br	800413c <__alt_data_end+0xfc00413c>
 80041ac:	00bfffc4 	movi	r2,-1
 80041b0:	f800283a 	ret
 80041b4:	00bfffc4 	movi	r2,-1
 80041b8:	003fed06 	br	8004170 <__alt_data_end+0xfc004170>

080041bc <raise>:
 80041bc:	008200b4 	movhi	r2,2050
 80041c0:	10a64804 	addi	r2,r2,-26336
 80041c4:	200b883a 	mov	r5,r4
 80041c8:	11000017 	ldw	r4,0(r2)
 80041cc:	80040581 	jmpi	8004058 <_raise_r>

080041d0 <signal>:
 80041d0:	00c200b4 	movhi	r3,2050
 80041d4:	18e64804 	addi	r3,r3,-26336
 80041d8:	2005883a 	mov	r2,r4
 80041dc:	19000017 	ldw	r4,0(r3)
 80041e0:	280d883a 	mov	r6,r5
 80041e4:	100b883a 	mov	r5,r2
 80041e8:	8003fd41 	jmpi	8003fd4 <_signal_r>

080041ec <_init_signal>:
 80041ec:	008200b4 	movhi	r2,2050
 80041f0:	10a64804 	addi	r2,r2,-26336
 80041f4:	11000017 	ldw	r4,0(r2)
 80041f8:	8003f6c1 	jmpi	8003f6c <_init_signal_r>

080041fc <__sigtramp>:
 80041fc:	008200b4 	movhi	r2,2050
 8004200:	10a64804 	addi	r2,r2,-26336
 8004204:	200b883a 	mov	r5,r4
 8004208:	11000017 	ldw	r4,0(r2)
 800420c:	80041141 	jmpi	8004114 <__sigtramp_r>

08004210 <_kill_r>:
 8004210:	defffd04 	addi	sp,sp,-12
 8004214:	dc000015 	stw	r16,0(sp)
 8004218:	040200b4 	movhi	r16,2050
 800421c:	dc400115 	stw	r17,4(sp)
 8004220:	842d8804 	addi	r16,r16,-18912
 8004224:	2023883a 	mov	r17,r4
 8004228:	2809883a 	mov	r4,r5
 800422c:	300b883a 	mov	r5,r6
 8004230:	dfc00215 	stw	ra,8(sp)
 8004234:	80000015 	stw	zero,0(r16)
 8004238:	8013ef40 	call	8013ef4 <kill>
 800423c:	00ffffc4 	movi	r3,-1
 8004240:	10c00526 	beq	r2,r3,8004258 <_kill_r+0x48>
 8004244:	dfc00217 	ldw	ra,8(sp)
 8004248:	dc400117 	ldw	r17,4(sp)
 800424c:	dc000017 	ldw	r16,0(sp)
 8004250:	dec00304 	addi	sp,sp,12
 8004254:	f800283a 	ret
 8004258:	80c00017 	ldw	r3,0(r16)
 800425c:	183ff926 	beq	r3,zero,8004244 <__alt_data_end+0xfc004244>
 8004260:	88c00015 	stw	r3,0(r17)
 8004264:	003ff706 	br	8004244 <__alt_data_end+0xfc004244>

08004268 <_getpid_r>:
 8004268:	8013d881 	jmpi	8013d88 <getpid>

0800426c <_snprintf_r>:
 800426c:	3005883a 	mov	r2,r6
 8004270:	30003016 	blt	r6,zero,8004334 <_snprintf_r+0xc8>
 8004274:	deffe404 	addi	sp,sp,-112
 8004278:	00c08204 	movi	r3,520
 800427c:	dc001a15 	stw	r16,104(sp)
 8004280:	dfc01b15 	stw	ra,108(sp)
 8004284:	d8c0030d 	sth	r3,12(sp)
 8004288:	d9400015 	stw	r5,0(sp)
 800428c:	d9400415 	stw	r5,16(sp)
 8004290:	380d883a 	mov	r6,r7
 8004294:	2021883a 	mov	r16,r4
 8004298:	10001026 	beq	r2,zero,80042dc <_snprintf_r+0x70>
 800429c:	10bfffc4 	addi	r2,r2,-1
 80042a0:	d8800215 	stw	r2,8(sp)
 80042a4:	d8800515 	stw	r2,20(sp)
 80042a8:	d80b883a 	mov	r5,sp
 80042ac:	00bfffc4 	movi	r2,-1
 80042b0:	d9c01c04 	addi	r7,sp,112
 80042b4:	d880038d 	sth	r2,14(sp)
 80042b8:	800467c0 	call	800467c <___svfprintf_internal_r>
 80042bc:	00ffffc4 	movi	r3,-1
 80042c0:	10c01916 	blt	r2,r3,8004328 <_snprintf_r+0xbc>
 80042c4:	d8c00017 	ldw	r3,0(sp)
 80042c8:	18000005 	stb	zero,0(r3)
 80042cc:	dfc01b17 	ldw	ra,108(sp)
 80042d0:	dc001a17 	ldw	r16,104(sp)
 80042d4:	dec01c04 	addi	sp,sp,112
 80042d8:	f800283a 	ret
 80042dc:	00bfffc4 	movi	r2,-1
 80042e0:	d80b883a 	mov	r5,sp
 80042e4:	d9c01c04 	addi	r7,sp,112
 80042e8:	d8000215 	stw	zero,8(sp)
 80042ec:	d8000515 	stw	zero,20(sp)
 80042f0:	d880038d 	sth	r2,14(sp)
 80042f4:	800467c0 	call	800467c <___svfprintf_internal_r>
 80042f8:	00ffffc4 	movi	r3,-1
 80042fc:	10c00416 	blt	r2,r3,8004310 <_snprintf_r+0xa4>
 8004300:	dfc01b17 	ldw	ra,108(sp)
 8004304:	dc001a17 	ldw	r16,104(sp)
 8004308:	dec01c04 	addi	sp,sp,112
 800430c:	f800283a 	ret
 8004310:	00c022c4 	movi	r3,139
 8004314:	80c00015 	stw	r3,0(r16)
 8004318:	dfc01b17 	ldw	ra,108(sp)
 800431c:	dc001a17 	ldw	r16,104(sp)
 8004320:	dec01c04 	addi	sp,sp,112
 8004324:	f800283a 	ret
 8004328:	00c022c4 	movi	r3,139
 800432c:	80c00015 	stw	r3,0(r16)
 8004330:	003fe406 	br	80042c4 <__alt_data_end+0xfc0042c4>
 8004334:	008022c4 	movi	r2,139
 8004338:	20800015 	stw	r2,0(r4)
 800433c:	00bfffc4 	movi	r2,-1
 8004340:	f800283a 	ret

08004344 <snprintf>:
 8004344:	deffe304 	addi	sp,sp,-116
 8004348:	dfc01b15 	stw	ra,108(sp)
 800434c:	dc001a15 	stw	r16,104(sp)
 8004350:	d9c01c15 	stw	r7,112(sp)
 8004354:	008200b4 	movhi	r2,2050
 8004358:	10a64804 	addi	r2,r2,-26336
 800435c:	14000017 	ldw	r16,0(r2)
 8004360:	28002d16 	blt	r5,zero,8004418 <snprintf+0xd4>
 8004364:	00c08204 	movi	r3,520
 8004368:	d8c0030d 	sth	r3,12(sp)
 800436c:	d9000015 	stw	r4,0(sp)
 8004370:	d9000415 	stw	r4,16(sp)
 8004374:	28001126 	beq	r5,zero,80043bc <snprintf+0x78>
 8004378:	28bfffc4 	addi	r2,r5,-1
 800437c:	d8800215 	stw	r2,8(sp)
 8004380:	d8800515 	stw	r2,20(sp)
 8004384:	8009883a 	mov	r4,r16
 8004388:	00bfffc4 	movi	r2,-1
 800438c:	d80b883a 	mov	r5,sp
 8004390:	d9c01c04 	addi	r7,sp,112
 8004394:	d880038d 	sth	r2,14(sp)
 8004398:	800467c0 	call	800467c <___svfprintf_internal_r>
 800439c:	00ffffc4 	movi	r3,-1
 80043a0:	10c01a16 	blt	r2,r3,800440c <snprintf+0xc8>
 80043a4:	d8c00017 	ldw	r3,0(sp)
 80043a8:	18000005 	stb	zero,0(r3)
 80043ac:	dfc01b17 	ldw	ra,108(sp)
 80043b0:	dc001a17 	ldw	r16,104(sp)
 80043b4:	dec01d04 	addi	sp,sp,116
 80043b8:	f800283a 	ret
 80043bc:	00bfffc4 	movi	r2,-1
 80043c0:	8009883a 	mov	r4,r16
 80043c4:	d80b883a 	mov	r5,sp
 80043c8:	d9c01c04 	addi	r7,sp,112
 80043cc:	d8000215 	stw	zero,8(sp)
 80043d0:	d8000515 	stw	zero,20(sp)
 80043d4:	d880038d 	sth	r2,14(sp)
 80043d8:	800467c0 	call	800467c <___svfprintf_internal_r>
 80043dc:	00ffffc4 	movi	r3,-1
 80043e0:	10c00416 	blt	r2,r3,80043f4 <snprintf+0xb0>
 80043e4:	dfc01b17 	ldw	ra,108(sp)
 80043e8:	dc001a17 	ldw	r16,104(sp)
 80043ec:	dec01d04 	addi	sp,sp,116
 80043f0:	f800283a 	ret
 80043f4:	00c022c4 	movi	r3,139
 80043f8:	80c00015 	stw	r3,0(r16)
 80043fc:	dfc01b17 	ldw	ra,108(sp)
 8004400:	dc001a17 	ldw	r16,104(sp)
 8004404:	dec01d04 	addi	sp,sp,116
 8004408:	f800283a 	ret
 800440c:	00c022c4 	movi	r3,139
 8004410:	80c00015 	stw	r3,0(r16)
 8004414:	003fe306 	br	80043a4 <__alt_data_end+0xfc0043a4>
 8004418:	008022c4 	movi	r2,139
 800441c:	80800015 	stw	r2,0(r16)
 8004420:	00bfffc4 	movi	r2,-1
 8004424:	003fef06 	br	80043e4 <__alt_data_end+0xfc0043e4>

08004428 <strcat>:
 8004428:	defffe04 	addi	sp,sp,-8
 800442c:	dc000015 	stw	r16,0(sp)
 8004430:	dfc00115 	stw	ra,4(sp)
 8004434:	208000cc 	andi	r2,r4,3
 8004438:	2021883a 	mov	r16,r4
 800443c:	1000111e 	bne	r2,zero,8004484 <strcat+0x5c>
 8004440:	20800017 	ldw	r2,0(r4)
 8004444:	027fbff4 	movhi	r9,65279
 8004448:	4a7fbfc4 	addi	r9,r9,-257
 800444c:	0086303a 	nor	r3,zero,r2
 8004450:	02202074 	movhi	r8,32897
 8004454:	1245883a 	add	r2,r2,r9
 8004458:	42202004 	addi	r8,r8,-32640
 800445c:	10c4703a 	and	r2,r2,r3
 8004460:	1204703a 	and	r2,r2,r8
 8004464:	1000071e 	bne	r2,zero,8004484 <strcat+0x5c>
 8004468:	21000104 	addi	r4,r4,4
 800446c:	21800017 	ldw	r6,0(r4)
 8004470:	324f883a 	add	r7,r6,r9
 8004474:	018c303a 	nor	r6,zero,r6
 8004478:	398c703a 	and	r6,r7,r6
 800447c:	320c703a 	and	r6,r6,r8
 8004480:	303ff926 	beq	r6,zero,8004468 <__alt_data_end+0xfc004468>
 8004484:	20800007 	ldb	r2,0(r4)
 8004488:	10000326 	beq	r2,zero,8004498 <strcat+0x70>
 800448c:	21000044 	addi	r4,r4,1
 8004490:	21800007 	ldb	r6,0(r4)
 8004494:	303ffd1e 	bne	r6,zero,800448c <__alt_data_end+0xfc00448c>
 8004498:	80045540 	call	8004554 <strcpy>
 800449c:	8005883a 	mov	r2,r16
 80044a0:	dfc00117 	ldw	ra,4(sp)
 80044a4:	dc000017 	ldw	r16,0(sp)
 80044a8:	dec00204 	addi	sp,sp,8
 80044ac:	f800283a 	ret

080044b0 <strcmp>:
 80044b0:	2144b03a 	or	r2,r4,r5
 80044b4:	108000cc 	andi	r2,r2,3
 80044b8:	1000171e 	bne	r2,zero,8004518 <strcmp+0x68>
 80044bc:	20800017 	ldw	r2,0(r4)
 80044c0:	28c00017 	ldw	r3,0(r5)
 80044c4:	10c0141e 	bne	r2,r3,8004518 <strcmp+0x68>
 80044c8:	027fbff4 	movhi	r9,65279
 80044cc:	4a7fbfc4 	addi	r9,r9,-257
 80044d0:	0086303a 	nor	r3,zero,r2
 80044d4:	02202074 	movhi	r8,32897
 80044d8:	1245883a 	add	r2,r2,r9
 80044dc:	42202004 	addi	r8,r8,-32640
 80044e0:	10c4703a 	and	r2,r2,r3
 80044e4:	1204703a 	and	r2,r2,r8
 80044e8:	10000226 	beq	r2,zero,80044f4 <strcmp+0x44>
 80044ec:	00001706 	br	800454c <strcmp+0x9c>
 80044f0:	1000161e 	bne	r2,zero,800454c <strcmp+0x9c>
 80044f4:	21000104 	addi	r4,r4,4
 80044f8:	20c00017 	ldw	r3,0(r4)
 80044fc:	29400104 	addi	r5,r5,4
 8004500:	29800017 	ldw	r6,0(r5)
 8004504:	1a4f883a 	add	r7,r3,r9
 8004508:	00c4303a 	nor	r2,zero,r3
 800450c:	3884703a 	and	r2,r7,r2
 8004510:	1204703a 	and	r2,r2,r8
 8004514:	19bff626 	beq	r3,r6,80044f0 <__alt_data_end+0xfc0044f0>
 8004518:	20800007 	ldb	r2,0(r4)
 800451c:	1000051e 	bne	r2,zero,8004534 <strcmp+0x84>
 8004520:	00000606 	br	800453c <strcmp+0x8c>
 8004524:	21000044 	addi	r4,r4,1
 8004528:	20800007 	ldb	r2,0(r4)
 800452c:	29400044 	addi	r5,r5,1
 8004530:	10000226 	beq	r2,zero,800453c <strcmp+0x8c>
 8004534:	28c00007 	ldb	r3,0(r5)
 8004538:	10fffa26 	beq	r2,r3,8004524 <__alt_data_end+0xfc004524>
 800453c:	20800003 	ldbu	r2,0(r4)
 8004540:	28c00003 	ldbu	r3,0(r5)
 8004544:	10c5c83a 	sub	r2,r2,r3
 8004548:	f800283a 	ret
 800454c:	0005883a 	mov	r2,zero
 8004550:	f800283a 	ret

08004554 <strcpy>:
 8004554:	2906b03a 	or	r3,r5,r4
 8004558:	18c000cc 	andi	r3,r3,3
 800455c:	2005883a 	mov	r2,r4
 8004560:	1800161e 	bne	r3,zero,80045bc <strcpy+0x68>
 8004564:	29c00017 	ldw	r7,0(r5)
 8004568:	02ffbff4 	movhi	r11,65279
 800456c:	5affbfc4 	addi	r11,r11,-257
 8004570:	02a02074 	movhi	r10,32897
 8004574:	01c8303a 	nor	r4,zero,r7
 8004578:	3ac7883a 	add	r3,r7,r11
 800457c:	52a02004 	addi	r10,r10,-32640
 8004580:	20c6703a 	and	r3,r4,r3
 8004584:	1a86703a 	and	r3,r3,r10
 8004588:	18000c1e 	bne	r3,zero,80045bc <strcpy+0x68>
 800458c:	1011883a 	mov	r8,r2
 8004590:	41c00015 	stw	r7,0(r8)
 8004594:	29400104 	addi	r5,r5,4
 8004598:	29c00017 	ldw	r7,0(r5)
 800459c:	41800104 	addi	r6,r8,4
 80045a0:	3011883a 	mov	r8,r6
 80045a4:	01d2303a 	nor	r9,zero,r7
 80045a8:	3ac7883a 	add	r3,r7,r11
 80045ac:	48c6703a 	and	r3,r9,r3
 80045b0:	1a86703a 	and	r3,r3,r10
 80045b4:	183ff626 	beq	r3,zero,8004590 <__alt_data_end+0xfc004590>
 80045b8:	00000106 	br	80045c0 <strcpy+0x6c>
 80045bc:	100d883a 	mov	r6,r2
 80045c0:	28c00003 	ldbu	r3,0(r5)
 80045c4:	31800044 	addi	r6,r6,1
 80045c8:	29400044 	addi	r5,r5,1
 80045cc:	30ffffc5 	stb	r3,-1(r6)
 80045d0:	18c03fcc 	andi	r3,r3,255
 80045d4:	18c0201c 	xori	r3,r3,128
 80045d8:	18ffe004 	addi	r3,r3,-128
 80045dc:	183ff81e 	bne	r3,zero,80045c0 <__alt_data_end+0xfc0045c0>
 80045e0:	f800283a 	ret

080045e4 <strlen>:
 80045e4:	208000cc 	andi	r2,r4,3
 80045e8:	10002026 	beq	r2,zero,800466c <strlen+0x88>
 80045ec:	20800007 	ldb	r2,0(r4)
 80045f0:	10002026 	beq	r2,zero,8004674 <strlen+0x90>
 80045f4:	2005883a 	mov	r2,r4
 80045f8:	00000206 	br	8004604 <strlen+0x20>
 80045fc:	10c00007 	ldb	r3,0(r2)
 8004600:	18001826 	beq	r3,zero,8004664 <strlen+0x80>
 8004604:	10800044 	addi	r2,r2,1
 8004608:	10c000cc 	andi	r3,r2,3
 800460c:	183ffb1e 	bne	r3,zero,80045fc <__alt_data_end+0xfc0045fc>
 8004610:	10c00017 	ldw	r3,0(r2)
 8004614:	01ffbff4 	movhi	r7,65279
 8004618:	39ffbfc4 	addi	r7,r7,-257
 800461c:	00ca303a 	nor	r5,zero,r3
 8004620:	01a02074 	movhi	r6,32897
 8004624:	19c7883a 	add	r3,r3,r7
 8004628:	31a02004 	addi	r6,r6,-32640
 800462c:	1946703a 	and	r3,r3,r5
 8004630:	1986703a 	and	r3,r3,r6
 8004634:	1800091e 	bne	r3,zero,800465c <strlen+0x78>
 8004638:	10800104 	addi	r2,r2,4
 800463c:	10c00017 	ldw	r3,0(r2)
 8004640:	19cb883a 	add	r5,r3,r7
 8004644:	00c6303a 	nor	r3,zero,r3
 8004648:	28c6703a 	and	r3,r5,r3
 800464c:	1986703a 	and	r3,r3,r6
 8004650:	183ff926 	beq	r3,zero,8004638 <__alt_data_end+0xfc004638>
 8004654:	00000106 	br	800465c <strlen+0x78>
 8004658:	10800044 	addi	r2,r2,1
 800465c:	10c00007 	ldb	r3,0(r2)
 8004660:	183ffd1e 	bne	r3,zero,8004658 <__alt_data_end+0xfc004658>
 8004664:	1105c83a 	sub	r2,r2,r4
 8004668:	f800283a 	ret
 800466c:	2005883a 	mov	r2,r4
 8004670:	003fe706 	br	8004610 <__alt_data_end+0xfc004610>
 8004674:	0005883a 	mov	r2,zero
 8004678:	f800283a 	ret

0800467c <___svfprintf_internal_r>:
 800467c:	deffb504 	addi	sp,sp,-300
 8004680:	dfc04a15 	stw	ra,296(sp)
 8004684:	dd804715 	stw	r22,284(sp)
 8004688:	d9002f15 	stw	r4,188(sp)
 800468c:	282d883a 	mov	r22,r5
 8004690:	d9802915 	stw	r6,164(sp)
 8004694:	d9c02d15 	stw	r7,180(sp)
 8004698:	df004915 	stw	fp,292(sp)
 800469c:	ddc04815 	stw	r23,288(sp)
 80046a0:	dd404615 	stw	r21,280(sp)
 80046a4:	dd004515 	stw	r20,276(sp)
 80046a8:	dcc04415 	stw	r19,272(sp)
 80046ac:	dc804315 	stw	r18,268(sp)
 80046b0:	dc404215 	stw	r17,264(sp)
 80046b4:	dc004115 	stw	r16,260(sp)
 80046b8:	800b5000 	call	800b500 <_localeconv_r>
 80046bc:	10800017 	ldw	r2,0(r2)
 80046c0:	1009883a 	mov	r4,r2
 80046c4:	d8803515 	stw	r2,212(sp)
 80046c8:	80045e40 	call	80045e4 <strlen>
 80046cc:	d8803915 	stw	r2,228(sp)
 80046d0:	b080030b 	ldhu	r2,12(r22)
 80046d4:	1080200c 	andi	r2,r2,128
 80046d8:	10000226 	beq	r2,zero,80046e4 <___svfprintf_internal_r+0x68>
 80046dc:	b0800417 	ldw	r2,16(r22)
 80046e0:	10067426 	beq	r2,zero,80060b4 <___svfprintf_internal_r+0x1a38>
 80046e4:	d9001dc4 	addi	r4,sp,119
 80046e8:	ddc01e04 	addi	r23,sp,120
 80046ec:	d9400404 	addi	r5,sp,16
 80046f0:	05020074 	movhi	r20,2049
 80046f4:	b905c83a 	sub	r2,r23,r4
 80046f8:	a51e6884 	addi	r20,r20,31138
 80046fc:	d9002815 	stw	r4,160(sp)
 8004700:	d9401e15 	stw	r5,120(sp)
 8004704:	d8002015 	stw	zero,128(sp)
 8004708:	d8001f15 	stw	zero,124(sp)
 800470c:	d8003315 	stw	zero,204(sp)
 8004710:	d8003715 	stw	zero,220(sp)
 8004714:	d8003815 	stw	zero,224(sp)
 8004718:	d8003b15 	stw	zero,236(sp)
 800471c:	d8003a15 	stw	zero,232(sp)
 8004720:	d8003015 	stw	zero,192(sp)
 8004724:	2811883a 	mov	r8,r5
 8004728:	d8803d15 	stw	r2,244(sp)
 800472c:	d8c02917 	ldw	r3,164(sp)
 8004730:	18800007 	ldb	r2,0(r3)
 8004734:	1001fa26 	beq	r2,zero,8004f20 <___svfprintf_internal_r+0x8a4>
 8004738:	00c00944 	movi	r3,37
 800473c:	dc002917 	ldw	r16,164(sp)
 8004740:	10c0021e 	bne	r2,r3,800474c <___svfprintf_internal_r+0xd0>
 8004744:	00001606 	br	80047a0 <___svfprintf_internal_r+0x124>
 8004748:	10c08526 	beq	r2,r3,8004960 <___svfprintf_internal_r+0x2e4>
 800474c:	84000044 	addi	r16,r16,1
 8004750:	80800007 	ldb	r2,0(r16)
 8004754:	103ffc1e 	bne	r2,zero,8004748 <__alt_data_end+0xfc004748>
 8004758:	d9002917 	ldw	r4,164(sp)
 800475c:	8123c83a 	sub	r17,r16,r4
 8004760:	88000f26 	beq	r17,zero,80047a0 <___svfprintf_internal_r+0x124>
 8004764:	d8802917 	ldw	r2,164(sp)
 8004768:	d8c02017 	ldw	r3,128(sp)
 800476c:	44400115 	stw	r17,4(r8)
 8004770:	40800015 	stw	r2,0(r8)
 8004774:	d8801f17 	ldw	r2,124(sp)
 8004778:	1c47883a 	add	r3,r3,r17
 800477c:	d8c02015 	stw	r3,128(sp)
 8004780:	10800044 	addi	r2,r2,1
 8004784:	d8801f15 	stw	r2,124(sp)
 8004788:	00c001c4 	movi	r3,7
 800478c:	18807716 	blt	r3,r2,800496c <___svfprintf_internal_r+0x2f0>
 8004790:	42000204 	addi	r8,r8,8
 8004794:	d8c03017 	ldw	r3,192(sp)
 8004798:	1c47883a 	add	r3,r3,r17
 800479c:	d8c03015 	stw	r3,192(sp)
 80047a0:	80800007 	ldb	r2,0(r16)
 80047a4:	10007826 	beq	r2,zero,8004988 <___svfprintf_internal_r+0x30c>
 80047a8:	80800044 	addi	r2,r16,1
 80047ac:	84000047 	ldb	r16,1(r16)
 80047b0:	0027883a 	mov	r19,zero
 80047b4:	0039883a 	mov	fp,zero
 80047b8:	dcc02a05 	stb	r19,168(sp)
 80047bc:	d8002785 	stb	zero,158(sp)
 80047c0:	027fffc4 	movi	r9,-1
 80047c4:	d8002e15 	stw	zero,184(sp)
 80047c8:	04401604 	movi	r17,88
 80047cc:	04800244 	movi	r18,9
 80047d0:	da002915 	stw	r8,164(sp)
 80047d4:	e027883a 	mov	r19,fp
 80047d8:	17000044 	addi	fp,r2,1
 80047dc:	80bff804 	addi	r2,r16,-32
 80047e0:	88830036 	bltu	r17,r2,80053e4 <___svfprintf_internal_r+0xd68>
 80047e4:	100490ba 	slli	r2,r2,2
 80047e8:	01020034 	movhi	r4,2048
 80047ec:	2111ff04 	addi	r4,r4,18428
 80047f0:	1105883a 	add	r2,r2,r4
 80047f4:	10800017 	ldw	r2,0(r2)
 80047f8:	1000683a 	jmp	r2
 80047fc:	08005228 	cmpgeui	zero,at,328
 8004800:	080053e4 	muli	zero,at,335
 8004804:	080053e4 	muli	zero,at,335
 8004808:	08005244 	addi	zero,at,329
 800480c:	080053e4 	muli	zero,at,335
 8004810:	080053e4 	muli	zero,at,335
 8004814:	080053e4 	muli	zero,at,335
 8004818:	080053e4 	muli	zero,at,335
 800481c:	080053e4 	muli	zero,at,335
 8004820:	080053e4 	muli	zero,at,335
 8004824:	08005330 	cmpltui	zero,at,332
 8004828:	08005358 	cmpnei	zero,at,333
 800482c:	080053e4 	muli	zero,at,335
 8004830:	080049e8 	cmpgeui	zero,at,295
 8004834:	080049f8 	rdprs	zero,at,295
 8004838:	080053e4 	muli	zero,at,335
 800483c:	08004a48 	cmpgei	zero,at,297
 8004840:	08004a58 	cmpnei	zero,at,297
 8004844:	08004a58 	cmpnei	zero,at,297
 8004848:	08004a58 	cmpnei	zero,at,297
 800484c:	08004a58 	cmpnei	zero,at,297
 8004850:	08004a58 	cmpnei	zero,at,297
 8004854:	08004a58 	cmpnei	zero,at,297
 8004858:	08004a58 	cmpnei	zero,at,297
 800485c:	08004a58 	cmpnei	zero,at,297
 8004860:	08004a58 	cmpnei	zero,at,297
 8004864:	080053e4 	muli	zero,at,335
 8004868:	080053e4 	muli	zero,at,335
 800486c:	080053e4 	muli	zero,at,335
 8004870:	080053e4 	muli	zero,at,335
 8004874:	080053e4 	muli	zero,at,335
 8004878:	080053e4 	muli	zero,at,335
 800487c:	080053e4 	muli	zero,at,335
 8004880:	080053e4 	muli	zero,at,335
 8004884:	080053e4 	muli	zero,at,335
 8004888:	080053e4 	muli	zero,at,335
 800488c:	08004a9c 	xori	zero,at,298
 8004890:	08004f28 	cmpgeui	zero,at,316
 8004894:	080053e4 	muli	zero,at,335
 8004898:	08004f28 	cmpgeui	zero,at,316
 800489c:	080053e4 	muli	zero,at,335
 80048a0:	080053e4 	muli	zero,at,335
 80048a4:	080053e4 	muli	zero,at,335
 80048a8:	080053e4 	muli	zero,at,335
 80048ac:	08004fd0 	cmplti	zero,at,319
 80048b0:	080053e4 	muli	zero,at,335
 80048b4:	080053e4 	muli	zero,at,335
 80048b8:	08004fe0 	cmpeqi	zero,at,319
 80048bc:	080053e4 	muli	zero,at,335
 80048c0:	080053e4 	muli	zero,at,335
 80048c4:	080053e4 	muli	zero,at,335
 80048c8:	080053e4 	muli	zero,at,335
 80048cc:	080053e4 	muli	zero,at,335
 80048d0:	08005020 	cmpeqi	zero,at,320
 80048d4:	080053e4 	muli	zero,at,335
 80048d8:	080053e4 	muli	zero,at,335
 80048dc:	08005174 	orhi	zero,at,325
 80048e0:	080053e4 	muli	zero,at,335
 80048e4:	080053e4 	muli	zero,at,335
 80048e8:	080053e4 	muli	zero,at,335
 80048ec:	080053e4 	muli	zero,at,335
 80048f0:	080053e4 	muli	zero,at,335
 80048f4:	080053e4 	muli	zero,at,335
 80048f8:	080053e4 	muli	zero,at,335
 80048fc:	080053e4 	muli	zero,at,335
 8004900:	080053e4 	muli	zero,at,335
 8004904:	080053e4 	muli	zero,at,335
 8004908:	080051dc 	xori	zero,at,327
 800490c:	080050a0 	cmpeqi	zero,at,322
 8004910:	08004f28 	cmpgeui	zero,at,316
 8004914:	08004f28 	cmpgeui	zero,at,316
 8004918:	08004f28 	cmpgeui	zero,at,316
 800491c:	0800510c 	andi	zero,at,324
 8004920:	080050a0 	cmpeqi	zero,at,322
 8004924:	080053e4 	muli	zero,at,335
 8004928:	080053e4 	muli	zero,at,335
 800492c:	0800511c 	xori	zero,at,324
 8004930:	080053e4 	muli	zero,at,335
 8004934:	08005134 	orhi	zero,at,324
 8004938:	080053a8 	cmpgeui	zero,at,334
 800493c:	08005054 	ori	zero,at,321
 8004940:	08005320 	cmpeqi	zero,at,332
 8004944:	080053e4 	muli	zero,at,335
 8004948:	08005254 	ori	zero,at,329
 800494c:	080053e4 	muli	zero,at,335
 8004950:	0800536c 	andhi	zero,at,333
 8004954:	080053e4 	muli	zero,at,335
 8004958:	080053e4 	muli	zero,at,335
 800495c:	080052d4 	ori	zero,at,331
 8004960:	d9402917 	ldw	r5,164(sp)
 8004964:	8163c83a 	sub	r17,r16,r5
 8004968:	003f7d06 	br	8004760 <__alt_data_end+0xfc004760>
 800496c:	d9002f17 	ldw	r4,188(sp)
 8004970:	b00b883a 	mov	r5,r22
 8004974:	b80d883a 	mov	r6,r23
 8004978:	800d2000 	call	800d200 <__ssprint_r>
 800497c:	1000081e 	bne	r2,zero,80049a0 <___svfprintf_internal_r+0x324>
 8004980:	da000404 	addi	r8,sp,16
 8004984:	003f8306 	br	8004794 <__alt_data_end+0xfc004794>
 8004988:	d8802017 	ldw	r2,128(sp)
 800498c:	10000426 	beq	r2,zero,80049a0 <___svfprintf_internal_r+0x324>
 8004990:	d9002f17 	ldw	r4,188(sp)
 8004994:	b00b883a 	mov	r5,r22
 8004998:	d9801e04 	addi	r6,sp,120
 800499c:	800d2000 	call	800d200 <__ssprint_r>
 80049a0:	b080030b 	ldhu	r2,12(r22)
 80049a4:	1080100c 	andi	r2,r2,64
 80049a8:	10000d1e 	bne	r2,zero,80049e0 <___svfprintf_internal_r+0x364>
 80049ac:	d8803017 	ldw	r2,192(sp)
 80049b0:	dfc04a17 	ldw	ra,296(sp)
 80049b4:	df004917 	ldw	fp,292(sp)
 80049b8:	ddc04817 	ldw	r23,288(sp)
 80049bc:	dd804717 	ldw	r22,284(sp)
 80049c0:	dd404617 	ldw	r21,280(sp)
 80049c4:	dd004517 	ldw	r20,276(sp)
 80049c8:	dcc04417 	ldw	r19,272(sp)
 80049cc:	dc804317 	ldw	r18,268(sp)
 80049d0:	dc404217 	ldw	r17,264(sp)
 80049d4:	dc004117 	ldw	r16,260(sp)
 80049d8:	dec04b04 	addi	sp,sp,300
 80049dc:	f800283a 	ret
 80049e0:	00bfffc4 	movi	r2,-1
 80049e4:	003ff206 	br	80049b0 <__alt_data_end+0xfc0049b0>
 80049e8:	e005883a 	mov	r2,fp
 80049ec:	9cc00114 	ori	r19,r19,4
 80049f0:	e4000007 	ldb	r16,0(fp)
 80049f4:	003f7806 	br	80047d8 <__alt_data_end+0xfc0047d8>
 80049f8:	e4000007 	ldb	r16,0(fp)
 80049fc:	01000a84 	movi	r4,42
 8004a00:	e0800044 	addi	r2,fp,1
 8004a04:	81071026 	beq	r16,r4,8006648 <___svfprintf_internal_r+0x1fcc>
 8004a08:	857ff404 	addi	r21,r16,-48
 8004a0c:	1039883a 	mov	fp,r2
 8004a10:	0013883a 	mov	r9,zero
 8004a14:	957f7136 	bltu	r18,r21,80047dc <__alt_data_end+0xfc0047dc>
 8004a18:	0009883a 	mov	r4,zero
 8004a1c:	01400284 	movi	r5,10
 8004a20:	8002f580 	call	8002f58 <__mulsi3>
 8004a24:	e4000007 	ldb	r16,0(fp)
 8004a28:	a889883a 	add	r4,r21,r2
 8004a2c:	e7000044 	addi	fp,fp,1
 8004a30:	857ff404 	addi	r21,r16,-48
 8004a34:	957ff92e 	bgeu	r18,r21,8004a1c <__alt_data_end+0xfc004a1c>
 8004a38:	2013883a 	mov	r9,r4
 8004a3c:	203f670e 	bge	r4,zero,80047dc <__alt_data_end+0xfc0047dc>
 8004a40:	027fffc4 	movi	r9,-1
 8004a44:	003f6506 	br	80047dc <__alt_data_end+0xfc0047dc>
 8004a48:	9cc02014 	ori	r19,r19,128
 8004a4c:	e005883a 	mov	r2,fp
 8004a50:	e4000007 	ldb	r16,0(fp)
 8004a54:	003f6006 	br	80047d8 <__alt_data_end+0xfc0047d8>
 8004a58:	857ff404 	addi	r21,r16,-48
 8004a5c:	d8002e15 	stw	zero,184(sp)
 8004a60:	e021883a 	mov	r16,fp
 8004a64:	0009883a 	mov	r4,zero
 8004a68:	da402b15 	stw	r9,172(sp)
 8004a6c:	01400284 	movi	r5,10
 8004a70:	8002f580 	call	8002f58 <__mulsi3>
 8004a74:	81400007 	ldb	r5,0(r16)
 8004a78:	1549883a 	add	r4,r2,r21
 8004a7c:	e7000044 	addi	fp,fp,1
 8004a80:	2d7ff404 	addi	r21,r5,-48
 8004a84:	e021883a 	mov	r16,fp
 8004a88:	957ff82e 	bgeu	r18,r21,8004a6c <__alt_data_end+0xfc004a6c>
 8004a8c:	2821883a 	mov	r16,r5
 8004a90:	d9002e15 	stw	r4,184(sp)
 8004a94:	da402b17 	ldw	r9,172(sp)
 8004a98:	003f5006 	br	80047dc <__alt_data_end+0xfc0047dc>
 8004a9c:	da002917 	ldw	r8,164(sp)
 8004aa0:	df002915 	stw	fp,164(sp)
 8004aa4:	9839883a 	mov	fp,r19
 8004aa8:	dcc02a03 	ldbu	r19,168(sp)
 8004aac:	e7000414 	ori	fp,fp,16
 8004ab0:	e080080c 	andi	r2,fp,32
 8004ab4:	dcc02785 	stb	r19,158(sp)
 8004ab8:	d8c02d17 	ldw	r3,180(sp)
 8004abc:	10018026 	beq	r2,zero,80050c0 <___svfprintf_internal_r+0xa44>
 8004ac0:	d9002d17 	ldw	r4,180(sp)
 8004ac4:	18800117 	ldw	r2,4(r3)
 8004ac8:	1c800017 	ldw	r18,0(r3)
 8004acc:	21000204 	addi	r4,r4,8
 8004ad0:	d9002d15 	stw	r4,180(sp)
 8004ad4:	102b883a 	mov	r21,r2
 8004ad8:	10018216 	blt	r2,zero,80050e4 <___svfprintf_internal_r+0xa68>
 8004adc:	dcc02783 	ldbu	r19,158(sp)
 8004ae0:	da403215 	stw	r9,200(sp)
 8004ae4:	00800044 	movi	r2,1
 8004ae8:	9546b03a 	or	r3,r18,r21
 8004aec:	48000216 	blt	r9,zero,8004af8 <___svfprintf_internal_r+0x47c>
 8004af0:	013fdfc4 	movi	r4,-129
 8004af4:	e138703a 	and	fp,fp,r4
 8004af8:	1802471e 	bne	r3,zero,8005418 <___svfprintf_internal_r+0xd9c>
 8004afc:	48035226 	beq	r9,zero,8005848 <___svfprintf_internal_r+0x11cc>
 8004b00:	10803fcc 	andi	r2,r2,255
 8004b04:	00c00044 	movi	r3,1
 8004b08:	10c26626 	beq	r2,r3,80054a4 <___svfprintf_internal_r+0xe28>
 8004b0c:	00c00084 	movi	r3,2
 8004b10:	10c2e826 	beq	r2,r3,80056b4 <___svfprintf_internal_r+0x1038>
 8004b14:	b807883a 	mov	r3,r23
 8004b18:	9008d0fa 	srli	r4,r18,3
 8004b1c:	a80a977a 	slli	r5,r21,29
 8004b20:	a82ad0fa 	srli	r21,r21,3
 8004b24:	948001cc 	andi	r18,r18,7
 8004b28:	90800c04 	addi	r2,r18,48
 8004b2c:	18ffffc4 	addi	r3,r3,-1
 8004b30:	2924b03a 	or	r18,r5,r4
 8004b34:	18800005 	stb	r2,0(r3)
 8004b38:	9548b03a 	or	r4,r18,r21
 8004b3c:	203ff61e 	bne	r4,zero,8004b18 <__alt_data_end+0xfc004b18>
 8004b40:	e100004c 	andi	r4,fp,1
 8004b44:	d8c03115 	stw	r3,196(sp)
 8004b48:	2002e826 	beq	r4,zero,80056ec <___svfprintf_internal_r+0x1070>
 8004b4c:	10803fcc 	andi	r2,r2,255
 8004b50:	1080201c 	xori	r2,r2,128
 8004b54:	10bfe004 	addi	r2,r2,-128
 8004b58:	01000c04 	movi	r4,48
 8004b5c:	11056d26 	beq	r2,r4,8006114 <___svfprintf_internal_r+0x1a98>
 8004b60:	d9403117 	ldw	r5,196(sp)
 8004b64:	193fffc5 	stb	r4,-1(r3)
 8004b68:	297fffc4 	addi	r5,r5,-1
 8004b6c:	d9403115 	stw	r5,196(sp)
 8004b70:	b963c83a 	sub	r17,r23,r5
 8004b74:	8805883a 	mov	r2,r17
 8004b78:	8a40010e 	bge	r17,r9,8004b80 <___svfprintf_internal_r+0x504>
 8004b7c:	4805883a 	mov	r2,r9
 8004b80:	d8802a15 	stw	r2,168(sp)
 8004b84:	d8003415 	stw	zero,208(sp)
 8004b88:	98803fcc 	andi	r2,r19,255
 8004b8c:	1080201c 	xori	r2,r2,128
 8004b90:	10bfe004 	addi	r2,r2,-128
 8004b94:	10000326 	beq	r2,zero,8004ba4 <___svfprintf_internal_r+0x528>
 8004b98:	d8c02a17 	ldw	r3,168(sp)
 8004b9c:	18c00044 	addi	r3,r3,1
 8004ba0:	d8c02a15 	stw	r3,168(sp)
 8004ba4:	e0c0008c 	andi	r3,fp,2
 8004ba8:	d8c02b15 	stw	r3,172(sp)
 8004bac:	18000326 	beq	r3,zero,8004bbc <___svfprintf_internal_r+0x540>
 8004bb0:	d8c02a17 	ldw	r3,168(sp)
 8004bb4:	18c00084 	addi	r3,r3,2
 8004bb8:	d8c02a15 	stw	r3,168(sp)
 8004bbc:	e0c0210c 	andi	r3,fp,132
 8004bc0:	d8c02c15 	stw	r3,176(sp)
 8004bc4:	1802121e 	bne	r3,zero,8005410 <___svfprintf_internal_r+0xd94>
 8004bc8:	d9002e17 	ldw	r4,184(sp)
 8004bcc:	d8c02a17 	ldw	r3,168(sp)
 8004bd0:	20ebc83a 	sub	r21,r4,r3
 8004bd4:	05420e0e 	bge	zero,r21,8005410 <___svfprintf_internal_r+0xd94>
 8004bd8:	02400404 	movi	r9,16
 8004bdc:	d8c02017 	ldw	r3,128(sp)
 8004be0:	d8801f17 	ldw	r2,124(sp)
 8004be4:	4d45aa0e 	bge	r9,r21,8006290 <___svfprintf_internal_r+0x1c14>
 8004be8:	01420074 	movhi	r5,2049
 8004bec:	a809883a 	mov	r4,r21
 8004bf0:	295e6c84 	addi	r5,r5,31154
 8004bf4:	dc003c15 	stw	r16,240(sp)
 8004bf8:	882b883a 	mov	r21,r17
 8004bfc:	d9403615 	stw	r5,216(sp)
 8004c00:	4827883a 	mov	r19,r9
 8004c04:	048001c4 	movi	r18,7
 8004c08:	dc002f17 	ldw	r16,188(sp)
 8004c0c:	2023883a 	mov	r17,r4
 8004c10:	00000306 	br	8004c20 <___svfprintf_internal_r+0x5a4>
 8004c14:	8c7ffc04 	addi	r17,r17,-16
 8004c18:	42000204 	addi	r8,r8,8
 8004c1c:	9c40130e 	bge	r19,r17,8004c6c <___svfprintf_internal_r+0x5f0>
 8004c20:	01020074 	movhi	r4,2049
 8004c24:	18c00404 	addi	r3,r3,16
 8004c28:	10800044 	addi	r2,r2,1
 8004c2c:	211e6c84 	addi	r4,r4,31154
 8004c30:	41000015 	stw	r4,0(r8)
 8004c34:	44c00115 	stw	r19,4(r8)
 8004c38:	d8c02015 	stw	r3,128(sp)
 8004c3c:	d8801f15 	stw	r2,124(sp)
 8004c40:	90bff40e 	bge	r18,r2,8004c14 <__alt_data_end+0xfc004c14>
 8004c44:	8009883a 	mov	r4,r16
 8004c48:	b00b883a 	mov	r5,r22
 8004c4c:	b80d883a 	mov	r6,r23
 8004c50:	800d2000 	call	800d200 <__ssprint_r>
 8004c54:	103f521e 	bne	r2,zero,80049a0 <__alt_data_end+0xfc0049a0>
 8004c58:	8c7ffc04 	addi	r17,r17,-16
 8004c5c:	d8c02017 	ldw	r3,128(sp)
 8004c60:	d8801f17 	ldw	r2,124(sp)
 8004c64:	da000404 	addi	r8,sp,16
 8004c68:	9c7fed16 	blt	r19,r17,8004c20 <__alt_data_end+0xfc004c20>
 8004c6c:	dc003c17 	ldw	r16,240(sp)
 8004c70:	8809883a 	mov	r4,r17
 8004c74:	a823883a 	mov	r17,r21
 8004c78:	202b883a 	mov	r21,r4
 8004c7c:	d9403617 	ldw	r5,216(sp)
 8004c80:	a8c7883a 	add	r3,r21,r3
 8004c84:	10800044 	addi	r2,r2,1
 8004c88:	41400015 	stw	r5,0(r8)
 8004c8c:	45400115 	stw	r21,4(r8)
 8004c90:	d8c02015 	stw	r3,128(sp)
 8004c94:	d8801f15 	stw	r2,124(sp)
 8004c98:	010001c4 	movi	r4,7
 8004c9c:	20834416 	blt	r4,r2,80059b0 <___svfprintf_internal_r+0x1334>
 8004ca0:	d8802787 	ldb	r2,158(sp)
 8004ca4:	42000204 	addi	r8,r8,8
 8004ca8:	10000c26 	beq	r2,zero,8004cdc <___svfprintf_internal_r+0x660>
 8004cac:	d8801f17 	ldw	r2,124(sp)
 8004cb0:	d9002784 	addi	r4,sp,158
 8004cb4:	18c00044 	addi	r3,r3,1
 8004cb8:	10800044 	addi	r2,r2,1
 8004cbc:	41000015 	stw	r4,0(r8)
 8004cc0:	01000044 	movi	r4,1
 8004cc4:	41000115 	stw	r4,4(r8)
 8004cc8:	d8c02015 	stw	r3,128(sp)
 8004ccc:	d8801f15 	stw	r2,124(sp)
 8004cd0:	010001c4 	movi	r4,7
 8004cd4:	2082ee16 	blt	r4,r2,8005890 <___svfprintf_internal_r+0x1214>
 8004cd8:	42000204 	addi	r8,r8,8
 8004cdc:	d8802b17 	ldw	r2,172(sp)
 8004ce0:	10000c26 	beq	r2,zero,8004d14 <___svfprintf_internal_r+0x698>
 8004ce4:	d8801f17 	ldw	r2,124(sp)
 8004ce8:	d9002704 	addi	r4,sp,156
 8004cec:	18c00084 	addi	r3,r3,2
 8004cf0:	10800044 	addi	r2,r2,1
 8004cf4:	41000015 	stw	r4,0(r8)
 8004cf8:	01000084 	movi	r4,2
 8004cfc:	41000115 	stw	r4,4(r8)
 8004d00:	d8c02015 	stw	r3,128(sp)
 8004d04:	d8801f15 	stw	r2,124(sp)
 8004d08:	010001c4 	movi	r4,7
 8004d0c:	2082e816 	blt	r4,r2,80058b0 <___svfprintf_internal_r+0x1234>
 8004d10:	42000204 	addi	r8,r8,8
 8004d14:	d9002c17 	ldw	r4,176(sp)
 8004d18:	00802004 	movi	r2,128
 8004d1c:	20823126 	beq	r4,r2,80055e4 <___svfprintf_internal_r+0xf68>
 8004d20:	d9403217 	ldw	r5,200(sp)
 8004d24:	2c67c83a 	sub	r19,r5,r17
 8004d28:	04c02f0e 	bge	zero,r19,8004de8 <___svfprintf_internal_r+0x76c>
 8004d2c:	05400404 	movi	r21,16
 8004d30:	d8801f17 	ldw	r2,124(sp)
 8004d34:	acc4260e 	bge	r21,r19,8005dd0 <___svfprintf_internal_r+0x1754>
 8004d38:	01420074 	movhi	r5,2049
 8004d3c:	9809883a 	mov	r4,r19
 8004d40:	295e6884 	addi	r5,r5,31138
 8004d44:	dc002c15 	stw	r16,176(sp)
 8004d48:	8827883a 	mov	r19,r17
 8004d4c:	d9402b15 	stw	r5,172(sp)
 8004d50:	048001c4 	movi	r18,7
 8004d54:	dc002f17 	ldw	r16,188(sp)
 8004d58:	2023883a 	mov	r17,r4
 8004d5c:	00000306 	br	8004d6c <___svfprintf_internal_r+0x6f0>
 8004d60:	8c7ffc04 	addi	r17,r17,-16
 8004d64:	42000204 	addi	r8,r8,8
 8004d68:	ac40110e 	bge	r21,r17,8004db0 <___svfprintf_internal_r+0x734>
 8004d6c:	18c00404 	addi	r3,r3,16
 8004d70:	10800044 	addi	r2,r2,1
 8004d74:	45000015 	stw	r20,0(r8)
 8004d78:	45400115 	stw	r21,4(r8)
 8004d7c:	d8c02015 	stw	r3,128(sp)
 8004d80:	d8801f15 	stw	r2,124(sp)
 8004d84:	90bff60e 	bge	r18,r2,8004d60 <__alt_data_end+0xfc004d60>
 8004d88:	8009883a 	mov	r4,r16
 8004d8c:	b00b883a 	mov	r5,r22
 8004d90:	b80d883a 	mov	r6,r23
 8004d94:	800d2000 	call	800d200 <__ssprint_r>
 8004d98:	103f011e 	bne	r2,zero,80049a0 <__alt_data_end+0xfc0049a0>
 8004d9c:	8c7ffc04 	addi	r17,r17,-16
 8004da0:	d8c02017 	ldw	r3,128(sp)
 8004da4:	d8801f17 	ldw	r2,124(sp)
 8004da8:	da000404 	addi	r8,sp,16
 8004dac:	ac7fef16 	blt	r21,r17,8004d6c <__alt_data_end+0xfc004d6c>
 8004db0:	dc002c17 	ldw	r16,176(sp)
 8004db4:	8809883a 	mov	r4,r17
 8004db8:	9823883a 	mov	r17,r19
 8004dbc:	2027883a 	mov	r19,r4
 8004dc0:	d9002b17 	ldw	r4,172(sp)
 8004dc4:	1cc7883a 	add	r3,r3,r19
 8004dc8:	10800044 	addi	r2,r2,1
 8004dcc:	41000015 	stw	r4,0(r8)
 8004dd0:	44c00115 	stw	r19,4(r8)
 8004dd4:	d8c02015 	stw	r3,128(sp)
 8004dd8:	d8801f15 	stw	r2,124(sp)
 8004ddc:	010001c4 	movi	r4,7
 8004de0:	2082a316 	blt	r4,r2,8005870 <___svfprintf_internal_r+0x11f4>
 8004de4:	42000204 	addi	r8,r8,8
 8004de8:	e080400c 	andi	r2,fp,256
 8004dec:	1001b31e 	bne	r2,zero,80054bc <___svfprintf_internal_r+0xe40>
 8004df0:	d8801f17 	ldw	r2,124(sp)
 8004df4:	d9403117 	ldw	r5,196(sp)
 8004df8:	1c47883a 	add	r3,r3,r17
 8004dfc:	10800044 	addi	r2,r2,1
 8004e00:	41400015 	stw	r5,0(r8)
 8004e04:	44400115 	stw	r17,4(r8)
 8004e08:	d8c02015 	stw	r3,128(sp)
 8004e0c:	d8801f15 	stw	r2,124(sp)
 8004e10:	010001c4 	movi	r4,7
 8004e14:	20827e16 	blt	r4,r2,8005810 <___svfprintf_internal_r+0x1194>
 8004e18:	42000204 	addi	r8,r8,8
 8004e1c:	e080010c 	andi	r2,fp,4
 8004e20:	10003226 	beq	r2,zero,8004eec <___svfprintf_internal_r+0x870>
 8004e24:	d8802e17 	ldw	r2,184(sp)
 8004e28:	d9002a17 	ldw	r4,168(sp)
 8004e2c:	1121c83a 	sub	r16,r2,r4
 8004e30:	04002e0e 	bge	zero,r16,8004eec <___svfprintf_internal_r+0x870>
 8004e34:	04400404 	movi	r17,16
 8004e38:	d8801f17 	ldw	r2,124(sp)
 8004e3c:	8c05550e 	bge	r17,r16,8006394 <___svfprintf_internal_r+0x1d18>
 8004e40:	01020074 	movhi	r4,2049
 8004e44:	211e6c84 	addi	r4,r4,31154
 8004e48:	d9003615 	stw	r4,216(sp)
 8004e4c:	048001c4 	movi	r18,7
 8004e50:	dcc02f17 	ldw	r19,188(sp)
 8004e54:	00000306 	br	8004e64 <___svfprintf_internal_r+0x7e8>
 8004e58:	843ffc04 	addi	r16,r16,-16
 8004e5c:	42000204 	addi	r8,r8,8
 8004e60:	8c00130e 	bge	r17,r16,8004eb0 <___svfprintf_internal_r+0x834>
 8004e64:	01420074 	movhi	r5,2049
 8004e68:	18c00404 	addi	r3,r3,16
 8004e6c:	10800044 	addi	r2,r2,1
 8004e70:	295e6c84 	addi	r5,r5,31154
 8004e74:	41400015 	stw	r5,0(r8)
 8004e78:	44400115 	stw	r17,4(r8)
 8004e7c:	d8c02015 	stw	r3,128(sp)
 8004e80:	d8801f15 	stw	r2,124(sp)
 8004e84:	90bff40e 	bge	r18,r2,8004e58 <__alt_data_end+0xfc004e58>
 8004e88:	9809883a 	mov	r4,r19
 8004e8c:	b00b883a 	mov	r5,r22
 8004e90:	b80d883a 	mov	r6,r23
 8004e94:	800d2000 	call	800d200 <__ssprint_r>
 8004e98:	103ec11e 	bne	r2,zero,80049a0 <__alt_data_end+0xfc0049a0>
 8004e9c:	843ffc04 	addi	r16,r16,-16
 8004ea0:	d8c02017 	ldw	r3,128(sp)
 8004ea4:	d8801f17 	ldw	r2,124(sp)
 8004ea8:	da000404 	addi	r8,sp,16
 8004eac:	8c3fed16 	blt	r17,r16,8004e64 <__alt_data_end+0xfc004e64>
 8004eb0:	d9003617 	ldw	r4,216(sp)
 8004eb4:	1c07883a 	add	r3,r3,r16
 8004eb8:	10800044 	addi	r2,r2,1
 8004ebc:	41000015 	stw	r4,0(r8)
 8004ec0:	44000115 	stw	r16,4(r8)
 8004ec4:	d8c02015 	stw	r3,128(sp)
 8004ec8:	d8801f15 	stw	r2,124(sp)
 8004ecc:	010001c4 	movi	r4,7
 8004ed0:	2080060e 	bge	r4,r2,8004eec <___svfprintf_internal_r+0x870>
 8004ed4:	d9002f17 	ldw	r4,188(sp)
 8004ed8:	b00b883a 	mov	r5,r22
 8004edc:	b80d883a 	mov	r6,r23
 8004ee0:	800d2000 	call	800d200 <__ssprint_r>
 8004ee4:	103eae1e 	bne	r2,zero,80049a0 <__alt_data_end+0xfc0049a0>
 8004ee8:	d8c02017 	ldw	r3,128(sp)
 8004eec:	df002a17 	ldw	fp,168(sp)
 8004ef0:	d9402e17 	ldw	r5,184(sp)
 8004ef4:	e140010e 	bge	fp,r5,8004efc <___svfprintf_internal_r+0x880>
 8004ef8:	2839883a 	mov	fp,r5
 8004efc:	d8803017 	ldw	r2,192(sp)
 8004f00:	1705883a 	add	r2,r2,fp
 8004f04:	d8803015 	stw	r2,192(sp)
 8004f08:	1802491e 	bne	r3,zero,8005830 <___svfprintf_internal_r+0x11b4>
 8004f0c:	d8c02917 	ldw	r3,164(sp)
 8004f10:	d8001f15 	stw	zero,124(sp)
 8004f14:	da000404 	addi	r8,sp,16
 8004f18:	18800007 	ldb	r2,0(r3)
 8004f1c:	103e061e 	bne	r2,zero,8004738 <__alt_data_end+0xfc004738>
 8004f20:	dc002917 	ldw	r16,164(sp)
 8004f24:	003e1e06 	br	80047a0 <__alt_data_end+0xfc0047a0>
 8004f28:	d9002d17 	ldw	r4,180(sp)
 8004f2c:	d9402d17 	ldw	r5,180(sp)
 8004f30:	da002917 	ldw	r8,164(sp)
 8004f34:	21000017 	ldw	r4,0(r4)
 8004f38:	29400117 	ldw	r5,4(r5)
 8004f3c:	df002915 	stw	fp,164(sp)
 8004f40:	9839883a 	mov	fp,r19
 8004f44:	dcc02a03 	ldbu	r19,168(sp)
 8004f48:	d9003715 	stw	r4,220(sp)
 8004f4c:	d9403815 	stw	r5,224(sp)
 8004f50:	da004015 	stw	r8,256(sp)
 8004f54:	da403f15 	stw	r9,252(sp)
 8004f58:	dcc02785 	stb	r19,158(sp)
 8004f5c:	800d0500 	call	800d050 <__fpclassifyd>
 8004f60:	d8c02d17 	ldw	r3,180(sp)
 8004f64:	04400044 	movi	r17,1
 8004f68:	da004017 	ldw	r8,256(sp)
 8004f6c:	1c800204 	addi	r18,r3,8
 8004f70:	da403f17 	ldw	r9,252(sp)
 8004f74:	d9003717 	ldw	r4,220(sp)
 8004f78:	d9403817 	ldw	r5,224(sp)
 8004f7c:	14433e1e 	bne	r2,r17,8005c78 <___svfprintf_internal_r+0x15fc>
 8004f80:	000d883a 	mov	r6,zero
 8004f84:	000f883a 	mov	r7,zero
 8004f88:	80125480 	call	8012548 <__ledf2>
 8004f8c:	da004017 	ldw	r8,256(sp)
 8004f90:	10050c16 	blt	r2,zero,80063c4 <___svfprintf_internal_r+0x1d48>
 8004f94:	dcc02783 	ldbu	r19,158(sp)
 8004f98:	008011c4 	movi	r2,71
 8004f9c:	1404410e 	bge	r2,r16,80060a4 <___svfprintf_internal_r+0x1a28>
 8004fa0:	01420074 	movhi	r5,2049
 8004fa4:	295e5904 	addi	r5,r5,31076
 8004fa8:	d9403115 	stw	r5,196(sp)
 8004fac:	00c000c4 	movi	r3,3
 8004fb0:	00bfdfc4 	movi	r2,-129
 8004fb4:	d8c02a15 	stw	r3,168(sp)
 8004fb8:	e0b8703a 	and	fp,fp,r2
 8004fbc:	dc802d15 	stw	r18,180(sp)
 8004fc0:	1823883a 	mov	r17,r3
 8004fc4:	d8003215 	stw	zero,200(sp)
 8004fc8:	d8003415 	stw	zero,208(sp)
 8004fcc:	003eee06 	br	8004b88 <__alt_data_end+0xfc004b88>
 8004fd0:	9cc00214 	ori	r19,r19,8
 8004fd4:	e005883a 	mov	r2,fp
 8004fd8:	e4000007 	ldb	r16,0(fp)
 8004fdc:	003dfe06 	br	80047d8 <__alt_data_end+0xfc0047d8>
 8004fe0:	da002917 	ldw	r8,164(sp)
 8004fe4:	df002915 	stw	fp,164(sp)
 8004fe8:	9f000414 	ori	fp,r19,16
 8004fec:	e080080c 	andi	r2,fp,32
 8004ff0:	1000f226 	beq	r2,zero,80053bc <___svfprintf_internal_r+0xd40>
 8004ff4:	d9402d17 	ldw	r5,180(sp)
 8004ff8:	0005883a 	mov	r2,zero
 8004ffc:	2c800017 	ldw	r18,0(r5)
 8005000:	2d400117 	ldw	r21,4(r5)
 8005004:	29400204 	addi	r5,r5,8
 8005008:	d9402d15 	stw	r5,180(sp)
 800500c:	9546b03a 	or	r3,r18,r21
 8005010:	d8002785 	stb	zero,158(sp)
 8005014:	da403215 	stw	r9,200(sp)
 8005018:	0027883a 	mov	r19,zero
 800501c:	003eb306 	br	8004aec <__alt_data_end+0xfc004aec>
 8005020:	da002917 	ldw	r8,164(sp)
 8005024:	df002915 	stw	fp,164(sp)
 8005028:	9f000414 	ori	fp,r19,16
 800502c:	e080080c 	andi	r2,fp,32
 8005030:	1000d326 	beq	r2,zero,8005380 <___svfprintf_internal_r+0xd04>
 8005034:	d9002d17 	ldw	r4,180(sp)
 8005038:	00800044 	movi	r2,1
 800503c:	24800017 	ldw	r18,0(r4)
 8005040:	25400117 	ldw	r21,4(r4)
 8005044:	21000204 	addi	r4,r4,8
 8005048:	d9002d15 	stw	r4,180(sp)
 800504c:	9546b03a 	or	r3,r18,r21
 8005050:	003fef06 	br	8005010 <__alt_data_end+0xfc005010>
 8005054:	d9402d17 	ldw	r5,180(sp)
 8005058:	00800c04 	movi	r2,48
 800505c:	d8802705 	stb	r2,156(sp)
 8005060:	2c800017 	ldw	r18,0(r5)
 8005064:	00801e04 	movi	r2,120
 8005068:	d8802745 	stb	r2,157(sp)
 800506c:	00820074 	movhi	r2,2049
 8005070:	109e6104 	addi	r2,r2,31108
 8005074:	29400104 	addi	r5,r5,4
 8005078:	da002917 	ldw	r8,164(sp)
 800507c:	d8803b15 	stw	r2,236(sp)
 8005080:	df002915 	stw	fp,164(sp)
 8005084:	002b883a 	mov	r21,zero
 8005088:	9f000094 	ori	fp,r19,2
 800508c:	d9402d15 	stw	r5,180(sp)
 8005090:	00800084 	movi	r2,2
 8005094:	04001e04 	movi	r16,120
 8005098:	9007883a 	mov	r3,r18
 800509c:	003fdc06 	br	8005010 <__alt_data_end+0xfc005010>
 80050a0:	da002917 	ldw	r8,164(sp)
 80050a4:	df002915 	stw	fp,164(sp)
 80050a8:	9839883a 	mov	fp,r19
 80050ac:	dcc02a03 	ldbu	r19,168(sp)
 80050b0:	e080080c 	andi	r2,fp,32
 80050b4:	d8c02d17 	ldw	r3,180(sp)
 80050b8:	dcc02785 	stb	r19,158(sp)
 80050bc:	103e801e 	bne	r2,zero,8004ac0 <__alt_data_end+0xfc004ac0>
 80050c0:	e080040c 	andi	r2,fp,16
 80050c4:	10031f26 	beq	r2,zero,8005d44 <___svfprintf_internal_r+0x16c8>
 80050c8:	1c800017 	ldw	r18,0(r3)
 80050cc:	d9402d17 	ldw	r5,180(sp)
 80050d0:	902bd7fa 	srai	r21,r18,31
 80050d4:	29400104 	addi	r5,r5,4
 80050d8:	d9402d15 	stw	r5,180(sp)
 80050dc:	a805883a 	mov	r2,r21
 80050e0:	103e7e0e 	bge	r2,zero,8004adc <__alt_data_end+0xfc004adc>
 80050e4:	04a5c83a 	sub	r18,zero,r18
 80050e8:	9004c03a 	cmpne	r2,r18,zero
 80050ec:	056bc83a 	sub	r21,zero,r21
 80050f0:	a8abc83a 	sub	r21,r21,r2
 80050f4:	04c00b44 	movi	r19,45
 80050f8:	dcc02785 	stb	r19,158(sp)
 80050fc:	da403215 	stw	r9,200(sp)
 8005100:	00800044 	movi	r2,1
 8005104:	9546b03a 	or	r3,r18,r21
 8005108:	003e7806 	br	8004aec <__alt_data_end+0xfc004aec>
 800510c:	9cc01014 	ori	r19,r19,64
 8005110:	e005883a 	mov	r2,fp
 8005114:	e4000007 	ldb	r16,0(fp)
 8005118:	003daf06 	br	80047d8 <__alt_data_end+0xfc0047d8>
 800511c:	e4000007 	ldb	r16,0(fp)
 8005120:	00801b04 	movi	r2,108
 8005124:	80837726 	beq	r16,r2,8005f04 <___svfprintf_internal_r+0x1888>
 8005128:	9cc00414 	ori	r19,r19,16
 800512c:	e005883a 	mov	r2,fp
 8005130:	003da906 	br	80047d8 <__alt_data_end+0xfc0047d8>
 8005134:	da002917 	ldw	r8,164(sp)
 8005138:	df002915 	stw	fp,164(sp)
 800513c:	9839883a 	mov	fp,r19
 8005140:	dcc02a03 	ldbu	r19,168(sp)
 8005144:	e080080c 	andi	r2,fp,32
 8005148:	dcc02785 	stb	r19,158(sp)
 800514c:	1002f126 	beq	r2,zero,8005d14 <___svfprintf_internal_r+0x1698>
 8005150:	d9402d17 	ldw	r5,180(sp)
 8005154:	d9003017 	ldw	r4,192(sp)
 8005158:	28800017 	ldw	r2,0(r5)
 800515c:	2007d7fa 	srai	r3,r4,31
 8005160:	29400104 	addi	r5,r5,4
 8005164:	d9402d15 	stw	r5,180(sp)
 8005168:	11000015 	stw	r4,0(r2)
 800516c:	10c00115 	stw	r3,4(r2)
 8005170:	003d6e06 	br	800472c <__alt_data_end+0xfc00472c>
 8005174:	da002917 	ldw	r8,164(sp)
 8005178:	df002915 	stw	fp,164(sp)
 800517c:	9839883a 	mov	fp,r19
 8005180:	dcc02a03 	ldbu	r19,168(sp)
 8005184:	01420074 	movhi	r5,2049
 8005188:	295e5c04 	addi	r5,r5,31088
 800518c:	dcc02785 	stb	r19,158(sp)
 8005190:	d9403b15 	stw	r5,236(sp)
 8005194:	e0c0080c 	andi	r3,fp,32
 8005198:	d8802d17 	ldw	r2,180(sp)
 800519c:	18005826 	beq	r3,zero,8005300 <___svfprintf_internal_r+0xc84>
 80051a0:	d9402d17 	ldw	r5,180(sp)
 80051a4:	14800017 	ldw	r18,0(r2)
 80051a8:	15400117 	ldw	r21,4(r2)
 80051ac:	29400204 	addi	r5,r5,8
 80051b0:	d9402d15 	stw	r5,180(sp)
 80051b4:	e080004c 	andi	r2,fp,1
 80051b8:	10020626 	beq	r2,zero,80059d4 <___svfprintf_internal_r+0x1358>
 80051bc:	9546b03a 	or	r3,r18,r21
 80051c0:	1802f326 	beq	r3,zero,8005d90 <___svfprintf_internal_r+0x1714>
 80051c4:	00800c04 	movi	r2,48
 80051c8:	d8802705 	stb	r2,156(sp)
 80051cc:	dc002745 	stb	r16,157(sp)
 80051d0:	e7000094 	ori	fp,fp,2
 80051d4:	00800084 	movi	r2,2
 80051d8:	003f8d06 	br	8005010 <__alt_data_end+0xfc005010>
 80051dc:	d8c02d17 	ldw	r3,180(sp)
 80051e0:	d9002d17 	ldw	r4,180(sp)
 80051e4:	da002917 	ldw	r8,164(sp)
 80051e8:	18800017 	ldw	r2,0(r3)
 80051ec:	21000104 	addi	r4,r4,4
 80051f0:	00c00044 	movi	r3,1
 80051f4:	df002915 	stw	fp,164(sp)
 80051f8:	d8c02a15 	stw	r3,168(sp)
 80051fc:	9839883a 	mov	fp,r19
 8005200:	d8002785 	stb	zero,158(sp)
 8005204:	d8801405 	stb	r2,80(sp)
 8005208:	d9002d15 	stw	r4,180(sp)
 800520c:	1823883a 	mov	r17,r3
 8005210:	d8c01404 	addi	r3,sp,80
 8005214:	d8003215 	stw	zero,200(sp)
 8005218:	d8003415 	stw	zero,208(sp)
 800521c:	d8c03115 	stw	r3,196(sp)
 8005220:	0005883a 	mov	r2,zero
 8005224:	003e5f06 	br	8004ba4 <__alt_data_end+0xfc004ba4>
 8005228:	d8802a07 	ldb	r2,168(sp)
 800522c:	1002c21e 	bne	r2,zero,8005d38 <___svfprintf_internal_r+0x16bc>
 8005230:	00c00804 	movi	r3,32
 8005234:	d8c02a05 	stb	r3,168(sp)
 8005238:	e005883a 	mov	r2,fp
 800523c:	e4000007 	ldb	r16,0(fp)
 8005240:	003d6506 	br	80047d8 <__alt_data_end+0xfc0047d8>
 8005244:	9cc00054 	ori	r19,r19,1
 8005248:	e005883a 	mov	r2,fp
 800524c:	e4000007 	ldb	r16,0(fp)
 8005250:	003d6106 	br	80047d8 <__alt_data_end+0xfc0047d8>
 8005254:	d8c02d17 	ldw	r3,180(sp)
 8005258:	d9002d17 	ldw	r4,180(sp)
 800525c:	da002917 	ldw	r8,164(sp)
 8005260:	18c00017 	ldw	r3,0(r3)
 8005264:	df002915 	stw	fp,164(sp)
 8005268:	d8002785 	stb	zero,158(sp)
 800526c:	d8c03115 	stw	r3,196(sp)
 8005270:	9839883a 	mov	fp,r19
 8005274:	24800104 	addi	r18,r4,4
 8005278:	18043526 	beq	r3,zero,8006350 <___svfprintf_internal_r+0x1cd4>
 800527c:	d9003117 	ldw	r4,196(sp)
 8005280:	4803e016 	blt	r9,zero,8006204 <___svfprintf_internal_r+0x1b88>
 8005284:	480d883a 	mov	r6,r9
 8005288:	000b883a 	mov	r5,zero
 800528c:	da004015 	stw	r8,256(sp)
 8005290:	da403f15 	stw	r9,252(sp)
 8005294:	800b6ec0 	call	800b6ec <memchr>
 8005298:	da004017 	ldw	r8,256(sp)
 800529c:	da403f17 	ldw	r9,252(sp)
 80052a0:	10045f26 	beq	r2,zero,8006420 <___svfprintf_internal_r+0x1da4>
 80052a4:	d8c03117 	ldw	r3,196(sp)
 80052a8:	10e3c83a 	sub	r17,r2,r3
 80052ac:	4c40010e 	bge	r9,r17,80052b4 <___svfprintf_internal_r+0xc38>
 80052b0:	4823883a 	mov	r17,r9
 80052b4:	8805883a 	mov	r2,r17
 80052b8:	8803d716 	blt	r17,zero,8006218 <___svfprintf_internal_r+0x1b9c>
 80052bc:	dcc02783 	ldbu	r19,158(sp)
 80052c0:	d8802a15 	stw	r2,168(sp)
 80052c4:	dc802d15 	stw	r18,180(sp)
 80052c8:	d8003215 	stw	zero,200(sp)
 80052cc:	d8003415 	stw	zero,208(sp)
 80052d0:	003e2d06 	br	8004b88 <__alt_data_end+0xfc004b88>
 80052d4:	da002917 	ldw	r8,164(sp)
 80052d8:	df002915 	stw	fp,164(sp)
 80052dc:	9839883a 	mov	fp,r19
 80052e0:	dcc02a03 	ldbu	r19,168(sp)
 80052e4:	01020074 	movhi	r4,2049
 80052e8:	211e6104 	addi	r4,r4,31108
 80052ec:	d9003b15 	stw	r4,236(sp)
 80052f0:	dcc02785 	stb	r19,158(sp)
 80052f4:	e0c0080c 	andi	r3,fp,32
 80052f8:	d8802d17 	ldw	r2,180(sp)
 80052fc:	183fa81e 	bne	r3,zero,80051a0 <__alt_data_end+0xfc0051a0>
 8005300:	e0c0040c 	andi	r3,fp,16
 8005304:	18027126 	beq	r3,zero,8005ccc <___svfprintf_internal_r+0x1650>
 8005308:	d8c02d17 	ldw	r3,180(sp)
 800530c:	14800017 	ldw	r18,0(r2)
 8005310:	002b883a 	mov	r21,zero
 8005314:	18c00104 	addi	r3,r3,4
 8005318:	d8c02d15 	stw	r3,180(sp)
 800531c:	003fa506 	br	80051b4 <__alt_data_end+0xfc0051b4>
 8005320:	9cc00814 	ori	r19,r19,32
 8005324:	e005883a 	mov	r2,fp
 8005328:	e4000007 	ldb	r16,0(fp)
 800532c:	003d2a06 	br	80047d8 <__alt_data_end+0xfc0047d8>
 8005330:	d9002d17 	ldw	r4,180(sp)
 8005334:	d9402d17 	ldw	r5,180(sp)
 8005338:	21000017 	ldw	r4,0(r4)
 800533c:	28c00104 	addi	r3,r5,4
 8005340:	d9002e15 	stw	r4,184(sp)
 8005344:	2002e916 	blt	r4,zero,8005eec <___svfprintf_internal_r+0x1870>
 8005348:	d8c02d15 	stw	r3,180(sp)
 800534c:	e005883a 	mov	r2,fp
 8005350:	e4000007 	ldb	r16,0(fp)
 8005354:	003d2006 	br	80047d8 <__alt_data_end+0xfc0047d8>
 8005358:	00c00ac4 	movi	r3,43
 800535c:	d8c02a05 	stb	r3,168(sp)
 8005360:	e005883a 	mov	r2,fp
 8005364:	e4000007 	ldb	r16,0(fp)
 8005368:	003d1b06 	br	80047d8 <__alt_data_end+0xfc0047d8>
 800536c:	da002917 	ldw	r8,164(sp)
 8005370:	df002915 	stw	fp,164(sp)
 8005374:	9839883a 	mov	fp,r19
 8005378:	e080080c 	andi	r2,fp,32
 800537c:	103f2d1e 	bne	r2,zero,8005034 <__alt_data_end+0xfc005034>
 8005380:	e080040c 	andi	r2,fp,16
 8005384:	10027826 	beq	r2,zero,8005d68 <___svfprintf_internal_r+0x16ec>
 8005388:	d9402d17 	ldw	r5,180(sp)
 800538c:	002b883a 	mov	r21,zero
 8005390:	00800044 	movi	r2,1
 8005394:	2c800017 	ldw	r18,0(r5)
 8005398:	29400104 	addi	r5,r5,4
 800539c:	d9402d15 	stw	r5,180(sp)
 80053a0:	9007883a 	mov	r3,r18
 80053a4:	003f1a06 	br	8005010 <__alt_data_end+0xfc005010>
 80053a8:	da002917 	ldw	r8,164(sp)
 80053ac:	df002915 	stw	fp,164(sp)
 80053b0:	9839883a 	mov	fp,r19
 80053b4:	e080080c 	andi	r2,fp,32
 80053b8:	103f0e1e 	bne	r2,zero,8004ff4 <__alt_data_end+0xfc004ff4>
 80053bc:	e080040c 	andi	r2,fp,16
 80053c0:	10024a26 	beq	r2,zero,8005cec <___svfprintf_internal_r+0x1670>
 80053c4:	d8802d17 	ldw	r2,180(sp)
 80053c8:	002b883a 	mov	r21,zero
 80053cc:	14800017 	ldw	r18,0(r2)
 80053d0:	10800104 	addi	r2,r2,4
 80053d4:	d8802d15 	stw	r2,180(sp)
 80053d8:	9007883a 	mov	r3,r18
 80053dc:	0005883a 	mov	r2,zero
 80053e0:	003f0b06 	br	8005010 <__alt_data_end+0xfc005010>
 80053e4:	da002917 	ldw	r8,164(sp)
 80053e8:	df002915 	stw	fp,164(sp)
 80053ec:	9839883a 	mov	fp,r19
 80053f0:	dcc02a03 	ldbu	r19,168(sp)
 80053f4:	dcc02785 	stb	r19,158(sp)
 80053f8:	803d6326 	beq	r16,zero,8004988 <__alt_data_end+0xfc004988>
 80053fc:	00c00044 	movi	r3,1
 8005400:	d8c02a15 	stw	r3,168(sp)
 8005404:	dc001405 	stb	r16,80(sp)
 8005408:	d8002785 	stb	zero,158(sp)
 800540c:	003f7f06 	br	800520c <__alt_data_end+0xfc00520c>
 8005410:	d8c02017 	ldw	r3,128(sp)
 8005414:	003e2406 	br	8004ca8 <__alt_data_end+0xfc004ca8>
 8005418:	10803fcc 	andi	r2,r2,255
 800541c:	00c00044 	movi	r3,1
 8005420:	10fdba1e 	bne	r2,r3,8004b0c <__alt_data_end+0xfc004b0c>
 8005424:	a800021e 	bne	r21,zero,8005430 <___svfprintf_internal_r+0xdb4>
 8005428:	00800244 	movi	r2,9
 800542c:	14801d2e 	bgeu	r2,r18,80054a4 <___svfprintf_internal_r+0xe28>
 8005430:	dc002a15 	stw	r16,168(sp)
 8005434:	b823883a 	mov	r17,r23
 8005438:	9021883a 	mov	r16,r18
 800543c:	da002b15 	stw	r8,172(sp)
 8005440:	a825883a 	mov	r18,r21
 8005444:	482b883a 	mov	r21,r9
 8005448:	8009883a 	mov	r4,r16
 800544c:	900b883a 	mov	r5,r18
 8005450:	01800284 	movi	r6,10
 8005454:	000f883a 	mov	r7,zero
 8005458:	8010a800 	call	8010a80 <__umoddi3>
 800545c:	10800c04 	addi	r2,r2,48
 8005460:	8c7fffc4 	addi	r17,r17,-1
 8005464:	8009883a 	mov	r4,r16
 8005468:	900b883a 	mov	r5,r18
 800546c:	01800284 	movi	r6,10
 8005470:	000f883a 	mov	r7,zero
 8005474:	88800005 	stb	r2,0(r17)
 8005478:	80104400 	call	8010440 <__udivdi3>
 800547c:	1021883a 	mov	r16,r2
 8005480:	10c4b03a 	or	r2,r2,r3
 8005484:	1825883a 	mov	r18,r3
 8005488:	103fef1e 	bne	r2,zero,8005448 <__alt_data_end+0xfc005448>
 800548c:	dc403115 	stw	r17,196(sp)
 8005490:	dc002a17 	ldw	r16,168(sp)
 8005494:	da002b17 	ldw	r8,172(sp)
 8005498:	a813883a 	mov	r9,r21
 800549c:	bc63c83a 	sub	r17,r23,r17
 80054a0:	003db406 	br	8004b74 <__alt_data_end+0xfc004b74>
 80054a4:	94800c04 	addi	r18,r18,48
 80054a8:	d8c01dc4 	addi	r3,sp,119
 80054ac:	dc801dc5 	stb	r18,119(sp)
 80054b0:	dc403d17 	ldw	r17,244(sp)
 80054b4:	d8c03115 	stw	r3,196(sp)
 80054b8:	003dae06 	br	8004b74 <__alt_data_end+0xfc004b74>
 80054bc:	00801944 	movi	r2,101
 80054c0:	14008c0e 	bge	r2,r16,80056f4 <___svfprintf_internal_r+0x1078>
 80054c4:	d9003717 	ldw	r4,220(sp)
 80054c8:	d9403817 	ldw	r5,224(sp)
 80054cc:	000d883a 	mov	r6,zero
 80054d0:	000f883a 	mov	r7,zero
 80054d4:	d8c03e15 	stw	r3,248(sp)
 80054d8:	da004015 	stw	r8,256(sp)
 80054dc:	80123e40 	call	80123e4 <__eqdf2>
 80054e0:	d8c03e17 	ldw	r3,248(sp)
 80054e4:	da004017 	ldw	r8,256(sp)
 80054e8:	1000fc1e 	bne	r2,zero,80058dc <___svfprintf_internal_r+0x1260>
 80054ec:	d8801f17 	ldw	r2,124(sp)
 80054f0:	01020074 	movhi	r4,2049
 80054f4:	211e6804 	addi	r4,r4,31136
 80054f8:	18c00044 	addi	r3,r3,1
 80054fc:	10800044 	addi	r2,r2,1
 8005500:	41000015 	stw	r4,0(r8)
 8005504:	01000044 	movi	r4,1
 8005508:	41000115 	stw	r4,4(r8)
 800550c:	d8c02015 	stw	r3,128(sp)
 8005510:	d8801f15 	stw	r2,124(sp)
 8005514:	010001c4 	movi	r4,7
 8005518:	20823116 	blt	r4,r2,8005de0 <___svfprintf_internal_r+0x1764>
 800551c:	42000204 	addi	r8,r8,8
 8005520:	d8802617 	ldw	r2,152(sp)
 8005524:	d9403317 	ldw	r5,204(sp)
 8005528:	11400216 	blt	r2,r5,8005534 <___svfprintf_internal_r+0xeb8>
 800552c:	e080004c 	andi	r2,fp,1
 8005530:	103e3a26 	beq	r2,zero,8004e1c <__alt_data_end+0xfc004e1c>
 8005534:	d8803917 	ldw	r2,228(sp)
 8005538:	d9003517 	ldw	r4,212(sp)
 800553c:	d9403917 	ldw	r5,228(sp)
 8005540:	1887883a 	add	r3,r3,r2
 8005544:	d8801f17 	ldw	r2,124(sp)
 8005548:	41000015 	stw	r4,0(r8)
 800554c:	41400115 	stw	r5,4(r8)
 8005550:	10800044 	addi	r2,r2,1
 8005554:	d8c02015 	stw	r3,128(sp)
 8005558:	d8801f15 	stw	r2,124(sp)
 800555c:	010001c4 	movi	r4,7
 8005560:	20826c16 	blt	r4,r2,8005f14 <___svfprintf_internal_r+0x1898>
 8005564:	42000204 	addi	r8,r8,8
 8005568:	d8803317 	ldw	r2,204(sp)
 800556c:	143fffc4 	addi	r16,r2,-1
 8005570:	043e2a0e 	bge	zero,r16,8004e1c <__alt_data_end+0xfc004e1c>
 8005574:	04400404 	movi	r17,16
 8005578:	d8801f17 	ldw	r2,124(sp)
 800557c:	8c00980e 	bge	r17,r16,80057e0 <___svfprintf_internal_r+0x1164>
 8005580:	01420074 	movhi	r5,2049
 8005584:	295e6884 	addi	r5,r5,31138
 8005588:	d9402b15 	stw	r5,172(sp)
 800558c:	04c001c4 	movi	r19,7
 8005590:	dc802f17 	ldw	r18,188(sp)
 8005594:	00000306 	br	80055a4 <___svfprintf_internal_r+0xf28>
 8005598:	42000204 	addi	r8,r8,8
 800559c:	843ffc04 	addi	r16,r16,-16
 80055a0:	8c00920e 	bge	r17,r16,80057ec <___svfprintf_internal_r+0x1170>
 80055a4:	18c00404 	addi	r3,r3,16
 80055a8:	10800044 	addi	r2,r2,1
 80055ac:	45000015 	stw	r20,0(r8)
 80055b0:	44400115 	stw	r17,4(r8)
 80055b4:	d8c02015 	stw	r3,128(sp)
 80055b8:	d8801f15 	stw	r2,124(sp)
 80055bc:	98bff60e 	bge	r19,r2,8005598 <__alt_data_end+0xfc005598>
 80055c0:	9009883a 	mov	r4,r18
 80055c4:	b00b883a 	mov	r5,r22
 80055c8:	b80d883a 	mov	r6,r23
 80055cc:	800d2000 	call	800d200 <__ssprint_r>
 80055d0:	103cf31e 	bne	r2,zero,80049a0 <__alt_data_end+0xfc0049a0>
 80055d4:	d8c02017 	ldw	r3,128(sp)
 80055d8:	d8801f17 	ldw	r2,124(sp)
 80055dc:	da000404 	addi	r8,sp,16
 80055e0:	003fee06 	br	800559c <__alt_data_end+0xfc00559c>
 80055e4:	d9402e17 	ldw	r5,184(sp)
 80055e8:	d8802a17 	ldw	r2,168(sp)
 80055ec:	28a7c83a 	sub	r19,r5,r2
 80055f0:	04fdcb0e 	bge	zero,r19,8004d20 <__alt_data_end+0xfc004d20>
 80055f4:	05400404 	movi	r21,16
 80055f8:	d8801f17 	ldw	r2,124(sp)
 80055fc:	acc3840e 	bge	r21,r19,8006410 <___svfprintf_internal_r+0x1d94>
 8005600:	01420074 	movhi	r5,2049
 8005604:	9809883a 	mov	r4,r19
 8005608:	295e6884 	addi	r5,r5,31138
 800560c:	dc002c15 	stw	r16,176(sp)
 8005610:	8827883a 	mov	r19,r17
 8005614:	d9402b15 	stw	r5,172(sp)
 8005618:	048001c4 	movi	r18,7
 800561c:	dc002f17 	ldw	r16,188(sp)
 8005620:	2023883a 	mov	r17,r4
 8005624:	00000306 	br	8005634 <___svfprintf_internal_r+0xfb8>
 8005628:	8c7ffc04 	addi	r17,r17,-16
 800562c:	42000204 	addi	r8,r8,8
 8005630:	ac40110e 	bge	r21,r17,8005678 <___svfprintf_internal_r+0xffc>
 8005634:	18c00404 	addi	r3,r3,16
 8005638:	10800044 	addi	r2,r2,1
 800563c:	45000015 	stw	r20,0(r8)
 8005640:	45400115 	stw	r21,4(r8)
 8005644:	d8c02015 	stw	r3,128(sp)
 8005648:	d8801f15 	stw	r2,124(sp)
 800564c:	90bff60e 	bge	r18,r2,8005628 <__alt_data_end+0xfc005628>
 8005650:	8009883a 	mov	r4,r16
 8005654:	b00b883a 	mov	r5,r22
 8005658:	b80d883a 	mov	r6,r23
 800565c:	800d2000 	call	800d200 <__ssprint_r>
 8005660:	103ccf1e 	bne	r2,zero,80049a0 <__alt_data_end+0xfc0049a0>
 8005664:	8c7ffc04 	addi	r17,r17,-16
 8005668:	d8c02017 	ldw	r3,128(sp)
 800566c:	d8801f17 	ldw	r2,124(sp)
 8005670:	da000404 	addi	r8,sp,16
 8005674:	ac7fef16 	blt	r21,r17,8005634 <__alt_data_end+0xfc005634>
 8005678:	dc002c17 	ldw	r16,176(sp)
 800567c:	8809883a 	mov	r4,r17
 8005680:	9823883a 	mov	r17,r19
 8005684:	2027883a 	mov	r19,r4
 8005688:	d9002b17 	ldw	r4,172(sp)
 800568c:	1cc7883a 	add	r3,r3,r19
 8005690:	10800044 	addi	r2,r2,1
 8005694:	41000015 	stw	r4,0(r8)
 8005698:	44c00115 	stw	r19,4(r8)
 800569c:	d8c02015 	stw	r3,128(sp)
 80056a0:	d8801f15 	stw	r2,124(sp)
 80056a4:	010001c4 	movi	r4,7
 80056a8:	20816b16 	blt	r4,r2,8005c58 <___svfprintf_internal_r+0x15dc>
 80056ac:	42000204 	addi	r8,r8,8
 80056b0:	003d9b06 	br	8004d20 <__alt_data_end+0xfc004d20>
 80056b4:	d9403b17 	ldw	r5,236(sp)
 80056b8:	b807883a 	mov	r3,r23
 80056bc:	908003cc 	andi	r2,r18,15
 80056c0:	a808973a 	slli	r4,r21,28
 80056c4:	2885883a 	add	r2,r5,r2
 80056c8:	9024d13a 	srli	r18,r18,4
 80056cc:	10800003 	ldbu	r2,0(r2)
 80056d0:	a82ad13a 	srli	r21,r21,4
 80056d4:	18ffffc4 	addi	r3,r3,-1
 80056d8:	24a4b03a 	or	r18,r4,r18
 80056dc:	18800005 	stb	r2,0(r3)
 80056e0:	9544b03a 	or	r2,r18,r21
 80056e4:	103ff51e 	bne	r2,zero,80056bc <__alt_data_end+0xfc0056bc>
 80056e8:	d8c03115 	stw	r3,196(sp)
 80056ec:	b8e3c83a 	sub	r17,r23,r3
 80056f0:	003d2006 	br	8004b74 <__alt_data_end+0xfc004b74>
 80056f4:	d9403317 	ldw	r5,204(sp)
 80056f8:	00800044 	movi	r2,1
 80056fc:	18c00044 	addi	r3,r3,1
 8005700:	1141360e 	bge	r2,r5,8005bdc <___svfprintf_internal_r+0x1560>
 8005704:	dc001f17 	ldw	r16,124(sp)
 8005708:	d8803117 	ldw	r2,196(sp)
 800570c:	d8c02015 	stw	r3,128(sp)
 8005710:	84000044 	addi	r16,r16,1
 8005714:	40800015 	stw	r2,0(r8)
 8005718:	00800044 	movi	r2,1
 800571c:	40800115 	stw	r2,4(r8)
 8005720:	dc001f15 	stw	r16,124(sp)
 8005724:	008001c4 	movi	r2,7
 8005728:	14013916 	blt	r2,r16,8005c10 <___svfprintf_internal_r+0x1594>
 800572c:	42000204 	addi	r8,r8,8
 8005730:	d9003917 	ldw	r4,228(sp)
 8005734:	d9403517 	ldw	r5,212(sp)
 8005738:	84000044 	addi	r16,r16,1
 800573c:	1907883a 	add	r3,r3,r4
 8005740:	41400015 	stw	r5,0(r8)
 8005744:	41000115 	stw	r4,4(r8)
 8005748:	d8c02015 	stw	r3,128(sp)
 800574c:	dc001f15 	stw	r16,124(sp)
 8005750:	008001c4 	movi	r2,7
 8005754:	14013716 	blt	r2,r16,8005c34 <___svfprintf_internal_r+0x15b8>
 8005758:	44400204 	addi	r17,r8,8
 800575c:	d9003717 	ldw	r4,220(sp)
 8005760:	d9403817 	ldw	r5,224(sp)
 8005764:	000d883a 	mov	r6,zero
 8005768:	000f883a 	mov	r7,zero
 800576c:	d8c03e15 	stw	r3,248(sp)
 8005770:	80123e40 	call	80123e4 <__eqdf2>
 8005774:	d8c03e17 	ldw	r3,248(sp)
 8005778:	10009926 	beq	r2,zero,80059e0 <___svfprintf_internal_r+0x1364>
 800577c:	d9003317 	ldw	r4,204(sp)
 8005780:	d9403117 	ldw	r5,196(sp)
 8005784:	84000044 	addi	r16,r16,1
 8005788:	20bfffc4 	addi	r2,r4,-1
 800578c:	1887883a 	add	r3,r3,r2
 8005790:	29000044 	addi	r4,r5,1
 8005794:	88800115 	stw	r2,4(r17)
 8005798:	89000015 	stw	r4,0(r17)
 800579c:	d8c02015 	stw	r3,128(sp)
 80057a0:	dc001f15 	stw	r16,124(sp)
 80057a4:	008001c4 	movi	r2,7
 80057a8:	1400b716 	blt	r2,r16,8005a88 <___svfprintf_internal_r+0x140c>
 80057ac:	8c400204 	addi	r17,r17,8
 80057b0:	d9403a17 	ldw	r5,232(sp)
 80057b4:	dcc022c4 	addi	r19,sp,139
 80057b8:	84000044 	addi	r16,r16,1
 80057bc:	28c7883a 	add	r3,r5,r3
 80057c0:	8cc00015 	stw	r19,0(r17)
 80057c4:	89400115 	stw	r5,4(r17)
 80057c8:	d8c02015 	stw	r3,128(sp)
 80057cc:	dc001f15 	stw	r16,124(sp)
 80057d0:	008001c4 	movi	r2,7
 80057d4:	14000e16 	blt	r2,r16,8005810 <___svfprintf_internal_r+0x1194>
 80057d8:	8a000204 	addi	r8,r17,8
 80057dc:	003d8f06 	br	8004e1c <__alt_data_end+0xfc004e1c>
 80057e0:	01020074 	movhi	r4,2049
 80057e4:	211e6884 	addi	r4,r4,31138
 80057e8:	d9002b15 	stw	r4,172(sp)
 80057ec:	d9002b17 	ldw	r4,172(sp)
 80057f0:	1c07883a 	add	r3,r3,r16
 80057f4:	44000115 	stw	r16,4(r8)
 80057f8:	41000015 	stw	r4,0(r8)
 80057fc:	10800044 	addi	r2,r2,1
 8005800:	d8c02015 	stw	r3,128(sp)
 8005804:	d8801f15 	stw	r2,124(sp)
 8005808:	010001c4 	movi	r4,7
 800580c:	20bd820e 	bge	r4,r2,8004e18 <__alt_data_end+0xfc004e18>
 8005810:	d9002f17 	ldw	r4,188(sp)
 8005814:	b00b883a 	mov	r5,r22
 8005818:	b80d883a 	mov	r6,r23
 800581c:	800d2000 	call	800d200 <__ssprint_r>
 8005820:	103c5f1e 	bne	r2,zero,80049a0 <__alt_data_end+0xfc0049a0>
 8005824:	d8c02017 	ldw	r3,128(sp)
 8005828:	da000404 	addi	r8,sp,16
 800582c:	003d7b06 	br	8004e1c <__alt_data_end+0xfc004e1c>
 8005830:	d9002f17 	ldw	r4,188(sp)
 8005834:	b00b883a 	mov	r5,r22
 8005838:	b80d883a 	mov	r6,r23
 800583c:	800d2000 	call	800d200 <__ssprint_r>
 8005840:	103db226 	beq	r2,zero,8004f0c <__alt_data_end+0xfc004f0c>
 8005844:	003c5606 	br	80049a0 <__alt_data_end+0xfc0049a0>
 8005848:	10803fcc 	andi	r2,r2,255
 800584c:	1000201e 	bne	r2,zero,80058d0 <___svfprintf_internal_r+0x1254>
 8005850:	e080004c 	andi	r2,fp,1
 8005854:	10001e26 	beq	r2,zero,80058d0 <___svfprintf_internal_r+0x1254>
 8005858:	00800c04 	movi	r2,48
 800585c:	d8c01dc4 	addi	r3,sp,119
 8005860:	d8801dc5 	stb	r2,119(sp)
 8005864:	dc403d17 	ldw	r17,244(sp)
 8005868:	d8c03115 	stw	r3,196(sp)
 800586c:	003cc106 	br	8004b74 <__alt_data_end+0xfc004b74>
 8005870:	d9002f17 	ldw	r4,188(sp)
 8005874:	b00b883a 	mov	r5,r22
 8005878:	b80d883a 	mov	r6,r23
 800587c:	800d2000 	call	800d200 <__ssprint_r>
 8005880:	103c471e 	bne	r2,zero,80049a0 <__alt_data_end+0xfc0049a0>
 8005884:	d8c02017 	ldw	r3,128(sp)
 8005888:	da000404 	addi	r8,sp,16
 800588c:	003d5606 	br	8004de8 <__alt_data_end+0xfc004de8>
 8005890:	d9002f17 	ldw	r4,188(sp)
 8005894:	b00b883a 	mov	r5,r22
 8005898:	b80d883a 	mov	r6,r23
 800589c:	800d2000 	call	800d200 <__ssprint_r>
 80058a0:	103c3f1e 	bne	r2,zero,80049a0 <__alt_data_end+0xfc0049a0>
 80058a4:	d8c02017 	ldw	r3,128(sp)
 80058a8:	da000404 	addi	r8,sp,16
 80058ac:	003d0b06 	br	8004cdc <__alt_data_end+0xfc004cdc>
 80058b0:	d9002f17 	ldw	r4,188(sp)
 80058b4:	b00b883a 	mov	r5,r22
 80058b8:	b80d883a 	mov	r6,r23
 80058bc:	800d2000 	call	800d200 <__ssprint_r>
 80058c0:	103c371e 	bne	r2,zero,80049a0 <__alt_data_end+0xfc0049a0>
 80058c4:	d8c02017 	ldw	r3,128(sp)
 80058c8:	da000404 	addi	r8,sp,16
 80058cc:	003d1106 	br	8004d14 <__alt_data_end+0xfc004d14>
 80058d0:	0023883a 	mov	r17,zero
 80058d4:	ddc03115 	stw	r23,196(sp)
 80058d8:	003ca606 	br	8004b74 <__alt_data_end+0xfc004b74>
 80058dc:	dc002617 	ldw	r16,152(sp)
 80058e0:	0401470e 	bge	zero,r16,8005e00 <___svfprintf_internal_r+0x1784>
 80058e4:	d8803317 	ldw	r2,204(sp)
 80058e8:	d9403117 	ldw	r5,196(sp)
 80058ec:	d9003417 	ldw	r4,208(sp)
 80058f0:	1023883a 	mov	r17,r2
 80058f4:	28a1883a 	add	r16,r5,r2
 80058f8:	2080010e 	bge	r4,r2,8005900 <___svfprintf_internal_r+0x1284>
 80058fc:	2023883a 	mov	r17,r4
 8005900:	04400b0e 	bge	zero,r17,8005930 <___svfprintf_internal_r+0x12b4>
 8005904:	d8801f17 	ldw	r2,124(sp)
 8005908:	d9403117 	ldw	r5,196(sp)
 800590c:	1c47883a 	add	r3,r3,r17
 8005910:	10800044 	addi	r2,r2,1
 8005914:	41400015 	stw	r5,0(r8)
 8005918:	44400115 	stw	r17,4(r8)
 800591c:	d8c02015 	stw	r3,128(sp)
 8005920:	d8801f15 	stw	r2,124(sp)
 8005924:	010001c4 	movi	r4,7
 8005928:	20825f16 	blt	r4,r2,80062a8 <___svfprintf_internal_r+0x1c2c>
 800592c:	42000204 	addi	r8,r8,8
 8005930:	88025b16 	blt	r17,zero,80062a0 <___svfprintf_internal_r+0x1c24>
 8005934:	d8803417 	ldw	r2,208(sp)
 8005938:	1463c83a 	sub	r17,r2,r17
 800593c:	0440620e 	bge	zero,r17,8005ac8 <___svfprintf_internal_r+0x144c>
 8005940:	04c00404 	movi	r19,16
 8005944:	d8801f17 	ldw	r2,124(sp)
 8005948:	9c41130e 	bge	r19,r17,8005d98 <___svfprintf_internal_r+0x171c>
 800594c:	01420074 	movhi	r5,2049
 8005950:	295e6884 	addi	r5,r5,31138
 8005954:	d9402b15 	stw	r5,172(sp)
 8005958:	054001c4 	movi	r21,7
 800595c:	dc802f17 	ldw	r18,188(sp)
 8005960:	00000306 	br	8005970 <___svfprintf_internal_r+0x12f4>
 8005964:	42000204 	addi	r8,r8,8
 8005968:	8c7ffc04 	addi	r17,r17,-16
 800596c:	9c410d0e 	bge	r19,r17,8005da4 <___svfprintf_internal_r+0x1728>
 8005970:	18c00404 	addi	r3,r3,16
 8005974:	10800044 	addi	r2,r2,1
 8005978:	45000015 	stw	r20,0(r8)
 800597c:	44c00115 	stw	r19,4(r8)
 8005980:	d8c02015 	stw	r3,128(sp)
 8005984:	d8801f15 	stw	r2,124(sp)
 8005988:	a8bff60e 	bge	r21,r2,8005964 <__alt_data_end+0xfc005964>
 800598c:	9009883a 	mov	r4,r18
 8005990:	b00b883a 	mov	r5,r22
 8005994:	b80d883a 	mov	r6,r23
 8005998:	800d2000 	call	800d200 <__ssprint_r>
 800599c:	103c001e 	bne	r2,zero,80049a0 <__alt_data_end+0xfc0049a0>
 80059a0:	d8c02017 	ldw	r3,128(sp)
 80059a4:	d8801f17 	ldw	r2,124(sp)
 80059a8:	da000404 	addi	r8,sp,16
 80059ac:	003fee06 	br	8005968 <__alt_data_end+0xfc005968>
 80059b0:	d9002f17 	ldw	r4,188(sp)
 80059b4:	b00b883a 	mov	r5,r22
 80059b8:	b80d883a 	mov	r6,r23
 80059bc:	800d2000 	call	800d200 <__ssprint_r>
 80059c0:	103bf71e 	bne	r2,zero,80049a0 <__alt_data_end+0xfc0049a0>
 80059c4:	d8c02017 	ldw	r3,128(sp)
 80059c8:	d8802787 	ldb	r2,158(sp)
 80059cc:	da000404 	addi	r8,sp,16
 80059d0:	003cb506 	br	8004ca8 <__alt_data_end+0xfc004ca8>
 80059d4:	00800084 	movi	r2,2
 80059d8:	9546b03a 	or	r3,r18,r21
 80059dc:	003d8c06 	br	8005010 <__alt_data_end+0xfc005010>
 80059e0:	d8803317 	ldw	r2,204(sp)
 80059e4:	14ffffc4 	addi	r19,r2,-1
 80059e8:	04ff710e 	bge	zero,r19,80057b0 <__alt_data_end+0xfc0057b0>
 80059ec:	05400404 	movi	r21,16
 80059f0:	acc2f80e 	bge	r21,r19,80065d4 <___svfprintf_internal_r+0x1f58>
 80059f4:	01420074 	movhi	r5,2049
 80059f8:	295e6884 	addi	r5,r5,31138
 80059fc:	d9402b15 	stw	r5,172(sp)
 8005a00:	01c001c4 	movi	r7,7
 8005a04:	dc802f17 	ldw	r18,188(sp)
 8005a08:	00000306 	br	8005a18 <___svfprintf_internal_r+0x139c>
 8005a0c:	9cfffc04 	addi	r19,r19,-16
 8005a10:	8c400204 	addi	r17,r17,8
 8005a14:	acc0130e 	bge	r21,r19,8005a64 <___svfprintf_internal_r+0x13e8>
 8005a18:	18c00404 	addi	r3,r3,16
 8005a1c:	84000044 	addi	r16,r16,1
 8005a20:	8d000015 	stw	r20,0(r17)
 8005a24:	8d400115 	stw	r21,4(r17)
 8005a28:	d8c02015 	stw	r3,128(sp)
 8005a2c:	dc001f15 	stw	r16,124(sp)
 8005a30:	3c3ff60e 	bge	r7,r16,8005a0c <__alt_data_end+0xfc005a0c>
 8005a34:	9009883a 	mov	r4,r18
 8005a38:	b00b883a 	mov	r5,r22
 8005a3c:	b80d883a 	mov	r6,r23
 8005a40:	d9c03e15 	stw	r7,248(sp)
 8005a44:	800d2000 	call	800d200 <__ssprint_r>
 8005a48:	d9c03e17 	ldw	r7,248(sp)
 8005a4c:	103bd41e 	bne	r2,zero,80049a0 <__alt_data_end+0xfc0049a0>
 8005a50:	9cfffc04 	addi	r19,r19,-16
 8005a54:	d8c02017 	ldw	r3,128(sp)
 8005a58:	dc001f17 	ldw	r16,124(sp)
 8005a5c:	dc400404 	addi	r17,sp,16
 8005a60:	acffed16 	blt	r21,r19,8005a18 <__alt_data_end+0xfc005a18>
 8005a64:	d8802b17 	ldw	r2,172(sp)
 8005a68:	1cc7883a 	add	r3,r3,r19
 8005a6c:	84000044 	addi	r16,r16,1
 8005a70:	88800015 	stw	r2,0(r17)
 8005a74:	8cc00115 	stw	r19,4(r17)
 8005a78:	d8c02015 	stw	r3,128(sp)
 8005a7c:	dc001f15 	stw	r16,124(sp)
 8005a80:	008001c4 	movi	r2,7
 8005a84:	143f490e 	bge	r2,r16,80057ac <__alt_data_end+0xfc0057ac>
 8005a88:	d9002f17 	ldw	r4,188(sp)
 8005a8c:	b00b883a 	mov	r5,r22
 8005a90:	b80d883a 	mov	r6,r23
 8005a94:	800d2000 	call	800d200 <__ssprint_r>
 8005a98:	103bc11e 	bne	r2,zero,80049a0 <__alt_data_end+0xfc0049a0>
 8005a9c:	d8c02017 	ldw	r3,128(sp)
 8005aa0:	dc001f17 	ldw	r16,124(sp)
 8005aa4:	dc400404 	addi	r17,sp,16
 8005aa8:	003f4106 	br	80057b0 <__alt_data_end+0xfc0057b0>
 8005aac:	d9002f17 	ldw	r4,188(sp)
 8005ab0:	b00b883a 	mov	r5,r22
 8005ab4:	b80d883a 	mov	r6,r23
 8005ab8:	800d2000 	call	800d200 <__ssprint_r>
 8005abc:	103bb81e 	bne	r2,zero,80049a0 <__alt_data_end+0xfc0049a0>
 8005ac0:	d8c02017 	ldw	r3,128(sp)
 8005ac4:	da000404 	addi	r8,sp,16
 8005ac8:	d9403117 	ldw	r5,196(sp)
 8005acc:	d9003417 	ldw	r4,208(sp)
 8005ad0:	d8802617 	ldw	r2,152(sp)
 8005ad4:	2923883a 	add	r17,r5,r4
 8005ad8:	d9403317 	ldw	r5,204(sp)
 8005adc:	11400216 	blt	r2,r5,8005ae8 <___svfprintf_internal_r+0x146c>
 8005ae0:	e100004c 	andi	r4,fp,1
 8005ae4:	20000d26 	beq	r4,zero,8005b1c <___svfprintf_internal_r+0x14a0>
 8005ae8:	d9003917 	ldw	r4,228(sp)
 8005aec:	d9403517 	ldw	r5,212(sp)
 8005af0:	1907883a 	add	r3,r3,r4
 8005af4:	d9001f17 	ldw	r4,124(sp)
 8005af8:	41400015 	stw	r5,0(r8)
 8005afc:	d9403917 	ldw	r5,228(sp)
 8005b00:	21000044 	addi	r4,r4,1
 8005b04:	d8c02015 	stw	r3,128(sp)
 8005b08:	41400115 	stw	r5,4(r8)
 8005b0c:	d9001f15 	stw	r4,124(sp)
 8005b10:	014001c4 	movi	r5,7
 8005b14:	2901ec16 	blt	r5,r4,80062c8 <___svfprintf_internal_r+0x1c4c>
 8005b18:	42000204 	addi	r8,r8,8
 8005b1c:	d9003317 	ldw	r4,204(sp)
 8005b20:	2085c83a 	sub	r2,r4,r2
 8005b24:	8449c83a 	sub	r4,r16,r17
 8005b28:	1021883a 	mov	r16,r2
 8005b2c:	2080010e 	bge	r4,r2,8005b34 <___svfprintf_internal_r+0x14b8>
 8005b30:	2021883a 	mov	r16,r4
 8005b34:	04000a0e 	bge	zero,r16,8005b60 <___svfprintf_internal_r+0x14e4>
 8005b38:	d9001f17 	ldw	r4,124(sp)
 8005b3c:	1c07883a 	add	r3,r3,r16
 8005b40:	44400015 	stw	r17,0(r8)
 8005b44:	21000044 	addi	r4,r4,1
 8005b48:	44000115 	stw	r16,4(r8)
 8005b4c:	d8c02015 	stw	r3,128(sp)
 8005b50:	d9001f15 	stw	r4,124(sp)
 8005b54:	014001c4 	movi	r5,7
 8005b58:	2901f216 	blt	r5,r4,8006324 <___svfprintf_internal_r+0x1ca8>
 8005b5c:	42000204 	addi	r8,r8,8
 8005b60:	80020a16 	blt	r16,zero,800638c <___svfprintf_internal_r+0x1d10>
 8005b64:	1421c83a 	sub	r16,r2,r16
 8005b68:	043cac0e 	bge	zero,r16,8004e1c <__alt_data_end+0xfc004e1c>
 8005b6c:	04400404 	movi	r17,16
 8005b70:	d8801f17 	ldw	r2,124(sp)
 8005b74:	8c3f1a0e 	bge	r17,r16,80057e0 <__alt_data_end+0xfc0057e0>
 8005b78:	01420074 	movhi	r5,2049
 8005b7c:	295e6884 	addi	r5,r5,31138
 8005b80:	d9402b15 	stw	r5,172(sp)
 8005b84:	04c001c4 	movi	r19,7
 8005b88:	dc802f17 	ldw	r18,188(sp)
 8005b8c:	00000306 	br	8005b9c <___svfprintf_internal_r+0x1520>
 8005b90:	42000204 	addi	r8,r8,8
 8005b94:	843ffc04 	addi	r16,r16,-16
 8005b98:	8c3f140e 	bge	r17,r16,80057ec <__alt_data_end+0xfc0057ec>
 8005b9c:	18c00404 	addi	r3,r3,16
 8005ba0:	10800044 	addi	r2,r2,1
 8005ba4:	45000015 	stw	r20,0(r8)
 8005ba8:	44400115 	stw	r17,4(r8)
 8005bac:	d8c02015 	stw	r3,128(sp)
 8005bb0:	d8801f15 	stw	r2,124(sp)
 8005bb4:	98bff60e 	bge	r19,r2,8005b90 <__alt_data_end+0xfc005b90>
 8005bb8:	9009883a 	mov	r4,r18
 8005bbc:	b00b883a 	mov	r5,r22
 8005bc0:	b80d883a 	mov	r6,r23
 8005bc4:	800d2000 	call	800d200 <__ssprint_r>
 8005bc8:	103b751e 	bne	r2,zero,80049a0 <__alt_data_end+0xfc0049a0>
 8005bcc:	d8c02017 	ldw	r3,128(sp)
 8005bd0:	d8801f17 	ldw	r2,124(sp)
 8005bd4:	da000404 	addi	r8,sp,16
 8005bd8:	003fee06 	br	8005b94 <__alt_data_end+0xfc005b94>
 8005bdc:	e088703a 	and	r4,fp,r2
 8005be0:	203ec81e 	bne	r4,zero,8005704 <__alt_data_end+0xfc005704>
 8005be4:	dc001f17 	ldw	r16,124(sp)
 8005be8:	d9003117 	ldw	r4,196(sp)
 8005bec:	40800115 	stw	r2,4(r8)
 8005bf0:	84000044 	addi	r16,r16,1
 8005bf4:	41000015 	stw	r4,0(r8)
 8005bf8:	d8c02015 	stw	r3,128(sp)
 8005bfc:	dc001f15 	stw	r16,124(sp)
 8005c00:	008001c4 	movi	r2,7
 8005c04:	143fa016 	blt	r2,r16,8005a88 <__alt_data_end+0xfc005a88>
 8005c08:	44400204 	addi	r17,r8,8
 8005c0c:	003ee806 	br	80057b0 <__alt_data_end+0xfc0057b0>
 8005c10:	d9002f17 	ldw	r4,188(sp)
 8005c14:	b00b883a 	mov	r5,r22
 8005c18:	b80d883a 	mov	r6,r23
 8005c1c:	800d2000 	call	800d200 <__ssprint_r>
 8005c20:	103b5f1e 	bne	r2,zero,80049a0 <__alt_data_end+0xfc0049a0>
 8005c24:	d8c02017 	ldw	r3,128(sp)
 8005c28:	dc001f17 	ldw	r16,124(sp)
 8005c2c:	da000404 	addi	r8,sp,16
 8005c30:	003ebf06 	br	8005730 <__alt_data_end+0xfc005730>
 8005c34:	d9002f17 	ldw	r4,188(sp)
 8005c38:	b00b883a 	mov	r5,r22
 8005c3c:	b80d883a 	mov	r6,r23
 8005c40:	800d2000 	call	800d200 <__ssprint_r>
 8005c44:	103b561e 	bne	r2,zero,80049a0 <__alt_data_end+0xfc0049a0>
 8005c48:	d8c02017 	ldw	r3,128(sp)
 8005c4c:	dc001f17 	ldw	r16,124(sp)
 8005c50:	dc400404 	addi	r17,sp,16
 8005c54:	003ec106 	br	800575c <__alt_data_end+0xfc00575c>
 8005c58:	d9002f17 	ldw	r4,188(sp)
 8005c5c:	b00b883a 	mov	r5,r22
 8005c60:	b80d883a 	mov	r6,r23
 8005c64:	800d2000 	call	800d200 <__ssprint_r>
 8005c68:	103b4d1e 	bne	r2,zero,80049a0 <__alt_data_end+0xfc0049a0>
 8005c6c:	d8c02017 	ldw	r3,128(sp)
 8005c70:	da000404 	addi	r8,sp,16
 8005c74:	003c2a06 	br	8004d20 <__alt_data_end+0xfc004d20>
 8005c78:	da004015 	stw	r8,256(sp)
 8005c7c:	da403f15 	stw	r9,252(sp)
 8005c80:	800d0500 	call	800d050 <__fpclassifyd>
 8005c84:	da004017 	ldw	r8,256(sp)
 8005c88:	da403f17 	ldw	r9,252(sp)
 8005c8c:	1000a91e 	bne	r2,zero,8005f34 <___svfprintf_internal_r+0x18b8>
 8005c90:	008011c4 	movi	r2,71
 8005c94:	14011016 	blt	r2,r16,80060d8 <___svfprintf_internal_r+0x1a5c>
 8005c98:	01020074 	movhi	r4,2049
 8005c9c:	211e5a04 	addi	r4,r4,31080
 8005ca0:	d9003115 	stw	r4,196(sp)
 8005ca4:	00c000c4 	movi	r3,3
 8005ca8:	00bfdfc4 	movi	r2,-129
 8005cac:	d8c02a15 	stw	r3,168(sp)
 8005cb0:	e0b8703a 	and	fp,fp,r2
 8005cb4:	dcc02783 	ldbu	r19,158(sp)
 8005cb8:	dc802d15 	stw	r18,180(sp)
 8005cbc:	1823883a 	mov	r17,r3
 8005cc0:	d8003215 	stw	zero,200(sp)
 8005cc4:	d8003415 	stw	zero,208(sp)
 8005cc8:	003baf06 	br	8004b88 <__alt_data_end+0xfc004b88>
 8005ccc:	e0c0100c 	andi	r3,fp,64
 8005cd0:	18012a26 	beq	r3,zero,800617c <___svfprintf_internal_r+0x1b00>
 8005cd4:	d9002d17 	ldw	r4,180(sp)
 8005cd8:	1480000b 	ldhu	r18,0(r2)
 8005cdc:	002b883a 	mov	r21,zero
 8005ce0:	21000104 	addi	r4,r4,4
 8005ce4:	d9002d15 	stw	r4,180(sp)
 8005ce8:	003d3206 	br	80051b4 <__alt_data_end+0xfc0051b4>
 8005cec:	e080100c 	andi	r2,fp,64
 8005cf0:	10011326 	beq	r2,zero,8006140 <___svfprintf_internal_r+0x1ac4>
 8005cf4:	d8c02d17 	ldw	r3,180(sp)
 8005cf8:	002b883a 	mov	r21,zero
 8005cfc:	0005883a 	mov	r2,zero
 8005d00:	1c80000b 	ldhu	r18,0(r3)
 8005d04:	18c00104 	addi	r3,r3,4
 8005d08:	d8c02d15 	stw	r3,180(sp)
 8005d0c:	9007883a 	mov	r3,r18
 8005d10:	003cbf06 	br	8005010 <__alt_data_end+0xfc005010>
 8005d14:	e080040c 	andi	r2,fp,16
 8005d18:	10011e26 	beq	r2,zero,8006194 <___svfprintf_internal_r+0x1b18>
 8005d1c:	d9402d17 	ldw	r5,180(sp)
 8005d20:	d8c03017 	ldw	r3,192(sp)
 8005d24:	28800017 	ldw	r2,0(r5)
 8005d28:	29400104 	addi	r5,r5,4
 8005d2c:	d9402d15 	stw	r5,180(sp)
 8005d30:	10c00015 	stw	r3,0(r2)
 8005d34:	003a7d06 	br	800472c <__alt_data_end+0xfc00472c>
 8005d38:	e4000007 	ldb	r16,0(fp)
 8005d3c:	e005883a 	mov	r2,fp
 8005d40:	003aa506 	br	80047d8 <__alt_data_end+0xfc0047d8>
 8005d44:	e080100c 	andi	r2,fp,64
 8005d48:	10010526 	beq	r2,zero,8006160 <___svfprintf_internal_r+0x1ae4>
 8005d4c:	1c80000f 	ldh	r18,0(r3)
 8005d50:	d8802d17 	ldw	r2,180(sp)
 8005d54:	902bd7fa 	srai	r21,r18,31
 8005d58:	10800104 	addi	r2,r2,4
 8005d5c:	d8802d15 	stw	r2,180(sp)
 8005d60:	a805883a 	mov	r2,r21
 8005d64:	003b5c06 	br	8004ad8 <__alt_data_end+0xfc004ad8>
 8005d68:	e080100c 	andi	r2,fp,64
 8005d6c:	1000ec26 	beq	r2,zero,8006120 <___svfprintf_internal_r+0x1aa4>
 8005d70:	d8802d17 	ldw	r2,180(sp)
 8005d74:	002b883a 	mov	r21,zero
 8005d78:	1480000b 	ldhu	r18,0(r2)
 8005d7c:	10800104 	addi	r2,r2,4
 8005d80:	d8802d15 	stw	r2,180(sp)
 8005d84:	9007883a 	mov	r3,r18
 8005d88:	00800044 	movi	r2,1
 8005d8c:	003ca006 	br	8005010 <__alt_data_end+0xfc005010>
 8005d90:	00800084 	movi	r2,2
 8005d94:	003c9e06 	br	8005010 <__alt_data_end+0xfc005010>
 8005d98:	01020074 	movhi	r4,2049
 8005d9c:	211e6884 	addi	r4,r4,31138
 8005da0:	d9002b15 	stw	r4,172(sp)
 8005da4:	d9002b17 	ldw	r4,172(sp)
 8005da8:	1c47883a 	add	r3,r3,r17
 8005dac:	10800044 	addi	r2,r2,1
 8005db0:	41000015 	stw	r4,0(r8)
 8005db4:	44400115 	stw	r17,4(r8)
 8005db8:	d8c02015 	stw	r3,128(sp)
 8005dbc:	d8801f15 	stw	r2,124(sp)
 8005dc0:	010001c4 	movi	r4,7
 8005dc4:	20bf3916 	blt	r4,r2,8005aac <__alt_data_end+0xfc005aac>
 8005dc8:	42000204 	addi	r8,r8,8
 8005dcc:	003f3e06 	br	8005ac8 <__alt_data_end+0xfc005ac8>
 8005dd0:	01020074 	movhi	r4,2049
 8005dd4:	211e6884 	addi	r4,r4,31138
 8005dd8:	d9002b15 	stw	r4,172(sp)
 8005ddc:	003bf806 	br	8004dc0 <__alt_data_end+0xfc004dc0>
 8005de0:	d9002f17 	ldw	r4,188(sp)
 8005de4:	b00b883a 	mov	r5,r22
 8005de8:	b80d883a 	mov	r6,r23
 8005dec:	800d2000 	call	800d200 <__ssprint_r>
 8005df0:	103aeb1e 	bne	r2,zero,80049a0 <__alt_data_end+0xfc0049a0>
 8005df4:	d8c02017 	ldw	r3,128(sp)
 8005df8:	da000404 	addi	r8,sp,16
 8005dfc:	003dc806 	br	8005520 <__alt_data_end+0xfc005520>
 8005e00:	d8801f17 	ldw	r2,124(sp)
 8005e04:	01420074 	movhi	r5,2049
 8005e08:	01000044 	movi	r4,1
 8005e0c:	18c00044 	addi	r3,r3,1
 8005e10:	10800044 	addi	r2,r2,1
 8005e14:	295e6804 	addi	r5,r5,31136
 8005e18:	41000115 	stw	r4,4(r8)
 8005e1c:	41400015 	stw	r5,0(r8)
 8005e20:	d8c02015 	stw	r3,128(sp)
 8005e24:	d8801f15 	stw	r2,124(sp)
 8005e28:	010001c4 	movi	r4,7
 8005e2c:	2080ae16 	blt	r4,r2,80060e8 <___svfprintf_internal_r+0x1a6c>
 8005e30:	42000204 	addi	r8,r8,8
 8005e34:	8000041e 	bne	r16,zero,8005e48 <___svfprintf_internal_r+0x17cc>
 8005e38:	d8803317 	ldw	r2,204(sp)
 8005e3c:	1000021e 	bne	r2,zero,8005e48 <___svfprintf_internal_r+0x17cc>
 8005e40:	e080004c 	andi	r2,fp,1
 8005e44:	103bf526 	beq	r2,zero,8004e1c <__alt_data_end+0xfc004e1c>
 8005e48:	d9003917 	ldw	r4,228(sp)
 8005e4c:	d8801f17 	ldw	r2,124(sp)
 8005e50:	d9403517 	ldw	r5,212(sp)
 8005e54:	1907883a 	add	r3,r3,r4
 8005e58:	10800044 	addi	r2,r2,1
 8005e5c:	41000115 	stw	r4,4(r8)
 8005e60:	41400015 	stw	r5,0(r8)
 8005e64:	d8c02015 	stw	r3,128(sp)
 8005e68:	d8801f15 	stw	r2,124(sp)
 8005e6c:	010001c4 	movi	r4,7
 8005e70:	2081ac16 	blt	r4,r2,8006524 <___svfprintf_internal_r+0x1ea8>
 8005e74:	42000204 	addi	r8,r8,8
 8005e78:	0421c83a 	sub	r16,zero,r16
 8005e7c:	0400d60e 	bge	zero,r16,80061d8 <___svfprintf_internal_r+0x1b5c>
 8005e80:	04400404 	movi	r17,16
 8005e84:	8c01190e 	bge	r17,r16,80062ec <___svfprintf_internal_r+0x1c70>
 8005e88:	01420074 	movhi	r5,2049
 8005e8c:	295e6884 	addi	r5,r5,31138
 8005e90:	d9402b15 	stw	r5,172(sp)
 8005e94:	04c001c4 	movi	r19,7
 8005e98:	dc802f17 	ldw	r18,188(sp)
 8005e9c:	00000306 	br	8005eac <___svfprintf_internal_r+0x1830>
 8005ea0:	42000204 	addi	r8,r8,8
 8005ea4:	843ffc04 	addi	r16,r16,-16
 8005ea8:	8c01130e 	bge	r17,r16,80062f8 <___svfprintf_internal_r+0x1c7c>
 8005eac:	18c00404 	addi	r3,r3,16
 8005eb0:	10800044 	addi	r2,r2,1
 8005eb4:	45000015 	stw	r20,0(r8)
 8005eb8:	44400115 	stw	r17,4(r8)
 8005ebc:	d8c02015 	stw	r3,128(sp)
 8005ec0:	d8801f15 	stw	r2,124(sp)
 8005ec4:	98bff60e 	bge	r19,r2,8005ea0 <__alt_data_end+0xfc005ea0>
 8005ec8:	9009883a 	mov	r4,r18
 8005ecc:	b00b883a 	mov	r5,r22
 8005ed0:	b80d883a 	mov	r6,r23
 8005ed4:	800d2000 	call	800d200 <__ssprint_r>
 8005ed8:	103ab11e 	bne	r2,zero,80049a0 <__alt_data_end+0xfc0049a0>
 8005edc:	d8c02017 	ldw	r3,128(sp)
 8005ee0:	d8801f17 	ldw	r2,124(sp)
 8005ee4:	da000404 	addi	r8,sp,16
 8005ee8:	003fee06 	br	8005ea4 <__alt_data_end+0xfc005ea4>
 8005eec:	d8802e17 	ldw	r2,184(sp)
 8005ef0:	d8c02d15 	stw	r3,180(sp)
 8005ef4:	0085c83a 	sub	r2,zero,r2
 8005ef8:	d8802e15 	stw	r2,184(sp)
 8005efc:	e005883a 	mov	r2,fp
 8005f00:	003aba06 	br	80049ec <__alt_data_end+0xfc0049ec>
 8005f04:	e0800044 	addi	r2,fp,1
 8005f08:	9cc00814 	ori	r19,r19,32
 8005f0c:	e4000047 	ldb	r16,1(fp)
 8005f10:	003a3106 	br	80047d8 <__alt_data_end+0xfc0047d8>
 8005f14:	d9002f17 	ldw	r4,188(sp)
 8005f18:	b00b883a 	mov	r5,r22
 8005f1c:	b80d883a 	mov	r6,r23
 8005f20:	800d2000 	call	800d200 <__ssprint_r>
 8005f24:	103a9e1e 	bne	r2,zero,80049a0 <__alt_data_end+0xfc0049a0>
 8005f28:	d8c02017 	ldw	r3,128(sp)
 8005f2c:	da000404 	addi	r8,sp,16
 8005f30:	003d8d06 	br	8005568 <__alt_data_end+0xfc005568>
 8005f34:	04fff7c4 	movi	r19,-33
 8005f38:	00bfffc4 	movi	r2,-1
 8005f3c:	84e6703a 	and	r19,r16,r19
 8005f40:	48807226 	beq	r9,r2,800610c <___svfprintf_internal_r+0x1a90>
 8005f44:	008011c4 	movi	r2,71
 8005f48:	98818026 	beq	r19,r2,800654c <___svfprintf_internal_r+0x1ed0>
 8005f4c:	d9003817 	ldw	r4,224(sp)
 8005f50:	e0c04014 	ori	r3,fp,256
 8005f54:	d8c02d15 	stw	r3,180(sp)
 8005f58:	20017f16 	blt	r4,zero,8006558 <___svfprintf_internal_r+0x1edc>
 8005f5c:	dc403817 	ldw	r17,224(sp)
 8005f60:	d8002a05 	stb	zero,168(sp)
 8005f64:	00801984 	movi	r2,102
 8005f68:	8080ad26 	beq	r16,r2,8006220 <___svfprintf_internal_r+0x1ba4>
 8005f6c:	00801184 	movi	r2,70
 8005f70:	8080ab26 	beq	r16,r2,8006220 <___svfprintf_internal_r+0x1ba4>
 8005f74:	00801144 	movi	r2,69
 8005f78:	98818426 	beq	r19,r2,800658c <___svfprintf_internal_r+0x1f10>
 8005f7c:	482b883a 	mov	r21,r9
 8005f80:	d8802604 	addi	r2,sp,152
 8005f84:	d8800115 	stw	r2,4(sp)
 8005f88:	d9002f17 	ldw	r4,188(sp)
 8005f8c:	d8802504 	addi	r2,sp,148
 8005f90:	d9403717 	ldw	r5,220(sp)
 8005f94:	d8800215 	stw	r2,8(sp)
 8005f98:	d8802104 	addi	r2,sp,132
 8005f9c:	dd400015 	stw	r21,0(sp)
 8005fa0:	d8800315 	stw	r2,12(sp)
 8005fa4:	880d883a 	mov	r6,r17
 8005fa8:	01c00084 	movi	r7,2
 8005fac:	da004015 	stw	r8,256(sp)
 8005fb0:	da403f15 	stw	r9,252(sp)
 8005fb4:	8008cf80 	call	8008cf8 <_dtoa_r>
 8005fb8:	d8803115 	stw	r2,196(sp)
 8005fbc:	008019c4 	movi	r2,103
 8005fc0:	da004017 	ldw	r8,256(sp)
 8005fc4:	da403f17 	ldw	r9,252(sp)
 8005fc8:	80800226 	beq	r16,r2,8005fd4 <___svfprintf_internal_r+0x1958>
 8005fcc:	008011c4 	movi	r2,71
 8005fd0:	8080a51e 	bne	r16,r2,8006268 <___svfprintf_internal_r+0x1bec>
 8005fd4:	e080004c 	andi	r2,fp,1
 8005fd8:	10017226 	beq	r2,zero,80065a4 <___svfprintf_internal_r+0x1f28>
 8005fdc:	d8c03117 	ldw	r3,196(sp)
 8005fe0:	1d55883a 	add	r10,r3,r21
 8005fe4:	d9003717 	ldw	r4,220(sp)
 8005fe8:	880b883a 	mov	r5,r17
 8005fec:	000d883a 	mov	r6,zero
 8005ff0:	000f883a 	mov	r7,zero
 8005ff4:	da004015 	stw	r8,256(sp)
 8005ff8:	da403f15 	stw	r9,252(sp)
 8005ffc:	da803e15 	stw	r10,248(sp)
 8006000:	80123e40 	call	80123e4 <__eqdf2>
 8006004:	da004017 	ldw	r8,256(sp)
 8006008:	da403f17 	ldw	r9,252(sp)
 800600c:	da803e17 	ldw	r10,248(sp)
 8006010:	1000fd26 	beq	r2,zero,8006408 <___svfprintf_internal_r+0x1d8c>
 8006014:	d8802117 	ldw	r2,132(sp)
 8006018:	1280062e 	bgeu	r2,r10,8006034 <___svfprintf_internal_r+0x19b8>
 800601c:	01000c04 	movi	r4,48
 8006020:	10c00044 	addi	r3,r2,1
 8006024:	d8c02115 	stw	r3,132(sp)
 8006028:	11000005 	stb	r4,0(r2)
 800602c:	d8802117 	ldw	r2,132(sp)
 8006030:	12bffb36 	bltu	r2,r10,8006020 <__alt_data_end+0xfc006020>
 8006034:	d8c03117 	ldw	r3,196(sp)
 8006038:	10c5c83a 	sub	r2,r2,r3
 800603c:	d8803315 	stw	r2,204(sp)
 8006040:	008011c4 	movi	r2,71
 8006044:	9880e226 	beq	r19,r2,80063d0 <___svfprintf_internal_r+0x1d54>
 8006048:	00801944 	movi	r2,101
 800604c:	1401a30e 	bge	r2,r16,80066dc <___svfprintf_internal_r+0x2060>
 8006050:	d8c02617 	ldw	r3,152(sp)
 8006054:	00801984 	movi	r2,102
 8006058:	d8c03415 	stw	r3,208(sp)
 800605c:	80815326 	beq	r16,r2,80065ac <___svfprintf_internal_r+0x1f30>
 8006060:	d8c03417 	ldw	r3,208(sp)
 8006064:	d9003317 	ldw	r4,204(sp)
 8006068:	19013f16 	blt	r3,r4,8006568 <___svfprintf_internal_r+0x1eec>
 800606c:	e080004c 	andi	r2,fp,1
 8006070:	10014826 	beq	r2,zero,8006594 <___svfprintf_internal_r+0x1f18>
 8006074:	d8c03417 	ldw	r3,208(sp)
 8006078:	1c400044 	addi	r17,r3,1
 800607c:	8839883a 	mov	fp,r17
 8006080:	88014016 	blt	r17,zero,8006584 <___svfprintf_internal_r+0x1f08>
 8006084:	dd402a07 	ldb	r21,168(sp)
 8006088:	a800c61e 	bne	r21,zero,80063a4 <___svfprintf_internal_r+0x1d28>
 800608c:	df002a15 	stw	fp,168(sp)
 8006090:	dcc02783 	ldbu	r19,158(sp)
 8006094:	df002d17 	ldw	fp,180(sp)
 8006098:	d8003215 	stw	zero,200(sp)
 800609c:	dc802d15 	stw	r18,180(sp)
 80060a0:	003ab906 	br	8004b88 <__alt_data_end+0xfc004b88>
 80060a4:	01020074 	movhi	r4,2049
 80060a8:	211e5804 	addi	r4,r4,31072
 80060ac:	d9003115 	stw	r4,196(sp)
 80060b0:	003bbe06 	br	8004fac <__alt_data_end+0xfc004fac>
 80060b4:	d9002f17 	ldw	r4,188(sp)
 80060b8:	04001004 	movi	r16,64
 80060bc:	800b883a 	mov	r5,r16
 80060c0:	80035180 	call	8003518 <_malloc_r>
 80060c4:	b0800015 	stw	r2,0(r22)
 80060c8:	b0800415 	stw	r2,16(r22)
 80060cc:	10017c26 	beq	r2,zero,80066c0 <___svfprintf_internal_r+0x2044>
 80060d0:	b4000515 	stw	r16,20(r22)
 80060d4:	00398306 	br	80046e4 <__alt_data_end+0xfc0046e4>
 80060d8:	01420074 	movhi	r5,2049
 80060dc:	295e5b04 	addi	r5,r5,31084
 80060e0:	d9403115 	stw	r5,196(sp)
 80060e4:	003eef06 	br	8005ca4 <__alt_data_end+0xfc005ca4>
 80060e8:	d9002f17 	ldw	r4,188(sp)
 80060ec:	b00b883a 	mov	r5,r22
 80060f0:	b80d883a 	mov	r6,r23
 80060f4:	800d2000 	call	800d200 <__ssprint_r>
 80060f8:	103a291e 	bne	r2,zero,80049a0 <__alt_data_end+0xfc0049a0>
 80060fc:	dc002617 	ldw	r16,152(sp)
 8006100:	d8c02017 	ldw	r3,128(sp)
 8006104:	da000404 	addi	r8,sp,16
 8006108:	003f4a06 	br	8005e34 <__alt_data_end+0xfc005e34>
 800610c:	02400184 	movi	r9,6
 8006110:	003f8e06 	br	8005f4c <__alt_data_end+0xfc005f4c>
 8006114:	d8c03117 	ldw	r3,196(sp)
 8006118:	b8e3c83a 	sub	r17,r23,r3
 800611c:	003a9506 	br	8004b74 <__alt_data_end+0xfc004b74>
 8006120:	d8c02d17 	ldw	r3,180(sp)
 8006124:	002b883a 	mov	r21,zero
 8006128:	00800044 	movi	r2,1
 800612c:	1c800017 	ldw	r18,0(r3)
 8006130:	18c00104 	addi	r3,r3,4
 8006134:	d8c02d15 	stw	r3,180(sp)
 8006138:	9007883a 	mov	r3,r18
 800613c:	003bb406 	br	8005010 <__alt_data_end+0xfc005010>
 8006140:	d9002d17 	ldw	r4,180(sp)
 8006144:	002b883a 	mov	r21,zero
 8006148:	0005883a 	mov	r2,zero
 800614c:	24800017 	ldw	r18,0(r4)
 8006150:	21000104 	addi	r4,r4,4
 8006154:	d9002d15 	stw	r4,180(sp)
 8006158:	9007883a 	mov	r3,r18
 800615c:	003bac06 	br	8005010 <__alt_data_end+0xfc005010>
 8006160:	1c800017 	ldw	r18,0(r3)
 8006164:	d8c02d17 	ldw	r3,180(sp)
 8006168:	902bd7fa 	srai	r21,r18,31
 800616c:	18c00104 	addi	r3,r3,4
 8006170:	d8c02d15 	stw	r3,180(sp)
 8006174:	a805883a 	mov	r2,r21
 8006178:	003a5706 	br	8004ad8 <__alt_data_end+0xfc004ad8>
 800617c:	d9402d17 	ldw	r5,180(sp)
 8006180:	14800017 	ldw	r18,0(r2)
 8006184:	002b883a 	mov	r21,zero
 8006188:	29400104 	addi	r5,r5,4
 800618c:	d9402d15 	stw	r5,180(sp)
 8006190:	003c0806 	br	80051b4 <__alt_data_end+0xfc0051b4>
 8006194:	e080100c 	andi	r2,fp,64
 8006198:	10009426 	beq	r2,zero,80063ec <___svfprintf_internal_r+0x1d70>
 800619c:	d9002d17 	ldw	r4,180(sp)
 80061a0:	d9403017 	ldw	r5,192(sp)
 80061a4:	20800017 	ldw	r2,0(r4)
 80061a8:	21000104 	addi	r4,r4,4
 80061ac:	d9002d15 	stw	r4,180(sp)
 80061b0:	1140000d 	sth	r5,0(r2)
 80061b4:	00395d06 	br	800472c <__alt_data_end+0xfc00472c>
 80061b8:	d9002f17 	ldw	r4,188(sp)
 80061bc:	b00b883a 	mov	r5,r22
 80061c0:	b80d883a 	mov	r6,r23
 80061c4:	800d2000 	call	800d200 <__ssprint_r>
 80061c8:	1039f51e 	bne	r2,zero,80049a0 <__alt_data_end+0xfc0049a0>
 80061cc:	d8c02017 	ldw	r3,128(sp)
 80061d0:	d8801f17 	ldw	r2,124(sp)
 80061d4:	da000404 	addi	r8,sp,16
 80061d8:	d9403317 	ldw	r5,204(sp)
 80061dc:	d9003117 	ldw	r4,196(sp)
 80061e0:	10800044 	addi	r2,r2,1
 80061e4:	28c7883a 	add	r3,r5,r3
 80061e8:	41000015 	stw	r4,0(r8)
 80061ec:	41400115 	stw	r5,4(r8)
 80061f0:	d8c02015 	stw	r3,128(sp)
 80061f4:	d8801f15 	stw	r2,124(sp)
 80061f8:	010001c4 	movi	r4,7
 80061fc:	20bb060e 	bge	r4,r2,8004e18 <__alt_data_end+0xfc004e18>
 8006200:	003d8306 	br	8005810 <__alt_data_end+0xfc005810>
 8006204:	da004015 	stw	r8,256(sp)
 8006208:	80045e40 	call	80045e4 <strlen>
 800620c:	1023883a 	mov	r17,r2
 8006210:	da004017 	ldw	r8,256(sp)
 8006214:	883c290e 	bge	r17,zero,80052bc <__alt_data_end+0xfc0052bc>
 8006218:	0005883a 	mov	r2,zero
 800621c:	003c2706 	br	80052bc <__alt_data_end+0xfc0052bc>
 8006220:	d8802604 	addi	r2,sp,152
 8006224:	d8800115 	stw	r2,4(sp)
 8006228:	d9002f17 	ldw	r4,188(sp)
 800622c:	d8802504 	addi	r2,sp,148
 8006230:	d9403717 	ldw	r5,220(sp)
 8006234:	d8800215 	stw	r2,8(sp)
 8006238:	d8802104 	addi	r2,sp,132
 800623c:	da400015 	stw	r9,0(sp)
 8006240:	d8800315 	stw	r2,12(sp)
 8006244:	880d883a 	mov	r6,r17
 8006248:	01c000c4 	movi	r7,3
 800624c:	da004015 	stw	r8,256(sp)
 8006250:	da403f15 	stw	r9,252(sp)
 8006254:	8008cf80 	call	8008cf8 <_dtoa_r>
 8006258:	da403f17 	ldw	r9,252(sp)
 800625c:	da004017 	ldw	r8,256(sp)
 8006260:	d8803115 	stw	r2,196(sp)
 8006264:	482b883a 	mov	r21,r9
 8006268:	d8c03117 	ldw	r3,196(sp)
 800626c:	00801184 	movi	r2,70
 8006270:	1d55883a 	add	r10,r3,r21
 8006274:	98bf5b1e 	bne	r19,r2,8005fe4 <__alt_data_end+0xfc005fe4>
 8006278:	19000007 	ldb	r4,0(r3)
 800627c:	00800c04 	movi	r2,48
 8006280:	2080d826 	beq	r4,r2,80065e4 <___svfprintf_internal_r+0x1f68>
 8006284:	d8c02617 	ldw	r3,152(sp)
 8006288:	50d5883a 	add	r10,r10,r3
 800628c:	003f5506 	br	8005fe4 <__alt_data_end+0xfc005fe4>
 8006290:	01020074 	movhi	r4,2049
 8006294:	211e6c84 	addi	r4,r4,31154
 8006298:	d9003615 	stw	r4,216(sp)
 800629c:	003a7706 	br	8004c7c <__alt_data_end+0xfc004c7c>
 80062a0:	0023883a 	mov	r17,zero
 80062a4:	003da306 	br	8005934 <__alt_data_end+0xfc005934>
 80062a8:	d9002f17 	ldw	r4,188(sp)
 80062ac:	b00b883a 	mov	r5,r22
 80062b0:	b80d883a 	mov	r6,r23
 80062b4:	800d2000 	call	800d200 <__ssprint_r>
 80062b8:	1039b91e 	bne	r2,zero,80049a0 <__alt_data_end+0xfc0049a0>
 80062bc:	d8c02017 	ldw	r3,128(sp)
 80062c0:	da000404 	addi	r8,sp,16
 80062c4:	003d9a06 	br	8005930 <__alt_data_end+0xfc005930>
 80062c8:	d9002f17 	ldw	r4,188(sp)
 80062cc:	b00b883a 	mov	r5,r22
 80062d0:	b80d883a 	mov	r6,r23
 80062d4:	800d2000 	call	800d200 <__ssprint_r>
 80062d8:	1039b11e 	bne	r2,zero,80049a0 <__alt_data_end+0xfc0049a0>
 80062dc:	d8802617 	ldw	r2,152(sp)
 80062e0:	d8c02017 	ldw	r3,128(sp)
 80062e4:	da000404 	addi	r8,sp,16
 80062e8:	003e0c06 	br	8005b1c <__alt_data_end+0xfc005b1c>
 80062ec:	01020074 	movhi	r4,2049
 80062f0:	211e6884 	addi	r4,r4,31138
 80062f4:	d9002b15 	stw	r4,172(sp)
 80062f8:	d9002b17 	ldw	r4,172(sp)
 80062fc:	1c07883a 	add	r3,r3,r16
 8006300:	10800044 	addi	r2,r2,1
 8006304:	41000015 	stw	r4,0(r8)
 8006308:	44000115 	stw	r16,4(r8)
 800630c:	d8c02015 	stw	r3,128(sp)
 8006310:	d8801f15 	stw	r2,124(sp)
 8006314:	010001c4 	movi	r4,7
 8006318:	20bfa716 	blt	r4,r2,80061b8 <__alt_data_end+0xfc0061b8>
 800631c:	42000204 	addi	r8,r8,8
 8006320:	003fad06 	br	80061d8 <__alt_data_end+0xfc0061d8>
 8006324:	d9002f17 	ldw	r4,188(sp)
 8006328:	b00b883a 	mov	r5,r22
 800632c:	b80d883a 	mov	r6,r23
 8006330:	800d2000 	call	800d200 <__ssprint_r>
 8006334:	10399a1e 	bne	r2,zero,80049a0 <__alt_data_end+0xfc0049a0>
 8006338:	d8802617 	ldw	r2,152(sp)
 800633c:	d9403317 	ldw	r5,204(sp)
 8006340:	d8c02017 	ldw	r3,128(sp)
 8006344:	da000404 	addi	r8,sp,16
 8006348:	2885c83a 	sub	r2,r5,r2
 800634c:	003e0406 	br	8005b60 <__alt_data_end+0xfc005b60>
 8006350:	00800184 	movi	r2,6
 8006354:	1240012e 	bgeu	r2,r9,800635c <___svfprintf_internal_r+0x1ce0>
 8006358:	1013883a 	mov	r9,r2
 800635c:	4823883a 	mov	r17,r9
 8006360:	4805883a 	mov	r2,r9
 8006364:	4800b616 	blt	r9,zero,8006640 <___svfprintf_internal_r+0x1fc4>
 8006368:	01420074 	movhi	r5,2049
 800636c:	295e6604 	addi	r5,r5,31128
 8006370:	d8802a15 	stw	r2,168(sp)
 8006374:	dc802d15 	stw	r18,180(sp)
 8006378:	d8003215 	stw	zero,200(sp)
 800637c:	d8003415 	stw	zero,208(sp)
 8006380:	d9403115 	stw	r5,196(sp)
 8006384:	0005883a 	mov	r2,zero
 8006388:	003a0606 	br	8004ba4 <__alt_data_end+0xfc004ba4>
 800638c:	0021883a 	mov	r16,zero
 8006390:	003df406 	br	8005b64 <__alt_data_end+0xfc005b64>
 8006394:	01420074 	movhi	r5,2049
 8006398:	295e6c84 	addi	r5,r5,31154
 800639c:	d9403615 	stw	r5,216(sp)
 80063a0:	003ac306 	br	8004eb0 <__alt_data_end+0xfc004eb0>
 80063a4:	00800b44 	movi	r2,45
 80063a8:	d8802785 	stb	r2,158(sp)
 80063ac:	df002a15 	stw	fp,168(sp)
 80063b0:	d8003215 	stw	zero,200(sp)
 80063b4:	df002d17 	ldw	fp,180(sp)
 80063b8:	00800b44 	movi	r2,45
 80063bc:	dc802d15 	stw	r18,180(sp)
 80063c0:	0039f506 	br	8004b98 <__alt_data_end+0xfc004b98>
 80063c4:	04c00b44 	movi	r19,45
 80063c8:	dcc02785 	stb	r19,158(sp)
 80063cc:	003af206 	br	8004f98 <__alt_data_end+0xfc004f98>
 80063d0:	d8c02617 	ldw	r3,152(sp)
 80063d4:	00bfff44 	movi	r2,-3
 80063d8:	18801816 	blt	r3,r2,800643c <___svfprintf_internal_r+0x1dc0>
 80063dc:	48c01716 	blt	r9,r3,800643c <___svfprintf_internal_r+0x1dc0>
 80063e0:	d8c03415 	stw	r3,208(sp)
 80063e4:	040019c4 	movi	r16,103
 80063e8:	003f1d06 	br	8006060 <__alt_data_end+0xfc006060>
 80063ec:	d8c02d17 	ldw	r3,180(sp)
 80063f0:	d9003017 	ldw	r4,192(sp)
 80063f4:	18800017 	ldw	r2,0(r3)
 80063f8:	18c00104 	addi	r3,r3,4
 80063fc:	d8c02d15 	stw	r3,180(sp)
 8006400:	11000015 	stw	r4,0(r2)
 8006404:	0038c906 	br	800472c <__alt_data_end+0xfc00472c>
 8006408:	5005883a 	mov	r2,r10
 800640c:	003f0906 	br	8006034 <__alt_data_end+0xfc006034>
 8006410:	01020074 	movhi	r4,2049
 8006414:	211e6884 	addi	r4,r4,31138
 8006418:	d9002b15 	stw	r4,172(sp)
 800641c:	003c9a06 	br	8005688 <__alt_data_end+0xfc005688>
 8006420:	da402a15 	stw	r9,168(sp)
 8006424:	dcc02783 	ldbu	r19,158(sp)
 8006428:	4823883a 	mov	r17,r9
 800642c:	dc802d15 	stw	r18,180(sp)
 8006430:	d8003215 	stw	zero,200(sp)
 8006434:	d8003415 	stw	zero,208(sp)
 8006438:	0039d306 	br	8004b88 <__alt_data_end+0xfc004b88>
 800643c:	843fff84 	addi	r16,r16,-2
 8006440:	1d7fffc4 	addi	r21,r3,-1
 8006444:	dd402615 	stw	r21,152(sp)
 8006448:	dc0022c5 	stb	r16,139(sp)
 800644c:	a8008f16 	blt	r21,zero,800668c <___svfprintf_internal_r+0x2010>
 8006450:	00800ac4 	movi	r2,43
 8006454:	d8802305 	stb	r2,140(sp)
 8006458:	00800244 	movi	r2,9
 800645c:	1540710e 	bge	r2,r21,8006624 <___svfprintf_internal_r+0x1fa8>
 8006460:	dcc022c4 	addi	r19,sp,139
 8006464:	dc002b15 	stw	r16,172(sp)
 8006468:	4023883a 	mov	r17,r8
 800646c:	9821883a 	mov	r16,r19
 8006470:	a809883a 	mov	r4,r21
 8006474:	01400284 	movi	r5,10
 8006478:	801115c0 	call	801115c <__modsi3>
 800647c:	10800c04 	addi	r2,r2,48
 8006480:	843fffc4 	addi	r16,r16,-1
 8006484:	a809883a 	mov	r4,r21
 8006488:	01400284 	movi	r5,10
 800648c:	80800005 	stb	r2,0(r16)
 8006490:	80111080 	call	8011108 <__divsi3>
 8006494:	01000244 	movi	r4,9
 8006498:	102b883a 	mov	r21,r2
 800649c:	20bff416 	blt	r4,r2,8006470 <__alt_data_end+0xfc006470>
 80064a0:	8811883a 	mov	r8,r17
 80064a4:	10800c04 	addi	r2,r2,48
 80064a8:	8023883a 	mov	r17,r16
 80064ac:	897fffc4 	addi	r5,r17,-1
 80064b0:	88bfffc5 	stb	r2,-1(r17)
 80064b4:	dc002b17 	ldw	r16,172(sp)
 80064b8:	2cc08a2e 	bgeu	r5,r19,80066e4 <___svfprintf_internal_r+0x2068>
 80064bc:	d9802384 	addi	r6,sp,142
 80064c0:	344dc83a 	sub	r6,r6,r17
 80064c4:	d9002344 	addi	r4,sp,141
 80064c8:	998d883a 	add	r6,r19,r6
 80064cc:	00000106 	br	80064d4 <___svfprintf_internal_r+0x1e58>
 80064d0:	28800003 	ldbu	r2,0(r5)
 80064d4:	20800005 	stb	r2,0(r4)
 80064d8:	21000044 	addi	r4,r4,1
 80064dc:	29400044 	addi	r5,r5,1
 80064e0:	21bffb1e 	bne	r4,r6,80064d0 <__alt_data_end+0xfc0064d0>
 80064e4:	d8802304 	addi	r2,sp,140
 80064e8:	1445c83a 	sub	r2,r2,r17
 80064ec:	d9402344 	addi	r5,sp,141
 80064f0:	2885883a 	add	r2,r5,r2
 80064f4:	14e7c83a 	sub	r19,r2,r19
 80064f8:	d8803317 	ldw	r2,204(sp)
 80064fc:	d8c03317 	ldw	r3,204(sp)
 8006500:	dcc03a15 	stw	r19,232(sp)
 8006504:	14e3883a 	add	r17,r2,r19
 8006508:	00800044 	movi	r2,1
 800650c:	10c0690e 	bge	r2,r3,80066b4 <___svfprintf_internal_r+0x2038>
 8006510:	8c400044 	addi	r17,r17,1
 8006514:	8839883a 	mov	fp,r17
 8006518:	88006416 	blt	r17,zero,80066ac <___svfprintf_internal_r+0x2030>
 800651c:	d8003415 	stw	zero,208(sp)
 8006520:	003ed806 	br	8006084 <__alt_data_end+0xfc006084>
 8006524:	d9002f17 	ldw	r4,188(sp)
 8006528:	b00b883a 	mov	r5,r22
 800652c:	b80d883a 	mov	r6,r23
 8006530:	800d2000 	call	800d200 <__ssprint_r>
 8006534:	10391a1e 	bne	r2,zero,80049a0 <__alt_data_end+0xfc0049a0>
 8006538:	dc002617 	ldw	r16,152(sp)
 800653c:	d8c02017 	ldw	r3,128(sp)
 8006540:	d8801f17 	ldw	r2,124(sp)
 8006544:	da000404 	addi	r8,sp,16
 8006548:	003e4b06 	br	8005e78 <__alt_data_end+0xfc005e78>
 800654c:	483e7f1e 	bne	r9,zero,8005f4c <__alt_data_end+0xfc005f4c>
 8006550:	8813883a 	mov	r9,r17
 8006554:	003e7d06 	br	8005f4c <__alt_data_end+0xfc005f4c>
 8006558:	00c00b44 	movi	r3,45
 800655c:	2460003c 	xorhi	r17,r4,32768
 8006560:	d8c02a05 	stb	r3,168(sp)
 8006564:	003e7f06 	br	8005f64 <__alt_data_end+0xfc005f64>
 8006568:	d8c03417 	ldw	r3,208(sp)
 800656c:	00c03e0e 	bge	zero,r3,8006668 <___svfprintf_internal_r+0x1fec>
 8006570:	04400044 	movi	r17,1
 8006574:	d9003317 	ldw	r4,204(sp)
 8006578:	8923883a 	add	r17,r17,r4
 800657c:	8839883a 	mov	fp,r17
 8006580:	883ec00e 	bge	r17,zero,8006084 <__alt_data_end+0xfc006084>
 8006584:	0039883a 	mov	fp,zero
 8006588:	003ebe06 	br	8006084 <__alt_data_end+0xfc006084>
 800658c:	4d400044 	addi	r21,r9,1
 8006590:	003e7b06 	br	8005f80 <__alt_data_end+0xfc005f80>
 8006594:	1839883a 	mov	fp,r3
 8006598:	18004e16 	blt	r3,zero,80066d4 <___svfprintf_internal_r+0x2058>
 800659c:	dc403417 	ldw	r17,208(sp)
 80065a0:	003eb806 	br	8006084 <__alt_data_end+0xfc006084>
 80065a4:	d8802117 	ldw	r2,132(sp)
 80065a8:	003ea206 	br	8006034 <__alt_data_end+0xfc006034>
 80065ac:	00c0310e 	bge	zero,r3,8006674 <___svfprintf_internal_r+0x1ff8>
 80065b0:	4800021e 	bne	r9,zero,80065bc <___svfprintf_internal_r+0x1f40>
 80065b4:	e080004c 	andi	r2,fp,1
 80065b8:	103ff626 	beq	r2,zero,8006594 <__alt_data_end+0xfc006594>
 80065bc:	d8c03417 	ldw	r3,208(sp)
 80065c0:	4a400044 	addi	r9,r9,1
 80065c4:	1a63883a 	add	r17,r3,r9
 80065c8:	8839883a 	mov	fp,r17
 80065cc:	883ead0e 	bge	r17,zero,8006084 <__alt_data_end+0xfc006084>
 80065d0:	003fec06 	br	8006584 <__alt_data_end+0xfc006584>
 80065d4:	01020074 	movhi	r4,2049
 80065d8:	211e6884 	addi	r4,r4,31138
 80065dc:	d9002b15 	stw	r4,172(sp)
 80065e0:	003d2006 	br	8005a64 <__alt_data_end+0xfc005a64>
 80065e4:	d9003717 	ldw	r4,220(sp)
 80065e8:	880b883a 	mov	r5,r17
 80065ec:	000d883a 	mov	r6,zero
 80065f0:	000f883a 	mov	r7,zero
 80065f4:	da004015 	stw	r8,256(sp)
 80065f8:	da403f15 	stw	r9,252(sp)
 80065fc:	da803e15 	stw	r10,248(sp)
 8006600:	80123e40 	call	80123e4 <__eqdf2>
 8006604:	da004017 	ldw	r8,256(sp)
 8006608:	da403f17 	ldw	r9,252(sp)
 800660c:	da803e17 	ldw	r10,248(sp)
 8006610:	103f1c26 	beq	r2,zero,8006284 <__alt_data_end+0xfc006284>
 8006614:	00800044 	movi	r2,1
 8006618:	1547c83a 	sub	r3,r2,r21
 800661c:	d8c02615 	stw	r3,152(sp)
 8006620:	003f1906 	br	8006288 <__alt_data_end+0xfc006288>
 8006624:	00800c04 	movi	r2,48
 8006628:	a8c00c04 	addi	r3,r21,48
 800662c:	d8802345 	stb	r2,141(sp)
 8006630:	d8c02385 	stb	r3,142(sp)
 8006634:	d88023c4 	addi	r2,sp,143
 8006638:	dcc022c4 	addi	r19,sp,139
 800663c:	003fad06 	br	80064f4 <__alt_data_end+0xfc0064f4>
 8006640:	0005883a 	mov	r2,zero
 8006644:	003f4806 	br	8006368 <__alt_data_end+0xfc006368>
 8006648:	d9402d17 	ldw	r5,180(sp)
 800664c:	2a400017 	ldw	r9,0(r5)
 8006650:	28c00104 	addi	r3,r5,4
 8006654:	d8c02d15 	stw	r3,180(sp)
 8006658:	483e2c0e 	bge	r9,zero,8005f0c <__alt_data_end+0xfc005f0c>
 800665c:	027fffc4 	movi	r9,-1
 8006660:	e4000047 	ldb	r16,1(fp)
 8006664:	00385c06 	br	80047d8 <__alt_data_end+0xfc0047d8>
 8006668:	04400084 	movi	r17,2
 800666c:	88e3c83a 	sub	r17,r17,r3
 8006670:	003fc006 	br	8006574 <__alt_data_end+0xfc006574>
 8006674:	4800091e 	bne	r9,zero,800669c <___svfprintf_internal_r+0x2020>
 8006678:	e080004c 	andi	r2,fp,1
 800667c:	1000071e 	bne	r2,zero,800669c <___svfprintf_internal_r+0x2020>
 8006680:	07000044 	movi	fp,1
 8006684:	e023883a 	mov	r17,fp
 8006688:	003e7e06 	br	8006084 <__alt_data_end+0xfc006084>
 800668c:	00800b44 	movi	r2,45
 8006690:	056bc83a 	sub	r21,zero,r21
 8006694:	d8802305 	stb	r2,140(sp)
 8006698:	003f6f06 	br	8006458 <__alt_data_end+0xfc006458>
 800669c:	4c400084 	addi	r17,r9,2
 80066a0:	8839883a 	mov	fp,r17
 80066a4:	883e770e 	bge	r17,zero,8006084 <__alt_data_end+0xfc006084>
 80066a8:	003fb606 	br	8006584 <__alt_data_end+0xfc006584>
 80066ac:	0039883a 	mov	fp,zero
 80066b0:	003f9a06 	br	800651c <__alt_data_end+0xfc00651c>
 80066b4:	e084703a 	and	r2,fp,r2
 80066b8:	103f9626 	beq	r2,zero,8006514 <__alt_data_end+0xfc006514>
 80066bc:	003f9406 	br	8006510 <__alt_data_end+0xfc006510>
 80066c0:	d8c02f17 	ldw	r3,188(sp)
 80066c4:	00800304 	movi	r2,12
 80066c8:	18800015 	stw	r2,0(r3)
 80066cc:	00bfffc4 	movi	r2,-1
 80066d0:	0038b706 	br	80049b0 <__alt_data_end+0xfc0049b0>
 80066d4:	0039883a 	mov	fp,zero
 80066d8:	003fb006 	br	800659c <__alt_data_end+0xfc00659c>
 80066dc:	d8c02617 	ldw	r3,152(sp)
 80066e0:	003f5706 	br	8006440 <__alt_data_end+0xfc006440>
 80066e4:	d8802344 	addi	r2,sp,141
 80066e8:	003f8206 	br	80064f4 <__alt_data_end+0xfc0064f4>

080066ec <___vfprintf_internal_r>:
 80066ec:	defeb604 	addi	sp,sp,-1320
 80066f0:	dfc14915 	stw	ra,1316(sp)
 80066f4:	ddc14715 	stw	r23,1308(sp)
 80066f8:	dd814615 	stw	r22,1304(sp)
 80066fc:	202f883a 	mov	r23,r4
 8006700:	282d883a 	mov	r22,r5
 8006704:	d9812a15 	stw	r6,1192(sp)
 8006708:	d9c12d15 	stw	r7,1204(sp)
 800670c:	df014815 	stw	fp,1312(sp)
 8006710:	dd414515 	stw	r21,1300(sp)
 8006714:	dd014415 	stw	r20,1296(sp)
 8006718:	dcc14315 	stw	r19,1292(sp)
 800671c:	dc814215 	stw	r18,1288(sp)
 8006720:	dc414115 	stw	r17,1284(sp)
 8006724:	dc014015 	stw	r16,1280(sp)
 8006728:	800b5000 	call	800b500 <_localeconv_r>
 800672c:	10800017 	ldw	r2,0(r2)
 8006730:	1009883a 	mov	r4,r2
 8006734:	d8813515 	stw	r2,1236(sp)
 8006738:	80045e40 	call	80045e4 <strlen>
 800673c:	d8813815 	stw	r2,1248(sp)
 8006740:	b8000226 	beq	r23,zero,800674c <___vfprintf_internal_r+0x60>
 8006744:	b8800e17 	ldw	r2,56(r23)
 8006748:	10010526 	beq	r2,zero,8006b60 <___vfprintf_internal_r+0x474>
 800674c:	b0c0030b 	ldhu	r3,12(r22)
 8006750:	1908000c 	andi	r4,r3,8192
 8006754:	1805883a 	mov	r2,r3
 8006758:	2000071e 	bne	r4,zero,8006778 <___vfprintf_internal_r+0x8c>
 800675c:	b1001917 	ldw	r4,100(r22)
 8006760:	18880014 	ori	r2,r3,8192
 8006764:	00f7ffc4 	movi	r3,-8193
 8006768:	20c8703a 	and	r4,r4,r3
 800676c:	b080030d 	sth	r2,12(r22)
 8006770:	1007883a 	mov	r3,r2
 8006774:	b1001915 	stw	r4,100(r22)
 8006778:	1100020c 	andi	r4,r2,8
 800677c:	2000a826 	beq	r4,zero,8006a20 <___vfprintf_internal_r+0x334>
 8006780:	b1000417 	ldw	r4,16(r22)
 8006784:	2000a626 	beq	r4,zero,8006a20 <___vfprintf_internal_r+0x334>
 8006788:	1080068c 	andi	r2,r2,26
 800678c:	01000284 	movi	r4,10
 8006790:	1100ac26 	beq	r2,r4,8006a44 <___vfprintf_internal_r+0x358>
 8006794:	d8c10e04 	addi	r3,sp,1080
 8006798:	d9010dc4 	addi	r4,sp,1079
 800679c:	d9400404 	addi	r5,sp,16
 80067a0:	05020074 	movhi	r20,2049
 80067a4:	1905c83a 	sub	r2,r3,r4
 80067a8:	a51e7084 	addi	r20,r20,31170
 80067ac:	d8c12815 	stw	r3,1184(sp)
 80067b0:	d9012915 	stw	r4,1188(sp)
 80067b4:	d9411e15 	stw	r5,1144(sp)
 80067b8:	d8012015 	stw	zero,1152(sp)
 80067bc:	d8011f15 	stw	zero,1148(sp)
 80067c0:	d8013315 	stw	zero,1228(sp)
 80067c4:	d8013715 	stw	zero,1244(sp)
 80067c8:	d8013915 	stw	zero,1252(sp)
 80067cc:	d8013b15 	stw	zero,1260(sp)
 80067d0:	d8013a15 	stw	zero,1256(sp)
 80067d4:	d8012f15 	stw	zero,1212(sp)
 80067d8:	2811883a 	mov	r8,r5
 80067dc:	d8813c15 	stw	r2,1264(sp)
 80067e0:	d8c12a17 	ldw	r3,1192(sp)
 80067e4:	18800007 	ldb	r2,0(r3)
 80067e8:	10021326 	beq	r2,zero,8007038 <___vfprintf_internal_r+0x94c>
 80067ec:	00c00944 	movi	r3,37
 80067f0:	dc012a17 	ldw	r16,1192(sp)
 80067f4:	10c0021e 	bne	r2,r3,8006800 <___vfprintf_internal_r+0x114>
 80067f8:	00001606 	br	8006854 <___vfprintf_internal_r+0x168>
 80067fc:	10c08526 	beq	r2,r3,8006a14 <___vfprintf_internal_r+0x328>
 8006800:	84000044 	addi	r16,r16,1
 8006804:	80800007 	ldb	r2,0(r16)
 8006808:	103ffc1e 	bne	r2,zero,80067fc <__alt_data_end+0xfc0067fc>
 800680c:	d9012a17 	ldw	r4,1192(sp)
 8006810:	8123c83a 	sub	r17,r16,r4
 8006814:	88000f26 	beq	r17,zero,8006854 <___vfprintf_internal_r+0x168>
 8006818:	d8812a17 	ldw	r2,1192(sp)
 800681c:	d8c12017 	ldw	r3,1152(sp)
 8006820:	44400115 	stw	r17,4(r8)
 8006824:	40800015 	stw	r2,0(r8)
 8006828:	d8811f17 	ldw	r2,1148(sp)
 800682c:	1c47883a 	add	r3,r3,r17
 8006830:	d8c12015 	stw	r3,1152(sp)
 8006834:	10800044 	addi	r2,r2,1
 8006838:	d8811f15 	stw	r2,1148(sp)
 800683c:	00c001c4 	movi	r3,7
 8006840:	1880b516 	blt	r3,r2,8006b18 <___vfprintf_internal_r+0x42c>
 8006844:	42000204 	addi	r8,r8,8
 8006848:	d8c12f17 	ldw	r3,1212(sp)
 800684c:	1c47883a 	add	r3,r3,r17
 8006850:	d8c12f15 	stw	r3,1212(sp)
 8006854:	80800007 	ldb	r2,0(r16)
 8006858:	1000b626 	beq	r2,zero,8006b34 <___vfprintf_internal_r+0x448>
 800685c:	80800044 	addi	r2,r16,1
 8006860:	84000047 	ldb	r16,1(r16)
 8006864:	0027883a 	mov	r19,zero
 8006868:	0039883a 	mov	fp,zero
 800686c:	dcc12b05 	stb	r19,1196(sp)
 8006870:	d8012785 	stb	zero,1182(sp)
 8006874:	027fffc4 	movi	r9,-1
 8006878:	d8012e15 	stw	zero,1208(sp)
 800687c:	04401604 	movi	r17,88
 8006880:	04800244 	movi	r18,9
 8006884:	da012a15 	stw	r8,1192(sp)
 8006888:	e027883a 	mov	r19,fp
 800688c:	17000044 	addi	fp,r2,1
 8006890:	80bff804 	addi	r2,r16,-32
 8006894:	88831236 	bltu	r17,r2,80074e0 <___vfprintf_internal_r+0xdf4>
 8006898:	100490ba 	slli	r2,r2,2
 800689c:	01020034 	movhi	r4,2048
 80068a0:	211a2c04 	addi	r4,r4,26800
 80068a4:	1105883a 	add	r2,r2,r4
 80068a8:	10800017 	ldw	r2,0(r2)
 80068ac:	1000683a 	jmp	r2
 80068b0:	080073fc 	xorhi	zero,at,463
 80068b4:	080074e0 	cmpeqi	zero,at,467
 80068b8:	080074e0 	cmpeqi	zero,at,467
 80068bc:	08007418 	cmpnei	zero,at,464
 80068c0:	080074e0 	cmpeqi	zero,at,467
 80068c4:	080074e0 	cmpeqi	zero,at,467
 80068c8:	080074e0 	cmpeqi	zero,at,467
 80068cc:	080074e0 	cmpeqi	zero,at,467
 80068d0:	080074e0 	cmpeqi	zero,at,467
 80068d4:	080074e0 	cmpeqi	zero,at,467
 80068d8:	08007428 	cmpgeui	zero,at,464
 80068dc:	08007450 	cmplti	zero,at,465
 80068e0:	080074e0 	cmpeqi	zero,at,467
 80068e4:	08006b6c 	andhi	zero,at,429
 80068e8:	08006b7c 	xorhi	zero,at,429
 80068ec:	080074e0 	cmpeqi	zero,at,467
 80068f0:	08006bcc 	andi	zero,at,431
 80068f4:	08006bdc 	xori	zero,at,431
 80068f8:	08006bdc 	xori	zero,at,431
 80068fc:	08006bdc 	xori	zero,at,431
 8006900:	08006bdc 	xori	zero,at,431
 8006904:	08006bdc 	xori	zero,at,431
 8006908:	08006bdc 	xori	zero,at,431
 800690c:	08006bdc 	xori	zero,at,431
 8006910:	08006bdc 	xori	zero,at,431
 8006914:	08006bdc 	xori	zero,at,431
 8006918:	080074e0 	cmpeqi	zero,at,467
 800691c:	080074e0 	cmpeqi	zero,at,467
 8006920:	080074e0 	cmpeqi	zero,at,467
 8006924:	080074e0 	cmpeqi	zero,at,467
 8006928:	080074e0 	cmpeqi	zero,at,467
 800692c:	080074e0 	cmpeqi	zero,at,467
 8006930:	080074e0 	cmpeqi	zero,at,467
 8006934:	080074e0 	cmpeqi	zero,at,467
 8006938:	080074e0 	cmpeqi	zero,at,467
 800693c:	080074e0 	cmpeqi	zero,at,467
 8006940:	08006c20 	cmpeqi	zero,at,432
 8006944:	08007040 	call	800704 <__reset-0x77ff8fc>
 8006948:	080074e0 	cmpeqi	zero,at,467
 800694c:	08007040 	call	800704 <__reset-0x77ff8fc>
 8006950:	080074e0 	cmpeqi	zero,at,467
 8006954:	080074e0 	cmpeqi	zero,at,467
 8006958:	080074e0 	cmpeqi	zero,at,467
 800695c:	080074e0 	cmpeqi	zero,at,467
 8006960:	080070e8 	cmpgeui	zero,at,451
 8006964:	080074e0 	cmpeqi	zero,at,467
 8006968:	080074e0 	cmpeqi	zero,at,467
 800696c:	080070f8 	rdprs	zero,at,451
 8006970:	080074e0 	cmpeqi	zero,at,467
 8006974:	080074e0 	cmpeqi	zero,at,467
 8006978:	080074e0 	cmpeqi	zero,at,467
 800697c:	080074e0 	cmpeqi	zero,at,467
 8006980:	080074e0 	cmpeqi	zero,at,467
 8006984:	0800713c 	xorhi	zero,at,452
 8006988:	080074e0 	cmpeqi	zero,at,467
 800698c:	080074e0 	cmpeqi	zero,at,467
 8006990:	08007174 	orhi	zero,at,453
 8006994:	080074e0 	cmpeqi	zero,at,467
 8006998:	080074e0 	cmpeqi	zero,at,467
 800699c:	080074e0 	cmpeqi	zero,at,467
 80069a0:	080074e0 	cmpeqi	zero,at,467
 80069a4:	080074e0 	cmpeqi	zero,at,467
 80069a8:	080074e0 	cmpeqi	zero,at,467
 80069ac:	080074e0 	cmpeqi	zero,at,467
 80069b0:	080074e0 	cmpeqi	zero,at,467
 80069b4:	080074e0 	cmpeqi	zero,at,467
 80069b8:	080074e0 	cmpeqi	zero,at,467
 80069bc:	080073b0 	cmpltui	zero,at,462
 80069c0:	0800735c 	xori	zero,at,461
 80069c4:	08007040 	call	800704 <__reset-0x77ff8fc>
 80069c8:	08007040 	call	800704 <__reset-0x77ff8fc>
 80069cc:	08007040 	call	800704 <__reset-0x77ff8fc>
 80069d0:	080073a0 	cmpeqi	zero,at,462
 80069d4:	0800735c 	xori	zero,at,461
 80069d8:	080074e0 	cmpeqi	zero,at,467
 80069dc:	080074e0 	cmpeqi	zero,at,467
 80069e0:	08007278 	rdprs	zero,at,457
 80069e4:	080074e0 	cmpeqi	zero,at,467
 80069e8:	08007290 	cmplti	zero,at,458
 80069ec:	080072d0 	cmplti	zero,at,459
 80069f0:	08007310 	cmplti	zero,at,460
 80069f4:	080071dc 	xori	zero,at,455
 80069f8:	080074e0 	cmpeqi	zero,at,467
 80069fc:	08007464 	muli	zero,at,465
 8006a00:	080074e0 	cmpeqi	zero,at,467
 8006a04:	080071ec 	andhi	zero,at,455
 8006a08:	080074e0 	cmpeqi	zero,at,467
 8006a0c:	080074e0 	cmpeqi	zero,at,467
 8006a10:	0800722c 	andhi	zero,at,456
 8006a14:	d9412a17 	ldw	r5,1192(sp)
 8006a18:	8163c83a 	sub	r17,r16,r5
 8006a1c:	003f7d06 	br	8006814 <__alt_data_end+0xfc006814>
 8006a20:	b809883a 	mov	r4,r23
 8006a24:	b00b883a 	mov	r5,r22
 8006a28:	800880c0 	call	800880c <__swsetup_r>
 8006a2c:	10002d1e 	bne	r2,zero,8006ae4 <___vfprintf_internal_r+0x3f8>
 8006a30:	b0c0030b 	ldhu	r3,12(r22)
 8006a34:	01000284 	movi	r4,10
 8006a38:	1805883a 	mov	r2,r3
 8006a3c:	1080068c 	andi	r2,r2,26
 8006a40:	113f541e 	bne	r2,r4,8006794 <__alt_data_end+0xfc006794>
 8006a44:	b080038b 	ldhu	r2,14(r22)
 8006a48:	113fffcc 	andi	r4,r2,65535
 8006a4c:	2120001c 	xori	r4,r4,32768
 8006a50:	21200004 	addi	r4,r4,-32768
 8006a54:	203f4f16 	blt	r4,zero,8006794 <__alt_data_end+0xfc006794>
 8006a58:	b2c01917 	ldw	r11,100(r22)
 8006a5c:	b2800717 	ldw	r10,28(r22)
 8006a60:	b2400917 	ldw	r9,36(r22)
 8006a64:	d9812a17 	ldw	r6,1192(sp)
 8006a68:	d9c12d17 	ldw	r7,1204(sp)
 8006a6c:	02010004 	movi	r8,1024
 8006a70:	18ffff4c 	andi	r3,r3,65533
 8006a74:	d881078d 	sth	r2,1054(sp)
 8006a78:	b809883a 	mov	r4,r23
 8006a7c:	d8800404 	addi	r2,sp,16
 8006a80:	d9410404 	addi	r5,sp,1040
 8006a84:	d8c1070d 	sth	r3,1052(sp)
 8006a88:	dac11d15 	stw	r11,1140(sp)
 8006a8c:	da810b15 	stw	r10,1068(sp)
 8006a90:	da410d15 	stw	r9,1076(sp)
 8006a94:	d8810415 	stw	r2,1040(sp)
 8006a98:	d8810815 	stw	r2,1056(sp)
 8006a9c:	da010615 	stw	r8,1048(sp)
 8006aa0:	da010915 	stw	r8,1060(sp)
 8006aa4:	d8010a15 	stw	zero,1064(sp)
 8006aa8:	80066ec0 	call	80066ec <___vfprintf_internal_r>
 8006aac:	1021883a 	mov	r16,r2
 8006ab0:	10000416 	blt	r2,zero,8006ac4 <___vfprintf_internal_r+0x3d8>
 8006ab4:	b809883a 	mov	r4,r23
 8006ab8:	d9410404 	addi	r5,sp,1040
 8006abc:	800a4200 	call	800a420 <_fflush_r>
 8006ac0:	1007301e 	bne	r2,zero,8008784 <___vfprintf_internal_r+0x2098>
 8006ac4:	d881070b 	ldhu	r2,1052(sp)
 8006ac8:	1080100c 	andi	r2,r2,64
 8006acc:	10000326 	beq	r2,zero,8006adc <___vfprintf_internal_r+0x3f0>
 8006ad0:	b080030b 	ldhu	r2,12(r22)
 8006ad4:	10801014 	ori	r2,r2,64
 8006ad8:	b080030d 	sth	r2,12(r22)
 8006adc:	8005883a 	mov	r2,r16
 8006ae0:	00000106 	br	8006ae8 <___vfprintf_internal_r+0x3fc>
 8006ae4:	00bfffc4 	movi	r2,-1
 8006ae8:	dfc14917 	ldw	ra,1316(sp)
 8006aec:	df014817 	ldw	fp,1312(sp)
 8006af0:	ddc14717 	ldw	r23,1308(sp)
 8006af4:	dd814617 	ldw	r22,1304(sp)
 8006af8:	dd414517 	ldw	r21,1300(sp)
 8006afc:	dd014417 	ldw	r20,1296(sp)
 8006b00:	dcc14317 	ldw	r19,1292(sp)
 8006b04:	dc814217 	ldw	r18,1288(sp)
 8006b08:	dc414117 	ldw	r17,1284(sp)
 8006b0c:	dc014017 	ldw	r16,1280(sp)
 8006b10:	dec14a04 	addi	sp,sp,1320
 8006b14:	f800283a 	ret
 8006b18:	b809883a 	mov	r4,r23
 8006b1c:	b00b883a 	mov	r5,r22
 8006b20:	d9811e04 	addi	r6,sp,1144
 8006b24:	800e6940 	call	800e694 <__sprint_r>
 8006b28:	1000081e 	bne	r2,zero,8006b4c <___vfprintf_internal_r+0x460>
 8006b2c:	da000404 	addi	r8,sp,16
 8006b30:	003f4506 	br	8006848 <__alt_data_end+0xfc006848>
 8006b34:	d8812017 	ldw	r2,1152(sp)
 8006b38:	10000426 	beq	r2,zero,8006b4c <___vfprintf_internal_r+0x460>
 8006b3c:	b809883a 	mov	r4,r23
 8006b40:	b00b883a 	mov	r5,r22
 8006b44:	d9811e04 	addi	r6,sp,1144
 8006b48:	800e6940 	call	800e694 <__sprint_r>
 8006b4c:	b080030b 	ldhu	r2,12(r22)
 8006b50:	1080100c 	andi	r2,r2,64
 8006b54:	103fe31e 	bne	r2,zero,8006ae4 <__alt_data_end+0xfc006ae4>
 8006b58:	d8812f17 	ldw	r2,1212(sp)
 8006b5c:	003fe206 	br	8006ae8 <__alt_data_end+0xfc006ae8>
 8006b60:	b809883a 	mov	r4,r23
 8006b64:	800a9dc0 	call	800a9dc <__sinit>
 8006b68:	003ef806 	br	800674c <__alt_data_end+0xfc00674c>
 8006b6c:	e005883a 	mov	r2,fp
 8006b70:	9cc00114 	ori	r19,r19,4
 8006b74:	e4000007 	ldb	r16,0(fp)
 8006b78:	003f4406 	br	800688c <__alt_data_end+0xfc00688c>
 8006b7c:	e4000007 	ldb	r16,0(fp)
 8006b80:	01000a84 	movi	r4,42
 8006b84:	e0800044 	addi	r2,fp,1
 8006b88:	8106f626 	beq	r16,r4,8008764 <___vfprintf_internal_r+0x2078>
 8006b8c:	857ff404 	addi	r21,r16,-48
 8006b90:	1039883a 	mov	fp,r2
 8006b94:	0013883a 	mov	r9,zero
 8006b98:	957f3d36 	bltu	r18,r21,8006890 <__alt_data_end+0xfc006890>
 8006b9c:	0009883a 	mov	r4,zero
 8006ba0:	01400284 	movi	r5,10
 8006ba4:	8002f580 	call	8002f58 <__mulsi3>
 8006ba8:	e4000007 	ldb	r16,0(fp)
 8006bac:	a889883a 	add	r4,r21,r2
 8006bb0:	e7000044 	addi	fp,fp,1
 8006bb4:	857ff404 	addi	r21,r16,-48
 8006bb8:	957ff92e 	bgeu	r18,r21,8006ba0 <__alt_data_end+0xfc006ba0>
 8006bbc:	2013883a 	mov	r9,r4
 8006bc0:	203f330e 	bge	r4,zero,8006890 <__alt_data_end+0xfc006890>
 8006bc4:	027fffc4 	movi	r9,-1
 8006bc8:	003f3106 	br	8006890 <__alt_data_end+0xfc006890>
 8006bcc:	9cc02014 	ori	r19,r19,128
 8006bd0:	e005883a 	mov	r2,fp
 8006bd4:	e4000007 	ldb	r16,0(fp)
 8006bd8:	003f2c06 	br	800688c <__alt_data_end+0xfc00688c>
 8006bdc:	857ff404 	addi	r21,r16,-48
 8006be0:	d8012e15 	stw	zero,1208(sp)
 8006be4:	e021883a 	mov	r16,fp
 8006be8:	0009883a 	mov	r4,zero
 8006bec:	da412c15 	stw	r9,1200(sp)
 8006bf0:	01400284 	movi	r5,10
 8006bf4:	8002f580 	call	8002f58 <__mulsi3>
 8006bf8:	81400007 	ldb	r5,0(r16)
 8006bfc:	1549883a 	add	r4,r2,r21
 8006c00:	e7000044 	addi	fp,fp,1
 8006c04:	2d7ff404 	addi	r21,r5,-48
 8006c08:	e021883a 	mov	r16,fp
 8006c0c:	957ff82e 	bgeu	r18,r21,8006bf0 <__alt_data_end+0xfc006bf0>
 8006c10:	2821883a 	mov	r16,r5
 8006c14:	d9012e15 	stw	r4,1208(sp)
 8006c18:	da412c17 	ldw	r9,1200(sp)
 8006c1c:	003f1c06 	br	8006890 <__alt_data_end+0xfc006890>
 8006c20:	da012a17 	ldw	r8,1192(sp)
 8006c24:	df012a15 	stw	fp,1192(sp)
 8006c28:	9839883a 	mov	fp,r19
 8006c2c:	dcc12b03 	ldbu	r19,1196(sp)
 8006c30:	e7000414 	ori	fp,fp,16
 8006c34:	e080080c 	andi	r2,fp,32
 8006c38:	dcc12785 	stb	r19,1182(sp)
 8006c3c:	d8c12d17 	ldw	r3,1204(sp)
 8006c40:	1001ce26 	beq	r2,zero,800737c <___vfprintf_internal_r+0xc90>
 8006c44:	d9012d17 	ldw	r4,1204(sp)
 8006c48:	18800117 	ldw	r2,4(r3)
 8006c4c:	1c800017 	ldw	r18,0(r3)
 8006c50:	21000204 	addi	r4,r4,8
 8006c54:	d9012d15 	stw	r4,1204(sp)
 8006c58:	102b883a 	mov	r21,r2
 8006c5c:	10044916 	blt	r2,zero,8007d84 <___vfprintf_internal_r+0x1698>
 8006c60:	dcc12783 	ldbu	r19,1182(sp)
 8006c64:	da413215 	stw	r9,1224(sp)
 8006c68:	00800044 	movi	r2,1
 8006c6c:	9546b03a 	or	r3,r18,r21
 8006c70:	48000216 	blt	r9,zero,8006c7c <___vfprintf_internal_r+0x590>
 8006c74:	013fdfc4 	movi	r4,-129
 8006c78:	e138703a 	and	fp,fp,r4
 8006c7c:	1802251e 	bne	r3,zero,8007514 <___vfprintf_internal_r+0xe28>
 8006c80:	48031726 	beq	r9,zero,80078e0 <___vfprintf_internal_r+0x11f4>
 8006c84:	10803fcc 	andi	r2,r2,255
 8006c88:	00c00044 	movi	r3,1
 8006c8c:	10c24526 	beq	r2,r3,80075a4 <___vfprintf_internal_r+0xeb8>
 8006c90:	00c00084 	movi	r3,2
 8006c94:	10c33426 	beq	r2,r3,8007968 <___vfprintf_internal_r+0x127c>
 8006c98:	d8c10e04 	addi	r3,sp,1080
 8006c9c:	9008d0fa 	srli	r4,r18,3
 8006ca0:	a80a977a 	slli	r5,r21,29
 8006ca4:	a82ad0fa 	srli	r21,r21,3
 8006ca8:	948001cc 	andi	r18,r18,7
 8006cac:	90800c04 	addi	r2,r18,48
 8006cb0:	18ffffc4 	addi	r3,r3,-1
 8006cb4:	2924b03a 	or	r18,r5,r4
 8006cb8:	18800005 	stb	r2,0(r3)
 8006cbc:	9548b03a 	or	r4,r18,r21
 8006cc0:	203ff61e 	bne	r4,zero,8006c9c <__alt_data_end+0xfc006c9c>
 8006cc4:	e100004c 	andi	r4,fp,1
 8006cc8:	d8c13115 	stw	r3,1220(sp)
 8006ccc:	20039a1e 	bne	r4,zero,8007b38 <___vfprintf_internal_r+0x144c>
 8006cd0:	d8812817 	ldw	r2,1184(sp)
 8006cd4:	10e3c83a 	sub	r17,r2,r3
 8006cd8:	8805883a 	mov	r2,r17
 8006cdc:	8a40010e 	bge	r17,r9,8006ce4 <___vfprintf_internal_r+0x5f8>
 8006ce0:	4805883a 	mov	r2,r9
 8006ce4:	d8812b15 	stw	r2,1196(sp)
 8006ce8:	d8013415 	stw	zero,1232(sp)
 8006cec:	98803fcc 	andi	r2,r19,255
 8006cf0:	1080201c 	xori	r2,r2,128
 8006cf4:	10bfe004 	addi	r2,r2,-128
 8006cf8:	10000326 	beq	r2,zero,8006d08 <___vfprintf_internal_r+0x61c>
 8006cfc:	d8c12b17 	ldw	r3,1196(sp)
 8006d00:	18c00044 	addi	r3,r3,1
 8006d04:	d8c12b15 	stw	r3,1196(sp)
 8006d08:	e0c0008c 	andi	r3,fp,2
 8006d0c:	d8c12c15 	stw	r3,1200(sp)
 8006d10:	18000326 	beq	r3,zero,8006d20 <___vfprintf_internal_r+0x634>
 8006d14:	d8c12b17 	ldw	r3,1196(sp)
 8006d18:	18c00084 	addi	r3,r3,2
 8006d1c:	d8c12b15 	stw	r3,1196(sp)
 8006d20:	e0c0210c 	andi	r3,fp,132
 8006d24:	d8c13015 	stw	r3,1216(sp)
 8006d28:	1801f81e 	bne	r3,zero,800750c <___vfprintf_internal_r+0xe20>
 8006d2c:	d9012e17 	ldw	r4,1208(sp)
 8006d30:	d8c12b17 	ldw	r3,1196(sp)
 8006d34:	20ebc83a 	sub	r21,r4,r3
 8006d38:	0541f40e 	bge	zero,r21,800750c <___vfprintf_internal_r+0xe20>
 8006d3c:	02400404 	movi	r9,16
 8006d40:	d8c12017 	ldw	r3,1152(sp)
 8006d44:	d8811f17 	ldw	r2,1148(sp)
 8006d48:	4d45750e 	bge	r9,r21,8008320 <___vfprintf_internal_r+0x1c34>
 8006d4c:	01420074 	movhi	r5,2049
 8006d50:	295e7484 	addi	r5,r5,31186
 8006d54:	d9413615 	stw	r5,1240(sp)
 8006d58:	4827883a 	mov	r19,r9
 8006d5c:	048001c4 	movi	r18,7
 8006d60:	00000306 	br	8006d70 <___vfprintf_internal_r+0x684>
 8006d64:	ad7ffc04 	addi	r21,r21,-16
 8006d68:	42000204 	addi	r8,r8,8
 8006d6c:	9d40130e 	bge	r19,r21,8006dbc <___vfprintf_internal_r+0x6d0>
 8006d70:	01020074 	movhi	r4,2049
 8006d74:	18c00404 	addi	r3,r3,16
 8006d78:	10800044 	addi	r2,r2,1
 8006d7c:	211e7484 	addi	r4,r4,31186
 8006d80:	41000015 	stw	r4,0(r8)
 8006d84:	44c00115 	stw	r19,4(r8)
 8006d88:	d8c12015 	stw	r3,1152(sp)
 8006d8c:	d8811f15 	stw	r2,1148(sp)
 8006d90:	90bff40e 	bge	r18,r2,8006d64 <__alt_data_end+0xfc006d64>
 8006d94:	b809883a 	mov	r4,r23
 8006d98:	b00b883a 	mov	r5,r22
 8006d9c:	d9811e04 	addi	r6,sp,1144
 8006da0:	800e6940 	call	800e694 <__sprint_r>
 8006da4:	103f691e 	bne	r2,zero,8006b4c <__alt_data_end+0xfc006b4c>
 8006da8:	ad7ffc04 	addi	r21,r21,-16
 8006dac:	d8c12017 	ldw	r3,1152(sp)
 8006db0:	d8811f17 	ldw	r2,1148(sp)
 8006db4:	da000404 	addi	r8,sp,16
 8006db8:	9d7fed16 	blt	r19,r21,8006d70 <__alt_data_end+0xfc006d70>
 8006dbc:	d9413617 	ldw	r5,1240(sp)
 8006dc0:	a8c7883a 	add	r3,r21,r3
 8006dc4:	10800044 	addi	r2,r2,1
 8006dc8:	41400015 	stw	r5,0(r8)
 8006dcc:	45400115 	stw	r21,4(r8)
 8006dd0:	d8c12015 	stw	r3,1152(sp)
 8006dd4:	d8811f15 	stw	r2,1148(sp)
 8006dd8:	010001c4 	movi	r4,7
 8006ddc:	20832b16 	blt	r4,r2,8007a8c <___vfprintf_internal_r+0x13a0>
 8006de0:	d8812787 	ldb	r2,1182(sp)
 8006de4:	42000204 	addi	r8,r8,8
 8006de8:	10000c26 	beq	r2,zero,8006e1c <___vfprintf_internal_r+0x730>
 8006dec:	d8811f17 	ldw	r2,1148(sp)
 8006df0:	d9012784 	addi	r4,sp,1182
 8006df4:	18c00044 	addi	r3,r3,1
 8006df8:	10800044 	addi	r2,r2,1
 8006dfc:	41000015 	stw	r4,0(r8)
 8006e00:	01000044 	movi	r4,1
 8006e04:	41000115 	stw	r4,4(r8)
 8006e08:	d8c12015 	stw	r3,1152(sp)
 8006e0c:	d8811f15 	stw	r2,1148(sp)
 8006e10:	010001c4 	movi	r4,7
 8006e14:	2082c416 	blt	r4,r2,8007928 <___vfprintf_internal_r+0x123c>
 8006e18:	42000204 	addi	r8,r8,8
 8006e1c:	d8812c17 	ldw	r2,1200(sp)
 8006e20:	10000c26 	beq	r2,zero,8006e54 <___vfprintf_internal_r+0x768>
 8006e24:	d8811f17 	ldw	r2,1148(sp)
 8006e28:	d9012704 	addi	r4,sp,1180
 8006e2c:	18c00084 	addi	r3,r3,2
 8006e30:	10800044 	addi	r2,r2,1
 8006e34:	41000015 	stw	r4,0(r8)
 8006e38:	01000084 	movi	r4,2
 8006e3c:	41000115 	stw	r4,4(r8)
 8006e40:	d8c12015 	stw	r3,1152(sp)
 8006e44:	d8811f15 	stw	r2,1148(sp)
 8006e48:	010001c4 	movi	r4,7
 8006e4c:	2082be16 	blt	r4,r2,8007948 <___vfprintf_internal_r+0x125c>
 8006e50:	42000204 	addi	r8,r8,8
 8006e54:	d9013017 	ldw	r4,1216(sp)
 8006e58:	00802004 	movi	r2,128
 8006e5c:	20822026 	beq	r4,r2,80076e0 <___vfprintf_internal_r+0xff4>
 8006e60:	d9413217 	ldw	r5,1224(sp)
 8006e64:	2c67c83a 	sub	r19,r5,r17
 8006e68:	04c0260e 	bge	zero,r19,8006f04 <___vfprintf_internal_r+0x818>
 8006e6c:	05400404 	movi	r21,16
 8006e70:	d8811f17 	ldw	r2,1148(sp)
 8006e74:	acc4720e 	bge	r21,r19,8008040 <___vfprintf_internal_r+0x1954>
 8006e78:	01420074 	movhi	r5,2049
 8006e7c:	295e7084 	addi	r5,r5,31170
 8006e80:	d9412c15 	stw	r5,1200(sp)
 8006e84:	048001c4 	movi	r18,7
 8006e88:	00000306 	br	8006e98 <___vfprintf_internal_r+0x7ac>
 8006e8c:	9cfffc04 	addi	r19,r19,-16
 8006e90:	42000204 	addi	r8,r8,8
 8006e94:	acc0110e 	bge	r21,r19,8006edc <___vfprintf_internal_r+0x7f0>
 8006e98:	18c00404 	addi	r3,r3,16
 8006e9c:	10800044 	addi	r2,r2,1
 8006ea0:	45000015 	stw	r20,0(r8)
 8006ea4:	45400115 	stw	r21,4(r8)
 8006ea8:	d8c12015 	stw	r3,1152(sp)
 8006eac:	d8811f15 	stw	r2,1148(sp)
 8006eb0:	90bff60e 	bge	r18,r2,8006e8c <__alt_data_end+0xfc006e8c>
 8006eb4:	b809883a 	mov	r4,r23
 8006eb8:	b00b883a 	mov	r5,r22
 8006ebc:	d9811e04 	addi	r6,sp,1144
 8006ec0:	800e6940 	call	800e694 <__sprint_r>
 8006ec4:	103f211e 	bne	r2,zero,8006b4c <__alt_data_end+0xfc006b4c>
 8006ec8:	9cfffc04 	addi	r19,r19,-16
 8006ecc:	d8c12017 	ldw	r3,1152(sp)
 8006ed0:	d8811f17 	ldw	r2,1148(sp)
 8006ed4:	da000404 	addi	r8,sp,16
 8006ed8:	acffef16 	blt	r21,r19,8006e98 <__alt_data_end+0xfc006e98>
 8006edc:	d9012c17 	ldw	r4,1200(sp)
 8006ee0:	1cc7883a 	add	r3,r3,r19
 8006ee4:	10800044 	addi	r2,r2,1
 8006ee8:	41000015 	stw	r4,0(r8)
 8006eec:	44c00115 	stw	r19,4(r8)
 8006ef0:	d8c12015 	stw	r3,1152(sp)
 8006ef4:	d8811f15 	stw	r2,1148(sp)
 8006ef8:	010001c4 	movi	r4,7
 8006efc:	20828216 	blt	r4,r2,8007908 <___vfprintf_internal_r+0x121c>
 8006f00:	42000204 	addi	r8,r8,8
 8006f04:	e080400c 	andi	r2,fp,256
 8006f08:	1001ac1e 	bne	r2,zero,80075bc <___vfprintf_internal_r+0xed0>
 8006f0c:	d8811f17 	ldw	r2,1148(sp)
 8006f10:	d9413117 	ldw	r5,1220(sp)
 8006f14:	1c47883a 	add	r3,r3,r17
 8006f18:	10800044 	addi	r2,r2,1
 8006f1c:	41400015 	stw	r5,0(r8)
 8006f20:	44400115 	stw	r17,4(r8)
 8006f24:	d8c12015 	stw	r3,1152(sp)
 8006f28:	d8811f15 	stw	r2,1148(sp)
 8006f2c:	010001c4 	movi	r4,7
 8006f30:	20825d16 	blt	r4,r2,80078a8 <___vfprintf_internal_r+0x11bc>
 8006f34:	42000204 	addi	r8,r8,8
 8006f38:	e080010c 	andi	r2,fp,4
 8006f3c:	10003126 	beq	r2,zero,8007004 <___vfprintf_internal_r+0x918>
 8006f40:	d8812e17 	ldw	r2,1208(sp)
 8006f44:	d9012b17 	ldw	r4,1196(sp)
 8006f48:	1121c83a 	sub	r16,r2,r4
 8006f4c:	04002d0e 	bge	zero,r16,8007004 <___vfprintf_internal_r+0x918>
 8006f50:	04400404 	movi	r17,16
 8006f54:	d8811f17 	ldw	r2,1148(sp)
 8006f58:	8c05340e 	bge	r17,r16,800842c <___vfprintf_internal_r+0x1d40>
 8006f5c:	01020074 	movhi	r4,2049
 8006f60:	211e7484 	addi	r4,r4,31186
 8006f64:	d9013615 	stw	r4,1240(sp)
 8006f68:	048001c4 	movi	r18,7
 8006f6c:	00000306 	br	8006f7c <___vfprintf_internal_r+0x890>
 8006f70:	843ffc04 	addi	r16,r16,-16
 8006f74:	42000204 	addi	r8,r8,8
 8006f78:	8c00130e 	bge	r17,r16,8006fc8 <___vfprintf_internal_r+0x8dc>
 8006f7c:	01420074 	movhi	r5,2049
 8006f80:	18c00404 	addi	r3,r3,16
 8006f84:	10800044 	addi	r2,r2,1
 8006f88:	295e7484 	addi	r5,r5,31186
 8006f8c:	41400015 	stw	r5,0(r8)
 8006f90:	44400115 	stw	r17,4(r8)
 8006f94:	d8c12015 	stw	r3,1152(sp)
 8006f98:	d8811f15 	stw	r2,1148(sp)
 8006f9c:	90bff40e 	bge	r18,r2,8006f70 <__alt_data_end+0xfc006f70>
 8006fa0:	b809883a 	mov	r4,r23
 8006fa4:	b00b883a 	mov	r5,r22
 8006fa8:	d9811e04 	addi	r6,sp,1144
 8006fac:	800e6940 	call	800e694 <__sprint_r>
 8006fb0:	103ee61e 	bne	r2,zero,8006b4c <__alt_data_end+0xfc006b4c>
 8006fb4:	843ffc04 	addi	r16,r16,-16
 8006fb8:	d8c12017 	ldw	r3,1152(sp)
 8006fbc:	d8811f17 	ldw	r2,1148(sp)
 8006fc0:	da000404 	addi	r8,sp,16
 8006fc4:	8c3fed16 	blt	r17,r16,8006f7c <__alt_data_end+0xfc006f7c>
 8006fc8:	d9013617 	ldw	r4,1240(sp)
 8006fcc:	1c07883a 	add	r3,r3,r16
 8006fd0:	10800044 	addi	r2,r2,1
 8006fd4:	41000015 	stw	r4,0(r8)
 8006fd8:	44000115 	stw	r16,4(r8)
 8006fdc:	d8c12015 	stw	r3,1152(sp)
 8006fe0:	d8811f15 	stw	r2,1148(sp)
 8006fe4:	010001c4 	movi	r4,7
 8006fe8:	2080060e 	bge	r4,r2,8007004 <___vfprintf_internal_r+0x918>
 8006fec:	b809883a 	mov	r4,r23
 8006ff0:	b00b883a 	mov	r5,r22
 8006ff4:	d9811e04 	addi	r6,sp,1144
 8006ff8:	800e6940 	call	800e694 <__sprint_r>
 8006ffc:	103ed31e 	bne	r2,zero,8006b4c <__alt_data_end+0xfc006b4c>
 8007000:	d8c12017 	ldw	r3,1152(sp)
 8007004:	df012b17 	ldw	fp,1196(sp)
 8007008:	d9412e17 	ldw	r5,1208(sp)
 800700c:	e140010e 	bge	fp,r5,8007014 <___vfprintf_internal_r+0x928>
 8007010:	2839883a 	mov	fp,r5
 8007014:	d8812f17 	ldw	r2,1212(sp)
 8007018:	1705883a 	add	r2,r2,fp
 800701c:	d8812f15 	stw	r2,1212(sp)
 8007020:	1802291e 	bne	r3,zero,80078c8 <___vfprintf_internal_r+0x11dc>
 8007024:	d8c12a17 	ldw	r3,1192(sp)
 8007028:	d8011f15 	stw	zero,1148(sp)
 800702c:	da000404 	addi	r8,sp,16
 8007030:	18800007 	ldb	r2,0(r3)
 8007034:	103ded1e 	bne	r2,zero,80067ec <__alt_data_end+0xfc0067ec>
 8007038:	dc012a17 	ldw	r16,1192(sp)
 800703c:	003e0506 	br	8006854 <__alt_data_end+0xfc006854>
 8007040:	d9012d17 	ldw	r4,1204(sp)
 8007044:	d9412d17 	ldw	r5,1204(sp)
 8007048:	da012a17 	ldw	r8,1192(sp)
 800704c:	21000017 	ldw	r4,0(r4)
 8007050:	29400117 	ldw	r5,4(r5)
 8007054:	df012a15 	stw	fp,1192(sp)
 8007058:	9839883a 	mov	fp,r19
 800705c:	dcc12b03 	ldbu	r19,1196(sp)
 8007060:	d9013715 	stw	r4,1244(sp)
 8007064:	d9413915 	stw	r5,1252(sp)
 8007068:	da013f15 	stw	r8,1276(sp)
 800706c:	da413e15 	stw	r9,1272(sp)
 8007070:	dcc12785 	stb	r19,1182(sp)
 8007074:	800d0500 	call	800d050 <__fpclassifyd>
 8007078:	d8c12d17 	ldw	r3,1204(sp)
 800707c:	04400044 	movi	r17,1
 8007080:	da013f17 	ldw	r8,1276(sp)
 8007084:	1c800204 	addi	r18,r3,8
 8007088:	da413e17 	ldw	r9,1272(sp)
 800708c:	d9013717 	ldw	r4,1244(sp)
 8007090:	d9413917 	ldw	r5,1252(sp)
 8007094:	1443451e 	bne	r2,r17,8007dac <___vfprintf_internal_r+0x16c0>
 8007098:	000d883a 	mov	r6,zero
 800709c:	000f883a 	mov	r7,zero
 80070a0:	80125480 	call	8012548 <__ledf2>
 80070a4:	da013f17 	ldw	r8,1276(sp)
 80070a8:	1004fe16 	blt	r2,zero,80084a4 <___vfprintf_internal_r+0x1db8>
 80070ac:	dcc12783 	ldbu	r19,1182(sp)
 80070b0:	008011c4 	movi	r2,71
 80070b4:	14045d0e 	bge	r2,r16,800822c <___vfprintf_internal_r+0x1b40>
 80070b8:	01420074 	movhi	r5,2049
 80070bc:	295e5904 	addi	r5,r5,31076
 80070c0:	d9413115 	stw	r5,1220(sp)
 80070c4:	00c000c4 	movi	r3,3
 80070c8:	00bfdfc4 	movi	r2,-129
 80070cc:	d8c12b15 	stw	r3,1196(sp)
 80070d0:	e0b8703a 	and	fp,fp,r2
 80070d4:	dc812d15 	stw	r18,1204(sp)
 80070d8:	1823883a 	mov	r17,r3
 80070dc:	d8013215 	stw	zero,1224(sp)
 80070e0:	d8013415 	stw	zero,1232(sp)
 80070e4:	003f0106 	br	8006cec <__alt_data_end+0xfc006cec>
 80070e8:	9cc00214 	ori	r19,r19,8
 80070ec:	e005883a 	mov	r2,fp
 80070f0:	e4000007 	ldb	r16,0(fp)
 80070f4:	003de506 	br	800688c <__alt_data_end+0xfc00688c>
 80070f8:	da012a17 	ldw	r8,1192(sp)
 80070fc:	df012a15 	stw	fp,1192(sp)
 8007100:	9f000414 	ori	fp,r19,16
 8007104:	e0c0080c 	andi	r3,fp,32
 8007108:	d8812d17 	ldw	r2,1204(sp)
 800710c:	18007626 	beq	r3,zero,80072e8 <___vfprintf_internal_r+0xbfc>
 8007110:	d9412d17 	ldw	r5,1204(sp)
 8007114:	14800017 	ldw	r18,0(r2)
 8007118:	15400117 	ldw	r21,4(r2)
 800711c:	29400204 	addi	r5,r5,8
 8007120:	d9412d15 	stw	r5,1204(sp)
 8007124:	0005883a 	mov	r2,zero
 8007128:	9546b03a 	or	r3,r18,r21
 800712c:	d8012785 	stb	zero,1182(sp)
 8007130:	da413215 	stw	r9,1224(sp)
 8007134:	0027883a 	mov	r19,zero
 8007138:	003ecd06 	br	8006c70 <__alt_data_end+0xfc006c70>
 800713c:	da012a17 	ldw	r8,1192(sp)
 8007140:	df012a15 	stw	fp,1192(sp)
 8007144:	9f000414 	ori	fp,r19,16
 8007148:	e0c0080c 	andi	r3,fp,32
 800714c:	d8812d17 	ldw	r2,1204(sp)
 8007150:	18002c26 	beq	r3,zero,8007204 <___vfprintf_internal_r+0xb18>
 8007154:	d9012d17 	ldw	r4,1204(sp)
 8007158:	14800017 	ldw	r18,0(r2)
 800715c:	15400117 	ldw	r21,4(r2)
 8007160:	21000204 	addi	r4,r4,8
 8007164:	d9012d15 	stw	r4,1204(sp)
 8007168:	00800044 	movi	r2,1
 800716c:	9546b03a 	or	r3,r18,r21
 8007170:	003fee06 	br	800712c <__alt_data_end+0xfc00712c>
 8007174:	da012a17 	ldw	r8,1192(sp)
 8007178:	df012a15 	stw	fp,1192(sp)
 800717c:	9839883a 	mov	fp,r19
 8007180:	dcc12b03 	ldbu	r19,1196(sp)
 8007184:	01420074 	movhi	r5,2049
 8007188:	295e5c04 	addi	r5,r5,31088
 800718c:	dcc12785 	stb	r19,1182(sp)
 8007190:	d9413b15 	stw	r5,1260(sp)
 8007194:	e0c0080c 	andi	r3,fp,32
 8007198:	d8812d17 	ldw	r2,1204(sp)
 800719c:	18002e26 	beq	r3,zero,8007258 <___vfprintf_internal_r+0xb6c>
 80071a0:	d9412d17 	ldw	r5,1204(sp)
 80071a4:	14800017 	ldw	r18,0(r2)
 80071a8:	15400117 	ldw	r21,4(r2)
 80071ac:	29400204 	addi	r5,r5,8
 80071b0:	d9412d15 	stw	r5,1204(sp)
 80071b4:	e080004c 	andi	r2,fp,1
 80071b8:	10025c26 	beq	r2,zero,8007b2c <___vfprintf_internal_r+0x1440>
 80071bc:	9546b03a 	or	r3,r18,r21
 80071c0:	18038f26 	beq	r3,zero,8008000 <___vfprintf_internal_r+0x1914>
 80071c4:	00800c04 	movi	r2,48
 80071c8:	d8812705 	stb	r2,1180(sp)
 80071cc:	dc012745 	stb	r16,1181(sp)
 80071d0:	e7000094 	ori	fp,fp,2
 80071d4:	00800084 	movi	r2,2
 80071d8:	003fd406 	br	800712c <__alt_data_end+0xfc00712c>
 80071dc:	9cc00814 	ori	r19,r19,32
 80071e0:	e005883a 	mov	r2,fp
 80071e4:	e4000007 	ldb	r16,0(fp)
 80071e8:	003da806 	br	800688c <__alt_data_end+0xfc00688c>
 80071ec:	da012a17 	ldw	r8,1192(sp)
 80071f0:	df012a15 	stw	fp,1192(sp)
 80071f4:	9839883a 	mov	fp,r19
 80071f8:	e0c0080c 	andi	r3,fp,32
 80071fc:	d8812d17 	ldw	r2,1204(sp)
 8007200:	183fd41e 	bne	r3,zero,8007154 <__alt_data_end+0xfc007154>
 8007204:	e0c0040c 	andi	r3,fp,16
 8007208:	18035f26 	beq	r3,zero,8007f88 <___vfprintf_internal_r+0x189c>
 800720c:	d9412d17 	ldw	r5,1204(sp)
 8007210:	14800017 	ldw	r18,0(r2)
 8007214:	002b883a 	mov	r21,zero
 8007218:	29400104 	addi	r5,r5,4
 800721c:	d9412d15 	stw	r5,1204(sp)
 8007220:	00800044 	movi	r2,1
 8007224:	9007883a 	mov	r3,r18
 8007228:	003fc006 	br	800712c <__alt_data_end+0xfc00712c>
 800722c:	da012a17 	ldw	r8,1192(sp)
 8007230:	df012a15 	stw	fp,1192(sp)
 8007234:	9839883a 	mov	fp,r19
 8007238:	dcc12b03 	ldbu	r19,1196(sp)
 800723c:	01020074 	movhi	r4,2049
 8007240:	211e6104 	addi	r4,r4,31108
 8007244:	d9013b15 	stw	r4,1260(sp)
 8007248:	dcc12785 	stb	r19,1182(sp)
 800724c:	e0c0080c 	andi	r3,fp,32
 8007250:	d8812d17 	ldw	r2,1204(sp)
 8007254:	183fd21e 	bne	r3,zero,80071a0 <__alt_data_end+0xfc0071a0>
 8007258:	e0c0040c 	andi	r3,fp,16
 800725c:	18035426 	beq	r3,zero,8007fb0 <___vfprintf_internal_r+0x18c4>
 8007260:	d8c12d17 	ldw	r3,1204(sp)
 8007264:	14800017 	ldw	r18,0(r2)
 8007268:	002b883a 	mov	r21,zero
 800726c:	18c00104 	addi	r3,r3,4
 8007270:	d8c12d15 	stw	r3,1204(sp)
 8007274:	003fcf06 	br	80071b4 <__alt_data_end+0xfc0071b4>
 8007278:	e4000007 	ldb	r16,0(fp)
 800727c:	00801b04 	movi	r2,108
 8007280:	8083f726 	beq	r16,r2,8008260 <___vfprintf_internal_r+0x1b74>
 8007284:	9cc00414 	ori	r19,r19,16
 8007288:	e005883a 	mov	r2,fp
 800728c:	003d7f06 	br	800688c <__alt_data_end+0xfc00688c>
 8007290:	da012a17 	ldw	r8,1192(sp)
 8007294:	df012a15 	stw	fp,1192(sp)
 8007298:	9839883a 	mov	fp,r19
 800729c:	dcc12b03 	ldbu	r19,1196(sp)
 80072a0:	e080080c 	andi	r2,fp,32
 80072a4:	dcc12785 	stb	r19,1182(sp)
 80072a8:	10032226 	beq	r2,zero,8007f34 <___vfprintf_internal_r+0x1848>
 80072ac:	d9412d17 	ldw	r5,1204(sp)
 80072b0:	d9012f17 	ldw	r4,1212(sp)
 80072b4:	28800017 	ldw	r2,0(r5)
 80072b8:	2007d7fa 	srai	r3,r4,31
 80072bc:	29400104 	addi	r5,r5,4
 80072c0:	d9412d15 	stw	r5,1204(sp)
 80072c4:	11000015 	stw	r4,0(r2)
 80072c8:	10c00115 	stw	r3,4(r2)
 80072cc:	003d4406 	br	80067e0 <__alt_data_end+0xfc0067e0>
 80072d0:	da012a17 	ldw	r8,1192(sp)
 80072d4:	df012a15 	stw	fp,1192(sp)
 80072d8:	9839883a 	mov	fp,r19
 80072dc:	e0c0080c 	andi	r3,fp,32
 80072e0:	d8812d17 	ldw	r2,1204(sp)
 80072e4:	183f8a1e 	bne	r3,zero,8007110 <__alt_data_end+0xfc007110>
 80072e8:	e0c0040c 	andi	r3,fp,16
 80072ec:	18031c26 	beq	r3,zero,8007f60 <___vfprintf_internal_r+0x1874>
 80072f0:	14800017 	ldw	r18,0(r2)
 80072f4:	d8812d17 	ldw	r2,1204(sp)
 80072f8:	002b883a 	mov	r21,zero
 80072fc:	9007883a 	mov	r3,r18
 8007300:	10800104 	addi	r2,r2,4
 8007304:	d8812d15 	stw	r2,1204(sp)
 8007308:	0005883a 	mov	r2,zero
 800730c:	003f8706 	br	800712c <__alt_data_end+0xfc00712c>
 8007310:	d9412d17 	ldw	r5,1204(sp)
 8007314:	00800c04 	movi	r2,48
 8007318:	d8812705 	stb	r2,1180(sp)
 800731c:	2c800017 	ldw	r18,0(r5)
 8007320:	00801e04 	movi	r2,120
 8007324:	d8812745 	stb	r2,1181(sp)
 8007328:	00820074 	movhi	r2,2049
 800732c:	109e6104 	addi	r2,r2,31108
 8007330:	29400104 	addi	r5,r5,4
 8007334:	da012a17 	ldw	r8,1192(sp)
 8007338:	d8813b15 	stw	r2,1260(sp)
 800733c:	df012a15 	stw	fp,1192(sp)
 8007340:	002b883a 	mov	r21,zero
 8007344:	9f000094 	ori	fp,r19,2
 8007348:	d9412d15 	stw	r5,1204(sp)
 800734c:	00800084 	movi	r2,2
 8007350:	04001e04 	movi	r16,120
 8007354:	9007883a 	mov	r3,r18
 8007358:	003f7406 	br	800712c <__alt_data_end+0xfc00712c>
 800735c:	da012a17 	ldw	r8,1192(sp)
 8007360:	df012a15 	stw	fp,1192(sp)
 8007364:	9839883a 	mov	fp,r19
 8007368:	dcc12b03 	ldbu	r19,1196(sp)
 800736c:	e080080c 	andi	r2,fp,32
 8007370:	d8c12d17 	ldw	r3,1204(sp)
 8007374:	dcc12785 	stb	r19,1182(sp)
 8007378:	103e321e 	bne	r2,zero,8006c44 <__alt_data_end+0xfc006c44>
 800737c:	e080040c 	andi	r2,fp,16
 8007380:	10031326 	beq	r2,zero,8007fd0 <___vfprintf_internal_r+0x18e4>
 8007384:	1c800017 	ldw	r18,0(r3)
 8007388:	d9412d17 	ldw	r5,1204(sp)
 800738c:	902bd7fa 	srai	r21,r18,31
 8007390:	29400104 	addi	r5,r5,4
 8007394:	d9412d15 	stw	r5,1204(sp)
 8007398:	a805883a 	mov	r2,r21
 800739c:	003e2f06 	br	8006c5c <__alt_data_end+0xfc006c5c>
 80073a0:	9cc01014 	ori	r19,r19,64
 80073a4:	e005883a 	mov	r2,fp
 80073a8:	e4000007 	ldb	r16,0(fp)
 80073ac:	003d3706 	br	800688c <__alt_data_end+0xfc00688c>
 80073b0:	d8c12d17 	ldw	r3,1204(sp)
 80073b4:	d9012d17 	ldw	r4,1204(sp)
 80073b8:	da012a17 	ldw	r8,1192(sp)
 80073bc:	18800017 	ldw	r2,0(r3)
 80073c0:	21000104 	addi	r4,r4,4
 80073c4:	00c00044 	movi	r3,1
 80073c8:	df012a15 	stw	fp,1192(sp)
 80073cc:	d8c12b15 	stw	r3,1196(sp)
 80073d0:	9839883a 	mov	fp,r19
 80073d4:	d8012785 	stb	zero,1182(sp)
 80073d8:	d8810405 	stb	r2,1040(sp)
 80073dc:	d9012d15 	stw	r4,1204(sp)
 80073e0:	1823883a 	mov	r17,r3
 80073e4:	d8c10404 	addi	r3,sp,1040
 80073e8:	d8013215 	stw	zero,1224(sp)
 80073ec:	d8013415 	stw	zero,1232(sp)
 80073f0:	d8c13115 	stw	r3,1220(sp)
 80073f4:	0005883a 	mov	r2,zero
 80073f8:	003e4306 	br	8006d08 <__alt_data_end+0xfc006d08>
 80073fc:	d8812b07 	ldb	r2,1196(sp)
 8007400:	1002fc1e 	bne	r2,zero,8007ff4 <___vfprintf_internal_r+0x1908>
 8007404:	00c00804 	movi	r3,32
 8007408:	d8c12b05 	stb	r3,1196(sp)
 800740c:	e005883a 	mov	r2,fp
 8007410:	e4000007 	ldb	r16,0(fp)
 8007414:	003d1d06 	br	800688c <__alt_data_end+0xfc00688c>
 8007418:	9cc00054 	ori	r19,r19,1
 800741c:	e005883a 	mov	r2,fp
 8007420:	e4000007 	ldb	r16,0(fp)
 8007424:	003d1906 	br	800688c <__alt_data_end+0xfc00688c>
 8007428:	d9012d17 	ldw	r4,1204(sp)
 800742c:	d9412d17 	ldw	r5,1204(sp)
 8007430:	21000017 	ldw	r4,0(r4)
 8007434:	28c00104 	addi	r3,r5,4
 8007438:	d9012e15 	stw	r4,1208(sp)
 800743c:	20038c16 	blt	r4,zero,8008270 <___vfprintf_internal_r+0x1b84>
 8007440:	d8c12d15 	stw	r3,1204(sp)
 8007444:	e005883a 	mov	r2,fp
 8007448:	e4000007 	ldb	r16,0(fp)
 800744c:	003d0f06 	br	800688c <__alt_data_end+0xfc00688c>
 8007450:	00c00ac4 	movi	r3,43
 8007454:	d8c12b05 	stb	r3,1196(sp)
 8007458:	e005883a 	mov	r2,fp
 800745c:	e4000007 	ldb	r16,0(fp)
 8007460:	003d0a06 	br	800688c <__alt_data_end+0xfc00688c>
 8007464:	d8c12d17 	ldw	r3,1204(sp)
 8007468:	d9012d17 	ldw	r4,1204(sp)
 800746c:	da012a17 	ldw	r8,1192(sp)
 8007470:	18c00017 	ldw	r3,0(r3)
 8007474:	df012a15 	stw	fp,1192(sp)
 8007478:	d8012785 	stb	zero,1182(sp)
 800747c:	d8c13115 	stw	r3,1220(sp)
 8007480:	9839883a 	mov	fp,r19
 8007484:	24800104 	addi	r18,r4,4
 8007488:	1803f726 	beq	r3,zero,8008468 <___vfprintf_internal_r+0x1d7c>
 800748c:	d9013117 	ldw	r4,1220(sp)
 8007490:	48038916 	blt	r9,zero,80082b8 <___vfprintf_internal_r+0x1bcc>
 8007494:	480d883a 	mov	r6,r9
 8007498:	000b883a 	mov	r5,zero
 800749c:	da013f15 	stw	r8,1276(sp)
 80074a0:	da413e15 	stw	r9,1272(sp)
 80074a4:	800b6ec0 	call	800b6ec <memchr>
 80074a8:	da013f17 	ldw	r8,1276(sp)
 80074ac:	da413e17 	ldw	r9,1272(sp)
 80074b0:	10045926 	beq	r2,zero,8008618 <___vfprintf_internal_r+0x1f2c>
 80074b4:	d8c13117 	ldw	r3,1220(sp)
 80074b8:	10e3c83a 	sub	r17,r2,r3
 80074bc:	4c433516 	blt	r9,r17,8008194 <___vfprintf_internal_r+0x1aa8>
 80074c0:	8805883a 	mov	r2,r17
 80074c4:	88038116 	blt	r17,zero,80082cc <___vfprintf_internal_r+0x1be0>
 80074c8:	dcc12783 	ldbu	r19,1182(sp)
 80074cc:	d8812b15 	stw	r2,1196(sp)
 80074d0:	dc812d15 	stw	r18,1204(sp)
 80074d4:	d8013215 	stw	zero,1224(sp)
 80074d8:	d8013415 	stw	zero,1232(sp)
 80074dc:	003e0306 	br	8006cec <__alt_data_end+0xfc006cec>
 80074e0:	da012a17 	ldw	r8,1192(sp)
 80074e4:	df012a15 	stw	fp,1192(sp)
 80074e8:	9839883a 	mov	fp,r19
 80074ec:	dcc12b03 	ldbu	r19,1196(sp)
 80074f0:	dcc12785 	stb	r19,1182(sp)
 80074f4:	803d8f26 	beq	r16,zero,8006b34 <__alt_data_end+0xfc006b34>
 80074f8:	00c00044 	movi	r3,1
 80074fc:	d8c12b15 	stw	r3,1196(sp)
 8007500:	dc010405 	stb	r16,1040(sp)
 8007504:	d8012785 	stb	zero,1182(sp)
 8007508:	003fb506 	br	80073e0 <__alt_data_end+0xfc0073e0>
 800750c:	d8c12017 	ldw	r3,1152(sp)
 8007510:	003e3506 	br	8006de8 <__alt_data_end+0xfc006de8>
 8007514:	10803fcc 	andi	r2,r2,255
 8007518:	00c00044 	movi	r3,1
 800751c:	10fddc1e 	bne	r2,r3,8006c90 <__alt_data_end+0xfc006c90>
 8007520:	a800021e 	bne	r21,zero,800752c <___vfprintf_internal_r+0xe40>
 8007524:	00800244 	movi	r2,9
 8007528:	14801e2e 	bgeu	r2,r18,80075a4 <___vfprintf_internal_r+0xeb8>
 800752c:	dc012b15 	stw	r16,1196(sp)
 8007530:	dc410e04 	addi	r17,sp,1080
 8007534:	9021883a 	mov	r16,r18
 8007538:	da012c15 	stw	r8,1200(sp)
 800753c:	a825883a 	mov	r18,r21
 8007540:	482b883a 	mov	r21,r9
 8007544:	8009883a 	mov	r4,r16
 8007548:	900b883a 	mov	r5,r18
 800754c:	01800284 	movi	r6,10
 8007550:	000f883a 	mov	r7,zero
 8007554:	8010a800 	call	8010a80 <__umoddi3>
 8007558:	10800c04 	addi	r2,r2,48
 800755c:	8c7fffc4 	addi	r17,r17,-1
 8007560:	8009883a 	mov	r4,r16
 8007564:	900b883a 	mov	r5,r18
 8007568:	01800284 	movi	r6,10
 800756c:	000f883a 	mov	r7,zero
 8007570:	88800005 	stb	r2,0(r17)
 8007574:	80104400 	call	8010440 <__udivdi3>
 8007578:	1021883a 	mov	r16,r2
 800757c:	10c4b03a 	or	r2,r2,r3
 8007580:	1825883a 	mov	r18,r3
 8007584:	103fef1e 	bne	r2,zero,8007544 <__alt_data_end+0xfc007544>
 8007588:	d9012817 	ldw	r4,1184(sp)
 800758c:	dc413115 	stw	r17,1220(sp)
 8007590:	dc012b17 	ldw	r16,1196(sp)
 8007594:	da012c17 	ldw	r8,1200(sp)
 8007598:	a813883a 	mov	r9,r21
 800759c:	2463c83a 	sub	r17,r4,r17
 80075a0:	003dcd06 	br	8006cd8 <__alt_data_end+0xfc006cd8>
 80075a4:	94800c04 	addi	r18,r18,48
 80075a8:	d8c10dc4 	addi	r3,sp,1079
 80075ac:	dc810dc5 	stb	r18,1079(sp)
 80075b0:	dc413c17 	ldw	r17,1264(sp)
 80075b4:	d8c13115 	stw	r3,1220(sp)
 80075b8:	003dc706 	br	8006cd8 <__alt_data_end+0xfc006cd8>
 80075bc:	00801944 	movi	r2,101
 80075c0:	1400720e 	bge	r2,r16,800778c <___vfprintf_internal_r+0x10a0>
 80075c4:	d9013717 	ldw	r4,1244(sp)
 80075c8:	d9413917 	ldw	r5,1252(sp)
 80075cc:	000d883a 	mov	r6,zero
 80075d0:	000f883a 	mov	r7,zero
 80075d4:	d8c13d15 	stw	r3,1268(sp)
 80075d8:	da013f15 	stw	r8,1276(sp)
 80075dc:	80123e40 	call	80123e4 <__eqdf2>
 80075e0:	d8c13d17 	ldw	r3,1268(sp)
 80075e4:	da013f17 	ldw	r8,1276(sp)
 80075e8:	1000f41e 	bne	r2,zero,80079bc <___vfprintf_internal_r+0x12d0>
 80075ec:	d8811f17 	ldw	r2,1148(sp)
 80075f0:	01020074 	movhi	r4,2049
 80075f4:	211e6804 	addi	r4,r4,31136
 80075f8:	18c00044 	addi	r3,r3,1
 80075fc:	10800044 	addi	r2,r2,1
 8007600:	41000015 	stw	r4,0(r8)
 8007604:	01000044 	movi	r4,1
 8007608:	41000115 	stw	r4,4(r8)
 800760c:	d8c12015 	stw	r3,1152(sp)
 8007610:	d8811f15 	stw	r2,1148(sp)
 8007614:	010001c4 	movi	r4,7
 8007618:	20828d16 	blt	r4,r2,8008050 <___vfprintf_internal_r+0x1964>
 800761c:	42000204 	addi	r8,r8,8
 8007620:	d8812617 	ldw	r2,1176(sp)
 8007624:	d9413317 	ldw	r5,1228(sp)
 8007628:	11400216 	blt	r2,r5,8007634 <___vfprintf_internal_r+0xf48>
 800762c:	e080004c 	andi	r2,fp,1
 8007630:	103e4126 	beq	r2,zero,8006f38 <__alt_data_end+0xfc006f38>
 8007634:	d8813817 	ldw	r2,1248(sp)
 8007638:	d9013517 	ldw	r4,1236(sp)
 800763c:	d9413817 	ldw	r5,1248(sp)
 8007640:	1887883a 	add	r3,r3,r2
 8007644:	d8811f17 	ldw	r2,1148(sp)
 8007648:	41000015 	stw	r4,0(r8)
 800764c:	41400115 	stw	r5,4(r8)
 8007650:	10800044 	addi	r2,r2,1
 8007654:	d8c12015 	stw	r3,1152(sp)
 8007658:	d8811f15 	stw	r2,1148(sp)
 800765c:	010001c4 	movi	r4,7
 8007660:	20830916 	blt	r4,r2,8008288 <___vfprintf_internal_r+0x1b9c>
 8007664:	42000204 	addi	r8,r8,8
 8007668:	d8813317 	ldw	r2,1228(sp)
 800766c:	143fffc4 	addi	r16,r2,-1
 8007670:	043e310e 	bge	zero,r16,8006f38 <__alt_data_end+0xfc006f38>
 8007674:	04400404 	movi	r17,16
 8007678:	d8811f17 	ldw	r2,1148(sp)
 800767c:	8c007e0e 	bge	r17,r16,8007878 <___vfprintf_internal_r+0x118c>
 8007680:	01420074 	movhi	r5,2049
 8007684:	295e7084 	addi	r5,r5,31170
 8007688:	d9412c15 	stw	r5,1200(sp)
 800768c:	04c001c4 	movi	r19,7
 8007690:	00000306 	br	80076a0 <___vfprintf_internal_r+0xfb4>
 8007694:	42000204 	addi	r8,r8,8
 8007698:	843ffc04 	addi	r16,r16,-16
 800769c:	8c00790e 	bge	r17,r16,8007884 <___vfprintf_internal_r+0x1198>
 80076a0:	18c00404 	addi	r3,r3,16
 80076a4:	10800044 	addi	r2,r2,1
 80076a8:	45000015 	stw	r20,0(r8)
 80076ac:	44400115 	stw	r17,4(r8)
 80076b0:	d8c12015 	stw	r3,1152(sp)
 80076b4:	d8811f15 	stw	r2,1148(sp)
 80076b8:	98bff60e 	bge	r19,r2,8007694 <__alt_data_end+0xfc007694>
 80076bc:	b809883a 	mov	r4,r23
 80076c0:	b00b883a 	mov	r5,r22
 80076c4:	d9811e04 	addi	r6,sp,1144
 80076c8:	800e6940 	call	800e694 <__sprint_r>
 80076cc:	103d1f1e 	bne	r2,zero,8006b4c <__alt_data_end+0xfc006b4c>
 80076d0:	d8c12017 	ldw	r3,1152(sp)
 80076d4:	d8811f17 	ldw	r2,1148(sp)
 80076d8:	da000404 	addi	r8,sp,16
 80076dc:	003fee06 	br	8007698 <__alt_data_end+0xfc007698>
 80076e0:	d9412e17 	ldw	r5,1208(sp)
 80076e4:	d8812b17 	ldw	r2,1196(sp)
 80076e8:	28a7c83a 	sub	r19,r5,r2
 80076ec:	04fddc0e 	bge	zero,r19,8006e60 <__alt_data_end+0xfc006e60>
 80076f0:	05400404 	movi	r21,16
 80076f4:	d8811f17 	ldw	r2,1148(sp)
 80076f8:	acc3870e 	bge	r21,r19,8008518 <___vfprintf_internal_r+0x1e2c>
 80076fc:	01420074 	movhi	r5,2049
 8007700:	295e7084 	addi	r5,r5,31170
 8007704:	d9412c15 	stw	r5,1200(sp)
 8007708:	048001c4 	movi	r18,7
 800770c:	00000306 	br	800771c <___vfprintf_internal_r+0x1030>
 8007710:	9cfffc04 	addi	r19,r19,-16
 8007714:	42000204 	addi	r8,r8,8
 8007718:	acc0110e 	bge	r21,r19,8007760 <___vfprintf_internal_r+0x1074>
 800771c:	18c00404 	addi	r3,r3,16
 8007720:	10800044 	addi	r2,r2,1
 8007724:	45000015 	stw	r20,0(r8)
 8007728:	45400115 	stw	r21,4(r8)
 800772c:	d8c12015 	stw	r3,1152(sp)
 8007730:	d8811f15 	stw	r2,1148(sp)
 8007734:	90bff60e 	bge	r18,r2,8007710 <__alt_data_end+0xfc007710>
 8007738:	b809883a 	mov	r4,r23
 800773c:	b00b883a 	mov	r5,r22
 8007740:	d9811e04 	addi	r6,sp,1144
 8007744:	800e6940 	call	800e694 <__sprint_r>
 8007748:	103d001e 	bne	r2,zero,8006b4c <__alt_data_end+0xfc006b4c>
 800774c:	9cfffc04 	addi	r19,r19,-16
 8007750:	d8c12017 	ldw	r3,1152(sp)
 8007754:	d8811f17 	ldw	r2,1148(sp)
 8007758:	da000404 	addi	r8,sp,16
 800775c:	acffef16 	blt	r21,r19,800771c <__alt_data_end+0xfc00771c>
 8007760:	d9012c17 	ldw	r4,1200(sp)
 8007764:	1cc7883a 	add	r3,r3,r19
 8007768:	10800044 	addi	r2,r2,1
 800776c:	41000015 	stw	r4,0(r8)
 8007770:	44c00115 	stw	r19,4(r8)
 8007774:	d8c12015 	stw	r3,1152(sp)
 8007778:	d8811f15 	stw	r2,1148(sp)
 800777c:	010001c4 	movi	r4,7
 8007780:	20817816 	blt	r4,r2,8007d64 <___vfprintf_internal_r+0x1678>
 8007784:	42000204 	addi	r8,r8,8
 8007788:	003db506 	br	8006e60 <__alt_data_end+0xfc006e60>
 800778c:	d9413317 	ldw	r5,1228(sp)
 8007790:	00800044 	movi	r2,1
 8007794:	18c00044 	addi	r3,r3,1
 8007798:	11413e0e 	bge	r2,r5,8007c94 <___vfprintf_internal_r+0x15a8>
 800779c:	dc011f17 	ldw	r16,1148(sp)
 80077a0:	d8813117 	ldw	r2,1220(sp)
 80077a4:	d8c12015 	stw	r3,1152(sp)
 80077a8:	84000044 	addi	r16,r16,1
 80077ac:	40800015 	stw	r2,0(r8)
 80077b0:	00800044 	movi	r2,1
 80077b4:	40800115 	stw	r2,4(r8)
 80077b8:	dc011f15 	stw	r16,1148(sp)
 80077bc:	008001c4 	movi	r2,7
 80077c0:	14015616 	blt	r2,r16,8007d1c <___vfprintf_internal_r+0x1630>
 80077c4:	42000204 	addi	r8,r8,8
 80077c8:	d9013817 	ldw	r4,1248(sp)
 80077cc:	d9413517 	ldw	r5,1236(sp)
 80077d0:	84000044 	addi	r16,r16,1
 80077d4:	1907883a 	add	r3,r3,r4
 80077d8:	41400015 	stw	r5,0(r8)
 80077dc:	41000115 	stw	r4,4(r8)
 80077e0:	d8c12015 	stw	r3,1152(sp)
 80077e4:	dc011f15 	stw	r16,1148(sp)
 80077e8:	008001c4 	movi	r2,7
 80077ec:	14015416 	blt	r2,r16,8007d40 <___vfprintf_internal_r+0x1654>
 80077f0:	44400204 	addi	r17,r8,8
 80077f4:	d9013717 	ldw	r4,1244(sp)
 80077f8:	d9413917 	ldw	r5,1252(sp)
 80077fc:	000d883a 	mov	r6,zero
 8007800:	000f883a 	mov	r7,zero
 8007804:	d8c13d15 	stw	r3,1268(sp)
 8007808:	80123e40 	call	80123e4 <__eqdf2>
 800780c:	d8c13d17 	ldw	r3,1268(sp)
 8007810:	1000a726 	beq	r2,zero,8007ab0 <___vfprintf_internal_r+0x13c4>
 8007814:	d9013317 	ldw	r4,1228(sp)
 8007818:	d9413117 	ldw	r5,1220(sp)
 800781c:	84000044 	addi	r16,r16,1
 8007820:	20bfffc4 	addi	r2,r4,-1
 8007824:	1887883a 	add	r3,r3,r2
 8007828:	29000044 	addi	r4,r5,1
 800782c:	88800115 	stw	r2,4(r17)
 8007830:	89000015 	stw	r4,0(r17)
 8007834:	d8c12015 	stw	r3,1152(sp)
 8007838:	dc011f15 	stw	r16,1148(sp)
 800783c:	008001c4 	movi	r2,7
 8007840:	14012d16 	blt	r2,r16,8007cf8 <___vfprintf_internal_r+0x160c>
 8007844:	8c400204 	addi	r17,r17,8
 8007848:	d9413a17 	ldw	r5,1256(sp)
 800784c:	dcc122c4 	addi	r19,sp,1163
 8007850:	84000044 	addi	r16,r16,1
 8007854:	28c7883a 	add	r3,r5,r3
 8007858:	8cc00015 	stw	r19,0(r17)
 800785c:	89400115 	stw	r5,4(r17)
 8007860:	d8c12015 	stw	r3,1152(sp)
 8007864:	dc011f15 	stw	r16,1148(sp)
 8007868:	008001c4 	movi	r2,7
 800786c:	14000e16 	blt	r2,r16,80078a8 <___vfprintf_internal_r+0x11bc>
 8007870:	8a000204 	addi	r8,r17,8
 8007874:	003db006 	br	8006f38 <__alt_data_end+0xfc006f38>
 8007878:	01020074 	movhi	r4,2049
 800787c:	211e7084 	addi	r4,r4,31170
 8007880:	d9012c15 	stw	r4,1200(sp)
 8007884:	d9012c17 	ldw	r4,1200(sp)
 8007888:	1c07883a 	add	r3,r3,r16
 800788c:	44000115 	stw	r16,4(r8)
 8007890:	41000015 	stw	r4,0(r8)
 8007894:	10800044 	addi	r2,r2,1
 8007898:	d8c12015 	stw	r3,1152(sp)
 800789c:	d8811f15 	stw	r2,1148(sp)
 80078a0:	010001c4 	movi	r4,7
 80078a4:	20bda30e 	bge	r4,r2,8006f34 <__alt_data_end+0xfc006f34>
 80078a8:	b809883a 	mov	r4,r23
 80078ac:	b00b883a 	mov	r5,r22
 80078b0:	d9811e04 	addi	r6,sp,1144
 80078b4:	800e6940 	call	800e694 <__sprint_r>
 80078b8:	103ca41e 	bne	r2,zero,8006b4c <__alt_data_end+0xfc006b4c>
 80078bc:	d8c12017 	ldw	r3,1152(sp)
 80078c0:	da000404 	addi	r8,sp,16
 80078c4:	003d9c06 	br	8006f38 <__alt_data_end+0xfc006f38>
 80078c8:	b809883a 	mov	r4,r23
 80078cc:	b00b883a 	mov	r5,r22
 80078d0:	d9811e04 	addi	r6,sp,1144
 80078d4:	800e6940 	call	800e694 <__sprint_r>
 80078d8:	103dd226 	beq	r2,zero,8007024 <__alt_data_end+0xfc007024>
 80078dc:	003c9b06 	br	8006b4c <__alt_data_end+0xfc006b4c>
 80078e0:	10803fcc 	andi	r2,r2,255
 80078e4:	1000311e 	bne	r2,zero,80079ac <___vfprintf_internal_r+0x12c0>
 80078e8:	e080004c 	andi	r2,fp,1
 80078ec:	10002f26 	beq	r2,zero,80079ac <___vfprintf_internal_r+0x12c0>
 80078f0:	00800c04 	movi	r2,48
 80078f4:	d8c10dc4 	addi	r3,sp,1079
 80078f8:	d8810dc5 	stb	r2,1079(sp)
 80078fc:	dc413c17 	ldw	r17,1264(sp)
 8007900:	d8c13115 	stw	r3,1220(sp)
 8007904:	003cf406 	br	8006cd8 <__alt_data_end+0xfc006cd8>
 8007908:	b809883a 	mov	r4,r23
 800790c:	b00b883a 	mov	r5,r22
 8007910:	d9811e04 	addi	r6,sp,1144
 8007914:	800e6940 	call	800e694 <__sprint_r>
 8007918:	103c8c1e 	bne	r2,zero,8006b4c <__alt_data_end+0xfc006b4c>
 800791c:	d8c12017 	ldw	r3,1152(sp)
 8007920:	da000404 	addi	r8,sp,16
 8007924:	003d7706 	br	8006f04 <__alt_data_end+0xfc006f04>
 8007928:	b809883a 	mov	r4,r23
 800792c:	b00b883a 	mov	r5,r22
 8007930:	d9811e04 	addi	r6,sp,1144
 8007934:	800e6940 	call	800e694 <__sprint_r>
 8007938:	103c841e 	bne	r2,zero,8006b4c <__alt_data_end+0xfc006b4c>
 800793c:	d8c12017 	ldw	r3,1152(sp)
 8007940:	da000404 	addi	r8,sp,16
 8007944:	003d3506 	br	8006e1c <__alt_data_end+0xfc006e1c>
 8007948:	b809883a 	mov	r4,r23
 800794c:	b00b883a 	mov	r5,r22
 8007950:	d9811e04 	addi	r6,sp,1144
 8007954:	800e6940 	call	800e694 <__sprint_r>
 8007958:	103c7c1e 	bne	r2,zero,8006b4c <__alt_data_end+0xfc006b4c>
 800795c:	d8c12017 	ldw	r3,1152(sp)
 8007960:	da000404 	addi	r8,sp,16
 8007964:	003d3b06 	br	8006e54 <__alt_data_end+0xfc006e54>
 8007968:	d9413b17 	ldw	r5,1260(sp)
 800796c:	d8c10e04 	addi	r3,sp,1080
 8007970:	908003cc 	andi	r2,r18,15
 8007974:	a808973a 	slli	r4,r21,28
 8007978:	2885883a 	add	r2,r5,r2
 800797c:	9024d13a 	srli	r18,r18,4
 8007980:	10800003 	ldbu	r2,0(r2)
 8007984:	a82ad13a 	srli	r21,r21,4
 8007988:	18ffffc4 	addi	r3,r3,-1
 800798c:	24a4b03a 	or	r18,r4,r18
 8007990:	18800005 	stb	r2,0(r3)
 8007994:	9544b03a 	or	r2,r18,r21
 8007998:	103ff51e 	bne	r2,zero,8007970 <__alt_data_end+0xfc007970>
 800799c:	d9412817 	ldw	r5,1184(sp)
 80079a0:	d8c13115 	stw	r3,1220(sp)
 80079a4:	28e3c83a 	sub	r17,r5,r3
 80079a8:	003ccb06 	br	8006cd8 <__alt_data_end+0xfc006cd8>
 80079ac:	d8c10e04 	addi	r3,sp,1080
 80079b0:	0023883a 	mov	r17,zero
 80079b4:	d8c13115 	stw	r3,1220(sp)
 80079b8:	003cc706 	br	8006cd8 <__alt_data_end+0xfc006cd8>
 80079bc:	dc012617 	ldw	r16,1176(sp)
 80079c0:	0401ab0e 	bge	zero,r16,8008070 <___vfprintf_internal_r+0x1984>
 80079c4:	d8813317 	ldw	r2,1228(sp)
 80079c8:	d9413117 	ldw	r5,1220(sp)
 80079cc:	d9013417 	ldw	r4,1232(sp)
 80079d0:	1023883a 	mov	r17,r2
 80079d4:	28a1883a 	add	r16,r5,r2
 80079d8:	2080010e 	bge	r4,r2,80079e0 <___vfprintf_internal_r+0x12f4>
 80079dc:	2023883a 	mov	r17,r4
 80079e0:	04400b0e 	bge	zero,r17,8007a10 <___vfprintf_internal_r+0x1324>
 80079e4:	d8811f17 	ldw	r2,1148(sp)
 80079e8:	d9413117 	ldw	r5,1220(sp)
 80079ec:	1c47883a 	add	r3,r3,r17
 80079f0:	10800044 	addi	r2,r2,1
 80079f4:	41400015 	stw	r5,0(r8)
 80079f8:	44400115 	stw	r17,4(r8)
 80079fc:	d8c12015 	stw	r3,1152(sp)
 8007a00:	d8811f15 	stw	r2,1148(sp)
 8007a04:	010001c4 	movi	r4,7
 8007a08:	20826716 	blt	r4,r2,80083a8 <___vfprintf_internal_r+0x1cbc>
 8007a0c:	42000204 	addi	r8,r8,8
 8007a10:	88026316 	blt	r17,zero,80083a0 <___vfprintf_internal_r+0x1cb4>
 8007a14:	d8813417 	ldw	r2,1232(sp)
 8007a18:	1463c83a 	sub	r17,r2,r17
 8007a1c:	0440590e 	bge	zero,r17,8007b84 <___vfprintf_internal_r+0x1498>
 8007a20:	04c00404 	movi	r19,16
 8007a24:	d8811f17 	ldw	r2,1148(sp)
 8007a28:	9c41770e 	bge	r19,r17,8008008 <___vfprintf_internal_r+0x191c>
 8007a2c:	01420074 	movhi	r5,2049
 8007a30:	295e7084 	addi	r5,r5,31170
 8007a34:	d9412c15 	stw	r5,1200(sp)
 8007a38:	054001c4 	movi	r21,7
 8007a3c:	00000306 	br	8007a4c <___vfprintf_internal_r+0x1360>
 8007a40:	42000204 	addi	r8,r8,8
 8007a44:	8c7ffc04 	addi	r17,r17,-16
 8007a48:	9c41720e 	bge	r19,r17,8008014 <___vfprintf_internal_r+0x1928>
 8007a4c:	18c00404 	addi	r3,r3,16
 8007a50:	10800044 	addi	r2,r2,1
 8007a54:	45000015 	stw	r20,0(r8)
 8007a58:	44c00115 	stw	r19,4(r8)
 8007a5c:	d8c12015 	stw	r3,1152(sp)
 8007a60:	d8811f15 	stw	r2,1148(sp)
 8007a64:	a8bff60e 	bge	r21,r2,8007a40 <__alt_data_end+0xfc007a40>
 8007a68:	b809883a 	mov	r4,r23
 8007a6c:	b00b883a 	mov	r5,r22
 8007a70:	d9811e04 	addi	r6,sp,1144
 8007a74:	800e6940 	call	800e694 <__sprint_r>
 8007a78:	103c341e 	bne	r2,zero,8006b4c <__alt_data_end+0xfc006b4c>
 8007a7c:	d8c12017 	ldw	r3,1152(sp)
 8007a80:	d8811f17 	ldw	r2,1148(sp)
 8007a84:	da000404 	addi	r8,sp,16
 8007a88:	003fee06 	br	8007a44 <__alt_data_end+0xfc007a44>
 8007a8c:	b809883a 	mov	r4,r23
 8007a90:	b00b883a 	mov	r5,r22
 8007a94:	d9811e04 	addi	r6,sp,1144
 8007a98:	800e6940 	call	800e694 <__sprint_r>
 8007a9c:	103c2b1e 	bne	r2,zero,8006b4c <__alt_data_end+0xfc006b4c>
 8007aa0:	d8c12017 	ldw	r3,1152(sp)
 8007aa4:	d8812787 	ldb	r2,1182(sp)
 8007aa8:	da000404 	addi	r8,sp,16
 8007aac:	003cce06 	br	8006de8 <__alt_data_end+0xfc006de8>
 8007ab0:	d8813317 	ldw	r2,1228(sp)
 8007ab4:	14ffffc4 	addi	r19,r2,-1
 8007ab8:	04ff630e 	bge	zero,r19,8007848 <__alt_data_end+0xfc007848>
 8007abc:	05400404 	movi	r21,16
 8007ac0:	acc0810e 	bge	r21,r19,8007cc8 <___vfprintf_internal_r+0x15dc>
 8007ac4:	01420074 	movhi	r5,2049
 8007ac8:	295e7084 	addi	r5,r5,31170
 8007acc:	d9412c15 	stw	r5,1200(sp)
 8007ad0:	01c001c4 	movi	r7,7
 8007ad4:	00000306 	br	8007ae4 <___vfprintf_internal_r+0x13f8>
 8007ad8:	8c400204 	addi	r17,r17,8
 8007adc:	9cfffc04 	addi	r19,r19,-16
 8007ae0:	acc07c0e 	bge	r21,r19,8007cd4 <___vfprintf_internal_r+0x15e8>
 8007ae4:	18c00404 	addi	r3,r3,16
 8007ae8:	84000044 	addi	r16,r16,1
 8007aec:	8d000015 	stw	r20,0(r17)
 8007af0:	8d400115 	stw	r21,4(r17)
 8007af4:	d8c12015 	stw	r3,1152(sp)
 8007af8:	dc011f15 	stw	r16,1148(sp)
 8007afc:	3c3ff60e 	bge	r7,r16,8007ad8 <__alt_data_end+0xfc007ad8>
 8007b00:	b809883a 	mov	r4,r23
 8007b04:	b00b883a 	mov	r5,r22
 8007b08:	d9811e04 	addi	r6,sp,1144
 8007b0c:	d9c13d15 	stw	r7,1268(sp)
 8007b10:	800e6940 	call	800e694 <__sprint_r>
 8007b14:	d9c13d17 	ldw	r7,1268(sp)
 8007b18:	103c0c1e 	bne	r2,zero,8006b4c <__alt_data_end+0xfc006b4c>
 8007b1c:	d8c12017 	ldw	r3,1152(sp)
 8007b20:	dc011f17 	ldw	r16,1148(sp)
 8007b24:	dc400404 	addi	r17,sp,16
 8007b28:	003fec06 	br	8007adc <__alt_data_end+0xfc007adc>
 8007b2c:	00800084 	movi	r2,2
 8007b30:	9546b03a 	or	r3,r18,r21
 8007b34:	003d7d06 	br	800712c <__alt_data_end+0xfc00712c>
 8007b38:	10803fcc 	andi	r2,r2,255
 8007b3c:	1080201c 	xori	r2,r2,128
 8007b40:	10bfe004 	addi	r2,r2,-128
 8007b44:	01000c04 	movi	r4,48
 8007b48:	1101d726 	beq	r2,r4,80082a8 <___vfprintf_internal_r+0x1bbc>
 8007b4c:	d9413117 	ldw	r5,1220(sp)
 8007b50:	d8812817 	ldw	r2,1184(sp)
 8007b54:	193fffc5 	stb	r4,-1(r3)
 8007b58:	297fffc4 	addi	r5,r5,-1
 8007b5c:	d9413115 	stw	r5,1220(sp)
 8007b60:	1163c83a 	sub	r17,r2,r5
 8007b64:	003c5c06 	br	8006cd8 <__alt_data_end+0xfc006cd8>
 8007b68:	b809883a 	mov	r4,r23
 8007b6c:	b00b883a 	mov	r5,r22
 8007b70:	d9811e04 	addi	r6,sp,1144
 8007b74:	800e6940 	call	800e694 <__sprint_r>
 8007b78:	103bf41e 	bne	r2,zero,8006b4c <__alt_data_end+0xfc006b4c>
 8007b7c:	d8c12017 	ldw	r3,1152(sp)
 8007b80:	da000404 	addi	r8,sp,16
 8007b84:	d9413117 	ldw	r5,1220(sp)
 8007b88:	d9013417 	ldw	r4,1232(sp)
 8007b8c:	d8812617 	ldw	r2,1176(sp)
 8007b90:	2923883a 	add	r17,r5,r4
 8007b94:	d9413317 	ldw	r5,1228(sp)
 8007b98:	11400216 	blt	r2,r5,8007ba4 <___vfprintf_internal_r+0x14b8>
 8007b9c:	e100004c 	andi	r4,fp,1
 8007ba0:	20000d26 	beq	r4,zero,8007bd8 <___vfprintf_internal_r+0x14ec>
 8007ba4:	d9013817 	ldw	r4,1248(sp)
 8007ba8:	d9413517 	ldw	r5,1236(sp)
 8007bac:	1907883a 	add	r3,r3,r4
 8007bb0:	d9011f17 	ldw	r4,1148(sp)
 8007bb4:	41400015 	stw	r5,0(r8)
 8007bb8:	d9413817 	ldw	r5,1248(sp)
 8007bbc:	21000044 	addi	r4,r4,1
 8007bc0:	d8c12015 	stw	r3,1152(sp)
 8007bc4:	41400115 	stw	r5,4(r8)
 8007bc8:	d9011f15 	stw	r4,1148(sp)
 8007bcc:	014001c4 	movi	r5,7
 8007bd0:	2901fd16 	blt	r5,r4,80083c8 <___vfprintf_internal_r+0x1cdc>
 8007bd4:	42000204 	addi	r8,r8,8
 8007bd8:	d9013317 	ldw	r4,1228(sp)
 8007bdc:	2085c83a 	sub	r2,r4,r2
 8007be0:	8449c83a 	sub	r4,r16,r17
 8007be4:	1021883a 	mov	r16,r2
 8007be8:	2080010e 	bge	r4,r2,8007bf0 <___vfprintf_internal_r+0x1504>
 8007bec:	2021883a 	mov	r16,r4
 8007bf0:	04000a0e 	bge	zero,r16,8007c1c <___vfprintf_internal_r+0x1530>
 8007bf4:	d9011f17 	ldw	r4,1148(sp)
 8007bf8:	1c07883a 	add	r3,r3,r16
 8007bfc:	44400015 	stw	r17,0(r8)
 8007c00:	21000044 	addi	r4,r4,1
 8007c04:	44000115 	stw	r16,4(r8)
 8007c08:	d8c12015 	stw	r3,1152(sp)
 8007c0c:	d9011f15 	stw	r4,1148(sp)
 8007c10:	014001c4 	movi	r5,7
 8007c14:	29020916 	blt	r5,r4,800843c <___vfprintf_internal_r+0x1d50>
 8007c18:	42000204 	addi	r8,r8,8
 8007c1c:	80020116 	blt	r16,zero,8008424 <___vfprintf_internal_r+0x1d38>
 8007c20:	1421c83a 	sub	r16,r2,r16
 8007c24:	043cc40e 	bge	zero,r16,8006f38 <__alt_data_end+0xfc006f38>
 8007c28:	04400404 	movi	r17,16
 8007c2c:	d8811f17 	ldw	r2,1148(sp)
 8007c30:	8c3f110e 	bge	r17,r16,8007878 <__alt_data_end+0xfc007878>
 8007c34:	01420074 	movhi	r5,2049
 8007c38:	295e7084 	addi	r5,r5,31170
 8007c3c:	d9412c15 	stw	r5,1200(sp)
 8007c40:	04c001c4 	movi	r19,7
 8007c44:	00000306 	br	8007c54 <___vfprintf_internal_r+0x1568>
 8007c48:	42000204 	addi	r8,r8,8
 8007c4c:	843ffc04 	addi	r16,r16,-16
 8007c50:	8c3f0c0e 	bge	r17,r16,8007884 <__alt_data_end+0xfc007884>
 8007c54:	18c00404 	addi	r3,r3,16
 8007c58:	10800044 	addi	r2,r2,1
 8007c5c:	45000015 	stw	r20,0(r8)
 8007c60:	44400115 	stw	r17,4(r8)
 8007c64:	d8c12015 	stw	r3,1152(sp)
 8007c68:	d8811f15 	stw	r2,1148(sp)
 8007c6c:	98bff60e 	bge	r19,r2,8007c48 <__alt_data_end+0xfc007c48>
 8007c70:	b809883a 	mov	r4,r23
 8007c74:	b00b883a 	mov	r5,r22
 8007c78:	d9811e04 	addi	r6,sp,1144
 8007c7c:	800e6940 	call	800e694 <__sprint_r>
 8007c80:	103bb21e 	bne	r2,zero,8006b4c <__alt_data_end+0xfc006b4c>
 8007c84:	d8c12017 	ldw	r3,1152(sp)
 8007c88:	d8811f17 	ldw	r2,1148(sp)
 8007c8c:	da000404 	addi	r8,sp,16
 8007c90:	003fee06 	br	8007c4c <__alt_data_end+0xfc007c4c>
 8007c94:	e088703a 	and	r4,fp,r2
 8007c98:	203ec01e 	bne	r4,zero,800779c <__alt_data_end+0xfc00779c>
 8007c9c:	dc011f17 	ldw	r16,1148(sp)
 8007ca0:	d9013117 	ldw	r4,1220(sp)
 8007ca4:	40800115 	stw	r2,4(r8)
 8007ca8:	84000044 	addi	r16,r16,1
 8007cac:	41000015 	stw	r4,0(r8)
 8007cb0:	d8c12015 	stw	r3,1152(sp)
 8007cb4:	dc011f15 	stw	r16,1148(sp)
 8007cb8:	008001c4 	movi	r2,7
 8007cbc:	14000e16 	blt	r2,r16,8007cf8 <___vfprintf_internal_r+0x160c>
 8007cc0:	44400204 	addi	r17,r8,8
 8007cc4:	003ee006 	br	8007848 <__alt_data_end+0xfc007848>
 8007cc8:	01020074 	movhi	r4,2049
 8007ccc:	211e7084 	addi	r4,r4,31170
 8007cd0:	d9012c15 	stw	r4,1200(sp)
 8007cd4:	d8812c17 	ldw	r2,1200(sp)
 8007cd8:	1cc7883a 	add	r3,r3,r19
 8007cdc:	84000044 	addi	r16,r16,1
 8007ce0:	88800015 	stw	r2,0(r17)
 8007ce4:	8cc00115 	stw	r19,4(r17)
 8007ce8:	d8c12015 	stw	r3,1152(sp)
 8007cec:	dc011f15 	stw	r16,1148(sp)
 8007cf0:	008001c4 	movi	r2,7
 8007cf4:	143ed30e 	bge	r2,r16,8007844 <__alt_data_end+0xfc007844>
 8007cf8:	b809883a 	mov	r4,r23
 8007cfc:	b00b883a 	mov	r5,r22
 8007d00:	d9811e04 	addi	r6,sp,1144
 8007d04:	800e6940 	call	800e694 <__sprint_r>
 8007d08:	103b901e 	bne	r2,zero,8006b4c <__alt_data_end+0xfc006b4c>
 8007d0c:	d8c12017 	ldw	r3,1152(sp)
 8007d10:	dc011f17 	ldw	r16,1148(sp)
 8007d14:	dc400404 	addi	r17,sp,16
 8007d18:	003ecb06 	br	8007848 <__alt_data_end+0xfc007848>
 8007d1c:	b809883a 	mov	r4,r23
 8007d20:	b00b883a 	mov	r5,r22
 8007d24:	d9811e04 	addi	r6,sp,1144
 8007d28:	800e6940 	call	800e694 <__sprint_r>
 8007d2c:	103b871e 	bne	r2,zero,8006b4c <__alt_data_end+0xfc006b4c>
 8007d30:	d8c12017 	ldw	r3,1152(sp)
 8007d34:	dc011f17 	ldw	r16,1148(sp)
 8007d38:	da000404 	addi	r8,sp,16
 8007d3c:	003ea206 	br	80077c8 <__alt_data_end+0xfc0077c8>
 8007d40:	b809883a 	mov	r4,r23
 8007d44:	b00b883a 	mov	r5,r22
 8007d48:	d9811e04 	addi	r6,sp,1144
 8007d4c:	800e6940 	call	800e694 <__sprint_r>
 8007d50:	103b7e1e 	bne	r2,zero,8006b4c <__alt_data_end+0xfc006b4c>
 8007d54:	d8c12017 	ldw	r3,1152(sp)
 8007d58:	dc011f17 	ldw	r16,1148(sp)
 8007d5c:	dc400404 	addi	r17,sp,16
 8007d60:	003ea406 	br	80077f4 <__alt_data_end+0xfc0077f4>
 8007d64:	b809883a 	mov	r4,r23
 8007d68:	b00b883a 	mov	r5,r22
 8007d6c:	d9811e04 	addi	r6,sp,1144
 8007d70:	800e6940 	call	800e694 <__sprint_r>
 8007d74:	103b751e 	bne	r2,zero,8006b4c <__alt_data_end+0xfc006b4c>
 8007d78:	d8c12017 	ldw	r3,1152(sp)
 8007d7c:	da000404 	addi	r8,sp,16
 8007d80:	003c3706 	br	8006e60 <__alt_data_end+0xfc006e60>
 8007d84:	04a5c83a 	sub	r18,zero,r18
 8007d88:	9004c03a 	cmpne	r2,r18,zero
 8007d8c:	056bc83a 	sub	r21,zero,r21
 8007d90:	a8abc83a 	sub	r21,r21,r2
 8007d94:	04c00b44 	movi	r19,45
 8007d98:	dcc12785 	stb	r19,1182(sp)
 8007d9c:	da413215 	stw	r9,1224(sp)
 8007da0:	00800044 	movi	r2,1
 8007da4:	9546b03a 	or	r3,r18,r21
 8007da8:	003bb106 	br	8006c70 <__alt_data_end+0xfc006c70>
 8007dac:	da013f15 	stw	r8,1276(sp)
 8007db0:	da413e15 	stw	r9,1272(sp)
 8007db4:	800d0500 	call	800d050 <__fpclassifyd>
 8007db8:	da013f17 	ldw	r8,1276(sp)
 8007dbc:	da413e17 	ldw	r9,1272(sp)
 8007dc0:	1000e526 	beq	r2,zero,8008158 <___vfprintf_internal_r+0x1a6c>
 8007dc4:	04fff7c4 	movi	r19,-33
 8007dc8:	00bfffc4 	movi	r2,-1
 8007dcc:	84e6703a 	and	r19,r16,r19
 8007dd0:	48822926 	beq	r9,r2,8008678 <___vfprintf_internal_r+0x1f8c>
 8007dd4:	008011c4 	movi	r2,71
 8007dd8:	98821626 	beq	r19,r2,8008634 <___vfprintf_internal_r+0x1f48>
 8007ddc:	d9013917 	ldw	r4,1252(sp)
 8007de0:	e0c04014 	ori	r3,fp,256
 8007de4:	d8c12d15 	stw	r3,1204(sp)
 8007de8:	20021f16 	blt	r4,zero,8008668 <___vfprintf_internal_r+0x1f7c>
 8007dec:	dc413917 	ldw	r17,1252(sp)
 8007df0:	d8012b05 	stb	zero,1196(sp)
 8007df4:	00801984 	movi	r2,102
 8007df8:	80814d26 	beq	r16,r2,8008330 <___vfprintf_internal_r+0x1c44>
 8007dfc:	00801184 	movi	r2,70
 8007e00:	80814b26 	beq	r16,r2,8008330 <___vfprintf_internal_r+0x1c44>
 8007e04:	00801144 	movi	r2,69
 8007e08:	98821d26 	beq	r19,r2,8008680 <___vfprintf_internal_r+0x1f94>
 8007e0c:	482b883a 	mov	r21,r9
 8007e10:	d8812604 	addi	r2,sp,1176
 8007e14:	d8800115 	stw	r2,4(sp)
 8007e18:	d9413717 	ldw	r5,1244(sp)
 8007e1c:	d8812504 	addi	r2,sp,1172
 8007e20:	d8800215 	stw	r2,8(sp)
 8007e24:	d8812104 	addi	r2,sp,1156
 8007e28:	dd400015 	stw	r21,0(sp)
 8007e2c:	d8800315 	stw	r2,12(sp)
 8007e30:	b809883a 	mov	r4,r23
 8007e34:	880d883a 	mov	r6,r17
 8007e38:	01c00084 	movi	r7,2
 8007e3c:	da013f15 	stw	r8,1276(sp)
 8007e40:	da413e15 	stw	r9,1272(sp)
 8007e44:	8008cf80 	call	8008cf8 <_dtoa_r>
 8007e48:	d8813115 	stw	r2,1220(sp)
 8007e4c:	008019c4 	movi	r2,103
 8007e50:	da013f17 	ldw	r8,1276(sp)
 8007e54:	da413e17 	ldw	r9,1272(sp)
 8007e58:	80800226 	beq	r16,r2,8007e64 <___vfprintf_internal_r+0x1778>
 8007e5c:	008011c4 	movi	r2,71
 8007e60:	8081451e 	bne	r16,r2,8008378 <___vfprintf_internal_r+0x1c8c>
 8007e64:	e080004c 	andi	r2,fp,1
 8007e68:	10021e26 	beq	r2,zero,80086e4 <___vfprintf_internal_r+0x1ff8>
 8007e6c:	d8c13117 	ldw	r3,1220(sp)
 8007e70:	1d55883a 	add	r10,r3,r21
 8007e74:	d9013717 	ldw	r4,1244(sp)
 8007e78:	880b883a 	mov	r5,r17
 8007e7c:	000d883a 	mov	r6,zero
 8007e80:	000f883a 	mov	r7,zero
 8007e84:	da013f15 	stw	r8,1276(sp)
 8007e88:	da413e15 	stw	r9,1272(sp)
 8007e8c:	da813d15 	stw	r10,1268(sp)
 8007e90:	80123e40 	call	80123e4 <__eqdf2>
 8007e94:	da013f17 	ldw	r8,1276(sp)
 8007e98:	da413e17 	ldw	r9,1272(sp)
 8007e9c:	da813d17 	ldw	r10,1268(sp)
 8007ea0:	1001a126 	beq	r2,zero,8008528 <___vfprintf_internal_r+0x1e3c>
 8007ea4:	d8812117 	ldw	r2,1156(sp)
 8007ea8:	1280062e 	bgeu	r2,r10,8007ec4 <___vfprintf_internal_r+0x17d8>
 8007eac:	01000c04 	movi	r4,48
 8007eb0:	10c00044 	addi	r3,r2,1
 8007eb4:	d8c12115 	stw	r3,1156(sp)
 8007eb8:	11000005 	stb	r4,0(r2)
 8007ebc:	d8812117 	ldw	r2,1156(sp)
 8007ec0:	12bffb36 	bltu	r2,r10,8007eb0 <__alt_data_end+0xfc007eb0>
 8007ec4:	d8c13117 	ldw	r3,1220(sp)
 8007ec8:	10c5c83a 	sub	r2,r2,r3
 8007ecc:	d8813315 	stw	r2,1228(sp)
 8007ed0:	008011c4 	movi	r2,71
 8007ed4:	98818926 	beq	r19,r2,80084fc <___vfprintf_internal_r+0x1e10>
 8007ed8:	00801944 	movi	r2,101
 8007edc:	14023c0e 	bge	r2,r16,80087d0 <___vfprintf_internal_r+0x20e4>
 8007ee0:	d8c12617 	ldw	r3,1176(sp)
 8007ee4:	00801984 	movi	r2,102
 8007ee8:	d8c13415 	stw	r3,1232(sp)
 8007eec:	8081ef26 	beq	r16,r2,80086ac <___vfprintf_internal_r+0x1fc0>
 8007ef0:	d8c13417 	ldw	r3,1232(sp)
 8007ef4:	d9013317 	ldw	r4,1228(sp)
 8007ef8:	1901e316 	blt	r3,r4,8008688 <___vfprintf_internal_r+0x1f9c>
 8007efc:	e080004c 	andi	r2,fp,1
 8007f00:	1001f426 	beq	r2,zero,80086d4 <___vfprintf_internal_r+0x1fe8>
 8007f04:	d8c13417 	ldw	r3,1232(sp)
 8007f08:	1c400044 	addi	r17,r3,1
 8007f0c:	8839883a 	mov	fp,r17
 8007f10:	8801e416 	blt	r17,zero,80086a4 <___vfprintf_internal_r+0x1fb8>
 8007f14:	dd412b07 	ldb	r21,1196(sp)
 8007f18:	a801701e 	bne	r21,zero,80084dc <___vfprintf_internal_r+0x1df0>
 8007f1c:	df012b15 	stw	fp,1196(sp)
 8007f20:	dcc12783 	ldbu	r19,1182(sp)
 8007f24:	df012d17 	ldw	fp,1204(sp)
 8007f28:	d8013215 	stw	zero,1224(sp)
 8007f2c:	dc812d15 	stw	r18,1204(sp)
 8007f30:	003b6e06 	br	8006cec <__alt_data_end+0xfc006cec>
 8007f34:	e080040c 	andi	r2,fp,16
 8007f38:	1000b51e 	bne	r2,zero,8008210 <___vfprintf_internal_r+0x1b24>
 8007f3c:	e080100c 	andi	r2,fp,64
 8007f40:	10015b26 	beq	r2,zero,80084b0 <___vfprintf_internal_r+0x1dc4>
 8007f44:	d9012d17 	ldw	r4,1204(sp)
 8007f48:	d9412f17 	ldw	r5,1212(sp)
 8007f4c:	20800017 	ldw	r2,0(r4)
 8007f50:	21000104 	addi	r4,r4,4
 8007f54:	d9012d15 	stw	r4,1204(sp)
 8007f58:	1140000d 	sth	r5,0(r2)
 8007f5c:	003a2006 	br	80067e0 <__alt_data_end+0xfc0067e0>
 8007f60:	e0c0100c 	andi	r3,fp,64
 8007f64:	1800a226 	beq	r3,zero,80081f0 <___vfprintf_internal_r+0x1b04>
 8007f68:	d8c12d17 	ldw	r3,1204(sp)
 8007f6c:	1480000b 	ldhu	r18,0(r2)
 8007f70:	002b883a 	mov	r21,zero
 8007f74:	18c00104 	addi	r3,r3,4
 8007f78:	d8c12d15 	stw	r3,1204(sp)
 8007f7c:	0005883a 	mov	r2,zero
 8007f80:	9007883a 	mov	r3,r18
 8007f84:	003c6906 	br	800712c <__alt_data_end+0xfc00712c>
 8007f88:	e0c0100c 	andi	r3,fp,64
 8007f8c:	18009026 	beq	r3,zero,80081d0 <___vfprintf_internal_r+0x1ae4>
 8007f90:	1480000b 	ldhu	r18,0(r2)
 8007f94:	d8812d17 	ldw	r2,1204(sp)
 8007f98:	002b883a 	mov	r21,zero
 8007f9c:	9007883a 	mov	r3,r18
 8007fa0:	10800104 	addi	r2,r2,4
 8007fa4:	d8812d15 	stw	r2,1204(sp)
 8007fa8:	00800044 	movi	r2,1
 8007fac:	003c5f06 	br	800712c <__alt_data_end+0xfc00712c>
 8007fb0:	e0c0100c 	andi	r3,fp,64
 8007fb4:	18008026 	beq	r3,zero,80081b8 <___vfprintf_internal_r+0x1acc>
 8007fb8:	d9012d17 	ldw	r4,1204(sp)
 8007fbc:	1480000b 	ldhu	r18,0(r2)
 8007fc0:	002b883a 	mov	r21,zero
 8007fc4:	21000104 	addi	r4,r4,4
 8007fc8:	d9012d15 	stw	r4,1204(sp)
 8007fcc:	003c7906 	br	80071b4 <__alt_data_end+0xfc0071b4>
 8007fd0:	e080100c 	andi	r2,fp,64
 8007fd4:	10007126 	beq	r2,zero,800819c <___vfprintf_internal_r+0x1ab0>
 8007fd8:	1c80000f 	ldh	r18,0(r3)
 8007fdc:	d8812d17 	ldw	r2,1204(sp)
 8007fe0:	902bd7fa 	srai	r21,r18,31
 8007fe4:	10800104 	addi	r2,r2,4
 8007fe8:	d8812d15 	stw	r2,1204(sp)
 8007fec:	a805883a 	mov	r2,r21
 8007ff0:	003b1a06 	br	8006c5c <__alt_data_end+0xfc006c5c>
 8007ff4:	e4000007 	ldb	r16,0(fp)
 8007ff8:	e005883a 	mov	r2,fp
 8007ffc:	003a2306 	br	800688c <__alt_data_end+0xfc00688c>
 8008000:	00800084 	movi	r2,2
 8008004:	003c4906 	br	800712c <__alt_data_end+0xfc00712c>
 8008008:	01020074 	movhi	r4,2049
 800800c:	211e7084 	addi	r4,r4,31170
 8008010:	d9012c15 	stw	r4,1200(sp)
 8008014:	d9012c17 	ldw	r4,1200(sp)
 8008018:	1c47883a 	add	r3,r3,r17
 800801c:	10800044 	addi	r2,r2,1
 8008020:	41000015 	stw	r4,0(r8)
 8008024:	44400115 	stw	r17,4(r8)
 8008028:	d8c12015 	stw	r3,1152(sp)
 800802c:	d8811f15 	stw	r2,1148(sp)
 8008030:	010001c4 	movi	r4,7
 8008034:	20becc16 	blt	r4,r2,8007b68 <__alt_data_end+0xfc007b68>
 8008038:	42000204 	addi	r8,r8,8
 800803c:	003ed106 	br	8007b84 <__alt_data_end+0xfc007b84>
 8008040:	01020074 	movhi	r4,2049
 8008044:	211e7084 	addi	r4,r4,31170
 8008048:	d9012c15 	stw	r4,1200(sp)
 800804c:	003ba306 	br	8006edc <__alt_data_end+0xfc006edc>
 8008050:	b809883a 	mov	r4,r23
 8008054:	b00b883a 	mov	r5,r22
 8008058:	d9811e04 	addi	r6,sp,1144
 800805c:	800e6940 	call	800e694 <__sprint_r>
 8008060:	103aba1e 	bne	r2,zero,8006b4c <__alt_data_end+0xfc006b4c>
 8008064:	d8c12017 	ldw	r3,1152(sp)
 8008068:	da000404 	addi	r8,sp,16
 800806c:	003d6c06 	br	8007620 <__alt_data_end+0xfc007620>
 8008070:	d8811f17 	ldw	r2,1148(sp)
 8008074:	01420074 	movhi	r5,2049
 8008078:	01000044 	movi	r4,1
 800807c:	18c00044 	addi	r3,r3,1
 8008080:	10800044 	addi	r2,r2,1
 8008084:	295e6804 	addi	r5,r5,31136
 8008088:	41000115 	stw	r4,4(r8)
 800808c:	41400015 	stw	r5,0(r8)
 8008090:	d8c12015 	stw	r3,1152(sp)
 8008094:	d8811f15 	stw	r2,1148(sp)
 8008098:	010001c4 	movi	r4,7
 800809c:	20806716 	blt	r4,r2,800823c <___vfprintf_internal_r+0x1b50>
 80080a0:	42000204 	addi	r8,r8,8
 80080a4:	8000041e 	bne	r16,zero,80080b8 <___vfprintf_internal_r+0x19cc>
 80080a8:	d8813317 	ldw	r2,1228(sp)
 80080ac:	1000021e 	bne	r2,zero,80080b8 <___vfprintf_internal_r+0x19cc>
 80080b0:	e080004c 	andi	r2,fp,1
 80080b4:	103ba026 	beq	r2,zero,8006f38 <__alt_data_end+0xfc006f38>
 80080b8:	d9013817 	ldw	r4,1248(sp)
 80080bc:	d8811f17 	ldw	r2,1148(sp)
 80080c0:	d9413517 	ldw	r5,1236(sp)
 80080c4:	1907883a 	add	r3,r3,r4
 80080c8:	10800044 	addi	r2,r2,1
 80080cc:	41000115 	stw	r4,4(r8)
 80080d0:	41400015 	stw	r5,0(r8)
 80080d4:	d8c12015 	stw	r3,1152(sp)
 80080d8:	d8811f15 	stw	r2,1148(sp)
 80080dc:	010001c4 	movi	r4,7
 80080e0:	20815716 	blt	r4,r2,8008640 <___vfprintf_internal_r+0x1f54>
 80080e4:	42000204 	addi	r8,r8,8
 80080e8:	0421c83a 	sub	r16,zero,r16
 80080ec:	0400810e 	bge	zero,r16,80082f4 <___vfprintf_internal_r+0x1c08>
 80080f0:	04400404 	movi	r17,16
 80080f4:	8c00bd0e 	bge	r17,r16,80083ec <___vfprintf_internal_r+0x1d00>
 80080f8:	01420074 	movhi	r5,2049
 80080fc:	295e7084 	addi	r5,r5,31170
 8008100:	d9412c15 	stw	r5,1200(sp)
 8008104:	04c001c4 	movi	r19,7
 8008108:	00000306 	br	8008118 <___vfprintf_internal_r+0x1a2c>
 800810c:	42000204 	addi	r8,r8,8
 8008110:	843ffc04 	addi	r16,r16,-16
 8008114:	8c00b80e 	bge	r17,r16,80083f8 <___vfprintf_internal_r+0x1d0c>
 8008118:	18c00404 	addi	r3,r3,16
 800811c:	10800044 	addi	r2,r2,1
 8008120:	45000015 	stw	r20,0(r8)
 8008124:	44400115 	stw	r17,4(r8)
 8008128:	d8c12015 	stw	r3,1152(sp)
 800812c:	d8811f15 	stw	r2,1148(sp)
 8008130:	98bff60e 	bge	r19,r2,800810c <__alt_data_end+0xfc00810c>
 8008134:	b809883a 	mov	r4,r23
 8008138:	b00b883a 	mov	r5,r22
 800813c:	d9811e04 	addi	r6,sp,1144
 8008140:	800e6940 	call	800e694 <__sprint_r>
 8008144:	103a811e 	bne	r2,zero,8006b4c <__alt_data_end+0xfc006b4c>
 8008148:	d8c12017 	ldw	r3,1152(sp)
 800814c:	d8811f17 	ldw	r2,1148(sp)
 8008150:	da000404 	addi	r8,sp,16
 8008154:	003fee06 	br	8008110 <__alt_data_end+0xfc008110>
 8008158:	008011c4 	movi	r2,71
 800815c:	1400db16 	blt	r2,r16,80084cc <___vfprintf_internal_r+0x1de0>
 8008160:	01020074 	movhi	r4,2049
 8008164:	211e5a04 	addi	r4,r4,31080
 8008168:	d9013115 	stw	r4,1220(sp)
 800816c:	00c000c4 	movi	r3,3
 8008170:	00bfdfc4 	movi	r2,-129
 8008174:	d8c12b15 	stw	r3,1196(sp)
 8008178:	e0b8703a 	and	fp,fp,r2
 800817c:	dcc12783 	ldbu	r19,1182(sp)
 8008180:	dc812d15 	stw	r18,1204(sp)
 8008184:	1823883a 	mov	r17,r3
 8008188:	d8013215 	stw	zero,1224(sp)
 800818c:	d8013415 	stw	zero,1232(sp)
 8008190:	003ad606 	br	8006cec <__alt_data_end+0xfc006cec>
 8008194:	4823883a 	mov	r17,r9
 8008198:	003cc906 	br	80074c0 <__alt_data_end+0xfc0074c0>
 800819c:	1c800017 	ldw	r18,0(r3)
 80081a0:	d8c12d17 	ldw	r3,1204(sp)
 80081a4:	902bd7fa 	srai	r21,r18,31
 80081a8:	18c00104 	addi	r3,r3,4
 80081ac:	d8c12d15 	stw	r3,1204(sp)
 80081b0:	a805883a 	mov	r2,r21
 80081b4:	003aa906 	br	8006c5c <__alt_data_end+0xfc006c5c>
 80081b8:	d9412d17 	ldw	r5,1204(sp)
 80081bc:	14800017 	ldw	r18,0(r2)
 80081c0:	002b883a 	mov	r21,zero
 80081c4:	29400104 	addi	r5,r5,4
 80081c8:	d9412d15 	stw	r5,1204(sp)
 80081cc:	003bf906 	br	80071b4 <__alt_data_end+0xfc0071b4>
 80081d0:	d8c12d17 	ldw	r3,1204(sp)
 80081d4:	14800017 	ldw	r18,0(r2)
 80081d8:	002b883a 	mov	r21,zero
 80081dc:	18c00104 	addi	r3,r3,4
 80081e0:	d8c12d15 	stw	r3,1204(sp)
 80081e4:	00800044 	movi	r2,1
 80081e8:	9007883a 	mov	r3,r18
 80081ec:	003bcf06 	br	800712c <__alt_data_end+0xfc00712c>
 80081f0:	d9012d17 	ldw	r4,1204(sp)
 80081f4:	14800017 	ldw	r18,0(r2)
 80081f8:	002b883a 	mov	r21,zero
 80081fc:	21000104 	addi	r4,r4,4
 8008200:	d9012d15 	stw	r4,1204(sp)
 8008204:	0005883a 	mov	r2,zero
 8008208:	9007883a 	mov	r3,r18
 800820c:	003bc706 	br	800712c <__alt_data_end+0xfc00712c>
 8008210:	d9412d17 	ldw	r5,1204(sp)
 8008214:	d8c12f17 	ldw	r3,1212(sp)
 8008218:	28800017 	ldw	r2,0(r5)
 800821c:	29400104 	addi	r5,r5,4
 8008220:	d9412d15 	stw	r5,1204(sp)
 8008224:	10c00015 	stw	r3,0(r2)
 8008228:	00396d06 	br	80067e0 <__alt_data_end+0xfc0067e0>
 800822c:	01020074 	movhi	r4,2049
 8008230:	211e5804 	addi	r4,r4,31072
 8008234:	d9013115 	stw	r4,1220(sp)
 8008238:	003ba206 	br	80070c4 <__alt_data_end+0xfc0070c4>
 800823c:	b809883a 	mov	r4,r23
 8008240:	b00b883a 	mov	r5,r22
 8008244:	d9811e04 	addi	r6,sp,1144
 8008248:	800e6940 	call	800e694 <__sprint_r>
 800824c:	103a3f1e 	bne	r2,zero,8006b4c <__alt_data_end+0xfc006b4c>
 8008250:	dc012617 	ldw	r16,1176(sp)
 8008254:	d8c12017 	ldw	r3,1152(sp)
 8008258:	da000404 	addi	r8,sp,16
 800825c:	003f9106 	br	80080a4 <__alt_data_end+0xfc0080a4>
 8008260:	e0800044 	addi	r2,fp,1
 8008264:	9cc00814 	ori	r19,r19,32
 8008268:	e4000047 	ldb	r16,1(fp)
 800826c:	00398706 	br	800688c <__alt_data_end+0xfc00688c>
 8008270:	d8812e17 	ldw	r2,1208(sp)
 8008274:	d8c12d15 	stw	r3,1204(sp)
 8008278:	0085c83a 	sub	r2,zero,r2
 800827c:	d8812e15 	stw	r2,1208(sp)
 8008280:	e005883a 	mov	r2,fp
 8008284:	003a3a06 	br	8006b70 <__alt_data_end+0xfc006b70>
 8008288:	b809883a 	mov	r4,r23
 800828c:	b00b883a 	mov	r5,r22
 8008290:	d9811e04 	addi	r6,sp,1144
 8008294:	800e6940 	call	800e694 <__sprint_r>
 8008298:	103a2c1e 	bne	r2,zero,8006b4c <__alt_data_end+0xfc006b4c>
 800829c:	d8c12017 	ldw	r3,1152(sp)
 80082a0:	da000404 	addi	r8,sp,16
 80082a4:	003cf006 	br	8007668 <__alt_data_end+0xfc007668>
 80082a8:	d8c12817 	ldw	r3,1184(sp)
 80082ac:	d9013117 	ldw	r4,1220(sp)
 80082b0:	1923c83a 	sub	r17,r3,r4
 80082b4:	003a8806 	br	8006cd8 <__alt_data_end+0xfc006cd8>
 80082b8:	da013f15 	stw	r8,1276(sp)
 80082bc:	80045e40 	call	80045e4 <strlen>
 80082c0:	1023883a 	mov	r17,r2
 80082c4:	da013f17 	ldw	r8,1276(sp)
 80082c8:	883c7f0e 	bge	r17,zero,80074c8 <__alt_data_end+0xfc0074c8>
 80082cc:	0005883a 	mov	r2,zero
 80082d0:	003c7d06 	br	80074c8 <__alt_data_end+0xfc0074c8>
 80082d4:	b809883a 	mov	r4,r23
 80082d8:	b00b883a 	mov	r5,r22
 80082dc:	d9811e04 	addi	r6,sp,1144
 80082e0:	800e6940 	call	800e694 <__sprint_r>
 80082e4:	103a191e 	bne	r2,zero,8006b4c <__alt_data_end+0xfc006b4c>
 80082e8:	d8c12017 	ldw	r3,1152(sp)
 80082ec:	d8811f17 	ldw	r2,1148(sp)
 80082f0:	da000404 	addi	r8,sp,16
 80082f4:	d9413317 	ldw	r5,1228(sp)
 80082f8:	d9013117 	ldw	r4,1220(sp)
 80082fc:	10800044 	addi	r2,r2,1
 8008300:	28c7883a 	add	r3,r5,r3
 8008304:	41000015 	stw	r4,0(r8)
 8008308:	41400115 	stw	r5,4(r8)
 800830c:	d8c12015 	stw	r3,1152(sp)
 8008310:	d8811f15 	stw	r2,1148(sp)
 8008314:	010001c4 	movi	r4,7
 8008318:	20bb060e 	bge	r4,r2,8006f34 <__alt_data_end+0xfc006f34>
 800831c:	003d6206 	br	80078a8 <__alt_data_end+0xfc0078a8>
 8008320:	01020074 	movhi	r4,2049
 8008324:	211e7484 	addi	r4,r4,31186
 8008328:	d9013615 	stw	r4,1240(sp)
 800832c:	003aa306 	br	8006dbc <__alt_data_end+0xfc006dbc>
 8008330:	d8812604 	addi	r2,sp,1176
 8008334:	d8800115 	stw	r2,4(sp)
 8008338:	d9413717 	ldw	r5,1244(sp)
 800833c:	d8812504 	addi	r2,sp,1172
 8008340:	d8800215 	stw	r2,8(sp)
 8008344:	d8812104 	addi	r2,sp,1156
 8008348:	da400015 	stw	r9,0(sp)
 800834c:	d8800315 	stw	r2,12(sp)
 8008350:	b809883a 	mov	r4,r23
 8008354:	880d883a 	mov	r6,r17
 8008358:	01c000c4 	movi	r7,3
 800835c:	da013f15 	stw	r8,1276(sp)
 8008360:	da413e15 	stw	r9,1272(sp)
 8008364:	8008cf80 	call	8008cf8 <_dtoa_r>
 8008368:	da413e17 	ldw	r9,1272(sp)
 800836c:	da013f17 	ldw	r8,1276(sp)
 8008370:	d8813115 	stw	r2,1220(sp)
 8008374:	482b883a 	mov	r21,r9
 8008378:	d8c13117 	ldw	r3,1220(sp)
 800837c:	00801184 	movi	r2,70
 8008380:	1d55883a 	add	r10,r3,r21
 8008384:	98bebb1e 	bne	r19,r2,8007e74 <__alt_data_end+0xfc007e74>
 8008388:	19000007 	ldb	r4,0(r3)
 800838c:	00800c04 	movi	r2,48
 8008390:	2080dd26 	beq	r4,r2,8008708 <___vfprintf_internal_r+0x201c>
 8008394:	d8c12617 	ldw	r3,1176(sp)
 8008398:	50d5883a 	add	r10,r10,r3
 800839c:	003eb506 	br	8007e74 <__alt_data_end+0xfc007e74>
 80083a0:	0023883a 	mov	r17,zero
 80083a4:	003d9b06 	br	8007a14 <__alt_data_end+0xfc007a14>
 80083a8:	b809883a 	mov	r4,r23
 80083ac:	b00b883a 	mov	r5,r22
 80083b0:	d9811e04 	addi	r6,sp,1144
 80083b4:	800e6940 	call	800e694 <__sprint_r>
 80083b8:	1039e41e 	bne	r2,zero,8006b4c <__alt_data_end+0xfc006b4c>
 80083bc:	d8c12017 	ldw	r3,1152(sp)
 80083c0:	da000404 	addi	r8,sp,16
 80083c4:	003d9206 	br	8007a10 <__alt_data_end+0xfc007a10>
 80083c8:	b809883a 	mov	r4,r23
 80083cc:	b00b883a 	mov	r5,r22
 80083d0:	d9811e04 	addi	r6,sp,1144
 80083d4:	800e6940 	call	800e694 <__sprint_r>
 80083d8:	1039dc1e 	bne	r2,zero,8006b4c <__alt_data_end+0xfc006b4c>
 80083dc:	d8812617 	ldw	r2,1176(sp)
 80083e0:	d8c12017 	ldw	r3,1152(sp)
 80083e4:	da000404 	addi	r8,sp,16
 80083e8:	003dfb06 	br	8007bd8 <__alt_data_end+0xfc007bd8>
 80083ec:	01020074 	movhi	r4,2049
 80083f0:	211e7084 	addi	r4,r4,31170
 80083f4:	d9012c15 	stw	r4,1200(sp)
 80083f8:	d9012c17 	ldw	r4,1200(sp)
 80083fc:	1c07883a 	add	r3,r3,r16
 8008400:	10800044 	addi	r2,r2,1
 8008404:	41000015 	stw	r4,0(r8)
 8008408:	44000115 	stw	r16,4(r8)
 800840c:	d8c12015 	stw	r3,1152(sp)
 8008410:	d8811f15 	stw	r2,1148(sp)
 8008414:	010001c4 	movi	r4,7
 8008418:	20bfae16 	blt	r4,r2,80082d4 <__alt_data_end+0xfc0082d4>
 800841c:	42000204 	addi	r8,r8,8
 8008420:	003fb406 	br	80082f4 <__alt_data_end+0xfc0082f4>
 8008424:	0021883a 	mov	r16,zero
 8008428:	003dfd06 	br	8007c20 <__alt_data_end+0xfc007c20>
 800842c:	01420074 	movhi	r5,2049
 8008430:	295e7484 	addi	r5,r5,31186
 8008434:	d9413615 	stw	r5,1240(sp)
 8008438:	003ae306 	br	8006fc8 <__alt_data_end+0xfc006fc8>
 800843c:	b809883a 	mov	r4,r23
 8008440:	b00b883a 	mov	r5,r22
 8008444:	d9811e04 	addi	r6,sp,1144
 8008448:	800e6940 	call	800e694 <__sprint_r>
 800844c:	1039bf1e 	bne	r2,zero,8006b4c <__alt_data_end+0xfc006b4c>
 8008450:	d8812617 	ldw	r2,1176(sp)
 8008454:	d9413317 	ldw	r5,1228(sp)
 8008458:	d8c12017 	ldw	r3,1152(sp)
 800845c:	da000404 	addi	r8,sp,16
 8008460:	2885c83a 	sub	r2,r5,r2
 8008464:	003ded06 	br	8007c1c <__alt_data_end+0xfc007c1c>
 8008468:	00800184 	movi	r2,6
 800846c:	1240012e 	bgeu	r2,r9,8008474 <___vfprintf_internal_r+0x1d88>
 8008470:	1013883a 	mov	r9,r2
 8008474:	4823883a 	mov	r17,r9
 8008478:	4805883a 	mov	r2,r9
 800847c:	4800b216 	blt	r9,zero,8008748 <___vfprintf_internal_r+0x205c>
 8008480:	01420074 	movhi	r5,2049
 8008484:	295e6604 	addi	r5,r5,31128
 8008488:	d8812b15 	stw	r2,1196(sp)
 800848c:	dc812d15 	stw	r18,1204(sp)
 8008490:	d8013215 	stw	zero,1224(sp)
 8008494:	d8013415 	stw	zero,1232(sp)
 8008498:	d9413115 	stw	r5,1220(sp)
 800849c:	0005883a 	mov	r2,zero
 80084a0:	003a1906 	br	8006d08 <__alt_data_end+0xfc006d08>
 80084a4:	04c00b44 	movi	r19,45
 80084a8:	dcc12785 	stb	r19,1182(sp)
 80084ac:	003b0006 	br	80070b0 <__alt_data_end+0xfc0070b0>
 80084b0:	d8c12d17 	ldw	r3,1204(sp)
 80084b4:	d9012f17 	ldw	r4,1212(sp)
 80084b8:	18800017 	ldw	r2,0(r3)
 80084bc:	18c00104 	addi	r3,r3,4
 80084c0:	d8c12d15 	stw	r3,1204(sp)
 80084c4:	11000015 	stw	r4,0(r2)
 80084c8:	0038c506 	br	80067e0 <__alt_data_end+0xfc0067e0>
 80084cc:	01420074 	movhi	r5,2049
 80084d0:	295e5b04 	addi	r5,r5,31084
 80084d4:	d9413115 	stw	r5,1220(sp)
 80084d8:	003f2406 	br	800816c <__alt_data_end+0xfc00816c>
 80084dc:	00800b44 	movi	r2,45
 80084e0:	d8812785 	stb	r2,1182(sp)
 80084e4:	df012b15 	stw	fp,1196(sp)
 80084e8:	d8013215 	stw	zero,1224(sp)
 80084ec:	df012d17 	ldw	fp,1204(sp)
 80084f0:	00800b44 	movi	r2,45
 80084f4:	dc812d15 	stw	r18,1204(sp)
 80084f8:	003a0006 	br	8006cfc <__alt_data_end+0xfc006cfc>
 80084fc:	d8c12617 	ldw	r3,1176(sp)
 8008500:	00bfff44 	movi	r2,-3
 8008504:	18800a16 	blt	r3,r2,8008530 <___vfprintf_internal_r+0x1e44>
 8008508:	48c00916 	blt	r9,r3,8008530 <___vfprintf_internal_r+0x1e44>
 800850c:	d8c13415 	stw	r3,1232(sp)
 8008510:	040019c4 	movi	r16,103
 8008514:	003e7606 	br	8007ef0 <__alt_data_end+0xfc007ef0>
 8008518:	01020074 	movhi	r4,2049
 800851c:	211e7084 	addi	r4,r4,31170
 8008520:	d9012c15 	stw	r4,1200(sp)
 8008524:	003c8e06 	br	8007760 <__alt_data_end+0xfc007760>
 8008528:	5005883a 	mov	r2,r10
 800852c:	003e6506 	br	8007ec4 <__alt_data_end+0xfc007ec4>
 8008530:	843fff84 	addi	r16,r16,-2
 8008534:	1d7fffc4 	addi	r21,r3,-1
 8008538:	dd412615 	stw	r21,1176(sp)
 800853c:	dc0122c5 	stb	r16,1163(sp)
 8008540:	a8009216 	blt	r21,zero,800878c <___vfprintf_internal_r+0x20a0>
 8008544:	00800ac4 	movi	r2,43
 8008548:	d8812305 	stb	r2,1164(sp)
 800854c:	00800244 	movi	r2,9
 8008550:	1540660e 	bge	r2,r21,80086ec <___vfprintf_internal_r+0x2000>
 8008554:	dcc122c4 	addi	r19,sp,1163
 8008558:	dc012c15 	stw	r16,1200(sp)
 800855c:	4023883a 	mov	r17,r8
 8008560:	9821883a 	mov	r16,r19
 8008564:	a809883a 	mov	r4,r21
 8008568:	01400284 	movi	r5,10
 800856c:	801115c0 	call	801115c <__modsi3>
 8008570:	10800c04 	addi	r2,r2,48
 8008574:	843fffc4 	addi	r16,r16,-1
 8008578:	a809883a 	mov	r4,r21
 800857c:	01400284 	movi	r5,10
 8008580:	80800005 	stb	r2,0(r16)
 8008584:	80111080 	call	8011108 <__divsi3>
 8008588:	01000244 	movi	r4,9
 800858c:	102b883a 	mov	r21,r2
 8008590:	20bff416 	blt	r4,r2,8008564 <__alt_data_end+0xfc008564>
 8008594:	8811883a 	mov	r8,r17
 8008598:	10800c04 	addi	r2,r2,48
 800859c:	8023883a 	mov	r17,r16
 80085a0:	897fffc4 	addi	r5,r17,-1
 80085a4:	88bfffc5 	stb	r2,-1(r17)
 80085a8:	dc012c17 	ldw	r16,1200(sp)
 80085ac:	2cc08a2e 	bgeu	r5,r19,80087d8 <___vfprintf_internal_r+0x20ec>
 80085b0:	d9812384 	addi	r6,sp,1166
 80085b4:	344dc83a 	sub	r6,r6,r17
 80085b8:	d9012344 	addi	r4,sp,1165
 80085bc:	998d883a 	add	r6,r19,r6
 80085c0:	00000106 	br	80085c8 <___vfprintf_internal_r+0x1edc>
 80085c4:	28800003 	ldbu	r2,0(r5)
 80085c8:	20800005 	stb	r2,0(r4)
 80085cc:	21000044 	addi	r4,r4,1
 80085d0:	29400044 	addi	r5,r5,1
 80085d4:	21bffb1e 	bne	r4,r6,80085c4 <__alt_data_end+0xfc0085c4>
 80085d8:	d8812304 	addi	r2,sp,1164
 80085dc:	1445c83a 	sub	r2,r2,r17
 80085e0:	d9412344 	addi	r5,sp,1165
 80085e4:	2885883a 	add	r2,r5,r2
 80085e8:	14e7c83a 	sub	r19,r2,r19
 80085ec:	d8813317 	ldw	r2,1228(sp)
 80085f0:	d8c13317 	ldw	r3,1228(sp)
 80085f4:	dcc13a15 	stw	r19,1256(sp)
 80085f8:	14e3883a 	add	r17,r2,r19
 80085fc:	00800044 	movi	r2,1
 8008600:	10c0550e 	bge	r2,r3,8008758 <___vfprintf_internal_r+0x206c>
 8008604:	8c400044 	addi	r17,r17,1
 8008608:	8839883a 	mov	fp,r17
 800860c:	88005016 	blt	r17,zero,8008750 <___vfprintf_internal_r+0x2064>
 8008610:	d8013415 	stw	zero,1232(sp)
 8008614:	003e3f06 	br	8007f14 <__alt_data_end+0xfc007f14>
 8008618:	da412b15 	stw	r9,1196(sp)
 800861c:	dcc12783 	ldbu	r19,1182(sp)
 8008620:	4823883a 	mov	r17,r9
 8008624:	dc812d15 	stw	r18,1204(sp)
 8008628:	d8013215 	stw	zero,1224(sp)
 800862c:	d8013415 	stw	zero,1232(sp)
 8008630:	0039ae06 	br	8006cec <__alt_data_end+0xfc006cec>
 8008634:	483de91e 	bne	r9,zero,8007ddc <__alt_data_end+0xfc007ddc>
 8008638:	8813883a 	mov	r9,r17
 800863c:	003de706 	br	8007ddc <__alt_data_end+0xfc007ddc>
 8008640:	b809883a 	mov	r4,r23
 8008644:	b00b883a 	mov	r5,r22
 8008648:	d9811e04 	addi	r6,sp,1144
 800864c:	800e6940 	call	800e694 <__sprint_r>
 8008650:	10393e1e 	bne	r2,zero,8006b4c <__alt_data_end+0xfc006b4c>
 8008654:	dc012617 	ldw	r16,1176(sp)
 8008658:	d8c12017 	ldw	r3,1152(sp)
 800865c:	d8811f17 	ldw	r2,1148(sp)
 8008660:	da000404 	addi	r8,sp,16
 8008664:	003ea006 	br	80080e8 <__alt_data_end+0xfc0080e8>
 8008668:	00c00b44 	movi	r3,45
 800866c:	2460003c 	xorhi	r17,r4,32768
 8008670:	d8c12b05 	stb	r3,1196(sp)
 8008674:	003ddf06 	br	8007df4 <__alt_data_end+0xfc007df4>
 8008678:	02400184 	movi	r9,6
 800867c:	003dd706 	br	8007ddc <__alt_data_end+0xfc007ddc>
 8008680:	4d400044 	addi	r21,r9,1
 8008684:	003de206 	br	8007e10 <__alt_data_end+0xfc007e10>
 8008688:	d8c13417 	ldw	r3,1232(sp)
 800868c:	00c0490e 	bge	zero,r3,80087b4 <___vfprintf_internal_r+0x20c8>
 8008690:	04400044 	movi	r17,1
 8008694:	d9013317 	ldw	r4,1228(sp)
 8008698:	8923883a 	add	r17,r17,r4
 800869c:	8839883a 	mov	fp,r17
 80086a0:	883e1c0e 	bge	r17,zero,8007f14 <__alt_data_end+0xfc007f14>
 80086a4:	0039883a 	mov	fp,zero
 80086a8:	003e1a06 	br	8007f14 <__alt_data_end+0xfc007f14>
 80086ac:	00c03b0e 	bge	zero,r3,800879c <___vfprintf_internal_r+0x20b0>
 80086b0:	4800021e 	bne	r9,zero,80086bc <___vfprintf_internal_r+0x1fd0>
 80086b4:	e080004c 	andi	r2,fp,1
 80086b8:	10000626 	beq	r2,zero,80086d4 <___vfprintf_internal_r+0x1fe8>
 80086bc:	d8c13417 	ldw	r3,1232(sp)
 80086c0:	4a400044 	addi	r9,r9,1
 80086c4:	1a63883a 	add	r17,r3,r9
 80086c8:	8839883a 	mov	fp,r17
 80086cc:	883e110e 	bge	r17,zero,8007f14 <__alt_data_end+0xfc007f14>
 80086d0:	003ff406 	br	80086a4 <__alt_data_end+0xfc0086a4>
 80086d4:	1839883a 	mov	fp,r3
 80086d8:	18004116 	blt	r3,zero,80087e0 <___vfprintf_internal_r+0x20f4>
 80086dc:	dc413417 	ldw	r17,1232(sp)
 80086e0:	003e0c06 	br	8007f14 <__alt_data_end+0xfc007f14>
 80086e4:	d8812117 	ldw	r2,1156(sp)
 80086e8:	003df606 	br	8007ec4 <__alt_data_end+0xfc007ec4>
 80086ec:	00800c04 	movi	r2,48
 80086f0:	a8c00c04 	addi	r3,r21,48
 80086f4:	d8812345 	stb	r2,1165(sp)
 80086f8:	d8c12385 	stb	r3,1166(sp)
 80086fc:	d88123c4 	addi	r2,sp,1167
 8008700:	dcc122c4 	addi	r19,sp,1163
 8008704:	003fb806 	br	80085e8 <__alt_data_end+0xfc0085e8>
 8008708:	d9013717 	ldw	r4,1244(sp)
 800870c:	880b883a 	mov	r5,r17
 8008710:	000d883a 	mov	r6,zero
 8008714:	000f883a 	mov	r7,zero
 8008718:	da013f15 	stw	r8,1276(sp)
 800871c:	da413e15 	stw	r9,1272(sp)
 8008720:	da813d15 	stw	r10,1268(sp)
 8008724:	80123e40 	call	80123e4 <__eqdf2>
 8008728:	da013f17 	ldw	r8,1276(sp)
 800872c:	da413e17 	ldw	r9,1272(sp)
 8008730:	da813d17 	ldw	r10,1268(sp)
 8008734:	103f1726 	beq	r2,zero,8008394 <__alt_data_end+0xfc008394>
 8008738:	00800044 	movi	r2,1
 800873c:	1547c83a 	sub	r3,r2,r21
 8008740:	d8c12615 	stw	r3,1176(sp)
 8008744:	003f1406 	br	8008398 <__alt_data_end+0xfc008398>
 8008748:	0005883a 	mov	r2,zero
 800874c:	003f4c06 	br	8008480 <__alt_data_end+0xfc008480>
 8008750:	0039883a 	mov	fp,zero
 8008754:	003fae06 	br	8008610 <__alt_data_end+0xfc008610>
 8008758:	e084703a 	and	r2,fp,r2
 800875c:	103faa26 	beq	r2,zero,8008608 <__alt_data_end+0xfc008608>
 8008760:	003fa806 	br	8008604 <__alt_data_end+0xfc008604>
 8008764:	d9412d17 	ldw	r5,1204(sp)
 8008768:	2a400017 	ldw	r9,0(r5)
 800876c:	28c00104 	addi	r3,r5,4
 8008770:	d8c12d15 	stw	r3,1204(sp)
 8008774:	483ebc0e 	bge	r9,zero,8008268 <__alt_data_end+0xfc008268>
 8008778:	027fffc4 	movi	r9,-1
 800877c:	e4000047 	ldb	r16,1(fp)
 8008780:	00384206 	br	800688c <__alt_data_end+0xfc00688c>
 8008784:	043fffc4 	movi	r16,-1
 8008788:	0038ce06 	br	8006ac4 <__alt_data_end+0xfc006ac4>
 800878c:	00800b44 	movi	r2,45
 8008790:	056bc83a 	sub	r21,zero,r21
 8008794:	d8812305 	stb	r2,1164(sp)
 8008798:	003f6c06 	br	800854c <__alt_data_end+0xfc00854c>
 800879c:	4800081e 	bne	r9,zero,80087c0 <___vfprintf_internal_r+0x20d4>
 80087a0:	e080004c 	andi	r2,fp,1
 80087a4:	1000061e 	bne	r2,zero,80087c0 <___vfprintf_internal_r+0x20d4>
 80087a8:	07000044 	movi	fp,1
 80087ac:	e023883a 	mov	r17,fp
 80087b0:	003dd806 	br	8007f14 <__alt_data_end+0xfc007f14>
 80087b4:	04400084 	movi	r17,2
 80087b8:	88e3c83a 	sub	r17,r17,r3
 80087bc:	003fb506 	br	8008694 <__alt_data_end+0xfc008694>
 80087c0:	4c400084 	addi	r17,r9,2
 80087c4:	8839883a 	mov	fp,r17
 80087c8:	883dd20e 	bge	r17,zero,8007f14 <__alt_data_end+0xfc007f14>
 80087cc:	003fb506 	br	80086a4 <__alt_data_end+0xfc0086a4>
 80087d0:	d8c12617 	ldw	r3,1176(sp)
 80087d4:	003f5706 	br	8008534 <__alt_data_end+0xfc008534>
 80087d8:	d8812344 	addi	r2,sp,1165
 80087dc:	003f8206 	br	80085e8 <__alt_data_end+0xfc0085e8>
 80087e0:	0039883a 	mov	fp,zero
 80087e4:	003fbd06 	br	80086dc <__alt_data_end+0xfc0086dc>

080087e8 <__vfprintf_internal>:
 80087e8:	2007883a 	mov	r3,r4
 80087ec:	010200b4 	movhi	r4,2050
 80087f0:	21264804 	addi	r4,r4,-26336
 80087f4:	21000017 	ldw	r4,0(r4)
 80087f8:	2805883a 	mov	r2,r5
 80087fc:	300f883a 	mov	r7,r6
 8008800:	180b883a 	mov	r5,r3
 8008804:	100d883a 	mov	r6,r2
 8008808:	80066ec1 	jmpi	80066ec <___vfprintf_internal_r>

0800880c <__swsetup_r>:
 800880c:	008200b4 	movhi	r2,2050
 8008810:	defffd04 	addi	sp,sp,-12
 8008814:	10a64804 	addi	r2,r2,-26336
 8008818:	dc400115 	stw	r17,4(sp)
 800881c:	2023883a 	mov	r17,r4
 8008820:	11000017 	ldw	r4,0(r2)
 8008824:	dc000015 	stw	r16,0(sp)
 8008828:	dfc00215 	stw	ra,8(sp)
 800882c:	2821883a 	mov	r16,r5
 8008830:	20000226 	beq	r4,zero,800883c <__swsetup_r+0x30>
 8008834:	20c00e17 	ldw	r3,56(r4)
 8008838:	18002e26 	beq	r3,zero,80088f4 <__swsetup_r+0xe8>
 800883c:	8080030b 	ldhu	r2,12(r16)
 8008840:	10c0020c 	andi	r3,r2,8
 8008844:	100d883a 	mov	r6,r2
 8008848:	18000f26 	beq	r3,zero,8008888 <__swsetup_r+0x7c>
 800884c:	80c00417 	ldw	r3,16(r16)
 8008850:	18001526 	beq	r3,zero,80088a8 <__swsetup_r+0x9c>
 8008854:	1100004c 	andi	r4,r2,1
 8008858:	20001c1e 	bne	r4,zero,80088cc <__swsetup_r+0xc0>
 800885c:	1080008c 	andi	r2,r2,2
 8008860:	1000261e 	bne	r2,zero,80088fc <__swsetup_r+0xf0>
 8008864:	80800517 	ldw	r2,20(r16)
 8008868:	80800215 	stw	r2,8(r16)
 800886c:	18001c26 	beq	r3,zero,80088e0 <__swsetup_r+0xd4>
 8008870:	0005883a 	mov	r2,zero
 8008874:	dfc00217 	ldw	ra,8(sp)
 8008878:	dc400117 	ldw	r17,4(sp)
 800887c:	dc000017 	ldw	r16,0(sp)
 8008880:	dec00304 	addi	sp,sp,12
 8008884:	f800283a 	ret
 8008888:	3080040c 	andi	r2,r6,16
 800888c:	10001726 	beq	r2,zero,80088ec <__swsetup_r+0xe0>
 8008890:	3080010c 	andi	r2,r6,4
 8008894:	10001b1e 	bne	r2,zero,8008904 <__swsetup_r+0xf8>
 8008898:	80c00417 	ldw	r3,16(r16)
 800889c:	30800214 	ori	r2,r6,8
 80088a0:	8080030d 	sth	r2,12(r16)
 80088a4:	183feb1e 	bne	r3,zero,8008854 <__alt_data_end+0xfc008854>
 80088a8:	1140a00c 	andi	r5,r2,640
 80088ac:	01008004 	movi	r4,512
 80088b0:	293fe826 	beq	r5,r4,8008854 <__alt_data_end+0xfc008854>
 80088b4:	8809883a 	mov	r4,r17
 80088b8:	800b883a 	mov	r5,r16
 80088bc:	800b5340 	call	800b534 <__smakebuf_r>
 80088c0:	8080030b 	ldhu	r2,12(r16)
 80088c4:	80c00417 	ldw	r3,16(r16)
 80088c8:	003fe206 	br	8008854 <__alt_data_end+0xfc008854>
 80088cc:	80800517 	ldw	r2,20(r16)
 80088d0:	80000215 	stw	zero,8(r16)
 80088d4:	0085c83a 	sub	r2,zero,r2
 80088d8:	80800615 	stw	r2,24(r16)
 80088dc:	183fe41e 	bne	r3,zero,8008870 <__alt_data_end+0xfc008870>
 80088e0:	8080030b 	ldhu	r2,12(r16)
 80088e4:	1080200c 	andi	r2,r2,128
 80088e8:	103fe226 	beq	r2,zero,8008874 <__alt_data_end+0xfc008874>
 80088ec:	00bfffc4 	movi	r2,-1
 80088f0:	003fe006 	br	8008874 <__alt_data_end+0xfc008874>
 80088f4:	800a9dc0 	call	800a9dc <__sinit>
 80088f8:	003fd006 	br	800883c <__alt_data_end+0xfc00883c>
 80088fc:	0005883a 	mov	r2,zero
 8008900:	003fd906 	br	8008868 <__alt_data_end+0xfc008868>
 8008904:	81400c17 	ldw	r5,48(r16)
 8008908:	28000626 	beq	r5,zero,8008924 <__swsetup_r+0x118>
 800890c:	80801004 	addi	r2,r16,64
 8008910:	28800326 	beq	r5,r2,8008920 <__swsetup_r+0x114>
 8008914:	8809883a 	mov	r4,r17
 8008918:	800ab500 	call	800ab50 <_free_r>
 800891c:	8180030b 	ldhu	r6,12(r16)
 8008920:	80000c15 	stw	zero,48(r16)
 8008924:	80c00417 	ldw	r3,16(r16)
 8008928:	00bff6c4 	movi	r2,-37
 800892c:	118c703a 	and	r6,r2,r6
 8008930:	80000115 	stw	zero,4(r16)
 8008934:	80c00015 	stw	r3,0(r16)
 8008938:	003fd806 	br	800889c <__alt_data_end+0xfc00889c>

0800893c <__call_exitprocs>:
 800893c:	008200b4 	movhi	r2,2050
 8008940:	10a64704 	addi	r2,r2,-26340
 8008944:	10800017 	ldw	r2,0(r2)
 8008948:	defff404 	addi	sp,sp,-48
 800894c:	dd800815 	stw	r22,32(sp)
 8008950:	d8800015 	stw	r2,0(sp)
 8008954:	10805204 	addi	r2,r2,328
 8008958:	dd000615 	stw	r20,24(sp)
 800895c:	dc800415 	stw	r18,16(sp)
 8008960:	dfc00b15 	stw	ra,44(sp)
 8008964:	df000a15 	stw	fp,40(sp)
 8008968:	ddc00915 	stw	r23,36(sp)
 800896c:	dd400715 	stw	r21,28(sp)
 8008970:	dcc00515 	stw	r19,20(sp)
 8008974:	dc400315 	stw	r17,12(sp)
 8008978:	dc000215 	stw	r16,8(sp)
 800897c:	2025883a 	mov	r18,r4
 8008980:	2829883a 	mov	r20,r5
 8008984:	d8800115 	stw	r2,4(sp)
 8008988:	05bfffc4 	movi	r22,-1
 800898c:	d8800017 	ldw	r2,0(sp)
 8008990:	14c05217 	ldw	r19,328(r2)
 8008994:	98001d26 	beq	r19,zero,8008a0c <__call_exitprocs+0xd0>
 8008998:	dd400117 	ldw	r21,4(sp)
 800899c:	98800117 	ldw	r2,4(r19)
 80089a0:	173fffc4 	addi	fp,r2,-1
 80089a4:	e0000d16 	blt	fp,zero,80089dc <__call_exitprocs+0xa0>
 80089a8:	14000044 	addi	r16,r2,1
 80089ac:	8421883a 	add	r16,r16,r16
 80089b0:	8421883a 	add	r16,r16,r16
 80089b4:	84402004 	addi	r17,r16,128
 80089b8:	9c63883a 	add	r17,r19,r17
 80089bc:	9c21883a 	add	r16,r19,r16
 80089c0:	a0001e26 	beq	r20,zero,8008a3c <__call_exitprocs+0x100>
 80089c4:	80804017 	ldw	r2,256(r16)
 80089c8:	15001c26 	beq	r2,r20,8008a3c <__call_exitprocs+0x100>
 80089cc:	e73fffc4 	addi	fp,fp,-1
 80089d0:	843fff04 	addi	r16,r16,-4
 80089d4:	8c7fff04 	addi	r17,r17,-4
 80089d8:	e5bff91e 	bne	fp,r22,80089c0 <__alt_data_end+0xfc0089c0>
 80089dc:	00820034 	movhi	r2,2048
 80089e0:	108d4104 	addi	r2,r2,13572
 80089e4:	10000926 	beq	r2,zero,8008a0c <__call_exitprocs+0xd0>
 80089e8:	98800117 	ldw	r2,4(r19)
 80089ec:	1000311e 	bne	r2,zero,8008ab4 <__call_exitprocs+0x178>
 80089f0:	98800017 	ldw	r2,0(r19)
 80089f4:	10003426 	beq	r2,zero,8008ac8 <__call_exitprocs+0x18c>
 80089f8:	9809883a 	mov	r4,r19
 80089fc:	a8800015 	stw	r2,0(r21)
 8008a00:	80035040 	call	8003504 <free>
 8008a04:	acc00017 	ldw	r19,0(r21)
 8008a08:	983fe41e 	bne	r19,zero,800899c <__alt_data_end+0xfc00899c>
 8008a0c:	dfc00b17 	ldw	ra,44(sp)
 8008a10:	df000a17 	ldw	fp,40(sp)
 8008a14:	ddc00917 	ldw	r23,36(sp)
 8008a18:	dd800817 	ldw	r22,32(sp)
 8008a1c:	dd400717 	ldw	r21,28(sp)
 8008a20:	dd000617 	ldw	r20,24(sp)
 8008a24:	dcc00517 	ldw	r19,20(sp)
 8008a28:	dc800417 	ldw	r18,16(sp)
 8008a2c:	dc400317 	ldw	r17,12(sp)
 8008a30:	dc000217 	ldw	r16,8(sp)
 8008a34:	dec00c04 	addi	sp,sp,48
 8008a38:	f800283a 	ret
 8008a3c:	98800117 	ldw	r2,4(r19)
 8008a40:	80c00017 	ldw	r3,0(r16)
 8008a44:	10bfffc4 	addi	r2,r2,-1
 8008a48:	17001526 	beq	r2,fp,8008aa0 <__call_exitprocs+0x164>
 8008a4c:	80000015 	stw	zero,0(r16)
 8008a50:	183fde26 	beq	r3,zero,80089cc <__alt_data_end+0xfc0089cc>
 8008a54:	00800044 	movi	r2,1
 8008a58:	1708983a 	sll	r4,r2,fp
 8008a5c:	98806217 	ldw	r2,392(r19)
 8008a60:	9dc00117 	ldw	r23,4(r19)
 8008a64:	2084703a 	and	r2,r4,r2
 8008a68:	1000061e 	bne	r2,zero,8008a84 <__call_exitprocs+0x148>
 8008a6c:	183ee83a 	callr	r3
 8008a70:	98800117 	ldw	r2,4(r19)
 8008a74:	15ffc51e 	bne	r2,r23,800898c <__alt_data_end+0xfc00898c>
 8008a78:	a8800017 	ldw	r2,0(r21)
 8008a7c:	14ffd326 	beq	r2,r19,80089cc <__alt_data_end+0xfc0089cc>
 8008a80:	003fc206 	br	800898c <__alt_data_end+0xfc00898c>
 8008a84:	98806317 	ldw	r2,396(r19)
 8008a88:	2084703a 	and	r2,r4,r2
 8008a8c:	1000061e 	bne	r2,zero,8008aa8 <__call_exitprocs+0x16c>
 8008a90:	89400017 	ldw	r5,0(r17)
 8008a94:	9009883a 	mov	r4,r18
 8008a98:	183ee83a 	callr	r3
 8008a9c:	003ff406 	br	8008a70 <__alt_data_end+0xfc008a70>
 8008aa0:	9f000115 	stw	fp,4(r19)
 8008aa4:	003fea06 	br	8008a50 <__alt_data_end+0xfc008a50>
 8008aa8:	89000017 	ldw	r4,0(r17)
 8008aac:	183ee83a 	callr	r3
 8008ab0:	003fef06 	br	8008a70 <__alt_data_end+0xfc008a70>
 8008ab4:	98800017 	ldw	r2,0(r19)
 8008ab8:	982b883a 	mov	r21,r19
 8008abc:	1027883a 	mov	r19,r2
 8008ac0:	983fb61e 	bne	r19,zero,800899c <__alt_data_end+0xfc00899c>
 8008ac4:	003fd106 	br	8008a0c <__alt_data_end+0xfc008a0c>
 8008ac8:	0005883a 	mov	r2,zero
 8008acc:	003ffa06 	br	8008ab8 <__alt_data_end+0xfc008ab8>

08008ad0 <quorem>:
 8008ad0:	defff204 	addi	sp,sp,-56
 8008ad4:	ddc00b15 	stw	r23,44(sp)
 8008ad8:	20800417 	ldw	r2,16(r4)
 8008adc:	2dc00417 	ldw	r23,16(r5)
 8008ae0:	dfc00d15 	stw	ra,52(sp)
 8008ae4:	df000c15 	stw	fp,48(sp)
 8008ae8:	dd800a15 	stw	r22,40(sp)
 8008aec:	dd400915 	stw	r21,36(sp)
 8008af0:	dd000815 	stw	r20,32(sp)
 8008af4:	dcc00715 	stw	r19,28(sp)
 8008af8:	dc800615 	stw	r18,24(sp)
 8008afc:	dc400515 	stw	r17,20(sp)
 8008b00:	dc000415 	stw	r16,16(sp)
 8008b04:	15c07a16 	blt	r2,r23,8008cf0 <quorem+0x220>
 8008b08:	bdffffc4 	addi	r23,r23,-1
 8008b0c:	bde9883a 	add	r20,r23,r23
 8008b10:	28c00504 	addi	r3,r5,20
 8008b14:	a529883a 	add	r20,r20,r20
 8008b18:	1d39883a 	add	fp,r3,r20
 8008b1c:	24c00504 	addi	r19,r4,20
 8008b20:	d9400215 	stw	r5,8(sp)
 8008b24:	9d29883a 	add	r20,r19,r20
 8008b28:	e1400017 	ldw	r5,0(fp)
 8008b2c:	d9000015 	stw	r4,0(sp)
 8008b30:	a1000017 	ldw	r4,0(r20)
 8008b34:	29400044 	addi	r5,r5,1
 8008b38:	d8c00115 	stw	r3,4(sp)
 8008b3c:	dd000315 	stw	r20,12(sp)
 8008b40:	80111b80 	call	80111b8 <__udivsi3>
 8008b44:	1025883a 	mov	r18,r2
 8008b48:	10003026 	beq	r2,zero,8008c0c <quorem+0x13c>
 8008b4c:	dc400117 	ldw	r17,4(sp)
 8008b50:	9829883a 	mov	r20,r19
 8008b54:	002d883a 	mov	r22,zero
 8008b58:	0021883a 	mov	r16,zero
 8008b5c:	8d400017 	ldw	r21,0(r17)
 8008b60:	900b883a 	mov	r5,r18
 8008b64:	8c400104 	addi	r17,r17,4
 8008b68:	a93fffcc 	andi	r4,r21,65535
 8008b6c:	8002f580 	call	8002f58 <__mulsi3>
 8008b70:	a808d43a 	srli	r4,r21,16
 8008b74:	900b883a 	mov	r5,r18
 8008b78:	b0ad883a 	add	r22,r22,r2
 8008b7c:	8002f580 	call	8002f58 <__mulsi3>
 8008b80:	a1000017 	ldw	r4,0(r20)
 8008b84:	b00cd43a 	srli	r6,r22,16
 8008b88:	b0ffffcc 	andi	r3,r22,65535
 8008b8c:	217fffcc 	andi	r5,r4,65535
 8008b90:	2c21883a 	add	r16,r5,r16
 8008b94:	80c7c83a 	sub	r3,r16,r3
 8008b98:	2008d43a 	srli	r4,r4,16
 8008b9c:	3085883a 	add	r2,r6,r2
 8008ba0:	1821d43a 	srai	r16,r3,16
 8008ba4:	117fffcc 	andi	r5,r2,65535
 8008ba8:	2149c83a 	sub	r4,r4,r5
 8008bac:	2421883a 	add	r16,r4,r16
 8008bb0:	8008943a 	slli	r4,r16,16
 8008bb4:	18ffffcc 	andi	r3,r3,65535
 8008bb8:	102cd43a 	srli	r22,r2,16
 8008bbc:	20c8b03a 	or	r4,r4,r3
 8008bc0:	a1000015 	stw	r4,0(r20)
 8008bc4:	8021d43a 	srai	r16,r16,16
 8008bc8:	a5000104 	addi	r20,r20,4
 8008bcc:	e47fe32e 	bgeu	fp,r17,8008b5c <__alt_data_end+0xfc008b5c>
 8008bd0:	d8c00317 	ldw	r3,12(sp)
 8008bd4:	18800017 	ldw	r2,0(r3)
 8008bd8:	10000c1e 	bne	r2,zero,8008c0c <quorem+0x13c>
 8008bdc:	18bfff04 	addi	r2,r3,-4
 8008be0:	9880082e 	bgeu	r19,r2,8008c04 <quorem+0x134>
 8008be4:	18ffff17 	ldw	r3,-4(r3)
 8008be8:	18000326 	beq	r3,zero,8008bf8 <quorem+0x128>
 8008bec:	00000506 	br	8008c04 <quorem+0x134>
 8008bf0:	10c00017 	ldw	r3,0(r2)
 8008bf4:	1800031e 	bne	r3,zero,8008c04 <quorem+0x134>
 8008bf8:	10bfff04 	addi	r2,r2,-4
 8008bfc:	bdffffc4 	addi	r23,r23,-1
 8008c00:	98bffb36 	bltu	r19,r2,8008bf0 <__alt_data_end+0xfc008bf0>
 8008c04:	d8c00017 	ldw	r3,0(sp)
 8008c08:	1dc00415 	stw	r23,16(r3)
 8008c0c:	d9000017 	ldw	r4,0(sp)
 8008c10:	d9400217 	ldw	r5,8(sp)
 8008c14:	800c3e40 	call	800c3e4 <__mcmp>
 8008c18:	10002816 	blt	r2,zero,8008cbc <quorem+0x1ec>
 8008c1c:	dc400117 	ldw	r17,4(sp)
 8008c20:	94800044 	addi	r18,r18,1
 8008c24:	980d883a 	mov	r6,r19
 8008c28:	0007883a 	mov	r3,zero
 8008c2c:	31000017 	ldw	r4,0(r6)
 8008c30:	89400017 	ldw	r5,0(r17)
 8008c34:	31800104 	addi	r6,r6,4
 8008c38:	20bfffcc 	andi	r2,r4,65535
 8008c3c:	10c7883a 	add	r3,r2,r3
 8008c40:	28bfffcc 	andi	r2,r5,65535
 8008c44:	1885c83a 	sub	r2,r3,r2
 8008c48:	280ad43a 	srli	r5,r5,16
 8008c4c:	2008d43a 	srli	r4,r4,16
 8008c50:	1007d43a 	srai	r3,r2,16
 8008c54:	10bfffcc 	andi	r2,r2,65535
 8008c58:	2149c83a 	sub	r4,r4,r5
 8008c5c:	20c9883a 	add	r4,r4,r3
 8008c60:	200a943a 	slli	r5,r4,16
 8008c64:	8c400104 	addi	r17,r17,4
 8008c68:	2007d43a 	srai	r3,r4,16
 8008c6c:	2884b03a 	or	r2,r5,r2
 8008c70:	30bfff15 	stw	r2,-4(r6)
 8008c74:	e47fed2e 	bgeu	fp,r17,8008c2c <__alt_data_end+0xfc008c2c>
 8008c78:	bdc5883a 	add	r2,r23,r23
 8008c7c:	1085883a 	add	r2,r2,r2
 8008c80:	9887883a 	add	r3,r19,r2
 8008c84:	18800017 	ldw	r2,0(r3)
 8008c88:	10000c1e 	bne	r2,zero,8008cbc <quorem+0x1ec>
 8008c8c:	18bfff04 	addi	r2,r3,-4
 8008c90:	9880082e 	bgeu	r19,r2,8008cb4 <quorem+0x1e4>
 8008c94:	18ffff17 	ldw	r3,-4(r3)
 8008c98:	18000326 	beq	r3,zero,8008ca8 <quorem+0x1d8>
 8008c9c:	00000506 	br	8008cb4 <quorem+0x1e4>
 8008ca0:	10c00017 	ldw	r3,0(r2)
 8008ca4:	1800031e 	bne	r3,zero,8008cb4 <quorem+0x1e4>
 8008ca8:	10bfff04 	addi	r2,r2,-4
 8008cac:	bdffffc4 	addi	r23,r23,-1
 8008cb0:	98bffb36 	bltu	r19,r2,8008ca0 <__alt_data_end+0xfc008ca0>
 8008cb4:	d8c00017 	ldw	r3,0(sp)
 8008cb8:	1dc00415 	stw	r23,16(r3)
 8008cbc:	9005883a 	mov	r2,r18
 8008cc0:	dfc00d17 	ldw	ra,52(sp)
 8008cc4:	df000c17 	ldw	fp,48(sp)
 8008cc8:	ddc00b17 	ldw	r23,44(sp)
 8008ccc:	dd800a17 	ldw	r22,40(sp)
 8008cd0:	dd400917 	ldw	r21,36(sp)
 8008cd4:	dd000817 	ldw	r20,32(sp)
 8008cd8:	dcc00717 	ldw	r19,28(sp)
 8008cdc:	dc800617 	ldw	r18,24(sp)
 8008ce0:	dc400517 	ldw	r17,20(sp)
 8008ce4:	dc000417 	ldw	r16,16(sp)
 8008ce8:	dec00e04 	addi	sp,sp,56
 8008cec:	f800283a 	ret
 8008cf0:	0005883a 	mov	r2,zero
 8008cf4:	003ff206 	br	8008cc0 <__alt_data_end+0xfc008cc0>

08008cf8 <_dtoa_r>:
 8008cf8:	20801017 	ldw	r2,64(r4)
 8008cfc:	deffde04 	addi	sp,sp,-136
 8008d00:	dd401d15 	stw	r21,116(sp)
 8008d04:	dcc01b15 	stw	r19,108(sp)
 8008d08:	dc801a15 	stw	r18,104(sp)
 8008d0c:	dc401915 	stw	r17,100(sp)
 8008d10:	dc001815 	stw	r16,96(sp)
 8008d14:	dfc02115 	stw	ra,132(sp)
 8008d18:	df002015 	stw	fp,128(sp)
 8008d1c:	ddc01f15 	stw	r23,124(sp)
 8008d20:	dd801e15 	stw	r22,120(sp)
 8008d24:	dd001c15 	stw	r20,112(sp)
 8008d28:	d9c00315 	stw	r7,12(sp)
 8008d2c:	2021883a 	mov	r16,r4
 8008d30:	302b883a 	mov	r21,r6
 8008d34:	2825883a 	mov	r18,r5
 8008d38:	dc402417 	ldw	r17,144(sp)
 8008d3c:	3027883a 	mov	r19,r6
 8008d40:	10000826 	beq	r2,zero,8008d64 <_dtoa_r+0x6c>
 8008d44:	21801117 	ldw	r6,68(r4)
 8008d48:	00c00044 	movi	r3,1
 8008d4c:	100b883a 	mov	r5,r2
 8008d50:	1986983a 	sll	r3,r3,r6
 8008d54:	11800115 	stw	r6,4(r2)
 8008d58:	10c00215 	stw	r3,8(r2)
 8008d5c:	800bb100 	call	800bb10 <_Bfree>
 8008d60:	80001015 	stw	zero,64(r16)
 8008d64:	a8002d16 	blt	r21,zero,8008e1c <_dtoa_r+0x124>
 8008d68:	88000015 	stw	zero,0(r17)
 8008d6c:	a8dffc2c 	andhi	r3,r21,32752
 8008d70:	009ffc34 	movhi	r2,32752
 8008d74:	18801b26 	beq	r3,r2,8008de4 <_dtoa_r+0xec>
 8008d78:	9009883a 	mov	r4,r18
 8008d7c:	980b883a 	mov	r5,r19
 8008d80:	000d883a 	mov	r6,zero
 8008d84:	000f883a 	mov	r7,zero
 8008d88:	80123e40 	call	80123e4 <__eqdf2>
 8008d8c:	10002a1e 	bne	r2,zero,8008e38 <_dtoa_r+0x140>
 8008d90:	d8c02317 	ldw	r3,140(sp)
 8008d94:	d9002517 	ldw	r4,148(sp)
 8008d98:	00800044 	movi	r2,1
 8008d9c:	18800015 	stw	r2,0(r3)
 8008da0:	2001a226 	beq	r4,zero,800942c <_dtoa_r+0x734>
 8008da4:	00820074 	movhi	r2,2049
 8008da8:	109e6844 	addi	r2,r2,31137
 8008dac:	20800015 	stw	r2,0(r4)
 8008db0:	10bfffc4 	addi	r2,r2,-1
 8008db4:	dfc02117 	ldw	ra,132(sp)
 8008db8:	df002017 	ldw	fp,128(sp)
 8008dbc:	ddc01f17 	ldw	r23,124(sp)
 8008dc0:	dd801e17 	ldw	r22,120(sp)
 8008dc4:	dd401d17 	ldw	r21,116(sp)
 8008dc8:	dd001c17 	ldw	r20,112(sp)
 8008dcc:	dcc01b17 	ldw	r19,108(sp)
 8008dd0:	dc801a17 	ldw	r18,104(sp)
 8008dd4:	dc401917 	ldw	r17,100(sp)
 8008dd8:	dc001817 	ldw	r16,96(sp)
 8008ddc:	dec02204 	addi	sp,sp,136
 8008de0:	f800283a 	ret
 8008de4:	d8c02317 	ldw	r3,140(sp)
 8008de8:	0089c3c4 	movi	r2,9999
 8008dec:	18800015 	stw	r2,0(r3)
 8008df0:	90017c26 	beq	r18,zero,80093e4 <_dtoa_r+0x6ec>
 8008df4:	00820074 	movhi	r2,2049
 8008df8:	109e7c04 	addi	r2,r2,31216
 8008dfc:	d9002517 	ldw	r4,148(sp)
 8008e00:	203fec26 	beq	r4,zero,8008db4 <__alt_data_end+0xfc008db4>
 8008e04:	10c000c7 	ldb	r3,3(r2)
 8008e08:	18017d1e 	bne	r3,zero,8009400 <_dtoa_r+0x708>
 8008e0c:	10c000c4 	addi	r3,r2,3
 8008e10:	d9802517 	ldw	r6,148(sp)
 8008e14:	30c00015 	stw	r3,0(r6)
 8008e18:	003fe606 	br	8008db4 <__alt_data_end+0xfc008db4>
 8008e1c:	04e00034 	movhi	r19,32768
 8008e20:	9cffffc4 	addi	r19,r19,-1
 8008e24:	00800044 	movi	r2,1
 8008e28:	ace6703a 	and	r19,r21,r19
 8008e2c:	88800015 	stw	r2,0(r17)
 8008e30:	982b883a 	mov	r21,r19
 8008e34:	003fcd06 	br	8008d6c <__alt_data_end+0xfc008d6c>
 8008e38:	d8800204 	addi	r2,sp,8
 8008e3c:	a822d53a 	srli	r17,r21,20
 8008e40:	d8800015 	stw	r2,0(sp)
 8008e44:	8009883a 	mov	r4,r16
 8008e48:	900b883a 	mov	r5,r18
 8008e4c:	980d883a 	mov	r6,r19
 8008e50:	d9c00104 	addi	r7,sp,4
 8008e54:	800c7580 	call	800c758 <__d2b>
 8008e58:	1039883a 	mov	fp,r2
 8008e5c:	88016a1e 	bne	r17,zero,8009408 <_dtoa_r+0x710>
 8008e60:	dd000217 	ldw	r20,8(sp)
 8008e64:	dc400117 	ldw	r17,4(sp)
 8008e68:	00befbc4 	movi	r2,-1041
 8008e6c:	a463883a 	add	r17,r20,r17
 8008e70:	8882ea16 	blt	r17,r2,8009a1c <_dtoa_r+0xd24>
 8008e74:	00bf0384 	movi	r2,-1010
 8008e78:	1445c83a 	sub	r2,r2,r17
 8008e7c:	89010484 	addi	r4,r17,1042
 8008e80:	a8aa983a 	sll	r21,r21,r2
 8008e84:	9108d83a 	srl	r4,r18,r4
 8008e88:	a908b03a 	or	r4,r21,r4
 8008e8c:	80138bc0 	call	80138bc <__floatunsidf>
 8008e90:	017f8434 	movhi	r5,65040
 8008e94:	01800044 	movi	r6,1
 8008e98:	1009883a 	mov	r4,r2
 8008e9c:	194b883a 	add	r5,r3,r5
 8008ea0:	8c7fffc4 	addi	r17,r17,-1
 8008ea4:	d9800f15 	stw	r6,60(sp)
 8008ea8:	000d883a 	mov	r6,zero
 8008eac:	01cffe34 	movhi	r7,16376
 8008eb0:	8012e940 	call	8012e94 <__subdf3>
 8008eb4:	0198dbf4 	movhi	r6,25455
 8008eb8:	01cff4f4 	movhi	r7,16339
 8008ebc:	1009883a 	mov	r4,r2
 8008ec0:	180b883a 	mov	r5,r3
 8008ec4:	3190d844 	addi	r6,r6,17249
 8008ec8:	39e1e9c4 	addi	r7,r7,-30809
 8008ecc:	80126280 	call	8012628 <__muldf3>
 8008ed0:	01a2d874 	movhi	r6,35681
 8008ed4:	01cff1f4 	movhi	r7,16327
 8008ed8:	180b883a 	mov	r5,r3
 8008edc:	31b22cc4 	addi	r6,r6,-14157
 8008ee0:	39e28a04 	addi	r7,r7,-30168
 8008ee4:	1009883a 	mov	r4,r2
 8008ee8:	80111c80 	call	80111c8 <__adddf3>
 8008eec:	8809883a 	mov	r4,r17
 8008ef0:	102d883a 	mov	r22,r2
 8008ef4:	182b883a 	mov	r21,r3
 8008ef8:	80137ec0 	call	80137ec <__floatsidf>
 8008efc:	019427f4 	movhi	r6,20639
 8008f00:	01cff4f4 	movhi	r7,16339
 8008f04:	1009883a 	mov	r4,r2
 8008f08:	180b883a 	mov	r5,r3
 8008f0c:	319e7ec4 	addi	r6,r6,31227
 8008f10:	39d104c4 	addi	r7,r7,17427
 8008f14:	80126280 	call	8012628 <__muldf3>
 8008f18:	b009883a 	mov	r4,r22
 8008f1c:	a80b883a 	mov	r5,r21
 8008f20:	100d883a 	mov	r6,r2
 8008f24:	180f883a 	mov	r7,r3
 8008f28:	80111c80 	call	80111c8 <__adddf3>
 8008f2c:	1009883a 	mov	r4,r2
 8008f30:	180b883a 	mov	r5,r3
 8008f34:	102d883a 	mov	r22,r2
 8008f38:	182b883a 	mov	r21,r3
 8008f3c:	80137640 	call	8013764 <__fixdfsi>
 8008f40:	b009883a 	mov	r4,r22
 8008f44:	a80b883a 	mov	r5,r21
 8008f48:	000d883a 	mov	r6,zero
 8008f4c:	000f883a 	mov	r7,zero
 8008f50:	d8800515 	stw	r2,20(sp)
 8008f54:	80125480 	call	8012548 <__ledf2>
 8008f58:	10023116 	blt	r2,zero,8009820 <_dtoa_r+0xb28>
 8008f5c:	d8c00517 	ldw	r3,20(sp)
 8008f60:	00800584 	movi	r2,22
 8008f64:	10c21f36 	bltu	r2,r3,80097e4 <_dtoa_r+0xaec>
 8008f68:	180490fa 	slli	r2,r3,3
 8008f6c:	00c20074 	movhi	r3,2049
 8008f70:	18de9704 	addi	r3,r3,31324
 8008f74:	1885883a 	add	r2,r3,r2
 8008f78:	11000017 	ldw	r4,0(r2)
 8008f7c:	11400117 	ldw	r5,4(r2)
 8008f80:	900d883a 	mov	r6,r18
 8008f84:	980f883a 	mov	r7,r19
 8008f88:	80124680 	call	8012468 <__gedf2>
 8008f8c:	0082a70e 	bge	zero,r2,8009a2c <_dtoa_r+0xd34>
 8008f90:	d9000517 	ldw	r4,20(sp)
 8008f94:	d8000c15 	stw	zero,48(sp)
 8008f98:	213fffc4 	addi	r4,r4,-1
 8008f9c:	d9000515 	stw	r4,20(sp)
 8008fa0:	a463c83a 	sub	r17,r20,r17
 8008fa4:	8dbfffc4 	addi	r22,r17,-1
 8008fa8:	b0021916 	blt	r22,zero,8009810 <_dtoa_r+0xb18>
 8008fac:	d8000815 	stw	zero,32(sp)
 8008fb0:	d8800517 	ldw	r2,20(sp)
 8008fb4:	10020e16 	blt	r2,zero,80097f0 <_dtoa_r+0xaf8>
 8008fb8:	b0ad883a 	add	r22,r22,r2
 8008fbc:	d8800a15 	stw	r2,40(sp)
 8008fc0:	d8000915 	stw	zero,36(sp)
 8008fc4:	d8c00317 	ldw	r3,12(sp)
 8008fc8:	00800244 	movi	r2,9
 8008fcc:	10c11a36 	bltu	r2,r3,8009438 <_dtoa_r+0x740>
 8008fd0:	00800144 	movi	r2,5
 8008fd4:	10c4fc0e 	bge	r2,r3,800a3c8 <_dtoa_r+0x16d0>
 8008fd8:	18ffff04 	addi	r3,r3,-4
 8008fdc:	d8c00315 	stw	r3,12(sp)
 8008fe0:	0029883a 	mov	r20,zero
 8008fe4:	d9800317 	ldw	r6,12(sp)
 8008fe8:	008000c4 	movi	r2,3
 8008fec:	3083bd26 	beq	r6,r2,8009ee4 <_dtoa_r+0x11ec>
 8008ff0:	1183670e 	bge	r2,r6,8009d90 <_dtoa_r+0x1098>
 8008ff4:	d8c00317 	ldw	r3,12(sp)
 8008ff8:	00800104 	movi	r2,4
 8008ffc:	1882e726 	beq	r3,r2,8009b9c <_dtoa_r+0xea4>
 8009000:	00800144 	movi	r2,5
 8009004:	1884f21e 	bne	r3,r2,800a3d0 <_dtoa_r+0x16d8>
 8009008:	00800044 	movi	r2,1
 800900c:	d8800b15 	stw	r2,44(sp)
 8009010:	d8c02217 	ldw	r3,136(sp)
 8009014:	d9000517 	ldw	r4,20(sp)
 8009018:	1907883a 	add	r3,r3,r4
 800901c:	19800044 	addi	r6,r3,1
 8009020:	d8c00d15 	stw	r3,52(sp)
 8009024:	d9800615 	stw	r6,24(sp)
 8009028:	0183c30e 	bge	zero,r6,8009f38 <_dtoa_r+0x1240>
 800902c:	d9800617 	ldw	r6,24(sp)
 8009030:	3023883a 	mov	r17,r6
 8009034:	80001115 	stw	zero,68(r16)
 8009038:	008005c4 	movi	r2,23
 800903c:	1184f62e 	bgeu	r2,r6,800a418 <_dtoa_r+0x1720>
 8009040:	00c00044 	movi	r3,1
 8009044:	00800104 	movi	r2,4
 8009048:	1085883a 	add	r2,r2,r2
 800904c:	11000504 	addi	r4,r2,20
 8009050:	180b883a 	mov	r5,r3
 8009054:	18c00044 	addi	r3,r3,1
 8009058:	313ffb2e 	bgeu	r6,r4,8009048 <__alt_data_end+0xfc009048>
 800905c:	81401115 	stw	r5,68(r16)
 8009060:	8009883a 	mov	r4,r16
 8009064:	800ba680 	call	800ba68 <_Balloc>
 8009068:	d8800715 	stw	r2,28(sp)
 800906c:	80801015 	stw	r2,64(r16)
 8009070:	00800384 	movi	r2,14
 8009074:	1440fd36 	bltu	r2,r17,800946c <_dtoa_r+0x774>
 8009078:	a000fc26 	beq	r20,zero,800946c <_dtoa_r+0x774>
 800907c:	d8800517 	ldw	r2,20(sp)
 8009080:	0083b90e 	bge	zero,r2,8009f68 <_dtoa_r+0x1270>
 8009084:	d8c00517 	ldw	r3,20(sp)
 8009088:	108003cc 	andi	r2,r2,15
 800908c:	100490fa 	slli	r2,r2,3
 8009090:	182fd13a 	srai	r23,r3,4
 8009094:	00c20074 	movhi	r3,2049
 8009098:	18de9704 	addi	r3,r3,31324
 800909c:	1885883a 	add	r2,r3,r2
 80090a0:	b8c0040c 	andi	r3,r23,16
 80090a4:	12c00017 	ldw	r11,0(r2)
 80090a8:	12800117 	ldw	r10,4(r2)
 80090ac:	18039726 	beq	r3,zero,8009f0c <_dtoa_r+0x1214>
 80090b0:	00820074 	movhi	r2,2049
 80090b4:	109e8d04 	addi	r2,r2,31284
 80090b8:	11800817 	ldw	r6,32(r2)
 80090bc:	11c00917 	ldw	r7,36(r2)
 80090c0:	9009883a 	mov	r4,r18
 80090c4:	980b883a 	mov	r5,r19
 80090c8:	da801615 	stw	r10,88(sp)
 80090cc:	dac01515 	stw	r11,84(sp)
 80090d0:	8011a640 	call	8011a64 <__divdf3>
 80090d4:	da801617 	ldw	r10,88(sp)
 80090d8:	dac01517 	ldw	r11,84(sp)
 80090dc:	bdc003cc 	andi	r23,r23,15
 80090e0:	044000c4 	movi	r17,3
 80090e4:	d8800e15 	stw	r2,56(sp)
 80090e8:	182b883a 	mov	r21,r3
 80090ec:	b8001126 	beq	r23,zero,8009134 <_dtoa_r+0x43c>
 80090f0:	05020074 	movhi	r20,2049
 80090f4:	a51e8d04 	addi	r20,r20,31284
 80090f8:	5805883a 	mov	r2,r11
 80090fc:	5007883a 	mov	r3,r10
 8009100:	b980004c 	andi	r6,r23,1
 8009104:	1009883a 	mov	r4,r2
 8009108:	b82fd07a 	srai	r23,r23,1
 800910c:	180b883a 	mov	r5,r3
 8009110:	30000426 	beq	r6,zero,8009124 <_dtoa_r+0x42c>
 8009114:	a1800017 	ldw	r6,0(r20)
 8009118:	a1c00117 	ldw	r7,4(r20)
 800911c:	8c400044 	addi	r17,r17,1
 8009120:	80126280 	call	8012628 <__muldf3>
 8009124:	a5000204 	addi	r20,r20,8
 8009128:	b83ff51e 	bne	r23,zero,8009100 <__alt_data_end+0xfc009100>
 800912c:	1017883a 	mov	r11,r2
 8009130:	1815883a 	mov	r10,r3
 8009134:	d9000e17 	ldw	r4,56(sp)
 8009138:	a80b883a 	mov	r5,r21
 800913c:	580d883a 	mov	r6,r11
 8009140:	500f883a 	mov	r7,r10
 8009144:	8011a640 	call	8011a64 <__divdf3>
 8009148:	1029883a 	mov	r20,r2
 800914c:	182b883a 	mov	r21,r3
 8009150:	d9800c17 	ldw	r6,48(sp)
 8009154:	30000626 	beq	r6,zero,8009170 <_dtoa_r+0x478>
 8009158:	a009883a 	mov	r4,r20
 800915c:	a80b883a 	mov	r5,r21
 8009160:	000d883a 	mov	r6,zero
 8009164:	01cffc34 	movhi	r7,16368
 8009168:	80125480 	call	8012548 <__ledf2>
 800916c:	10043216 	blt	r2,zero,800a238 <_dtoa_r+0x1540>
 8009170:	8809883a 	mov	r4,r17
 8009174:	80137ec0 	call	80137ec <__floatsidf>
 8009178:	1009883a 	mov	r4,r2
 800917c:	180b883a 	mov	r5,r3
 8009180:	a00d883a 	mov	r6,r20
 8009184:	a80f883a 	mov	r7,r21
 8009188:	80126280 	call	8012628 <__muldf3>
 800918c:	000d883a 	mov	r6,zero
 8009190:	1009883a 	mov	r4,r2
 8009194:	180b883a 	mov	r5,r3
 8009198:	01d00734 	movhi	r7,16412
 800919c:	80111c80 	call	80111c8 <__adddf3>
 80091a0:	1023883a 	mov	r17,r2
 80091a4:	d9800617 	ldw	r6,24(sp)
 80091a8:	00bf3034 	movhi	r2,64704
 80091ac:	1885883a 	add	r2,r3,r2
 80091b0:	d8800e15 	stw	r2,56(sp)
 80091b4:	30032e26 	beq	r6,zero,8009e70 <_dtoa_r+0x1178>
 80091b8:	d8c00517 	ldw	r3,20(sp)
 80091bc:	da800617 	ldw	r10,24(sp)
 80091c0:	d8c01215 	stw	r3,72(sp)
 80091c4:	d9000b17 	ldw	r4,44(sp)
 80091c8:	2003b026 	beq	r4,zero,800a08c <_dtoa_r+0x1394>
 80091cc:	50bfffc4 	addi	r2,r10,-1
 80091d0:	100490fa 	slli	r2,r2,3
 80091d4:	00c20074 	movhi	r3,2049
 80091d8:	18de9704 	addi	r3,r3,31324
 80091dc:	1885883a 	add	r2,r3,r2
 80091e0:	11800017 	ldw	r6,0(r2)
 80091e4:	11c00117 	ldw	r7,4(r2)
 80091e8:	d8800717 	ldw	r2,28(sp)
 80091ec:	0009883a 	mov	r4,zero
 80091f0:	014ff834 	movhi	r5,16352
 80091f4:	da801615 	stw	r10,88(sp)
 80091f8:	15c00044 	addi	r23,r2,1
 80091fc:	8011a640 	call	8011a64 <__divdf3>
 8009200:	d9c00e17 	ldw	r7,56(sp)
 8009204:	880d883a 	mov	r6,r17
 8009208:	1009883a 	mov	r4,r2
 800920c:	180b883a 	mov	r5,r3
 8009210:	8012e940 	call	8012e94 <__subdf3>
 8009214:	a80b883a 	mov	r5,r21
 8009218:	a009883a 	mov	r4,r20
 800921c:	d8c01015 	stw	r3,64(sp)
 8009220:	d8800e15 	stw	r2,56(sp)
 8009224:	80137640 	call	8013764 <__fixdfsi>
 8009228:	1009883a 	mov	r4,r2
 800922c:	d8801715 	stw	r2,92(sp)
 8009230:	80137ec0 	call	80137ec <__floatsidf>
 8009234:	a009883a 	mov	r4,r20
 8009238:	a80b883a 	mov	r5,r21
 800923c:	100d883a 	mov	r6,r2
 8009240:	180f883a 	mov	r7,r3
 8009244:	8012e940 	call	8012e94 <__subdf3>
 8009248:	da001717 	ldw	r8,92(sp)
 800924c:	1829883a 	mov	r20,r3
 8009250:	d8c00717 	ldw	r3,28(sp)
 8009254:	d9000e17 	ldw	r4,56(sp)
 8009258:	d9401017 	ldw	r5,64(sp)
 800925c:	42000c04 	addi	r8,r8,48
 8009260:	1023883a 	mov	r17,r2
 8009264:	1a000005 	stb	r8,0(r3)
 8009268:	880d883a 	mov	r6,r17
 800926c:	a00f883a 	mov	r7,r20
 8009270:	402b883a 	mov	r21,r8
 8009274:	80124680 	call	8012468 <__gedf2>
 8009278:	00844516 	blt	zero,r2,800a390 <_dtoa_r+0x1698>
 800927c:	0009883a 	mov	r4,zero
 8009280:	014ffc34 	movhi	r5,16368
 8009284:	880d883a 	mov	r6,r17
 8009288:	a00f883a 	mov	r7,r20
 800928c:	8012e940 	call	8012e94 <__subdf3>
 8009290:	d9000e17 	ldw	r4,56(sp)
 8009294:	d9401017 	ldw	r5,64(sp)
 8009298:	100d883a 	mov	r6,r2
 800929c:	180f883a 	mov	r7,r3
 80092a0:	80124680 	call	8012468 <__gedf2>
 80092a4:	da801617 	ldw	r10,88(sp)
 80092a8:	00843616 	blt	zero,r2,800a384 <_dtoa_r+0x168c>
 80092ac:	00800044 	movi	r2,1
 80092b0:	12806e0e 	bge	r2,r10,800946c <_dtoa_r+0x774>
 80092b4:	d9000717 	ldw	r4,28(sp)
 80092b8:	dd801315 	stw	r22,76(sp)
 80092bc:	dc001115 	stw	r16,68(sp)
 80092c0:	2295883a 	add	r10,r4,r10
 80092c4:	dcc01415 	stw	r19,80(sp)
 80092c8:	502d883a 	mov	r22,r10
 80092cc:	dcc01017 	ldw	r19,64(sp)
 80092d0:	b821883a 	mov	r16,r23
 80092d4:	dc801015 	stw	r18,64(sp)
 80092d8:	dc800e17 	ldw	r18,56(sp)
 80092dc:	00000906 	br	8009304 <_dtoa_r+0x60c>
 80092e0:	8012e940 	call	8012e94 <__subdf3>
 80092e4:	1009883a 	mov	r4,r2
 80092e8:	180b883a 	mov	r5,r3
 80092ec:	900d883a 	mov	r6,r18
 80092f0:	980f883a 	mov	r7,r19
 80092f4:	80125480 	call	8012548 <__ledf2>
 80092f8:	10040e16 	blt	r2,zero,800a334 <_dtoa_r+0x163c>
 80092fc:	b821883a 	mov	r16,r23
 8009300:	bd841026 	beq	r23,r22,800a344 <_dtoa_r+0x164c>
 8009304:	9009883a 	mov	r4,r18
 8009308:	980b883a 	mov	r5,r19
 800930c:	000d883a 	mov	r6,zero
 8009310:	01d00934 	movhi	r7,16420
 8009314:	80126280 	call	8012628 <__muldf3>
 8009318:	000d883a 	mov	r6,zero
 800931c:	01d00934 	movhi	r7,16420
 8009320:	8809883a 	mov	r4,r17
 8009324:	a00b883a 	mov	r5,r20
 8009328:	1025883a 	mov	r18,r2
 800932c:	1827883a 	mov	r19,r3
 8009330:	80126280 	call	8012628 <__muldf3>
 8009334:	180b883a 	mov	r5,r3
 8009338:	1009883a 	mov	r4,r2
 800933c:	1823883a 	mov	r17,r3
 8009340:	1029883a 	mov	r20,r2
 8009344:	80137640 	call	8013764 <__fixdfsi>
 8009348:	1009883a 	mov	r4,r2
 800934c:	102b883a 	mov	r21,r2
 8009350:	80137ec0 	call	80137ec <__floatsidf>
 8009354:	a009883a 	mov	r4,r20
 8009358:	880b883a 	mov	r5,r17
 800935c:	100d883a 	mov	r6,r2
 8009360:	180f883a 	mov	r7,r3
 8009364:	8012e940 	call	8012e94 <__subdf3>
 8009368:	ad400c04 	addi	r21,r21,48
 800936c:	1009883a 	mov	r4,r2
 8009370:	180b883a 	mov	r5,r3
 8009374:	900d883a 	mov	r6,r18
 8009378:	980f883a 	mov	r7,r19
 800937c:	85400005 	stb	r21,0(r16)
 8009380:	1023883a 	mov	r17,r2
 8009384:	1829883a 	mov	r20,r3
 8009388:	80125480 	call	8012548 <__ledf2>
 800938c:	bdc00044 	addi	r23,r23,1
 8009390:	0009883a 	mov	r4,zero
 8009394:	014ffc34 	movhi	r5,16368
 8009398:	880d883a 	mov	r6,r17
 800939c:	a00f883a 	mov	r7,r20
 80093a0:	103fcf0e 	bge	r2,zero,80092e0 <__alt_data_end+0xfc0092e0>
 80093a4:	d9801217 	ldw	r6,72(sp)
 80093a8:	dc001117 	ldw	r16,68(sp)
 80093ac:	d9800515 	stw	r6,20(sp)
 80093b0:	8009883a 	mov	r4,r16
 80093b4:	e00b883a 	mov	r5,fp
 80093b8:	800bb100 	call	800bb10 <_Bfree>
 80093bc:	d8c00517 	ldw	r3,20(sp)
 80093c0:	d9002317 	ldw	r4,140(sp)
 80093c4:	d9802517 	ldw	r6,148(sp)
 80093c8:	b8000005 	stb	zero,0(r23)
 80093cc:	18800044 	addi	r2,r3,1
 80093d0:	20800015 	stw	r2,0(r4)
 80093d4:	30027226 	beq	r6,zero,8009da0 <_dtoa_r+0x10a8>
 80093d8:	35c00015 	stw	r23,0(r6)
 80093dc:	d8800717 	ldw	r2,28(sp)
 80093e0:	003e7406 	br	8008db4 <__alt_data_end+0xfc008db4>
 80093e4:	00800434 	movhi	r2,16
 80093e8:	10bfffc4 	addi	r2,r2,-1
 80093ec:	a8aa703a 	and	r21,r21,r2
 80093f0:	a83e801e 	bne	r21,zero,8008df4 <__alt_data_end+0xfc008df4>
 80093f4:	00820074 	movhi	r2,2049
 80093f8:	109e7904 	addi	r2,r2,31204
 80093fc:	003e7f06 	br	8008dfc <__alt_data_end+0xfc008dfc>
 8009400:	10c00204 	addi	r3,r2,8
 8009404:	003e8206 	br	8008e10 <__alt_data_end+0xfc008e10>
 8009408:	01400434 	movhi	r5,16
 800940c:	297fffc4 	addi	r5,r5,-1
 8009410:	994a703a 	and	r5,r19,r5
 8009414:	9009883a 	mov	r4,r18
 8009418:	8c7f0044 	addi	r17,r17,-1023
 800941c:	294ffc34 	orhi	r5,r5,16368
 8009420:	dd000217 	ldw	r20,8(sp)
 8009424:	d8000f15 	stw	zero,60(sp)
 8009428:	003e9f06 	br	8008ea8 <__alt_data_end+0xfc008ea8>
 800942c:	00820074 	movhi	r2,2049
 8009430:	109e6804 	addi	r2,r2,31136
 8009434:	003e5f06 	br	8008db4 <__alt_data_end+0xfc008db4>
 8009438:	80001115 	stw	zero,68(r16)
 800943c:	8009883a 	mov	r4,r16
 8009440:	000b883a 	mov	r5,zero
 8009444:	800ba680 	call	800ba68 <_Balloc>
 8009448:	01bfffc4 	movi	r6,-1
 800944c:	d8800715 	stw	r2,28(sp)
 8009450:	80801015 	stw	r2,64(r16)
 8009454:	00800044 	movi	r2,1
 8009458:	d9800615 	stw	r6,24(sp)
 800945c:	d8800b15 	stw	r2,44(sp)
 8009460:	d8002215 	stw	zero,136(sp)
 8009464:	d9800d15 	stw	r6,52(sp)
 8009468:	d8000315 	stw	zero,12(sp)
 800946c:	d8800117 	ldw	r2,4(sp)
 8009470:	10008e16 	blt	r2,zero,80096ac <_dtoa_r+0x9b4>
 8009474:	d9000517 	ldw	r4,20(sp)
 8009478:	00c00384 	movi	r3,14
 800947c:	19008b16 	blt	r3,r4,80096ac <_dtoa_r+0x9b4>
 8009480:	200490fa 	slli	r2,r4,3
 8009484:	00c20074 	movhi	r3,2049
 8009488:	d9802217 	ldw	r6,136(sp)
 800948c:	18de9704 	addi	r3,r3,31324
 8009490:	1885883a 	add	r2,r3,r2
 8009494:	14400017 	ldw	r17,0(r2)
 8009498:	15000117 	ldw	r20,4(r2)
 800949c:	3001c716 	blt	r6,zero,8009bbc <_dtoa_r+0xec4>
 80094a0:	880d883a 	mov	r6,r17
 80094a4:	a00f883a 	mov	r7,r20
 80094a8:	9009883a 	mov	r4,r18
 80094ac:	980b883a 	mov	r5,r19
 80094b0:	8011a640 	call	8011a64 <__divdf3>
 80094b4:	180b883a 	mov	r5,r3
 80094b8:	1009883a 	mov	r4,r2
 80094bc:	80137640 	call	8013764 <__fixdfsi>
 80094c0:	1009883a 	mov	r4,r2
 80094c4:	102d883a 	mov	r22,r2
 80094c8:	80137ec0 	call	80137ec <__floatsidf>
 80094cc:	1009883a 	mov	r4,r2
 80094d0:	180b883a 	mov	r5,r3
 80094d4:	880d883a 	mov	r6,r17
 80094d8:	a00f883a 	mov	r7,r20
 80094dc:	80126280 	call	8012628 <__muldf3>
 80094e0:	9009883a 	mov	r4,r18
 80094e4:	980b883a 	mov	r5,r19
 80094e8:	100d883a 	mov	r6,r2
 80094ec:	180f883a 	mov	r7,r3
 80094f0:	8012e940 	call	8012e94 <__subdf3>
 80094f4:	d9000717 	ldw	r4,28(sp)
 80094f8:	d9800617 	ldw	r6,24(sp)
 80094fc:	180b883a 	mov	r5,r3
 8009500:	b0c00c04 	addi	r3,r22,48
 8009504:	20c00005 	stb	r3,0(r4)
 8009508:	25c00044 	addi	r23,r4,1
 800950c:	01000044 	movi	r4,1
 8009510:	1011883a 	mov	r8,r2
 8009514:	2807883a 	mov	r3,r5
 8009518:	31003d26 	beq	r6,r4,8009610 <_dtoa_r+0x918>
 800951c:	000d883a 	mov	r6,zero
 8009520:	01d00934 	movhi	r7,16420
 8009524:	1009883a 	mov	r4,r2
 8009528:	80126280 	call	8012628 <__muldf3>
 800952c:	1009883a 	mov	r4,r2
 8009530:	180b883a 	mov	r5,r3
 8009534:	000d883a 	mov	r6,zero
 8009538:	000f883a 	mov	r7,zero
 800953c:	1027883a 	mov	r19,r2
 8009540:	182b883a 	mov	r21,r3
 8009544:	80123e40 	call	80123e4 <__eqdf2>
 8009548:	103f9926 	beq	r2,zero,80093b0 <__alt_data_end+0xfc0093b0>
 800954c:	d8c00617 	ldw	r3,24(sp)
 8009550:	d9000717 	ldw	r4,28(sp)
 8009554:	b825883a 	mov	r18,r23
 8009558:	18bfffc4 	addi	r2,r3,-1
 800955c:	20ad883a 	add	r22,r4,r2
 8009560:	dc000315 	stw	r16,12(sp)
 8009564:	00000a06 	br	8009590 <_dtoa_r+0x898>
 8009568:	80126280 	call	8012628 <__muldf3>
 800956c:	1009883a 	mov	r4,r2
 8009570:	180b883a 	mov	r5,r3
 8009574:	000d883a 	mov	r6,zero
 8009578:	000f883a 	mov	r7,zero
 800957c:	1027883a 	mov	r19,r2
 8009580:	182b883a 	mov	r21,r3
 8009584:	b825883a 	mov	r18,r23
 8009588:	80123e40 	call	80123e4 <__eqdf2>
 800958c:	10022626 	beq	r2,zero,8009e28 <_dtoa_r+0x1130>
 8009590:	880d883a 	mov	r6,r17
 8009594:	a00f883a 	mov	r7,r20
 8009598:	9809883a 	mov	r4,r19
 800959c:	a80b883a 	mov	r5,r21
 80095a0:	8011a640 	call	8011a64 <__divdf3>
 80095a4:	180b883a 	mov	r5,r3
 80095a8:	1009883a 	mov	r4,r2
 80095ac:	80137640 	call	8013764 <__fixdfsi>
 80095b0:	1009883a 	mov	r4,r2
 80095b4:	1021883a 	mov	r16,r2
 80095b8:	80137ec0 	call	80137ec <__floatsidf>
 80095bc:	1009883a 	mov	r4,r2
 80095c0:	180b883a 	mov	r5,r3
 80095c4:	880d883a 	mov	r6,r17
 80095c8:	a00f883a 	mov	r7,r20
 80095cc:	80126280 	call	8012628 <__muldf3>
 80095d0:	9809883a 	mov	r4,r19
 80095d4:	a80b883a 	mov	r5,r21
 80095d8:	100d883a 	mov	r6,r2
 80095dc:	180f883a 	mov	r7,r3
 80095e0:	8012e940 	call	8012e94 <__subdf3>
 80095e4:	82000c04 	addi	r8,r16,48
 80095e8:	92000005 	stb	r8,0(r18)
 80095ec:	1009883a 	mov	r4,r2
 80095f0:	180b883a 	mov	r5,r3
 80095f4:	000d883a 	mov	r6,zero
 80095f8:	01d00934 	movhi	r7,16420
 80095fc:	1011883a 	mov	r8,r2
 8009600:	bdc00044 	addi	r23,r23,1
 8009604:	95bfd81e 	bne	r18,r22,8009568 <__alt_data_end+0xfc009568>
 8009608:	802d883a 	mov	r22,r16
 800960c:	dc000317 	ldw	r16,12(sp)
 8009610:	4009883a 	mov	r4,r8
 8009614:	180b883a 	mov	r5,r3
 8009618:	400d883a 	mov	r6,r8
 800961c:	180f883a 	mov	r7,r3
 8009620:	80111c80 	call	80111c8 <__adddf3>
 8009624:	8809883a 	mov	r4,r17
 8009628:	a00b883a 	mov	r5,r20
 800962c:	100d883a 	mov	r6,r2
 8009630:	180f883a 	mov	r7,r3
 8009634:	1027883a 	mov	r19,r2
 8009638:	1825883a 	mov	r18,r3
 800963c:	80125480 	call	8012548 <__ledf2>
 8009640:	10000816 	blt	r2,zero,8009664 <_dtoa_r+0x96c>
 8009644:	8809883a 	mov	r4,r17
 8009648:	a00b883a 	mov	r5,r20
 800964c:	980d883a 	mov	r6,r19
 8009650:	900f883a 	mov	r7,r18
 8009654:	80123e40 	call	80123e4 <__eqdf2>
 8009658:	103f551e 	bne	r2,zero,80093b0 <__alt_data_end+0xfc0093b0>
 800965c:	b580004c 	andi	r22,r22,1
 8009660:	b03f5326 	beq	r22,zero,80093b0 <__alt_data_end+0xfc0093b0>
 8009664:	bd7fffc3 	ldbu	r21,-1(r23)
 8009668:	b8bfffc4 	addi	r2,r23,-1
 800966c:	1007883a 	mov	r3,r2
 8009670:	01400e44 	movi	r5,57
 8009674:	d9800717 	ldw	r6,28(sp)
 8009678:	00000506 	br	8009690 <_dtoa_r+0x998>
 800967c:	18ffffc4 	addi	r3,r3,-1
 8009680:	30825e26 	beq	r6,r2,8009ffc <_dtoa_r+0x1304>
 8009684:	1d400003 	ldbu	r21,0(r3)
 8009688:	102f883a 	mov	r23,r2
 800968c:	10bfffc4 	addi	r2,r2,-1
 8009690:	a9003fcc 	andi	r4,r21,255
 8009694:	2100201c 	xori	r4,r4,128
 8009698:	213fe004 	addi	r4,r4,-128
 800969c:	217ff726 	beq	r4,r5,800967c <__alt_data_end+0xfc00967c>
 80096a0:	aa000044 	addi	r8,r21,1
 80096a4:	12000005 	stb	r8,0(r2)
 80096a8:	003f4106 	br	80093b0 <__alt_data_end+0xfc0093b0>
 80096ac:	d8c00b17 	ldw	r3,44(sp)
 80096b0:	18006726 	beq	r3,zero,8009850 <_dtoa_r+0xb58>
 80096b4:	d9000317 	ldw	r4,12(sp)
 80096b8:	00c00044 	movi	r3,1
 80096bc:	19016a0e 	bge	r3,r4,8009c68 <_dtoa_r+0xf70>
 80096c0:	d8800617 	ldw	r2,24(sp)
 80096c4:	d8c00917 	ldw	r3,36(sp)
 80096c8:	157fffc4 	addi	r21,r2,-1
 80096cc:	1d420716 	blt	r3,r21,8009eec <_dtoa_r+0x11f4>
 80096d0:	1d6bc83a 	sub	r21,r3,r21
 80096d4:	d8800617 	ldw	r2,24(sp)
 80096d8:	1002c716 	blt	r2,zero,800a1f8 <_dtoa_r+0x1500>
 80096dc:	dd000817 	ldw	r20,32(sp)
 80096e0:	d8800617 	ldw	r2,24(sp)
 80096e4:	d9800817 	ldw	r6,32(sp)
 80096e8:	8009883a 	mov	r4,r16
 80096ec:	01400044 	movi	r5,1
 80096f0:	308d883a 	add	r6,r6,r2
 80096f4:	d9800815 	stw	r6,32(sp)
 80096f8:	b0ad883a 	add	r22,r22,r2
 80096fc:	800be900 	call	800be90 <__i2b>
 8009700:	1023883a 	mov	r17,r2
 8009704:	a0000826 	beq	r20,zero,8009728 <_dtoa_r+0xa30>
 8009708:	0580070e 	bge	zero,r22,8009728 <_dtoa_r+0xa30>
 800970c:	b005883a 	mov	r2,r22
 8009710:	a5812016 	blt	r20,r22,8009b94 <_dtoa_r+0xe9c>
 8009714:	d8c00817 	ldw	r3,32(sp)
 8009718:	a0a9c83a 	sub	r20,r20,r2
 800971c:	b0adc83a 	sub	r22,r22,r2
 8009720:	1887c83a 	sub	r3,r3,r2
 8009724:	d8c00815 	stw	r3,32(sp)
 8009728:	d9000917 	ldw	r4,36(sp)
 800972c:	0100140e 	bge	zero,r4,8009780 <_dtoa_r+0xa88>
 8009730:	d9800b17 	ldw	r6,44(sp)
 8009734:	3001e526 	beq	r6,zero,8009ecc <_dtoa_r+0x11d4>
 8009738:	05400e0e 	bge	zero,r21,8009774 <_dtoa_r+0xa7c>
 800973c:	880b883a 	mov	r5,r17
 8009740:	8009883a 	mov	r4,r16
 8009744:	a80d883a 	mov	r6,r21
 8009748:	800c15c0 	call	800c15c <__pow5mult>
 800974c:	e00d883a 	mov	r6,fp
 8009750:	8009883a 	mov	r4,r16
 8009754:	100b883a 	mov	r5,r2
 8009758:	1023883a 	mov	r17,r2
 800975c:	800becc0 	call	800becc <__multiply>
 8009760:	102f883a 	mov	r23,r2
 8009764:	e00b883a 	mov	r5,fp
 8009768:	8009883a 	mov	r4,r16
 800976c:	800bb100 	call	800bb10 <_Bfree>
 8009770:	b839883a 	mov	fp,r23
 8009774:	d8800917 	ldw	r2,36(sp)
 8009778:	154dc83a 	sub	r6,r2,r21
 800977c:	3001281e 	bne	r6,zero,8009c20 <_dtoa_r+0xf28>
 8009780:	05c00044 	movi	r23,1
 8009784:	8009883a 	mov	r4,r16
 8009788:	b80b883a 	mov	r5,r23
 800978c:	800be900 	call	800be90 <__i2b>
 8009790:	d8c00a17 	ldw	r3,40(sp)
 8009794:	102b883a 	mov	r21,r2
 8009798:	00c0310e 	bge	zero,r3,8009860 <_dtoa_r+0xb68>
 800979c:	8009883a 	mov	r4,r16
 80097a0:	100b883a 	mov	r5,r2
 80097a4:	180d883a 	mov	r6,r3
 80097a8:	800c15c0 	call	800c15c <__pow5mult>
 80097ac:	d9000317 	ldw	r4,12(sp)
 80097b0:	102b883a 	mov	r21,r2
 80097b4:	b9011f0e 	bge	r23,r4,8009c34 <_dtoa_r+0xf3c>
 80097b8:	0027883a 	mov	r19,zero
 80097bc:	a8800417 	ldw	r2,16(r21)
 80097c0:	10800104 	addi	r2,r2,4
 80097c4:	1085883a 	add	r2,r2,r2
 80097c8:	1085883a 	add	r2,r2,r2
 80097cc:	a885883a 	add	r2,r21,r2
 80097d0:	11000017 	ldw	r4,0(r2)
 80097d4:	800bd780 	call	800bd78 <__hi0bits>
 80097d8:	00c00804 	movi	r3,32
 80097dc:	1885c83a 	sub	r2,r3,r2
 80097e0:	00002506 	br	8009878 <_dtoa_r+0xb80>
 80097e4:	01800044 	movi	r6,1
 80097e8:	d9800c15 	stw	r6,48(sp)
 80097ec:	003dec06 	br	8008fa0 <__alt_data_end+0xfc008fa0>
 80097f0:	d8c00817 	ldw	r3,32(sp)
 80097f4:	d9000517 	ldw	r4,20(sp)
 80097f8:	d8000a15 	stw	zero,40(sp)
 80097fc:	1907c83a 	sub	r3,r3,r4
 8009800:	010dc83a 	sub	r6,zero,r4
 8009804:	d8c00815 	stw	r3,32(sp)
 8009808:	d9800915 	stw	r6,36(sp)
 800980c:	003ded06 	br	8008fc4 <__alt_data_end+0xfc008fc4>
 8009810:	05adc83a 	sub	r22,zero,r22
 8009814:	dd800815 	stw	r22,32(sp)
 8009818:	002d883a 	mov	r22,zero
 800981c:	003de406 	br	8008fb0 <__alt_data_end+0xfc008fb0>
 8009820:	d9000517 	ldw	r4,20(sp)
 8009824:	80137ec0 	call	80137ec <__floatsidf>
 8009828:	1009883a 	mov	r4,r2
 800982c:	180b883a 	mov	r5,r3
 8009830:	b00d883a 	mov	r6,r22
 8009834:	a80f883a 	mov	r7,r21
 8009838:	80123e40 	call	80123e4 <__eqdf2>
 800983c:	103dc726 	beq	r2,zero,8008f5c <__alt_data_end+0xfc008f5c>
 8009840:	d8800517 	ldw	r2,20(sp)
 8009844:	10bfffc4 	addi	r2,r2,-1
 8009848:	d8800515 	stw	r2,20(sp)
 800984c:	003dc306 	br	8008f5c <__alt_data_end+0xfc008f5c>
 8009850:	dd400917 	ldw	r21,36(sp)
 8009854:	dd000817 	ldw	r20,32(sp)
 8009858:	0023883a 	mov	r17,zero
 800985c:	003fa906 	br	8009704 <__alt_data_end+0xfc009704>
 8009860:	d9800317 	ldw	r6,12(sp)
 8009864:	b981670e 	bge	r23,r6,8009e04 <_dtoa_r+0x110c>
 8009868:	0027883a 	mov	r19,zero
 800986c:	d8c00a17 	ldw	r3,40(sp)
 8009870:	183fd21e 	bne	r3,zero,80097bc <__alt_data_end+0xfc0097bc>
 8009874:	00800044 	movi	r2,1
 8009878:	1585883a 	add	r2,r2,r22
 800987c:	108007cc 	andi	r2,r2,31
 8009880:	10005f26 	beq	r2,zero,8009a00 <_dtoa_r+0xd08>
 8009884:	00c00804 	movi	r3,32
 8009888:	1887c83a 	sub	r3,r3,r2
 800988c:	01000104 	movi	r4,4
 8009890:	20c2dd0e 	bge	r4,r3,800a408 <_dtoa_r+0x1710>
 8009894:	d9000817 	ldw	r4,32(sp)
 8009898:	00c00704 	movi	r3,28
 800989c:	1885c83a 	sub	r2,r3,r2
 80098a0:	2089883a 	add	r4,r4,r2
 80098a4:	d9000815 	stw	r4,32(sp)
 80098a8:	a0a9883a 	add	r20,r20,r2
 80098ac:	b0ad883a 	add	r22,r22,r2
 80098b0:	d8800817 	ldw	r2,32(sp)
 80098b4:	0080050e 	bge	zero,r2,80098cc <_dtoa_r+0xbd4>
 80098b8:	e00b883a 	mov	r5,fp
 80098bc:	8009883a 	mov	r4,r16
 80098c0:	100d883a 	mov	r6,r2
 80098c4:	800c29c0 	call	800c29c <__lshift>
 80098c8:	1039883a 	mov	fp,r2
 80098cc:	0580050e 	bge	zero,r22,80098e4 <_dtoa_r+0xbec>
 80098d0:	a80b883a 	mov	r5,r21
 80098d4:	8009883a 	mov	r4,r16
 80098d8:	b00d883a 	mov	r6,r22
 80098dc:	800c29c0 	call	800c29c <__lshift>
 80098e0:	102b883a 	mov	r21,r2
 80098e4:	d8c00c17 	ldw	r3,48(sp)
 80098e8:	1801161e 	bne	r3,zero,8009d44 <_dtoa_r+0x104c>
 80098ec:	d8c00617 	ldw	r3,24(sp)
 80098f0:	00c12d0e 	bge	zero,r3,8009da8 <_dtoa_r+0x10b0>
 80098f4:	d8c00b17 	ldw	r3,44(sp)
 80098f8:	1800571e 	bne	r3,zero,8009a58 <_dtoa_r+0xd60>
 80098fc:	dc800717 	ldw	r18,28(sp)
 8009900:	dcc00617 	ldw	r19,24(sp)
 8009904:	9029883a 	mov	r20,r18
 8009908:	00000206 	br	8009914 <_dtoa_r+0xc1c>
 800990c:	800bb380 	call	800bb38 <__multadd>
 8009910:	1039883a 	mov	fp,r2
 8009914:	e009883a 	mov	r4,fp
 8009918:	a80b883a 	mov	r5,r21
 800991c:	8008ad00 	call	8008ad0 <quorem>
 8009920:	10800c04 	addi	r2,r2,48
 8009924:	90800005 	stb	r2,0(r18)
 8009928:	94800044 	addi	r18,r18,1
 800992c:	9507c83a 	sub	r3,r18,r20
 8009930:	8009883a 	mov	r4,r16
 8009934:	e00b883a 	mov	r5,fp
 8009938:	01800284 	movi	r6,10
 800993c:	000f883a 	mov	r7,zero
 8009940:	1cfff216 	blt	r3,r19,800990c <__alt_data_end+0xfc00990c>
 8009944:	1011883a 	mov	r8,r2
 8009948:	d8800617 	ldw	r2,24(sp)
 800994c:	00822e0e 	bge	zero,r2,800a208 <_dtoa_r+0x1510>
 8009950:	d9000717 	ldw	r4,28(sp)
 8009954:	0025883a 	mov	r18,zero
 8009958:	20af883a 	add	r23,r4,r2
 800995c:	e00b883a 	mov	r5,fp
 8009960:	01800044 	movi	r6,1
 8009964:	8009883a 	mov	r4,r16
 8009968:	da001715 	stw	r8,92(sp)
 800996c:	800c29c0 	call	800c29c <__lshift>
 8009970:	1009883a 	mov	r4,r2
 8009974:	a80b883a 	mov	r5,r21
 8009978:	1039883a 	mov	fp,r2
 800997c:	800c3e40 	call	800c3e4 <__mcmp>
 8009980:	da001717 	ldw	r8,92(sp)
 8009984:	00816e0e 	bge	zero,r2,8009f40 <_dtoa_r+0x1248>
 8009988:	b93fffc3 	ldbu	r4,-1(r23)
 800998c:	b8bfffc4 	addi	r2,r23,-1
 8009990:	1007883a 	mov	r3,r2
 8009994:	01800e44 	movi	r6,57
 8009998:	d9c00717 	ldw	r7,28(sp)
 800999c:	00000506 	br	80099b4 <_dtoa_r+0xcbc>
 80099a0:	18ffffc4 	addi	r3,r3,-1
 80099a4:	38811926 	beq	r7,r2,8009e0c <_dtoa_r+0x1114>
 80099a8:	19000003 	ldbu	r4,0(r3)
 80099ac:	102f883a 	mov	r23,r2
 80099b0:	10bfffc4 	addi	r2,r2,-1
 80099b4:	21403fcc 	andi	r5,r4,255
 80099b8:	2940201c 	xori	r5,r5,128
 80099bc:	297fe004 	addi	r5,r5,-128
 80099c0:	29bff726 	beq	r5,r6,80099a0 <__alt_data_end+0xfc0099a0>
 80099c4:	21000044 	addi	r4,r4,1
 80099c8:	11000005 	stb	r4,0(r2)
 80099cc:	8009883a 	mov	r4,r16
 80099d0:	a80b883a 	mov	r5,r21
 80099d4:	800bb100 	call	800bb10 <_Bfree>
 80099d8:	883e7526 	beq	r17,zero,80093b0 <__alt_data_end+0xfc0093b0>
 80099dc:	90000426 	beq	r18,zero,80099f0 <_dtoa_r+0xcf8>
 80099e0:	94400326 	beq	r18,r17,80099f0 <_dtoa_r+0xcf8>
 80099e4:	8009883a 	mov	r4,r16
 80099e8:	900b883a 	mov	r5,r18
 80099ec:	800bb100 	call	800bb10 <_Bfree>
 80099f0:	8009883a 	mov	r4,r16
 80099f4:	880b883a 	mov	r5,r17
 80099f8:	800bb100 	call	800bb10 <_Bfree>
 80099fc:	003e6c06 	br	80093b0 <__alt_data_end+0xfc0093b0>
 8009a00:	00800704 	movi	r2,28
 8009a04:	d9800817 	ldw	r6,32(sp)
 8009a08:	a0a9883a 	add	r20,r20,r2
 8009a0c:	b0ad883a 	add	r22,r22,r2
 8009a10:	308d883a 	add	r6,r6,r2
 8009a14:	d9800815 	stw	r6,32(sp)
 8009a18:	003fa506 	br	80098b0 <__alt_data_end+0xfc0098b0>
 8009a1c:	013efb84 	movi	r4,-1042
 8009a20:	246bc83a 	sub	r21,r4,r17
 8009a24:	9548983a 	sll	r4,r18,r21
 8009a28:	003d1806 	br	8008e8c <__alt_data_end+0xfc008e8c>
 8009a2c:	d8000c15 	stw	zero,48(sp)
 8009a30:	003d5b06 	br	8008fa0 <__alt_data_end+0xfc008fa0>
 8009a34:	880b883a 	mov	r5,r17
 8009a38:	8009883a 	mov	r4,r16
 8009a3c:	01800284 	movi	r6,10
 8009a40:	000f883a 	mov	r7,zero
 8009a44:	800bb380 	call	800bb38 <__multadd>
 8009a48:	1023883a 	mov	r17,r2
 8009a4c:	d8800d17 	ldw	r2,52(sp)
 8009a50:	0082550e 	bge	zero,r2,800a3a8 <_dtoa_r+0x16b0>
 8009a54:	d8800615 	stw	r2,24(sp)
 8009a58:	0500050e 	bge	zero,r20,8009a70 <_dtoa_r+0xd78>
 8009a5c:	880b883a 	mov	r5,r17
 8009a60:	8009883a 	mov	r4,r16
 8009a64:	a00d883a 	mov	r6,r20
 8009a68:	800c29c0 	call	800c29c <__lshift>
 8009a6c:	1023883a 	mov	r17,r2
 8009a70:	98016a1e 	bne	r19,zero,800a01c <_dtoa_r+0x1324>
 8009a74:	8829883a 	mov	r20,r17
 8009a78:	d9000617 	ldw	r4,24(sp)
 8009a7c:	dcc00717 	ldw	r19,28(sp)
 8009a80:	9480004c 	andi	r18,r18,1
 8009a84:	20bfffc4 	addi	r2,r4,-1
 8009a88:	9885883a 	add	r2,r19,r2
 8009a8c:	d8800415 	stw	r2,16(sp)
 8009a90:	dc800615 	stw	r18,24(sp)
 8009a94:	e009883a 	mov	r4,fp
 8009a98:	a80b883a 	mov	r5,r21
 8009a9c:	8008ad00 	call	8008ad0 <quorem>
 8009aa0:	e009883a 	mov	r4,fp
 8009aa4:	880b883a 	mov	r5,r17
 8009aa8:	102f883a 	mov	r23,r2
 8009aac:	800c3e40 	call	800c3e4 <__mcmp>
 8009ab0:	8009883a 	mov	r4,r16
 8009ab4:	a80b883a 	mov	r5,r21
 8009ab8:	a00d883a 	mov	r6,r20
 8009abc:	102d883a 	mov	r22,r2
 8009ac0:	800c4440 	call	800c444 <__mdiff>
 8009ac4:	1007883a 	mov	r3,r2
 8009ac8:	10800317 	ldw	r2,12(r2)
 8009acc:	bc800c04 	addi	r18,r23,48
 8009ad0:	1000971e 	bne	r2,zero,8009d30 <_dtoa_r+0x1038>
 8009ad4:	180b883a 	mov	r5,r3
 8009ad8:	e009883a 	mov	r4,fp
 8009adc:	d8c01515 	stw	r3,84(sp)
 8009ae0:	800c3e40 	call	800c3e4 <__mcmp>
 8009ae4:	d8c01517 	ldw	r3,84(sp)
 8009ae8:	8009883a 	mov	r4,r16
 8009aec:	d8801515 	stw	r2,84(sp)
 8009af0:	180b883a 	mov	r5,r3
 8009af4:	800bb100 	call	800bb10 <_Bfree>
 8009af8:	d8801517 	ldw	r2,84(sp)
 8009afc:	1000041e 	bne	r2,zero,8009b10 <_dtoa_r+0xe18>
 8009b00:	d9800317 	ldw	r6,12(sp)
 8009b04:	3000021e 	bne	r6,zero,8009b10 <_dtoa_r+0xe18>
 8009b08:	d8c00617 	ldw	r3,24(sp)
 8009b0c:	18007626 	beq	r3,zero,8009ce8 <_dtoa_r+0xff0>
 8009b10:	b0005b16 	blt	r22,zero,8009c80 <_dtoa_r+0xf88>
 8009b14:	b000041e 	bne	r22,zero,8009b28 <_dtoa_r+0xe30>
 8009b18:	d9000317 	ldw	r4,12(sp)
 8009b1c:	2000021e 	bne	r4,zero,8009b28 <_dtoa_r+0xe30>
 8009b20:	d8c00617 	ldw	r3,24(sp)
 8009b24:	18005626 	beq	r3,zero,8009c80 <_dtoa_r+0xf88>
 8009b28:	00814d16 	blt	zero,r2,800a060 <_dtoa_r+0x1368>
 8009b2c:	d8c00417 	ldw	r3,16(sp)
 8009b30:	9d800044 	addi	r22,r19,1
 8009b34:	9c800005 	stb	r18,0(r19)
 8009b38:	b02f883a 	mov	r23,r22
 8009b3c:	98c14c26 	beq	r19,r3,800a070 <_dtoa_r+0x1378>
 8009b40:	e00b883a 	mov	r5,fp
 8009b44:	8009883a 	mov	r4,r16
 8009b48:	01800284 	movi	r6,10
 8009b4c:	000f883a 	mov	r7,zero
 8009b50:	800bb380 	call	800bb38 <__multadd>
 8009b54:	1039883a 	mov	fp,r2
 8009b58:	8d006d26 	beq	r17,r20,8009d10 <_dtoa_r+0x1018>
 8009b5c:	880b883a 	mov	r5,r17
 8009b60:	01800284 	movi	r6,10
 8009b64:	000f883a 	mov	r7,zero
 8009b68:	8009883a 	mov	r4,r16
 8009b6c:	800bb380 	call	800bb38 <__multadd>
 8009b70:	a00b883a 	mov	r5,r20
 8009b74:	8009883a 	mov	r4,r16
 8009b78:	01800284 	movi	r6,10
 8009b7c:	000f883a 	mov	r7,zero
 8009b80:	1023883a 	mov	r17,r2
 8009b84:	800bb380 	call	800bb38 <__multadd>
 8009b88:	1029883a 	mov	r20,r2
 8009b8c:	b027883a 	mov	r19,r22
 8009b90:	003fc006 	br	8009a94 <__alt_data_end+0xfc009a94>
 8009b94:	a005883a 	mov	r2,r20
 8009b98:	003ede06 	br	8009714 <__alt_data_end+0xfc009714>
 8009b9c:	01000044 	movi	r4,1
 8009ba0:	d9000b15 	stw	r4,44(sp)
 8009ba4:	d9802217 	ldw	r6,136(sp)
 8009ba8:	0180dc0e 	bge	zero,r6,8009f1c <_dtoa_r+0x1224>
 8009bac:	3023883a 	mov	r17,r6
 8009bb0:	d9800d15 	stw	r6,52(sp)
 8009bb4:	d9800615 	stw	r6,24(sp)
 8009bb8:	003d1e06 	br	8009034 <__alt_data_end+0xfc009034>
 8009bbc:	d8800617 	ldw	r2,24(sp)
 8009bc0:	00be3716 	blt	zero,r2,80094a0 <__alt_data_end+0xfc0094a0>
 8009bc4:	1000be1e 	bne	r2,zero,8009ec0 <_dtoa_r+0x11c8>
 8009bc8:	8809883a 	mov	r4,r17
 8009bcc:	a00b883a 	mov	r5,r20
 8009bd0:	000d883a 	mov	r6,zero
 8009bd4:	01d00534 	movhi	r7,16404
 8009bd8:	80126280 	call	8012628 <__muldf3>
 8009bdc:	1009883a 	mov	r4,r2
 8009be0:	180b883a 	mov	r5,r3
 8009be4:	900d883a 	mov	r6,r18
 8009be8:	980f883a 	mov	r7,r19
 8009bec:	80124680 	call	8012468 <__gedf2>
 8009bf0:	002b883a 	mov	r21,zero
 8009bf4:	0023883a 	mov	r17,zero
 8009bf8:	10007a16 	blt	r2,zero,8009de4 <_dtoa_r+0x10ec>
 8009bfc:	d9002217 	ldw	r4,136(sp)
 8009c00:	ddc00717 	ldw	r23,28(sp)
 8009c04:	0108303a 	nor	r4,zero,r4
 8009c08:	d9000515 	stw	r4,20(sp)
 8009c0c:	8009883a 	mov	r4,r16
 8009c10:	a80b883a 	mov	r5,r21
 8009c14:	800bb100 	call	800bb10 <_Bfree>
 8009c18:	883f751e 	bne	r17,zero,80099f0 <__alt_data_end+0xfc0099f0>
 8009c1c:	003de406 	br	80093b0 <__alt_data_end+0xfc0093b0>
 8009c20:	e00b883a 	mov	r5,fp
 8009c24:	8009883a 	mov	r4,r16
 8009c28:	800c15c0 	call	800c15c <__pow5mult>
 8009c2c:	1039883a 	mov	fp,r2
 8009c30:	003ed306 	br	8009780 <__alt_data_end+0xfc009780>
 8009c34:	903ee01e 	bne	r18,zero,80097b8 <__alt_data_end+0xfc0097b8>
 8009c38:	00800434 	movhi	r2,16
 8009c3c:	10bfffc4 	addi	r2,r2,-1
 8009c40:	9884703a 	and	r2,r19,r2
 8009c44:	103f081e 	bne	r2,zero,8009868 <__alt_data_end+0xfc009868>
 8009c48:	9cdffc2c 	andhi	r19,r19,32752
 8009c4c:	983f0626 	beq	r19,zero,8009868 <__alt_data_end+0xfc009868>
 8009c50:	d8800817 	ldw	r2,32(sp)
 8009c54:	b5800044 	addi	r22,r22,1
 8009c58:	04c00044 	movi	r19,1
 8009c5c:	10800044 	addi	r2,r2,1
 8009c60:	d8800815 	stw	r2,32(sp)
 8009c64:	003f0106 	br	800986c <__alt_data_end+0xfc00986c>
 8009c68:	d9800f17 	ldw	r6,60(sp)
 8009c6c:	30016826 	beq	r6,zero,800a210 <_dtoa_r+0x1518>
 8009c70:	10810cc4 	addi	r2,r2,1075
 8009c74:	dd400917 	ldw	r21,36(sp)
 8009c78:	dd000817 	ldw	r20,32(sp)
 8009c7c:	003e9906 	br	80096e4 <__alt_data_end+0xfc0096e4>
 8009c80:	9011883a 	mov	r8,r18
 8009c84:	4007883a 	mov	r3,r8
 8009c88:	e02d883a 	mov	r22,fp
 8009c8c:	0080100e 	bge	zero,r2,8009cd0 <_dtoa_r+0xfd8>
 8009c90:	01800044 	movi	r6,1
 8009c94:	8009883a 	mov	r4,r16
 8009c98:	e00b883a 	mov	r5,fp
 8009c9c:	da001515 	stw	r8,84(sp)
 8009ca0:	da001715 	stw	r8,92(sp)
 8009ca4:	800c29c0 	call	800c29c <__lshift>
 8009ca8:	1009883a 	mov	r4,r2
 8009cac:	a80b883a 	mov	r5,r21
 8009cb0:	102d883a 	mov	r22,r2
 8009cb4:	800c3e40 	call	800c3e4 <__mcmp>
 8009cb8:	d8c01517 	ldw	r3,84(sp)
 8009cbc:	da001717 	ldw	r8,92(sp)
 8009cc0:	0081a50e 	bge	zero,r2,800a358 <_dtoa_r+0x1660>
 8009cc4:	00800e44 	movi	r2,57
 8009cc8:	40817b26 	beq	r8,r2,800a2b8 <_dtoa_r+0x15c0>
 8009ccc:	40c00044 	addi	r3,r8,1
 8009cd0:	8825883a 	mov	r18,r17
 8009cd4:	9dc00044 	addi	r23,r19,1
 8009cd8:	98c00005 	stb	r3,0(r19)
 8009cdc:	a023883a 	mov	r17,r20
 8009ce0:	b039883a 	mov	fp,r22
 8009ce4:	003f3906 	br	80099cc <__alt_data_end+0xfc0099cc>
 8009ce8:	00800e44 	movi	r2,57
 8009cec:	9011883a 	mov	r8,r18
 8009cf0:	90817226 	beq	r18,r2,800a2bc <_dtoa_r+0x15c4>
 8009cf4:	0580010e 	bge	zero,r22,8009cfc <_dtoa_r+0x1004>
 8009cf8:	ba000c44 	addi	r8,r23,49
 8009cfc:	8825883a 	mov	r18,r17
 8009d00:	9dc00044 	addi	r23,r19,1
 8009d04:	9a000005 	stb	r8,0(r19)
 8009d08:	a023883a 	mov	r17,r20
 8009d0c:	003f2f06 	br	80099cc <__alt_data_end+0xfc0099cc>
 8009d10:	880b883a 	mov	r5,r17
 8009d14:	8009883a 	mov	r4,r16
 8009d18:	01800284 	movi	r6,10
 8009d1c:	000f883a 	mov	r7,zero
 8009d20:	800bb380 	call	800bb38 <__multadd>
 8009d24:	1023883a 	mov	r17,r2
 8009d28:	1029883a 	mov	r20,r2
 8009d2c:	003f9706 	br	8009b8c <__alt_data_end+0xfc009b8c>
 8009d30:	8009883a 	mov	r4,r16
 8009d34:	180b883a 	mov	r5,r3
 8009d38:	800bb100 	call	800bb10 <_Bfree>
 8009d3c:	00800044 	movi	r2,1
 8009d40:	003f7306 	br	8009b10 <__alt_data_end+0xfc009b10>
 8009d44:	e009883a 	mov	r4,fp
 8009d48:	a80b883a 	mov	r5,r21
 8009d4c:	800c3e40 	call	800c3e4 <__mcmp>
 8009d50:	103ee60e 	bge	r2,zero,80098ec <__alt_data_end+0xfc0098ec>
 8009d54:	8009883a 	mov	r4,r16
 8009d58:	e00b883a 	mov	r5,fp
 8009d5c:	01800284 	movi	r6,10
 8009d60:	000f883a 	mov	r7,zero
 8009d64:	800bb380 	call	800bb38 <__multadd>
 8009d68:	d9000517 	ldw	r4,20(sp)
 8009d6c:	d9800b17 	ldw	r6,44(sp)
 8009d70:	1039883a 	mov	fp,r2
 8009d74:	213fffc4 	addi	r4,r4,-1
 8009d78:	d9000515 	stw	r4,20(sp)
 8009d7c:	303f2d1e 	bne	r6,zero,8009a34 <__alt_data_end+0xfc009a34>
 8009d80:	d9000d17 	ldw	r4,52(sp)
 8009d84:	0101780e 	bge	zero,r4,800a368 <_dtoa_r+0x1670>
 8009d88:	d9000615 	stw	r4,24(sp)
 8009d8c:	003edb06 	br	80098fc <__alt_data_end+0xfc0098fc>
 8009d90:	00800084 	movi	r2,2
 8009d94:	30818e1e 	bne	r6,r2,800a3d0 <_dtoa_r+0x16d8>
 8009d98:	d8000b15 	stw	zero,44(sp)
 8009d9c:	003f8106 	br	8009ba4 <__alt_data_end+0xfc009ba4>
 8009da0:	d8800717 	ldw	r2,28(sp)
 8009da4:	003c0306 	br	8008db4 <__alt_data_end+0xfc008db4>
 8009da8:	d9000317 	ldw	r4,12(sp)
 8009dac:	00800084 	movi	r2,2
 8009db0:	113ed00e 	bge	r2,r4,80098f4 <__alt_data_end+0xfc0098f4>
 8009db4:	d8c00617 	ldw	r3,24(sp)
 8009db8:	183f901e 	bne	r3,zero,8009bfc <__alt_data_end+0xfc009bfc>
 8009dbc:	a80b883a 	mov	r5,r21
 8009dc0:	8009883a 	mov	r4,r16
 8009dc4:	01800144 	movi	r6,5
 8009dc8:	000f883a 	mov	r7,zero
 8009dcc:	800bb380 	call	800bb38 <__multadd>
 8009dd0:	e009883a 	mov	r4,fp
 8009dd4:	100b883a 	mov	r5,r2
 8009dd8:	102b883a 	mov	r21,r2
 8009ddc:	800c3e40 	call	800c3e4 <__mcmp>
 8009de0:	00bf860e 	bge	zero,r2,8009bfc <__alt_data_end+0xfc009bfc>
 8009de4:	d9800717 	ldw	r6,28(sp)
 8009de8:	00800c44 	movi	r2,49
 8009dec:	30800005 	stb	r2,0(r6)
 8009df0:	d8800517 	ldw	r2,20(sp)
 8009df4:	35c00044 	addi	r23,r6,1
 8009df8:	10800044 	addi	r2,r2,1
 8009dfc:	d8800515 	stw	r2,20(sp)
 8009e00:	003f8206 	br	8009c0c <__alt_data_end+0xfc009c0c>
 8009e04:	903e981e 	bne	r18,zero,8009868 <__alt_data_end+0xfc009868>
 8009e08:	003f8b06 	br	8009c38 <__alt_data_end+0xfc009c38>
 8009e0c:	d9800517 	ldw	r6,20(sp)
 8009e10:	d8c00717 	ldw	r3,28(sp)
 8009e14:	00800c44 	movi	r2,49
 8009e18:	31800044 	addi	r6,r6,1
 8009e1c:	d9800515 	stw	r6,20(sp)
 8009e20:	18800005 	stb	r2,0(r3)
 8009e24:	003ee906 	br	80099cc <__alt_data_end+0xfc0099cc>
 8009e28:	dc000317 	ldw	r16,12(sp)
 8009e2c:	003d6006 	br	80093b0 <__alt_data_end+0xfc0093b0>
 8009e30:	8809883a 	mov	r4,r17
 8009e34:	80137ec0 	call	80137ec <__floatsidf>
 8009e38:	a009883a 	mov	r4,r20
 8009e3c:	a80b883a 	mov	r5,r21
 8009e40:	100d883a 	mov	r6,r2
 8009e44:	180f883a 	mov	r7,r3
 8009e48:	80126280 	call	8012628 <__muldf3>
 8009e4c:	1009883a 	mov	r4,r2
 8009e50:	180b883a 	mov	r5,r3
 8009e54:	000d883a 	mov	r6,zero
 8009e58:	01d00734 	movhi	r7,16412
 8009e5c:	80111c80 	call	80111c8 <__adddf3>
 8009e60:	1023883a 	mov	r17,r2
 8009e64:	00bf3034 	movhi	r2,64704
 8009e68:	1885883a 	add	r2,r3,r2
 8009e6c:	d8800e15 	stw	r2,56(sp)
 8009e70:	a009883a 	mov	r4,r20
 8009e74:	a80b883a 	mov	r5,r21
 8009e78:	000d883a 	mov	r6,zero
 8009e7c:	01d00534 	movhi	r7,16404
 8009e80:	8012e940 	call	8012e94 <__subdf3>
 8009e84:	d9c00e17 	ldw	r7,56(sp)
 8009e88:	1009883a 	mov	r4,r2
 8009e8c:	180b883a 	mov	r5,r3
 8009e90:	880d883a 	mov	r6,r17
 8009e94:	102b883a 	mov	r21,r2
 8009e98:	1829883a 	mov	r20,r3
 8009e9c:	80124680 	call	8012468 <__gedf2>
 8009ea0:	00807716 	blt	zero,r2,800a080 <_dtoa_r+0x1388>
 8009ea4:	d8800e17 	ldw	r2,56(sp)
 8009ea8:	a809883a 	mov	r4,r21
 8009eac:	a00b883a 	mov	r5,r20
 8009eb0:	11e0003c 	xorhi	r7,r2,32768
 8009eb4:	880d883a 	mov	r6,r17
 8009eb8:	80125480 	call	8012548 <__ledf2>
 8009ebc:	103d6b0e 	bge	r2,zero,800946c <__alt_data_end+0xfc00946c>
 8009ec0:	002b883a 	mov	r21,zero
 8009ec4:	0023883a 	mov	r17,zero
 8009ec8:	003f4c06 	br	8009bfc <__alt_data_end+0xfc009bfc>
 8009ecc:	d9800917 	ldw	r6,36(sp)
 8009ed0:	e00b883a 	mov	r5,fp
 8009ed4:	8009883a 	mov	r4,r16
 8009ed8:	800c15c0 	call	800c15c <__pow5mult>
 8009edc:	1039883a 	mov	fp,r2
 8009ee0:	003e2706 	br	8009780 <__alt_data_end+0xfc009780>
 8009ee4:	d8000b15 	stw	zero,44(sp)
 8009ee8:	003c4906 	br	8009010 <__alt_data_end+0xfc009010>
 8009eec:	d9000917 	ldw	r4,36(sp)
 8009ef0:	d9800a17 	ldw	r6,40(sp)
 8009ef4:	dd400915 	stw	r21,36(sp)
 8009ef8:	a905c83a 	sub	r2,r21,r4
 8009efc:	308d883a 	add	r6,r6,r2
 8009f00:	d9800a15 	stw	r6,40(sp)
 8009f04:	002b883a 	mov	r21,zero
 8009f08:	003df206 	br	80096d4 <__alt_data_end+0xfc0096d4>
 8009f0c:	dc800e15 	stw	r18,56(sp)
 8009f10:	982b883a 	mov	r21,r19
 8009f14:	04400084 	movi	r17,2
 8009f18:	003c7406 	br	80090ec <__alt_data_end+0xfc0090ec>
 8009f1c:	04400044 	movi	r17,1
 8009f20:	dc400d15 	stw	r17,52(sp)
 8009f24:	dc400615 	stw	r17,24(sp)
 8009f28:	dc402215 	stw	r17,136(sp)
 8009f2c:	80001115 	stw	zero,68(r16)
 8009f30:	000b883a 	mov	r5,zero
 8009f34:	003c4a06 	br	8009060 <__alt_data_end+0xfc009060>
 8009f38:	3023883a 	mov	r17,r6
 8009f3c:	003ffb06 	br	8009f2c <__alt_data_end+0xfc009f2c>
 8009f40:	1000021e 	bne	r2,zero,8009f4c <_dtoa_r+0x1254>
 8009f44:	4200004c 	andi	r8,r8,1
 8009f48:	403e8f1e 	bne	r8,zero,8009988 <__alt_data_end+0xfc009988>
 8009f4c:	01000c04 	movi	r4,48
 8009f50:	00000106 	br	8009f58 <_dtoa_r+0x1260>
 8009f54:	102f883a 	mov	r23,r2
 8009f58:	b8bfffc4 	addi	r2,r23,-1
 8009f5c:	10c00007 	ldb	r3,0(r2)
 8009f60:	193ffc26 	beq	r3,r4,8009f54 <__alt_data_end+0xfc009f54>
 8009f64:	003e9906 	br	80099cc <__alt_data_end+0xfc0099cc>
 8009f68:	d9000517 	ldw	r4,20(sp)
 8009f6c:	012fc83a 	sub	r23,zero,r4
 8009f70:	b800ad26 	beq	r23,zero,800a228 <_dtoa_r+0x1530>
 8009f74:	b88003cc 	andi	r2,r23,15
 8009f78:	100490fa 	slli	r2,r2,3
 8009f7c:	00c20074 	movhi	r3,2049
 8009f80:	18de9704 	addi	r3,r3,31324
 8009f84:	1885883a 	add	r2,r3,r2
 8009f88:	11800017 	ldw	r6,0(r2)
 8009f8c:	11c00117 	ldw	r7,4(r2)
 8009f90:	b82fd13a 	srai	r23,r23,4
 8009f94:	9009883a 	mov	r4,r18
 8009f98:	980b883a 	mov	r5,r19
 8009f9c:	80126280 	call	8012628 <__muldf3>
 8009fa0:	1029883a 	mov	r20,r2
 8009fa4:	182b883a 	mov	r21,r3
 8009fa8:	b800f426 	beq	r23,zero,800a37c <_dtoa_r+0x1684>
 8009fac:	02020074 	movhi	r8,2049
 8009fb0:	421e8d04 	addi	r8,r8,31284
 8009fb4:	8029883a 	mov	r20,r16
 8009fb8:	04400084 	movi	r17,2
 8009fbc:	4021883a 	mov	r16,r8
 8009fc0:	b980004c 	andi	r6,r23,1
 8009fc4:	1009883a 	mov	r4,r2
 8009fc8:	b82fd07a 	srai	r23,r23,1
 8009fcc:	180b883a 	mov	r5,r3
 8009fd0:	30000426 	beq	r6,zero,8009fe4 <_dtoa_r+0x12ec>
 8009fd4:	81800017 	ldw	r6,0(r16)
 8009fd8:	81c00117 	ldw	r7,4(r16)
 8009fdc:	8c400044 	addi	r17,r17,1
 8009fe0:	80126280 	call	8012628 <__muldf3>
 8009fe4:	84000204 	addi	r16,r16,8
 8009fe8:	b83ff51e 	bne	r23,zero,8009fc0 <__alt_data_end+0xfc009fc0>
 8009fec:	a021883a 	mov	r16,r20
 8009ff0:	182b883a 	mov	r21,r3
 8009ff4:	1029883a 	mov	r20,r2
 8009ff8:	003c5506 	br	8009150 <__alt_data_end+0xfc009150>
 8009ffc:	d9800517 	ldw	r6,20(sp)
 800a000:	d9000717 	ldw	r4,28(sp)
 800a004:	00c00c04 	movi	r3,48
 800a008:	31800044 	addi	r6,r6,1
 800a00c:	d9800515 	stw	r6,20(sp)
 800a010:	20c00005 	stb	r3,0(r4)
 800a014:	02000c44 	movi	r8,49
 800a018:	003da206 	br	80096a4 <__alt_data_end+0xfc0096a4>
 800a01c:	89400117 	ldw	r5,4(r17)
 800a020:	8009883a 	mov	r4,r16
 800a024:	800ba680 	call	800ba68 <_Balloc>
 800a028:	89800417 	ldw	r6,16(r17)
 800a02c:	11000304 	addi	r4,r2,12
 800a030:	89400304 	addi	r5,r17,12
 800a034:	31800084 	addi	r6,r6,2
 800a038:	318d883a 	add	r6,r6,r6
 800a03c:	318d883a 	add	r6,r6,r6
 800a040:	1027883a 	mov	r19,r2
 800a044:	800b7d40 	call	800b7d4 <memcpy>
 800a048:	8009883a 	mov	r4,r16
 800a04c:	980b883a 	mov	r5,r19
 800a050:	01800044 	movi	r6,1
 800a054:	800c29c0 	call	800c29c <__lshift>
 800a058:	1029883a 	mov	r20,r2
 800a05c:	003e8606 	br	8009a78 <__alt_data_end+0xfc009a78>
 800a060:	00800e44 	movi	r2,57
 800a064:	90809526 	beq	r18,r2,800a2bc <_dtoa_r+0x15c4>
 800a068:	92000044 	addi	r8,r18,1
 800a06c:	003f2306 	br	8009cfc <__alt_data_end+0xfc009cfc>
 800a070:	9011883a 	mov	r8,r18
 800a074:	8825883a 	mov	r18,r17
 800a078:	a023883a 	mov	r17,r20
 800a07c:	003e3706 	br	800995c <__alt_data_end+0xfc00995c>
 800a080:	002b883a 	mov	r21,zero
 800a084:	0023883a 	mov	r17,zero
 800a088:	003f5606 	br	8009de4 <__alt_data_end+0xfc009de4>
 800a08c:	51bfffc4 	addi	r6,r10,-1
 800a090:	300490fa 	slli	r2,r6,3
 800a094:	00c20074 	movhi	r3,2049
 800a098:	18de9704 	addi	r3,r3,31324
 800a09c:	1885883a 	add	r2,r3,r2
 800a0a0:	d9c00e17 	ldw	r7,56(sp)
 800a0a4:	11000017 	ldw	r4,0(r2)
 800a0a8:	11400117 	ldw	r5,4(r2)
 800a0ac:	d8800717 	ldw	r2,28(sp)
 800a0b0:	d9801015 	stw	r6,64(sp)
 800a0b4:	880d883a 	mov	r6,r17
 800a0b8:	da801615 	stw	r10,88(sp)
 800a0bc:	15c00044 	addi	r23,r2,1
 800a0c0:	80126280 	call	8012628 <__muldf3>
 800a0c4:	a80b883a 	mov	r5,r21
 800a0c8:	a009883a 	mov	r4,r20
 800a0cc:	d8c01115 	stw	r3,68(sp)
 800a0d0:	d8800e15 	stw	r2,56(sp)
 800a0d4:	80137640 	call	8013764 <__fixdfsi>
 800a0d8:	1009883a 	mov	r4,r2
 800a0dc:	1023883a 	mov	r17,r2
 800a0e0:	80137ec0 	call	80137ec <__floatsidf>
 800a0e4:	a009883a 	mov	r4,r20
 800a0e8:	a80b883a 	mov	r5,r21
 800a0ec:	100d883a 	mov	r6,r2
 800a0f0:	180f883a 	mov	r7,r3
 800a0f4:	8012e940 	call	8012e94 <__subdf3>
 800a0f8:	1813883a 	mov	r9,r3
 800a0fc:	d8c00717 	ldw	r3,28(sp)
 800a100:	8c400c04 	addi	r17,r17,48
 800a104:	1011883a 	mov	r8,r2
 800a108:	1c400005 	stb	r17,0(r3)
 800a10c:	da801617 	ldw	r10,88(sp)
 800a110:	00800044 	movi	r2,1
 800a114:	50802326 	beq	r10,r2,800a1a4 <_dtoa_r+0x14ac>
 800a118:	d8800717 	ldw	r2,28(sp)
 800a11c:	b82b883a 	mov	r21,r23
 800a120:	dc001315 	stw	r16,76(sp)
 800a124:	12a9883a 	add	r20,r2,r10
 800a128:	4807883a 	mov	r3,r9
 800a12c:	4005883a 	mov	r2,r8
 800a130:	dc801415 	stw	r18,80(sp)
 800a134:	000d883a 	mov	r6,zero
 800a138:	01d00934 	movhi	r7,16420
 800a13c:	1009883a 	mov	r4,r2
 800a140:	180b883a 	mov	r5,r3
 800a144:	80126280 	call	8012628 <__muldf3>
 800a148:	180b883a 	mov	r5,r3
 800a14c:	1009883a 	mov	r4,r2
 800a150:	1821883a 	mov	r16,r3
 800a154:	1025883a 	mov	r18,r2
 800a158:	80137640 	call	8013764 <__fixdfsi>
 800a15c:	1009883a 	mov	r4,r2
 800a160:	1023883a 	mov	r17,r2
 800a164:	80137ec0 	call	80137ec <__floatsidf>
 800a168:	9009883a 	mov	r4,r18
 800a16c:	800b883a 	mov	r5,r16
 800a170:	100d883a 	mov	r6,r2
 800a174:	180f883a 	mov	r7,r3
 800a178:	8c400c04 	addi	r17,r17,48
 800a17c:	8012e940 	call	8012e94 <__subdf3>
 800a180:	ad400044 	addi	r21,r21,1
 800a184:	ac7fffc5 	stb	r17,-1(r21)
 800a188:	ad3fea1e 	bne	r21,r20,800a134 <__alt_data_end+0xfc00a134>
 800a18c:	1813883a 	mov	r9,r3
 800a190:	d8c01017 	ldw	r3,64(sp)
 800a194:	dc001317 	ldw	r16,76(sp)
 800a198:	dc801417 	ldw	r18,80(sp)
 800a19c:	1011883a 	mov	r8,r2
 800a1a0:	b8ef883a 	add	r23,r23,r3
 800a1a4:	d9000e17 	ldw	r4,56(sp)
 800a1a8:	d9401117 	ldw	r5,68(sp)
 800a1ac:	000d883a 	mov	r6,zero
 800a1b0:	01cff834 	movhi	r7,16352
 800a1b4:	da001715 	stw	r8,92(sp)
 800a1b8:	da401515 	stw	r9,84(sp)
 800a1bc:	80111c80 	call	80111c8 <__adddf3>
 800a1c0:	da001717 	ldw	r8,92(sp)
 800a1c4:	da401517 	ldw	r9,84(sp)
 800a1c8:	1009883a 	mov	r4,r2
 800a1cc:	400d883a 	mov	r6,r8
 800a1d0:	480f883a 	mov	r7,r9
 800a1d4:	180b883a 	mov	r5,r3
 800a1d8:	80125480 	call	8012548 <__ledf2>
 800a1dc:	da001717 	ldw	r8,92(sp)
 800a1e0:	da401517 	ldw	r9,84(sp)
 800a1e4:	10003b0e 	bge	r2,zero,800a2d4 <_dtoa_r+0x15dc>
 800a1e8:	d9001217 	ldw	r4,72(sp)
 800a1ec:	bd7fffc3 	ldbu	r21,-1(r23)
 800a1f0:	d9000515 	stw	r4,20(sp)
 800a1f4:	003d1c06 	br	8009668 <__alt_data_end+0xfc009668>
 800a1f8:	d8c00817 	ldw	r3,32(sp)
 800a1fc:	18a9c83a 	sub	r20,r3,r2
 800a200:	0005883a 	mov	r2,zero
 800a204:	003d3706 	br	80096e4 <__alt_data_end+0xfc0096e4>
 800a208:	00800044 	movi	r2,1
 800a20c:	003dd006 	br	8009950 <__alt_data_end+0xfc009950>
 800a210:	d8c00217 	ldw	r3,8(sp)
 800a214:	00800d84 	movi	r2,54
 800a218:	dd400917 	ldw	r21,36(sp)
 800a21c:	10c5c83a 	sub	r2,r2,r3
 800a220:	dd000817 	ldw	r20,32(sp)
 800a224:	003d2f06 	br	80096e4 <__alt_data_end+0xfc0096e4>
 800a228:	9029883a 	mov	r20,r18
 800a22c:	982b883a 	mov	r21,r19
 800a230:	04400084 	movi	r17,2
 800a234:	003bc606 	br	8009150 <__alt_data_end+0xfc009150>
 800a238:	d8800617 	ldw	r2,24(sp)
 800a23c:	103efc26 	beq	r2,zero,8009e30 <__alt_data_end+0xfc009e30>
 800a240:	d8c00d17 	ldw	r3,52(sp)
 800a244:	00fc890e 	bge	zero,r3,800946c <__alt_data_end+0xfc00946c>
 800a248:	a80b883a 	mov	r5,r21
 800a24c:	a009883a 	mov	r4,r20
 800a250:	000d883a 	mov	r6,zero
 800a254:	01d00934 	movhi	r7,16420
 800a258:	80126280 	call	8012628 <__muldf3>
 800a25c:	89000044 	addi	r4,r17,1
 800a260:	1029883a 	mov	r20,r2
 800a264:	182b883a 	mov	r21,r3
 800a268:	80137ec0 	call	80137ec <__floatsidf>
 800a26c:	a009883a 	mov	r4,r20
 800a270:	a80b883a 	mov	r5,r21
 800a274:	100d883a 	mov	r6,r2
 800a278:	180f883a 	mov	r7,r3
 800a27c:	80126280 	call	8012628 <__muldf3>
 800a280:	1009883a 	mov	r4,r2
 800a284:	180b883a 	mov	r5,r3
 800a288:	000d883a 	mov	r6,zero
 800a28c:	01d00734 	movhi	r7,16412
 800a290:	80111c80 	call	80111c8 <__adddf3>
 800a294:	d9000517 	ldw	r4,20(sp)
 800a298:	1023883a 	mov	r17,r2
 800a29c:	00bf3034 	movhi	r2,64704
 800a2a0:	213fffc4 	addi	r4,r4,-1
 800a2a4:	1885883a 	add	r2,r3,r2
 800a2a8:	d9001215 	stw	r4,72(sp)
 800a2ac:	d8800e15 	stw	r2,56(sp)
 800a2b0:	da800d17 	ldw	r10,52(sp)
 800a2b4:	003bc306 	br	80091c4 <__alt_data_end+0xfc0091c4>
 800a2b8:	b039883a 	mov	fp,r22
 800a2bc:	01000e44 	movi	r4,57
 800a2c0:	8825883a 	mov	r18,r17
 800a2c4:	9dc00044 	addi	r23,r19,1
 800a2c8:	99000005 	stb	r4,0(r19)
 800a2cc:	a023883a 	mov	r17,r20
 800a2d0:	003dae06 	br	800998c <__alt_data_end+0xfc00998c>
 800a2d4:	d9800e17 	ldw	r6,56(sp)
 800a2d8:	d9c01117 	ldw	r7,68(sp)
 800a2dc:	0009883a 	mov	r4,zero
 800a2e0:	014ff834 	movhi	r5,16352
 800a2e4:	da001715 	stw	r8,92(sp)
 800a2e8:	da401515 	stw	r9,84(sp)
 800a2ec:	8012e940 	call	8012e94 <__subdf3>
 800a2f0:	da001717 	ldw	r8,92(sp)
 800a2f4:	da401517 	ldw	r9,84(sp)
 800a2f8:	1009883a 	mov	r4,r2
 800a2fc:	180b883a 	mov	r5,r3
 800a300:	400d883a 	mov	r6,r8
 800a304:	480f883a 	mov	r7,r9
 800a308:	80124680 	call	8012468 <__gedf2>
 800a30c:	00bc570e 	bge	zero,r2,800946c <__alt_data_end+0xfc00946c>
 800a310:	01000c04 	movi	r4,48
 800a314:	00000106 	br	800a31c <_dtoa_r+0x1624>
 800a318:	102f883a 	mov	r23,r2
 800a31c:	b8bfffc4 	addi	r2,r23,-1
 800a320:	10c00007 	ldb	r3,0(r2)
 800a324:	193ffc26 	beq	r3,r4,800a318 <__alt_data_end+0xfc00a318>
 800a328:	d9801217 	ldw	r6,72(sp)
 800a32c:	d9800515 	stw	r6,20(sp)
 800a330:	003c1f06 	br	80093b0 <__alt_data_end+0xfc0093b0>
 800a334:	d8801217 	ldw	r2,72(sp)
 800a338:	dc001117 	ldw	r16,68(sp)
 800a33c:	d8800515 	stw	r2,20(sp)
 800a340:	003cc906 	br	8009668 <__alt_data_end+0xfc009668>
 800a344:	dd801317 	ldw	r22,76(sp)
 800a348:	dc001117 	ldw	r16,68(sp)
 800a34c:	dcc01417 	ldw	r19,80(sp)
 800a350:	dc801017 	ldw	r18,64(sp)
 800a354:	003c4506 	br	800946c <__alt_data_end+0xfc00946c>
 800a358:	103e5d1e 	bne	r2,zero,8009cd0 <__alt_data_end+0xfc009cd0>
 800a35c:	4080004c 	andi	r2,r8,1
 800a360:	103e5b26 	beq	r2,zero,8009cd0 <__alt_data_end+0xfc009cd0>
 800a364:	003e5706 	br	8009cc4 <__alt_data_end+0xfc009cc4>
 800a368:	d8c00317 	ldw	r3,12(sp)
 800a36c:	00800084 	movi	r2,2
 800a370:	10c00a16 	blt	r2,r3,800a39c <_dtoa_r+0x16a4>
 800a374:	d9000d17 	ldw	r4,52(sp)
 800a378:	003e8306 	br	8009d88 <__alt_data_end+0xfc009d88>
 800a37c:	04400084 	movi	r17,2
 800a380:	003b7306 	br	8009150 <__alt_data_end+0xfc009150>
 800a384:	d9801217 	ldw	r6,72(sp)
 800a388:	d9800515 	stw	r6,20(sp)
 800a38c:	003cb606 	br	8009668 <__alt_data_end+0xfc009668>
 800a390:	d9001217 	ldw	r4,72(sp)
 800a394:	d9000515 	stw	r4,20(sp)
 800a398:	003c0506 	br	80093b0 <__alt_data_end+0xfc0093b0>
 800a39c:	d9800d17 	ldw	r6,52(sp)
 800a3a0:	d9800615 	stw	r6,24(sp)
 800a3a4:	003e8306 	br	8009db4 <__alt_data_end+0xfc009db4>
 800a3a8:	d9800317 	ldw	r6,12(sp)
 800a3ac:	00800084 	movi	r2,2
 800a3b0:	11800216 	blt	r2,r6,800a3bc <_dtoa_r+0x16c4>
 800a3b4:	d8800d17 	ldw	r2,52(sp)
 800a3b8:	003da606 	br	8009a54 <__alt_data_end+0xfc009a54>
 800a3bc:	d8800d17 	ldw	r2,52(sp)
 800a3c0:	d8800615 	stw	r2,24(sp)
 800a3c4:	003e7b06 	br	8009db4 <__alt_data_end+0xfc009db4>
 800a3c8:	05000044 	movi	r20,1
 800a3cc:	003b0506 	br	8008fe4 <__alt_data_end+0xfc008fe4>
 800a3d0:	8009883a 	mov	r4,r16
 800a3d4:	80001115 	stw	zero,68(r16)
 800a3d8:	000b883a 	mov	r5,zero
 800a3dc:	800ba680 	call	800ba68 <_Balloc>
 800a3e0:	d8800715 	stw	r2,28(sp)
 800a3e4:	d8c00717 	ldw	r3,28(sp)
 800a3e8:	00bfffc4 	movi	r2,-1
 800a3ec:	01000044 	movi	r4,1
 800a3f0:	d8800615 	stw	r2,24(sp)
 800a3f4:	80c01015 	stw	r3,64(r16)
 800a3f8:	d9000b15 	stw	r4,44(sp)
 800a3fc:	d8002215 	stw	zero,136(sp)
 800a400:	d8800d15 	stw	r2,52(sp)
 800a404:	003c1906 	br	800946c <__alt_data_end+0xfc00946c>
 800a408:	193d2926 	beq	r3,r4,80098b0 <__alt_data_end+0xfc0098b0>
 800a40c:	00c00f04 	movi	r3,60
 800a410:	1885c83a 	sub	r2,r3,r2
 800a414:	003d7b06 	br	8009a04 <__alt_data_end+0xfc009a04>
 800a418:	000b883a 	mov	r5,zero
 800a41c:	003b1006 	br	8009060 <__alt_data_end+0xfc009060>

0800a420 <_fflush_r>:
 800a420:	defffb04 	addi	sp,sp,-20
 800a424:	dcc00315 	stw	r19,12(sp)
 800a428:	dc000015 	stw	r16,0(sp)
 800a42c:	dfc00415 	stw	ra,16(sp)
 800a430:	dc800215 	stw	r18,8(sp)
 800a434:	dc400115 	stw	r17,4(sp)
 800a438:	2027883a 	mov	r19,r4
 800a43c:	2821883a 	mov	r16,r5
 800a440:	20000226 	beq	r4,zero,800a44c <_fflush_r+0x2c>
 800a444:	20800e17 	ldw	r2,56(r4)
 800a448:	10005326 	beq	r2,zero,800a598 <_fflush_r+0x178>
 800a44c:	8080030b 	ldhu	r2,12(r16)
 800a450:	10ffffcc 	andi	r3,r2,65535
 800a454:	18e0001c 	xori	r3,r3,32768
 800a458:	18e00004 	addi	r3,r3,-32768
 800a45c:	18002c26 	beq	r3,zero,800a510 <_fflush_r+0xf0>
 800a460:	10c0020c 	andi	r3,r2,8
 800a464:	1800321e 	bne	r3,zero,800a530 <_fflush_r+0x110>
 800a468:	80c00117 	ldw	r3,4(r16)
 800a46c:	10820014 	ori	r2,r2,2048
 800a470:	8080030d 	sth	r2,12(r16)
 800a474:	00c0570e 	bge	zero,r3,800a5d4 <_fflush_r+0x1b4>
 800a478:	82000a17 	ldw	r8,40(r16)
 800a47c:	40002426 	beq	r8,zero,800a510 <_fflush_r+0xf0>
 800a480:	9c400017 	ldw	r17,0(r19)
 800a484:	10c4000c 	andi	r3,r2,4096
 800a488:	98000015 	stw	zero,0(r19)
 800a48c:	18004626 	beq	r3,zero,800a5a8 <_fflush_r+0x188>
 800a490:	81801417 	ldw	r6,80(r16)
 800a494:	10c0010c 	andi	r3,r2,4
 800a498:	18000626 	beq	r3,zero,800a4b4 <_fflush_r+0x94>
 800a49c:	80c00117 	ldw	r3,4(r16)
 800a4a0:	80800c17 	ldw	r2,48(r16)
 800a4a4:	30cdc83a 	sub	r6,r6,r3
 800a4a8:	10000226 	beq	r2,zero,800a4b4 <_fflush_r+0x94>
 800a4ac:	80800f17 	ldw	r2,60(r16)
 800a4b0:	308dc83a 	sub	r6,r6,r2
 800a4b4:	81400717 	ldw	r5,28(r16)
 800a4b8:	9809883a 	mov	r4,r19
 800a4bc:	000f883a 	mov	r7,zero
 800a4c0:	403ee83a 	callr	r8
 800a4c4:	00ffffc4 	movi	r3,-1
 800a4c8:	10c04526 	beq	r2,r3,800a5e0 <_fflush_r+0x1c0>
 800a4cc:	80c0030b 	ldhu	r3,12(r16)
 800a4d0:	81000417 	ldw	r4,16(r16)
 800a4d4:	80000115 	stw	zero,4(r16)
 800a4d8:	197dffcc 	andi	r5,r3,63487
 800a4dc:	8140030d 	sth	r5,12(r16)
 800a4e0:	81000015 	stw	r4,0(r16)
 800a4e4:	18c4000c 	andi	r3,r3,4096
 800a4e8:	18000126 	beq	r3,zero,800a4f0 <_fflush_r+0xd0>
 800a4ec:	80801415 	stw	r2,80(r16)
 800a4f0:	81400c17 	ldw	r5,48(r16)
 800a4f4:	9c400015 	stw	r17,0(r19)
 800a4f8:	28000526 	beq	r5,zero,800a510 <_fflush_r+0xf0>
 800a4fc:	80801004 	addi	r2,r16,64
 800a500:	28800226 	beq	r5,r2,800a50c <_fflush_r+0xec>
 800a504:	9809883a 	mov	r4,r19
 800a508:	800ab500 	call	800ab50 <_free_r>
 800a50c:	80000c15 	stw	zero,48(r16)
 800a510:	0005883a 	mov	r2,zero
 800a514:	dfc00417 	ldw	ra,16(sp)
 800a518:	dcc00317 	ldw	r19,12(sp)
 800a51c:	dc800217 	ldw	r18,8(sp)
 800a520:	dc400117 	ldw	r17,4(sp)
 800a524:	dc000017 	ldw	r16,0(sp)
 800a528:	dec00504 	addi	sp,sp,20
 800a52c:	f800283a 	ret
 800a530:	84800417 	ldw	r18,16(r16)
 800a534:	903ff626 	beq	r18,zero,800a510 <__alt_data_end+0xfc00a510>
 800a538:	84400017 	ldw	r17,0(r16)
 800a53c:	108000cc 	andi	r2,r2,3
 800a540:	84800015 	stw	r18,0(r16)
 800a544:	8ca3c83a 	sub	r17,r17,r18
 800a548:	10001526 	beq	r2,zero,800a5a0 <_fflush_r+0x180>
 800a54c:	0005883a 	mov	r2,zero
 800a550:	80800215 	stw	r2,8(r16)
 800a554:	04400316 	blt	zero,r17,800a564 <_fflush_r+0x144>
 800a558:	003fed06 	br	800a510 <__alt_data_end+0xfc00a510>
 800a55c:	90a5883a 	add	r18,r18,r2
 800a560:	047feb0e 	bge	zero,r17,800a510 <__alt_data_end+0xfc00a510>
 800a564:	80800917 	ldw	r2,36(r16)
 800a568:	81400717 	ldw	r5,28(r16)
 800a56c:	880f883a 	mov	r7,r17
 800a570:	900d883a 	mov	r6,r18
 800a574:	9809883a 	mov	r4,r19
 800a578:	103ee83a 	callr	r2
 800a57c:	88a3c83a 	sub	r17,r17,r2
 800a580:	00bff616 	blt	zero,r2,800a55c <__alt_data_end+0xfc00a55c>
 800a584:	80c0030b 	ldhu	r3,12(r16)
 800a588:	00bfffc4 	movi	r2,-1
 800a58c:	18c01014 	ori	r3,r3,64
 800a590:	80c0030d 	sth	r3,12(r16)
 800a594:	003fdf06 	br	800a514 <__alt_data_end+0xfc00a514>
 800a598:	800a9dc0 	call	800a9dc <__sinit>
 800a59c:	003fab06 	br	800a44c <__alt_data_end+0xfc00a44c>
 800a5a0:	80800517 	ldw	r2,20(r16)
 800a5a4:	003fea06 	br	800a550 <__alt_data_end+0xfc00a550>
 800a5a8:	81400717 	ldw	r5,28(r16)
 800a5ac:	000d883a 	mov	r6,zero
 800a5b0:	9809883a 	mov	r4,r19
 800a5b4:	01c00044 	movi	r7,1
 800a5b8:	403ee83a 	callr	r8
 800a5bc:	100d883a 	mov	r6,r2
 800a5c0:	00bfffc4 	movi	r2,-1
 800a5c4:	30801326 	beq	r6,r2,800a614 <_fflush_r+0x1f4>
 800a5c8:	8080030b 	ldhu	r2,12(r16)
 800a5cc:	82000a17 	ldw	r8,40(r16)
 800a5d0:	003fb006 	br	800a494 <__alt_data_end+0xfc00a494>
 800a5d4:	80c00f17 	ldw	r3,60(r16)
 800a5d8:	00ffa716 	blt	zero,r3,800a478 <__alt_data_end+0xfc00a478>
 800a5dc:	003fcc06 	br	800a510 <__alt_data_end+0xfc00a510>
 800a5e0:	98c00017 	ldw	r3,0(r19)
 800a5e4:	183fb926 	beq	r3,zero,800a4cc <__alt_data_end+0xfc00a4cc>
 800a5e8:	01000744 	movi	r4,29
 800a5ec:	19000226 	beq	r3,r4,800a5f8 <_fflush_r+0x1d8>
 800a5f0:	01000584 	movi	r4,22
 800a5f4:	1900101e 	bne	r3,r4,800a638 <_fflush_r+0x218>
 800a5f8:	8080030b 	ldhu	r2,12(r16)
 800a5fc:	80c00417 	ldw	r3,16(r16)
 800a600:	80000115 	stw	zero,4(r16)
 800a604:	10bdffcc 	andi	r2,r2,63487
 800a608:	8080030d 	sth	r2,12(r16)
 800a60c:	80c00015 	stw	r3,0(r16)
 800a610:	003fb706 	br	800a4f0 <__alt_data_end+0xfc00a4f0>
 800a614:	98800017 	ldw	r2,0(r19)
 800a618:	103feb26 	beq	r2,zero,800a5c8 <__alt_data_end+0xfc00a5c8>
 800a61c:	00c00744 	movi	r3,29
 800a620:	10c00226 	beq	r2,r3,800a62c <_fflush_r+0x20c>
 800a624:	00c00584 	movi	r3,22
 800a628:	10ffd61e 	bne	r2,r3,800a584 <__alt_data_end+0xfc00a584>
 800a62c:	9c400015 	stw	r17,0(r19)
 800a630:	0005883a 	mov	r2,zero
 800a634:	003fb706 	br	800a514 <__alt_data_end+0xfc00a514>
 800a638:	80c0030b 	ldhu	r3,12(r16)
 800a63c:	18c01014 	ori	r3,r3,64
 800a640:	80c0030d 	sth	r3,12(r16)
 800a644:	003fb306 	br	800a514 <__alt_data_end+0xfc00a514>

0800a648 <fflush>:
 800a648:	20000526 	beq	r4,zero,800a660 <fflush+0x18>
 800a64c:	008200b4 	movhi	r2,2050
 800a650:	10a64804 	addi	r2,r2,-26336
 800a654:	200b883a 	mov	r5,r4
 800a658:	11000017 	ldw	r4,0(r2)
 800a65c:	800a4201 	jmpi	800a420 <_fflush_r>
 800a660:	008200b4 	movhi	r2,2050
 800a664:	10a64704 	addi	r2,r2,-26340
 800a668:	11000017 	ldw	r4,0(r2)
 800a66c:	01420074 	movhi	r5,2049
 800a670:	29690804 	addi	r5,r5,-23520
 800a674:	800b39c1 	jmpi	800b39c <_fwalk_reent>

0800a678 <__fp_lock>:
 800a678:	0005883a 	mov	r2,zero
 800a67c:	f800283a 	ret

0800a680 <__fp_unlock>:
 800a680:	0005883a 	mov	r2,zero
 800a684:	f800283a 	ret

0800a688 <_cleanup_r>:
 800a688:	01420074 	movhi	r5,2049
 800a68c:	297f5f04 	addi	r5,r5,-644
 800a690:	800b2e41 	jmpi	800b2e4 <_fwalk>

0800a694 <__sinit.part.1>:
 800a694:	defff604 	addi	sp,sp,-40
 800a698:	00c20074 	movhi	r3,2049
 800a69c:	dfc00915 	stw	ra,36(sp)
 800a6a0:	df000815 	stw	fp,32(sp)
 800a6a4:	ddc00715 	stw	r23,28(sp)
 800a6a8:	dd800615 	stw	r22,24(sp)
 800a6ac:	dd400515 	stw	r21,20(sp)
 800a6b0:	dd000415 	stw	r20,16(sp)
 800a6b4:	dcc00315 	stw	r19,12(sp)
 800a6b8:	dc800215 	stw	r18,8(sp)
 800a6bc:	dc400115 	stw	r17,4(sp)
 800a6c0:	dc000015 	stw	r16,0(sp)
 800a6c4:	18e9a204 	addi	r3,r3,-22904
 800a6c8:	24000117 	ldw	r16,4(r4)
 800a6cc:	20c00f15 	stw	r3,60(r4)
 800a6d0:	07000044 	movi	fp,1
 800a6d4:	00c000c4 	movi	r3,3
 800a6d8:	2080bb04 	addi	r2,r4,748
 800a6dc:	20c0b915 	stw	r3,740(r4)
 800a6e0:	27000e15 	stw	fp,56(r4)
 800a6e4:	2080ba15 	stw	r2,744(r4)
 800a6e8:	2000b815 	stw	zero,736(r4)
 800a6ec:	05c00204 	movi	r23,8
 800a6f0:	00800104 	movi	r2,4
 800a6f4:	2025883a 	mov	r18,r4
 800a6f8:	b80d883a 	mov	r6,r23
 800a6fc:	81001704 	addi	r4,r16,92
 800a700:	000b883a 	mov	r5,zero
 800a704:	80000015 	stw	zero,0(r16)
 800a708:	80000115 	stw	zero,4(r16)
 800a70c:	80000215 	stw	zero,8(r16)
 800a710:	8080030d 	sth	r2,12(r16)
 800a714:	80001915 	stw	zero,100(r16)
 800a718:	8000038d 	sth	zero,14(r16)
 800a71c:	80000415 	stw	zero,16(r16)
 800a720:	80000515 	stw	zero,20(r16)
 800a724:	80000615 	stw	zero,24(r16)
 800a728:	8003cc00 	call	8003cc0 <memset>
 800a72c:	05820074 	movhi	r22,2049
 800a730:	94400217 	ldw	r17,8(r18)
 800a734:	05420074 	movhi	r21,2049
 800a738:	05020074 	movhi	r20,2049
 800a73c:	04c20074 	movhi	r19,2049
 800a740:	b5b43104 	addi	r22,r22,-12092
 800a744:	ad744804 	addi	r21,r21,-12000
 800a748:	a5346704 	addi	r20,r20,-11876
 800a74c:	9cf47e04 	addi	r19,r19,-11784
 800a750:	85800815 	stw	r22,32(r16)
 800a754:	85400915 	stw	r21,36(r16)
 800a758:	85000a15 	stw	r20,40(r16)
 800a75c:	84c00b15 	stw	r19,44(r16)
 800a760:	84000715 	stw	r16,28(r16)
 800a764:	00800284 	movi	r2,10
 800a768:	89001704 	addi	r4,r17,92
 800a76c:	b80d883a 	mov	r6,r23
 800a770:	000b883a 	mov	r5,zero
 800a774:	88000015 	stw	zero,0(r17)
 800a778:	88000115 	stw	zero,4(r17)
 800a77c:	88000215 	stw	zero,8(r17)
 800a780:	8880030d 	sth	r2,12(r17)
 800a784:	88001915 	stw	zero,100(r17)
 800a788:	8f00038d 	sth	fp,14(r17)
 800a78c:	88000415 	stw	zero,16(r17)
 800a790:	88000515 	stw	zero,20(r17)
 800a794:	88000615 	stw	zero,24(r17)
 800a798:	8003cc00 	call	8003cc0 <memset>
 800a79c:	94000317 	ldw	r16,12(r18)
 800a7a0:	00800484 	movi	r2,18
 800a7a4:	8c400715 	stw	r17,28(r17)
 800a7a8:	8d800815 	stw	r22,32(r17)
 800a7ac:	8d400915 	stw	r21,36(r17)
 800a7b0:	8d000a15 	stw	r20,40(r17)
 800a7b4:	8cc00b15 	stw	r19,44(r17)
 800a7b8:	8080030d 	sth	r2,12(r16)
 800a7bc:	00800084 	movi	r2,2
 800a7c0:	80000015 	stw	zero,0(r16)
 800a7c4:	80000115 	stw	zero,4(r16)
 800a7c8:	80000215 	stw	zero,8(r16)
 800a7cc:	80001915 	stw	zero,100(r16)
 800a7d0:	8080038d 	sth	r2,14(r16)
 800a7d4:	80000415 	stw	zero,16(r16)
 800a7d8:	80000515 	stw	zero,20(r16)
 800a7dc:	80000615 	stw	zero,24(r16)
 800a7e0:	81001704 	addi	r4,r16,92
 800a7e4:	000b883a 	mov	r5,zero
 800a7e8:	b80d883a 	mov	r6,r23
 800a7ec:	8003cc00 	call	8003cc0 <memset>
 800a7f0:	84000715 	stw	r16,28(r16)
 800a7f4:	85800815 	stw	r22,32(r16)
 800a7f8:	85400915 	stw	r21,36(r16)
 800a7fc:	85000a15 	stw	r20,40(r16)
 800a800:	84c00b15 	stw	r19,44(r16)
 800a804:	dfc00917 	ldw	ra,36(sp)
 800a808:	df000817 	ldw	fp,32(sp)
 800a80c:	ddc00717 	ldw	r23,28(sp)
 800a810:	dd800617 	ldw	r22,24(sp)
 800a814:	dd400517 	ldw	r21,20(sp)
 800a818:	dd000417 	ldw	r20,16(sp)
 800a81c:	dcc00317 	ldw	r19,12(sp)
 800a820:	dc800217 	ldw	r18,8(sp)
 800a824:	dc400117 	ldw	r17,4(sp)
 800a828:	dc000017 	ldw	r16,0(sp)
 800a82c:	dec00a04 	addi	sp,sp,40
 800a830:	f800283a 	ret

0800a834 <__sfmoreglue>:
 800a834:	defffc04 	addi	sp,sp,-16
 800a838:	dc800215 	stw	r18,8(sp)
 800a83c:	2825883a 	mov	r18,r5
 800a840:	dc000015 	stw	r16,0(sp)
 800a844:	01401a04 	movi	r5,104
 800a848:	2021883a 	mov	r16,r4
 800a84c:	9009883a 	mov	r4,r18
 800a850:	dfc00315 	stw	ra,12(sp)
 800a854:	dc400115 	stw	r17,4(sp)
 800a858:	8002f580 	call	8002f58 <__mulsi3>
 800a85c:	8009883a 	mov	r4,r16
 800a860:	11400304 	addi	r5,r2,12
 800a864:	1023883a 	mov	r17,r2
 800a868:	80035180 	call	8003518 <_malloc_r>
 800a86c:	1021883a 	mov	r16,r2
 800a870:	10000726 	beq	r2,zero,800a890 <__sfmoreglue+0x5c>
 800a874:	11000304 	addi	r4,r2,12
 800a878:	10000015 	stw	zero,0(r2)
 800a87c:	14800115 	stw	r18,4(r2)
 800a880:	11000215 	stw	r4,8(r2)
 800a884:	000b883a 	mov	r5,zero
 800a888:	880d883a 	mov	r6,r17
 800a88c:	8003cc00 	call	8003cc0 <memset>
 800a890:	8005883a 	mov	r2,r16
 800a894:	dfc00317 	ldw	ra,12(sp)
 800a898:	dc800217 	ldw	r18,8(sp)
 800a89c:	dc400117 	ldw	r17,4(sp)
 800a8a0:	dc000017 	ldw	r16,0(sp)
 800a8a4:	dec00404 	addi	sp,sp,16
 800a8a8:	f800283a 	ret

0800a8ac <__sfp>:
 800a8ac:	008200b4 	movhi	r2,2050
 800a8b0:	defffb04 	addi	sp,sp,-20
 800a8b4:	10a64704 	addi	r2,r2,-26340
 800a8b8:	dc800215 	stw	r18,8(sp)
 800a8bc:	14800017 	ldw	r18,0(r2)
 800a8c0:	dcc00315 	stw	r19,12(sp)
 800a8c4:	dfc00415 	stw	ra,16(sp)
 800a8c8:	90800e17 	ldw	r2,56(r18)
 800a8cc:	dc400115 	stw	r17,4(sp)
 800a8d0:	dc000015 	stw	r16,0(sp)
 800a8d4:	2027883a 	mov	r19,r4
 800a8d8:	1000021e 	bne	r2,zero,800a8e4 <__sfp+0x38>
 800a8dc:	9009883a 	mov	r4,r18
 800a8e0:	800a6940 	call	800a694 <__sinit.part.1>
 800a8e4:	9480b804 	addi	r18,r18,736
 800a8e8:	047fffc4 	movi	r17,-1
 800a8ec:	91400117 	ldw	r5,4(r18)
 800a8f0:	94000217 	ldw	r16,8(r18)
 800a8f4:	297fffc4 	addi	r5,r5,-1
 800a8f8:	28000a16 	blt	r5,zero,800a924 <__sfp+0x78>
 800a8fc:	8080030f 	ldh	r2,12(r16)
 800a900:	10000c26 	beq	r2,zero,800a934 <__sfp+0x88>
 800a904:	80c01d04 	addi	r3,r16,116
 800a908:	00000206 	br	800a914 <__sfp+0x68>
 800a90c:	18bfe60f 	ldh	r2,-104(r3)
 800a910:	10000826 	beq	r2,zero,800a934 <__sfp+0x88>
 800a914:	297fffc4 	addi	r5,r5,-1
 800a918:	1c3ffd04 	addi	r16,r3,-12
 800a91c:	18c01a04 	addi	r3,r3,104
 800a920:	2c7ffa1e 	bne	r5,r17,800a90c <__alt_data_end+0xfc00a90c>
 800a924:	90800017 	ldw	r2,0(r18)
 800a928:	10001d26 	beq	r2,zero,800a9a0 <__sfp+0xf4>
 800a92c:	1025883a 	mov	r18,r2
 800a930:	003fee06 	br	800a8ec <__alt_data_end+0xfc00a8ec>
 800a934:	00bfffc4 	movi	r2,-1
 800a938:	8080038d 	sth	r2,14(r16)
 800a93c:	00800044 	movi	r2,1
 800a940:	8080030d 	sth	r2,12(r16)
 800a944:	80001915 	stw	zero,100(r16)
 800a948:	80000015 	stw	zero,0(r16)
 800a94c:	80000215 	stw	zero,8(r16)
 800a950:	80000115 	stw	zero,4(r16)
 800a954:	80000415 	stw	zero,16(r16)
 800a958:	80000515 	stw	zero,20(r16)
 800a95c:	80000615 	stw	zero,24(r16)
 800a960:	81001704 	addi	r4,r16,92
 800a964:	000b883a 	mov	r5,zero
 800a968:	01800204 	movi	r6,8
 800a96c:	8003cc00 	call	8003cc0 <memset>
 800a970:	8005883a 	mov	r2,r16
 800a974:	80000c15 	stw	zero,48(r16)
 800a978:	80000d15 	stw	zero,52(r16)
 800a97c:	80001115 	stw	zero,68(r16)
 800a980:	80001215 	stw	zero,72(r16)
 800a984:	dfc00417 	ldw	ra,16(sp)
 800a988:	dcc00317 	ldw	r19,12(sp)
 800a98c:	dc800217 	ldw	r18,8(sp)
 800a990:	dc400117 	ldw	r17,4(sp)
 800a994:	dc000017 	ldw	r16,0(sp)
 800a998:	dec00504 	addi	sp,sp,20
 800a99c:	f800283a 	ret
 800a9a0:	9809883a 	mov	r4,r19
 800a9a4:	01400104 	movi	r5,4
 800a9a8:	800a8340 	call	800a834 <__sfmoreglue>
 800a9ac:	90800015 	stw	r2,0(r18)
 800a9b0:	103fde1e 	bne	r2,zero,800a92c <__alt_data_end+0xfc00a92c>
 800a9b4:	00800304 	movi	r2,12
 800a9b8:	98800015 	stw	r2,0(r19)
 800a9bc:	0005883a 	mov	r2,zero
 800a9c0:	003ff006 	br	800a984 <__alt_data_end+0xfc00a984>

0800a9c4 <_cleanup>:
 800a9c4:	008200b4 	movhi	r2,2050
 800a9c8:	10a64704 	addi	r2,r2,-26340
 800a9cc:	11000017 	ldw	r4,0(r2)
 800a9d0:	01420074 	movhi	r5,2049
 800a9d4:	297f5f04 	addi	r5,r5,-644
 800a9d8:	800b2e41 	jmpi	800b2e4 <_fwalk>

0800a9dc <__sinit>:
 800a9dc:	20800e17 	ldw	r2,56(r4)
 800a9e0:	10000126 	beq	r2,zero,800a9e8 <__sinit+0xc>
 800a9e4:	f800283a 	ret
 800a9e8:	800a6941 	jmpi	800a694 <__sinit.part.1>

0800a9ec <__sfp_lock_acquire>:
 800a9ec:	f800283a 	ret

0800a9f0 <__sfp_lock_release>:
 800a9f0:	f800283a 	ret

0800a9f4 <__sinit_lock_acquire>:
 800a9f4:	f800283a 	ret

0800a9f8 <__sinit_lock_release>:
 800a9f8:	f800283a 	ret

0800a9fc <__fp_lock_all>:
 800a9fc:	008200b4 	movhi	r2,2050
 800aa00:	10a64804 	addi	r2,r2,-26336
 800aa04:	11000017 	ldw	r4,0(r2)
 800aa08:	01420074 	movhi	r5,2049
 800aa0c:	29699e04 	addi	r5,r5,-22920
 800aa10:	800b2e41 	jmpi	800b2e4 <_fwalk>

0800aa14 <__fp_unlock_all>:
 800aa14:	008200b4 	movhi	r2,2050
 800aa18:	10a64804 	addi	r2,r2,-26336
 800aa1c:	11000017 	ldw	r4,0(r2)
 800aa20:	01420074 	movhi	r5,2049
 800aa24:	2969a004 	addi	r5,r5,-22912
 800aa28:	800b2e41 	jmpi	800b2e4 <_fwalk>

0800aa2c <_malloc_trim_r>:
 800aa2c:	defffb04 	addi	sp,sp,-20
 800aa30:	dcc00315 	stw	r19,12(sp)
 800aa34:	04c200b4 	movhi	r19,2050
 800aa38:	dc800215 	stw	r18,8(sp)
 800aa3c:	dc400115 	stw	r17,4(sp)
 800aa40:	dc000015 	stw	r16,0(sp)
 800aa44:	dfc00415 	stw	ra,16(sp)
 800aa48:	2821883a 	mov	r16,r5
 800aa4c:	9ce04004 	addi	r19,r19,-32512
 800aa50:	2025883a 	mov	r18,r4
 800aa54:	80142ac0 	call	80142ac <__malloc_lock>
 800aa58:	98800217 	ldw	r2,8(r19)
 800aa5c:	14400117 	ldw	r17,4(r2)
 800aa60:	00bfff04 	movi	r2,-4
 800aa64:	88a2703a 	and	r17,r17,r2
 800aa68:	8c21c83a 	sub	r16,r17,r16
 800aa6c:	8403fbc4 	addi	r16,r16,4079
 800aa70:	8020d33a 	srli	r16,r16,12
 800aa74:	0083ffc4 	movi	r2,4095
 800aa78:	843fffc4 	addi	r16,r16,-1
 800aa7c:	8020933a 	slli	r16,r16,12
 800aa80:	1400060e 	bge	r2,r16,800aa9c <_malloc_trim_r+0x70>
 800aa84:	9009883a 	mov	r4,r18
 800aa88:	000b883a 	mov	r5,zero
 800aa8c:	8003f180 	call	8003f18 <_sbrk_r>
 800aa90:	98c00217 	ldw	r3,8(r19)
 800aa94:	1c47883a 	add	r3,r3,r17
 800aa98:	10c00a26 	beq	r2,r3,800aac4 <_malloc_trim_r+0x98>
 800aa9c:	9009883a 	mov	r4,r18
 800aaa0:	80142cc0 	call	80142cc <__malloc_unlock>
 800aaa4:	0005883a 	mov	r2,zero
 800aaa8:	dfc00417 	ldw	ra,16(sp)
 800aaac:	dcc00317 	ldw	r19,12(sp)
 800aab0:	dc800217 	ldw	r18,8(sp)
 800aab4:	dc400117 	ldw	r17,4(sp)
 800aab8:	dc000017 	ldw	r16,0(sp)
 800aabc:	dec00504 	addi	sp,sp,20
 800aac0:	f800283a 	ret
 800aac4:	9009883a 	mov	r4,r18
 800aac8:	040bc83a 	sub	r5,zero,r16
 800aacc:	8003f180 	call	8003f18 <_sbrk_r>
 800aad0:	00ffffc4 	movi	r3,-1
 800aad4:	10c00d26 	beq	r2,r3,800ab0c <_malloc_trim_r+0xe0>
 800aad8:	00c200b4 	movhi	r3,2050
 800aadc:	18efd304 	addi	r3,r3,-16564
 800aae0:	18800017 	ldw	r2,0(r3)
 800aae4:	99000217 	ldw	r4,8(r19)
 800aae8:	8c23c83a 	sub	r17,r17,r16
 800aaec:	8c400054 	ori	r17,r17,1
 800aaf0:	1421c83a 	sub	r16,r2,r16
 800aaf4:	24400115 	stw	r17,4(r4)
 800aaf8:	9009883a 	mov	r4,r18
 800aafc:	1c000015 	stw	r16,0(r3)
 800ab00:	80142cc0 	call	80142cc <__malloc_unlock>
 800ab04:	00800044 	movi	r2,1
 800ab08:	003fe706 	br	800aaa8 <__alt_data_end+0xfc00aaa8>
 800ab0c:	9009883a 	mov	r4,r18
 800ab10:	000b883a 	mov	r5,zero
 800ab14:	8003f180 	call	8003f18 <_sbrk_r>
 800ab18:	99000217 	ldw	r4,8(r19)
 800ab1c:	014003c4 	movi	r5,15
 800ab20:	1107c83a 	sub	r3,r2,r4
 800ab24:	28ffdd0e 	bge	r5,r3,800aa9c <__alt_data_end+0xfc00aa9c>
 800ab28:	014200b4 	movhi	r5,2050
 800ab2c:	29664904 	addi	r5,r5,-26332
 800ab30:	29400017 	ldw	r5,0(r5)
 800ab34:	18c00054 	ori	r3,r3,1
 800ab38:	20c00115 	stw	r3,4(r4)
 800ab3c:	00c200b4 	movhi	r3,2050
 800ab40:	1145c83a 	sub	r2,r2,r5
 800ab44:	18efd304 	addi	r3,r3,-16564
 800ab48:	18800015 	stw	r2,0(r3)
 800ab4c:	003fd306 	br	800aa9c <__alt_data_end+0xfc00aa9c>

0800ab50 <_free_r>:
 800ab50:	28004c26 	beq	r5,zero,800ac84 <_free_r+0x134>
 800ab54:	defffd04 	addi	sp,sp,-12
 800ab58:	dc400115 	stw	r17,4(sp)
 800ab5c:	dc000015 	stw	r16,0(sp)
 800ab60:	2023883a 	mov	r17,r4
 800ab64:	2821883a 	mov	r16,r5
 800ab68:	dfc00215 	stw	ra,8(sp)
 800ab6c:	80142ac0 	call	80142ac <__malloc_lock>
 800ab70:	813fff17 	ldw	r4,-4(r16)
 800ab74:	00bfff84 	movi	r2,-2
 800ab78:	024200b4 	movhi	r9,2050
 800ab7c:	81bffe04 	addi	r6,r16,-8
 800ab80:	2084703a 	and	r2,r4,r2
 800ab84:	4a604004 	addi	r9,r9,-32512
 800ab88:	308b883a 	add	r5,r6,r2
 800ab8c:	2a000117 	ldw	r8,4(r5)
 800ab90:	49c00217 	ldw	r7,8(r9)
 800ab94:	00ffff04 	movi	r3,-4
 800ab98:	40c6703a 	and	r3,r8,r3
 800ab9c:	39405326 	beq	r7,r5,800acec <_free_r+0x19c>
 800aba0:	28c00115 	stw	r3,4(r5)
 800aba4:	2100004c 	andi	r4,r4,1
 800aba8:	2000091e 	bne	r4,zero,800abd0 <_free_r+0x80>
 800abac:	81fffe17 	ldw	r7,-8(r16)
 800abb0:	4a000204 	addi	r8,r9,8
 800abb4:	31cdc83a 	sub	r6,r6,r7
 800abb8:	31000217 	ldw	r4,8(r6)
 800abbc:	11c5883a 	add	r2,r2,r7
 800abc0:	22006126 	beq	r4,r8,800ad48 <_free_r+0x1f8>
 800abc4:	31c00317 	ldw	r7,12(r6)
 800abc8:	21c00315 	stw	r7,12(r4)
 800abcc:	39000215 	stw	r4,8(r7)
 800abd0:	28c9883a 	add	r4,r5,r3
 800abd4:	21c00117 	ldw	r7,4(r4)
 800abd8:	39c0004c 	andi	r7,r7,1
 800abdc:	38000d1e 	bne	r7,zero,800ac14 <_free_r+0xc4>
 800abe0:	29000217 	ldw	r4,8(r5)
 800abe4:	10c5883a 	add	r2,r2,r3
 800abe8:	00c200b4 	movhi	r3,2050
 800abec:	18e04204 	addi	r3,r3,-32504
 800abf0:	20c07526 	beq	r4,r3,800adc8 <_free_r+0x278>
 800abf4:	29c00317 	ldw	r7,12(r5)
 800abf8:	11400054 	ori	r5,r2,1
 800abfc:	3087883a 	add	r3,r6,r2
 800ac00:	21c00315 	stw	r7,12(r4)
 800ac04:	39000215 	stw	r4,8(r7)
 800ac08:	31400115 	stw	r5,4(r6)
 800ac0c:	18800015 	stw	r2,0(r3)
 800ac10:	00000406 	br	800ac24 <_free_r+0xd4>
 800ac14:	10c00054 	ori	r3,r2,1
 800ac18:	30c00115 	stw	r3,4(r6)
 800ac1c:	3087883a 	add	r3,r6,r2
 800ac20:	18800015 	stw	r2,0(r3)
 800ac24:	00c07fc4 	movi	r3,511
 800ac28:	18801736 	bltu	r3,r2,800ac88 <_free_r+0x138>
 800ac2c:	1004d0fa 	srli	r2,r2,3
 800ac30:	01400044 	movi	r5,1
 800ac34:	49000117 	ldw	r4,4(r9)
 800ac38:	1087883a 	add	r3,r2,r2
 800ac3c:	18c7883a 	add	r3,r3,r3
 800ac40:	1005d0ba 	srai	r2,r2,2
 800ac44:	18c7883a 	add	r3,r3,r3
 800ac48:	1a47883a 	add	r3,r3,r9
 800ac4c:	19c00217 	ldw	r7,8(r3)
 800ac50:	2884983a 	sll	r2,r5,r2
 800ac54:	30c00315 	stw	r3,12(r6)
 800ac58:	31c00215 	stw	r7,8(r6)
 800ac5c:	1104b03a 	or	r2,r2,r4
 800ac60:	19800215 	stw	r6,8(r3)
 800ac64:	48800115 	stw	r2,4(r9)
 800ac68:	39800315 	stw	r6,12(r7)
 800ac6c:	8809883a 	mov	r4,r17
 800ac70:	dfc00217 	ldw	ra,8(sp)
 800ac74:	dc400117 	ldw	r17,4(sp)
 800ac78:	dc000017 	ldw	r16,0(sp)
 800ac7c:	dec00304 	addi	sp,sp,12
 800ac80:	80142cc1 	jmpi	80142cc <__malloc_unlock>
 800ac84:	f800283a 	ret
 800ac88:	1006d27a 	srli	r3,r2,9
 800ac8c:	01000104 	movi	r4,4
 800ac90:	20c04036 	bltu	r4,r3,800ad94 <_free_r+0x244>
 800ac94:	1006d1ba 	srli	r3,r2,6
 800ac98:	19400e04 	addi	r5,r3,56
 800ac9c:	2947883a 	add	r3,r5,r5
 800aca0:	18c7883a 	add	r3,r3,r3
 800aca4:	18c7883a 	add	r3,r3,r3
 800aca8:	1a49883a 	add	r4,r3,r9
 800acac:	20c00217 	ldw	r3,8(r4)
 800acb0:	01c200b4 	movhi	r7,2050
 800acb4:	39e04004 	addi	r7,r7,-32512
 800acb8:	19003b26 	beq	r3,r4,800ada8 <_free_r+0x258>
 800acbc:	01ffff04 	movi	r7,-4
 800acc0:	19400117 	ldw	r5,4(r3)
 800acc4:	29ca703a 	and	r5,r5,r7
 800acc8:	1140022e 	bgeu	r2,r5,800acd4 <_free_r+0x184>
 800accc:	18c00217 	ldw	r3,8(r3)
 800acd0:	20fffb1e 	bne	r4,r3,800acc0 <__alt_data_end+0xfc00acc0>
 800acd4:	18800317 	ldw	r2,12(r3)
 800acd8:	30800315 	stw	r2,12(r6)
 800acdc:	30c00215 	stw	r3,8(r6)
 800ace0:	11800215 	stw	r6,8(r2)
 800ace4:	19800315 	stw	r6,12(r3)
 800ace8:	003fe006 	br	800ac6c <__alt_data_end+0xfc00ac6c>
 800acec:	2100004c 	andi	r4,r4,1
 800acf0:	1885883a 	add	r2,r3,r2
 800acf4:	2000071e 	bne	r4,zero,800ad14 <_free_r+0x1c4>
 800acf8:	817ffe17 	ldw	r5,-8(r16)
 800acfc:	314dc83a 	sub	r6,r6,r5
 800ad00:	30c00317 	ldw	r3,12(r6)
 800ad04:	31000217 	ldw	r4,8(r6)
 800ad08:	1145883a 	add	r2,r2,r5
 800ad0c:	20c00315 	stw	r3,12(r4)
 800ad10:	19000215 	stw	r4,8(r3)
 800ad14:	10c00054 	ori	r3,r2,1
 800ad18:	30c00115 	stw	r3,4(r6)
 800ad1c:	00c200b4 	movhi	r3,2050
 800ad20:	18e64a04 	addi	r3,r3,-26328
 800ad24:	18c00017 	ldw	r3,0(r3)
 800ad28:	49800215 	stw	r6,8(r9)
 800ad2c:	10ffcf36 	bltu	r2,r3,800ac6c <__alt_data_end+0xfc00ac6c>
 800ad30:	008200b4 	movhi	r2,2050
 800ad34:	10ad8704 	addi	r2,r2,-18916
 800ad38:	11400017 	ldw	r5,0(r2)
 800ad3c:	8809883a 	mov	r4,r17
 800ad40:	800aa2c0 	call	800aa2c <_malloc_trim_r>
 800ad44:	003fc906 	br	800ac6c <__alt_data_end+0xfc00ac6c>
 800ad48:	28c9883a 	add	r4,r5,r3
 800ad4c:	21000117 	ldw	r4,4(r4)
 800ad50:	2100004c 	andi	r4,r4,1
 800ad54:	20000a1e 	bne	r4,zero,800ad80 <_free_r+0x230>
 800ad58:	29000317 	ldw	r4,12(r5)
 800ad5c:	29400217 	ldw	r5,8(r5)
 800ad60:	10c5883a 	add	r2,r2,r3
 800ad64:	10c00054 	ori	r3,r2,1
 800ad68:	29000315 	stw	r4,12(r5)
 800ad6c:	21400215 	stw	r5,8(r4)
 800ad70:	30c00115 	stw	r3,4(r6)
 800ad74:	308d883a 	add	r6,r6,r2
 800ad78:	30800015 	stw	r2,0(r6)
 800ad7c:	003fbb06 	br	800ac6c <__alt_data_end+0xfc00ac6c>
 800ad80:	10c00054 	ori	r3,r2,1
 800ad84:	30c00115 	stw	r3,4(r6)
 800ad88:	308d883a 	add	r6,r6,r2
 800ad8c:	30800015 	stw	r2,0(r6)
 800ad90:	003fb606 	br	800ac6c <__alt_data_end+0xfc00ac6c>
 800ad94:	01000504 	movi	r4,20
 800ad98:	20c01436 	bltu	r4,r3,800adec <_free_r+0x29c>
 800ad9c:	194016c4 	addi	r5,r3,91
 800ada0:	2947883a 	add	r3,r5,r5
 800ada4:	003fbe06 	br	800aca0 <__alt_data_end+0xfc00aca0>
 800ada8:	280bd0ba 	srai	r5,r5,2
 800adac:	00800044 	movi	r2,1
 800adb0:	39000117 	ldw	r4,4(r7)
 800adb4:	114a983a 	sll	r5,r2,r5
 800adb8:	1805883a 	mov	r2,r3
 800adbc:	2908b03a 	or	r4,r5,r4
 800adc0:	39000115 	stw	r4,4(r7)
 800adc4:	003fc406 	br	800acd8 <__alt_data_end+0xfc00acd8>
 800adc8:	49800515 	stw	r6,20(r9)
 800adcc:	49800415 	stw	r6,16(r9)
 800add0:	10c00054 	ori	r3,r2,1
 800add4:	31000315 	stw	r4,12(r6)
 800add8:	31000215 	stw	r4,8(r6)
 800addc:	30c00115 	stw	r3,4(r6)
 800ade0:	308d883a 	add	r6,r6,r2
 800ade4:	30800015 	stw	r2,0(r6)
 800ade8:	003fa006 	br	800ac6c <__alt_data_end+0xfc00ac6c>
 800adec:	01001504 	movi	r4,84
 800adf0:	20c00436 	bltu	r4,r3,800ae04 <_free_r+0x2b4>
 800adf4:	1006d33a 	srli	r3,r2,12
 800adf8:	19401b84 	addi	r5,r3,110
 800adfc:	2947883a 	add	r3,r5,r5
 800ae00:	003fa706 	br	800aca0 <__alt_data_end+0xfc00aca0>
 800ae04:	01005504 	movi	r4,340
 800ae08:	20c00436 	bltu	r4,r3,800ae1c <_free_r+0x2cc>
 800ae0c:	1006d3fa 	srli	r3,r2,15
 800ae10:	19401dc4 	addi	r5,r3,119
 800ae14:	2947883a 	add	r3,r5,r5
 800ae18:	003fa106 	br	800aca0 <__alt_data_end+0xfc00aca0>
 800ae1c:	01015504 	movi	r4,1364
 800ae20:	20c00436 	bltu	r4,r3,800ae34 <_free_r+0x2e4>
 800ae24:	1006d4ba 	srli	r3,r2,18
 800ae28:	19401f04 	addi	r5,r3,124
 800ae2c:	2947883a 	add	r3,r5,r5
 800ae30:	003f9b06 	br	800aca0 <__alt_data_end+0xfc00aca0>
 800ae34:	00c03f04 	movi	r3,252
 800ae38:	01401f84 	movi	r5,126
 800ae3c:	003f9806 	br	800aca0 <__alt_data_end+0xfc00aca0>

0800ae40 <__sfvwrite_r>:
 800ae40:	30800217 	ldw	r2,8(r6)
 800ae44:	10004526 	beq	r2,zero,800af5c <__sfvwrite_r+0x11c>
 800ae48:	28c0030b 	ldhu	r3,12(r5)
 800ae4c:	defff404 	addi	sp,sp,-48
 800ae50:	dd400715 	stw	r21,28(sp)
 800ae54:	dcc00515 	stw	r19,20(sp)
 800ae58:	dc000215 	stw	r16,8(sp)
 800ae5c:	dfc00b15 	stw	ra,44(sp)
 800ae60:	df000a15 	stw	fp,40(sp)
 800ae64:	ddc00915 	stw	r23,36(sp)
 800ae68:	dd800815 	stw	r22,32(sp)
 800ae6c:	dd000615 	stw	r20,24(sp)
 800ae70:	dc800415 	stw	r18,16(sp)
 800ae74:	dc400315 	stw	r17,12(sp)
 800ae78:	1880020c 	andi	r2,r3,8
 800ae7c:	2821883a 	mov	r16,r5
 800ae80:	202b883a 	mov	r21,r4
 800ae84:	3027883a 	mov	r19,r6
 800ae88:	10002526 	beq	r2,zero,800af20 <__sfvwrite_r+0xe0>
 800ae8c:	28800417 	ldw	r2,16(r5)
 800ae90:	10002326 	beq	r2,zero,800af20 <__sfvwrite_r+0xe0>
 800ae94:	1880008c 	andi	r2,r3,2
 800ae98:	9c400017 	ldw	r17,0(r19)
 800ae9c:	10003126 	beq	r2,zero,800af64 <__sfvwrite_r+0x124>
 800aea0:	0029883a 	mov	r20,zero
 800aea4:	0025883a 	mov	r18,zero
 800aea8:	05810004 	movi	r22,1024
 800aeac:	a00d883a 	mov	r6,r20
 800aeb0:	a809883a 	mov	r4,r21
 800aeb4:	90002526 	beq	r18,zero,800af4c <__sfvwrite_r+0x10c>
 800aeb8:	900f883a 	mov	r7,r18
 800aebc:	81400717 	ldw	r5,28(r16)
 800aec0:	b480012e 	bgeu	r22,r18,800aec8 <__sfvwrite_r+0x88>
 800aec4:	01c10004 	movi	r7,1024
 800aec8:	80800917 	ldw	r2,36(r16)
 800aecc:	103ee83a 	callr	r2
 800aed0:	0080510e 	bge	zero,r2,800b018 <__sfvwrite_r+0x1d8>
 800aed4:	98c00217 	ldw	r3,8(r19)
 800aed8:	a0a9883a 	add	r20,r20,r2
 800aedc:	90a5c83a 	sub	r18,r18,r2
 800aee0:	1885c83a 	sub	r2,r3,r2
 800aee4:	98800215 	stw	r2,8(r19)
 800aee8:	103ff01e 	bne	r2,zero,800aeac <__alt_data_end+0xfc00aeac>
 800aeec:	0005883a 	mov	r2,zero
 800aef0:	dfc00b17 	ldw	ra,44(sp)
 800aef4:	df000a17 	ldw	fp,40(sp)
 800aef8:	ddc00917 	ldw	r23,36(sp)
 800aefc:	dd800817 	ldw	r22,32(sp)
 800af00:	dd400717 	ldw	r21,28(sp)
 800af04:	dd000617 	ldw	r20,24(sp)
 800af08:	dcc00517 	ldw	r19,20(sp)
 800af0c:	dc800417 	ldw	r18,16(sp)
 800af10:	dc400317 	ldw	r17,12(sp)
 800af14:	dc000217 	ldw	r16,8(sp)
 800af18:	dec00c04 	addi	sp,sp,48
 800af1c:	f800283a 	ret
 800af20:	a809883a 	mov	r4,r21
 800af24:	800b883a 	mov	r5,r16
 800af28:	800880c0 	call	800880c <__swsetup_r>
 800af2c:	80c0030b 	ldhu	r3,12(r16)
 800af30:	103fd826 	beq	r2,zero,800ae94 <__alt_data_end+0xfc00ae94>
 800af34:	18c01014 	ori	r3,r3,64
 800af38:	80c0030d 	sth	r3,12(r16)
 800af3c:	00c00244 	movi	r3,9
 800af40:	00bfffc4 	movi	r2,-1
 800af44:	a8c00015 	stw	r3,0(r21)
 800af48:	003fe906 	br	800aef0 <__alt_data_end+0xfc00aef0>
 800af4c:	8d000017 	ldw	r20,0(r17)
 800af50:	8c800117 	ldw	r18,4(r17)
 800af54:	8c400204 	addi	r17,r17,8
 800af58:	003fd406 	br	800aeac <__alt_data_end+0xfc00aeac>
 800af5c:	0005883a 	mov	r2,zero
 800af60:	f800283a 	ret
 800af64:	1880004c 	andi	r2,r3,1
 800af68:	1000301e 	bne	r2,zero,800b02c <__sfvwrite_r+0x1ec>
 800af6c:	002f883a 	mov	r23,zero
 800af70:	0025883a 	mov	r18,zero
 800af74:	90001c26 	beq	r18,zero,800afe8 <__sfvwrite_r+0x1a8>
 800af78:	1880800c 	andi	r2,r3,512
 800af7c:	85000217 	ldw	r20,8(r16)
 800af80:	10006c26 	beq	r2,zero,800b134 <__sfvwrite_r+0x2f4>
 800af84:	a02d883a 	mov	r22,r20
 800af88:	95008536 	bltu	r18,r20,800b1a0 <__sfvwrite_r+0x360>
 800af8c:	1881200c 	andi	r2,r3,1152
 800af90:	10009d1e 	bne	r2,zero,800b208 <__sfvwrite_r+0x3c8>
 800af94:	81000017 	ldw	r4,0(r16)
 800af98:	a039883a 	mov	fp,r20
 800af9c:	9029883a 	mov	r20,r18
 800afa0:	b80b883a 	mov	r5,r23
 800afa4:	b00d883a 	mov	r6,r22
 800afa8:	800b90c0 	call	800b90c <memmove>
 800afac:	80c00217 	ldw	r3,8(r16)
 800afb0:	81000017 	ldw	r4,0(r16)
 800afb4:	9005883a 	mov	r2,r18
 800afb8:	1f39c83a 	sub	fp,r3,fp
 800afbc:	258f883a 	add	r7,r4,r22
 800afc0:	87000215 	stw	fp,8(r16)
 800afc4:	81c00015 	stw	r7,0(r16)
 800afc8:	98c00217 	ldw	r3,8(r19)
 800afcc:	b8af883a 	add	r23,r23,r2
 800afd0:	90a5c83a 	sub	r18,r18,r2
 800afd4:	1d05c83a 	sub	r2,r3,r20
 800afd8:	98800215 	stw	r2,8(r19)
 800afdc:	103fc326 	beq	r2,zero,800aeec <__alt_data_end+0xfc00aeec>
 800afe0:	80c0030b 	ldhu	r3,12(r16)
 800afe4:	903fe41e 	bne	r18,zero,800af78 <__alt_data_end+0xfc00af78>
 800afe8:	8dc00017 	ldw	r23,0(r17)
 800afec:	8c800117 	ldw	r18,4(r17)
 800aff0:	8c400204 	addi	r17,r17,8
 800aff4:	003fdf06 	br	800af74 <__alt_data_end+0xfc00af74>
 800aff8:	800cab00 	call	800cab0 <_realloc_r>
 800affc:	102d883a 	mov	r22,r2
 800b000:	1000a01e 	bne	r2,zero,800b284 <__sfvwrite_r+0x444>
 800b004:	81400417 	ldw	r5,16(r16)
 800b008:	a809883a 	mov	r4,r21
 800b00c:	800ab500 	call	800ab50 <_free_r>
 800b010:	00800304 	movi	r2,12
 800b014:	a8800015 	stw	r2,0(r21)
 800b018:	80c0030b 	ldhu	r3,12(r16)
 800b01c:	00bfffc4 	movi	r2,-1
 800b020:	18c01014 	ori	r3,r3,64
 800b024:	80c0030d 	sth	r3,12(r16)
 800b028:	003fb106 	br	800aef0 <__alt_data_end+0xfc00aef0>
 800b02c:	0029883a 	mov	r20,zero
 800b030:	0011883a 	mov	r8,zero
 800b034:	0039883a 	mov	fp,zero
 800b038:	0025883a 	mov	r18,zero
 800b03c:	90001f26 	beq	r18,zero,800b0bc <__sfvwrite_r+0x27c>
 800b040:	40006826 	beq	r8,zero,800b1e4 <__sfvwrite_r+0x3a4>
 800b044:	a02f883a 	mov	r23,r20
 800b048:	9500012e 	bgeu	r18,r20,800b050 <__sfvwrite_r+0x210>
 800b04c:	902f883a 	mov	r23,r18
 800b050:	81000017 	ldw	r4,0(r16)
 800b054:	80800417 	ldw	r2,16(r16)
 800b058:	b82d883a 	mov	r22,r23
 800b05c:	81800217 	ldw	r6,8(r16)
 800b060:	81c00517 	ldw	r7,20(r16)
 800b064:	1100022e 	bgeu	r2,r4,800b070 <__sfvwrite_r+0x230>
 800b068:	31c7883a 	add	r3,r6,r7
 800b06c:	1dc01816 	blt	r3,r23,800b0d0 <__sfvwrite_r+0x290>
 800b070:	b9c03f16 	blt	r23,r7,800b170 <__sfvwrite_r+0x330>
 800b074:	80800917 	ldw	r2,36(r16)
 800b078:	81400717 	ldw	r5,28(r16)
 800b07c:	a809883a 	mov	r4,r21
 800b080:	da000115 	stw	r8,4(sp)
 800b084:	e00d883a 	mov	r6,fp
 800b088:	103ee83a 	callr	r2
 800b08c:	102d883a 	mov	r22,r2
 800b090:	da000117 	ldw	r8,4(sp)
 800b094:	00bfe00e 	bge	zero,r2,800b018 <__alt_data_end+0xfc00b018>
 800b098:	a5a9c83a 	sub	r20,r20,r22
 800b09c:	a0001f26 	beq	r20,zero,800b11c <__sfvwrite_r+0x2dc>
 800b0a0:	98800217 	ldw	r2,8(r19)
 800b0a4:	e5b9883a 	add	fp,fp,r22
 800b0a8:	95a5c83a 	sub	r18,r18,r22
 800b0ac:	15adc83a 	sub	r22,r2,r22
 800b0b0:	9d800215 	stw	r22,8(r19)
 800b0b4:	b03f8d26 	beq	r22,zero,800aeec <__alt_data_end+0xfc00aeec>
 800b0b8:	903fe11e 	bne	r18,zero,800b040 <__alt_data_end+0xfc00b040>
 800b0bc:	8f000017 	ldw	fp,0(r17)
 800b0c0:	8c800117 	ldw	r18,4(r17)
 800b0c4:	0011883a 	mov	r8,zero
 800b0c8:	8c400204 	addi	r17,r17,8
 800b0cc:	003fdb06 	br	800b03c <__alt_data_end+0xfc00b03c>
 800b0d0:	180d883a 	mov	r6,r3
 800b0d4:	e00b883a 	mov	r5,fp
 800b0d8:	da000115 	stw	r8,4(sp)
 800b0dc:	d8c00015 	stw	r3,0(sp)
 800b0e0:	800b90c0 	call	800b90c <memmove>
 800b0e4:	d8c00017 	ldw	r3,0(sp)
 800b0e8:	80800017 	ldw	r2,0(r16)
 800b0ec:	a809883a 	mov	r4,r21
 800b0f0:	800b883a 	mov	r5,r16
 800b0f4:	10c5883a 	add	r2,r2,r3
 800b0f8:	80800015 	stw	r2,0(r16)
 800b0fc:	d8c00015 	stw	r3,0(sp)
 800b100:	800a4200 	call	800a420 <_fflush_r>
 800b104:	d8c00017 	ldw	r3,0(sp)
 800b108:	da000117 	ldw	r8,4(sp)
 800b10c:	103fc21e 	bne	r2,zero,800b018 <__alt_data_end+0xfc00b018>
 800b110:	182d883a 	mov	r22,r3
 800b114:	a5a9c83a 	sub	r20,r20,r22
 800b118:	a03fe11e 	bne	r20,zero,800b0a0 <__alt_data_end+0xfc00b0a0>
 800b11c:	a809883a 	mov	r4,r21
 800b120:	800b883a 	mov	r5,r16
 800b124:	800a4200 	call	800a420 <_fflush_r>
 800b128:	103fbb1e 	bne	r2,zero,800b018 <__alt_data_end+0xfc00b018>
 800b12c:	0011883a 	mov	r8,zero
 800b130:	003fdb06 	br	800b0a0 <__alt_data_end+0xfc00b0a0>
 800b134:	81000017 	ldw	r4,0(r16)
 800b138:	80800417 	ldw	r2,16(r16)
 800b13c:	1100012e 	bgeu	r2,r4,800b144 <__sfvwrite_r+0x304>
 800b140:	a4805a36 	bltu	r20,r18,800b2ac <__sfvwrite_r+0x46c>
 800b144:	81c00517 	ldw	r7,20(r16)
 800b148:	91c01a36 	bltu	r18,r7,800b1b4 <__sfvwrite_r+0x374>
 800b14c:	80800917 	ldw	r2,36(r16)
 800b150:	81400717 	ldw	r5,28(r16)
 800b154:	a809883a 	mov	r4,r21
 800b158:	b80d883a 	mov	r6,r23
 800b15c:	103ee83a 	callr	r2
 800b160:	1029883a 	mov	r20,r2
 800b164:	00bfac0e 	bge	zero,r2,800b018 <__alt_data_end+0xfc00b018>
 800b168:	a005883a 	mov	r2,r20
 800b16c:	003f9606 	br	800afc8 <__alt_data_end+0xfc00afc8>
 800b170:	b80d883a 	mov	r6,r23
 800b174:	e00b883a 	mov	r5,fp
 800b178:	da000115 	stw	r8,4(sp)
 800b17c:	800b90c0 	call	800b90c <memmove>
 800b180:	80800217 	ldw	r2,8(r16)
 800b184:	80c00017 	ldw	r3,0(r16)
 800b188:	da000117 	ldw	r8,4(sp)
 800b18c:	15c5c83a 	sub	r2,r2,r23
 800b190:	1def883a 	add	r23,r3,r23
 800b194:	80800215 	stw	r2,8(r16)
 800b198:	85c00015 	stw	r23,0(r16)
 800b19c:	003fbe06 	br	800b098 <__alt_data_end+0xfc00b098>
 800b1a0:	81000017 	ldw	r4,0(r16)
 800b1a4:	9039883a 	mov	fp,r18
 800b1a8:	9029883a 	mov	r20,r18
 800b1ac:	902d883a 	mov	r22,r18
 800b1b0:	003f7b06 	br	800afa0 <__alt_data_end+0xfc00afa0>
 800b1b4:	b80b883a 	mov	r5,r23
 800b1b8:	900d883a 	mov	r6,r18
 800b1bc:	800b90c0 	call	800b90c <memmove>
 800b1c0:	80c00217 	ldw	r3,8(r16)
 800b1c4:	80800017 	ldw	r2,0(r16)
 800b1c8:	9029883a 	mov	r20,r18
 800b1cc:	1c87c83a 	sub	r3,r3,r18
 800b1d0:	1485883a 	add	r2,r2,r18
 800b1d4:	80800015 	stw	r2,0(r16)
 800b1d8:	80c00215 	stw	r3,8(r16)
 800b1dc:	9005883a 	mov	r2,r18
 800b1e0:	003f7906 	br	800afc8 <__alt_data_end+0xfc00afc8>
 800b1e4:	e009883a 	mov	r4,fp
 800b1e8:	01400284 	movi	r5,10
 800b1ec:	900d883a 	mov	r6,r18
 800b1f0:	800b6ec0 	call	800b6ec <memchr>
 800b1f4:	10003826 	beq	r2,zero,800b2d8 <__sfvwrite_r+0x498>
 800b1f8:	10800044 	addi	r2,r2,1
 800b1fc:	1729c83a 	sub	r20,r2,fp
 800b200:	02000044 	movi	r8,1
 800b204:	003f8f06 	br	800b044 <__alt_data_end+0xfc00b044>
 800b208:	80800517 	ldw	r2,20(r16)
 800b20c:	81400417 	ldw	r5,16(r16)
 800b210:	87000017 	ldw	fp,0(r16)
 800b214:	10a9883a 	add	r20,r2,r2
 800b218:	a085883a 	add	r2,r20,r2
 800b21c:	1028d7fa 	srli	r20,r2,31
 800b220:	e179c83a 	sub	fp,fp,r5
 800b224:	e1000044 	addi	r4,fp,1
 800b228:	a085883a 	add	r2,r20,r2
 800b22c:	1029d07a 	srai	r20,r2,1
 800b230:	2485883a 	add	r2,r4,r18
 800b234:	a00d883a 	mov	r6,r20
 800b238:	a080022e 	bgeu	r20,r2,800b244 <__sfvwrite_r+0x404>
 800b23c:	1029883a 	mov	r20,r2
 800b240:	100d883a 	mov	r6,r2
 800b244:	18c1000c 	andi	r3,r3,1024
 800b248:	a809883a 	mov	r4,r21
 800b24c:	183f6a26 	beq	r3,zero,800aff8 <__alt_data_end+0xfc00aff8>
 800b250:	300b883a 	mov	r5,r6
 800b254:	80035180 	call	8003518 <_malloc_r>
 800b258:	102d883a 	mov	r22,r2
 800b25c:	103f6c26 	beq	r2,zero,800b010 <__alt_data_end+0xfc00b010>
 800b260:	81400417 	ldw	r5,16(r16)
 800b264:	1009883a 	mov	r4,r2
 800b268:	e00d883a 	mov	r6,fp
 800b26c:	800b7d40 	call	800b7d4 <memcpy>
 800b270:	8080030b 	ldhu	r2,12(r16)
 800b274:	00fedfc4 	movi	r3,-1153
 800b278:	10c4703a 	and	r2,r2,r3
 800b27c:	10802014 	ori	r2,r2,128
 800b280:	8080030d 	sth	r2,12(r16)
 800b284:	b709883a 	add	r4,r22,fp
 800b288:	a707c83a 	sub	r3,r20,fp
 800b28c:	85800415 	stw	r22,16(r16)
 800b290:	85000515 	stw	r20,20(r16)
 800b294:	81000015 	stw	r4,0(r16)
 800b298:	9039883a 	mov	fp,r18
 800b29c:	80c00215 	stw	r3,8(r16)
 800b2a0:	9029883a 	mov	r20,r18
 800b2a4:	902d883a 	mov	r22,r18
 800b2a8:	003f3d06 	br	800afa0 <__alt_data_end+0xfc00afa0>
 800b2ac:	b80b883a 	mov	r5,r23
 800b2b0:	a00d883a 	mov	r6,r20
 800b2b4:	800b90c0 	call	800b90c <memmove>
 800b2b8:	80800017 	ldw	r2,0(r16)
 800b2bc:	a809883a 	mov	r4,r21
 800b2c0:	800b883a 	mov	r5,r16
 800b2c4:	1505883a 	add	r2,r2,r20
 800b2c8:	80800015 	stw	r2,0(r16)
 800b2cc:	800a4200 	call	800a420 <_fflush_r>
 800b2d0:	103fa526 	beq	r2,zero,800b168 <__alt_data_end+0xfc00b168>
 800b2d4:	003f5006 	br	800b018 <__alt_data_end+0xfc00b018>
 800b2d8:	95000044 	addi	r20,r18,1
 800b2dc:	02000044 	movi	r8,1
 800b2e0:	003f5806 	br	800b044 <__alt_data_end+0xfc00b044>

0800b2e4 <_fwalk>:
 800b2e4:	defff804 	addi	sp,sp,-32
 800b2e8:	dd400515 	stw	r21,20(sp)
 800b2ec:	2540b804 	addi	r21,r4,736
 800b2f0:	dd800615 	stw	r22,24(sp)
 800b2f4:	dd000415 	stw	r20,16(sp)
 800b2f8:	dfc00715 	stw	ra,28(sp)
 800b2fc:	dcc00315 	stw	r19,12(sp)
 800b300:	dc800215 	stw	r18,8(sp)
 800b304:	dc400115 	stw	r17,4(sp)
 800b308:	dc000015 	stw	r16,0(sp)
 800b30c:	2829883a 	mov	r20,r5
 800b310:	002d883a 	mov	r22,zero
 800b314:	800a9ec0 	call	800a9ec <__sfp_lock_acquire>
 800b318:	a8001426 	beq	r21,zero,800b36c <_fwalk+0x88>
 800b31c:	04ffffc4 	movi	r19,-1
 800b320:	ac400117 	ldw	r17,4(r21)
 800b324:	ac800217 	ldw	r18,8(r21)
 800b328:	8c7fffc4 	addi	r17,r17,-1
 800b32c:	88000d16 	blt	r17,zero,800b364 <_fwalk+0x80>
 800b330:	94000304 	addi	r16,r18,12
 800b334:	94800384 	addi	r18,r18,14
 800b338:	80c0000f 	ldh	r3,0(r16)
 800b33c:	8c7fffc4 	addi	r17,r17,-1
 800b340:	813ffd04 	addi	r4,r16,-12
 800b344:	18000426 	beq	r3,zero,800b358 <_fwalk+0x74>
 800b348:	90c0000f 	ldh	r3,0(r18)
 800b34c:	1cc00226 	beq	r3,r19,800b358 <_fwalk+0x74>
 800b350:	a03ee83a 	callr	r20
 800b354:	b0acb03a 	or	r22,r22,r2
 800b358:	84001a04 	addi	r16,r16,104
 800b35c:	94801a04 	addi	r18,r18,104
 800b360:	8cfff51e 	bne	r17,r19,800b338 <__alt_data_end+0xfc00b338>
 800b364:	ad400017 	ldw	r21,0(r21)
 800b368:	a83fed1e 	bne	r21,zero,800b320 <__alt_data_end+0xfc00b320>
 800b36c:	800a9f00 	call	800a9f0 <__sfp_lock_release>
 800b370:	b005883a 	mov	r2,r22
 800b374:	dfc00717 	ldw	ra,28(sp)
 800b378:	dd800617 	ldw	r22,24(sp)
 800b37c:	dd400517 	ldw	r21,20(sp)
 800b380:	dd000417 	ldw	r20,16(sp)
 800b384:	dcc00317 	ldw	r19,12(sp)
 800b388:	dc800217 	ldw	r18,8(sp)
 800b38c:	dc400117 	ldw	r17,4(sp)
 800b390:	dc000017 	ldw	r16,0(sp)
 800b394:	dec00804 	addi	sp,sp,32
 800b398:	f800283a 	ret

0800b39c <_fwalk_reent>:
 800b39c:	defff804 	addi	sp,sp,-32
 800b3a0:	dd400515 	stw	r21,20(sp)
 800b3a4:	2540b804 	addi	r21,r4,736
 800b3a8:	dd800615 	stw	r22,24(sp)
 800b3ac:	dd000415 	stw	r20,16(sp)
 800b3b0:	dcc00315 	stw	r19,12(sp)
 800b3b4:	dfc00715 	stw	ra,28(sp)
 800b3b8:	dc800215 	stw	r18,8(sp)
 800b3bc:	dc400115 	stw	r17,4(sp)
 800b3c0:	dc000015 	stw	r16,0(sp)
 800b3c4:	2027883a 	mov	r19,r4
 800b3c8:	2829883a 	mov	r20,r5
 800b3cc:	002d883a 	mov	r22,zero
 800b3d0:	800a9ec0 	call	800a9ec <__sfp_lock_acquire>
 800b3d4:	a8001326 	beq	r21,zero,800b424 <_fwalk_reent+0x88>
 800b3d8:	04bfffc4 	movi	r18,-1
 800b3dc:	ac400117 	ldw	r17,4(r21)
 800b3e0:	ac000217 	ldw	r16,8(r21)
 800b3e4:	8c7fffc4 	addi	r17,r17,-1
 800b3e8:	88000c16 	blt	r17,zero,800b41c <_fwalk_reent+0x80>
 800b3ec:	84000304 	addi	r16,r16,12
 800b3f0:	80c0000f 	ldh	r3,0(r16)
 800b3f4:	8c7fffc4 	addi	r17,r17,-1
 800b3f8:	817ffd04 	addi	r5,r16,-12
 800b3fc:	18000526 	beq	r3,zero,800b414 <_fwalk_reent+0x78>
 800b400:	80c0008f 	ldh	r3,2(r16)
 800b404:	9809883a 	mov	r4,r19
 800b408:	1c800226 	beq	r3,r18,800b414 <_fwalk_reent+0x78>
 800b40c:	a03ee83a 	callr	r20
 800b410:	b0acb03a 	or	r22,r22,r2
 800b414:	84001a04 	addi	r16,r16,104
 800b418:	8cbff51e 	bne	r17,r18,800b3f0 <__alt_data_end+0xfc00b3f0>
 800b41c:	ad400017 	ldw	r21,0(r21)
 800b420:	a83fee1e 	bne	r21,zero,800b3dc <__alt_data_end+0xfc00b3dc>
 800b424:	800a9f00 	call	800a9f0 <__sfp_lock_release>
 800b428:	b005883a 	mov	r2,r22
 800b42c:	dfc00717 	ldw	ra,28(sp)
 800b430:	dd800617 	ldw	r22,24(sp)
 800b434:	dd400517 	ldw	r21,20(sp)
 800b438:	dd000417 	ldw	r20,16(sp)
 800b43c:	dcc00317 	ldw	r19,12(sp)
 800b440:	dc800217 	ldw	r18,8(sp)
 800b444:	dc400117 	ldw	r17,4(sp)
 800b448:	dc000017 	ldw	r16,0(sp)
 800b44c:	dec00804 	addi	sp,sp,32
 800b450:	f800283a 	ret

0800b454 <_setlocale_r>:
 800b454:	30001b26 	beq	r6,zero,800b4c4 <_setlocale_r+0x70>
 800b458:	01420074 	movhi	r5,2049
 800b45c:	defffe04 	addi	sp,sp,-8
 800b460:	295e7d04 	addi	r5,r5,31220
 800b464:	3009883a 	mov	r4,r6
 800b468:	dc000015 	stw	r16,0(sp)
 800b46c:	dfc00115 	stw	ra,4(sp)
 800b470:	3021883a 	mov	r16,r6
 800b474:	80044b00 	call	80044b0 <strcmp>
 800b478:	1000061e 	bne	r2,zero,800b494 <_setlocale_r+0x40>
 800b47c:	00820074 	movhi	r2,2049
 800b480:	109e5604 	addi	r2,r2,31064
 800b484:	dfc00117 	ldw	ra,4(sp)
 800b488:	dc000017 	ldw	r16,0(sp)
 800b48c:	dec00204 	addi	sp,sp,8
 800b490:	f800283a 	ret
 800b494:	01420074 	movhi	r5,2049
 800b498:	295e5604 	addi	r5,r5,31064
 800b49c:	8009883a 	mov	r4,r16
 800b4a0:	80044b00 	call	80044b0 <strcmp>
 800b4a4:	103ff526 	beq	r2,zero,800b47c <__alt_data_end+0xfc00b47c>
 800b4a8:	01420074 	movhi	r5,2049
 800b4ac:	295e6004 	addi	r5,r5,31104
 800b4b0:	8009883a 	mov	r4,r16
 800b4b4:	80044b00 	call	80044b0 <strcmp>
 800b4b8:	103ff026 	beq	r2,zero,800b47c <__alt_data_end+0xfc00b47c>
 800b4bc:	0005883a 	mov	r2,zero
 800b4c0:	003ff006 	br	800b484 <__alt_data_end+0xfc00b484>
 800b4c4:	00820074 	movhi	r2,2049
 800b4c8:	109e5604 	addi	r2,r2,31064
 800b4cc:	f800283a 	ret

0800b4d0 <__locale_charset>:
 800b4d0:	008200b4 	movhi	r2,2050
 800b4d4:	10a14a04 	addi	r2,r2,-31448
 800b4d8:	f800283a 	ret

0800b4dc <__locale_mb_cur_max>:
 800b4dc:	008200b4 	movhi	r2,2050
 800b4e0:	10a64b04 	addi	r2,r2,-26324
 800b4e4:	10800017 	ldw	r2,0(r2)
 800b4e8:	f800283a 	ret

0800b4ec <__locale_msgcharset>:
 800b4ec:	008200b4 	movhi	r2,2050
 800b4f0:	10a14204 	addi	r2,r2,-31480
 800b4f4:	f800283a 	ret

0800b4f8 <__locale_cjk_lang>:
 800b4f8:	0005883a 	mov	r2,zero
 800b4fc:	f800283a 	ret

0800b500 <_localeconv_r>:
 800b500:	008200b4 	movhi	r2,2050
 800b504:	10a15204 	addi	r2,r2,-31416
 800b508:	f800283a 	ret

0800b50c <setlocale>:
 800b50c:	00c200b4 	movhi	r3,2050
 800b510:	18e64804 	addi	r3,r3,-26336
 800b514:	2005883a 	mov	r2,r4
 800b518:	19000017 	ldw	r4,0(r3)
 800b51c:	280d883a 	mov	r6,r5
 800b520:	100b883a 	mov	r5,r2
 800b524:	800b4541 	jmpi	800b454 <_setlocale_r>

0800b528 <localeconv>:
 800b528:	008200b4 	movhi	r2,2050
 800b52c:	10a15204 	addi	r2,r2,-31416
 800b530:	f800283a 	ret

0800b534 <__smakebuf_r>:
 800b534:	2880030b 	ldhu	r2,12(r5)
 800b538:	10c0008c 	andi	r3,r2,2
 800b53c:	1800401e 	bne	r3,zero,800b640 <__smakebuf_r+0x10c>
 800b540:	deffec04 	addi	sp,sp,-80
 800b544:	dc000f15 	stw	r16,60(sp)
 800b548:	2821883a 	mov	r16,r5
 800b54c:	2940038f 	ldh	r5,14(r5)
 800b550:	dc401015 	stw	r17,64(sp)
 800b554:	dfc01315 	stw	ra,76(sp)
 800b558:	dcc01215 	stw	r19,72(sp)
 800b55c:	dc801115 	stw	r18,68(sp)
 800b560:	2023883a 	mov	r17,r4
 800b564:	28001b16 	blt	r5,zero,800b5d4 <__smakebuf_r+0xa0>
 800b568:	d80d883a 	mov	r6,sp
 800b56c:	800ff6c0 	call	800ff6c <_fstat_r>
 800b570:	10001716 	blt	r2,zero,800b5d0 <__smakebuf_r+0x9c>
 800b574:	d8800117 	ldw	r2,4(sp)
 800b578:	00e00014 	movui	r3,32768
 800b57c:	10bc000c 	andi	r2,r2,61440
 800b580:	10c03726 	beq	r2,r3,800b660 <__smakebuf_r+0x12c>
 800b584:	80c0030b 	ldhu	r3,12(r16)
 800b588:	18c20014 	ori	r3,r3,2048
 800b58c:	80c0030d 	sth	r3,12(r16)
 800b590:	00c80004 	movi	r3,8192
 800b594:	10c03c1e 	bne	r2,r3,800b688 <__smakebuf_r+0x154>
 800b598:	8140038f 	ldh	r5,14(r16)
 800b59c:	8809883a 	mov	r4,r17
 800b5a0:	800ffc40 	call	800ffc4 <_isatty_r>
 800b5a4:	10004e26 	beq	r2,zero,800b6e0 <__smakebuf_r+0x1ac>
 800b5a8:	8080030b 	ldhu	r2,12(r16)
 800b5ac:	04c00044 	movi	r19,1
 800b5b0:	80c010c4 	addi	r3,r16,67
 800b5b4:	14c4b03a 	or	r2,r2,r19
 800b5b8:	8080030d 	sth	r2,12(r16)
 800b5bc:	80c00015 	stw	r3,0(r16)
 800b5c0:	80c00415 	stw	r3,16(r16)
 800b5c4:	84c00515 	stw	r19,20(r16)
 800b5c8:	04810004 	movi	r18,1024
 800b5cc:	00000706 	br	800b5ec <__smakebuf_r+0xb8>
 800b5d0:	8080030b 	ldhu	r2,12(r16)
 800b5d4:	10c0200c 	andi	r3,r2,128
 800b5d8:	18001f1e 	bne	r3,zero,800b658 <__smakebuf_r+0x124>
 800b5dc:	04810004 	movi	r18,1024
 800b5e0:	10820014 	ori	r2,r2,2048
 800b5e4:	8080030d 	sth	r2,12(r16)
 800b5e8:	0027883a 	mov	r19,zero
 800b5ec:	8809883a 	mov	r4,r17
 800b5f0:	900b883a 	mov	r5,r18
 800b5f4:	80035180 	call	8003518 <_malloc_r>
 800b5f8:	10002e26 	beq	r2,zero,800b6b4 <__smakebuf_r+0x180>
 800b5fc:	80c0030b 	ldhu	r3,12(r16)
 800b600:	01020074 	movhi	r4,2049
 800b604:	2129a204 	addi	r4,r4,-22904
 800b608:	89000f15 	stw	r4,60(r17)
 800b60c:	18c02014 	ori	r3,r3,128
 800b610:	80c0030d 	sth	r3,12(r16)
 800b614:	80800015 	stw	r2,0(r16)
 800b618:	80800415 	stw	r2,16(r16)
 800b61c:	84800515 	stw	r18,20(r16)
 800b620:	98001c1e 	bne	r19,zero,800b694 <__smakebuf_r+0x160>
 800b624:	dfc01317 	ldw	ra,76(sp)
 800b628:	dcc01217 	ldw	r19,72(sp)
 800b62c:	dc801117 	ldw	r18,68(sp)
 800b630:	dc401017 	ldw	r17,64(sp)
 800b634:	dc000f17 	ldw	r16,60(sp)
 800b638:	dec01404 	addi	sp,sp,80
 800b63c:	f800283a 	ret
 800b640:	288010c4 	addi	r2,r5,67
 800b644:	28800015 	stw	r2,0(r5)
 800b648:	28800415 	stw	r2,16(r5)
 800b64c:	00800044 	movi	r2,1
 800b650:	28800515 	stw	r2,20(r5)
 800b654:	f800283a 	ret
 800b658:	04801004 	movi	r18,64
 800b65c:	003fe006 	br	800b5e0 <__alt_data_end+0xfc00b5e0>
 800b660:	81000a17 	ldw	r4,40(r16)
 800b664:	00c20074 	movhi	r3,2049
 800b668:	18f46704 	addi	r3,r3,-11876
 800b66c:	20ffc51e 	bne	r4,r3,800b584 <__alt_data_end+0xfc00b584>
 800b670:	80c0030b 	ldhu	r3,12(r16)
 800b674:	01010004 	movi	r4,1024
 800b678:	81001315 	stw	r4,76(r16)
 800b67c:	1906b03a 	or	r3,r3,r4
 800b680:	80c0030d 	sth	r3,12(r16)
 800b684:	003fc206 	br	800b590 <__alt_data_end+0xfc00b590>
 800b688:	0027883a 	mov	r19,zero
 800b68c:	04810004 	movi	r18,1024
 800b690:	003fd606 	br	800b5ec <__alt_data_end+0xfc00b5ec>
 800b694:	8140038f 	ldh	r5,14(r16)
 800b698:	8809883a 	mov	r4,r17
 800b69c:	800ffc40 	call	800ffc4 <_isatty_r>
 800b6a0:	103fe026 	beq	r2,zero,800b624 <__alt_data_end+0xfc00b624>
 800b6a4:	8080030b 	ldhu	r2,12(r16)
 800b6a8:	10800054 	ori	r2,r2,1
 800b6ac:	8080030d 	sth	r2,12(r16)
 800b6b0:	003fdc06 	br	800b624 <__alt_data_end+0xfc00b624>
 800b6b4:	8080030b 	ldhu	r2,12(r16)
 800b6b8:	10c0800c 	andi	r3,r2,512
 800b6bc:	183fd91e 	bne	r3,zero,800b624 <__alt_data_end+0xfc00b624>
 800b6c0:	10800094 	ori	r2,r2,2
 800b6c4:	80c010c4 	addi	r3,r16,67
 800b6c8:	8080030d 	sth	r2,12(r16)
 800b6cc:	00800044 	movi	r2,1
 800b6d0:	80c00015 	stw	r3,0(r16)
 800b6d4:	80c00415 	stw	r3,16(r16)
 800b6d8:	80800515 	stw	r2,20(r16)
 800b6dc:	003fd106 	br	800b624 <__alt_data_end+0xfc00b624>
 800b6e0:	04c00044 	movi	r19,1
 800b6e4:	04810004 	movi	r18,1024
 800b6e8:	003fc006 	br	800b5ec <__alt_data_end+0xfc00b5ec>

0800b6ec <memchr>:
 800b6ec:	208000cc 	andi	r2,r4,3
 800b6f0:	280f883a 	mov	r7,r5
 800b6f4:	10003526 	beq	r2,zero,800b7cc <memchr+0xe0>
 800b6f8:	30bfffc4 	addi	r2,r6,-1
 800b6fc:	30001b26 	beq	r6,zero,800b76c <memchr+0x80>
 800b700:	21800003 	ldbu	r6,0(r4)
 800b704:	28c03fcc 	andi	r3,r5,255
 800b708:	30c01a26 	beq	r6,r3,800b774 <memchr+0x88>
 800b70c:	180d883a 	mov	r6,r3
 800b710:	00000406 	br	800b724 <memchr+0x38>
 800b714:	10001526 	beq	r2,zero,800b76c <memchr+0x80>
 800b718:	20c00003 	ldbu	r3,0(r4)
 800b71c:	10bfffc4 	addi	r2,r2,-1
 800b720:	19801426 	beq	r3,r6,800b774 <memchr+0x88>
 800b724:	21000044 	addi	r4,r4,1
 800b728:	20c000cc 	andi	r3,r4,3
 800b72c:	183ff91e 	bne	r3,zero,800b714 <__alt_data_end+0xfc00b714>
 800b730:	024000c4 	movi	r9,3
 800b734:	48801136 	bltu	r9,r2,800b77c <memchr+0x90>
 800b738:	10000c26 	beq	r2,zero,800b76c <memchr+0x80>
 800b73c:	20c00003 	ldbu	r3,0(r4)
 800b740:	29403fcc 	andi	r5,r5,255
 800b744:	19400b26 	beq	r3,r5,800b774 <memchr+0x88>
 800b748:	20c00044 	addi	r3,r4,1
 800b74c:	2085883a 	add	r2,r4,r2
 800b750:	39803fcc 	andi	r6,r7,255
 800b754:	00000306 	br	800b764 <memchr+0x78>
 800b758:	18c00044 	addi	r3,r3,1
 800b75c:	197fffc3 	ldbu	r5,-1(r3)
 800b760:	29800426 	beq	r5,r6,800b774 <memchr+0x88>
 800b764:	1809883a 	mov	r4,r3
 800b768:	18bffb1e 	bne	r3,r2,800b758 <__alt_data_end+0xfc00b758>
 800b76c:	0005883a 	mov	r2,zero
 800b770:	f800283a 	ret
 800b774:	2005883a 	mov	r2,r4
 800b778:	f800283a 	ret
 800b77c:	28c03fcc 	andi	r3,r5,255
 800b780:	1810923a 	slli	r8,r3,8
 800b784:	02ffbff4 	movhi	r11,65279
 800b788:	02a02074 	movhi	r10,32897
 800b78c:	40c6b03a 	or	r3,r8,r3
 800b790:	1810943a 	slli	r8,r3,16
 800b794:	5affbfc4 	addi	r11,r11,-257
 800b798:	52a02004 	addi	r10,r10,-32640
 800b79c:	40d0b03a 	or	r8,r8,r3
 800b7a0:	20c00017 	ldw	r3,0(r4)
 800b7a4:	40c6f03a 	xor	r3,r8,r3
 800b7a8:	1acd883a 	add	r6,r3,r11
 800b7ac:	00c6303a 	nor	r3,zero,r3
 800b7b0:	30c6703a 	and	r3,r6,r3
 800b7b4:	1a86703a 	and	r3,r3,r10
 800b7b8:	183fdf1e 	bne	r3,zero,800b738 <__alt_data_end+0xfc00b738>
 800b7bc:	10bfff04 	addi	r2,r2,-4
 800b7c0:	21000104 	addi	r4,r4,4
 800b7c4:	48bff636 	bltu	r9,r2,800b7a0 <__alt_data_end+0xfc00b7a0>
 800b7c8:	003fdb06 	br	800b738 <__alt_data_end+0xfc00b738>
 800b7cc:	3005883a 	mov	r2,r6
 800b7d0:	003fd706 	br	800b730 <__alt_data_end+0xfc00b730>

0800b7d4 <memcpy>:
 800b7d4:	deffff04 	addi	sp,sp,-4
 800b7d8:	dc000015 	stw	r16,0(sp)
 800b7dc:	00c003c4 	movi	r3,15
 800b7e0:	2005883a 	mov	r2,r4
 800b7e4:	1980432e 	bgeu	r3,r6,800b8f4 <memcpy+0x120>
 800b7e8:	2146b03a 	or	r3,r4,r5
 800b7ec:	18c000cc 	andi	r3,r3,3
 800b7f0:	1800421e 	bne	r3,zero,800b8fc <memcpy+0x128>
 800b7f4:	343ffc04 	addi	r16,r6,-16
 800b7f8:	8020d13a 	srli	r16,r16,4
 800b7fc:	28c00104 	addi	r3,r5,4
 800b800:	23400104 	addi	r13,r4,4
 800b804:	801e913a 	slli	r15,r16,4
 800b808:	2b000204 	addi	r12,r5,8
 800b80c:	22c00204 	addi	r11,r4,8
 800b810:	7bc00504 	addi	r15,r15,20
 800b814:	2a800304 	addi	r10,r5,12
 800b818:	22400304 	addi	r9,r4,12
 800b81c:	2bdf883a 	add	r15,r5,r15
 800b820:	2811883a 	mov	r8,r5
 800b824:	200f883a 	mov	r7,r4
 800b828:	41000017 	ldw	r4,0(r8)
 800b82c:	39c00404 	addi	r7,r7,16
 800b830:	18c00404 	addi	r3,r3,16
 800b834:	393ffc15 	stw	r4,-16(r7)
 800b838:	1bbffc17 	ldw	r14,-16(r3)
 800b83c:	6b400404 	addi	r13,r13,16
 800b840:	5ac00404 	addi	r11,r11,16
 800b844:	6bbffc15 	stw	r14,-16(r13)
 800b848:	63800017 	ldw	r14,0(r12)
 800b84c:	4a400404 	addi	r9,r9,16
 800b850:	42000404 	addi	r8,r8,16
 800b854:	5bbffc15 	stw	r14,-16(r11)
 800b858:	53800017 	ldw	r14,0(r10)
 800b85c:	63000404 	addi	r12,r12,16
 800b860:	52800404 	addi	r10,r10,16
 800b864:	4bbffc15 	stw	r14,-16(r9)
 800b868:	1bffef1e 	bne	r3,r15,800b828 <__alt_data_end+0xfc00b828>
 800b86c:	81c00044 	addi	r7,r16,1
 800b870:	380e913a 	slli	r7,r7,4
 800b874:	310003cc 	andi	r4,r6,15
 800b878:	02c000c4 	movi	r11,3
 800b87c:	11c7883a 	add	r3,r2,r7
 800b880:	29cb883a 	add	r5,r5,r7
 800b884:	59001f2e 	bgeu	r11,r4,800b904 <memcpy+0x130>
 800b888:	1813883a 	mov	r9,r3
 800b88c:	2811883a 	mov	r8,r5
 800b890:	200f883a 	mov	r7,r4
 800b894:	42800017 	ldw	r10,0(r8)
 800b898:	4a400104 	addi	r9,r9,4
 800b89c:	39ffff04 	addi	r7,r7,-4
 800b8a0:	4abfff15 	stw	r10,-4(r9)
 800b8a4:	42000104 	addi	r8,r8,4
 800b8a8:	59fffa36 	bltu	r11,r7,800b894 <__alt_data_end+0xfc00b894>
 800b8ac:	213fff04 	addi	r4,r4,-4
 800b8b0:	2008d0ba 	srli	r4,r4,2
 800b8b4:	318000cc 	andi	r6,r6,3
 800b8b8:	21000044 	addi	r4,r4,1
 800b8bc:	2109883a 	add	r4,r4,r4
 800b8c0:	2109883a 	add	r4,r4,r4
 800b8c4:	1907883a 	add	r3,r3,r4
 800b8c8:	290b883a 	add	r5,r5,r4
 800b8cc:	30000626 	beq	r6,zero,800b8e8 <memcpy+0x114>
 800b8d0:	198d883a 	add	r6,r3,r6
 800b8d4:	29c00003 	ldbu	r7,0(r5)
 800b8d8:	18c00044 	addi	r3,r3,1
 800b8dc:	29400044 	addi	r5,r5,1
 800b8e0:	19ffffc5 	stb	r7,-1(r3)
 800b8e4:	19bffb1e 	bne	r3,r6,800b8d4 <__alt_data_end+0xfc00b8d4>
 800b8e8:	dc000017 	ldw	r16,0(sp)
 800b8ec:	dec00104 	addi	sp,sp,4
 800b8f0:	f800283a 	ret
 800b8f4:	2007883a 	mov	r3,r4
 800b8f8:	003ff406 	br	800b8cc <__alt_data_end+0xfc00b8cc>
 800b8fc:	2007883a 	mov	r3,r4
 800b900:	003ff306 	br	800b8d0 <__alt_data_end+0xfc00b8d0>
 800b904:	200d883a 	mov	r6,r4
 800b908:	003ff006 	br	800b8cc <__alt_data_end+0xfc00b8cc>

0800b90c <memmove>:
 800b90c:	2005883a 	mov	r2,r4
 800b910:	29000b2e 	bgeu	r5,r4,800b940 <memmove+0x34>
 800b914:	298f883a 	add	r7,r5,r6
 800b918:	21c0092e 	bgeu	r4,r7,800b940 <memmove+0x34>
 800b91c:	2187883a 	add	r3,r4,r6
 800b920:	198bc83a 	sub	r5,r3,r6
 800b924:	30004b26 	beq	r6,zero,800ba54 <memmove+0x148>
 800b928:	39ffffc4 	addi	r7,r7,-1
 800b92c:	39000003 	ldbu	r4,0(r7)
 800b930:	18ffffc4 	addi	r3,r3,-1
 800b934:	19000005 	stb	r4,0(r3)
 800b938:	197ffb1e 	bne	r3,r5,800b928 <__alt_data_end+0xfc00b928>
 800b93c:	f800283a 	ret
 800b940:	00c003c4 	movi	r3,15
 800b944:	1980412e 	bgeu	r3,r6,800ba4c <memmove+0x140>
 800b948:	1146b03a 	or	r3,r2,r5
 800b94c:	18c000cc 	andi	r3,r3,3
 800b950:	1800411e 	bne	r3,zero,800ba58 <memmove+0x14c>
 800b954:	33fffc04 	addi	r15,r6,-16
 800b958:	781ed13a 	srli	r15,r15,4
 800b95c:	28c00104 	addi	r3,r5,4
 800b960:	13400104 	addi	r13,r2,4
 800b964:	781c913a 	slli	r14,r15,4
 800b968:	2b000204 	addi	r12,r5,8
 800b96c:	12c00204 	addi	r11,r2,8
 800b970:	73800504 	addi	r14,r14,20
 800b974:	2a800304 	addi	r10,r5,12
 800b978:	12400304 	addi	r9,r2,12
 800b97c:	2b9d883a 	add	r14,r5,r14
 800b980:	2811883a 	mov	r8,r5
 800b984:	100f883a 	mov	r7,r2
 800b988:	41000017 	ldw	r4,0(r8)
 800b98c:	39c00404 	addi	r7,r7,16
 800b990:	18c00404 	addi	r3,r3,16
 800b994:	393ffc15 	stw	r4,-16(r7)
 800b998:	193ffc17 	ldw	r4,-16(r3)
 800b99c:	6b400404 	addi	r13,r13,16
 800b9a0:	5ac00404 	addi	r11,r11,16
 800b9a4:	693ffc15 	stw	r4,-16(r13)
 800b9a8:	61000017 	ldw	r4,0(r12)
 800b9ac:	4a400404 	addi	r9,r9,16
 800b9b0:	42000404 	addi	r8,r8,16
 800b9b4:	593ffc15 	stw	r4,-16(r11)
 800b9b8:	51000017 	ldw	r4,0(r10)
 800b9bc:	63000404 	addi	r12,r12,16
 800b9c0:	52800404 	addi	r10,r10,16
 800b9c4:	493ffc15 	stw	r4,-16(r9)
 800b9c8:	1bbfef1e 	bne	r3,r14,800b988 <__alt_data_end+0xfc00b988>
 800b9cc:	79000044 	addi	r4,r15,1
 800b9d0:	2008913a 	slli	r4,r4,4
 800b9d4:	328003cc 	andi	r10,r6,15
 800b9d8:	02c000c4 	movi	r11,3
 800b9dc:	1107883a 	add	r3,r2,r4
 800b9e0:	290b883a 	add	r5,r5,r4
 800b9e4:	5a801e2e 	bgeu	r11,r10,800ba60 <memmove+0x154>
 800b9e8:	1813883a 	mov	r9,r3
 800b9ec:	2811883a 	mov	r8,r5
 800b9f0:	500f883a 	mov	r7,r10
 800b9f4:	41000017 	ldw	r4,0(r8)
 800b9f8:	4a400104 	addi	r9,r9,4
 800b9fc:	39ffff04 	addi	r7,r7,-4
 800ba00:	493fff15 	stw	r4,-4(r9)
 800ba04:	42000104 	addi	r8,r8,4
 800ba08:	59fffa36 	bltu	r11,r7,800b9f4 <__alt_data_end+0xfc00b9f4>
 800ba0c:	513fff04 	addi	r4,r10,-4
 800ba10:	2008d0ba 	srli	r4,r4,2
 800ba14:	318000cc 	andi	r6,r6,3
 800ba18:	21000044 	addi	r4,r4,1
 800ba1c:	2109883a 	add	r4,r4,r4
 800ba20:	2109883a 	add	r4,r4,r4
 800ba24:	1907883a 	add	r3,r3,r4
 800ba28:	290b883a 	add	r5,r5,r4
 800ba2c:	30000926 	beq	r6,zero,800ba54 <memmove+0x148>
 800ba30:	198d883a 	add	r6,r3,r6
 800ba34:	29c00003 	ldbu	r7,0(r5)
 800ba38:	18c00044 	addi	r3,r3,1
 800ba3c:	29400044 	addi	r5,r5,1
 800ba40:	19ffffc5 	stb	r7,-1(r3)
 800ba44:	19bffb1e 	bne	r3,r6,800ba34 <__alt_data_end+0xfc00ba34>
 800ba48:	f800283a 	ret
 800ba4c:	1007883a 	mov	r3,r2
 800ba50:	003ff606 	br	800ba2c <__alt_data_end+0xfc00ba2c>
 800ba54:	f800283a 	ret
 800ba58:	1007883a 	mov	r3,r2
 800ba5c:	003ff406 	br	800ba30 <__alt_data_end+0xfc00ba30>
 800ba60:	500d883a 	mov	r6,r10
 800ba64:	003ff106 	br	800ba2c <__alt_data_end+0xfc00ba2c>

0800ba68 <_Balloc>:
 800ba68:	20801317 	ldw	r2,76(r4)
 800ba6c:	defffc04 	addi	sp,sp,-16
 800ba70:	dc400115 	stw	r17,4(sp)
 800ba74:	dc000015 	stw	r16,0(sp)
 800ba78:	dfc00315 	stw	ra,12(sp)
 800ba7c:	dc800215 	stw	r18,8(sp)
 800ba80:	2023883a 	mov	r17,r4
 800ba84:	2821883a 	mov	r16,r5
 800ba88:	10000f26 	beq	r2,zero,800bac8 <_Balloc+0x60>
 800ba8c:	8407883a 	add	r3,r16,r16
 800ba90:	18c7883a 	add	r3,r3,r3
 800ba94:	10c7883a 	add	r3,r2,r3
 800ba98:	18800017 	ldw	r2,0(r3)
 800ba9c:	10001126 	beq	r2,zero,800bae4 <_Balloc+0x7c>
 800baa0:	11000017 	ldw	r4,0(r2)
 800baa4:	19000015 	stw	r4,0(r3)
 800baa8:	10000415 	stw	zero,16(r2)
 800baac:	10000315 	stw	zero,12(r2)
 800bab0:	dfc00317 	ldw	ra,12(sp)
 800bab4:	dc800217 	ldw	r18,8(sp)
 800bab8:	dc400117 	ldw	r17,4(sp)
 800babc:	dc000017 	ldw	r16,0(sp)
 800bac0:	dec00404 	addi	sp,sp,16
 800bac4:	f800283a 	ret
 800bac8:	01400104 	movi	r5,4
 800bacc:	01800844 	movi	r6,33
 800bad0:	800fba40 	call	800fba4 <_calloc_r>
 800bad4:	88801315 	stw	r2,76(r17)
 800bad8:	103fec1e 	bne	r2,zero,800ba8c <__alt_data_end+0xfc00ba8c>
 800badc:	0005883a 	mov	r2,zero
 800bae0:	003ff306 	br	800bab0 <__alt_data_end+0xfc00bab0>
 800bae4:	01400044 	movi	r5,1
 800bae8:	2c24983a 	sll	r18,r5,r16
 800baec:	8809883a 	mov	r4,r17
 800baf0:	91800144 	addi	r6,r18,5
 800baf4:	318d883a 	add	r6,r6,r6
 800baf8:	318d883a 	add	r6,r6,r6
 800bafc:	800fba40 	call	800fba4 <_calloc_r>
 800bb00:	103ff626 	beq	r2,zero,800badc <__alt_data_end+0xfc00badc>
 800bb04:	14000115 	stw	r16,4(r2)
 800bb08:	14800215 	stw	r18,8(r2)
 800bb0c:	003fe606 	br	800baa8 <__alt_data_end+0xfc00baa8>

0800bb10 <_Bfree>:
 800bb10:	28000826 	beq	r5,zero,800bb34 <_Bfree+0x24>
 800bb14:	28c00117 	ldw	r3,4(r5)
 800bb18:	20801317 	ldw	r2,76(r4)
 800bb1c:	18c7883a 	add	r3,r3,r3
 800bb20:	18c7883a 	add	r3,r3,r3
 800bb24:	10c5883a 	add	r2,r2,r3
 800bb28:	10c00017 	ldw	r3,0(r2)
 800bb2c:	28c00015 	stw	r3,0(r5)
 800bb30:	11400015 	stw	r5,0(r2)
 800bb34:	f800283a 	ret

0800bb38 <__multadd>:
 800bb38:	defff704 	addi	sp,sp,-36
 800bb3c:	dc800215 	stw	r18,8(sp)
 800bb40:	2c800417 	ldw	r18,16(r5)
 800bb44:	ddc00715 	stw	r23,28(sp)
 800bb48:	dd800615 	stw	r22,24(sp)
 800bb4c:	dd000415 	stw	r20,16(sp)
 800bb50:	dcc00315 	stw	r19,12(sp)
 800bb54:	dc400115 	stw	r17,4(sp)
 800bb58:	dc000015 	stw	r16,0(sp)
 800bb5c:	dfc00815 	stw	ra,32(sp)
 800bb60:	dd400515 	stw	r21,20(sp)
 800bb64:	2827883a 	mov	r19,r5
 800bb68:	2029883a 	mov	r20,r4
 800bb6c:	3023883a 	mov	r17,r6
 800bb70:	3821883a 	mov	r16,r7
 800bb74:	2d800504 	addi	r22,r5,20
 800bb78:	002f883a 	mov	r23,zero
 800bb7c:	b5400017 	ldw	r21,0(r22)
 800bb80:	880b883a 	mov	r5,r17
 800bb84:	bdc00044 	addi	r23,r23,1
 800bb88:	a93fffcc 	andi	r4,r21,65535
 800bb8c:	8002f580 	call	8002f58 <__mulsi3>
 800bb90:	1421883a 	add	r16,r2,r16
 800bb94:	a808d43a 	srli	r4,r21,16
 800bb98:	802ad43a 	srli	r21,r16,16
 800bb9c:	880b883a 	mov	r5,r17
 800bba0:	8002f580 	call	8002f58 <__mulsi3>
 800bba4:	a88f883a 	add	r7,r21,r2
 800bba8:	3804943a 	slli	r2,r7,16
 800bbac:	80ffffcc 	andi	r3,r16,65535
 800bbb0:	b5800104 	addi	r22,r22,4
 800bbb4:	10c7883a 	add	r3,r2,r3
 800bbb8:	b0ffff15 	stw	r3,-4(r22)
 800bbbc:	3820d43a 	srli	r16,r7,16
 800bbc0:	bcbfee16 	blt	r23,r18,800bb7c <__alt_data_end+0xfc00bb7c>
 800bbc4:	80000926 	beq	r16,zero,800bbec <__multadd+0xb4>
 800bbc8:	98800217 	ldw	r2,8(r19)
 800bbcc:	9080130e 	bge	r18,r2,800bc1c <__multadd+0xe4>
 800bbd0:	90800144 	addi	r2,r18,5
 800bbd4:	1085883a 	add	r2,r2,r2
 800bbd8:	1085883a 	add	r2,r2,r2
 800bbdc:	9885883a 	add	r2,r19,r2
 800bbe0:	14000015 	stw	r16,0(r2)
 800bbe4:	94800044 	addi	r18,r18,1
 800bbe8:	9c800415 	stw	r18,16(r19)
 800bbec:	9805883a 	mov	r2,r19
 800bbf0:	dfc00817 	ldw	ra,32(sp)
 800bbf4:	ddc00717 	ldw	r23,28(sp)
 800bbf8:	dd800617 	ldw	r22,24(sp)
 800bbfc:	dd400517 	ldw	r21,20(sp)
 800bc00:	dd000417 	ldw	r20,16(sp)
 800bc04:	dcc00317 	ldw	r19,12(sp)
 800bc08:	dc800217 	ldw	r18,8(sp)
 800bc0c:	dc400117 	ldw	r17,4(sp)
 800bc10:	dc000017 	ldw	r16,0(sp)
 800bc14:	dec00904 	addi	sp,sp,36
 800bc18:	f800283a 	ret
 800bc1c:	99400117 	ldw	r5,4(r19)
 800bc20:	a009883a 	mov	r4,r20
 800bc24:	29400044 	addi	r5,r5,1
 800bc28:	800ba680 	call	800ba68 <_Balloc>
 800bc2c:	99800417 	ldw	r6,16(r19)
 800bc30:	99400304 	addi	r5,r19,12
 800bc34:	11000304 	addi	r4,r2,12
 800bc38:	31800084 	addi	r6,r6,2
 800bc3c:	318d883a 	add	r6,r6,r6
 800bc40:	318d883a 	add	r6,r6,r6
 800bc44:	1023883a 	mov	r17,r2
 800bc48:	800b7d40 	call	800b7d4 <memcpy>
 800bc4c:	99000117 	ldw	r4,4(r19)
 800bc50:	a0c01317 	ldw	r3,76(r20)
 800bc54:	2109883a 	add	r4,r4,r4
 800bc58:	2109883a 	add	r4,r4,r4
 800bc5c:	1907883a 	add	r3,r3,r4
 800bc60:	18800017 	ldw	r2,0(r3)
 800bc64:	98800015 	stw	r2,0(r19)
 800bc68:	1cc00015 	stw	r19,0(r3)
 800bc6c:	8827883a 	mov	r19,r17
 800bc70:	003fd706 	br	800bbd0 <__alt_data_end+0xfc00bbd0>

0800bc74 <__s2b>:
 800bc74:	defff904 	addi	sp,sp,-28
 800bc78:	dc400115 	stw	r17,4(sp)
 800bc7c:	dc000015 	stw	r16,0(sp)
 800bc80:	2023883a 	mov	r17,r4
 800bc84:	2821883a 	mov	r16,r5
 800bc88:	39000204 	addi	r4,r7,8
 800bc8c:	01400244 	movi	r5,9
 800bc90:	dcc00315 	stw	r19,12(sp)
 800bc94:	dc800215 	stw	r18,8(sp)
 800bc98:	dfc00615 	stw	ra,24(sp)
 800bc9c:	dd400515 	stw	r21,20(sp)
 800bca0:	dd000415 	stw	r20,16(sp)
 800bca4:	3825883a 	mov	r18,r7
 800bca8:	3027883a 	mov	r19,r6
 800bcac:	80111080 	call	8011108 <__divsi3>
 800bcb0:	00c00044 	movi	r3,1
 800bcb4:	000b883a 	mov	r5,zero
 800bcb8:	1880030e 	bge	r3,r2,800bcc8 <__s2b+0x54>
 800bcbc:	18c7883a 	add	r3,r3,r3
 800bcc0:	29400044 	addi	r5,r5,1
 800bcc4:	18bffd16 	blt	r3,r2,800bcbc <__alt_data_end+0xfc00bcbc>
 800bcc8:	8809883a 	mov	r4,r17
 800bccc:	800ba680 	call	800ba68 <_Balloc>
 800bcd0:	d8c00717 	ldw	r3,28(sp)
 800bcd4:	10c00515 	stw	r3,20(r2)
 800bcd8:	00c00044 	movi	r3,1
 800bcdc:	10c00415 	stw	r3,16(r2)
 800bce0:	00c00244 	movi	r3,9
 800bce4:	1cc0210e 	bge	r3,r19,800bd6c <__s2b+0xf8>
 800bce8:	80eb883a 	add	r21,r16,r3
 800bcec:	a829883a 	mov	r20,r21
 800bcf0:	84e1883a 	add	r16,r16,r19
 800bcf4:	a1c00007 	ldb	r7,0(r20)
 800bcf8:	8809883a 	mov	r4,r17
 800bcfc:	a5000044 	addi	r20,r20,1
 800bd00:	100b883a 	mov	r5,r2
 800bd04:	01800284 	movi	r6,10
 800bd08:	39fff404 	addi	r7,r7,-48
 800bd0c:	800bb380 	call	800bb38 <__multadd>
 800bd10:	a43ff81e 	bne	r20,r16,800bcf4 <__alt_data_end+0xfc00bcf4>
 800bd14:	ace1883a 	add	r16,r21,r19
 800bd18:	843ffe04 	addi	r16,r16,-8
 800bd1c:	9c800a0e 	bge	r19,r18,800bd48 <__s2b+0xd4>
 800bd20:	94e5c83a 	sub	r18,r18,r19
 800bd24:	84a5883a 	add	r18,r16,r18
 800bd28:	81c00007 	ldb	r7,0(r16)
 800bd2c:	8809883a 	mov	r4,r17
 800bd30:	84000044 	addi	r16,r16,1
 800bd34:	100b883a 	mov	r5,r2
 800bd38:	01800284 	movi	r6,10
 800bd3c:	39fff404 	addi	r7,r7,-48
 800bd40:	800bb380 	call	800bb38 <__multadd>
 800bd44:	84bff81e 	bne	r16,r18,800bd28 <__alt_data_end+0xfc00bd28>
 800bd48:	dfc00617 	ldw	ra,24(sp)
 800bd4c:	dd400517 	ldw	r21,20(sp)
 800bd50:	dd000417 	ldw	r20,16(sp)
 800bd54:	dcc00317 	ldw	r19,12(sp)
 800bd58:	dc800217 	ldw	r18,8(sp)
 800bd5c:	dc400117 	ldw	r17,4(sp)
 800bd60:	dc000017 	ldw	r16,0(sp)
 800bd64:	dec00704 	addi	sp,sp,28
 800bd68:	f800283a 	ret
 800bd6c:	84000284 	addi	r16,r16,10
 800bd70:	1827883a 	mov	r19,r3
 800bd74:	003fe906 	br	800bd1c <__alt_data_end+0xfc00bd1c>

0800bd78 <__hi0bits>:
 800bd78:	20bfffec 	andhi	r2,r4,65535
 800bd7c:	1000141e 	bne	r2,zero,800bdd0 <__hi0bits+0x58>
 800bd80:	2008943a 	slli	r4,r4,16
 800bd84:	00800404 	movi	r2,16
 800bd88:	20ffc02c 	andhi	r3,r4,65280
 800bd8c:	1800021e 	bne	r3,zero,800bd98 <__hi0bits+0x20>
 800bd90:	2008923a 	slli	r4,r4,8
 800bd94:	10800204 	addi	r2,r2,8
 800bd98:	20fc002c 	andhi	r3,r4,61440
 800bd9c:	1800021e 	bne	r3,zero,800bda8 <__hi0bits+0x30>
 800bda0:	2008913a 	slli	r4,r4,4
 800bda4:	10800104 	addi	r2,r2,4
 800bda8:	20f0002c 	andhi	r3,r4,49152
 800bdac:	1800031e 	bne	r3,zero,800bdbc <__hi0bits+0x44>
 800bdb0:	2109883a 	add	r4,r4,r4
 800bdb4:	10800084 	addi	r2,r2,2
 800bdb8:	2109883a 	add	r4,r4,r4
 800bdbc:	20000316 	blt	r4,zero,800bdcc <__hi0bits+0x54>
 800bdc0:	2110002c 	andhi	r4,r4,16384
 800bdc4:	2000041e 	bne	r4,zero,800bdd8 <__hi0bits+0x60>
 800bdc8:	00800804 	movi	r2,32
 800bdcc:	f800283a 	ret
 800bdd0:	0005883a 	mov	r2,zero
 800bdd4:	003fec06 	br	800bd88 <__alt_data_end+0xfc00bd88>
 800bdd8:	10800044 	addi	r2,r2,1
 800bddc:	f800283a 	ret

0800bde0 <__lo0bits>:
 800bde0:	20c00017 	ldw	r3,0(r4)
 800bde4:	188001cc 	andi	r2,r3,7
 800bde8:	10000826 	beq	r2,zero,800be0c <__lo0bits+0x2c>
 800bdec:	1880004c 	andi	r2,r3,1
 800bdf0:	1000211e 	bne	r2,zero,800be78 <__lo0bits+0x98>
 800bdf4:	1880008c 	andi	r2,r3,2
 800bdf8:	1000211e 	bne	r2,zero,800be80 <__lo0bits+0xa0>
 800bdfc:	1806d0ba 	srli	r3,r3,2
 800be00:	00800084 	movi	r2,2
 800be04:	20c00015 	stw	r3,0(r4)
 800be08:	f800283a 	ret
 800be0c:	18bfffcc 	andi	r2,r3,65535
 800be10:	10001326 	beq	r2,zero,800be60 <__lo0bits+0x80>
 800be14:	0005883a 	mov	r2,zero
 800be18:	19403fcc 	andi	r5,r3,255
 800be1c:	2800021e 	bne	r5,zero,800be28 <__lo0bits+0x48>
 800be20:	1806d23a 	srli	r3,r3,8
 800be24:	10800204 	addi	r2,r2,8
 800be28:	194003cc 	andi	r5,r3,15
 800be2c:	2800021e 	bne	r5,zero,800be38 <__lo0bits+0x58>
 800be30:	1806d13a 	srli	r3,r3,4
 800be34:	10800104 	addi	r2,r2,4
 800be38:	194000cc 	andi	r5,r3,3
 800be3c:	2800021e 	bne	r5,zero,800be48 <__lo0bits+0x68>
 800be40:	1806d0ba 	srli	r3,r3,2
 800be44:	10800084 	addi	r2,r2,2
 800be48:	1940004c 	andi	r5,r3,1
 800be4c:	2800081e 	bne	r5,zero,800be70 <__lo0bits+0x90>
 800be50:	1806d07a 	srli	r3,r3,1
 800be54:	1800051e 	bne	r3,zero,800be6c <__lo0bits+0x8c>
 800be58:	00800804 	movi	r2,32
 800be5c:	f800283a 	ret
 800be60:	1806d43a 	srli	r3,r3,16
 800be64:	00800404 	movi	r2,16
 800be68:	003feb06 	br	800be18 <__alt_data_end+0xfc00be18>
 800be6c:	10800044 	addi	r2,r2,1
 800be70:	20c00015 	stw	r3,0(r4)
 800be74:	f800283a 	ret
 800be78:	0005883a 	mov	r2,zero
 800be7c:	f800283a 	ret
 800be80:	1806d07a 	srli	r3,r3,1
 800be84:	00800044 	movi	r2,1
 800be88:	20c00015 	stw	r3,0(r4)
 800be8c:	f800283a 	ret

0800be90 <__i2b>:
 800be90:	defffd04 	addi	sp,sp,-12
 800be94:	dc000015 	stw	r16,0(sp)
 800be98:	04000044 	movi	r16,1
 800be9c:	dc400115 	stw	r17,4(sp)
 800bea0:	2823883a 	mov	r17,r5
 800bea4:	800b883a 	mov	r5,r16
 800bea8:	dfc00215 	stw	ra,8(sp)
 800beac:	800ba680 	call	800ba68 <_Balloc>
 800beb0:	14400515 	stw	r17,20(r2)
 800beb4:	14000415 	stw	r16,16(r2)
 800beb8:	dfc00217 	ldw	ra,8(sp)
 800bebc:	dc400117 	ldw	r17,4(sp)
 800bec0:	dc000017 	ldw	r16,0(sp)
 800bec4:	dec00304 	addi	sp,sp,12
 800bec8:	f800283a 	ret

0800becc <__multiply>:
 800becc:	deffef04 	addi	sp,sp,-68
 800bed0:	dc400815 	stw	r17,32(sp)
 800bed4:	dc000715 	stw	r16,28(sp)
 800bed8:	2c400417 	ldw	r17,16(r5)
 800bedc:	34000417 	ldw	r16,16(r6)
 800bee0:	dd800d15 	stw	r22,52(sp)
 800bee4:	dc800915 	stw	r18,36(sp)
 800bee8:	dfc01015 	stw	ra,64(sp)
 800beec:	df000f15 	stw	fp,60(sp)
 800bef0:	ddc00e15 	stw	r23,56(sp)
 800bef4:	dd400c15 	stw	r21,48(sp)
 800bef8:	dd000b15 	stw	r20,44(sp)
 800befc:	dcc00a15 	stw	r19,40(sp)
 800bf00:	2825883a 	mov	r18,r5
 800bf04:	302d883a 	mov	r22,r6
 800bf08:	8c009116 	blt	r17,r16,800c150 <__multiply+0x284>
 800bf0c:	8005883a 	mov	r2,r16
 800bf10:	8821883a 	mov	r16,r17
 800bf14:	1023883a 	mov	r17,r2
 800bf18:	90800217 	ldw	r2,8(r18)
 800bf1c:	8447883a 	add	r3,r16,r17
 800bf20:	d8c00215 	stw	r3,8(sp)
 800bf24:	91400117 	ldw	r5,4(r18)
 800bf28:	10c0010e 	bge	r2,r3,800bf30 <__multiply+0x64>
 800bf2c:	29400044 	addi	r5,r5,1
 800bf30:	800ba680 	call	800ba68 <_Balloc>
 800bf34:	d8c00217 	ldw	r3,8(sp)
 800bf38:	d8800615 	stw	r2,24(sp)
 800bf3c:	18eb883a 	add	r21,r3,r3
 800bf40:	ad6b883a 	add	r21,r21,r21
 800bf44:	10c00504 	addi	r3,r2,20
 800bf48:	1d6b883a 	add	r21,r3,r21
 800bf4c:	d8c00115 	stw	r3,4(sp)
 800bf50:	dd400315 	stw	r21,12(sp)
 800bf54:	1805883a 	mov	r2,r3
 800bf58:	1d40042e 	bgeu	r3,r21,800bf6c <__multiply+0xa0>
 800bf5c:	d8c00317 	ldw	r3,12(sp)
 800bf60:	10000015 	stw	zero,0(r2)
 800bf64:	10800104 	addi	r2,r2,4
 800bf68:	10fffc36 	bltu	r2,r3,800bf5c <__alt_data_end+0xfc00bf5c>
 800bf6c:	8c63883a 	add	r17,r17,r17
 800bf70:	b5800504 	addi	r22,r22,20
 800bf74:	8c63883a 	add	r17,r17,r17
 800bf78:	94800504 	addi	r18,r18,20
 800bf7c:	8421883a 	add	r16,r16,r16
 800bf80:	b463883a 	add	r17,r22,r17
 800bf84:	8421883a 	add	r16,r16,r16
 800bf88:	dd800015 	stw	r22,0(sp)
 800bf8c:	dc800415 	stw	r18,16(sp)
 800bf90:	dc400515 	stw	r17,20(sp)
 800bf94:	9429883a 	add	r20,r18,r16
 800bf98:	b4404f2e 	bgeu	r22,r17,800c0d8 <__multiply+0x20c>
 800bf9c:	d8c00017 	ldw	r3,0(sp)
 800bfa0:	1c800017 	ldw	r18,0(r3)
 800bfa4:	943fffcc 	andi	r16,r18,65535
 800bfa8:	80001e26 	beq	r16,zero,800c024 <__multiply+0x158>
 800bfac:	dd800117 	ldw	r22,4(sp)
 800bfb0:	dd400417 	ldw	r21,16(sp)
 800bfb4:	0025883a 	mov	r18,zero
 800bfb8:	adc00017 	ldw	r23,0(r21)
 800bfbc:	b4c00017 	ldw	r19,0(r22)
 800bfc0:	800b883a 	mov	r5,r16
 800bfc4:	b93fffcc 	andi	r4,r23,65535
 800bfc8:	8002f580 	call	8002f58 <__mulsi3>
 800bfcc:	9c7fffcc 	andi	r17,r19,65535
 800bfd0:	8885883a 	add	r2,r17,r2
 800bfd4:	b808d43a 	srli	r4,r23,16
 800bfd8:	14a3883a 	add	r17,r2,r18
 800bfdc:	9826d43a 	srli	r19,r19,16
 800bfe0:	8824d43a 	srli	r18,r17,16
 800bfe4:	800b883a 	mov	r5,r16
 800bfe8:	8002f580 	call	8002f58 <__mulsi3>
 800bfec:	9885883a 	add	r2,r19,r2
 800bff0:	14a7883a 	add	r19,r2,r18
 800bff4:	88ffffcc 	andi	r3,r17,65535
 800bff8:	9822943a 	slli	r17,r19,16
 800bffc:	ad400104 	addi	r21,r21,4
 800c000:	b005883a 	mov	r2,r22
 800c004:	88c6b03a 	or	r3,r17,r3
 800c008:	b0c00015 	stw	r3,0(r22)
 800c00c:	9824d43a 	srli	r18,r19,16
 800c010:	b5800104 	addi	r22,r22,4
 800c014:	ad3fe836 	bltu	r21,r20,800bfb8 <__alt_data_end+0xfc00bfb8>
 800c018:	d8c00017 	ldw	r3,0(sp)
 800c01c:	14800115 	stw	r18,4(r2)
 800c020:	1c800017 	ldw	r18,0(r3)
 800c024:	9024d43a 	srli	r18,r18,16
 800c028:	90002226 	beq	r18,zero,800c0b4 <__multiply+0x1e8>
 800c02c:	d8c00117 	ldw	r3,4(sp)
 800c030:	dd800417 	ldw	r22,16(sp)
 800c034:	002f883a 	mov	r23,zero
 800c038:	1f000017 	ldw	fp,0(r3)
 800c03c:	1823883a 	mov	r17,r3
 800c040:	182b883a 	mov	r21,r3
 800c044:	e021883a 	mov	r16,fp
 800c048:	00000106 	br	800c050 <__multiply+0x184>
 800c04c:	982b883a 	mov	r21,r19
 800c050:	b100000b 	ldhu	r4,0(r22)
 800c054:	8020d43a 	srli	r16,r16,16
 800c058:	900b883a 	mov	r5,r18
 800c05c:	8002f580 	call	8002f58 <__mulsi3>
 800c060:	1405883a 	add	r2,r2,r16
 800c064:	15ef883a 	add	r23,r2,r23
 800c068:	b804943a 	slli	r2,r23,16
 800c06c:	e0ffffcc 	andi	r3,fp,65535
 800c070:	8c400104 	addi	r17,r17,4
 800c074:	10c6b03a 	or	r3,r2,r3
 800c078:	88ffff15 	stw	r3,-4(r17)
 800c07c:	b5800104 	addi	r22,r22,4
 800c080:	b13fff17 	ldw	r4,-4(r22)
 800c084:	acc00104 	addi	r19,r21,4
 800c088:	900b883a 	mov	r5,r18
 800c08c:	2008d43a 	srli	r4,r4,16
 800c090:	9c000017 	ldw	r16,0(r19)
 800c094:	8002f580 	call	8002f58 <__mulsi3>
 800c098:	b806d43a 	srli	r3,r23,16
 800c09c:	813fffcc 	andi	r4,r16,65535
 800c0a0:	1105883a 	add	r2,r2,r4
 800c0a4:	10f9883a 	add	fp,r2,r3
 800c0a8:	e02ed43a 	srli	r23,fp,16
 800c0ac:	b53fe736 	bltu	r22,r20,800c04c <__alt_data_end+0xfc00c04c>
 800c0b0:	af000115 	stw	fp,4(r21)
 800c0b4:	d8c00017 	ldw	r3,0(sp)
 800c0b8:	d9000517 	ldw	r4,20(sp)
 800c0bc:	18c00104 	addi	r3,r3,4
 800c0c0:	d8c00015 	stw	r3,0(sp)
 800c0c4:	d8c00117 	ldw	r3,4(sp)
 800c0c8:	18c00104 	addi	r3,r3,4
 800c0cc:	d8c00115 	stw	r3,4(sp)
 800c0d0:	d8c00017 	ldw	r3,0(sp)
 800c0d4:	193fb136 	bltu	r3,r4,800bf9c <__alt_data_end+0xfc00bf9c>
 800c0d8:	d8c00217 	ldw	r3,8(sp)
 800c0dc:	00c00c0e 	bge	zero,r3,800c110 <__multiply+0x244>
 800c0e0:	d8c00317 	ldw	r3,12(sp)
 800c0e4:	18bfff17 	ldw	r2,-4(r3)
 800c0e8:	1d7fff04 	addi	r21,r3,-4
 800c0ec:	10000326 	beq	r2,zero,800c0fc <__multiply+0x230>
 800c0f0:	00000706 	br	800c110 <__multiply+0x244>
 800c0f4:	a8800017 	ldw	r2,0(r21)
 800c0f8:	1000051e 	bne	r2,zero,800c110 <__multiply+0x244>
 800c0fc:	d8c00217 	ldw	r3,8(sp)
 800c100:	ad7fff04 	addi	r21,r21,-4
 800c104:	18ffffc4 	addi	r3,r3,-1
 800c108:	d8c00215 	stw	r3,8(sp)
 800c10c:	183ff91e 	bne	r3,zero,800c0f4 <__alt_data_end+0xfc00c0f4>
 800c110:	d8c00617 	ldw	r3,24(sp)
 800c114:	d9000217 	ldw	r4,8(sp)
 800c118:	1805883a 	mov	r2,r3
 800c11c:	19000415 	stw	r4,16(r3)
 800c120:	dfc01017 	ldw	ra,64(sp)
 800c124:	df000f17 	ldw	fp,60(sp)
 800c128:	ddc00e17 	ldw	r23,56(sp)
 800c12c:	dd800d17 	ldw	r22,52(sp)
 800c130:	dd400c17 	ldw	r21,48(sp)
 800c134:	dd000b17 	ldw	r20,44(sp)
 800c138:	dcc00a17 	ldw	r19,40(sp)
 800c13c:	dc800917 	ldw	r18,36(sp)
 800c140:	dc400817 	ldw	r17,32(sp)
 800c144:	dc000717 	ldw	r16,28(sp)
 800c148:	dec01104 	addi	sp,sp,68
 800c14c:	f800283a 	ret
 800c150:	3025883a 	mov	r18,r6
 800c154:	282d883a 	mov	r22,r5
 800c158:	003f6f06 	br	800bf18 <__alt_data_end+0xfc00bf18>

0800c15c <__pow5mult>:
 800c15c:	defffa04 	addi	sp,sp,-24
 800c160:	dcc00315 	stw	r19,12(sp)
 800c164:	dc800215 	stw	r18,8(sp)
 800c168:	dc000015 	stw	r16,0(sp)
 800c16c:	dfc00515 	stw	ra,20(sp)
 800c170:	dd000415 	stw	r20,16(sp)
 800c174:	dc400115 	stw	r17,4(sp)
 800c178:	308000cc 	andi	r2,r6,3
 800c17c:	3021883a 	mov	r16,r6
 800c180:	2027883a 	mov	r19,r4
 800c184:	2825883a 	mov	r18,r5
 800c188:	10002e1e 	bne	r2,zero,800c244 <__pow5mult+0xe8>
 800c18c:	8021d0ba 	srai	r16,r16,2
 800c190:	80001a26 	beq	r16,zero,800c1fc <__pow5mult+0xa0>
 800c194:	9c401217 	ldw	r17,72(r19)
 800c198:	8800061e 	bne	r17,zero,800c1b4 <__pow5mult+0x58>
 800c19c:	00003406 	br	800c270 <__pow5mult+0x114>
 800c1a0:	8021d07a 	srai	r16,r16,1
 800c1a4:	80001526 	beq	r16,zero,800c1fc <__pow5mult+0xa0>
 800c1a8:	88800017 	ldw	r2,0(r17)
 800c1ac:	10001c26 	beq	r2,zero,800c220 <__pow5mult+0xc4>
 800c1b0:	1023883a 	mov	r17,r2
 800c1b4:	80c0004c 	andi	r3,r16,1
 800c1b8:	183ff926 	beq	r3,zero,800c1a0 <__alt_data_end+0xfc00c1a0>
 800c1bc:	900b883a 	mov	r5,r18
 800c1c0:	880d883a 	mov	r6,r17
 800c1c4:	9809883a 	mov	r4,r19
 800c1c8:	800becc0 	call	800becc <__multiply>
 800c1cc:	90001b26 	beq	r18,zero,800c23c <__pow5mult+0xe0>
 800c1d0:	91c00117 	ldw	r7,4(r18)
 800c1d4:	98c01317 	ldw	r3,76(r19)
 800c1d8:	8021d07a 	srai	r16,r16,1
 800c1dc:	39cf883a 	add	r7,r7,r7
 800c1e0:	39cf883a 	add	r7,r7,r7
 800c1e4:	19c7883a 	add	r3,r3,r7
 800c1e8:	19000017 	ldw	r4,0(r3)
 800c1ec:	91000015 	stw	r4,0(r18)
 800c1f0:	1c800015 	stw	r18,0(r3)
 800c1f4:	1025883a 	mov	r18,r2
 800c1f8:	803feb1e 	bne	r16,zero,800c1a8 <__alt_data_end+0xfc00c1a8>
 800c1fc:	9005883a 	mov	r2,r18
 800c200:	dfc00517 	ldw	ra,20(sp)
 800c204:	dd000417 	ldw	r20,16(sp)
 800c208:	dcc00317 	ldw	r19,12(sp)
 800c20c:	dc800217 	ldw	r18,8(sp)
 800c210:	dc400117 	ldw	r17,4(sp)
 800c214:	dc000017 	ldw	r16,0(sp)
 800c218:	dec00604 	addi	sp,sp,24
 800c21c:	f800283a 	ret
 800c220:	9809883a 	mov	r4,r19
 800c224:	880b883a 	mov	r5,r17
 800c228:	880d883a 	mov	r6,r17
 800c22c:	800becc0 	call	800becc <__multiply>
 800c230:	88800015 	stw	r2,0(r17)
 800c234:	10000015 	stw	zero,0(r2)
 800c238:	003fdd06 	br	800c1b0 <__alt_data_end+0xfc00c1b0>
 800c23c:	1025883a 	mov	r18,r2
 800c240:	003fd706 	br	800c1a0 <__alt_data_end+0xfc00c1a0>
 800c244:	10bfffc4 	addi	r2,r2,-1
 800c248:	1085883a 	add	r2,r2,r2
 800c24c:	00c20074 	movhi	r3,2049
 800c250:	18de8004 	addi	r3,r3,31232
 800c254:	1085883a 	add	r2,r2,r2
 800c258:	1885883a 	add	r2,r3,r2
 800c25c:	11800017 	ldw	r6,0(r2)
 800c260:	000f883a 	mov	r7,zero
 800c264:	800bb380 	call	800bb38 <__multadd>
 800c268:	1025883a 	mov	r18,r2
 800c26c:	003fc706 	br	800c18c <__alt_data_end+0xfc00c18c>
 800c270:	05000044 	movi	r20,1
 800c274:	9809883a 	mov	r4,r19
 800c278:	a00b883a 	mov	r5,r20
 800c27c:	800ba680 	call	800ba68 <_Balloc>
 800c280:	1023883a 	mov	r17,r2
 800c284:	00809c44 	movi	r2,625
 800c288:	88800515 	stw	r2,20(r17)
 800c28c:	8d000415 	stw	r20,16(r17)
 800c290:	9c401215 	stw	r17,72(r19)
 800c294:	88000015 	stw	zero,0(r17)
 800c298:	003fc606 	br	800c1b4 <__alt_data_end+0xfc00c1b4>

0800c29c <__lshift>:
 800c29c:	defff904 	addi	sp,sp,-28
 800c2a0:	dd000415 	stw	r20,16(sp)
 800c2a4:	dcc00315 	stw	r19,12(sp)
 800c2a8:	3029d17a 	srai	r20,r6,5
 800c2ac:	2cc00417 	ldw	r19,16(r5)
 800c2b0:	28800217 	ldw	r2,8(r5)
 800c2b4:	dd400515 	stw	r21,20(sp)
 800c2b8:	a4e7883a 	add	r19,r20,r19
 800c2bc:	dc800215 	stw	r18,8(sp)
 800c2c0:	dc400115 	stw	r17,4(sp)
 800c2c4:	dc000015 	stw	r16,0(sp)
 800c2c8:	dfc00615 	stw	ra,24(sp)
 800c2cc:	9c000044 	addi	r16,r19,1
 800c2d0:	2823883a 	mov	r17,r5
 800c2d4:	302b883a 	mov	r21,r6
 800c2d8:	2025883a 	mov	r18,r4
 800c2dc:	29400117 	ldw	r5,4(r5)
 800c2e0:	1400030e 	bge	r2,r16,800c2f0 <__lshift+0x54>
 800c2e4:	1085883a 	add	r2,r2,r2
 800c2e8:	29400044 	addi	r5,r5,1
 800c2ec:	143ffd16 	blt	r2,r16,800c2e4 <__alt_data_end+0xfc00c2e4>
 800c2f0:	9009883a 	mov	r4,r18
 800c2f4:	800ba680 	call	800ba68 <_Balloc>
 800c2f8:	11c00504 	addi	r7,r2,20
 800c2fc:	0500090e 	bge	zero,r20,800c324 <__lshift+0x88>
 800c300:	3811883a 	mov	r8,r7
 800c304:	0007883a 	mov	r3,zero
 800c308:	40000015 	stw	zero,0(r8)
 800c30c:	18c00044 	addi	r3,r3,1
 800c310:	42000104 	addi	r8,r8,4
 800c314:	1d3ffc1e 	bne	r3,r20,800c308 <__alt_data_end+0xfc00c308>
 800c318:	18c7883a 	add	r3,r3,r3
 800c31c:	18c7883a 	add	r3,r3,r3
 800c320:	38cf883a 	add	r7,r7,r3
 800c324:	89000417 	ldw	r4,16(r17)
 800c328:	88c00504 	addi	r3,r17,20
 800c32c:	a98007cc 	andi	r6,r21,31
 800c330:	2109883a 	add	r4,r4,r4
 800c334:	2109883a 	add	r4,r4,r4
 800c338:	1909883a 	add	r4,r3,r4
 800c33c:	30002326 	beq	r6,zero,800c3cc <__lshift+0x130>
 800c340:	01400804 	movi	r5,32
 800c344:	298bc83a 	sub	r5,r5,r6
 800c348:	0013883a 	mov	r9,zero
 800c34c:	1a000017 	ldw	r8,0(r3)
 800c350:	3815883a 	mov	r10,r7
 800c354:	39c00104 	addi	r7,r7,4
 800c358:	4190983a 	sll	r8,r8,r6
 800c35c:	18c00104 	addi	r3,r3,4
 800c360:	4a10b03a 	or	r8,r9,r8
 800c364:	3a3fff15 	stw	r8,-4(r7)
 800c368:	1a3fff17 	ldw	r8,-4(r3)
 800c36c:	4152d83a 	srl	r9,r8,r5
 800c370:	193ff636 	bltu	r3,r4,800c34c <__alt_data_end+0xfc00c34c>
 800c374:	52400115 	stw	r9,4(r10)
 800c378:	48000126 	beq	r9,zero,800c380 <__lshift+0xe4>
 800c37c:	9c000084 	addi	r16,r19,2
 800c380:	89000117 	ldw	r4,4(r17)
 800c384:	90c01317 	ldw	r3,76(r18)
 800c388:	843fffc4 	addi	r16,r16,-1
 800c38c:	2109883a 	add	r4,r4,r4
 800c390:	2109883a 	add	r4,r4,r4
 800c394:	1907883a 	add	r3,r3,r4
 800c398:	19000017 	ldw	r4,0(r3)
 800c39c:	14000415 	stw	r16,16(r2)
 800c3a0:	89000015 	stw	r4,0(r17)
 800c3a4:	1c400015 	stw	r17,0(r3)
 800c3a8:	dfc00617 	ldw	ra,24(sp)
 800c3ac:	dd400517 	ldw	r21,20(sp)
 800c3b0:	dd000417 	ldw	r20,16(sp)
 800c3b4:	dcc00317 	ldw	r19,12(sp)
 800c3b8:	dc800217 	ldw	r18,8(sp)
 800c3bc:	dc400117 	ldw	r17,4(sp)
 800c3c0:	dc000017 	ldw	r16,0(sp)
 800c3c4:	dec00704 	addi	sp,sp,28
 800c3c8:	f800283a 	ret
 800c3cc:	19400017 	ldw	r5,0(r3)
 800c3d0:	39c00104 	addi	r7,r7,4
 800c3d4:	18c00104 	addi	r3,r3,4
 800c3d8:	397fff15 	stw	r5,-4(r7)
 800c3dc:	193ffb36 	bltu	r3,r4,800c3cc <__alt_data_end+0xfc00c3cc>
 800c3e0:	003fe706 	br	800c380 <__alt_data_end+0xfc00c380>

0800c3e4 <__mcmp>:
 800c3e4:	20800417 	ldw	r2,16(r4)
 800c3e8:	28c00417 	ldw	r3,16(r5)
 800c3ec:	10c5c83a 	sub	r2,r2,r3
 800c3f0:	1000111e 	bne	r2,zero,800c438 <__mcmp+0x54>
 800c3f4:	18c7883a 	add	r3,r3,r3
 800c3f8:	18c7883a 	add	r3,r3,r3
 800c3fc:	21000504 	addi	r4,r4,20
 800c400:	29400504 	addi	r5,r5,20
 800c404:	20c5883a 	add	r2,r4,r3
 800c408:	28cb883a 	add	r5,r5,r3
 800c40c:	00000106 	br	800c414 <__mcmp+0x30>
 800c410:	20800a2e 	bgeu	r4,r2,800c43c <__mcmp+0x58>
 800c414:	10bfff04 	addi	r2,r2,-4
 800c418:	297fff04 	addi	r5,r5,-4
 800c41c:	11800017 	ldw	r6,0(r2)
 800c420:	28c00017 	ldw	r3,0(r5)
 800c424:	30fffa26 	beq	r6,r3,800c410 <__alt_data_end+0xfc00c410>
 800c428:	30c00236 	bltu	r6,r3,800c434 <__mcmp+0x50>
 800c42c:	00800044 	movi	r2,1
 800c430:	f800283a 	ret
 800c434:	00bfffc4 	movi	r2,-1
 800c438:	f800283a 	ret
 800c43c:	0005883a 	mov	r2,zero
 800c440:	f800283a 	ret

0800c444 <__mdiff>:
 800c444:	defffb04 	addi	sp,sp,-20
 800c448:	dc000015 	stw	r16,0(sp)
 800c44c:	2821883a 	mov	r16,r5
 800c450:	dcc00315 	stw	r19,12(sp)
 800c454:	300b883a 	mov	r5,r6
 800c458:	2027883a 	mov	r19,r4
 800c45c:	8009883a 	mov	r4,r16
 800c460:	dc800215 	stw	r18,8(sp)
 800c464:	dfc00415 	stw	ra,16(sp)
 800c468:	dc400115 	stw	r17,4(sp)
 800c46c:	3025883a 	mov	r18,r6
 800c470:	800c3e40 	call	800c3e4 <__mcmp>
 800c474:	10005226 	beq	r2,zero,800c5c0 <__mdiff+0x17c>
 800c478:	10004c16 	blt	r2,zero,800c5ac <__mdiff+0x168>
 800c47c:	0023883a 	mov	r17,zero
 800c480:	81400117 	ldw	r5,4(r16)
 800c484:	9809883a 	mov	r4,r19
 800c488:	800ba680 	call	800ba68 <_Balloc>
 800c48c:	83400417 	ldw	r13,16(r16)
 800c490:	93800417 	ldw	r14,16(r18)
 800c494:	81000504 	addi	r4,r16,20
 800c498:	6b59883a 	add	r12,r13,r13
 800c49c:	739d883a 	add	r14,r14,r14
 800c4a0:	6319883a 	add	r12,r12,r12
 800c4a4:	91800504 	addi	r6,r18,20
 800c4a8:	739d883a 	add	r14,r14,r14
 800c4ac:	14400315 	stw	r17,12(r2)
 800c4b0:	2319883a 	add	r12,r4,r12
 800c4b4:	339d883a 	add	r14,r6,r14
 800c4b8:	12400504 	addi	r9,r2,20
 800c4bc:	0007883a 	mov	r3,zero
 800c4c0:	22000017 	ldw	r8,0(r4)
 800c4c4:	32800017 	ldw	r10,0(r6)
 800c4c8:	4ac00104 	addi	r11,r9,4
 800c4cc:	41ffffcc 	andi	r7,r8,65535
 800c4d0:	38c7883a 	add	r3,r7,r3
 800c4d4:	51ffffcc 	andi	r7,r10,65535
 800c4d8:	19cfc83a 	sub	r7,r3,r7
 800c4dc:	4010d43a 	srli	r8,r8,16
 800c4e0:	5014d43a 	srli	r10,r10,16
 800c4e4:	3807d43a 	srai	r3,r7,16
 800c4e8:	39ffffcc 	andi	r7,r7,65535
 800c4ec:	4291c83a 	sub	r8,r8,r10
 800c4f0:	40c7883a 	add	r3,r8,r3
 800c4f4:	1810943a 	slli	r8,r3,16
 800c4f8:	31800104 	addi	r6,r6,4
 800c4fc:	21000104 	addi	r4,r4,4
 800c500:	41ceb03a 	or	r7,r8,r7
 800c504:	49c00015 	stw	r7,0(r9)
 800c508:	1807d43a 	srai	r3,r3,16
 800c50c:	580b883a 	mov	r5,r11
 800c510:	5813883a 	mov	r9,r11
 800c514:	33bfea36 	bltu	r6,r14,800c4c0 <__alt_data_end+0xfc00c4c0>
 800c518:	2011883a 	mov	r8,r4
 800c51c:	2300152e 	bgeu	r4,r12,800c574 <__mdiff+0x130>
 800c520:	21400017 	ldw	r5,0(r4)
 800c524:	4a400104 	addi	r9,r9,4
 800c528:	21000104 	addi	r4,r4,4
 800c52c:	29ffffcc 	andi	r7,r5,65535
 800c530:	38c7883a 	add	r3,r7,r3
 800c534:	280ad43a 	srli	r5,r5,16
 800c538:	180dd43a 	srai	r6,r3,16
 800c53c:	19ffffcc 	andi	r7,r3,65535
 800c540:	3147883a 	add	r3,r6,r5
 800c544:	180a943a 	slli	r5,r3,16
 800c548:	1807d43a 	srai	r3,r3,16
 800c54c:	29ceb03a 	or	r7,r5,r7
 800c550:	49ffff15 	stw	r7,-4(r9)
 800c554:	233ff236 	bltu	r4,r12,800c520 <__alt_data_end+0xfc00c520>
 800c558:	0206303a 	nor	r3,zero,r8
 800c55c:	1b07883a 	add	r3,r3,r12
 800c560:	1806d0ba 	srli	r3,r3,2
 800c564:	18c00044 	addi	r3,r3,1
 800c568:	18c7883a 	add	r3,r3,r3
 800c56c:	18c7883a 	add	r3,r3,r3
 800c570:	58cb883a 	add	r5,r11,r3
 800c574:	28ffff04 	addi	r3,r5,-4
 800c578:	3800041e 	bne	r7,zero,800c58c <__mdiff+0x148>
 800c57c:	18ffff04 	addi	r3,r3,-4
 800c580:	19000017 	ldw	r4,0(r3)
 800c584:	6b7fffc4 	addi	r13,r13,-1
 800c588:	203ffc26 	beq	r4,zero,800c57c <__alt_data_end+0xfc00c57c>
 800c58c:	13400415 	stw	r13,16(r2)
 800c590:	dfc00417 	ldw	ra,16(sp)
 800c594:	dcc00317 	ldw	r19,12(sp)
 800c598:	dc800217 	ldw	r18,8(sp)
 800c59c:	dc400117 	ldw	r17,4(sp)
 800c5a0:	dc000017 	ldw	r16,0(sp)
 800c5a4:	dec00504 	addi	sp,sp,20
 800c5a8:	f800283a 	ret
 800c5ac:	8005883a 	mov	r2,r16
 800c5b0:	04400044 	movi	r17,1
 800c5b4:	9021883a 	mov	r16,r18
 800c5b8:	1025883a 	mov	r18,r2
 800c5bc:	003fb006 	br	800c480 <__alt_data_end+0xfc00c480>
 800c5c0:	9809883a 	mov	r4,r19
 800c5c4:	000b883a 	mov	r5,zero
 800c5c8:	800ba680 	call	800ba68 <_Balloc>
 800c5cc:	00c00044 	movi	r3,1
 800c5d0:	10c00415 	stw	r3,16(r2)
 800c5d4:	10000515 	stw	zero,20(r2)
 800c5d8:	003fed06 	br	800c590 <__alt_data_end+0xfc00c590>

0800c5dc <__ulp>:
 800c5dc:	295ffc2c 	andhi	r5,r5,32752
 800c5e0:	00bf3034 	movhi	r2,64704
 800c5e4:	2887883a 	add	r3,r5,r2
 800c5e8:	00c0020e 	bge	zero,r3,800c5f4 <__ulp+0x18>
 800c5ec:	0005883a 	mov	r2,zero
 800c5f0:	f800283a 	ret
 800c5f4:	00c7c83a 	sub	r3,zero,r3
 800c5f8:	180bd53a 	srai	r5,r3,20
 800c5fc:	008004c4 	movi	r2,19
 800c600:	11400a0e 	bge	r2,r5,800c62c <__ulp+0x50>
 800c604:	00800c84 	movi	r2,50
 800c608:	0007883a 	mov	r3,zero
 800c60c:	11400516 	blt	r2,r5,800c624 <__ulp+0x48>
 800c610:	00800cc4 	movi	r2,51
 800c614:	114bc83a 	sub	r5,r2,r5
 800c618:	00800044 	movi	r2,1
 800c61c:	1144983a 	sll	r2,r2,r5
 800c620:	f800283a 	ret
 800c624:	00800044 	movi	r2,1
 800c628:	f800283a 	ret
 800c62c:	00800234 	movhi	r2,8
 800c630:	1147d83a 	sra	r3,r2,r5
 800c634:	0005883a 	mov	r2,zero
 800c638:	f800283a 	ret

0800c63c <__b2d>:
 800c63c:	defffa04 	addi	sp,sp,-24
 800c640:	dc000015 	stw	r16,0(sp)
 800c644:	24000417 	ldw	r16,16(r4)
 800c648:	dc400115 	stw	r17,4(sp)
 800c64c:	24400504 	addi	r17,r4,20
 800c650:	8421883a 	add	r16,r16,r16
 800c654:	8421883a 	add	r16,r16,r16
 800c658:	8c21883a 	add	r16,r17,r16
 800c65c:	dc800215 	stw	r18,8(sp)
 800c660:	84bfff17 	ldw	r18,-4(r16)
 800c664:	dd000415 	stw	r20,16(sp)
 800c668:	dcc00315 	stw	r19,12(sp)
 800c66c:	9009883a 	mov	r4,r18
 800c670:	2829883a 	mov	r20,r5
 800c674:	dfc00515 	stw	ra,20(sp)
 800c678:	800bd780 	call	800bd78 <__hi0bits>
 800c67c:	00c00804 	movi	r3,32
 800c680:	1887c83a 	sub	r3,r3,r2
 800c684:	a0c00015 	stw	r3,0(r20)
 800c688:	00c00284 	movi	r3,10
 800c68c:	84ffff04 	addi	r19,r16,-4
 800c690:	18801216 	blt	r3,r2,800c6dc <__b2d+0xa0>
 800c694:	014002c4 	movi	r5,11
 800c698:	2889c83a 	sub	r4,r5,r2
 800c69c:	9106d83a 	srl	r3,r18,r4
 800c6a0:	18cffc34 	orhi	r3,r3,16368
 800c6a4:	8cc0282e 	bgeu	r17,r19,800c748 <__b2d+0x10c>
 800c6a8:	817ffe17 	ldw	r5,-8(r16)
 800c6ac:	290ad83a 	srl	r5,r5,r4
 800c6b0:	10800544 	addi	r2,r2,21
 800c6b4:	9084983a 	sll	r2,r18,r2
 800c6b8:	2884b03a 	or	r2,r5,r2
 800c6bc:	dfc00517 	ldw	ra,20(sp)
 800c6c0:	dd000417 	ldw	r20,16(sp)
 800c6c4:	dcc00317 	ldw	r19,12(sp)
 800c6c8:	dc800217 	ldw	r18,8(sp)
 800c6cc:	dc400117 	ldw	r17,4(sp)
 800c6d0:	dc000017 	ldw	r16,0(sp)
 800c6d4:	dec00604 	addi	sp,sp,24
 800c6d8:	f800283a 	ret
 800c6dc:	113ffd44 	addi	r4,r2,-11
 800c6e0:	8cc00f2e 	bgeu	r17,r19,800c720 <__b2d+0xe4>
 800c6e4:	81bffe04 	addi	r6,r16,-8
 800c6e8:	817ffe17 	ldw	r5,-8(r16)
 800c6ec:	20001326 	beq	r4,zero,800c73c <__b2d+0x100>
 800c6f0:	00c00ac4 	movi	r3,43
 800c6f4:	1885c83a 	sub	r2,r3,r2
 800c6f8:	2886d83a 	srl	r3,r5,r2
 800c6fc:	9124983a 	sll	r18,r18,r4
 800c700:	90e4b03a 	or	r18,r18,r3
 800c704:	90cffc34 	orhi	r3,r18,16368
 800c708:	8980112e 	bgeu	r17,r6,800c750 <__b2d+0x114>
 800c70c:	81bffd17 	ldw	r6,-12(r16)
 800c710:	308cd83a 	srl	r6,r6,r2
 800c714:	2904983a 	sll	r2,r5,r4
 800c718:	1184b03a 	or	r2,r2,r6
 800c71c:	003fe706 	br	800c6bc <__alt_data_end+0xfc00c6bc>
 800c720:	20000526 	beq	r4,zero,800c738 <__b2d+0xfc>
 800c724:	9124983a 	sll	r18,r18,r4
 800c728:	000d883a 	mov	r6,zero
 800c72c:	000b883a 	mov	r5,zero
 800c730:	90cffc34 	orhi	r3,r18,16368
 800c734:	003ff706 	br	800c714 <__alt_data_end+0xfc00c714>
 800c738:	000b883a 	mov	r5,zero
 800c73c:	90cffc34 	orhi	r3,r18,16368
 800c740:	2805883a 	mov	r2,r5
 800c744:	003fdd06 	br	800c6bc <__alt_data_end+0xfc00c6bc>
 800c748:	000b883a 	mov	r5,zero
 800c74c:	003fd806 	br	800c6b0 <__alt_data_end+0xfc00c6b0>
 800c750:	000d883a 	mov	r6,zero
 800c754:	003fef06 	br	800c714 <__alt_data_end+0xfc00c714>

0800c758 <__d2b>:
 800c758:	defff704 	addi	sp,sp,-36
 800c75c:	dc000215 	stw	r16,8(sp)
 800c760:	3021883a 	mov	r16,r6
 800c764:	dc400315 	stw	r17,12(sp)
 800c768:	8022907a 	slli	r17,r16,1
 800c76c:	dd400715 	stw	r21,28(sp)
 800c770:	282b883a 	mov	r21,r5
 800c774:	01400044 	movi	r5,1
 800c778:	dd000615 	stw	r20,24(sp)
 800c77c:	dcc00515 	stw	r19,20(sp)
 800c780:	dc800415 	stw	r18,16(sp)
 800c784:	dfc00815 	stw	ra,32(sp)
 800c788:	3829883a 	mov	r20,r7
 800c78c:	dc800917 	ldw	r18,36(sp)
 800c790:	8822d57a 	srli	r17,r17,21
 800c794:	800ba680 	call	800ba68 <_Balloc>
 800c798:	1027883a 	mov	r19,r2
 800c79c:	00800434 	movhi	r2,16
 800c7a0:	10bfffc4 	addi	r2,r2,-1
 800c7a4:	808c703a 	and	r6,r16,r2
 800c7a8:	88000126 	beq	r17,zero,800c7b0 <__d2b+0x58>
 800c7ac:	31800434 	orhi	r6,r6,16
 800c7b0:	d9800015 	stw	r6,0(sp)
 800c7b4:	a8001f26 	beq	r21,zero,800c834 <__d2b+0xdc>
 800c7b8:	d9000104 	addi	r4,sp,4
 800c7bc:	dd400115 	stw	r21,4(sp)
 800c7c0:	800bde00 	call	800bde0 <__lo0bits>
 800c7c4:	d8c00017 	ldw	r3,0(sp)
 800c7c8:	1000291e 	bne	r2,zero,800c870 <__d2b+0x118>
 800c7cc:	d9000117 	ldw	r4,4(sp)
 800c7d0:	99000515 	stw	r4,20(r19)
 800c7d4:	1820c03a 	cmpne	r16,r3,zero
 800c7d8:	84000044 	addi	r16,r16,1
 800c7dc:	98c00615 	stw	r3,24(r19)
 800c7e0:	9c000415 	stw	r16,16(r19)
 800c7e4:	88001b1e 	bne	r17,zero,800c854 <__d2b+0xfc>
 800c7e8:	800690ba 	slli	r3,r16,2
 800c7ec:	10bef384 	addi	r2,r2,-1074
 800c7f0:	a0800015 	stw	r2,0(r20)
 800c7f4:	98c5883a 	add	r2,r19,r3
 800c7f8:	11000417 	ldw	r4,16(r2)
 800c7fc:	8020917a 	slli	r16,r16,5
 800c800:	800bd780 	call	800bd78 <__hi0bits>
 800c804:	8085c83a 	sub	r2,r16,r2
 800c808:	90800015 	stw	r2,0(r18)
 800c80c:	9805883a 	mov	r2,r19
 800c810:	dfc00817 	ldw	ra,32(sp)
 800c814:	dd400717 	ldw	r21,28(sp)
 800c818:	dd000617 	ldw	r20,24(sp)
 800c81c:	dcc00517 	ldw	r19,20(sp)
 800c820:	dc800417 	ldw	r18,16(sp)
 800c824:	dc400317 	ldw	r17,12(sp)
 800c828:	dc000217 	ldw	r16,8(sp)
 800c82c:	dec00904 	addi	sp,sp,36
 800c830:	f800283a 	ret
 800c834:	d809883a 	mov	r4,sp
 800c838:	800bde00 	call	800bde0 <__lo0bits>
 800c83c:	d8c00017 	ldw	r3,0(sp)
 800c840:	04000044 	movi	r16,1
 800c844:	9c000415 	stw	r16,16(r19)
 800c848:	98c00515 	stw	r3,20(r19)
 800c84c:	10800804 	addi	r2,r2,32
 800c850:	883fe526 	beq	r17,zero,800c7e8 <__alt_data_end+0xfc00c7e8>
 800c854:	8c7ef344 	addi	r17,r17,-1075
 800c858:	88a3883a 	add	r17,r17,r2
 800c85c:	00c00d44 	movi	r3,53
 800c860:	a4400015 	stw	r17,0(r20)
 800c864:	1885c83a 	sub	r2,r3,r2
 800c868:	90800015 	stw	r2,0(r18)
 800c86c:	003fe706 	br	800c80c <__alt_data_end+0xfc00c80c>
 800c870:	01000804 	movi	r4,32
 800c874:	2089c83a 	sub	r4,r4,r2
 800c878:	1908983a 	sll	r4,r3,r4
 800c87c:	d9400117 	ldw	r5,4(sp)
 800c880:	1886d83a 	srl	r3,r3,r2
 800c884:	2148b03a 	or	r4,r4,r5
 800c888:	99000515 	stw	r4,20(r19)
 800c88c:	d8c00015 	stw	r3,0(sp)
 800c890:	003fd006 	br	800c7d4 <__alt_data_end+0xfc00c7d4>

0800c894 <__ratio>:
 800c894:	defff904 	addi	sp,sp,-28
 800c898:	dc400315 	stw	r17,12(sp)
 800c89c:	2823883a 	mov	r17,r5
 800c8a0:	d9400104 	addi	r5,sp,4
 800c8a4:	dfc00615 	stw	ra,24(sp)
 800c8a8:	dcc00515 	stw	r19,20(sp)
 800c8ac:	dc800415 	stw	r18,16(sp)
 800c8b0:	2027883a 	mov	r19,r4
 800c8b4:	dc000215 	stw	r16,8(sp)
 800c8b8:	800c63c0 	call	800c63c <__b2d>
 800c8bc:	8809883a 	mov	r4,r17
 800c8c0:	d80b883a 	mov	r5,sp
 800c8c4:	1025883a 	mov	r18,r2
 800c8c8:	1821883a 	mov	r16,r3
 800c8cc:	800c63c0 	call	800c63c <__b2d>
 800c8d0:	8a400417 	ldw	r9,16(r17)
 800c8d4:	9a000417 	ldw	r8,16(r19)
 800c8d8:	100d883a 	mov	r6,r2
 800c8dc:	d8800017 	ldw	r2,0(sp)
 800c8e0:	4251c83a 	sub	r8,r8,r9
 800c8e4:	4012917a 	slli	r9,r8,5
 800c8e8:	da000117 	ldw	r8,4(sp)
 800c8ec:	4091c83a 	sub	r8,r8,r2
 800c8f0:	4251883a 	add	r8,r8,r9
 800c8f4:	02000d0e 	bge	zero,r8,800c92c <__ratio+0x98>
 800c8f8:	4010953a 	slli	r8,r8,20
 800c8fc:	4421883a 	add	r16,r8,r16
 800c900:	9009883a 	mov	r4,r18
 800c904:	800b883a 	mov	r5,r16
 800c908:	180f883a 	mov	r7,r3
 800c90c:	8011a640 	call	8011a64 <__divdf3>
 800c910:	dfc00617 	ldw	ra,24(sp)
 800c914:	dcc00517 	ldw	r19,20(sp)
 800c918:	dc800417 	ldw	r18,16(sp)
 800c91c:	dc400317 	ldw	r17,12(sp)
 800c920:	dc000217 	ldw	r16,8(sp)
 800c924:	dec00704 	addi	sp,sp,28
 800c928:	f800283a 	ret
 800c92c:	4010953a 	slli	r8,r8,20
 800c930:	1a07c83a 	sub	r3,r3,r8
 800c934:	003ff206 	br	800c900 <__alt_data_end+0xfc00c900>

0800c938 <_mprec_log10>:
 800c938:	defffe04 	addi	sp,sp,-8
 800c93c:	dc000015 	stw	r16,0(sp)
 800c940:	dfc00115 	stw	ra,4(sp)
 800c944:	008005c4 	movi	r2,23
 800c948:	2021883a 	mov	r16,r4
 800c94c:	11000d0e 	bge	r2,r4,800c984 <_mprec_log10+0x4c>
 800c950:	0005883a 	mov	r2,zero
 800c954:	00cffc34 	movhi	r3,16368
 800c958:	843fffc4 	addi	r16,r16,-1
 800c95c:	1009883a 	mov	r4,r2
 800c960:	180b883a 	mov	r5,r3
 800c964:	000d883a 	mov	r6,zero
 800c968:	01d00934 	movhi	r7,16420
 800c96c:	80126280 	call	8012628 <__muldf3>
 800c970:	803ff91e 	bne	r16,zero,800c958 <__alt_data_end+0xfc00c958>
 800c974:	dfc00117 	ldw	ra,4(sp)
 800c978:	dc000017 	ldw	r16,0(sp)
 800c97c:	dec00204 	addi	sp,sp,8
 800c980:	f800283a 	ret
 800c984:	202090fa 	slli	r16,r4,3
 800c988:	00820074 	movhi	r2,2049
 800c98c:	109e9704 	addi	r2,r2,31324
 800c990:	1421883a 	add	r16,r2,r16
 800c994:	80800017 	ldw	r2,0(r16)
 800c998:	80c00117 	ldw	r3,4(r16)
 800c99c:	dfc00117 	ldw	ra,4(sp)
 800c9a0:	dc000017 	ldw	r16,0(sp)
 800c9a4:	dec00204 	addi	sp,sp,8
 800c9a8:	f800283a 	ret

0800c9ac <__copybits>:
 800c9ac:	297fffc4 	addi	r5,r5,-1
 800c9b0:	280fd17a 	srai	r7,r5,5
 800c9b4:	30c00417 	ldw	r3,16(r6)
 800c9b8:	30800504 	addi	r2,r6,20
 800c9bc:	39c00044 	addi	r7,r7,1
 800c9c0:	18c7883a 	add	r3,r3,r3
 800c9c4:	39cf883a 	add	r7,r7,r7
 800c9c8:	18c7883a 	add	r3,r3,r3
 800c9cc:	39cf883a 	add	r7,r7,r7
 800c9d0:	10c7883a 	add	r3,r2,r3
 800c9d4:	21cf883a 	add	r7,r4,r7
 800c9d8:	10c00d2e 	bgeu	r2,r3,800ca10 <__copybits+0x64>
 800c9dc:	200b883a 	mov	r5,r4
 800c9e0:	12000017 	ldw	r8,0(r2)
 800c9e4:	29400104 	addi	r5,r5,4
 800c9e8:	10800104 	addi	r2,r2,4
 800c9ec:	2a3fff15 	stw	r8,-4(r5)
 800c9f0:	10fffb36 	bltu	r2,r3,800c9e0 <__alt_data_end+0xfc00c9e0>
 800c9f4:	1985c83a 	sub	r2,r3,r6
 800c9f8:	10bffac4 	addi	r2,r2,-21
 800c9fc:	1004d0ba 	srli	r2,r2,2
 800ca00:	10800044 	addi	r2,r2,1
 800ca04:	1085883a 	add	r2,r2,r2
 800ca08:	1085883a 	add	r2,r2,r2
 800ca0c:	2089883a 	add	r4,r4,r2
 800ca10:	21c0032e 	bgeu	r4,r7,800ca20 <__copybits+0x74>
 800ca14:	20000015 	stw	zero,0(r4)
 800ca18:	21000104 	addi	r4,r4,4
 800ca1c:	21fffd36 	bltu	r4,r7,800ca14 <__alt_data_end+0xfc00ca14>
 800ca20:	f800283a 	ret

0800ca24 <__any_on>:
 800ca24:	20c00417 	ldw	r3,16(r4)
 800ca28:	2805d17a 	srai	r2,r5,5
 800ca2c:	21000504 	addi	r4,r4,20
 800ca30:	18800d0e 	bge	r3,r2,800ca68 <__any_on+0x44>
 800ca34:	18c7883a 	add	r3,r3,r3
 800ca38:	18c7883a 	add	r3,r3,r3
 800ca3c:	20c7883a 	add	r3,r4,r3
 800ca40:	20c0192e 	bgeu	r4,r3,800caa8 <__any_on+0x84>
 800ca44:	18bfff17 	ldw	r2,-4(r3)
 800ca48:	18ffff04 	addi	r3,r3,-4
 800ca4c:	1000041e 	bne	r2,zero,800ca60 <__any_on+0x3c>
 800ca50:	20c0142e 	bgeu	r4,r3,800caa4 <__any_on+0x80>
 800ca54:	18ffff04 	addi	r3,r3,-4
 800ca58:	19400017 	ldw	r5,0(r3)
 800ca5c:	283ffc26 	beq	r5,zero,800ca50 <__alt_data_end+0xfc00ca50>
 800ca60:	00800044 	movi	r2,1
 800ca64:	f800283a 	ret
 800ca68:	10c00a0e 	bge	r2,r3,800ca94 <__any_on+0x70>
 800ca6c:	1085883a 	add	r2,r2,r2
 800ca70:	1085883a 	add	r2,r2,r2
 800ca74:	294007cc 	andi	r5,r5,31
 800ca78:	2087883a 	add	r3,r4,r2
 800ca7c:	283ff026 	beq	r5,zero,800ca40 <__alt_data_end+0xfc00ca40>
 800ca80:	19800017 	ldw	r6,0(r3)
 800ca84:	3144d83a 	srl	r2,r6,r5
 800ca88:	114a983a 	sll	r5,r2,r5
 800ca8c:	29bff41e 	bne	r5,r6,800ca60 <__alt_data_end+0xfc00ca60>
 800ca90:	003feb06 	br	800ca40 <__alt_data_end+0xfc00ca40>
 800ca94:	1085883a 	add	r2,r2,r2
 800ca98:	1085883a 	add	r2,r2,r2
 800ca9c:	2087883a 	add	r3,r4,r2
 800caa0:	003fe706 	br	800ca40 <__alt_data_end+0xfc00ca40>
 800caa4:	f800283a 	ret
 800caa8:	0005883a 	mov	r2,zero
 800caac:	f800283a 	ret

0800cab0 <_realloc_r>:
 800cab0:	defff604 	addi	sp,sp,-40
 800cab4:	dcc00315 	stw	r19,12(sp)
 800cab8:	dc400115 	stw	r17,4(sp)
 800cabc:	dfc00915 	stw	ra,36(sp)
 800cac0:	df000815 	stw	fp,32(sp)
 800cac4:	ddc00715 	stw	r23,28(sp)
 800cac8:	dd800615 	stw	r22,24(sp)
 800cacc:	dd400515 	stw	r21,20(sp)
 800cad0:	dd000415 	stw	r20,16(sp)
 800cad4:	dc800215 	stw	r18,8(sp)
 800cad8:	dc000015 	stw	r16,0(sp)
 800cadc:	2827883a 	mov	r19,r5
 800cae0:	3023883a 	mov	r17,r6
 800cae4:	2800bf26 	beq	r5,zero,800cde4 <_realloc_r+0x334>
 800cae8:	2025883a 	mov	r18,r4
 800caec:	80142ac0 	call	80142ac <__malloc_lock>
 800caf0:	98ffff17 	ldw	r3,-4(r19)
 800caf4:	01bfff04 	movi	r6,-4
 800caf8:	890002c4 	addi	r4,r17,11
 800cafc:	01c00584 	movi	r7,22
 800cb00:	9d7ffe04 	addi	r21,r19,-8
 800cb04:	19a0703a 	and	r16,r3,r6
 800cb08:	39003f2e 	bgeu	r7,r4,800cc08 <_realloc_r+0x158>
 800cb0c:	053ffe04 	movi	r20,-8
 800cb10:	2528703a 	and	r20,r4,r20
 800cb14:	a00f883a 	mov	r7,r20
 800cb18:	a0008216 	blt	r20,zero,800cd24 <_realloc_r+0x274>
 800cb1c:	a4408136 	bltu	r20,r17,800cd24 <_realloc_r+0x274>
 800cb20:	81c03c0e 	bge	r16,r7,800cc14 <_realloc_r+0x164>
 800cb24:	070200b4 	movhi	fp,2050
 800cb28:	e7204004 	addi	fp,fp,-32512
 800cb2c:	e1000217 	ldw	r4,8(fp)
 800cb30:	ac05883a 	add	r2,r21,r16
 800cb34:	2080bf26 	beq	r4,r2,800ce34 <_realloc_r+0x384>
 800cb38:	11000117 	ldw	r4,4(r2)
 800cb3c:	023fff84 	movi	r8,-2
 800cb40:	2210703a 	and	r8,r4,r8
 800cb44:	1211883a 	add	r8,r2,r8
 800cb48:	41400117 	ldw	r5,4(r8)
 800cb4c:	2940004c 	andi	r5,r5,1
 800cb50:	28004a1e 	bne	r5,zero,800cc7c <_realloc_r+0x1cc>
 800cb54:	017fff04 	movi	r5,-4
 800cb58:	2148703a 	and	r4,r4,r5
 800cb5c:	2409883a 	add	r4,r4,r16
 800cb60:	21c0ad0e 	bge	r4,r7,800ce18 <_realloc_r+0x368>
 800cb64:	18c0004c 	andi	r3,r3,1
 800cb68:	18007f1e 	bne	r3,zero,800cd68 <_realloc_r+0x2b8>
 800cb6c:	9dfffe17 	ldw	r23,-8(r19)
 800cb70:	adefc83a 	sub	r23,r21,r23
 800cb74:	bd800117 	ldw	r22,4(r23)
 800cb78:	b14a703a 	and	r5,r22,r5
 800cb7c:	216d883a 	add	r22,r4,r5
 800cb80:	b1c04516 	blt	r22,r7,800cc98 <_realloc_r+0x1e8>
 800cb84:	10c00317 	ldw	r3,12(r2)
 800cb88:	10800217 	ldw	r2,8(r2)
 800cb8c:	81bfff04 	addi	r6,r16,-4
 800cb90:	bc400204 	addi	r17,r23,8
 800cb94:	10c00315 	stw	r3,12(r2)
 800cb98:	18800215 	stw	r2,8(r3)
 800cb9c:	b9400217 	ldw	r5,8(r23)
 800cba0:	b8c00317 	ldw	r3,12(r23)
 800cba4:	00800904 	movi	r2,36
 800cba8:	28c00315 	stw	r3,12(r5)
 800cbac:	19400215 	stw	r5,8(r3)
 800cbb0:	1180ef36 	bltu	r2,r6,800cf70 <_realloc_r+0x4c0>
 800cbb4:	008004c4 	movi	r2,19
 800cbb8:	1180da2e 	bgeu	r2,r6,800cf24 <_realloc_r+0x474>
 800cbbc:	98800017 	ldw	r2,0(r19)
 800cbc0:	b8800215 	stw	r2,8(r23)
 800cbc4:	98800117 	ldw	r2,4(r19)
 800cbc8:	b8800315 	stw	r2,12(r23)
 800cbcc:	008006c4 	movi	r2,27
 800cbd0:	1180fc2e 	bgeu	r2,r6,800cfc4 <_realloc_r+0x514>
 800cbd4:	98800217 	ldw	r2,8(r19)
 800cbd8:	b8800415 	stw	r2,16(r23)
 800cbdc:	98800317 	ldw	r2,12(r19)
 800cbe0:	b8800515 	stw	r2,20(r23)
 800cbe4:	00800904 	movi	r2,36
 800cbe8:	3080421e 	bne	r6,r2,800ccf4 <_realloc_r+0x244>
 800cbec:	98800417 	ldw	r2,16(r19)
 800cbf0:	9cc00604 	addi	r19,r19,24
 800cbf4:	b8c00804 	addi	r3,r23,32
 800cbf8:	b8800615 	stw	r2,24(r23)
 800cbfc:	98bfff17 	ldw	r2,-4(r19)
 800cc00:	b8800715 	stw	r2,28(r23)
 800cc04:	00003d06 	br	800ccfc <_realloc_r+0x24c>
 800cc08:	01c00404 	movi	r7,16
 800cc0c:	3829883a 	mov	r20,r7
 800cc10:	003fc206 	br	800cb1c <__alt_data_end+0xfc00cb1c>
 800cc14:	9823883a 	mov	r17,r19
 800cc18:	850fc83a 	sub	r7,r16,r20
 800cc1c:	008003c4 	movi	r2,15
 800cc20:	18c0004c 	andi	r3,r3,1
 800cc24:	11c04336 	bltu	r2,r7,800cd34 <_realloc_r+0x284>
 800cc28:	1c06b03a 	or	r3,r3,r16
 800cc2c:	a8c00115 	stw	r3,4(r21)
 800cc30:	ac21883a 	add	r16,r21,r16
 800cc34:	80c00117 	ldw	r3,4(r16)
 800cc38:	18c00054 	ori	r3,r3,1
 800cc3c:	80c00115 	stw	r3,4(r16)
 800cc40:	9009883a 	mov	r4,r18
 800cc44:	80142cc0 	call	80142cc <__malloc_unlock>
 800cc48:	8805883a 	mov	r2,r17
 800cc4c:	dfc00917 	ldw	ra,36(sp)
 800cc50:	df000817 	ldw	fp,32(sp)
 800cc54:	ddc00717 	ldw	r23,28(sp)
 800cc58:	dd800617 	ldw	r22,24(sp)
 800cc5c:	dd400517 	ldw	r21,20(sp)
 800cc60:	dd000417 	ldw	r20,16(sp)
 800cc64:	dcc00317 	ldw	r19,12(sp)
 800cc68:	dc800217 	ldw	r18,8(sp)
 800cc6c:	dc400117 	ldw	r17,4(sp)
 800cc70:	dc000017 	ldw	r16,0(sp)
 800cc74:	dec00a04 	addi	sp,sp,40
 800cc78:	f800283a 	ret
 800cc7c:	18c0004c 	andi	r3,r3,1
 800cc80:	1800391e 	bne	r3,zero,800cd68 <_realloc_r+0x2b8>
 800cc84:	9dfffe17 	ldw	r23,-8(r19)
 800cc88:	00bfff04 	movi	r2,-4
 800cc8c:	adefc83a 	sub	r23,r21,r23
 800cc90:	b9400117 	ldw	r5,4(r23)
 800cc94:	288a703a 	and	r5,r5,r2
 800cc98:	2c2d883a 	add	r22,r5,r16
 800cc9c:	b1c03216 	blt	r22,r7,800cd68 <_realloc_r+0x2b8>
 800cca0:	b8800317 	ldw	r2,12(r23)
 800cca4:	b8c00217 	ldw	r3,8(r23)
 800cca8:	81bfff04 	addi	r6,r16,-4
 800ccac:	01000904 	movi	r4,36
 800ccb0:	18800315 	stw	r2,12(r3)
 800ccb4:	10c00215 	stw	r3,8(r2)
 800ccb8:	bc400204 	addi	r17,r23,8
 800ccbc:	2180ac36 	bltu	r4,r6,800cf70 <_realloc_r+0x4c0>
 800ccc0:	008004c4 	movi	r2,19
 800ccc4:	1180972e 	bgeu	r2,r6,800cf24 <_realloc_r+0x474>
 800ccc8:	98800017 	ldw	r2,0(r19)
 800cccc:	b8800215 	stw	r2,8(r23)
 800ccd0:	98800117 	ldw	r2,4(r19)
 800ccd4:	b8800315 	stw	r2,12(r23)
 800ccd8:	008006c4 	movi	r2,27
 800ccdc:	1180b92e 	bgeu	r2,r6,800cfc4 <_realloc_r+0x514>
 800cce0:	98800217 	ldw	r2,8(r19)
 800cce4:	b8800415 	stw	r2,16(r23)
 800cce8:	98800317 	ldw	r2,12(r19)
 800ccec:	b8800515 	stw	r2,20(r23)
 800ccf0:	313fbe26 	beq	r6,r4,800cbec <__alt_data_end+0xfc00cbec>
 800ccf4:	b8c00604 	addi	r3,r23,24
 800ccf8:	9cc00404 	addi	r19,r19,16
 800ccfc:	98800017 	ldw	r2,0(r19)
 800cd00:	b021883a 	mov	r16,r22
 800cd04:	b82b883a 	mov	r21,r23
 800cd08:	18800015 	stw	r2,0(r3)
 800cd0c:	98800117 	ldw	r2,4(r19)
 800cd10:	18800115 	stw	r2,4(r3)
 800cd14:	98800217 	ldw	r2,8(r19)
 800cd18:	18800215 	stw	r2,8(r3)
 800cd1c:	b8c00117 	ldw	r3,4(r23)
 800cd20:	003fbd06 	br	800cc18 <__alt_data_end+0xfc00cc18>
 800cd24:	00800304 	movi	r2,12
 800cd28:	90800015 	stw	r2,0(r18)
 800cd2c:	0005883a 	mov	r2,zero
 800cd30:	003fc606 	br	800cc4c <__alt_data_end+0xfc00cc4c>
 800cd34:	1d06b03a 	or	r3,r3,r20
 800cd38:	ad0b883a 	add	r5,r21,r20
 800cd3c:	a8c00115 	stw	r3,4(r21)
 800cd40:	38800054 	ori	r2,r7,1
 800cd44:	28800115 	stw	r2,4(r5)
 800cd48:	29cf883a 	add	r7,r5,r7
 800cd4c:	38800117 	ldw	r2,4(r7)
 800cd50:	9009883a 	mov	r4,r18
 800cd54:	29400204 	addi	r5,r5,8
 800cd58:	10800054 	ori	r2,r2,1
 800cd5c:	38800115 	stw	r2,4(r7)
 800cd60:	800ab500 	call	800ab50 <_free_r>
 800cd64:	003fb606 	br	800cc40 <__alt_data_end+0xfc00cc40>
 800cd68:	880b883a 	mov	r5,r17
 800cd6c:	9009883a 	mov	r4,r18
 800cd70:	80035180 	call	8003518 <_malloc_r>
 800cd74:	1023883a 	mov	r17,r2
 800cd78:	1000aa26 	beq	r2,zero,800d024 <_realloc_r+0x574>
 800cd7c:	98ffff17 	ldw	r3,-4(r19)
 800cd80:	113ffe04 	addi	r4,r2,-8
 800cd84:	00bfff84 	movi	r2,-2
 800cd88:	1884703a 	and	r2,r3,r2
 800cd8c:	a885883a 	add	r2,r21,r2
 800cd90:	20808626 	beq	r4,r2,800cfac <_realloc_r+0x4fc>
 800cd94:	81bfff04 	addi	r6,r16,-4
 800cd98:	00800904 	movi	r2,36
 800cd9c:	11807036 	bltu	r2,r6,800cf60 <_realloc_r+0x4b0>
 800cda0:	00c004c4 	movi	r3,19
 800cda4:	19805636 	bltu	r3,r6,800cf00 <_realloc_r+0x450>
 800cda8:	8805883a 	mov	r2,r17
 800cdac:	9807883a 	mov	r3,r19
 800cdb0:	19000017 	ldw	r4,0(r3)
 800cdb4:	11000015 	stw	r4,0(r2)
 800cdb8:	19000117 	ldw	r4,4(r3)
 800cdbc:	11000115 	stw	r4,4(r2)
 800cdc0:	18c00217 	ldw	r3,8(r3)
 800cdc4:	10c00215 	stw	r3,8(r2)
 800cdc8:	980b883a 	mov	r5,r19
 800cdcc:	9009883a 	mov	r4,r18
 800cdd0:	800ab500 	call	800ab50 <_free_r>
 800cdd4:	9009883a 	mov	r4,r18
 800cdd8:	80142cc0 	call	80142cc <__malloc_unlock>
 800cddc:	8805883a 	mov	r2,r17
 800cde0:	003f9a06 	br	800cc4c <__alt_data_end+0xfc00cc4c>
 800cde4:	300b883a 	mov	r5,r6
 800cde8:	dfc00917 	ldw	ra,36(sp)
 800cdec:	df000817 	ldw	fp,32(sp)
 800cdf0:	ddc00717 	ldw	r23,28(sp)
 800cdf4:	dd800617 	ldw	r22,24(sp)
 800cdf8:	dd400517 	ldw	r21,20(sp)
 800cdfc:	dd000417 	ldw	r20,16(sp)
 800ce00:	dcc00317 	ldw	r19,12(sp)
 800ce04:	dc800217 	ldw	r18,8(sp)
 800ce08:	dc400117 	ldw	r17,4(sp)
 800ce0c:	dc000017 	ldw	r16,0(sp)
 800ce10:	dec00a04 	addi	sp,sp,40
 800ce14:	80035181 	jmpi	8003518 <_malloc_r>
 800ce18:	11400317 	ldw	r5,12(r2)
 800ce1c:	10800217 	ldw	r2,8(r2)
 800ce20:	9823883a 	mov	r17,r19
 800ce24:	2021883a 	mov	r16,r4
 800ce28:	11400315 	stw	r5,12(r2)
 800ce2c:	28800215 	stw	r2,8(r5)
 800ce30:	003f7906 	br	800cc18 <__alt_data_end+0xfc00cc18>
 800ce34:	21000117 	ldw	r4,4(r4)
 800ce38:	00bfff04 	movi	r2,-4
 800ce3c:	a1800404 	addi	r6,r20,16
 800ce40:	2088703a 	and	r4,r4,r2
 800ce44:	2409883a 	add	r4,r4,r16
 800ce48:	2180380e 	bge	r4,r6,800cf2c <_realloc_r+0x47c>
 800ce4c:	18c0004c 	andi	r3,r3,1
 800ce50:	183fc51e 	bne	r3,zero,800cd68 <__alt_data_end+0xfc00cd68>
 800ce54:	9dfffe17 	ldw	r23,-8(r19)
 800ce58:	adefc83a 	sub	r23,r21,r23
 800ce5c:	b9400117 	ldw	r5,4(r23)
 800ce60:	288a703a 	and	r5,r5,r2
 800ce64:	216d883a 	add	r22,r4,r5
 800ce68:	b1bf8b16 	blt	r22,r6,800cc98 <__alt_data_end+0xfc00cc98>
 800ce6c:	b8800317 	ldw	r2,12(r23)
 800ce70:	b8c00217 	ldw	r3,8(r23)
 800ce74:	81bfff04 	addi	r6,r16,-4
 800ce78:	01000904 	movi	r4,36
 800ce7c:	18800315 	stw	r2,12(r3)
 800ce80:	10c00215 	stw	r3,8(r2)
 800ce84:	bc400204 	addi	r17,r23,8
 800ce88:	21805a36 	bltu	r4,r6,800cff4 <_realloc_r+0x544>
 800ce8c:	008004c4 	movi	r2,19
 800ce90:	1180562e 	bgeu	r2,r6,800cfec <_realloc_r+0x53c>
 800ce94:	98800017 	ldw	r2,0(r19)
 800ce98:	b8800215 	stw	r2,8(r23)
 800ce9c:	98800117 	ldw	r2,4(r19)
 800cea0:	b8800315 	stw	r2,12(r23)
 800cea4:	008006c4 	movi	r2,27
 800cea8:	11805636 	bltu	r2,r6,800d004 <_realloc_r+0x554>
 800ceac:	b8800404 	addi	r2,r23,16
 800ceb0:	9cc00204 	addi	r19,r19,8
 800ceb4:	98c00017 	ldw	r3,0(r19)
 800ceb8:	10c00015 	stw	r3,0(r2)
 800cebc:	98c00117 	ldw	r3,4(r19)
 800cec0:	10c00115 	stw	r3,4(r2)
 800cec4:	98c00217 	ldw	r3,8(r19)
 800cec8:	10c00215 	stw	r3,8(r2)
 800cecc:	bd07883a 	add	r3,r23,r20
 800ced0:	b505c83a 	sub	r2,r22,r20
 800ced4:	e0c00215 	stw	r3,8(fp)
 800ced8:	10800054 	ori	r2,r2,1
 800cedc:	18800115 	stw	r2,4(r3)
 800cee0:	b8800117 	ldw	r2,4(r23)
 800cee4:	9009883a 	mov	r4,r18
 800cee8:	1080004c 	andi	r2,r2,1
 800ceec:	a0a8b03a 	or	r20,r20,r2
 800cef0:	bd000115 	stw	r20,4(r23)
 800cef4:	80142cc0 	call	80142cc <__malloc_unlock>
 800cef8:	8805883a 	mov	r2,r17
 800cefc:	003f5306 	br	800cc4c <__alt_data_end+0xfc00cc4c>
 800cf00:	98c00017 	ldw	r3,0(r19)
 800cf04:	88c00015 	stw	r3,0(r17)
 800cf08:	98c00117 	ldw	r3,4(r19)
 800cf0c:	88c00115 	stw	r3,4(r17)
 800cf10:	00c006c4 	movi	r3,27
 800cf14:	19801d36 	bltu	r3,r6,800cf8c <_realloc_r+0x4dc>
 800cf18:	88800204 	addi	r2,r17,8
 800cf1c:	98c00204 	addi	r3,r19,8
 800cf20:	003fa306 	br	800cdb0 <__alt_data_end+0xfc00cdb0>
 800cf24:	8807883a 	mov	r3,r17
 800cf28:	003f7406 	br	800ccfc <__alt_data_end+0xfc00ccfc>
 800cf2c:	ad2b883a 	add	r21,r21,r20
 800cf30:	2505c83a 	sub	r2,r4,r20
 800cf34:	e5400215 	stw	r21,8(fp)
 800cf38:	10800054 	ori	r2,r2,1
 800cf3c:	a8800115 	stw	r2,4(r21)
 800cf40:	98bfff17 	ldw	r2,-4(r19)
 800cf44:	9009883a 	mov	r4,r18
 800cf48:	1080004c 	andi	r2,r2,1
 800cf4c:	a0a8b03a 	or	r20,r20,r2
 800cf50:	9d3fff15 	stw	r20,-4(r19)
 800cf54:	80142cc0 	call	80142cc <__malloc_unlock>
 800cf58:	9805883a 	mov	r2,r19
 800cf5c:	003f3b06 	br	800cc4c <__alt_data_end+0xfc00cc4c>
 800cf60:	8809883a 	mov	r4,r17
 800cf64:	980b883a 	mov	r5,r19
 800cf68:	800b90c0 	call	800b90c <memmove>
 800cf6c:	003f9606 	br	800cdc8 <__alt_data_end+0xfc00cdc8>
 800cf70:	8809883a 	mov	r4,r17
 800cf74:	980b883a 	mov	r5,r19
 800cf78:	800b90c0 	call	800b90c <memmove>
 800cf7c:	b8c00117 	ldw	r3,4(r23)
 800cf80:	b021883a 	mov	r16,r22
 800cf84:	b82b883a 	mov	r21,r23
 800cf88:	003f2306 	br	800cc18 <__alt_data_end+0xfc00cc18>
 800cf8c:	98c00217 	ldw	r3,8(r19)
 800cf90:	88c00215 	stw	r3,8(r17)
 800cf94:	98c00317 	ldw	r3,12(r19)
 800cf98:	88c00315 	stw	r3,12(r17)
 800cf9c:	30800c26 	beq	r6,r2,800cfd0 <_realloc_r+0x520>
 800cfa0:	88800404 	addi	r2,r17,16
 800cfa4:	98c00404 	addi	r3,r19,16
 800cfa8:	003f8106 	br	800cdb0 <__alt_data_end+0xfc00cdb0>
 800cfac:	893fff17 	ldw	r4,-4(r17)
 800cfb0:	00bfff04 	movi	r2,-4
 800cfb4:	9823883a 	mov	r17,r19
 800cfb8:	2084703a 	and	r2,r4,r2
 800cfbc:	80a1883a 	add	r16,r16,r2
 800cfc0:	003f1506 	br	800cc18 <__alt_data_end+0xfc00cc18>
 800cfc4:	b8c00404 	addi	r3,r23,16
 800cfc8:	9cc00204 	addi	r19,r19,8
 800cfcc:	003f4b06 	br	800ccfc <__alt_data_end+0xfc00ccfc>
 800cfd0:	99000417 	ldw	r4,16(r19)
 800cfd4:	88800604 	addi	r2,r17,24
 800cfd8:	98c00604 	addi	r3,r19,24
 800cfdc:	89000415 	stw	r4,16(r17)
 800cfe0:	99000517 	ldw	r4,20(r19)
 800cfe4:	89000515 	stw	r4,20(r17)
 800cfe8:	003f7106 	br	800cdb0 <__alt_data_end+0xfc00cdb0>
 800cfec:	8805883a 	mov	r2,r17
 800cff0:	003fb006 	br	800ceb4 <__alt_data_end+0xfc00ceb4>
 800cff4:	8809883a 	mov	r4,r17
 800cff8:	980b883a 	mov	r5,r19
 800cffc:	800b90c0 	call	800b90c <memmove>
 800d000:	003fb206 	br	800cecc <__alt_data_end+0xfc00cecc>
 800d004:	98800217 	ldw	r2,8(r19)
 800d008:	b8800415 	stw	r2,16(r23)
 800d00c:	98800317 	ldw	r2,12(r19)
 800d010:	b8800515 	stw	r2,20(r23)
 800d014:	31000726 	beq	r6,r4,800d034 <_realloc_r+0x584>
 800d018:	b8800604 	addi	r2,r23,24
 800d01c:	9cc00404 	addi	r19,r19,16
 800d020:	003fa406 	br	800ceb4 <__alt_data_end+0xfc00ceb4>
 800d024:	9009883a 	mov	r4,r18
 800d028:	80142cc0 	call	80142cc <__malloc_unlock>
 800d02c:	0005883a 	mov	r2,zero
 800d030:	003f0606 	br	800cc4c <__alt_data_end+0xfc00cc4c>
 800d034:	98c00417 	ldw	r3,16(r19)
 800d038:	9cc00604 	addi	r19,r19,24
 800d03c:	b8800804 	addi	r2,r23,32
 800d040:	b8c00615 	stw	r3,24(r23)
 800d044:	98ffff17 	ldw	r3,-4(r19)
 800d048:	b8c00715 	stw	r3,28(r23)
 800d04c:	003f9906 	br	800ceb4 <__alt_data_end+0xfc00ceb4>

0800d050 <__fpclassifyd>:
 800d050:	00a00034 	movhi	r2,32768
 800d054:	10bfffc4 	addi	r2,r2,-1
 800d058:	2884703a 	and	r2,r5,r2
 800d05c:	10000726 	beq	r2,zero,800d07c <__fpclassifyd+0x2c>
 800d060:	00fffc34 	movhi	r3,65520
 800d064:	019ff834 	movhi	r6,32736
 800d068:	28c7883a 	add	r3,r5,r3
 800d06c:	31bfffc4 	addi	r6,r6,-1
 800d070:	30c00536 	bltu	r6,r3,800d088 <__fpclassifyd+0x38>
 800d074:	00800104 	movi	r2,4
 800d078:	f800283a 	ret
 800d07c:	2000021e 	bne	r4,zero,800d088 <__fpclassifyd+0x38>
 800d080:	00800084 	movi	r2,2
 800d084:	f800283a 	ret
 800d088:	00dffc34 	movhi	r3,32752
 800d08c:	019ff834 	movhi	r6,32736
 800d090:	28cb883a 	add	r5,r5,r3
 800d094:	31bfffc4 	addi	r6,r6,-1
 800d098:	317ff62e 	bgeu	r6,r5,800d074 <__alt_data_end+0xfc00d074>
 800d09c:	01400434 	movhi	r5,16
 800d0a0:	297fffc4 	addi	r5,r5,-1
 800d0a4:	28800236 	bltu	r5,r2,800d0b0 <__fpclassifyd+0x60>
 800d0a8:	008000c4 	movi	r2,3
 800d0ac:	f800283a 	ret
 800d0b0:	10c00226 	beq	r2,r3,800d0bc <__fpclassifyd+0x6c>
 800d0b4:	0005883a 	mov	r2,zero
 800d0b8:	f800283a 	ret
 800d0bc:	2005003a 	cmpeq	r2,r4,zero
 800d0c0:	f800283a 	ret

0800d0c4 <__sread>:
 800d0c4:	defffe04 	addi	sp,sp,-8
 800d0c8:	dc000015 	stw	r16,0(sp)
 800d0cc:	2821883a 	mov	r16,r5
 800d0d0:	2940038f 	ldh	r5,14(r5)
 800d0d4:	dfc00115 	stw	ra,4(sp)
 800d0d8:	80100740 	call	8010074 <_read_r>
 800d0dc:	10000716 	blt	r2,zero,800d0fc <__sread+0x38>
 800d0e0:	80c01417 	ldw	r3,80(r16)
 800d0e4:	1887883a 	add	r3,r3,r2
 800d0e8:	80c01415 	stw	r3,80(r16)
 800d0ec:	dfc00117 	ldw	ra,4(sp)
 800d0f0:	dc000017 	ldw	r16,0(sp)
 800d0f4:	dec00204 	addi	sp,sp,8
 800d0f8:	f800283a 	ret
 800d0fc:	80c0030b 	ldhu	r3,12(r16)
 800d100:	18fbffcc 	andi	r3,r3,61439
 800d104:	80c0030d 	sth	r3,12(r16)
 800d108:	dfc00117 	ldw	ra,4(sp)
 800d10c:	dc000017 	ldw	r16,0(sp)
 800d110:	dec00204 	addi	sp,sp,8
 800d114:	f800283a 	ret

0800d118 <__seofread>:
 800d118:	0005883a 	mov	r2,zero
 800d11c:	f800283a 	ret

0800d120 <__swrite>:
 800d120:	2880030b 	ldhu	r2,12(r5)
 800d124:	defffb04 	addi	sp,sp,-20
 800d128:	dcc00315 	stw	r19,12(sp)
 800d12c:	dc800215 	stw	r18,8(sp)
 800d130:	dc400115 	stw	r17,4(sp)
 800d134:	dc000015 	stw	r16,0(sp)
 800d138:	dfc00415 	stw	ra,16(sp)
 800d13c:	10c0400c 	andi	r3,r2,256
 800d140:	2821883a 	mov	r16,r5
 800d144:	2027883a 	mov	r19,r4
 800d148:	3025883a 	mov	r18,r6
 800d14c:	3823883a 	mov	r17,r7
 800d150:	18000526 	beq	r3,zero,800d168 <__swrite+0x48>
 800d154:	2940038f 	ldh	r5,14(r5)
 800d158:	000d883a 	mov	r6,zero
 800d15c:	01c00084 	movi	r7,2
 800d160:	80100180 	call	8010018 <_lseek_r>
 800d164:	8080030b 	ldhu	r2,12(r16)
 800d168:	8140038f 	ldh	r5,14(r16)
 800d16c:	10bbffcc 	andi	r2,r2,61439
 800d170:	9809883a 	mov	r4,r19
 800d174:	900d883a 	mov	r6,r18
 800d178:	880f883a 	mov	r7,r17
 800d17c:	8080030d 	sth	r2,12(r16)
 800d180:	dfc00417 	ldw	ra,16(sp)
 800d184:	dcc00317 	ldw	r19,12(sp)
 800d188:	dc800217 	ldw	r18,8(sp)
 800d18c:	dc400117 	ldw	r17,4(sp)
 800d190:	dc000017 	ldw	r16,0(sp)
 800d194:	dec00504 	addi	sp,sp,20
 800d198:	800faf41 	jmpi	800faf4 <_write_r>

0800d19c <__sseek>:
 800d19c:	defffe04 	addi	sp,sp,-8
 800d1a0:	dc000015 	stw	r16,0(sp)
 800d1a4:	2821883a 	mov	r16,r5
 800d1a8:	2940038f 	ldh	r5,14(r5)
 800d1ac:	dfc00115 	stw	ra,4(sp)
 800d1b0:	80100180 	call	8010018 <_lseek_r>
 800d1b4:	00ffffc4 	movi	r3,-1
 800d1b8:	10c00826 	beq	r2,r3,800d1dc <__sseek+0x40>
 800d1bc:	80c0030b 	ldhu	r3,12(r16)
 800d1c0:	80801415 	stw	r2,80(r16)
 800d1c4:	18c40014 	ori	r3,r3,4096
 800d1c8:	80c0030d 	sth	r3,12(r16)
 800d1cc:	dfc00117 	ldw	ra,4(sp)
 800d1d0:	dc000017 	ldw	r16,0(sp)
 800d1d4:	dec00204 	addi	sp,sp,8
 800d1d8:	f800283a 	ret
 800d1dc:	80c0030b 	ldhu	r3,12(r16)
 800d1e0:	18fbffcc 	andi	r3,r3,61439
 800d1e4:	80c0030d 	sth	r3,12(r16)
 800d1e8:	dfc00117 	ldw	ra,4(sp)
 800d1ec:	dc000017 	ldw	r16,0(sp)
 800d1f0:	dec00204 	addi	sp,sp,8
 800d1f4:	f800283a 	ret

0800d1f8 <__sclose>:
 800d1f8:	2940038f 	ldh	r5,14(r5)
 800d1fc:	800fb501 	jmpi	800fb50 <_close_r>

0800d200 <__ssprint_r>:
 800d200:	30800217 	ldw	r2,8(r6)
 800d204:	defff604 	addi	sp,sp,-40
 800d208:	ddc00715 	stw	r23,28(sp)
 800d20c:	dcc00315 	stw	r19,12(sp)
 800d210:	dfc00915 	stw	ra,36(sp)
 800d214:	df000815 	stw	fp,32(sp)
 800d218:	dd800615 	stw	r22,24(sp)
 800d21c:	dd400515 	stw	r21,20(sp)
 800d220:	dd000415 	stw	r20,16(sp)
 800d224:	dc800215 	stw	r18,8(sp)
 800d228:	dc400115 	stw	r17,4(sp)
 800d22c:	dc000015 	stw	r16,0(sp)
 800d230:	3027883a 	mov	r19,r6
 800d234:	35c00017 	ldw	r23,0(r6)
 800d238:	10005526 	beq	r2,zero,800d390 <__ssprint_r+0x190>
 800d23c:	2029883a 	mov	r20,r4
 800d240:	29000017 	ldw	r4,0(r5)
 800d244:	2821883a 	mov	r16,r5
 800d248:	0039883a 	mov	fp,zero
 800d24c:	0023883a 	mov	r17,zero
 800d250:	88003926 	beq	r17,zero,800d338 <__ssprint_r+0x138>
 800d254:	84800217 	ldw	r18,8(r16)
 800d258:	902d883a 	mov	r22,r18
 800d25c:	8c803a36 	bltu	r17,r18,800d348 <__ssprint_r+0x148>
 800d260:	80c0030b 	ldhu	r3,12(r16)
 800d264:	1881200c 	andi	r2,r3,1152
 800d268:	10002626 	beq	r2,zero,800d304 <__ssprint_r+0x104>
 800d26c:	80800517 	ldw	r2,20(r16)
 800d270:	81400417 	ldw	r5,16(r16)
 800d274:	89c00044 	addi	r7,r17,1
 800d278:	108d883a 	add	r6,r2,r2
 800d27c:	3085883a 	add	r2,r6,r2
 800d280:	100cd7fa 	srli	r6,r2,31
 800d284:	216dc83a 	sub	r22,r4,r5
 800d288:	3d89883a 	add	r4,r7,r22
 800d28c:	3085883a 	add	r2,r6,r2
 800d290:	1025d07a 	srai	r18,r2,1
 800d294:	900d883a 	mov	r6,r18
 800d298:	9100022e 	bgeu	r18,r4,800d2a4 <__ssprint_r+0xa4>
 800d29c:	2025883a 	mov	r18,r4
 800d2a0:	200d883a 	mov	r6,r4
 800d2a4:	18c1000c 	andi	r3,r3,1024
 800d2a8:	a009883a 	mov	r4,r20
 800d2ac:	18002926 	beq	r3,zero,800d354 <__ssprint_r+0x154>
 800d2b0:	300b883a 	mov	r5,r6
 800d2b4:	80035180 	call	8003518 <_malloc_r>
 800d2b8:	102b883a 	mov	r21,r2
 800d2bc:	10002b26 	beq	r2,zero,800d36c <__ssprint_r+0x16c>
 800d2c0:	81400417 	ldw	r5,16(r16)
 800d2c4:	1009883a 	mov	r4,r2
 800d2c8:	b00d883a 	mov	r6,r22
 800d2cc:	800b7d40 	call	800b7d4 <memcpy>
 800d2d0:	8080030b 	ldhu	r2,12(r16)
 800d2d4:	00fedfc4 	movi	r3,-1153
 800d2d8:	10c4703a 	and	r2,r2,r3
 800d2dc:	10802014 	ori	r2,r2,128
 800d2e0:	8080030d 	sth	r2,12(r16)
 800d2e4:	ad89883a 	add	r4,r21,r22
 800d2e8:	95adc83a 	sub	r22,r18,r22
 800d2ec:	84800515 	stw	r18,20(r16)
 800d2f0:	85800215 	stw	r22,8(r16)
 800d2f4:	85400415 	stw	r21,16(r16)
 800d2f8:	81000015 	stw	r4,0(r16)
 800d2fc:	8825883a 	mov	r18,r17
 800d300:	882d883a 	mov	r22,r17
 800d304:	e00b883a 	mov	r5,fp
 800d308:	b00d883a 	mov	r6,r22
 800d30c:	800b90c0 	call	800b90c <memmove>
 800d310:	80c00217 	ldw	r3,8(r16)
 800d314:	81000017 	ldw	r4,0(r16)
 800d318:	98800217 	ldw	r2,8(r19)
 800d31c:	1ca5c83a 	sub	r18,r3,r18
 800d320:	2589883a 	add	r4,r4,r22
 800d324:	84800215 	stw	r18,8(r16)
 800d328:	81000015 	stw	r4,0(r16)
 800d32c:	1463c83a 	sub	r17,r2,r17
 800d330:	9c400215 	stw	r17,8(r19)
 800d334:	88001626 	beq	r17,zero,800d390 <__ssprint_r+0x190>
 800d338:	bf000017 	ldw	fp,0(r23)
 800d33c:	bc400117 	ldw	r17,4(r23)
 800d340:	bdc00204 	addi	r23,r23,8
 800d344:	003fc206 	br	800d250 <__alt_data_end+0xfc00d250>
 800d348:	8825883a 	mov	r18,r17
 800d34c:	882d883a 	mov	r22,r17
 800d350:	003fec06 	br	800d304 <__alt_data_end+0xfc00d304>
 800d354:	800cab00 	call	800cab0 <_realloc_r>
 800d358:	102b883a 	mov	r21,r2
 800d35c:	103fe11e 	bne	r2,zero,800d2e4 <__alt_data_end+0xfc00d2e4>
 800d360:	81400417 	ldw	r5,16(r16)
 800d364:	a009883a 	mov	r4,r20
 800d368:	800ab500 	call	800ab50 <_free_r>
 800d36c:	80c0030b 	ldhu	r3,12(r16)
 800d370:	00800304 	movi	r2,12
 800d374:	a0800015 	stw	r2,0(r20)
 800d378:	18c01014 	ori	r3,r3,64
 800d37c:	80c0030d 	sth	r3,12(r16)
 800d380:	00bfffc4 	movi	r2,-1
 800d384:	98000215 	stw	zero,8(r19)
 800d388:	98000115 	stw	zero,4(r19)
 800d38c:	00000206 	br	800d398 <__ssprint_r+0x198>
 800d390:	98000115 	stw	zero,4(r19)
 800d394:	0005883a 	mov	r2,zero
 800d398:	dfc00917 	ldw	ra,36(sp)
 800d39c:	df000817 	ldw	fp,32(sp)
 800d3a0:	ddc00717 	ldw	r23,28(sp)
 800d3a4:	dd800617 	ldw	r22,24(sp)
 800d3a8:	dd400517 	ldw	r21,20(sp)
 800d3ac:	dd000417 	ldw	r20,16(sp)
 800d3b0:	dcc00317 	ldw	r19,12(sp)
 800d3b4:	dc800217 	ldw	r18,8(sp)
 800d3b8:	dc400117 	ldw	r17,4(sp)
 800d3bc:	dc000017 	ldw	r16,0(sp)
 800d3c0:	dec00a04 	addi	sp,sp,40
 800d3c4:	f800283a 	ret

0800d3c8 <___svfiprintf_internal_r>:
 800d3c8:	2880030b 	ldhu	r2,12(r5)
 800d3cc:	deffc804 	addi	sp,sp,-224
 800d3d0:	dd403315 	stw	r21,204(sp)
 800d3d4:	dfc03715 	stw	ra,220(sp)
 800d3d8:	df003615 	stw	fp,216(sp)
 800d3dc:	ddc03515 	stw	r23,212(sp)
 800d3e0:	dd803415 	stw	r22,208(sp)
 800d3e4:	dd003215 	stw	r20,200(sp)
 800d3e8:	dcc03115 	stw	r19,196(sp)
 800d3ec:	dc803015 	stw	r18,192(sp)
 800d3f0:	dc402f15 	stw	r17,188(sp)
 800d3f4:	dc002e15 	stw	r16,184(sp)
 800d3f8:	d9402215 	stw	r5,136(sp)
 800d3fc:	d9002915 	stw	r4,164(sp)
 800d400:	1080200c 	andi	r2,r2,128
 800d404:	d9c02415 	stw	r7,144(sp)
 800d408:	302b883a 	mov	r21,r6
 800d40c:	10000226 	beq	r2,zero,800d418 <___svfiprintf_internal_r+0x50>
 800d410:	28800417 	ldw	r2,16(r5)
 800d414:	10042526 	beq	r2,zero,800e4ac <___svfiprintf_internal_r+0x10e4>
 800d418:	d8801a04 	addi	r2,sp,104
 800d41c:	d8c019c4 	addi	r3,sp,103
 800d420:	dc402917 	ldw	r17,164(sp)
 800d424:	04c20074 	movhi	r19,2049
 800d428:	10c9c83a 	sub	r4,r2,r3
 800d42c:	9cdec904 	addi	r19,r19,31524
 800d430:	d8801e15 	stw	r2,120(sp)
 800d434:	d8c01f15 	stw	r3,124(sp)
 800d438:	dec01a15 	stw	sp,104(sp)
 800d43c:	d8001c15 	stw	zero,112(sp)
 800d440:	d8001b15 	stw	zero,108(sp)
 800d444:	d8002a15 	stw	zero,168(sp)
 800d448:	d8002615 	stw	zero,152(sp)
 800d44c:	d811883a 	mov	r8,sp
 800d450:	d9002c15 	stw	r4,176(sp)
 800d454:	a8800007 	ldb	r2,0(r21)
 800d458:	1002af26 	beq	r2,zero,800df18 <___svfiprintf_internal_r+0xb50>
 800d45c:	01000944 	movi	r4,37
 800d460:	1102ad26 	beq	r2,r4,800df18 <___svfiprintf_internal_r+0xb50>
 800d464:	a805883a 	mov	r2,r21
 800d468:	00000106 	br	800d470 <___svfiprintf_internal_r+0xa8>
 800d46c:	19000326 	beq	r3,r4,800d47c <___svfiprintf_internal_r+0xb4>
 800d470:	10800044 	addi	r2,r2,1
 800d474:	10c00007 	ldb	r3,0(r2)
 800d478:	183ffc1e 	bne	r3,zero,800d46c <__alt_data_end+0xfc00d46c>
 800d47c:	1561c83a 	sub	r16,r2,r21
 800d480:	1025883a 	mov	r18,r2
 800d484:	80000e26 	beq	r16,zero,800d4c0 <___svfiprintf_internal_r+0xf8>
 800d488:	d8c01c17 	ldw	r3,112(sp)
 800d48c:	d8801b17 	ldw	r2,108(sp)
 800d490:	45400015 	stw	r21,0(r8)
 800d494:	1c07883a 	add	r3,r3,r16
 800d498:	10800044 	addi	r2,r2,1
 800d49c:	d8c01c15 	stw	r3,112(sp)
 800d4a0:	44000115 	stw	r16,4(r8)
 800d4a4:	d8801b15 	stw	r2,108(sp)
 800d4a8:	00c001c4 	movi	r3,7
 800d4ac:	18832616 	blt	r3,r2,800e148 <___svfiprintf_internal_r+0xd80>
 800d4b0:	42000204 	addi	r8,r8,8
 800d4b4:	d9402617 	ldw	r5,152(sp)
 800d4b8:	2c0b883a 	add	r5,r5,r16
 800d4bc:	d9402615 	stw	r5,152(sp)
 800d4c0:	90800007 	ldb	r2,0(r18)
 800d4c4:	1002b226 	beq	r2,zero,800df90 <___svfiprintf_internal_r+0xbc8>
 800d4c8:	00bfffc4 	movi	r2,-1
 800d4cc:	95400044 	addi	r21,r18,1
 800d4d0:	91800047 	ldb	r6,1(r18)
 800d4d4:	d8001d85 	stb	zero,118(sp)
 800d4d8:	002d883a 	mov	r22,zero
 800d4dc:	d8802015 	stw	r2,128(sp)
 800d4e0:	d8002315 	stw	zero,140(sp)
 800d4e4:	0021883a 	mov	r16,zero
 800d4e8:	04801604 	movi	r18,88
 800d4ec:	05000244 	movi	r20,9
 800d4f0:	402f883a 	mov	r23,r8
 800d4f4:	ad400044 	addi	r21,r21,1
 800d4f8:	30bff804 	addi	r2,r6,-32
 800d4fc:	9081ae36 	bltu	r18,r2,800dbb8 <___svfiprintf_internal_r+0x7f0>
 800d500:	100490ba 	slli	r2,r2,2
 800d504:	00c20074 	movhi	r3,2049
 800d508:	18f54604 	addi	r3,r3,-10984
 800d50c:	10c5883a 	add	r2,r2,r3
 800d510:	10800017 	ldw	r2,0(r2)
 800d514:	1000683a 	jmp	r2
 800d518:	0800d6c8 	cmpgei	zero,at,859
 800d51c:	0800dbb8 	rdprs	zero,at,878
 800d520:	0800dbb8 	rdprs	zero,at,878
 800d524:	0800d6bc 	xorhi	zero,at,858
 800d528:	0800dbb8 	rdprs	zero,at,878
 800d52c:	0800dbb8 	rdprs	zero,at,878
 800d530:	0800dbb8 	rdprs	zero,at,878
 800d534:	0800dbb8 	rdprs	zero,at,878
 800d538:	0800dbb8 	rdprs	zero,at,878
 800d53c:	0800dbb8 	rdprs	zero,at,878
 800d540:	0800d67c 	xorhi	zero,at,857
 800d544:	0800d6b0 	cmpltui	zero,at,858
 800d548:	0800dbb8 	rdprs	zero,at,878
 800d54c:	0800d6a4 	muli	zero,at,858
 800d550:	0800dbec 	andhi	zero,at,879
 800d554:	0800dbb8 	rdprs	zero,at,878
 800d558:	0800dbe0 	cmpeqi	zero,at,879
 800d55c:	0800db74 	orhi	zero,at,877
 800d560:	0800db74 	orhi	zero,at,877
 800d564:	0800db74 	orhi	zero,at,877
 800d568:	0800db74 	orhi	zero,at,877
 800d56c:	0800db74 	orhi	zero,at,877
 800d570:	0800db74 	orhi	zero,at,877
 800d574:	0800db74 	orhi	zero,at,877
 800d578:	0800db74 	orhi	zero,at,877
 800d57c:	0800db74 	orhi	zero,at,877
 800d580:	0800dbb8 	rdprs	zero,at,878
 800d584:	0800dbb8 	rdprs	zero,at,878
 800d588:	0800dbb8 	rdprs	zero,at,878
 800d58c:	0800dbb8 	rdprs	zero,at,878
 800d590:	0800dbb8 	rdprs	zero,at,878
 800d594:	0800dbb8 	rdprs	zero,at,878
 800d598:	0800dbb8 	rdprs	zero,at,878
 800d59c:	0800dbb8 	rdprs	zero,at,878
 800d5a0:	0800dbb8 	rdprs	zero,at,878
 800d5a4:	0800dbb8 	rdprs	zero,at,878
 800d5a8:	0800db08 	cmpgei	zero,at,876
 800d5ac:	0800dbb8 	rdprs	zero,at,878
 800d5b0:	0800dbb8 	rdprs	zero,at,878
 800d5b4:	0800dbb8 	rdprs	zero,at,878
 800d5b8:	0800dbb8 	rdprs	zero,at,878
 800d5bc:	0800dbb8 	rdprs	zero,at,878
 800d5c0:	0800dbb8 	rdprs	zero,at,878
 800d5c4:	0800dbb8 	rdprs	zero,at,878
 800d5c8:	0800dbb8 	rdprs	zero,at,878
 800d5cc:	0800dbb8 	rdprs	zero,at,878
 800d5d0:	0800dbb8 	rdprs	zero,at,878
 800d5d4:	0800dc78 	rdprs	zero,at,881
 800d5d8:	0800dbb8 	rdprs	zero,at,878
 800d5dc:	0800dbb8 	rdprs	zero,at,878
 800d5e0:	0800dbb8 	rdprs	zero,at,878
 800d5e4:	0800dbb8 	rdprs	zero,at,878
 800d5e8:	0800dbb8 	rdprs	zero,at,878
 800d5ec:	0800dc34 	orhi	zero,at,880
 800d5f0:	0800dbb8 	rdprs	zero,at,878
 800d5f4:	0800dbb8 	rdprs	zero,at,878
 800d5f8:	0800dac0 	call	800dac <__reset-0x77ff254>
 800d5fc:	0800dbb8 	rdprs	zero,at,878
 800d600:	0800dbb8 	rdprs	zero,at,878
 800d604:	0800dbb8 	rdprs	zero,at,878
 800d608:	0800dbb8 	rdprs	zero,at,878
 800d60c:	0800dbb8 	rdprs	zero,at,878
 800d610:	0800dbb8 	rdprs	zero,at,878
 800d614:	0800dbb8 	rdprs	zero,at,878
 800d618:	0800dbb8 	rdprs	zero,at,878
 800d61c:	0800dbb8 	rdprs	zero,at,878
 800d620:	0800dbb8 	rdprs	zero,at,878
 800d624:	0800d988 	cmpgei	zero,at,870
 800d628:	0800d92c 	andhi	zero,at,868
 800d62c:	0800dbb8 	rdprs	zero,at,878
 800d630:	0800dbb8 	rdprs	zero,at,878
 800d634:	0800dbb8 	rdprs	zero,at,878
 800d638:	0800d920 	cmpeqi	zero,at,868
 800d63c:	0800d92c 	andhi	zero,at,868
 800d640:	0800dbb8 	rdprs	zero,at,878
 800d644:	0800dbb8 	rdprs	zero,at,878
 800d648:	0800d970 	cmpltui	zero,at,869
 800d64c:	0800dbb8 	rdprs	zero,at,878
 800d650:	0800d8ec 	andhi	zero,at,867
 800d654:	0800d8bc 	xorhi	zero,at,866
 800d658:	0800d874 	orhi	zero,at,865
 800d65c:	0800d868 	cmpgeui	zero,at,865
 800d660:	0800dbb8 	rdprs	zero,at,878
 800d664:	0800d800 	call	800d80 <__reset-0x77ff280>
 800d668:	0800dbb8 	rdprs	zero,at,878
 800d66c:	0800d730 	cmpltui	zero,at,860
 800d670:	0800dbb8 	rdprs	zero,at,878
 800d674:	0800dbb8 	rdprs	zero,at,878
 800d678:	0800d6e4 	muli	zero,at,859
 800d67c:	d9402417 	ldw	r5,144(sp)
 800d680:	d8c02417 	ldw	r3,144(sp)
 800d684:	29400017 	ldw	r5,0(r5)
 800d688:	18800104 	addi	r2,r3,4
 800d68c:	d9402315 	stw	r5,140(sp)
 800d690:	2802f70e 	bge	r5,zero,800e270 <___svfiprintf_internal_r+0xea8>
 800d694:	d9002317 	ldw	r4,140(sp)
 800d698:	d8802415 	stw	r2,144(sp)
 800d69c:	0109c83a 	sub	r4,zero,r4
 800d6a0:	d9002315 	stw	r4,140(sp)
 800d6a4:	84000114 	ori	r16,r16,4
 800d6a8:	a9800007 	ldb	r6,0(r21)
 800d6ac:	003f9106 	br	800d4f4 <__alt_data_end+0xfc00d4f4>
 800d6b0:	05800ac4 	movi	r22,43
 800d6b4:	a9800007 	ldb	r6,0(r21)
 800d6b8:	003f8e06 	br	800d4f4 <__alt_data_end+0xfc00d4f4>
 800d6bc:	84000054 	ori	r16,r16,1
 800d6c0:	a9800007 	ldb	r6,0(r21)
 800d6c4:	003f8b06 	br	800d4f4 <__alt_data_end+0xfc00d4f4>
 800d6c8:	b0803fcc 	andi	r2,r22,255
 800d6cc:	1080201c 	xori	r2,r2,128
 800d6d0:	10bfe004 	addi	r2,r2,-128
 800d6d4:	1003221e 	bne	r2,zero,800e360 <___svfiprintf_internal_r+0xf98>
 800d6d8:	05800804 	movi	r22,32
 800d6dc:	a9800007 	ldb	r6,0(r21)
 800d6e0:	003f8406 	br	800d4f4 <__alt_data_end+0xfc00d4f4>
 800d6e4:	01420074 	movhi	r5,2049
 800d6e8:	295e6104 	addi	r5,r5,31108
 800d6ec:	d9402a15 	stw	r5,168(sp)
 800d6f0:	dd801d85 	stb	r22,118(sp)
 800d6f4:	80c0080c 	andi	r3,r16,32
 800d6f8:	b811883a 	mov	r8,r23
 800d6fc:	d8802417 	ldw	r2,144(sp)
 800d700:	1800f726 	beq	r3,zero,800dae0 <___svfiprintf_internal_r+0x718>
 800d704:	d8c02417 	ldw	r3,144(sp)
 800d708:	14800017 	ldw	r18,0(r2)
 800d70c:	15800117 	ldw	r22,4(r2)
 800d710:	18c00204 	addi	r3,r3,8
 800d714:	d8c02415 	stw	r3,144(sp)
 800d718:	8080004c 	andi	r2,r16,1
 800d71c:	1002bd26 	beq	r2,zero,800e214 <___svfiprintf_internal_r+0xe4c>
 800d720:	9586b03a 	or	r3,r18,r22
 800d724:	1803081e 	bne	r3,zero,800e348 <___svfiprintf_internal_r+0xf80>
 800d728:	00800084 	movi	r2,2
 800d72c:	00000b06 	br	800d75c <___svfiprintf_internal_r+0x394>
 800d730:	80c0080c 	andi	r3,r16,32
 800d734:	b811883a 	mov	r8,r23
 800d738:	d8802417 	ldw	r2,144(sp)
 800d73c:	18014226 	beq	r3,zero,800dc48 <___svfiprintf_internal_r+0x880>
 800d740:	d9402417 	ldw	r5,144(sp)
 800d744:	14800017 	ldw	r18,0(r2)
 800d748:	15800117 	ldw	r22,4(r2)
 800d74c:	29400204 	addi	r5,r5,8
 800d750:	d9402415 	stw	r5,144(sp)
 800d754:	00800044 	movi	r2,1
 800d758:	9586b03a 	or	r3,r18,r22
 800d75c:	dd002017 	ldw	r20,128(sp)
 800d760:	d8001d85 	stb	zero,118(sp)
 800d764:	002f883a 	mov	r23,zero
 800d768:	d9002017 	ldw	r4,128(sp)
 800d76c:	20000216 	blt	r4,zero,800d778 <___svfiprintf_internal_r+0x3b0>
 800d770:	013fdfc4 	movi	r4,-129
 800d774:	8120703a 	and	r16,r16,r4
 800d778:	1801e91e 	bne	r3,zero,800df20 <___svfiprintf_internal_r+0xb58>
 800d77c:	d9402017 	ldw	r5,128(sp)
 800d780:	28025f26 	beq	r5,zero,800e100 <___svfiprintf_internal_r+0xd38>
 800d784:	10803fcc 	andi	r2,r2,255
 800d788:	00c00044 	movi	r3,1
 800d78c:	10c2b226 	beq	r2,r3,800e258 <___svfiprintf_internal_r+0xe90>
 800d790:	00c00084 	movi	r3,2
 800d794:	10c27c26 	beq	r2,r3,800e188 <___svfiprintf_internal_r+0xdc0>
 800d798:	d8c01a04 	addi	r3,sp,104
 800d79c:	9008d0fa 	srli	r4,r18,3
 800d7a0:	b00a977a 	slli	r5,r22,29
 800d7a4:	b02cd0fa 	srli	r22,r22,3
 800d7a8:	948001cc 	andi	r18,r18,7
 800d7ac:	90800c04 	addi	r2,r18,48
 800d7b0:	18ffffc4 	addi	r3,r3,-1
 800d7b4:	2924b03a 	or	r18,r5,r4
 800d7b8:	18800005 	stb	r2,0(r3)
 800d7bc:	9588b03a 	or	r4,r18,r22
 800d7c0:	203ff61e 	bne	r4,zero,800d79c <__alt_data_end+0xfc00d79c>
 800d7c4:	8100004c 	andi	r4,r16,1
 800d7c8:	d8c02715 	stw	r3,156(sp)
 800d7cc:	20029d26 	beq	r4,zero,800e244 <___svfiprintf_internal_r+0xe7c>
 800d7d0:	10803fcc 	andi	r2,r2,255
 800d7d4:	1080201c 	xori	r2,r2,128
 800d7d8:	10bfe004 	addi	r2,r2,-128
 800d7dc:	01000c04 	movi	r4,48
 800d7e0:	11031826 	beq	r2,r4,800e444 <___svfiprintf_internal_r+0x107c>
 800d7e4:	d9402717 	ldw	r5,156(sp)
 800d7e8:	d8801e17 	ldw	r2,120(sp)
 800d7ec:	193fffc5 	stb	r4,-1(r3)
 800d7f0:	297fffc4 	addi	r5,r5,-1
 800d7f4:	d9402715 	stw	r5,156(sp)
 800d7f8:	1169c83a 	sub	r20,r2,r5
 800d7fc:	00024606 	br	800e118 <___svfiprintf_internal_r+0xd50>
 800d800:	d9402417 	ldw	r5,144(sp)
 800d804:	d8802417 	ldw	r2,144(sp)
 800d808:	d8001d85 	stb	zero,118(sp)
 800d80c:	29400017 	ldw	r5,0(r5)
 800d810:	b811883a 	mov	r8,r23
 800d814:	15800104 	addi	r22,r2,4
 800d818:	d9402715 	stw	r5,156(sp)
 800d81c:	28031826 	beq	r5,zero,800e480 <___svfiprintf_internal_r+0x10b8>
 800d820:	d9002017 	ldw	r4,128(sp)
 800d824:	20030b16 	blt	r4,zero,800e454 <___svfiprintf_internal_r+0x108c>
 800d828:	d9002717 	ldw	r4,156(sp)
 800d82c:	d9802017 	ldw	r6,128(sp)
 800d830:	000b883a 	mov	r5,zero
 800d834:	ddc02d15 	stw	r23,180(sp)
 800d838:	800b6ec0 	call	800b6ec <memchr>
 800d83c:	da002d17 	ldw	r8,180(sp)
 800d840:	10033926 	beq	r2,zero,800e528 <___svfiprintf_internal_r+0x1160>
 800d844:	d8c02717 	ldw	r3,156(sp)
 800d848:	d9002017 	ldw	r4,128(sp)
 800d84c:	10e9c83a 	sub	r20,r2,r3
 800d850:	2500010e 	bge	r4,r20,800d858 <___svfiprintf_internal_r+0x490>
 800d854:	2029883a 	mov	r20,r4
 800d858:	ddc01d83 	ldbu	r23,118(sp)
 800d85c:	dd802415 	stw	r22,144(sp)
 800d860:	d8002015 	stw	zero,128(sp)
 800d864:	00022c06 	br	800e118 <___svfiprintf_internal_r+0xd50>
 800d868:	84000814 	ori	r16,r16,32
 800d86c:	a9800007 	ldb	r6,0(r21)
 800d870:	003f2006 	br	800d4f4 <__alt_data_end+0xfc00d4f4>
 800d874:	d8802417 	ldw	r2,144(sp)
 800d878:	d8c02417 	ldw	r3,144(sp)
 800d87c:	01020074 	movhi	r4,2049
 800d880:	14800017 	ldw	r18,0(r2)
 800d884:	00800c04 	movi	r2,48
 800d888:	18c00104 	addi	r3,r3,4
 800d88c:	d8801d05 	stb	r2,116(sp)
 800d890:	211e6104 	addi	r4,r4,31108
 800d894:	00801e04 	movi	r2,120
 800d898:	d8801d45 	stb	r2,117(sp)
 800d89c:	d8c02415 	stw	r3,144(sp)
 800d8a0:	b811883a 	mov	r8,r23
 800d8a4:	002d883a 	mov	r22,zero
 800d8a8:	84000094 	ori	r16,r16,2
 800d8ac:	d9002a15 	stw	r4,168(sp)
 800d8b0:	00800084 	movi	r2,2
 800d8b4:	9007883a 	mov	r3,r18
 800d8b8:	003fa806 	br	800d75c <__alt_data_end+0xfc00d75c>
 800d8bc:	80c0080c 	andi	r3,r16,32
 800d8c0:	b811883a 	mov	r8,r23
 800d8c4:	d8802417 	ldw	r2,144(sp)
 800d8c8:	1800f026 	beq	r3,zero,800dc8c <___svfiprintf_internal_r+0x8c4>
 800d8cc:	14800017 	ldw	r18,0(r2)
 800d8d0:	15800117 	ldw	r22,4(r2)
 800d8d4:	d8802417 	ldw	r2,144(sp)
 800d8d8:	9586b03a 	or	r3,r18,r22
 800d8dc:	10800204 	addi	r2,r2,8
 800d8e0:	d8802415 	stw	r2,144(sp)
 800d8e4:	0005883a 	mov	r2,zero
 800d8e8:	003f9c06 	br	800d75c <__alt_data_end+0xfc00d75c>
 800d8ec:	dd801d85 	stb	r22,118(sp)
 800d8f0:	8080080c 	andi	r2,r16,32
 800d8f4:	b811883a 	mov	r8,r23
 800d8f8:	10028a1e 	bne	r2,zero,800e324 <___svfiprintf_internal_r+0xf5c>
 800d8fc:	8080040c 	andi	r2,r16,16
 800d900:	1002c726 	beq	r2,zero,800e420 <___svfiprintf_internal_r+0x1058>
 800d904:	d8c02417 	ldw	r3,144(sp)
 800d908:	d9002617 	ldw	r4,152(sp)
 800d90c:	18800017 	ldw	r2,0(r3)
 800d910:	18c00104 	addi	r3,r3,4
 800d914:	d8c02415 	stw	r3,144(sp)
 800d918:	11000015 	stw	r4,0(r2)
 800d91c:	003ecd06 	br	800d454 <__alt_data_end+0xfc00d454>
 800d920:	84001014 	ori	r16,r16,64
 800d924:	a9800007 	ldb	r6,0(r21)
 800d928:	003ef206 	br	800d4f4 <__alt_data_end+0xfc00d4f4>
 800d92c:	dd801d85 	stb	r22,118(sp)
 800d930:	8080080c 	andi	r2,r16,32
 800d934:	b811883a 	mov	r8,r23
 800d938:	d8c02417 	ldw	r3,144(sp)
 800d93c:	10007826 	beq	r2,zero,800db20 <___svfiprintf_internal_r+0x758>
 800d940:	d9002417 	ldw	r4,144(sp)
 800d944:	18800117 	ldw	r2,4(r3)
 800d948:	1c800017 	ldw	r18,0(r3)
 800d94c:	21000204 	addi	r4,r4,8
 800d950:	d9002415 	stw	r4,144(sp)
 800d954:	102d883a 	mov	r22,r2
 800d958:	10007c16 	blt	r2,zero,800db4c <___svfiprintf_internal_r+0x784>
 800d95c:	ddc01d83 	ldbu	r23,118(sp)
 800d960:	dd002017 	ldw	r20,128(sp)
 800d964:	00800044 	movi	r2,1
 800d968:	9586b03a 	or	r3,r18,r22
 800d96c:	003f7e06 	br	800d768 <__alt_data_end+0xfc00d768>
 800d970:	a9800007 	ldb	r6,0(r21)
 800d974:	01001b04 	movi	r4,108
 800d978:	a805883a 	mov	r2,r21
 800d97c:	31027a26 	beq	r6,r4,800e368 <___svfiprintf_internal_r+0xfa0>
 800d980:	84000414 	ori	r16,r16,16
 800d984:	003edb06 	br	800d4f4 <__alt_data_end+0xfc00d4f4>
 800d988:	d9402417 	ldw	r5,144(sp)
 800d98c:	04800044 	movi	r18,1
 800d990:	d8c01004 	addi	r3,sp,64
 800d994:	28800017 	ldw	r2,0(r5)
 800d998:	29400104 	addi	r5,r5,4
 800d99c:	b811883a 	mov	r8,r23
 800d9a0:	d8001d85 	stb	zero,118(sp)
 800d9a4:	d8801005 	stb	r2,64(sp)
 800d9a8:	d9402415 	stw	r5,144(sp)
 800d9ac:	9029883a 	mov	r20,r18
 800d9b0:	d8c02715 	stw	r3,156(sp)
 800d9b4:	d8002015 	stw	zero,128(sp)
 800d9b8:	80c0008c 	andi	r3,r16,2
 800d9bc:	d8c02115 	stw	r3,132(sp)
 800d9c0:	18000126 	beq	r3,zero,800d9c8 <___svfiprintf_internal_r+0x600>
 800d9c4:	94800084 	addi	r18,r18,2
 800d9c8:	80c0210c 	andi	r3,r16,132
 800d9cc:	d8c02515 	stw	r3,148(sp)
 800d9d0:	1800ba1e 	bne	r3,zero,800dcbc <___svfiprintf_internal_r+0x8f4>
 800d9d4:	d9002317 	ldw	r4,140(sp)
 800d9d8:	24b9c83a 	sub	fp,r4,r18
 800d9dc:	0700b70e 	bge	zero,fp,800dcbc <___svfiprintf_internal_r+0x8f4>
 800d9e0:	02400404 	movi	r9,16
 800d9e4:	d8c01c17 	ldw	r3,112(sp)
 800d9e8:	d8801b17 	ldw	r2,108(sp)
 800d9ec:	4f02c00e 	bge	r9,fp,800e4f0 <___svfiprintf_internal_r+0x1128>
 800d9f0:	01020074 	movhi	r4,2049
 800d9f4:	211ecd04 	addi	r4,r4,31540
 800d9f8:	d9002815 	stw	r4,160(sp)
 800d9fc:	a809883a 	mov	r4,r21
 800da00:	dc002b15 	stw	r16,172(sp)
 800da04:	a02b883a 	mov	r21,r20
 800da08:	482f883a 	mov	r23,r9
 800da0c:	9029883a 	mov	r20,r18
 800da10:	058001c4 	movi	r22,7
 800da14:	e025883a 	mov	r18,fp
 800da18:	dc002217 	ldw	r16,136(sp)
 800da1c:	2039883a 	mov	fp,r4
 800da20:	00000306 	br	800da30 <___svfiprintf_internal_r+0x668>
 800da24:	94bffc04 	addi	r18,r18,-16
 800da28:	42000204 	addi	r8,r8,8
 800da2c:	bc80130e 	bge	r23,r18,800da7c <___svfiprintf_internal_r+0x6b4>
 800da30:	01420074 	movhi	r5,2049
 800da34:	18c00404 	addi	r3,r3,16
 800da38:	10800044 	addi	r2,r2,1
 800da3c:	295ecd04 	addi	r5,r5,31540
 800da40:	41400015 	stw	r5,0(r8)
 800da44:	45c00115 	stw	r23,4(r8)
 800da48:	d8c01c15 	stw	r3,112(sp)
 800da4c:	d8801b15 	stw	r2,108(sp)
 800da50:	b0bff40e 	bge	r22,r2,800da24 <__alt_data_end+0xfc00da24>
 800da54:	8809883a 	mov	r4,r17
 800da58:	800b883a 	mov	r5,r16
 800da5c:	d9801a04 	addi	r6,sp,104
 800da60:	800d2000 	call	800d200 <__ssprint_r>
 800da64:	1001501e 	bne	r2,zero,800dfa8 <___svfiprintf_internal_r+0xbe0>
 800da68:	94bffc04 	addi	r18,r18,-16
 800da6c:	d8c01c17 	ldw	r3,112(sp)
 800da70:	d8801b17 	ldw	r2,108(sp)
 800da74:	d811883a 	mov	r8,sp
 800da78:	bcbfed16 	blt	r23,r18,800da30 <__alt_data_end+0xfc00da30>
 800da7c:	dc002b17 	ldw	r16,172(sp)
 800da80:	e009883a 	mov	r4,fp
 800da84:	9039883a 	mov	fp,r18
 800da88:	a025883a 	mov	r18,r20
 800da8c:	a829883a 	mov	r20,r21
 800da90:	202b883a 	mov	r21,r4
 800da94:	d9002817 	ldw	r4,160(sp)
 800da98:	e0c7883a 	add	r3,fp,r3
 800da9c:	10800044 	addi	r2,r2,1
 800daa0:	41000015 	stw	r4,0(r8)
 800daa4:	47000115 	stw	fp,4(r8)
 800daa8:	d8c01c15 	stw	r3,112(sp)
 800daac:	d8801b15 	stw	r2,108(sp)
 800dab0:	010001c4 	movi	r4,7
 800dab4:	2081da16 	blt	r4,r2,800e220 <___svfiprintf_internal_r+0xe58>
 800dab8:	42000204 	addi	r8,r8,8
 800dabc:	00008106 	br	800dcc4 <___svfiprintf_internal_r+0x8fc>
 800dac0:	01020074 	movhi	r4,2049
 800dac4:	211e5c04 	addi	r4,r4,31088
 800dac8:	dd801d85 	stb	r22,118(sp)
 800dacc:	d9002a15 	stw	r4,168(sp)
 800dad0:	80c0080c 	andi	r3,r16,32
 800dad4:	b811883a 	mov	r8,r23
 800dad8:	d8802417 	ldw	r2,144(sp)
 800dadc:	183f091e 	bne	r3,zero,800d704 <__alt_data_end+0xfc00d704>
 800dae0:	80c0040c 	andi	r3,r16,16
 800dae4:	1801f21e 	bne	r3,zero,800e2b0 <___svfiprintf_internal_r+0xee8>
 800dae8:	80c0100c 	andi	r3,r16,64
 800daec:	18024626 	beq	r3,zero,800e408 <___svfiprintf_internal_r+0x1040>
 800daf0:	d9402417 	ldw	r5,144(sp)
 800daf4:	1480000b 	ldhu	r18,0(r2)
 800daf8:	002d883a 	mov	r22,zero
 800dafc:	29400104 	addi	r5,r5,4
 800db00:	d9402415 	stw	r5,144(sp)
 800db04:	003f0406 	br	800d718 <__alt_data_end+0xfc00d718>
 800db08:	84000414 	ori	r16,r16,16
 800db0c:	dd801d85 	stb	r22,118(sp)
 800db10:	8080080c 	andi	r2,r16,32
 800db14:	b811883a 	mov	r8,r23
 800db18:	d8c02417 	ldw	r3,144(sp)
 800db1c:	103f881e 	bne	r2,zero,800d940 <__alt_data_end+0xfc00d940>
 800db20:	8080040c 	andi	r2,r16,16
 800db24:	1001f81e 	bne	r2,zero,800e308 <___svfiprintf_internal_r+0xf40>
 800db28:	8080100c 	andi	r2,r16,64
 800db2c:	10021f26 	beq	r2,zero,800e3ac <___svfiprintf_internal_r+0xfe4>
 800db30:	1c80000f 	ldh	r18,0(r3)
 800db34:	d8802417 	ldw	r2,144(sp)
 800db38:	902dd7fa 	srai	r22,r18,31
 800db3c:	10800104 	addi	r2,r2,4
 800db40:	d8802415 	stw	r2,144(sp)
 800db44:	b005883a 	mov	r2,r22
 800db48:	103f840e 	bge	r2,zero,800d95c <__alt_data_end+0xfc00d95c>
 800db4c:	04a5c83a 	sub	r18,zero,r18
 800db50:	9004c03a 	cmpne	r2,r18,zero
 800db54:	05adc83a 	sub	r22,zero,r22
 800db58:	b0adc83a 	sub	r22,r22,r2
 800db5c:	05c00b44 	movi	r23,45
 800db60:	ddc01d85 	stb	r23,118(sp)
 800db64:	dd002017 	ldw	r20,128(sp)
 800db68:	00800044 	movi	r2,1
 800db6c:	9586b03a 	or	r3,r18,r22
 800db70:	003efd06 	br	800d768 <__alt_data_end+0xfc00d768>
 800db74:	dc002115 	stw	r16,132(sp)
 800db78:	d8002315 	stw	zero,140(sp)
 800db7c:	373ff404 	addi	fp,r6,-48
 800db80:	0009883a 	mov	r4,zero
 800db84:	a821883a 	mov	r16,r21
 800db88:	01400284 	movi	r5,10
 800db8c:	8002f580 	call	8002f58 <__mulsi3>
 800db90:	81800007 	ldb	r6,0(r16)
 800db94:	1709883a 	add	r4,r2,fp
 800db98:	ad400044 	addi	r21,r21,1
 800db9c:	373ff404 	addi	fp,r6,-48
 800dba0:	a821883a 	mov	r16,r21
 800dba4:	a73ff82e 	bgeu	r20,fp,800db88 <__alt_data_end+0xfc00db88>
 800dba8:	d9002315 	stw	r4,140(sp)
 800dbac:	30bff804 	addi	r2,r6,-32
 800dbb0:	dc002117 	ldw	r16,132(sp)
 800dbb4:	90be522e 	bgeu	r18,r2,800d500 <__alt_data_end+0xfc00d500>
 800dbb8:	dd801d85 	stb	r22,118(sp)
 800dbbc:	b811883a 	mov	r8,r23
 800dbc0:	3000f326 	beq	r6,zero,800df90 <___svfiprintf_internal_r+0xbc8>
 800dbc4:	04800044 	movi	r18,1
 800dbc8:	d8c01004 	addi	r3,sp,64
 800dbcc:	d9801005 	stb	r6,64(sp)
 800dbd0:	d8001d85 	stb	zero,118(sp)
 800dbd4:	9029883a 	mov	r20,r18
 800dbd8:	d8c02715 	stw	r3,156(sp)
 800dbdc:	003f7506 	br	800d9b4 <__alt_data_end+0xfc00d9b4>
 800dbe0:	84002014 	ori	r16,r16,128
 800dbe4:	a9800007 	ldb	r6,0(r21)
 800dbe8:	003e4206 	br	800d4f4 <__alt_data_end+0xfc00d4f4>
 800dbec:	a9800007 	ldb	r6,0(r21)
 800dbf0:	01400a84 	movi	r5,42
 800dbf4:	a8800044 	addi	r2,r21,1
 800dbf8:	31425226 	beq	r6,r5,800e544 <___svfiprintf_internal_r+0x117c>
 800dbfc:	373ff404 	addi	fp,r6,-48
 800dc00:	102b883a 	mov	r21,r2
 800dc04:	0009883a 	mov	r4,zero
 800dc08:	a7024536 	bltu	r20,fp,800e520 <___svfiprintf_internal_r+0x1158>
 800dc0c:	01400284 	movi	r5,10
 800dc10:	8002f580 	call	8002f58 <__mulsi3>
 800dc14:	a9800007 	ldb	r6,0(r21)
 800dc18:	e089883a 	add	r4,fp,r2
 800dc1c:	ad400044 	addi	r21,r21,1
 800dc20:	373ff404 	addi	fp,r6,-48
 800dc24:	a73ff92e 	bgeu	r20,fp,800dc0c <__alt_data_end+0xfc00dc0c>
 800dc28:	20021316 	blt	r4,zero,800e478 <___svfiprintf_internal_r+0x10b0>
 800dc2c:	d9002015 	stw	r4,128(sp)
 800dc30:	003e3106 	br	800d4f8 <__alt_data_end+0xfc00d4f8>
 800dc34:	84000414 	ori	r16,r16,16
 800dc38:	80c0080c 	andi	r3,r16,32
 800dc3c:	b811883a 	mov	r8,r23
 800dc40:	d8802417 	ldw	r2,144(sp)
 800dc44:	183ebe1e 	bne	r3,zero,800d740 <__alt_data_end+0xfc00d740>
 800dc48:	80c0040c 	andi	r3,r16,16
 800dc4c:	18019e1e 	bne	r3,zero,800e2c8 <___svfiprintf_internal_r+0xf00>
 800dc50:	80c0100c 	andi	r3,r16,64
 800dc54:	1801dc26 	beq	r3,zero,800e3c8 <___svfiprintf_internal_r+0x1000>
 800dc58:	d8c02417 	ldw	r3,144(sp)
 800dc5c:	1480000b 	ldhu	r18,0(r2)
 800dc60:	002d883a 	mov	r22,zero
 800dc64:	18c00104 	addi	r3,r3,4
 800dc68:	d8c02415 	stw	r3,144(sp)
 800dc6c:	00800044 	movi	r2,1
 800dc70:	9007883a 	mov	r3,r18
 800dc74:	003eb906 	br	800d75c <__alt_data_end+0xfc00d75c>
 800dc78:	84000414 	ori	r16,r16,16
 800dc7c:	80c0080c 	andi	r3,r16,32
 800dc80:	b811883a 	mov	r8,r23
 800dc84:	d8802417 	ldw	r2,144(sp)
 800dc88:	183f101e 	bne	r3,zero,800d8cc <__alt_data_end+0xfc00d8cc>
 800dc8c:	80c0040c 	andi	r3,r16,16
 800dc90:	1801951e 	bne	r3,zero,800e2e8 <___svfiprintf_internal_r+0xf20>
 800dc94:	80c0100c 	andi	r3,r16,64
 800dc98:	1801d326 	beq	r3,zero,800e3e8 <___svfiprintf_internal_r+0x1020>
 800dc9c:	d9002417 	ldw	r4,144(sp)
 800dca0:	1480000b 	ldhu	r18,0(r2)
 800dca4:	002d883a 	mov	r22,zero
 800dca8:	21000104 	addi	r4,r4,4
 800dcac:	d9002415 	stw	r4,144(sp)
 800dcb0:	0005883a 	mov	r2,zero
 800dcb4:	9007883a 	mov	r3,r18
 800dcb8:	003ea806 	br	800d75c <__alt_data_end+0xfc00d75c>
 800dcbc:	d8c01c17 	ldw	r3,112(sp)
 800dcc0:	d8801b17 	ldw	r2,108(sp)
 800dcc4:	d9001d87 	ldb	r4,118(sp)
 800dcc8:	20000b26 	beq	r4,zero,800dcf8 <___svfiprintf_internal_r+0x930>
 800dccc:	d9001d84 	addi	r4,sp,118
 800dcd0:	18c00044 	addi	r3,r3,1
 800dcd4:	10800044 	addi	r2,r2,1
 800dcd8:	41000015 	stw	r4,0(r8)
 800dcdc:	01000044 	movi	r4,1
 800dce0:	41000115 	stw	r4,4(r8)
 800dce4:	d8c01c15 	stw	r3,112(sp)
 800dce8:	d8801b15 	stw	r2,108(sp)
 800dcec:	010001c4 	movi	r4,7
 800dcf0:	20813616 	blt	r4,r2,800e1cc <___svfiprintf_internal_r+0xe04>
 800dcf4:	42000204 	addi	r8,r8,8
 800dcf8:	d9402117 	ldw	r5,132(sp)
 800dcfc:	28000b26 	beq	r5,zero,800dd2c <___svfiprintf_internal_r+0x964>
 800dd00:	d9001d04 	addi	r4,sp,116
 800dd04:	18c00084 	addi	r3,r3,2
 800dd08:	10800044 	addi	r2,r2,1
 800dd0c:	41000015 	stw	r4,0(r8)
 800dd10:	01000084 	movi	r4,2
 800dd14:	41000115 	stw	r4,4(r8)
 800dd18:	d8c01c15 	stw	r3,112(sp)
 800dd1c:	d8801b15 	stw	r2,108(sp)
 800dd20:	010001c4 	movi	r4,7
 800dd24:	20813216 	blt	r4,r2,800e1f0 <___svfiprintf_internal_r+0xe28>
 800dd28:	42000204 	addi	r8,r8,8
 800dd2c:	d9402517 	ldw	r5,148(sp)
 800dd30:	01002004 	movi	r4,128
 800dd34:	2900ad26 	beq	r5,r4,800dfec <___svfiprintf_internal_r+0xc24>
 800dd38:	d9002017 	ldw	r4,128(sp)
 800dd3c:	252fc83a 	sub	r23,r4,r20
 800dd40:	05c0330e 	bge	zero,r23,800de10 <___svfiprintf_internal_r+0xa48>
 800dd44:	01c00404 	movi	r7,16
 800dd48:	3dc1940e 	bge	r7,r23,800e39c <___svfiprintf_internal_r+0xfd4>
 800dd4c:	01020074 	movhi	r4,2049
 800dd50:	211ec904 	addi	r4,r4,31524
 800dd54:	d9002115 	stw	r4,132(sp)
 800dd58:	a809883a 	mov	r4,r21
 800dd5c:	dc002015 	stw	r16,128(sp)
 800dd60:	a02b883a 	mov	r21,r20
 800dd64:	3839883a 	mov	fp,r7
 800dd68:	9029883a 	mov	r20,r18
 800dd6c:	058001c4 	movi	r22,7
 800dd70:	b825883a 	mov	r18,r23
 800dd74:	dc002217 	ldw	r16,136(sp)
 800dd78:	202f883a 	mov	r23,r4
 800dd7c:	00000306 	br	800dd8c <___svfiprintf_internal_r+0x9c4>
 800dd80:	94bffc04 	addi	r18,r18,-16
 800dd84:	42000204 	addi	r8,r8,8
 800dd88:	e480110e 	bge	fp,r18,800ddd0 <___svfiprintf_internal_r+0xa08>
 800dd8c:	18c00404 	addi	r3,r3,16
 800dd90:	10800044 	addi	r2,r2,1
 800dd94:	44c00015 	stw	r19,0(r8)
 800dd98:	47000115 	stw	fp,4(r8)
 800dd9c:	d8c01c15 	stw	r3,112(sp)
 800dda0:	d8801b15 	stw	r2,108(sp)
 800dda4:	b0bff60e 	bge	r22,r2,800dd80 <__alt_data_end+0xfc00dd80>
 800dda8:	8809883a 	mov	r4,r17
 800ddac:	800b883a 	mov	r5,r16
 800ddb0:	d9801a04 	addi	r6,sp,104
 800ddb4:	800d2000 	call	800d200 <__ssprint_r>
 800ddb8:	10007b1e 	bne	r2,zero,800dfa8 <___svfiprintf_internal_r+0xbe0>
 800ddbc:	94bffc04 	addi	r18,r18,-16
 800ddc0:	d8c01c17 	ldw	r3,112(sp)
 800ddc4:	d8801b17 	ldw	r2,108(sp)
 800ddc8:	d811883a 	mov	r8,sp
 800ddcc:	e4bfef16 	blt	fp,r18,800dd8c <__alt_data_end+0xfc00dd8c>
 800ddd0:	dc002017 	ldw	r16,128(sp)
 800ddd4:	b809883a 	mov	r4,r23
 800ddd8:	902f883a 	mov	r23,r18
 800dddc:	a025883a 	mov	r18,r20
 800dde0:	a829883a 	mov	r20,r21
 800dde4:	202b883a 	mov	r21,r4
 800dde8:	d9402117 	ldw	r5,132(sp)
 800ddec:	1dc7883a 	add	r3,r3,r23
 800ddf0:	10800044 	addi	r2,r2,1
 800ddf4:	41400015 	stw	r5,0(r8)
 800ddf8:	45c00115 	stw	r23,4(r8)
 800ddfc:	d8c01c15 	stw	r3,112(sp)
 800de00:	d8801b15 	stw	r2,108(sp)
 800de04:	010001c4 	movi	r4,7
 800de08:	2080d616 	blt	r4,r2,800e164 <___svfiprintf_internal_r+0xd9c>
 800de0c:	42000204 	addi	r8,r8,8
 800de10:	d9002717 	ldw	r4,156(sp)
 800de14:	a0c7883a 	add	r3,r20,r3
 800de18:	10800044 	addi	r2,r2,1
 800de1c:	41000015 	stw	r4,0(r8)
 800de20:	45000115 	stw	r20,4(r8)
 800de24:	d8c01c15 	stw	r3,112(sp)
 800de28:	d8801b15 	stw	r2,108(sp)
 800de2c:	010001c4 	movi	r4,7
 800de30:	2080a516 	blt	r4,r2,800e0c8 <___svfiprintf_internal_r+0xd00>
 800de34:	42000204 	addi	r8,r8,8
 800de38:	8400010c 	andi	r16,r16,4
 800de3c:	80002b26 	beq	r16,zero,800deec <___svfiprintf_internal_r+0xb24>
 800de40:	d9402317 	ldw	r5,140(sp)
 800de44:	2ca1c83a 	sub	r16,r5,r18
 800de48:	0400280e 	bge	zero,r16,800deec <___svfiprintf_internal_r+0xb24>
 800de4c:	05000404 	movi	r20,16
 800de50:	d8801b17 	ldw	r2,108(sp)
 800de54:	a401aa0e 	bge	r20,r16,800e500 <___svfiprintf_internal_r+0x1138>
 800de58:	01420074 	movhi	r5,2049
 800de5c:	295ecd04 	addi	r5,r5,31540
 800de60:	d9402815 	stw	r5,160(sp)
 800de64:	058001c4 	movi	r22,7
 800de68:	ddc02217 	ldw	r23,136(sp)
 800de6c:	00000306 	br	800de7c <___svfiprintf_internal_r+0xab4>
 800de70:	843ffc04 	addi	r16,r16,-16
 800de74:	42000204 	addi	r8,r8,8
 800de78:	a400130e 	bge	r20,r16,800dec8 <___svfiprintf_internal_r+0xb00>
 800de7c:	01020074 	movhi	r4,2049
 800de80:	18c00404 	addi	r3,r3,16
 800de84:	10800044 	addi	r2,r2,1
 800de88:	211ecd04 	addi	r4,r4,31540
 800de8c:	41000015 	stw	r4,0(r8)
 800de90:	45000115 	stw	r20,4(r8)
 800de94:	d8c01c15 	stw	r3,112(sp)
 800de98:	d8801b15 	stw	r2,108(sp)
 800de9c:	b0bff40e 	bge	r22,r2,800de70 <__alt_data_end+0xfc00de70>
 800dea0:	8809883a 	mov	r4,r17
 800dea4:	b80b883a 	mov	r5,r23
 800dea8:	d9801a04 	addi	r6,sp,104
 800deac:	800d2000 	call	800d200 <__ssprint_r>
 800deb0:	10003d1e 	bne	r2,zero,800dfa8 <___svfiprintf_internal_r+0xbe0>
 800deb4:	843ffc04 	addi	r16,r16,-16
 800deb8:	d8c01c17 	ldw	r3,112(sp)
 800debc:	d8801b17 	ldw	r2,108(sp)
 800dec0:	d811883a 	mov	r8,sp
 800dec4:	a43fed16 	blt	r20,r16,800de7c <__alt_data_end+0xfc00de7c>
 800dec8:	d9402817 	ldw	r5,160(sp)
 800decc:	1c07883a 	add	r3,r3,r16
 800ded0:	10800044 	addi	r2,r2,1
 800ded4:	41400015 	stw	r5,0(r8)
 800ded8:	44000115 	stw	r16,4(r8)
 800dedc:	d8c01c15 	stw	r3,112(sp)
 800dee0:	d8801b15 	stw	r2,108(sp)
 800dee4:	010001c4 	movi	r4,7
 800dee8:	2080e416 	blt	r4,r2,800e27c <___svfiprintf_internal_r+0xeb4>
 800deec:	d8802317 	ldw	r2,140(sp)
 800def0:	9080010e 	bge	r18,r2,800def8 <___svfiprintf_internal_r+0xb30>
 800def4:	1025883a 	mov	r18,r2
 800def8:	d9002617 	ldw	r4,152(sp)
 800defc:	2489883a 	add	r4,r4,r18
 800df00:	d9002615 	stw	r4,152(sp)
 800df04:	1800781e 	bne	r3,zero,800e0e8 <___svfiprintf_internal_r+0xd20>
 800df08:	a8800007 	ldb	r2,0(r21)
 800df0c:	d8001b15 	stw	zero,108(sp)
 800df10:	d811883a 	mov	r8,sp
 800df14:	103d511e 	bne	r2,zero,800d45c <__alt_data_end+0xfc00d45c>
 800df18:	a825883a 	mov	r18,r21
 800df1c:	003d6806 	br	800d4c0 <__alt_data_end+0xfc00d4c0>
 800df20:	10803fcc 	andi	r2,r2,255
 800df24:	00c00044 	movi	r3,1
 800df28:	10fe191e 	bne	r2,r3,800d790 <__alt_data_end+0xfc00d790>
 800df2c:	b000c826 	beq	r22,zero,800e250 <___svfiprintf_internal_r+0xe88>
 800df30:	df001a04 	addi	fp,sp,104
 800df34:	4029883a 	mov	r20,r8
 800df38:	9009883a 	mov	r4,r18
 800df3c:	b00b883a 	mov	r5,r22
 800df40:	01800284 	movi	r6,10
 800df44:	000f883a 	mov	r7,zero
 800df48:	8010a800 	call	8010a80 <__umoddi3>
 800df4c:	10800c04 	addi	r2,r2,48
 800df50:	e73fffc4 	addi	fp,fp,-1
 800df54:	9009883a 	mov	r4,r18
 800df58:	b00b883a 	mov	r5,r22
 800df5c:	01800284 	movi	r6,10
 800df60:	000f883a 	mov	r7,zero
 800df64:	e0800005 	stb	r2,0(fp)
 800df68:	80104400 	call	8010440 <__udivdi3>
 800df6c:	1025883a 	mov	r18,r2
 800df70:	10c4b03a 	or	r2,r2,r3
 800df74:	182d883a 	mov	r22,r3
 800df78:	103fef1e 	bne	r2,zero,800df38 <__alt_data_end+0xfc00df38>
 800df7c:	d9001e17 	ldw	r4,120(sp)
 800df80:	a011883a 	mov	r8,r20
 800df84:	df002715 	stw	fp,156(sp)
 800df88:	2729c83a 	sub	r20,r4,fp
 800df8c:	00006206 	br	800e118 <___svfiprintf_internal_r+0xd50>
 800df90:	d8801c17 	ldw	r2,112(sp)
 800df94:	10000426 	beq	r2,zero,800dfa8 <___svfiprintf_internal_r+0xbe0>
 800df98:	d9002917 	ldw	r4,164(sp)
 800df9c:	d9402217 	ldw	r5,136(sp)
 800dfa0:	d9801a04 	addi	r6,sp,104
 800dfa4:	800d2000 	call	800d200 <__ssprint_r>
 800dfa8:	d9402217 	ldw	r5,136(sp)
 800dfac:	2880030b 	ldhu	r2,12(r5)
 800dfb0:	1080100c 	andi	r2,r2,64
 800dfb4:	1000621e 	bne	r2,zero,800e140 <___svfiprintf_internal_r+0xd78>
 800dfb8:	d8802617 	ldw	r2,152(sp)
 800dfbc:	dfc03717 	ldw	ra,220(sp)
 800dfc0:	df003617 	ldw	fp,216(sp)
 800dfc4:	ddc03517 	ldw	r23,212(sp)
 800dfc8:	dd803417 	ldw	r22,208(sp)
 800dfcc:	dd403317 	ldw	r21,204(sp)
 800dfd0:	dd003217 	ldw	r20,200(sp)
 800dfd4:	dcc03117 	ldw	r19,196(sp)
 800dfd8:	dc803017 	ldw	r18,192(sp)
 800dfdc:	dc402f17 	ldw	r17,188(sp)
 800dfe0:	dc002e17 	ldw	r16,184(sp)
 800dfe4:	dec03804 	addi	sp,sp,224
 800dfe8:	f800283a 	ret
 800dfec:	d9002317 	ldw	r4,140(sp)
 800dff0:	24afc83a 	sub	r23,r4,r18
 800dff4:	05ff500e 	bge	zero,r23,800dd38 <__alt_data_end+0xfc00dd38>
 800dff8:	01c00404 	movi	r7,16
 800dffc:	3dc1440e 	bge	r7,r23,800e510 <___svfiprintf_internal_r+0x1148>
 800e000:	01020074 	movhi	r4,2049
 800e004:	211ec904 	addi	r4,r4,31524
 800e008:	d9002115 	stw	r4,132(sp)
 800e00c:	a809883a 	mov	r4,r21
 800e010:	dc002515 	stw	r16,148(sp)
 800e014:	a02b883a 	mov	r21,r20
 800e018:	3839883a 	mov	fp,r7
 800e01c:	9029883a 	mov	r20,r18
 800e020:	058001c4 	movi	r22,7
 800e024:	b825883a 	mov	r18,r23
 800e028:	dc002217 	ldw	r16,136(sp)
 800e02c:	202f883a 	mov	r23,r4
 800e030:	00000306 	br	800e040 <___svfiprintf_internal_r+0xc78>
 800e034:	94bffc04 	addi	r18,r18,-16
 800e038:	42000204 	addi	r8,r8,8
 800e03c:	e480110e 	bge	fp,r18,800e084 <___svfiprintf_internal_r+0xcbc>
 800e040:	18c00404 	addi	r3,r3,16
 800e044:	10800044 	addi	r2,r2,1
 800e048:	44c00015 	stw	r19,0(r8)
 800e04c:	47000115 	stw	fp,4(r8)
 800e050:	d8c01c15 	stw	r3,112(sp)
 800e054:	d8801b15 	stw	r2,108(sp)
 800e058:	b0bff60e 	bge	r22,r2,800e034 <__alt_data_end+0xfc00e034>
 800e05c:	8809883a 	mov	r4,r17
 800e060:	800b883a 	mov	r5,r16
 800e064:	d9801a04 	addi	r6,sp,104
 800e068:	800d2000 	call	800d200 <__ssprint_r>
 800e06c:	103fce1e 	bne	r2,zero,800dfa8 <__alt_data_end+0xfc00dfa8>
 800e070:	94bffc04 	addi	r18,r18,-16
 800e074:	d8c01c17 	ldw	r3,112(sp)
 800e078:	d8801b17 	ldw	r2,108(sp)
 800e07c:	d811883a 	mov	r8,sp
 800e080:	e4bfef16 	blt	fp,r18,800e040 <__alt_data_end+0xfc00e040>
 800e084:	dc002517 	ldw	r16,148(sp)
 800e088:	b809883a 	mov	r4,r23
 800e08c:	902f883a 	mov	r23,r18
 800e090:	a025883a 	mov	r18,r20
 800e094:	a829883a 	mov	r20,r21
 800e098:	202b883a 	mov	r21,r4
 800e09c:	d9402117 	ldw	r5,132(sp)
 800e0a0:	1dc7883a 	add	r3,r3,r23
 800e0a4:	10800044 	addi	r2,r2,1
 800e0a8:	41400015 	stw	r5,0(r8)
 800e0ac:	45c00115 	stw	r23,4(r8)
 800e0b0:	d8c01c15 	stw	r3,112(sp)
 800e0b4:	d8801b15 	stw	r2,108(sp)
 800e0b8:	010001c4 	movi	r4,7
 800e0bc:	2080ae16 	blt	r4,r2,800e378 <___svfiprintf_internal_r+0xfb0>
 800e0c0:	42000204 	addi	r8,r8,8
 800e0c4:	003f1c06 	br	800dd38 <__alt_data_end+0xfc00dd38>
 800e0c8:	d9402217 	ldw	r5,136(sp)
 800e0cc:	8809883a 	mov	r4,r17
 800e0d0:	d9801a04 	addi	r6,sp,104
 800e0d4:	800d2000 	call	800d200 <__ssprint_r>
 800e0d8:	103fb31e 	bne	r2,zero,800dfa8 <__alt_data_end+0xfc00dfa8>
 800e0dc:	d8c01c17 	ldw	r3,112(sp)
 800e0e0:	d811883a 	mov	r8,sp
 800e0e4:	003f5406 	br	800de38 <__alt_data_end+0xfc00de38>
 800e0e8:	d9402217 	ldw	r5,136(sp)
 800e0ec:	8809883a 	mov	r4,r17
 800e0f0:	d9801a04 	addi	r6,sp,104
 800e0f4:	800d2000 	call	800d200 <__ssprint_r>
 800e0f8:	103f8326 	beq	r2,zero,800df08 <__alt_data_end+0xfc00df08>
 800e0fc:	003faa06 	br	800dfa8 <__alt_data_end+0xfc00dfa8>
 800e100:	10803fcc 	andi	r2,r2,255
 800e104:	1000021e 	bne	r2,zero,800e110 <___svfiprintf_internal_r+0xd48>
 800e108:	8080004c 	andi	r2,r16,1
 800e10c:	1000621e 	bne	r2,zero,800e298 <___svfiprintf_internal_r+0xed0>
 800e110:	d8c01a04 	addi	r3,sp,104
 800e114:	d8c02715 	stw	r3,156(sp)
 800e118:	d9002017 	ldw	r4,128(sp)
 800e11c:	a025883a 	mov	r18,r20
 800e120:	a100010e 	bge	r20,r4,800e128 <___svfiprintf_internal_r+0xd60>
 800e124:	2025883a 	mov	r18,r4
 800e128:	bdc03fcc 	andi	r23,r23,255
 800e12c:	bdc0201c 	xori	r23,r23,128
 800e130:	bdffe004 	addi	r23,r23,-128
 800e134:	b83e2026 	beq	r23,zero,800d9b8 <__alt_data_end+0xfc00d9b8>
 800e138:	94800044 	addi	r18,r18,1
 800e13c:	003e1e06 	br	800d9b8 <__alt_data_end+0xfc00d9b8>
 800e140:	00bfffc4 	movi	r2,-1
 800e144:	003f9d06 	br	800dfbc <__alt_data_end+0xfc00dfbc>
 800e148:	d9402217 	ldw	r5,136(sp)
 800e14c:	8809883a 	mov	r4,r17
 800e150:	d9801a04 	addi	r6,sp,104
 800e154:	800d2000 	call	800d200 <__ssprint_r>
 800e158:	103f931e 	bne	r2,zero,800dfa8 <__alt_data_end+0xfc00dfa8>
 800e15c:	d811883a 	mov	r8,sp
 800e160:	003cd406 	br	800d4b4 <__alt_data_end+0xfc00d4b4>
 800e164:	d9402217 	ldw	r5,136(sp)
 800e168:	8809883a 	mov	r4,r17
 800e16c:	d9801a04 	addi	r6,sp,104
 800e170:	800d2000 	call	800d200 <__ssprint_r>
 800e174:	103f8c1e 	bne	r2,zero,800dfa8 <__alt_data_end+0xfc00dfa8>
 800e178:	d8c01c17 	ldw	r3,112(sp)
 800e17c:	d8801b17 	ldw	r2,108(sp)
 800e180:	d811883a 	mov	r8,sp
 800e184:	003f2206 	br	800de10 <__alt_data_end+0xfc00de10>
 800e188:	d9002a17 	ldw	r4,168(sp)
 800e18c:	df001a04 	addi	fp,sp,104
 800e190:	908003cc 	andi	r2,r18,15
 800e194:	b006973a 	slli	r3,r22,28
 800e198:	2085883a 	add	r2,r4,r2
 800e19c:	9024d13a 	srli	r18,r18,4
 800e1a0:	10800003 	ldbu	r2,0(r2)
 800e1a4:	b02cd13a 	srli	r22,r22,4
 800e1a8:	e73fffc4 	addi	fp,fp,-1
 800e1ac:	1ca4b03a 	or	r18,r3,r18
 800e1b0:	e0800005 	stb	r2,0(fp)
 800e1b4:	9584b03a 	or	r2,r18,r22
 800e1b8:	103ff51e 	bne	r2,zero,800e190 <__alt_data_end+0xfc00e190>
 800e1bc:	d9401e17 	ldw	r5,120(sp)
 800e1c0:	df002715 	stw	fp,156(sp)
 800e1c4:	2f29c83a 	sub	r20,r5,fp
 800e1c8:	003fd306 	br	800e118 <__alt_data_end+0xfc00e118>
 800e1cc:	d9402217 	ldw	r5,136(sp)
 800e1d0:	8809883a 	mov	r4,r17
 800e1d4:	d9801a04 	addi	r6,sp,104
 800e1d8:	800d2000 	call	800d200 <__ssprint_r>
 800e1dc:	103f721e 	bne	r2,zero,800dfa8 <__alt_data_end+0xfc00dfa8>
 800e1e0:	d8c01c17 	ldw	r3,112(sp)
 800e1e4:	d8801b17 	ldw	r2,108(sp)
 800e1e8:	d811883a 	mov	r8,sp
 800e1ec:	003ec206 	br	800dcf8 <__alt_data_end+0xfc00dcf8>
 800e1f0:	d9402217 	ldw	r5,136(sp)
 800e1f4:	8809883a 	mov	r4,r17
 800e1f8:	d9801a04 	addi	r6,sp,104
 800e1fc:	800d2000 	call	800d200 <__ssprint_r>
 800e200:	103f691e 	bne	r2,zero,800dfa8 <__alt_data_end+0xfc00dfa8>
 800e204:	d8c01c17 	ldw	r3,112(sp)
 800e208:	d8801b17 	ldw	r2,108(sp)
 800e20c:	d811883a 	mov	r8,sp
 800e210:	003ec606 	br	800dd2c <__alt_data_end+0xfc00dd2c>
 800e214:	00800084 	movi	r2,2
 800e218:	9586b03a 	or	r3,r18,r22
 800e21c:	003d4f06 	br	800d75c <__alt_data_end+0xfc00d75c>
 800e220:	d9402217 	ldw	r5,136(sp)
 800e224:	8809883a 	mov	r4,r17
 800e228:	d9801a04 	addi	r6,sp,104
 800e22c:	800d2000 	call	800d200 <__ssprint_r>
 800e230:	103f5d1e 	bne	r2,zero,800dfa8 <__alt_data_end+0xfc00dfa8>
 800e234:	d8c01c17 	ldw	r3,112(sp)
 800e238:	d8801b17 	ldw	r2,108(sp)
 800e23c:	d811883a 	mov	r8,sp
 800e240:	003ea006 	br	800dcc4 <__alt_data_end+0xfc00dcc4>
 800e244:	d8801e17 	ldw	r2,120(sp)
 800e248:	10e9c83a 	sub	r20,r2,r3
 800e24c:	003fb206 	br	800e118 <__alt_data_end+0xfc00e118>
 800e250:	00800244 	movi	r2,9
 800e254:	14bf3636 	bltu	r2,r18,800df30 <__alt_data_end+0xfc00df30>
 800e258:	94800c04 	addi	r18,r18,48
 800e25c:	d8c019c4 	addi	r3,sp,103
 800e260:	dc8019c5 	stb	r18,103(sp)
 800e264:	dd002c17 	ldw	r20,176(sp)
 800e268:	d8c02715 	stw	r3,156(sp)
 800e26c:	003faa06 	br	800e118 <__alt_data_end+0xfc00e118>
 800e270:	d8802415 	stw	r2,144(sp)
 800e274:	a9800007 	ldb	r6,0(r21)
 800e278:	003c9e06 	br	800d4f4 <__alt_data_end+0xfc00d4f4>
 800e27c:	d9402217 	ldw	r5,136(sp)
 800e280:	8809883a 	mov	r4,r17
 800e284:	d9801a04 	addi	r6,sp,104
 800e288:	800d2000 	call	800d200 <__ssprint_r>
 800e28c:	103f461e 	bne	r2,zero,800dfa8 <__alt_data_end+0xfc00dfa8>
 800e290:	d8c01c17 	ldw	r3,112(sp)
 800e294:	003f1506 	br	800deec <__alt_data_end+0xfc00deec>
 800e298:	00800c04 	movi	r2,48
 800e29c:	d8c019c4 	addi	r3,sp,103
 800e2a0:	d88019c5 	stb	r2,103(sp)
 800e2a4:	dd002c17 	ldw	r20,176(sp)
 800e2a8:	d8c02715 	stw	r3,156(sp)
 800e2ac:	003f9a06 	br	800e118 <__alt_data_end+0xfc00e118>
 800e2b0:	d9002417 	ldw	r4,144(sp)
 800e2b4:	14800017 	ldw	r18,0(r2)
 800e2b8:	002d883a 	mov	r22,zero
 800e2bc:	21000104 	addi	r4,r4,4
 800e2c0:	d9002415 	stw	r4,144(sp)
 800e2c4:	003d1406 	br	800d718 <__alt_data_end+0xfc00d718>
 800e2c8:	14800017 	ldw	r18,0(r2)
 800e2cc:	d8802417 	ldw	r2,144(sp)
 800e2d0:	002d883a 	mov	r22,zero
 800e2d4:	9007883a 	mov	r3,r18
 800e2d8:	10800104 	addi	r2,r2,4
 800e2dc:	d8802415 	stw	r2,144(sp)
 800e2e0:	00800044 	movi	r2,1
 800e2e4:	003d1d06 	br	800d75c <__alt_data_end+0xfc00d75c>
 800e2e8:	d8c02417 	ldw	r3,144(sp)
 800e2ec:	14800017 	ldw	r18,0(r2)
 800e2f0:	002d883a 	mov	r22,zero
 800e2f4:	18c00104 	addi	r3,r3,4
 800e2f8:	d8c02415 	stw	r3,144(sp)
 800e2fc:	0005883a 	mov	r2,zero
 800e300:	9007883a 	mov	r3,r18
 800e304:	003d1506 	br	800d75c <__alt_data_end+0xfc00d75c>
 800e308:	1c800017 	ldw	r18,0(r3)
 800e30c:	d9402417 	ldw	r5,144(sp)
 800e310:	902dd7fa 	srai	r22,r18,31
 800e314:	29400104 	addi	r5,r5,4
 800e318:	d9402415 	stw	r5,144(sp)
 800e31c:	b005883a 	mov	r2,r22
 800e320:	003d8d06 	br	800d958 <__alt_data_end+0xfc00d958>
 800e324:	d9002417 	ldw	r4,144(sp)
 800e328:	d9402617 	ldw	r5,152(sp)
 800e32c:	20800017 	ldw	r2,0(r4)
 800e330:	2807d7fa 	srai	r3,r5,31
 800e334:	21000104 	addi	r4,r4,4
 800e338:	d9002415 	stw	r4,144(sp)
 800e33c:	11400015 	stw	r5,0(r2)
 800e340:	10c00115 	stw	r3,4(r2)
 800e344:	003c4306 	br	800d454 <__alt_data_end+0xfc00d454>
 800e348:	00800c04 	movi	r2,48
 800e34c:	d8801d05 	stb	r2,116(sp)
 800e350:	d9801d45 	stb	r6,117(sp)
 800e354:	84000094 	ori	r16,r16,2
 800e358:	00800084 	movi	r2,2
 800e35c:	003cff06 	br	800d75c <__alt_data_end+0xfc00d75c>
 800e360:	a9800007 	ldb	r6,0(r21)
 800e364:	003c6306 	br	800d4f4 <__alt_data_end+0xfc00d4f4>
 800e368:	ad400044 	addi	r21,r21,1
 800e36c:	84000814 	ori	r16,r16,32
 800e370:	11800047 	ldb	r6,1(r2)
 800e374:	003c5f06 	br	800d4f4 <__alt_data_end+0xfc00d4f4>
 800e378:	d9402217 	ldw	r5,136(sp)
 800e37c:	8809883a 	mov	r4,r17
 800e380:	d9801a04 	addi	r6,sp,104
 800e384:	800d2000 	call	800d200 <__ssprint_r>
 800e388:	103f071e 	bne	r2,zero,800dfa8 <__alt_data_end+0xfc00dfa8>
 800e38c:	d8c01c17 	ldw	r3,112(sp)
 800e390:	d8801b17 	ldw	r2,108(sp)
 800e394:	d811883a 	mov	r8,sp
 800e398:	003e6706 	br	800dd38 <__alt_data_end+0xfc00dd38>
 800e39c:	01420074 	movhi	r5,2049
 800e3a0:	295ec904 	addi	r5,r5,31524
 800e3a4:	d9402115 	stw	r5,132(sp)
 800e3a8:	003e8f06 	br	800dde8 <__alt_data_end+0xfc00dde8>
 800e3ac:	1c800017 	ldw	r18,0(r3)
 800e3b0:	d8c02417 	ldw	r3,144(sp)
 800e3b4:	902dd7fa 	srai	r22,r18,31
 800e3b8:	18c00104 	addi	r3,r3,4
 800e3bc:	d8c02415 	stw	r3,144(sp)
 800e3c0:	b005883a 	mov	r2,r22
 800e3c4:	003d6406 	br	800d958 <__alt_data_end+0xfc00d958>
 800e3c8:	d9002417 	ldw	r4,144(sp)
 800e3cc:	14800017 	ldw	r18,0(r2)
 800e3d0:	002d883a 	mov	r22,zero
 800e3d4:	21000104 	addi	r4,r4,4
 800e3d8:	d9002415 	stw	r4,144(sp)
 800e3dc:	00800044 	movi	r2,1
 800e3e0:	9007883a 	mov	r3,r18
 800e3e4:	003cdd06 	br	800d75c <__alt_data_end+0xfc00d75c>
 800e3e8:	d9402417 	ldw	r5,144(sp)
 800e3ec:	14800017 	ldw	r18,0(r2)
 800e3f0:	002d883a 	mov	r22,zero
 800e3f4:	29400104 	addi	r5,r5,4
 800e3f8:	d9402415 	stw	r5,144(sp)
 800e3fc:	0005883a 	mov	r2,zero
 800e400:	9007883a 	mov	r3,r18
 800e404:	003cd506 	br	800d75c <__alt_data_end+0xfc00d75c>
 800e408:	14800017 	ldw	r18,0(r2)
 800e40c:	d8802417 	ldw	r2,144(sp)
 800e410:	002d883a 	mov	r22,zero
 800e414:	10800104 	addi	r2,r2,4
 800e418:	d8802415 	stw	r2,144(sp)
 800e41c:	003cbe06 	br	800d718 <__alt_data_end+0xfc00d718>
 800e420:	8400100c 	andi	r16,r16,64
 800e424:	80002b26 	beq	r16,zero,800e4d4 <___svfiprintf_internal_r+0x110c>
 800e428:	d9402417 	ldw	r5,144(sp)
 800e42c:	d8c02617 	ldw	r3,152(sp)
 800e430:	28800017 	ldw	r2,0(r5)
 800e434:	29400104 	addi	r5,r5,4
 800e438:	d9402415 	stw	r5,144(sp)
 800e43c:	10c0000d 	sth	r3,0(r2)
 800e440:	003c0406 	br	800d454 <__alt_data_end+0xfc00d454>
 800e444:	d8c01e17 	ldw	r3,120(sp)
 800e448:	d9002717 	ldw	r4,156(sp)
 800e44c:	1929c83a 	sub	r20,r3,r4
 800e450:	003f3106 	br	800e118 <__alt_data_end+0xfc00e118>
 800e454:	d9002717 	ldw	r4,156(sp)
 800e458:	ddc02d15 	stw	r23,180(sp)
 800e45c:	80045e40 	call	80045e4 <strlen>
 800e460:	1029883a 	mov	r20,r2
 800e464:	ddc01d83 	ldbu	r23,118(sp)
 800e468:	dd802415 	stw	r22,144(sp)
 800e46c:	d8002015 	stw	zero,128(sp)
 800e470:	da002d17 	ldw	r8,180(sp)
 800e474:	003f2806 	br	800e118 <__alt_data_end+0xfc00e118>
 800e478:	013fffc4 	movi	r4,-1
 800e47c:	003deb06 	br	800dc2c <__alt_data_end+0xfc00dc2c>
 800e480:	dd002017 	ldw	r20,128(sp)
 800e484:	00800184 	movi	r2,6
 800e488:	1500012e 	bgeu	r2,r20,800e490 <___svfiprintf_internal_r+0x10c8>
 800e48c:	1029883a 	mov	r20,r2
 800e490:	a025883a 	mov	r18,r20
 800e494:	a0002916 	blt	r20,zero,800e53c <___svfiprintf_internal_r+0x1174>
 800e498:	00c20074 	movhi	r3,2049
 800e49c:	18de6604 	addi	r3,r3,31128
 800e4a0:	dd802415 	stw	r22,144(sp)
 800e4a4:	d8c02715 	stw	r3,156(sp)
 800e4a8:	003d4206 	br	800d9b4 <__alt_data_end+0xfc00d9b4>
 800e4ac:	04001004 	movi	r16,64
 800e4b0:	800b883a 	mov	r5,r16
 800e4b4:	80035180 	call	8003518 <_malloc_r>
 800e4b8:	d8c02217 	ldw	r3,136(sp)
 800e4bc:	18800015 	stw	r2,0(r3)
 800e4c0:	18800415 	stw	r2,16(r3)
 800e4c4:	10002b26 	beq	r2,zero,800e574 <___svfiprintf_internal_r+0x11ac>
 800e4c8:	d9402217 	ldw	r5,136(sp)
 800e4cc:	2c000515 	stw	r16,20(r5)
 800e4d0:	003bd106 	br	800d418 <__alt_data_end+0xfc00d418>
 800e4d4:	d9002417 	ldw	r4,144(sp)
 800e4d8:	d9402617 	ldw	r5,152(sp)
 800e4dc:	20800017 	ldw	r2,0(r4)
 800e4e0:	21000104 	addi	r4,r4,4
 800e4e4:	d9002415 	stw	r4,144(sp)
 800e4e8:	11400015 	stw	r5,0(r2)
 800e4ec:	003bd906 	br	800d454 <__alt_data_end+0xfc00d454>
 800e4f0:	01420074 	movhi	r5,2049
 800e4f4:	295ecd04 	addi	r5,r5,31540
 800e4f8:	d9402815 	stw	r5,160(sp)
 800e4fc:	003d6506 	br	800da94 <__alt_data_end+0xfc00da94>
 800e500:	01020074 	movhi	r4,2049
 800e504:	211ecd04 	addi	r4,r4,31540
 800e508:	d9002815 	stw	r4,160(sp)
 800e50c:	003e6e06 	br	800dec8 <__alt_data_end+0xfc00dec8>
 800e510:	01420074 	movhi	r5,2049
 800e514:	295ec904 	addi	r5,r5,31524
 800e518:	d9402115 	stw	r5,132(sp)
 800e51c:	003edf06 	br	800e09c <__alt_data_end+0xfc00e09c>
 800e520:	d8002015 	stw	zero,128(sp)
 800e524:	003bf406 	br	800d4f8 <__alt_data_end+0xfc00d4f8>
 800e528:	dd002017 	ldw	r20,128(sp)
 800e52c:	ddc01d83 	ldbu	r23,118(sp)
 800e530:	dd802415 	stw	r22,144(sp)
 800e534:	d8002015 	stw	zero,128(sp)
 800e538:	003ef706 	br	800e118 <__alt_data_end+0xfc00e118>
 800e53c:	0025883a 	mov	r18,zero
 800e540:	003fd506 	br	800e498 <__alt_data_end+0xfc00e498>
 800e544:	d8c02417 	ldw	r3,144(sp)
 800e548:	a809883a 	mov	r4,r21
 800e54c:	102b883a 	mov	r21,r2
 800e550:	18c00017 	ldw	r3,0(r3)
 800e554:	d8c02015 	stw	r3,128(sp)
 800e558:	d8c02417 	ldw	r3,144(sp)
 800e55c:	d8802017 	ldw	r2,128(sp)
 800e560:	19400104 	addi	r5,r3,4
 800e564:	d9402415 	stw	r5,144(sp)
 800e568:	10000716 	blt	r2,zero,800e588 <___svfiprintf_internal_r+0x11c0>
 800e56c:	21800047 	ldb	r6,1(r4)
 800e570:	003be006 	br	800d4f4 <__alt_data_end+0xfc00d4f4>
 800e574:	d9002917 	ldw	r4,164(sp)
 800e578:	00800304 	movi	r2,12
 800e57c:	20800015 	stw	r2,0(r4)
 800e580:	00bfffc4 	movi	r2,-1
 800e584:	003e8d06 	br	800dfbc <__alt_data_end+0xfc00dfbc>
 800e588:	00ffffc4 	movi	r3,-1
 800e58c:	d8c02015 	stw	r3,128(sp)
 800e590:	21800047 	ldb	r6,1(r4)
 800e594:	003bd706 	br	800d4f4 <__alt_data_end+0xfc00d4f4>

0800e598 <__sprint_r.part.0>:
 800e598:	28801917 	ldw	r2,100(r5)
 800e59c:	defff604 	addi	sp,sp,-40
 800e5a0:	dd400515 	stw	r21,20(sp)
 800e5a4:	dcc00315 	stw	r19,12(sp)
 800e5a8:	dfc00915 	stw	ra,36(sp)
 800e5ac:	df000815 	stw	fp,32(sp)
 800e5b0:	ddc00715 	stw	r23,28(sp)
 800e5b4:	dd800615 	stw	r22,24(sp)
 800e5b8:	dd000415 	stw	r20,16(sp)
 800e5bc:	dc800215 	stw	r18,8(sp)
 800e5c0:	dc400115 	stw	r17,4(sp)
 800e5c4:	dc000015 	stw	r16,0(sp)
 800e5c8:	1088000c 	andi	r2,r2,8192
 800e5cc:	2827883a 	mov	r19,r5
 800e5d0:	302b883a 	mov	r21,r6
 800e5d4:	10002d26 	beq	r2,zero,800e68c <__sprint_r.part.0+0xf4>
 800e5d8:	30800217 	ldw	r2,8(r6)
 800e5dc:	35800017 	ldw	r22,0(r6)
 800e5e0:	10002826 	beq	r2,zero,800e684 <__sprint_r.part.0+0xec>
 800e5e4:	2029883a 	mov	r20,r4
 800e5e8:	b5c00104 	addi	r23,r22,4
 800e5ec:	04bfffc4 	movi	r18,-1
 800e5f0:	bc400017 	ldw	r17,0(r23)
 800e5f4:	b4000017 	ldw	r16,0(r22)
 800e5f8:	0039883a 	mov	fp,zero
 800e5fc:	8822d0ba 	srli	r17,r17,2
 800e600:	04400316 	blt	zero,r17,800e610 <__sprint_r.part.0+0x78>
 800e604:	00001706 	br	800e664 <__sprint_r.part.0+0xcc>
 800e608:	84000104 	addi	r16,r16,4
 800e60c:	8f001526 	beq	r17,fp,800e664 <__sprint_r.part.0+0xcc>
 800e610:	81400017 	ldw	r5,0(r16)
 800e614:	a009883a 	mov	r4,r20
 800e618:	980d883a 	mov	r6,r19
 800e61c:	800fd900 	call	800fd90 <_fputwc_r>
 800e620:	e7000044 	addi	fp,fp,1
 800e624:	14bff81e 	bne	r2,r18,800e608 <__alt_data_end+0xfc00e608>
 800e628:	9005883a 	mov	r2,r18
 800e62c:	a8000215 	stw	zero,8(r21)
 800e630:	a8000115 	stw	zero,4(r21)
 800e634:	dfc00917 	ldw	ra,36(sp)
 800e638:	df000817 	ldw	fp,32(sp)
 800e63c:	ddc00717 	ldw	r23,28(sp)
 800e640:	dd800617 	ldw	r22,24(sp)
 800e644:	dd400517 	ldw	r21,20(sp)
 800e648:	dd000417 	ldw	r20,16(sp)
 800e64c:	dcc00317 	ldw	r19,12(sp)
 800e650:	dc800217 	ldw	r18,8(sp)
 800e654:	dc400117 	ldw	r17,4(sp)
 800e658:	dc000017 	ldw	r16,0(sp)
 800e65c:	dec00a04 	addi	sp,sp,40
 800e660:	f800283a 	ret
 800e664:	a8c00217 	ldw	r3,8(r21)
 800e668:	8c63883a 	add	r17,r17,r17
 800e66c:	8c63883a 	add	r17,r17,r17
 800e670:	1c45c83a 	sub	r2,r3,r17
 800e674:	a8800215 	stw	r2,8(r21)
 800e678:	b5800204 	addi	r22,r22,8
 800e67c:	bdc00204 	addi	r23,r23,8
 800e680:	103fdb1e 	bne	r2,zero,800e5f0 <__alt_data_end+0xfc00e5f0>
 800e684:	0005883a 	mov	r2,zero
 800e688:	003fe806 	br	800e62c <__alt_data_end+0xfc00e62c>
 800e68c:	800ae400 	call	800ae40 <__sfvwrite_r>
 800e690:	003fe606 	br	800e62c <__alt_data_end+0xfc00e62c>

0800e694 <__sprint_r>:
 800e694:	30c00217 	ldw	r3,8(r6)
 800e698:	18000126 	beq	r3,zero,800e6a0 <__sprint_r+0xc>
 800e69c:	800e5981 	jmpi	800e598 <__sprint_r.part.0>
 800e6a0:	30000115 	stw	zero,4(r6)
 800e6a4:	0005883a 	mov	r2,zero
 800e6a8:	f800283a 	ret

0800e6ac <___vfiprintf_internal_r>:
 800e6ac:	defeca04 	addi	sp,sp,-1240
 800e6b0:	dcc12f15 	stw	r19,1212(sp)
 800e6b4:	dfc13515 	stw	ra,1236(sp)
 800e6b8:	df013415 	stw	fp,1232(sp)
 800e6bc:	ddc13315 	stw	r23,1228(sp)
 800e6c0:	dd813215 	stw	r22,1224(sp)
 800e6c4:	dd413115 	stw	r21,1220(sp)
 800e6c8:	dd013015 	stw	r20,1216(sp)
 800e6cc:	dc812e15 	stw	r18,1208(sp)
 800e6d0:	dc412d15 	stw	r17,1204(sp)
 800e6d4:	dc012c15 	stw	r16,1200(sp)
 800e6d8:	d9012115 	stw	r4,1156(sp)
 800e6dc:	d9412015 	stw	r5,1152(sp)
 800e6e0:	d9c12315 	stw	r7,1164(sp)
 800e6e4:	3027883a 	mov	r19,r6
 800e6e8:	20000226 	beq	r4,zero,800e6f4 <___vfiprintf_internal_r+0x48>
 800e6ec:	20800e17 	ldw	r2,56(r4)
 800e6f0:	1000f726 	beq	r2,zero,800ead0 <___vfiprintf_internal_r+0x424>
 800e6f4:	d8812017 	ldw	r2,1152(sp)
 800e6f8:	10c0030b 	ldhu	r3,12(r2)
 800e6fc:	1908000c 	andi	r4,r3,8192
 800e700:	1805883a 	mov	r2,r3
 800e704:	2000081e 	bne	r4,zero,800e728 <___vfiprintf_internal_r+0x7c>
 800e708:	d9412017 	ldw	r5,1152(sp)
 800e70c:	18880014 	ori	r2,r3,8192
 800e710:	00f7ffc4 	movi	r3,-8193
 800e714:	29001917 	ldw	r4,100(r5)
 800e718:	2880030d 	sth	r2,12(r5)
 800e71c:	20c8703a 	and	r4,r4,r3
 800e720:	29001915 	stw	r4,100(r5)
 800e724:	1007883a 	mov	r3,r2
 800e728:	1100020c 	andi	r4,r2,8
 800e72c:	2000a726 	beq	r4,zero,800e9cc <___vfiprintf_internal_r+0x320>
 800e730:	d9412017 	ldw	r5,1152(sp)
 800e734:	29000417 	ldw	r4,16(r5)
 800e738:	2000a426 	beq	r4,zero,800e9cc <___vfiprintf_internal_r+0x320>
 800e73c:	1080068c 	andi	r2,r2,26
 800e740:	01000284 	movi	r4,10
 800e744:	1100ab26 	beq	r2,r4,800e9f4 <___vfiprintf_internal_r+0x348>
 800e748:	d9010a04 	addi	r4,sp,1064
 800e74c:	d94109c4 	addi	r5,sp,1063
 800e750:	07020074 	movhi	fp,2049
 800e754:	04420074 	movhi	r17,2049
 800e758:	2145c83a 	sub	r2,r4,r5
 800e75c:	e71ed504 	addi	fp,fp,31572
 800e760:	8c5ed104 	addi	r17,r17,31556
 800e764:	d9011e15 	stw	r4,1144(sp)
 800e768:	d9411f15 	stw	r5,1148(sp)
 800e76c:	dec11a15 	stw	sp,1128(sp)
 800e770:	d8011c15 	stw	zero,1136(sp)
 800e774:	d8011b15 	stw	zero,1132(sp)
 800e778:	d8012715 	stw	zero,1180(sp)
 800e77c:	d8012515 	stw	zero,1172(sp)
 800e780:	d811883a 	mov	r8,sp
 800e784:	d8812815 	stw	r2,1184(sp)
 800e788:	982f883a 	mov	r23,r19
 800e78c:	b8800007 	ldb	r2,0(r23)
 800e790:	1003b026 	beq	r2,zero,800f654 <___vfiprintf_internal_r+0xfa8>
 800e794:	01000944 	movi	r4,37
 800e798:	1103ae26 	beq	r2,r4,800f654 <___vfiprintf_internal_r+0xfa8>
 800e79c:	b805883a 	mov	r2,r23
 800e7a0:	00000106 	br	800e7a8 <___vfiprintf_internal_r+0xfc>
 800e7a4:	19000326 	beq	r3,r4,800e7b4 <___vfiprintf_internal_r+0x108>
 800e7a8:	10800044 	addi	r2,r2,1
 800e7ac:	10c00007 	ldb	r3,0(r2)
 800e7b0:	183ffc1e 	bne	r3,zero,800e7a4 <__alt_data_end+0xfc00e7a4>
 800e7b4:	15e1c83a 	sub	r16,r2,r23
 800e7b8:	1029883a 	mov	r20,r2
 800e7bc:	80001026 	beq	r16,zero,800e800 <___vfiprintf_internal_r+0x154>
 800e7c0:	d8c11c17 	ldw	r3,1136(sp)
 800e7c4:	d8811b17 	ldw	r2,1132(sp)
 800e7c8:	45c00015 	stw	r23,0(r8)
 800e7cc:	80c7883a 	add	r3,r16,r3
 800e7d0:	10800044 	addi	r2,r2,1
 800e7d4:	44000115 	stw	r16,4(r8)
 800e7d8:	d8c11c15 	stw	r3,1136(sp)
 800e7dc:	d8811b15 	stw	r2,1132(sp)
 800e7e0:	010001c4 	movi	r4,7
 800e7e4:	2080740e 	bge	r4,r2,800e9b8 <___vfiprintf_internal_r+0x30c>
 800e7e8:	1803a71e 	bne	r3,zero,800f688 <___vfiprintf_internal_r+0xfdc>
 800e7ec:	d8c12517 	ldw	r3,1172(sp)
 800e7f0:	d8011b15 	stw	zero,1132(sp)
 800e7f4:	d811883a 	mov	r8,sp
 800e7f8:	1c07883a 	add	r3,r3,r16
 800e7fc:	d8c12515 	stw	r3,1172(sp)
 800e800:	a0800007 	ldb	r2,0(r20)
 800e804:	1002bf26 	beq	r2,zero,800f304 <___vfiprintf_internal_r+0xc58>
 800e808:	a5c00044 	addi	r23,r20,1
 800e80c:	a1800047 	ldb	r6,1(r20)
 800e810:	d8011d85 	stb	zero,1142(sp)
 800e814:	d8012205 	stb	zero,1160(sp)
 800e818:	043fffc4 	movi	r16,-1
 800e81c:	d8012415 	stw	zero,1168(sp)
 800e820:	0025883a 	mov	r18,zero
 800e824:	05001604 	movi	r20,88
 800e828:	05400244 	movi	r21,9
 800e82c:	4027883a 	mov	r19,r8
 800e830:	bdc00044 	addi	r23,r23,1
 800e834:	30bff804 	addi	r2,r6,-32
 800e838:	a0825636 	bltu	r20,r2,800f194 <___vfiprintf_internal_r+0xae8>
 800e83c:	100490ba 	slli	r2,r2,2
 800e840:	01020074 	movhi	r4,2049
 800e844:	213a1504 	addi	r4,r4,-6060
 800e848:	1105883a 	add	r2,r2,r4
 800e84c:	10800017 	ldw	r2,0(r2)
 800e850:	1000683a 	jmp	r2
 800e854:	0800f124 	muli	zero,at,964
 800e858:	0800f194 	ori	zero,at,966
 800e85c:	0800f194 	ori	zero,at,966
 800e860:	0800f188 	cmpgei	zero,at,966
 800e864:	0800f194 	ori	zero,at,966
 800e868:	0800f194 	ori	zero,at,966
 800e86c:	0800f194 	ori	zero,at,966
 800e870:	0800f194 	ori	zero,at,966
 800e874:	0800f194 	ori	zero,at,966
 800e878:	0800f194 	ori	zero,at,966
 800e87c:	0800ef14 	ori	zero,at,956
 800e880:	0800f13c 	xorhi	zero,at,964
 800e884:	0800f194 	ori	zero,at,966
 800e888:	0800eae8 	cmpgeui	zero,at,939
 800e88c:	0800ef38 	rdprs	zero,at,956
 800e890:	0800f194 	ori	zero,at,966
 800e894:	0800eaf4 	orhi	zero,at,939
 800e898:	0800eb00 	call	800eb0 <__reset-0x77ff150>
 800e89c:	0800eb00 	call	800eb0 <__reset-0x77ff150>
 800e8a0:	0800eb00 	call	800eb0 <__reset-0x77ff150>
 800e8a4:	0800eb00 	call	800eb0 <__reset-0x77ff150>
 800e8a8:	0800eb00 	call	800eb0 <__reset-0x77ff150>
 800e8ac:	0800eb00 	call	800eb0 <__reset-0x77ff150>
 800e8b0:	0800eb00 	call	800eb0 <__reset-0x77ff150>
 800e8b4:	0800eb00 	call	800eb0 <__reset-0x77ff150>
 800e8b8:	0800eb00 	call	800eb0 <__reset-0x77ff150>
 800e8bc:	0800f194 	ori	zero,at,966
 800e8c0:	0800f194 	ori	zero,at,966
 800e8c4:	0800f194 	ori	zero,at,966
 800e8c8:	0800f194 	ori	zero,at,966
 800e8cc:	0800f194 	ori	zero,at,966
 800e8d0:	0800f194 	ori	zero,at,966
 800e8d4:	0800f194 	ori	zero,at,966
 800e8d8:	0800f194 	ori	zero,at,966
 800e8dc:	0800f194 	ori	zero,at,966
 800e8e0:	0800f194 	ori	zero,at,966
 800e8e4:	0800eb40 	call	800eb4 <__reset-0x77ff14c>
 800e8e8:	0800f194 	ori	zero,at,966
 800e8ec:	0800f194 	ori	zero,at,966
 800e8f0:	0800f194 	ori	zero,at,966
 800e8f4:	0800f194 	ori	zero,at,966
 800e8f8:	0800f194 	ori	zero,at,966
 800e8fc:	0800f194 	ori	zero,at,966
 800e900:	0800f194 	ori	zero,at,966
 800e904:	0800f194 	ori	zero,at,966
 800e908:	0800f194 	ori	zero,at,966
 800e90c:	0800f194 	ori	zero,at,966
 800e910:	0800ee30 	cmpltui	zero,at,952
 800e914:	0800f194 	ori	zero,at,966
 800e918:	0800f194 	ori	zero,at,966
 800e91c:	0800f194 	ori	zero,at,966
 800e920:	0800f194 	ori	zero,at,966
 800e924:	0800f194 	ori	zero,at,966
 800e928:	0800ee70 	cmpltui	zero,at,953
 800e92c:	0800f194 	ori	zero,at,966
 800e930:	0800f194 	ori	zero,at,966
 800e934:	0800eeb4 	orhi	zero,at,954
 800e938:	0800f194 	ori	zero,at,966
 800e93c:	0800f194 	ori	zero,at,966
 800e940:	0800f194 	ori	zero,at,966
 800e944:	0800f194 	ori	zero,at,966
 800e948:	0800f194 	ori	zero,at,966
 800e94c:	0800f194 	ori	zero,at,966
 800e950:	0800f194 	ori	zero,at,966
 800e954:	0800f194 	ori	zero,at,966
 800e958:	0800f194 	ori	zero,at,966
 800e95c:	0800f194 	ori	zero,at,966
 800e960:	0800edfc 	xorhi	zero,at,951
 800e964:	0800f14c 	andi	zero,at,965
 800e968:	0800f194 	ori	zero,at,966
 800e96c:	0800f194 	ori	zero,at,966
 800e970:	0800f194 	ori	zero,at,966
 800e974:	0800ef88 	cmpgei	zero,at,958
 800e978:	0800f14c 	andi	zero,at,965
 800e97c:	0800f194 	ori	zero,at,966
 800e980:	0800f194 	ori	zero,at,966
 800e984:	0800eea0 	cmpeqi	zero,at,954
 800e988:	0800f194 	ori	zero,at,966
 800e98c:	0800f0ec 	andhi	zero,at,963
 800e990:	0800f074 	orhi	zero,at,961
 800e994:	0800f0a8 	cmpgeui	zero,at,962
 800e998:	0800ef94 	ori	zero,at,958
 800e99c:	0800f194 	ori	zero,at,966
 800e9a0:	0800efa0 	cmpeqi	zero,at,958
 800e9a4:	0800f194 	ori	zero,at,966
 800e9a8:	0800effc 	xorhi	zero,at,959
 800e9ac:	0800f194 	ori	zero,at,966
 800e9b0:	0800f194 	ori	zero,at,966
 800e9b4:	0800f030 	cmpltui	zero,at,960
 800e9b8:	42000204 	addi	r8,r8,8
 800e9bc:	d8c12517 	ldw	r3,1172(sp)
 800e9c0:	1c07883a 	add	r3,r3,r16
 800e9c4:	d8c12515 	stw	r3,1172(sp)
 800e9c8:	003f8d06 	br	800e800 <__alt_data_end+0xfc00e800>
 800e9cc:	d9012117 	ldw	r4,1156(sp)
 800e9d0:	d9412017 	ldw	r5,1152(sp)
 800e9d4:	800880c0 	call	800880c <__swsetup_r>
 800e9d8:	1000301e 	bne	r2,zero,800ea9c <___vfiprintf_internal_r+0x3f0>
 800e9dc:	d8812017 	ldw	r2,1152(sp)
 800e9e0:	01000284 	movi	r4,10
 800e9e4:	10c0030b 	ldhu	r3,12(r2)
 800e9e8:	1805883a 	mov	r2,r3
 800e9ec:	1080068c 	andi	r2,r2,26
 800e9f0:	113f551e 	bne	r2,r4,800e748 <__alt_data_end+0xfc00e748>
 800e9f4:	d9012017 	ldw	r4,1152(sp)
 800e9f8:	2080038b 	ldhu	r2,14(r4)
 800e9fc:	113fffcc 	andi	r4,r2,65535
 800ea00:	2120001c 	xori	r4,r4,32768
 800ea04:	21200004 	addi	r4,r4,-32768
 800ea08:	203f4f16 	blt	r4,zero,800e748 <__alt_data_end+0xfc00e748>
 800ea0c:	d9412017 	ldw	r5,1152(sp)
 800ea10:	d9012117 	ldw	r4,1156(sp)
 800ea14:	d9c12317 	ldw	r7,1164(sp)
 800ea18:	2b001917 	ldw	r12,100(r5)
 800ea1c:	2ac00717 	ldw	r11,28(r5)
 800ea20:	2a800917 	ldw	r10,36(r5)
 800ea24:	02010004 	movi	r8,1024
 800ea28:	18ffff4c 	andi	r3,r3,65533
 800ea2c:	da0b883a 	add	r5,sp,r8
 800ea30:	980d883a 	mov	r6,r19
 800ea34:	d8c1030d 	sth	r3,1036(sp)
 800ea38:	db011915 	stw	r12,1124(sp)
 800ea3c:	d881038d 	sth	r2,1038(sp)
 800ea40:	dac10715 	stw	r11,1052(sp)
 800ea44:	da810915 	stw	r10,1060(sp)
 800ea48:	dec10015 	stw	sp,1024(sp)
 800ea4c:	dec10415 	stw	sp,1040(sp)
 800ea50:	da010215 	stw	r8,1032(sp)
 800ea54:	da010515 	stw	r8,1044(sp)
 800ea58:	d8010615 	stw	zero,1048(sp)
 800ea5c:	800e6ac0 	call	800e6ac <___vfiprintf_internal_r>
 800ea60:	1021883a 	mov	r16,r2
 800ea64:	10000416 	blt	r2,zero,800ea78 <___vfiprintf_internal_r+0x3cc>
 800ea68:	d9012117 	ldw	r4,1156(sp)
 800ea6c:	d9410004 	addi	r5,sp,1024
 800ea70:	800a4200 	call	800a420 <_fflush_r>
 800ea74:	10040f1e 	bne	r2,zero,800fab4 <___vfiprintf_internal_r+0x1408>
 800ea78:	d881030b 	ldhu	r2,1036(sp)
 800ea7c:	1080100c 	andi	r2,r2,64
 800ea80:	10000426 	beq	r2,zero,800ea94 <___vfiprintf_internal_r+0x3e8>
 800ea84:	d8c12017 	ldw	r3,1152(sp)
 800ea88:	1880030b 	ldhu	r2,12(r3)
 800ea8c:	10801014 	ori	r2,r2,64
 800ea90:	1880030d 	sth	r2,12(r3)
 800ea94:	8005883a 	mov	r2,r16
 800ea98:	00000106 	br	800eaa0 <___vfiprintf_internal_r+0x3f4>
 800ea9c:	00bfffc4 	movi	r2,-1
 800eaa0:	dfc13517 	ldw	ra,1236(sp)
 800eaa4:	df013417 	ldw	fp,1232(sp)
 800eaa8:	ddc13317 	ldw	r23,1228(sp)
 800eaac:	dd813217 	ldw	r22,1224(sp)
 800eab0:	dd413117 	ldw	r21,1220(sp)
 800eab4:	dd013017 	ldw	r20,1216(sp)
 800eab8:	dcc12f17 	ldw	r19,1212(sp)
 800eabc:	dc812e17 	ldw	r18,1208(sp)
 800eac0:	dc412d17 	ldw	r17,1204(sp)
 800eac4:	dc012c17 	ldw	r16,1200(sp)
 800eac8:	dec13604 	addi	sp,sp,1240
 800eacc:	f800283a 	ret
 800ead0:	800a9dc0 	call	800a9dc <__sinit>
 800ead4:	003f0706 	br	800e6f4 <__alt_data_end+0xfc00e6f4>
 800ead8:	d8c12417 	ldw	r3,1168(sp)
 800eadc:	d8812315 	stw	r2,1164(sp)
 800eae0:	00c7c83a 	sub	r3,zero,r3
 800eae4:	d8c12415 	stw	r3,1168(sp)
 800eae8:	94800114 	ori	r18,r18,4
 800eaec:	b9800007 	ldb	r6,0(r23)
 800eaf0:	003f4f06 	br	800e830 <__alt_data_end+0xfc00e830>
 800eaf4:	94802014 	ori	r18,r18,128
 800eaf8:	b9800007 	ldb	r6,0(r23)
 800eafc:	003f4c06 	br	800e830 <__alt_data_end+0xfc00e830>
 800eb00:	dc012615 	stw	r16,1176(sp)
 800eb04:	d8012415 	stw	zero,1168(sp)
 800eb08:	35bff404 	addi	r22,r6,-48
 800eb0c:	0009883a 	mov	r4,zero
 800eb10:	b821883a 	mov	r16,r23
 800eb14:	01400284 	movi	r5,10
 800eb18:	8002f580 	call	8002f58 <__mulsi3>
 800eb1c:	81800007 	ldb	r6,0(r16)
 800eb20:	1589883a 	add	r4,r2,r22
 800eb24:	bdc00044 	addi	r23,r23,1
 800eb28:	35bff404 	addi	r22,r6,-48
 800eb2c:	b821883a 	mov	r16,r23
 800eb30:	adbff82e 	bgeu	r21,r22,800eb14 <__alt_data_end+0xfc00eb14>
 800eb34:	d9012415 	stw	r4,1168(sp)
 800eb38:	dc012617 	ldw	r16,1176(sp)
 800eb3c:	003f3d06 	br	800e834 <__alt_data_end+0xfc00e834>
 800eb40:	d8c12203 	ldbu	r3,1160(sp)
 800eb44:	94800414 	ori	r18,r18,16
 800eb48:	9080080c 	andi	r2,r18,32
 800eb4c:	d8c11d85 	stb	r3,1142(sp)
 800eb50:	9811883a 	mov	r8,r19
 800eb54:	d8c12317 	ldw	r3,1164(sp)
 800eb58:	10018226 	beq	r2,zero,800f164 <___vfiprintf_internal_r+0xab8>
 800eb5c:	d9012317 	ldw	r4,1164(sp)
 800eb60:	18800117 	ldw	r2,4(r3)
 800eb64:	1cc00017 	ldw	r19,0(r3)
 800eb68:	21000204 	addi	r4,r4,8
 800eb6c:	d9012315 	stw	r4,1164(sp)
 800eb70:	102b883a 	mov	r21,r2
 800eb74:	10030016 	blt	r2,zero,800f778 <___vfiprintf_internal_r+0x10cc>
 800eb78:	dd811d83 	ldbu	r22,1142(sp)
 800eb7c:	8029883a 	mov	r20,r16
 800eb80:	00800044 	movi	r2,1
 800eb84:	9d46b03a 	or	r3,r19,r21
 800eb88:	80000216 	blt	r16,zero,800eb94 <___vfiprintf_internal_r+0x4e8>
 800eb8c:	013fdfc4 	movi	r4,-129
 800eb90:	9124703a 	and	r18,r18,r4
 800eb94:	1801b41e 	bne	r3,zero,800f268 <___vfiprintf_internal_r+0xbbc>
 800eb98:	80028126 	beq	r16,zero,800f5a0 <___vfiprintf_internal_r+0xef4>
 800eb9c:	10803fcc 	andi	r2,r2,255
 800eba0:	00c00044 	movi	r3,1
 800eba4:	10c1d126 	beq	r2,r3,800f2ec <___vfiprintf_internal_r+0xc40>
 800eba8:	00c00084 	movi	r3,2
 800ebac:	10c28626 	beq	r2,r3,800f5c8 <___vfiprintf_internal_r+0xf1c>
 800ebb0:	d8c10a04 	addi	r3,sp,1064
 800ebb4:	9808d0fa 	srli	r4,r19,3
 800ebb8:	a80a977a 	slli	r5,r21,29
 800ebbc:	a82ad0fa 	srli	r21,r21,3
 800ebc0:	9cc001cc 	andi	r19,r19,7
 800ebc4:	98800c04 	addi	r2,r19,48
 800ebc8:	18ffffc4 	addi	r3,r3,-1
 800ebcc:	2926b03a 	or	r19,r5,r4
 800ebd0:	18800005 	stb	r2,0(r3)
 800ebd4:	9d48b03a 	or	r4,r19,r21
 800ebd8:	203ff61e 	bne	r4,zero,800ebb4 <__alt_data_end+0xfc00ebb4>
 800ebdc:	9100004c 	andi	r4,r18,1
 800ebe0:	d8c12215 	stw	r3,1160(sp)
 800ebe4:	2002b31e 	bne	r4,zero,800f6b4 <___vfiprintf_internal_r+0x1008>
 800ebe8:	d9411e17 	ldw	r5,1144(sp)
 800ebec:	28e9c83a 	sub	r20,r5,r3
 800ebf0:	a02b883a 	mov	r21,r20
 800ebf4:	a400010e 	bge	r20,r16,800ebfc <___vfiprintf_internal_r+0x550>
 800ebf8:	802b883a 	mov	r21,r16
 800ebfc:	b5803fcc 	andi	r22,r22,255
 800ec00:	b580201c 	xori	r22,r22,128
 800ec04:	b5bfe004 	addi	r22,r22,-128
 800ec08:	b0000126 	beq	r22,zero,800ec10 <___vfiprintf_internal_r+0x564>
 800ec0c:	ad400044 	addi	r21,r21,1
 800ec10:	9280008c 	andi	r10,r18,2
 800ec14:	50000126 	beq	r10,zero,800ec1c <___vfiprintf_internal_r+0x570>
 800ec18:	ad400084 	addi	r21,r21,2
 800ec1c:	9580210c 	andi	r22,r18,132
 800ec20:	b001751e 	bne	r22,zero,800f1f8 <___vfiprintf_internal_r+0xb4c>
 800ec24:	d9012417 	ldw	r4,1168(sp)
 800ec28:	2567c83a 	sub	r19,r4,r21
 800ec2c:	04c1720e 	bge	zero,r19,800f1f8 <___vfiprintf_internal_r+0xb4c>
 800ec30:	01c00404 	movi	r7,16
 800ec34:	d8c11c17 	ldw	r3,1136(sp)
 800ec38:	3cc36b0e 	bge	r7,r19,800f9e8 <___vfiprintf_internal_r+0x133c>
 800ec3c:	00820074 	movhi	r2,2049
 800ec40:	109ed504 	addi	r2,r2,31572
 800ec44:	dc012915 	stw	r16,1188(sp)
 800ec48:	d9011b17 	ldw	r4,1132(sp)
 800ec4c:	9821883a 	mov	r16,r19
 800ec50:	d8812615 	stw	r2,1176(sp)
 800ec54:	030001c4 	movi	r12,7
 800ec58:	5027883a 	mov	r19,r10
 800ec5c:	00000506 	br	800ec74 <___vfiprintf_internal_r+0x5c8>
 800ec60:	21400084 	addi	r5,r4,2
 800ec64:	42000204 	addi	r8,r8,8
 800ec68:	1009883a 	mov	r4,r2
 800ec6c:	843ffc04 	addi	r16,r16,-16
 800ec70:	3c000d0e 	bge	r7,r16,800eca8 <___vfiprintf_internal_r+0x5fc>
 800ec74:	18c00404 	addi	r3,r3,16
 800ec78:	20800044 	addi	r2,r4,1
 800ec7c:	47000015 	stw	fp,0(r8)
 800ec80:	41c00115 	stw	r7,4(r8)
 800ec84:	d8c11c15 	stw	r3,1136(sp)
 800ec88:	d8811b15 	stw	r2,1132(sp)
 800ec8c:	60bff40e 	bge	r12,r2,800ec60 <__alt_data_end+0xfc00ec60>
 800ec90:	18014b1e 	bne	r3,zero,800f1c0 <___vfiprintf_internal_r+0xb14>
 800ec94:	843ffc04 	addi	r16,r16,-16
 800ec98:	0009883a 	mov	r4,zero
 800ec9c:	01400044 	movi	r5,1
 800eca0:	d811883a 	mov	r8,sp
 800eca4:	3c3ff316 	blt	r7,r16,800ec74 <__alt_data_end+0xfc00ec74>
 800eca8:	9815883a 	mov	r10,r19
 800ecac:	8027883a 	mov	r19,r16
 800ecb0:	dc012917 	ldw	r16,1188(sp)
 800ecb4:	d9012617 	ldw	r4,1176(sp)
 800ecb8:	98c7883a 	add	r3,r19,r3
 800ecbc:	44c00115 	stw	r19,4(r8)
 800ecc0:	41000015 	stw	r4,0(r8)
 800ecc4:	d8c11c15 	stw	r3,1136(sp)
 800ecc8:	d9411b15 	stw	r5,1132(sp)
 800eccc:	008001c4 	movi	r2,7
 800ecd0:	11425116 	blt	r2,r5,800f618 <___vfiprintf_internal_r+0xf6c>
 800ecd4:	d9011d87 	ldb	r4,1142(sp)
 800ecd8:	42000204 	addi	r8,r8,8
 800ecdc:	28800044 	addi	r2,r5,1
 800ece0:	20014a1e 	bne	r4,zero,800f20c <___vfiprintf_internal_r+0xb60>
 800ece4:	50000c26 	beq	r10,zero,800ed18 <___vfiprintf_internal_r+0x66c>
 800ece8:	d9011d04 	addi	r4,sp,1140
 800ecec:	18c00084 	addi	r3,r3,2
 800ecf0:	41000015 	stw	r4,0(r8)
 800ecf4:	01000084 	movi	r4,2
 800ecf8:	41000115 	stw	r4,4(r8)
 800ecfc:	d8c11c15 	stw	r3,1136(sp)
 800ed00:	d8811b15 	stw	r2,1132(sp)
 800ed04:	010001c4 	movi	r4,7
 800ed08:	20822016 	blt	r4,r2,800f58c <___vfiprintf_internal_r+0xee0>
 800ed0c:	100b883a 	mov	r5,r2
 800ed10:	42000204 	addi	r8,r8,8
 800ed14:	10800044 	addi	r2,r2,1
 800ed18:	01002004 	movi	r4,128
 800ed1c:	b101de26 	beq	r22,r4,800f498 <___vfiprintf_internal_r+0xdec>
 800ed20:	8521c83a 	sub	r16,r16,r20
 800ed24:	0400230e 	bge	zero,r16,800edb4 <___vfiprintf_internal_r+0x708>
 800ed28:	04c00404 	movi	r19,16
 800ed2c:	9c030d0e 	bge	r19,r16,800f964 <___vfiprintf_internal_r+0x12b8>
 800ed30:	00820074 	movhi	r2,2049
 800ed34:	109ed104 	addi	r2,r2,31556
 800ed38:	d8812615 	stw	r2,1176(sp)
 800ed3c:	058001c4 	movi	r22,7
 800ed40:	00000506 	br	800ed58 <___vfiprintf_internal_r+0x6ac>
 800ed44:	28800084 	addi	r2,r5,2
 800ed48:	42000204 	addi	r8,r8,8
 800ed4c:	200b883a 	mov	r5,r4
 800ed50:	843ffc04 	addi	r16,r16,-16
 800ed54:	9c000d0e 	bge	r19,r16,800ed8c <___vfiprintf_internal_r+0x6e0>
 800ed58:	18c00404 	addi	r3,r3,16
 800ed5c:	29000044 	addi	r4,r5,1
 800ed60:	44400015 	stw	r17,0(r8)
 800ed64:	44c00115 	stw	r19,4(r8)
 800ed68:	d8c11c15 	stw	r3,1136(sp)
 800ed6c:	d9011b15 	stw	r4,1132(sp)
 800ed70:	b13ff40e 	bge	r22,r4,800ed44 <__alt_data_end+0xfc00ed44>
 800ed74:	1801321e 	bne	r3,zero,800f240 <___vfiprintf_internal_r+0xb94>
 800ed78:	843ffc04 	addi	r16,r16,-16
 800ed7c:	000b883a 	mov	r5,zero
 800ed80:	00800044 	movi	r2,1
 800ed84:	d811883a 	mov	r8,sp
 800ed88:	9c3ff316 	blt	r19,r16,800ed58 <__alt_data_end+0xfc00ed58>
 800ed8c:	d9012617 	ldw	r4,1176(sp)
 800ed90:	1c07883a 	add	r3,r3,r16
 800ed94:	44000115 	stw	r16,4(r8)
 800ed98:	41000015 	stw	r4,0(r8)
 800ed9c:	d8c11c15 	stw	r3,1136(sp)
 800eda0:	d8811b15 	stw	r2,1132(sp)
 800eda4:	010001c4 	movi	r4,7
 800eda8:	20816216 	blt	r4,r2,800f334 <___vfiprintf_internal_r+0xc88>
 800edac:	42000204 	addi	r8,r8,8
 800edb0:	10800044 	addi	r2,r2,1
 800edb4:	d9012217 	ldw	r4,1160(sp)
 800edb8:	1d07883a 	add	r3,r3,r20
 800edbc:	45000115 	stw	r20,4(r8)
 800edc0:	41000015 	stw	r4,0(r8)
 800edc4:	d8c11c15 	stw	r3,1136(sp)
 800edc8:	d8811b15 	stw	r2,1132(sp)
 800edcc:	010001c4 	movi	r4,7
 800edd0:	2081610e 	bge	r4,r2,800f358 <___vfiprintf_internal_r+0xcac>
 800edd4:	1802211e 	bne	r3,zero,800f65c <___vfiprintf_internal_r+0xfb0>
 800edd8:	d8011b15 	stw	zero,1132(sp)
 800eddc:	9480010c 	andi	r18,r18,4
 800ede0:	9002171e 	bne	r18,zero,800f640 <___vfiprintf_internal_r+0xf94>
 800ede4:	d9412417 	ldw	r5,1168(sp)
 800ede8:	a9433716 	blt	r21,r5,800fac8 <___vfiprintf_internal_r+0x141c>
 800edec:	d8812517 	ldw	r2,1172(sp)
 800edf0:	1545883a 	add	r2,r2,r21
 800edf4:	d8812515 	stw	r2,1172(sp)
 800edf8:	00019a06 	br	800f464 <___vfiprintf_internal_r+0xdb8>
 800edfc:	d8c12317 	ldw	r3,1164(sp)
 800ee00:	05400044 	movi	r21,1
 800ee04:	9811883a 	mov	r8,r19
 800ee08:	18800017 	ldw	r2,0(r3)
 800ee0c:	18c00104 	addi	r3,r3,4
 800ee10:	d8c12315 	stw	r3,1164(sp)
 800ee14:	d8c10004 	addi	r3,sp,1024
 800ee18:	d8011d85 	stb	zero,1142(sp)
 800ee1c:	d8810005 	stb	r2,1024(sp)
 800ee20:	a829883a 	mov	r20,r21
 800ee24:	d8c12215 	stw	r3,1160(sp)
 800ee28:	0021883a 	mov	r16,zero
 800ee2c:	003f7806 	br	800ec10 <__alt_data_end+0xfc00ec10>
 800ee30:	94800414 	ori	r18,r18,16
 800ee34:	9080080c 	andi	r2,r18,32
 800ee38:	9811883a 	mov	r8,r19
 800ee3c:	10009026 	beq	r2,zero,800f080 <___vfiprintf_internal_r+0x9d4>
 800ee40:	d8812317 	ldw	r2,1164(sp)
 800ee44:	d8c12317 	ldw	r3,1164(sp)
 800ee48:	14c00017 	ldw	r19,0(r2)
 800ee4c:	15400117 	ldw	r21,4(r2)
 800ee50:	18c00204 	addi	r3,r3,8
 800ee54:	d8c12315 	stw	r3,1164(sp)
 800ee58:	0005883a 	mov	r2,zero
 800ee5c:	9d46b03a 	or	r3,r19,r21
 800ee60:	d8011d85 	stb	zero,1142(sp)
 800ee64:	8029883a 	mov	r20,r16
 800ee68:	002d883a 	mov	r22,zero
 800ee6c:	003f4606 	br	800eb88 <__alt_data_end+0xfc00eb88>
 800ee70:	94800414 	ori	r18,r18,16
 800ee74:	9080080c 	andi	r2,r18,32
 800ee78:	9811883a 	mov	r8,r19
 800ee7c:	10006226 	beq	r2,zero,800f008 <___vfiprintf_internal_r+0x95c>
 800ee80:	d9012317 	ldw	r4,1164(sp)
 800ee84:	00800044 	movi	r2,1
 800ee88:	24c00017 	ldw	r19,0(r4)
 800ee8c:	25400117 	ldw	r21,4(r4)
 800ee90:	21000204 	addi	r4,r4,8
 800ee94:	d9012315 	stw	r4,1164(sp)
 800ee98:	9d46b03a 	or	r3,r19,r21
 800ee9c:	003ff006 	br	800ee60 <__alt_data_end+0xfc00ee60>
 800eea0:	b9800007 	ldb	r6,0(r23)
 800eea4:	00801b04 	movi	r2,108
 800eea8:	3082b226 	beq	r6,r2,800f974 <___vfiprintf_internal_r+0x12c8>
 800eeac:	94800414 	ori	r18,r18,16
 800eeb0:	003e5f06 	br	800e830 <__alt_data_end+0xfc00e830>
 800eeb4:	d8c12203 	ldbu	r3,1160(sp)
 800eeb8:	01020074 	movhi	r4,2049
 800eebc:	211e5c04 	addi	r4,r4,31088
 800eec0:	d8c11d85 	stb	r3,1142(sp)
 800eec4:	d9012715 	stw	r4,1180(sp)
 800eec8:	90c0080c 	andi	r3,r18,32
 800eecc:	9811883a 	mov	r8,r19
 800eed0:	d8812317 	ldw	r2,1164(sp)
 800eed4:	18005f26 	beq	r3,zero,800f054 <___vfiprintf_internal_r+0x9a8>
 800eed8:	d9012317 	ldw	r4,1164(sp)
 800eedc:	14c00017 	ldw	r19,0(r2)
 800eee0:	15400117 	ldw	r21,4(r2)
 800eee4:	21000204 	addi	r4,r4,8
 800eee8:	d9012315 	stw	r4,1164(sp)
 800eeec:	9080004c 	andi	r2,r18,1
 800eef0:	1001e226 	beq	r2,zero,800f67c <___vfiprintf_internal_r+0xfd0>
 800eef4:	9d46b03a 	or	r3,r19,r21
 800eef8:	18024e26 	beq	r3,zero,800f834 <___vfiprintf_internal_r+0x1188>
 800eefc:	00800c04 	movi	r2,48
 800ef00:	d8811d05 	stb	r2,1140(sp)
 800ef04:	d9811d45 	stb	r6,1141(sp)
 800ef08:	94800094 	ori	r18,r18,2
 800ef0c:	00800084 	movi	r2,2
 800ef10:	003fd306 	br	800ee60 <__alt_data_end+0xfc00ee60>
 800ef14:	d9012317 	ldw	r4,1164(sp)
 800ef18:	d9412317 	ldw	r5,1164(sp)
 800ef1c:	21000017 	ldw	r4,0(r4)
 800ef20:	28800104 	addi	r2,r5,4
 800ef24:	d9012415 	stw	r4,1168(sp)
 800ef28:	203eeb16 	blt	r4,zero,800ead8 <__alt_data_end+0xfc00ead8>
 800ef2c:	d8812315 	stw	r2,1164(sp)
 800ef30:	b9800007 	ldb	r6,0(r23)
 800ef34:	003e3e06 	br	800e830 <__alt_data_end+0xfc00e830>
 800ef38:	b9800007 	ldb	r6,0(r23)
 800ef3c:	01000a84 	movi	r4,42
 800ef40:	b8800044 	addi	r2,r23,1
 800ef44:	3102d226 	beq	r6,r4,800fa90 <___vfiprintf_internal_r+0x13e4>
 800ef48:	35bff404 	addi	r22,r6,-48
 800ef4c:	102f883a 	mov	r23,r2
 800ef50:	0021883a 	mov	r16,zero
 800ef54:	adbe3736 	bltu	r21,r22,800e834 <__alt_data_end+0xfc00e834>
 800ef58:	0009883a 	mov	r4,zero
 800ef5c:	01400284 	movi	r5,10
 800ef60:	8002f580 	call	8002f58 <__mulsi3>
 800ef64:	b9800007 	ldb	r6,0(r23)
 800ef68:	b089883a 	add	r4,r22,r2
 800ef6c:	bdc00044 	addi	r23,r23,1
 800ef70:	35bff404 	addi	r22,r6,-48
 800ef74:	adbff92e 	bgeu	r21,r22,800ef5c <__alt_data_end+0xfc00ef5c>
 800ef78:	2021883a 	mov	r16,r4
 800ef7c:	203e2d0e 	bge	r4,zero,800e834 <__alt_data_end+0xfc00e834>
 800ef80:	043fffc4 	movi	r16,-1
 800ef84:	003e2b06 	br	800e834 <__alt_data_end+0xfc00e834>
 800ef88:	94801014 	ori	r18,r18,64
 800ef8c:	b9800007 	ldb	r6,0(r23)
 800ef90:	003e2706 	br	800e830 <__alt_data_end+0xfc00e830>
 800ef94:	94800814 	ori	r18,r18,32
 800ef98:	b9800007 	ldb	r6,0(r23)
 800ef9c:	003e2406 	br	800e830 <__alt_data_end+0xfc00e830>
 800efa0:	d9412317 	ldw	r5,1164(sp)
 800efa4:	d8812317 	ldw	r2,1164(sp)
 800efa8:	d8011d85 	stb	zero,1142(sp)
 800efac:	29400017 	ldw	r5,0(r5)
 800efb0:	9811883a 	mov	r8,r19
 800efb4:	14c00104 	addi	r19,r2,4
 800efb8:	d9412215 	stw	r5,1160(sp)
 800efbc:	28029026 	beq	r5,zero,800fa00 <___vfiprintf_internal_r+0x1354>
 800efc0:	d9012217 	ldw	r4,1160(sp)
 800efc4:	80027616 	blt	r16,zero,800f9a0 <___vfiprintf_internal_r+0x12f4>
 800efc8:	000b883a 	mov	r5,zero
 800efcc:	800d883a 	mov	r6,r16
 800efd0:	da012a15 	stw	r8,1192(sp)
 800efd4:	800b6ec0 	call	800b6ec <memchr>
 800efd8:	da012a17 	ldw	r8,1192(sp)
 800efdc:	1002a026 	beq	r2,zero,800fa60 <___vfiprintf_internal_r+0x13b4>
 800efe0:	d8c12217 	ldw	r3,1160(sp)
 800efe4:	10e9c83a 	sub	r20,r2,r3
 800efe8:	85023816 	blt	r16,r20,800f8cc <___vfiprintf_internal_r+0x1220>
 800efec:	dd811d83 	ldbu	r22,1142(sp)
 800eff0:	dcc12315 	stw	r19,1164(sp)
 800eff4:	0021883a 	mov	r16,zero
 800eff8:	003efd06 	br	800ebf0 <__alt_data_end+0xfc00ebf0>
 800effc:	9080080c 	andi	r2,r18,32
 800f000:	9811883a 	mov	r8,r19
 800f004:	103f9e1e 	bne	r2,zero,800ee80 <__alt_data_end+0xfc00ee80>
 800f008:	9080040c 	andi	r2,r18,16
 800f00c:	10021726 	beq	r2,zero,800f86c <___vfiprintf_internal_r+0x11c0>
 800f010:	d9412317 	ldw	r5,1164(sp)
 800f014:	002b883a 	mov	r21,zero
 800f018:	00800044 	movi	r2,1
 800f01c:	2cc00017 	ldw	r19,0(r5)
 800f020:	29400104 	addi	r5,r5,4
 800f024:	d9412315 	stw	r5,1164(sp)
 800f028:	9807883a 	mov	r3,r19
 800f02c:	003f8c06 	br	800ee60 <__alt_data_end+0xfc00ee60>
 800f030:	d8c12203 	ldbu	r3,1160(sp)
 800f034:	01020074 	movhi	r4,2049
 800f038:	211e6104 	addi	r4,r4,31108
 800f03c:	d8c11d85 	stb	r3,1142(sp)
 800f040:	d9012715 	stw	r4,1180(sp)
 800f044:	90c0080c 	andi	r3,r18,32
 800f048:	9811883a 	mov	r8,r19
 800f04c:	d8812317 	ldw	r2,1164(sp)
 800f050:	183fa11e 	bne	r3,zero,800eed8 <__alt_data_end+0xfc00eed8>
 800f054:	90c0040c 	andi	r3,r18,16
 800f058:	1801e526 	beq	r3,zero,800f7f0 <___vfiprintf_internal_r+0x1144>
 800f05c:	d9412317 	ldw	r5,1164(sp)
 800f060:	14c00017 	ldw	r19,0(r2)
 800f064:	002b883a 	mov	r21,zero
 800f068:	29400104 	addi	r5,r5,4
 800f06c:	d9412315 	stw	r5,1164(sp)
 800f070:	003f9e06 	br	800eeec <__alt_data_end+0xfc00eeec>
 800f074:	9080080c 	andi	r2,r18,32
 800f078:	9811883a 	mov	r8,r19
 800f07c:	103f701e 	bne	r2,zero,800ee40 <__alt_data_end+0xfc00ee40>
 800f080:	9080040c 	andi	r2,r18,16
 800f084:	1001ef26 	beq	r2,zero,800f844 <___vfiprintf_internal_r+0x1198>
 800f088:	d9012317 	ldw	r4,1164(sp)
 800f08c:	002b883a 	mov	r21,zero
 800f090:	0005883a 	mov	r2,zero
 800f094:	24c00017 	ldw	r19,0(r4)
 800f098:	21000104 	addi	r4,r4,4
 800f09c:	d9012315 	stw	r4,1164(sp)
 800f0a0:	9807883a 	mov	r3,r19
 800f0a4:	003f6e06 	br	800ee60 <__alt_data_end+0xfc00ee60>
 800f0a8:	d8c12317 	ldw	r3,1164(sp)
 800f0ac:	9811883a 	mov	r8,r19
 800f0b0:	00800c04 	movi	r2,48
 800f0b4:	1cc00017 	ldw	r19,0(r3)
 800f0b8:	01020074 	movhi	r4,2049
 800f0bc:	18c00104 	addi	r3,r3,4
 800f0c0:	d8811d05 	stb	r2,1140(sp)
 800f0c4:	211e6104 	addi	r4,r4,31108
 800f0c8:	00801e04 	movi	r2,120
 800f0cc:	d8811d45 	stb	r2,1141(sp)
 800f0d0:	d8c12315 	stw	r3,1164(sp)
 800f0d4:	002b883a 	mov	r21,zero
 800f0d8:	94800094 	ori	r18,r18,2
 800f0dc:	d9012715 	stw	r4,1180(sp)
 800f0e0:	00800084 	movi	r2,2
 800f0e4:	9807883a 	mov	r3,r19
 800f0e8:	003f5d06 	br	800ee60 <__alt_data_end+0xfc00ee60>
 800f0ec:	d8c12203 	ldbu	r3,1160(sp)
 800f0f0:	9080080c 	andi	r2,r18,32
 800f0f4:	9811883a 	mov	r8,r19
 800f0f8:	d8c11d85 	stb	r3,1142(sp)
 800f0fc:	1001b126 	beq	r2,zero,800f7c4 <___vfiprintf_internal_r+0x1118>
 800f100:	d9012317 	ldw	r4,1164(sp)
 800f104:	d9412517 	ldw	r5,1172(sp)
 800f108:	20800017 	ldw	r2,0(r4)
 800f10c:	2807d7fa 	srai	r3,r5,31
 800f110:	21000104 	addi	r4,r4,4
 800f114:	d9012315 	stw	r4,1164(sp)
 800f118:	11400015 	stw	r5,0(r2)
 800f11c:	10c00115 	stw	r3,4(r2)
 800f120:	003d9a06 	br	800e78c <__alt_data_end+0xfc00e78c>
 800f124:	d8812207 	ldb	r2,1160(sp)
 800f128:	1001c41e 	bne	r2,zero,800f83c <___vfiprintf_internal_r+0x1190>
 800f12c:	00c00804 	movi	r3,32
 800f130:	d8c12205 	stb	r3,1160(sp)
 800f134:	b9800007 	ldb	r6,0(r23)
 800f138:	003dbd06 	br	800e830 <__alt_data_end+0xfc00e830>
 800f13c:	00c00ac4 	movi	r3,43
 800f140:	d8c12205 	stb	r3,1160(sp)
 800f144:	b9800007 	ldb	r6,0(r23)
 800f148:	003db906 	br	800e830 <__alt_data_end+0xfc00e830>
 800f14c:	d8c12203 	ldbu	r3,1160(sp)
 800f150:	9080080c 	andi	r2,r18,32
 800f154:	9811883a 	mov	r8,r19
 800f158:	d8c11d85 	stb	r3,1142(sp)
 800f15c:	d8c12317 	ldw	r3,1164(sp)
 800f160:	103e7e1e 	bne	r2,zero,800eb5c <__alt_data_end+0xfc00eb5c>
 800f164:	9080040c 	andi	r2,r18,16
 800f168:	1001a926 	beq	r2,zero,800f810 <___vfiprintf_internal_r+0x1164>
 800f16c:	1cc00017 	ldw	r19,0(r3)
 800f170:	d9412317 	ldw	r5,1164(sp)
 800f174:	982bd7fa 	srai	r21,r19,31
 800f178:	29400104 	addi	r5,r5,4
 800f17c:	d9412315 	stw	r5,1164(sp)
 800f180:	a805883a 	mov	r2,r21
 800f184:	003e7b06 	br	800eb74 <__alt_data_end+0xfc00eb74>
 800f188:	94800054 	ori	r18,r18,1
 800f18c:	b9800007 	ldb	r6,0(r23)
 800f190:	003da706 	br	800e830 <__alt_data_end+0xfc00e830>
 800f194:	d8c12203 	ldbu	r3,1160(sp)
 800f198:	9811883a 	mov	r8,r19
 800f19c:	d8c11d85 	stb	r3,1142(sp)
 800f1a0:	30005826 	beq	r6,zero,800f304 <___vfiprintf_internal_r+0xc58>
 800f1a4:	05400044 	movi	r21,1
 800f1a8:	d8c10004 	addi	r3,sp,1024
 800f1ac:	d9810005 	stb	r6,1024(sp)
 800f1b0:	d8011d85 	stb	zero,1142(sp)
 800f1b4:	a829883a 	mov	r20,r21
 800f1b8:	d8c12215 	stw	r3,1160(sp)
 800f1bc:	003f1a06 	br	800ee28 <__alt_data_end+0xfc00ee28>
 800f1c0:	d9012117 	ldw	r4,1156(sp)
 800f1c4:	d9412017 	ldw	r5,1152(sp)
 800f1c8:	d9811a04 	addi	r6,sp,1128
 800f1cc:	d9c12a15 	stw	r7,1192(sp)
 800f1d0:	db012b15 	stw	r12,1196(sp)
 800f1d4:	800e5980 	call	800e598 <__sprint_r.part.0>
 800f1d8:	d9c12a17 	ldw	r7,1192(sp)
 800f1dc:	db012b17 	ldw	r12,1196(sp)
 800f1e0:	10004e1e 	bne	r2,zero,800f31c <___vfiprintf_internal_r+0xc70>
 800f1e4:	d9011b17 	ldw	r4,1132(sp)
 800f1e8:	d8c11c17 	ldw	r3,1136(sp)
 800f1ec:	d811883a 	mov	r8,sp
 800f1f0:	21400044 	addi	r5,r4,1
 800f1f4:	003e9d06 	br	800ec6c <__alt_data_end+0xfc00ec6c>
 800f1f8:	d9411b17 	ldw	r5,1132(sp)
 800f1fc:	d8c11c17 	ldw	r3,1136(sp)
 800f200:	28800044 	addi	r2,r5,1
 800f204:	d9011d87 	ldb	r4,1142(sp)
 800f208:	203eb626 	beq	r4,zero,800ece4 <__alt_data_end+0xfc00ece4>
 800f20c:	01000044 	movi	r4,1
 800f210:	d9411d84 	addi	r5,sp,1142
 800f214:	1907883a 	add	r3,r3,r4
 800f218:	41400015 	stw	r5,0(r8)
 800f21c:	41000115 	stw	r4,4(r8)
 800f220:	d8c11c15 	stw	r3,1136(sp)
 800f224:	d8811b15 	stw	r2,1132(sp)
 800f228:	014001c4 	movi	r5,7
 800f22c:	2880ce16 	blt	r5,r2,800f568 <___vfiprintf_internal_r+0xebc>
 800f230:	100b883a 	mov	r5,r2
 800f234:	42000204 	addi	r8,r8,8
 800f238:	10800044 	addi	r2,r2,1
 800f23c:	003ea906 	br	800ece4 <__alt_data_end+0xfc00ece4>
 800f240:	d9012117 	ldw	r4,1156(sp)
 800f244:	d9412017 	ldw	r5,1152(sp)
 800f248:	d9811a04 	addi	r6,sp,1128
 800f24c:	800e5980 	call	800e598 <__sprint_r.part.0>
 800f250:	1000321e 	bne	r2,zero,800f31c <___vfiprintf_internal_r+0xc70>
 800f254:	d9411b17 	ldw	r5,1132(sp)
 800f258:	d8c11c17 	ldw	r3,1136(sp)
 800f25c:	d811883a 	mov	r8,sp
 800f260:	28800044 	addi	r2,r5,1
 800f264:	003eba06 	br	800ed50 <__alt_data_end+0xfc00ed50>
 800f268:	10803fcc 	andi	r2,r2,255
 800f26c:	00c00044 	movi	r3,1
 800f270:	10fe4d1e 	bne	r2,r3,800eba8 <__alt_data_end+0xfc00eba8>
 800f274:	a800021e 	bne	r21,zero,800f280 <___vfiprintf_internal_r+0xbd4>
 800f278:	00800244 	movi	r2,9
 800f27c:	14c01b2e 	bgeu	r2,r19,800f2ec <___vfiprintf_internal_r+0xc40>
 800f280:	dc012215 	stw	r16,1160(sp)
 800f284:	dd010a04 	addi	r20,sp,1064
 800f288:	a821883a 	mov	r16,r21
 800f28c:	402b883a 	mov	r21,r8
 800f290:	9809883a 	mov	r4,r19
 800f294:	800b883a 	mov	r5,r16
 800f298:	01800284 	movi	r6,10
 800f29c:	000f883a 	mov	r7,zero
 800f2a0:	8010a800 	call	8010a80 <__umoddi3>
 800f2a4:	10800c04 	addi	r2,r2,48
 800f2a8:	a53fffc4 	addi	r20,r20,-1
 800f2ac:	9809883a 	mov	r4,r19
 800f2b0:	800b883a 	mov	r5,r16
 800f2b4:	01800284 	movi	r6,10
 800f2b8:	000f883a 	mov	r7,zero
 800f2bc:	a0800005 	stb	r2,0(r20)
 800f2c0:	80104400 	call	8010440 <__udivdi3>
 800f2c4:	1027883a 	mov	r19,r2
 800f2c8:	10c4b03a 	or	r2,r2,r3
 800f2cc:	1821883a 	mov	r16,r3
 800f2d0:	103fef1e 	bne	r2,zero,800f290 <__alt_data_end+0xfc00f290>
 800f2d4:	d9011e17 	ldw	r4,1144(sp)
 800f2d8:	dc012217 	ldw	r16,1160(sp)
 800f2dc:	a811883a 	mov	r8,r21
 800f2e0:	dd012215 	stw	r20,1160(sp)
 800f2e4:	2529c83a 	sub	r20,r4,r20
 800f2e8:	003e4106 	br	800ebf0 <__alt_data_end+0xfc00ebf0>
 800f2ec:	9cc00c04 	addi	r19,r19,48
 800f2f0:	d8c109c4 	addi	r3,sp,1063
 800f2f4:	dcc109c5 	stb	r19,1063(sp)
 800f2f8:	dd012817 	ldw	r20,1184(sp)
 800f2fc:	d8c12215 	stw	r3,1160(sp)
 800f300:	003e3b06 	br	800ebf0 <__alt_data_end+0xfc00ebf0>
 800f304:	d8811c17 	ldw	r2,1136(sp)
 800f308:	10000426 	beq	r2,zero,800f31c <___vfiprintf_internal_r+0xc70>
 800f30c:	d9012117 	ldw	r4,1156(sp)
 800f310:	d9412017 	ldw	r5,1152(sp)
 800f314:	d9811a04 	addi	r6,sp,1128
 800f318:	800e5980 	call	800e598 <__sprint_r.part.0>
 800f31c:	d9412017 	ldw	r5,1152(sp)
 800f320:	2880030b 	ldhu	r2,12(r5)
 800f324:	1080100c 	andi	r2,r2,64
 800f328:	103ddc1e 	bne	r2,zero,800ea9c <__alt_data_end+0xfc00ea9c>
 800f32c:	d8812517 	ldw	r2,1172(sp)
 800f330:	003ddb06 	br	800eaa0 <__alt_data_end+0xfc00eaa0>
 800f334:	1801061e 	bne	r3,zero,800f750 <___vfiprintf_internal_r+0x10a4>
 800f338:	d8c12217 	ldw	r3,1160(sp)
 800f33c:	00800044 	movi	r2,1
 800f340:	dd000115 	stw	r20,4(sp)
 800f344:	d8c00015 	stw	r3,0(sp)
 800f348:	dd011c15 	stw	r20,1136(sp)
 800f34c:	d8811b15 	stw	r2,1132(sp)
 800f350:	a007883a 	mov	r3,r20
 800f354:	d811883a 	mov	r8,sp
 800f358:	42000204 	addi	r8,r8,8
 800f35c:	9480010c 	andi	r18,r18,4
 800f360:	90003426 	beq	r18,zero,800f434 <___vfiprintf_internal_r+0xd88>
 800f364:	d9412417 	ldw	r5,1168(sp)
 800f368:	2d65c83a 	sub	r18,r5,r21
 800f36c:	0480310e 	bge	zero,r18,800f434 <___vfiprintf_internal_r+0xd88>
 800f370:	04000404 	movi	r16,16
 800f374:	8481ad0e 	bge	r16,r18,800fa2c <___vfiprintf_internal_r+0x1380>
 800f378:	01420074 	movhi	r5,2049
 800f37c:	295ed504 	addi	r5,r5,31572
 800f380:	d9011b17 	ldw	r4,1132(sp)
 800f384:	d9412615 	stw	r5,1176(sp)
 800f388:	04c001c4 	movi	r19,7
 800f38c:	dd012117 	ldw	r20,1156(sp)
 800f390:	dd812017 	ldw	r22,1152(sp)
 800f394:	00000506 	br	800f3ac <___vfiprintf_internal_r+0xd00>
 800f398:	21400084 	addi	r5,r4,2
 800f39c:	42000204 	addi	r8,r8,8
 800f3a0:	1009883a 	mov	r4,r2
 800f3a4:	94bffc04 	addi	r18,r18,-16
 800f3a8:	84800d0e 	bge	r16,r18,800f3e0 <___vfiprintf_internal_r+0xd34>
 800f3ac:	18c00404 	addi	r3,r3,16
 800f3b0:	20800044 	addi	r2,r4,1
 800f3b4:	47000015 	stw	fp,0(r8)
 800f3b8:	44000115 	stw	r16,4(r8)
 800f3bc:	d8c11c15 	stw	r3,1136(sp)
 800f3c0:	d8811b15 	stw	r2,1132(sp)
 800f3c4:	98bff40e 	bge	r19,r2,800f398 <__alt_data_end+0xfc00f398>
 800f3c8:	1800291e 	bne	r3,zero,800f470 <___vfiprintf_internal_r+0xdc4>
 800f3cc:	94bffc04 	addi	r18,r18,-16
 800f3d0:	0009883a 	mov	r4,zero
 800f3d4:	01400044 	movi	r5,1
 800f3d8:	d811883a 	mov	r8,sp
 800f3dc:	84bff316 	blt	r16,r18,800f3ac <__alt_data_end+0xfc00f3ac>
 800f3e0:	d8812617 	ldw	r2,1176(sp)
 800f3e4:	1c87883a 	add	r3,r3,r18
 800f3e8:	44800115 	stw	r18,4(r8)
 800f3ec:	40800015 	stw	r2,0(r8)
 800f3f0:	d8c11c15 	stw	r3,1136(sp)
 800f3f4:	d9411b15 	stw	r5,1132(sp)
 800f3f8:	008001c4 	movi	r2,7
 800f3fc:	11400d0e 	bge	r2,r5,800f434 <___vfiprintf_internal_r+0xd88>
 800f400:	1800061e 	bne	r3,zero,800f41c <___vfiprintf_internal_r+0xd70>
 800f404:	d8c12417 	ldw	r3,1168(sp)
 800f408:	a8c12e16 	blt	r21,r3,800f8c4 <___vfiprintf_internal_r+0x1218>
 800f40c:	d9012517 	ldw	r4,1172(sp)
 800f410:	2549883a 	add	r4,r4,r21
 800f414:	d9012515 	stw	r4,1172(sp)
 800f418:	00001206 	br	800f464 <___vfiprintf_internal_r+0xdb8>
 800f41c:	d9012117 	ldw	r4,1156(sp)
 800f420:	d9412017 	ldw	r5,1152(sp)
 800f424:	d9811a04 	addi	r6,sp,1128
 800f428:	800e5980 	call	800e598 <__sprint_r.part.0>
 800f42c:	103fbb1e 	bne	r2,zero,800f31c <__alt_data_end+0xfc00f31c>
 800f430:	d8c11c17 	ldw	r3,1136(sp)
 800f434:	d8812417 	ldw	r2,1168(sp)
 800f438:	a880010e 	bge	r21,r2,800f440 <___vfiprintf_internal_r+0xd94>
 800f43c:	102b883a 	mov	r21,r2
 800f440:	d9012517 	ldw	r4,1172(sp)
 800f444:	2549883a 	add	r4,r4,r21
 800f448:	d9012515 	stw	r4,1172(sp)
 800f44c:	18000526 	beq	r3,zero,800f464 <___vfiprintf_internal_r+0xdb8>
 800f450:	d9012117 	ldw	r4,1156(sp)
 800f454:	d9412017 	ldw	r5,1152(sp)
 800f458:	d9811a04 	addi	r6,sp,1128
 800f45c:	800e5980 	call	800e598 <__sprint_r.part.0>
 800f460:	103fae1e 	bne	r2,zero,800f31c <__alt_data_end+0xfc00f31c>
 800f464:	d8011b15 	stw	zero,1132(sp)
 800f468:	d811883a 	mov	r8,sp
 800f46c:	003cc706 	br	800e78c <__alt_data_end+0xfc00e78c>
 800f470:	a009883a 	mov	r4,r20
 800f474:	b00b883a 	mov	r5,r22
 800f478:	d9811a04 	addi	r6,sp,1128
 800f47c:	800e5980 	call	800e598 <__sprint_r.part.0>
 800f480:	103fa61e 	bne	r2,zero,800f31c <__alt_data_end+0xfc00f31c>
 800f484:	d9011b17 	ldw	r4,1132(sp)
 800f488:	d8c11c17 	ldw	r3,1136(sp)
 800f48c:	d811883a 	mov	r8,sp
 800f490:	21400044 	addi	r5,r4,1
 800f494:	003fc306 	br	800f3a4 <__alt_data_end+0xfc00f3a4>
 800f498:	d9012417 	ldw	r4,1168(sp)
 800f49c:	256dc83a 	sub	r22,r4,r21
 800f4a0:	05be1f0e 	bge	zero,r22,800ed20 <__alt_data_end+0xfc00ed20>
 800f4a4:	04c00404 	movi	r19,16
 800f4a8:	9d81720e 	bge	r19,r22,800fa74 <___vfiprintf_internal_r+0x13c8>
 800f4ac:	00820074 	movhi	r2,2049
 800f4b0:	109ed104 	addi	r2,r2,31556
 800f4b4:	d8812615 	stw	r2,1176(sp)
 800f4b8:	028001c4 	movi	r10,7
 800f4bc:	00000506 	br	800f4d4 <___vfiprintf_internal_r+0xe28>
 800f4c0:	29000084 	addi	r4,r5,2
 800f4c4:	42000204 	addi	r8,r8,8
 800f4c8:	100b883a 	mov	r5,r2
 800f4cc:	b5bffc04 	addi	r22,r22,-16
 800f4d0:	9d800d0e 	bge	r19,r22,800f508 <___vfiprintf_internal_r+0xe5c>
 800f4d4:	18c00404 	addi	r3,r3,16
 800f4d8:	28800044 	addi	r2,r5,1
 800f4dc:	44400015 	stw	r17,0(r8)
 800f4e0:	44c00115 	stw	r19,4(r8)
 800f4e4:	d8c11c15 	stw	r3,1136(sp)
 800f4e8:	d8811b15 	stw	r2,1132(sp)
 800f4ec:	50bff40e 	bge	r10,r2,800f4c0 <__alt_data_end+0xfc00f4c0>
 800f4f0:	1800111e 	bne	r3,zero,800f538 <___vfiprintf_internal_r+0xe8c>
 800f4f4:	b5bffc04 	addi	r22,r22,-16
 800f4f8:	000b883a 	mov	r5,zero
 800f4fc:	01000044 	movi	r4,1
 800f500:	d811883a 	mov	r8,sp
 800f504:	9dbff316 	blt	r19,r22,800f4d4 <__alt_data_end+0xfc00f4d4>
 800f508:	d9412617 	ldw	r5,1176(sp)
 800f50c:	1d87883a 	add	r3,r3,r22
 800f510:	45800115 	stw	r22,4(r8)
 800f514:	41400015 	stw	r5,0(r8)
 800f518:	d8c11c15 	stw	r3,1136(sp)
 800f51c:	d9011b15 	stw	r4,1132(sp)
 800f520:	008001c4 	movi	r2,7
 800f524:	11008516 	blt	r2,r4,800f73c <___vfiprintf_internal_r+0x1090>
 800f528:	42000204 	addi	r8,r8,8
 800f52c:	20800044 	addi	r2,r4,1
 800f530:	200b883a 	mov	r5,r4
 800f534:	003dfa06 	br	800ed20 <__alt_data_end+0xfc00ed20>
 800f538:	d9012117 	ldw	r4,1156(sp)
 800f53c:	d9412017 	ldw	r5,1152(sp)
 800f540:	d9811a04 	addi	r6,sp,1128
 800f544:	da812a15 	stw	r10,1192(sp)
 800f548:	800e5980 	call	800e598 <__sprint_r.part.0>
 800f54c:	da812a17 	ldw	r10,1192(sp)
 800f550:	103f721e 	bne	r2,zero,800f31c <__alt_data_end+0xfc00f31c>
 800f554:	d9411b17 	ldw	r5,1132(sp)
 800f558:	d8c11c17 	ldw	r3,1136(sp)
 800f55c:	d811883a 	mov	r8,sp
 800f560:	29000044 	addi	r4,r5,1
 800f564:	003fd906 	br	800f4cc <__alt_data_end+0xfc00f4cc>
 800f568:	1800681e 	bne	r3,zero,800f70c <___vfiprintf_internal_r+0x1060>
 800f56c:	50004d26 	beq	r10,zero,800f6a4 <___vfiprintf_internal_r+0xff8>
 800f570:	d8811d04 	addi	r2,sp,1140
 800f574:	00c00084 	movi	r3,2
 800f578:	d8800015 	stw	r2,0(sp)
 800f57c:	d8c00115 	stw	r3,4(sp)
 800f580:	2005883a 	mov	r2,r4
 800f584:	d811883a 	mov	r8,sp
 800f588:	003de006 	br	800ed0c <__alt_data_end+0xfc00ed0c>
 800f58c:	1800551e 	bne	r3,zero,800f6e4 <___vfiprintf_internal_r+0x1038>
 800f590:	000b883a 	mov	r5,zero
 800f594:	00800044 	movi	r2,1
 800f598:	d811883a 	mov	r8,sp
 800f59c:	003dde06 	br	800ed18 <__alt_data_end+0xfc00ed18>
 800f5a0:	10803fcc 	andi	r2,r2,255
 800f5a4:	1000191e 	bne	r2,zero,800f60c <___vfiprintf_internal_r+0xf60>
 800f5a8:	9080004c 	andi	r2,r18,1
 800f5ac:	10001726 	beq	r2,zero,800f60c <___vfiprintf_internal_r+0xf60>
 800f5b0:	00800c04 	movi	r2,48
 800f5b4:	d8c109c4 	addi	r3,sp,1063
 800f5b8:	d88109c5 	stb	r2,1063(sp)
 800f5bc:	dd012817 	ldw	r20,1184(sp)
 800f5c0:	d8c12215 	stw	r3,1160(sp)
 800f5c4:	003d8a06 	br	800ebf0 <__alt_data_end+0xfc00ebf0>
 800f5c8:	d9012717 	ldw	r4,1180(sp)
 800f5cc:	dd010a04 	addi	r20,sp,1064
 800f5d0:	988003cc 	andi	r2,r19,15
 800f5d4:	a806973a 	slli	r3,r21,28
 800f5d8:	2085883a 	add	r2,r4,r2
 800f5dc:	9826d13a 	srli	r19,r19,4
 800f5e0:	10800003 	ldbu	r2,0(r2)
 800f5e4:	a82ad13a 	srli	r21,r21,4
 800f5e8:	a53fffc4 	addi	r20,r20,-1
 800f5ec:	1ce6b03a 	or	r19,r3,r19
 800f5f0:	a0800005 	stb	r2,0(r20)
 800f5f4:	9d44b03a 	or	r2,r19,r21
 800f5f8:	103ff51e 	bne	r2,zero,800f5d0 <__alt_data_end+0xfc00f5d0>
 800f5fc:	d9411e17 	ldw	r5,1144(sp)
 800f600:	dd012215 	stw	r20,1160(sp)
 800f604:	2d29c83a 	sub	r20,r5,r20
 800f608:	003d7906 	br	800ebf0 <__alt_data_end+0xfc00ebf0>
 800f60c:	d8c10a04 	addi	r3,sp,1064
 800f610:	d8c12215 	stw	r3,1160(sp)
 800f614:	003d7606 	br	800ebf0 <__alt_data_end+0xfc00ebf0>
 800f618:	18009e1e 	bne	r3,zero,800f894 <___vfiprintf_internal_r+0x11e8>
 800f61c:	d8811d87 	ldb	r2,1142(sp)
 800f620:	10005f26 	beq	r2,zero,800f7a0 <___vfiprintf_internal_r+0x10f4>
 800f624:	00c00044 	movi	r3,1
 800f628:	d9011d84 	addi	r4,sp,1142
 800f62c:	1805883a 	mov	r2,r3
 800f630:	d9000015 	stw	r4,0(sp)
 800f634:	d8c00115 	stw	r3,4(sp)
 800f638:	d811883a 	mov	r8,sp
 800f63c:	003efc06 	br	800f230 <__alt_data_end+0xfc00f230>
 800f640:	d9412417 	ldw	r5,1168(sp)
 800f644:	d811883a 	mov	r8,sp
 800f648:	2d65c83a 	sub	r18,r5,r21
 800f64c:	04bf4816 	blt	zero,r18,800f370 <__alt_data_end+0xfc00f370>
 800f650:	003f6c06 	br	800f404 <__alt_data_end+0xfc00f404>
 800f654:	b829883a 	mov	r20,r23
 800f658:	003c6906 	br	800e800 <__alt_data_end+0xfc00e800>
 800f65c:	d9012117 	ldw	r4,1156(sp)
 800f660:	d9412017 	ldw	r5,1152(sp)
 800f664:	d9811a04 	addi	r6,sp,1128
 800f668:	800e5980 	call	800e598 <__sprint_r.part.0>
 800f66c:	103f2b1e 	bne	r2,zero,800f31c <__alt_data_end+0xfc00f31c>
 800f670:	d8c11c17 	ldw	r3,1136(sp)
 800f674:	d811883a 	mov	r8,sp
 800f678:	003f3806 	br	800f35c <__alt_data_end+0xfc00f35c>
 800f67c:	00800084 	movi	r2,2
 800f680:	9d46b03a 	or	r3,r19,r21
 800f684:	003df606 	br	800ee60 <__alt_data_end+0xfc00ee60>
 800f688:	d9012117 	ldw	r4,1156(sp)
 800f68c:	d9412017 	ldw	r5,1152(sp)
 800f690:	d9811a04 	addi	r6,sp,1128
 800f694:	800e5980 	call	800e598 <__sprint_r.part.0>
 800f698:	103f201e 	bne	r2,zero,800f31c <__alt_data_end+0xfc00f31c>
 800f69c:	d811883a 	mov	r8,sp
 800f6a0:	003cc606 	br	800e9bc <__alt_data_end+0xfc00e9bc>
 800f6a4:	000b883a 	mov	r5,zero
 800f6a8:	2005883a 	mov	r2,r4
 800f6ac:	d811883a 	mov	r8,sp
 800f6b0:	003d9906 	br	800ed18 <__alt_data_end+0xfc00ed18>
 800f6b4:	10803fcc 	andi	r2,r2,255
 800f6b8:	1080201c 	xori	r2,r2,128
 800f6bc:	10bfe004 	addi	r2,r2,-128
 800f6c0:	01000c04 	movi	r4,48
 800f6c4:	1100b226 	beq	r2,r4,800f990 <___vfiprintf_internal_r+0x12e4>
 800f6c8:	d9412217 	ldw	r5,1160(sp)
 800f6cc:	d8811e17 	ldw	r2,1144(sp)
 800f6d0:	193fffc5 	stb	r4,-1(r3)
 800f6d4:	297fffc4 	addi	r5,r5,-1
 800f6d8:	d9412215 	stw	r5,1160(sp)
 800f6dc:	1169c83a 	sub	r20,r2,r5
 800f6e0:	003d4306 	br	800ebf0 <__alt_data_end+0xfc00ebf0>
 800f6e4:	d9012117 	ldw	r4,1156(sp)
 800f6e8:	d9412017 	ldw	r5,1152(sp)
 800f6ec:	d9811a04 	addi	r6,sp,1128
 800f6f0:	800e5980 	call	800e598 <__sprint_r.part.0>
 800f6f4:	103f091e 	bne	r2,zero,800f31c <__alt_data_end+0xfc00f31c>
 800f6f8:	d9411b17 	ldw	r5,1132(sp)
 800f6fc:	d8c11c17 	ldw	r3,1136(sp)
 800f700:	d811883a 	mov	r8,sp
 800f704:	28800044 	addi	r2,r5,1
 800f708:	003d8306 	br	800ed18 <__alt_data_end+0xfc00ed18>
 800f70c:	d9012117 	ldw	r4,1156(sp)
 800f710:	d9412017 	ldw	r5,1152(sp)
 800f714:	d9811a04 	addi	r6,sp,1128
 800f718:	da812a15 	stw	r10,1192(sp)
 800f71c:	800e5980 	call	800e598 <__sprint_r.part.0>
 800f720:	da812a17 	ldw	r10,1192(sp)
 800f724:	103efd1e 	bne	r2,zero,800f31c <__alt_data_end+0xfc00f31c>
 800f728:	d9411b17 	ldw	r5,1132(sp)
 800f72c:	d8c11c17 	ldw	r3,1136(sp)
 800f730:	d811883a 	mov	r8,sp
 800f734:	28800044 	addi	r2,r5,1
 800f738:	003d6a06 	br	800ece4 <__alt_data_end+0xfc00ece4>
 800f73c:	1800a01e 	bne	r3,zero,800f9c0 <___vfiprintf_internal_r+0x1314>
 800f740:	000b883a 	mov	r5,zero
 800f744:	00800044 	movi	r2,1
 800f748:	d811883a 	mov	r8,sp
 800f74c:	003d7406 	br	800ed20 <__alt_data_end+0xfc00ed20>
 800f750:	d9012117 	ldw	r4,1156(sp)
 800f754:	d9412017 	ldw	r5,1152(sp)
 800f758:	d9811a04 	addi	r6,sp,1128
 800f75c:	800e5980 	call	800e598 <__sprint_r.part.0>
 800f760:	103eee1e 	bne	r2,zero,800f31c <__alt_data_end+0xfc00f31c>
 800f764:	d8811b17 	ldw	r2,1132(sp)
 800f768:	d8c11c17 	ldw	r3,1136(sp)
 800f76c:	d811883a 	mov	r8,sp
 800f770:	10800044 	addi	r2,r2,1
 800f774:	003d8f06 	br	800edb4 <__alt_data_end+0xfc00edb4>
 800f778:	04e7c83a 	sub	r19,zero,r19
 800f77c:	9804c03a 	cmpne	r2,r19,zero
 800f780:	056bc83a 	sub	r21,zero,r21
 800f784:	a8abc83a 	sub	r21,r21,r2
 800f788:	05800b44 	movi	r22,45
 800f78c:	dd811d85 	stb	r22,1142(sp)
 800f790:	8029883a 	mov	r20,r16
 800f794:	00800044 	movi	r2,1
 800f798:	9d46b03a 	or	r3,r19,r21
 800f79c:	003cfa06 	br	800eb88 <__alt_data_end+0xfc00eb88>
 800f7a0:	000b883a 	mov	r5,zero
 800f7a4:	00800044 	movi	r2,1
 800f7a8:	d811883a 	mov	r8,sp
 800f7ac:	503d5a26 	beq	r10,zero,800ed18 <__alt_data_end+0xfc00ed18>
 800f7b0:	00c00084 	movi	r3,2
 800f7b4:	d9011d04 	addi	r4,sp,1140
 800f7b8:	d9000015 	stw	r4,0(sp)
 800f7bc:	d8c00115 	stw	r3,4(sp)
 800f7c0:	003d5206 	br	800ed0c <__alt_data_end+0xfc00ed0c>
 800f7c4:	9080040c 	andi	r2,r18,16
 800f7c8:	1000421e 	bne	r2,zero,800f8d4 <___vfiprintf_internal_r+0x1228>
 800f7cc:	9480100c 	andi	r18,r18,64
 800f7d0:	90009c26 	beq	r18,zero,800fa44 <___vfiprintf_internal_r+0x1398>
 800f7d4:	d9412317 	ldw	r5,1164(sp)
 800f7d8:	d8c12517 	ldw	r3,1172(sp)
 800f7dc:	28800017 	ldw	r2,0(r5)
 800f7e0:	29400104 	addi	r5,r5,4
 800f7e4:	d9412315 	stw	r5,1164(sp)
 800f7e8:	10c0000d 	sth	r3,0(r2)
 800f7ec:	003be706 	br	800e78c <__alt_data_end+0xfc00e78c>
 800f7f0:	90c0100c 	andi	r3,r18,64
 800f7f4:	18003e26 	beq	r3,zero,800f8f0 <___vfiprintf_internal_r+0x1244>
 800f7f8:	d8c12317 	ldw	r3,1164(sp)
 800f7fc:	14c0000b 	ldhu	r19,0(r2)
 800f800:	002b883a 	mov	r21,zero
 800f804:	18c00104 	addi	r3,r3,4
 800f808:	d8c12315 	stw	r3,1164(sp)
 800f80c:	003db706 	br	800eeec <__alt_data_end+0xfc00eeec>
 800f810:	9080100c 	andi	r2,r18,64
 800f814:	10004c26 	beq	r2,zero,800f948 <___vfiprintf_internal_r+0x129c>
 800f818:	1cc0000f 	ldh	r19,0(r3)
 800f81c:	d8812317 	ldw	r2,1164(sp)
 800f820:	982bd7fa 	srai	r21,r19,31
 800f824:	10800104 	addi	r2,r2,4
 800f828:	d8812315 	stw	r2,1164(sp)
 800f82c:	a805883a 	mov	r2,r21
 800f830:	003cd006 	br	800eb74 <__alt_data_end+0xfc00eb74>
 800f834:	00800084 	movi	r2,2
 800f838:	003d8906 	br	800ee60 <__alt_data_end+0xfc00ee60>
 800f83c:	b9800007 	ldb	r6,0(r23)
 800f840:	003bfb06 	br	800e830 <__alt_data_end+0xfc00e830>
 800f844:	9080100c 	andi	r2,r18,64
 800f848:	10003726 	beq	r2,zero,800f928 <___vfiprintf_internal_r+0x127c>
 800f84c:	d9412317 	ldw	r5,1164(sp)
 800f850:	002b883a 	mov	r21,zero
 800f854:	0005883a 	mov	r2,zero
 800f858:	2cc0000b 	ldhu	r19,0(r5)
 800f85c:	29400104 	addi	r5,r5,4
 800f860:	d9412315 	stw	r5,1164(sp)
 800f864:	9807883a 	mov	r3,r19
 800f868:	003d7d06 	br	800ee60 <__alt_data_end+0xfc00ee60>
 800f86c:	9080100c 	andi	r2,r18,64
 800f870:	10002526 	beq	r2,zero,800f908 <___vfiprintf_internal_r+0x125c>
 800f874:	d8812317 	ldw	r2,1164(sp)
 800f878:	002b883a 	mov	r21,zero
 800f87c:	14c0000b 	ldhu	r19,0(r2)
 800f880:	10800104 	addi	r2,r2,4
 800f884:	d8812315 	stw	r2,1164(sp)
 800f888:	9807883a 	mov	r3,r19
 800f88c:	00800044 	movi	r2,1
 800f890:	003d7306 	br	800ee60 <__alt_data_end+0xfc00ee60>
 800f894:	d9012117 	ldw	r4,1156(sp)
 800f898:	d9412017 	ldw	r5,1152(sp)
 800f89c:	d9811a04 	addi	r6,sp,1128
 800f8a0:	da812a15 	stw	r10,1192(sp)
 800f8a4:	800e5980 	call	800e598 <__sprint_r.part.0>
 800f8a8:	da812a17 	ldw	r10,1192(sp)
 800f8ac:	103e9b1e 	bne	r2,zero,800f31c <__alt_data_end+0xfc00f31c>
 800f8b0:	d9411b17 	ldw	r5,1132(sp)
 800f8b4:	d8c11c17 	ldw	r3,1136(sp)
 800f8b8:	d811883a 	mov	r8,sp
 800f8bc:	28800044 	addi	r2,r5,1
 800f8c0:	003e5006 	br	800f204 <__alt_data_end+0xfc00f204>
 800f8c4:	182b883a 	mov	r21,r3
 800f8c8:	003ed006 	br	800f40c <__alt_data_end+0xfc00f40c>
 800f8cc:	8029883a 	mov	r20,r16
 800f8d0:	003dc606 	br	800efec <__alt_data_end+0xfc00efec>
 800f8d4:	d8c12317 	ldw	r3,1164(sp)
 800f8d8:	d9012517 	ldw	r4,1172(sp)
 800f8dc:	18800017 	ldw	r2,0(r3)
 800f8e0:	18c00104 	addi	r3,r3,4
 800f8e4:	d8c12315 	stw	r3,1164(sp)
 800f8e8:	11000015 	stw	r4,0(r2)
 800f8ec:	003ba706 	br	800e78c <__alt_data_end+0xfc00e78c>
 800f8f0:	d9012317 	ldw	r4,1164(sp)
 800f8f4:	14c00017 	ldw	r19,0(r2)
 800f8f8:	002b883a 	mov	r21,zero
 800f8fc:	21000104 	addi	r4,r4,4
 800f900:	d9012315 	stw	r4,1164(sp)
 800f904:	003d7906 	br	800eeec <__alt_data_end+0xfc00eeec>
 800f908:	d8c12317 	ldw	r3,1164(sp)
 800f90c:	002b883a 	mov	r21,zero
 800f910:	00800044 	movi	r2,1
 800f914:	1cc00017 	ldw	r19,0(r3)
 800f918:	18c00104 	addi	r3,r3,4
 800f91c:	d8c12315 	stw	r3,1164(sp)
 800f920:	9807883a 	mov	r3,r19
 800f924:	003d4e06 	br	800ee60 <__alt_data_end+0xfc00ee60>
 800f928:	d8812317 	ldw	r2,1164(sp)
 800f92c:	002b883a 	mov	r21,zero
 800f930:	14c00017 	ldw	r19,0(r2)
 800f934:	10800104 	addi	r2,r2,4
 800f938:	d8812315 	stw	r2,1164(sp)
 800f93c:	9807883a 	mov	r3,r19
 800f940:	0005883a 	mov	r2,zero
 800f944:	003d4606 	br	800ee60 <__alt_data_end+0xfc00ee60>
 800f948:	1cc00017 	ldw	r19,0(r3)
 800f94c:	d8c12317 	ldw	r3,1164(sp)
 800f950:	982bd7fa 	srai	r21,r19,31
 800f954:	18c00104 	addi	r3,r3,4
 800f958:	d8c12315 	stw	r3,1164(sp)
 800f95c:	a805883a 	mov	r2,r21
 800f960:	003c8406 	br	800eb74 <__alt_data_end+0xfc00eb74>
 800f964:	01020074 	movhi	r4,2049
 800f968:	211ed104 	addi	r4,r4,31556
 800f96c:	d9012615 	stw	r4,1176(sp)
 800f970:	003d0606 	br	800ed8c <__alt_data_end+0xfc00ed8c>
 800f974:	b9800043 	ldbu	r6,1(r23)
 800f978:	94800814 	ori	r18,r18,32
 800f97c:	bdc00044 	addi	r23,r23,1
 800f980:	31803fcc 	andi	r6,r6,255
 800f984:	3180201c 	xori	r6,r6,128
 800f988:	31bfe004 	addi	r6,r6,-128
 800f98c:	003ba806 	br	800e830 <__alt_data_end+0xfc00e830>
 800f990:	d8811e17 	ldw	r2,1144(sp)
 800f994:	d8c12217 	ldw	r3,1160(sp)
 800f998:	10e9c83a 	sub	r20,r2,r3
 800f99c:	003c9406 	br	800ebf0 <__alt_data_end+0xfc00ebf0>
 800f9a0:	da012a15 	stw	r8,1192(sp)
 800f9a4:	80045e40 	call	80045e4 <strlen>
 800f9a8:	1029883a 	mov	r20,r2
 800f9ac:	dd811d83 	ldbu	r22,1142(sp)
 800f9b0:	dcc12315 	stw	r19,1164(sp)
 800f9b4:	0021883a 	mov	r16,zero
 800f9b8:	da012a17 	ldw	r8,1192(sp)
 800f9bc:	003c8c06 	br	800ebf0 <__alt_data_end+0xfc00ebf0>
 800f9c0:	d9012117 	ldw	r4,1156(sp)
 800f9c4:	d9412017 	ldw	r5,1152(sp)
 800f9c8:	d9811a04 	addi	r6,sp,1128
 800f9cc:	800e5980 	call	800e598 <__sprint_r.part.0>
 800f9d0:	103e521e 	bne	r2,zero,800f31c <__alt_data_end+0xfc00f31c>
 800f9d4:	d9411b17 	ldw	r5,1132(sp)
 800f9d8:	d8c11c17 	ldw	r3,1136(sp)
 800f9dc:	d811883a 	mov	r8,sp
 800f9e0:	28800044 	addi	r2,r5,1
 800f9e4:	003cce06 	br	800ed20 <__alt_data_end+0xfc00ed20>
 800f9e8:	01420074 	movhi	r5,2049
 800f9ec:	295ed504 	addi	r5,r5,31572
 800f9f0:	d9412615 	stw	r5,1176(sp)
 800f9f4:	d9411b17 	ldw	r5,1132(sp)
 800f9f8:	29400044 	addi	r5,r5,1
 800f9fc:	003cad06 	br	800ecb4 <__alt_data_end+0xfc00ecb4>
 800fa00:	00800184 	movi	r2,6
 800fa04:	1400012e 	bgeu	r2,r16,800fa0c <___vfiprintf_internal_r+0x1360>
 800fa08:	1021883a 	mov	r16,r2
 800fa0c:	8029883a 	mov	r20,r16
 800fa10:	802b883a 	mov	r21,r16
 800fa14:	80001c16 	blt	r16,zero,800fa88 <___vfiprintf_internal_r+0x13dc>
 800fa18:	00c20074 	movhi	r3,2049
 800fa1c:	18de6604 	addi	r3,r3,31128
 800fa20:	dcc12315 	stw	r19,1164(sp)
 800fa24:	d8c12215 	stw	r3,1160(sp)
 800fa28:	003cff06 	br	800ee28 <__alt_data_end+0xfc00ee28>
 800fa2c:	d9411b17 	ldw	r5,1132(sp)
 800fa30:	00820074 	movhi	r2,2049
 800fa34:	109ed504 	addi	r2,r2,31572
 800fa38:	d8812615 	stw	r2,1176(sp)
 800fa3c:	29400044 	addi	r5,r5,1
 800fa40:	003e6706 	br	800f3e0 <__alt_data_end+0xfc00f3e0>
 800fa44:	d9012317 	ldw	r4,1164(sp)
 800fa48:	d9412517 	ldw	r5,1172(sp)
 800fa4c:	20800017 	ldw	r2,0(r4)
 800fa50:	21000104 	addi	r4,r4,4
 800fa54:	d9012315 	stw	r4,1164(sp)
 800fa58:	11400015 	stw	r5,0(r2)
 800fa5c:	003b4b06 	br	800e78c <__alt_data_end+0xfc00e78c>
 800fa60:	8029883a 	mov	r20,r16
 800fa64:	dd811d83 	ldbu	r22,1142(sp)
 800fa68:	dcc12315 	stw	r19,1164(sp)
 800fa6c:	0021883a 	mov	r16,zero
 800fa70:	003c5f06 	br	800ebf0 <__alt_data_end+0xfc00ebf0>
 800fa74:	01020074 	movhi	r4,2049
 800fa78:	211ed104 	addi	r4,r4,31556
 800fa7c:	d9012615 	stw	r4,1176(sp)
 800fa80:	1009883a 	mov	r4,r2
 800fa84:	003ea006 	br	800f508 <__alt_data_end+0xfc00f508>
 800fa88:	002b883a 	mov	r21,zero
 800fa8c:	003fe206 	br	800fa18 <__alt_data_end+0xfc00fa18>
 800fa90:	d9412317 	ldw	r5,1164(sp)
 800fa94:	b807883a 	mov	r3,r23
 800fa98:	102f883a 	mov	r23,r2
 800fa9c:	2c000017 	ldw	r16,0(r5)
 800faa0:	29000104 	addi	r4,r5,4
 800faa4:	d9012315 	stw	r4,1164(sp)
 800faa8:	80000416 	blt	r16,zero,800fabc <___vfiprintf_internal_r+0x1410>
 800faac:	19800047 	ldb	r6,1(r3)
 800fab0:	003b5f06 	br	800e830 <__alt_data_end+0xfc00e830>
 800fab4:	043fffc4 	movi	r16,-1
 800fab8:	003bef06 	br	800ea78 <__alt_data_end+0xfc00ea78>
 800fabc:	043fffc4 	movi	r16,-1
 800fac0:	19800047 	ldb	r6,1(r3)
 800fac4:	003b5a06 	br	800e830 <__alt_data_end+0xfc00e830>
 800fac8:	282b883a 	mov	r21,r5
 800facc:	003cc706 	br	800edec <__alt_data_end+0xfc00edec>

0800fad0 <__vfiprintf_internal>:
 800fad0:	2007883a 	mov	r3,r4
 800fad4:	010200b4 	movhi	r4,2050
 800fad8:	21264804 	addi	r4,r4,-26336
 800fadc:	21000017 	ldw	r4,0(r4)
 800fae0:	2805883a 	mov	r2,r5
 800fae4:	300f883a 	mov	r7,r6
 800fae8:	180b883a 	mov	r5,r3
 800faec:	100d883a 	mov	r6,r2
 800faf0:	800e6ac1 	jmpi	800e6ac <___vfiprintf_internal_r>

0800faf4 <_write_r>:
 800faf4:	defffd04 	addi	sp,sp,-12
 800faf8:	dc000015 	stw	r16,0(sp)
 800fafc:	040200b4 	movhi	r16,2050
 800fb00:	dc400115 	stw	r17,4(sp)
 800fb04:	842d8804 	addi	r16,r16,-18912
 800fb08:	2023883a 	mov	r17,r4
 800fb0c:	2809883a 	mov	r4,r5
 800fb10:	300b883a 	mov	r5,r6
 800fb14:	380d883a 	mov	r6,r7
 800fb18:	dfc00215 	stw	ra,8(sp)
 800fb1c:	80000015 	stw	zero,0(r16)
 800fb20:	801482c0 	call	801482c <write>
 800fb24:	00ffffc4 	movi	r3,-1
 800fb28:	10c00526 	beq	r2,r3,800fb40 <_write_r+0x4c>
 800fb2c:	dfc00217 	ldw	ra,8(sp)
 800fb30:	dc400117 	ldw	r17,4(sp)
 800fb34:	dc000017 	ldw	r16,0(sp)
 800fb38:	dec00304 	addi	sp,sp,12
 800fb3c:	f800283a 	ret
 800fb40:	80c00017 	ldw	r3,0(r16)
 800fb44:	183ff926 	beq	r3,zero,800fb2c <__alt_data_end+0xfc00fb2c>
 800fb48:	88c00015 	stw	r3,0(r17)
 800fb4c:	003ff706 	br	800fb2c <__alt_data_end+0xfc00fb2c>

0800fb50 <_close_r>:
 800fb50:	defffd04 	addi	sp,sp,-12
 800fb54:	dc000015 	stw	r16,0(sp)
 800fb58:	040200b4 	movhi	r16,2050
 800fb5c:	dc400115 	stw	r17,4(sp)
 800fb60:	842d8804 	addi	r16,r16,-18912
 800fb64:	2023883a 	mov	r17,r4
 800fb68:	2809883a 	mov	r4,r5
 800fb6c:	dfc00215 	stw	ra,8(sp)
 800fb70:	80000015 	stw	zero,0(r16)
 800fb74:	8013a140 	call	8013a14 <close>
 800fb78:	00ffffc4 	movi	r3,-1
 800fb7c:	10c00526 	beq	r2,r3,800fb94 <_close_r+0x44>
 800fb80:	dfc00217 	ldw	ra,8(sp)
 800fb84:	dc400117 	ldw	r17,4(sp)
 800fb88:	dc000017 	ldw	r16,0(sp)
 800fb8c:	dec00304 	addi	sp,sp,12
 800fb90:	f800283a 	ret
 800fb94:	80c00017 	ldw	r3,0(r16)
 800fb98:	183ff926 	beq	r3,zero,800fb80 <__alt_data_end+0xfc00fb80>
 800fb9c:	88c00015 	stw	r3,0(r17)
 800fba0:	003ff706 	br	800fb80 <__alt_data_end+0xfc00fb80>

0800fba4 <_calloc_r>:
 800fba4:	defffe04 	addi	sp,sp,-8
 800fba8:	dc000015 	stw	r16,0(sp)
 800fbac:	2021883a 	mov	r16,r4
 800fbb0:	2809883a 	mov	r4,r5
 800fbb4:	300b883a 	mov	r5,r6
 800fbb8:	dfc00115 	stw	ra,4(sp)
 800fbbc:	8002f580 	call	8002f58 <__mulsi3>
 800fbc0:	8009883a 	mov	r4,r16
 800fbc4:	100b883a 	mov	r5,r2
 800fbc8:	80035180 	call	8003518 <_malloc_r>
 800fbcc:	1021883a 	mov	r16,r2
 800fbd0:	10002826 	beq	r2,zero,800fc74 <_calloc_r+0xd0>
 800fbd4:	11bfff17 	ldw	r6,-4(r2)
 800fbd8:	00bfff04 	movi	r2,-4
 800fbdc:	00c00904 	movi	r3,36
 800fbe0:	308c703a 	and	r6,r6,r2
 800fbe4:	308d883a 	add	r6,r6,r2
 800fbe8:	19801436 	bltu	r3,r6,800fc3c <_calloc_r+0x98>
 800fbec:	008004c4 	movi	r2,19
 800fbf0:	11800936 	bltu	r2,r6,800fc18 <_calloc_r+0x74>
 800fbf4:	8005883a 	mov	r2,r16
 800fbf8:	10000015 	stw	zero,0(r2)
 800fbfc:	10000115 	stw	zero,4(r2)
 800fc00:	10000215 	stw	zero,8(r2)
 800fc04:	8005883a 	mov	r2,r16
 800fc08:	dfc00117 	ldw	ra,4(sp)
 800fc0c:	dc000017 	ldw	r16,0(sp)
 800fc10:	dec00204 	addi	sp,sp,8
 800fc14:	f800283a 	ret
 800fc18:	80000015 	stw	zero,0(r16)
 800fc1c:	80000115 	stw	zero,4(r16)
 800fc20:	008006c4 	movi	r2,27
 800fc24:	11800d2e 	bgeu	r2,r6,800fc5c <_calloc_r+0xb8>
 800fc28:	80000215 	stw	zero,8(r16)
 800fc2c:	80000315 	stw	zero,12(r16)
 800fc30:	30c00c26 	beq	r6,r3,800fc64 <_calloc_r+0xc0>
 800fc34:	80800404 	addi	r2,r16,16
 800fc38:	003fef06 	br	800fbf8 <__alt_data_end+0xfc00fbf8>
 800fc3c:	8009883a 	mov	r4,r16
 800fc40:	000b883a 	mov	r5,zero
 800fc44:	8003cc00 	call	8003cc0 <memset>
 800fc48:	8005883a 	mov	r2,r16
 800fc4c:	dfc00117 	ldw	ra,4(sp)
 800fc50:	dc000017 	ldw	r16,0(sp)
 800fc54:	dec00204 	addi	sp,sp,8
 800fc58:	f800283a 	ret
 800fc5c:	80800204 	addi	r2,r16,8
 800fc60:	003fe506 	br	800fbf8 <__alt_data_end+0xfc00fbf8>
 800fc64:	80000415 	stw	zero,16(r16)
 800fc68:	80800604 	addi	r2,r16,24
 800fc6c:	80000515 	stw	zero,20(r16)
 800fc70:	003fe106 	br	800fbf8 <__alt_data_end+0xfc00fbf8>
 800fc74:	0005883a 	mov	r2,zero
 800fc78:	003fe306 	br	800fc08 <__alt_data_end+0xfc00fc08>

0800fc7c <_fclose_r>:
 800fc7c:	28003226 	beq	r5,zero,800fd48 <_fclose_r+0xcc>
 800fc80:	defffc04 	addi	sp,sp,-16
 800fc84:	dc400115 	stw	r17,4(sp)
 800fc88:	2023883a 	mov	r17,r4
 800fc8c:	dc000015 	stw	r16,0(sp)
 800fc90:	dfc00315 	stw	ra,12(sp)
 800fc94:	dc800215 	stw	r18,8(sp)
 800fc98:	2821883a 	mov	r16,r5
 800fc9c:	800a9ec0 	call	800a9ec <__sfp_lock_acquire>
 800fca0:	88000226 	beq	r17,zero,800fcac <_fclose_r+0x30>
 800fca4:	88800e17 	ldw	r2,56(r17)
 800fca8:	10002926 	beq	r2,zero,800fd50 <_fclose_r+0xd4>
 800fcac:	8080030f 	ldh	r2,12(r16)
 800fcb0:	10002226 	beq	r2,zero,800fd3c <_fclose_r+0xc0>
 800fcb4:	8809883a 	mov	r4,r17
 800fcb8:	800b883a 	mov	r5,r16
 800fcbc:	800a4200 	call	800a420 <_fflush_r>
 800fcc0:	1025883a 	mov	r18,r2
 800fcc4:	80800b17 	ldw	r2,44(r16)
 800fcc8:	10000426 	beq	r2,zero,800fcdc <_fclose_r+0x60>
 800fccc:	81400717 	ldw	r5,28(r16)
 800fcd0:	8809883a 	mov	r4,r17
 800fcd4:	103ee83a 	callr	r2
 800fcd8:	10002616 	blt	r2,zero,800fd74 <_fclose_r+0xf8>
 800fcdc:	8080030b 	ldhu	r2,12(r16)
 800fce0:	1080200c 	andi	r2,r2,128
 800fce4:	10001f1e 	bne	r2,zero,800fd64 <_fclose_r+0xe8>
 800fce8:	81400c17 	ldw	r5,48(r16)
 800fcec:	28000526 	beq	r5,zero,800fd04 <_fclose_r+0x88>
 800fcf0:	80801004 	addi	r2,r16,64
 800fcf4:	28800226 	beq	r5,r2,800fd00 <_fclose_r+0x84>
 800fcf8:	8809883a 	mov	r4,r17
 800fcfc:	800ab500 	call	800ab50 <_free_r>
 800fd00:	80000c15 	stw	zero,48(r16)
 800fd04:	81401117 	ldw	r5,68(r16)
 800fd08:	28000326 	beq	r5,zero,800fd18 <_fclose_r+0x9c>
 800fd0c:	8809883a 	mov	r4,r17
 800fd10:	800ab500 	call	800ab50 <_free_r>
 800fd14:	80001115 	stw	zero,68(r16)
 800fd18:	8000030d 	sth	zero,12(r16)
 800fd1c:	800a9f00 	call	800a9f0 <__sfp_lock_release>
 800fd20:	9005883a 	mov	r2,r18
 800fd24:	dfc00317 	ldw	ra,12(sp)
 800fd28:	dc800217 	ldw	r18,8(sp)
 800fd2c:	dc400117 	ldw	r17,4(sp)
 800fd30:	dc000017 	ldw	r16,0(sp)
 800fd34:	dec00404 	addi	sp,sp,16
 800fd38:	f800283a 	ret
 800fd3c:	800a9f00 	call	800a9f0 <__sfp_lock_release>
 800fd40:	0005883a 	mov	r2,zero
 800fd44:	003ff706 	br	800fd24 <__alt_data_end+0xfc00fd24>
 800fd48:	0005883a 	mov	r2,zero
 800fd4c:	f800283a 	ret
 800fd50:	8809883a 	mov	r4,r17
 800fd54:	800a9dc0 	call	800a9dc <__sinit>
 800fd58:	8080030f 	ldh	r2,12(r16)
 800fd5c:	103fd51e 	bne	r2,zero,800fcb4 <__alt_data_end+0xfc00fcb4>
 800fd60:	003ff606 	br	800fd3c <__alt_data_end+0xfc00fd3c>
 800fd64:	81400417 	ldw	r5,16(r16)
 800fd68:	8809883a 	mov	r4,r17
 800fd6c:	800ab500 	call	800ab50 <_free_r>
 800fd70:	003fdd06 	br	800fce8 <__alt_data_end+0xfc00fce8>
 800fd74:	04bfffc4 	movi	r18,-1
 800fd78:	003fd806 	br	800fcdc <__alt_data_end+0xfc00fcdc>

0800fd7c <fclose>:
 800fd7c:	008200b4 	movhi	r2,2050
 800fd80:	10a64804 	addi	r2,r2,-26336
 800fd84:	200b883a 	mov	r5,r4
 800fd88:	11000017 	ldw	r4,0(r2)
 800fd8c:	800fc7c1 	jmpi	800fc7c <_fclose_r>

0800fd90 <_fputwc_r>:
 800fd90:	3080030b 	ldhu	r2,12(r6)
 800fd94:	defff804 	addi	sp,sp,-32
 800fd98:	dcc00415 	stw	r19,16(sp)
 800fd9c:	dc800315 	stw	r18,12(sp)
 800fda0:	dc000115 	stw	r16,4(sp)
 800fda4:	dfc00715 	stw	ra,28(sp)
 800fda8:	dd400615 	stw	r21,24(sp)
 800fdac:	dd000515 	stw	r20,20(sp)
 800fdb0:	dc400215 	stw	r17,8(sp)
 800fdb4:	10c8000c 	andi	r3,r2,8192
 800fdb8:	3021883a 	mov	r16,r6
 800fdbc:	2027883a 	mov	r19,r4
 800fdc0:	2825883a 	mov	r18,r5
 800fdc4:	1800051e 	bne	r3,zero,800fddc <_fputwc_r+0x4c>
 800fdc8:	30c01917 	ldw	r3,100(r6)
 800fdcc:	10880014 	ori	r2,r2,8192
 800fdd0:	3080030d 	sth	r2,12(r6)
 800fdd4:	18880014 	ori	r2,r3,8192
 800fdd8:	30801915 	stw	r2,100(r6)
 800fddc:	800b4dc0 	call	800b4dc <__locale_mb_cur_max>
 800fde0:	00c00044 	movi	r3,1
 800fde4:	10c03e26 	beq	r2,r3,800fee0 <_fputwc_r+0x150>
 800fde8:	9809883a 	mov	r4,r19
 800fdec:	d80b883a 	mov	r5,sp
 800fdf0:	900d883a 	mov	r6,r18
 800fdf4:	81c01704 	addi	r7,r16,92
 800fdf8:	80102400 	call	8010240 <_wcrtomb_r>
 800fdfc:	1029883a 	mov	r20,r2
 800fe00:	00bfffc4 	movi	r2,-1
 800fe04:	a0802026 	beq	r20,r2,800fe88 <_fputwc_r+0xf8>
 800fe08:	d9400003 	ldbu	r5,0(sp)
 800fe0c:	a0001c26 	beq	r20,zero,800fe80 <_fputwc_r+0xf0>
 800fe10:	0023883a 	mov	r17,zero
 800fe14:	05400284 	movi	r21,10
 800fe18:	00000906 	br	800fe40 <_fputwc_r+0xb0>
 800fe1c:	80800017 	ldw	r2,0(r16)
 800fe20:	11400005 	stb	r5,0(r2)
 800fe24:	80c00017 	ldw	r3,0(r16)
 800fe28:	18c00044 	addi	r3,r3,1
 800fe2c:	80c00015 	stw	r3,0(r16)
 800fe30:	8c400044 	addi	r17,r17,1
 800fe34:	dc45883a 	add	r2,sp,r17
 800fe38:	8d00112e 	bgeu	r17,r20,800fe80 <_fputwc_r+0xf0>
 800fe3c:	11400003 	ldbu	r5,0(r2)
 800fe40:	80c00217 	ldw	r3,8(r16)
 800fe44:	18ffffc4 	addi	r3,r3,-1
 800fe48:	80c00215 	stw	r3,8(r16)
 800fe4c:	183ff30e 	bge	r3,zero,800fe1c <__alt_data_end+0xfc00fe1c>
 800fe50:	80800617 	ldw	r2,24(r16)
 800fe54:	18801916 	blt	r3,r2,800febc <_fputwc_r+0x12c>
 800fe58:	80800017 	ldw	r2,0(r16)
 800fe5c:	11400005 	stb	r5,0(r2)
 800fe60:	80800017 	ldw	r2,0(r16)
 800fe64:	10c00003 	ldbu	r3,0(r2)
 800fe68:	10800044 	addi	r2,r2,1
 800fe6c:	1d402326 	beq	r3,r21,800fefc <_fputwc_r+0x16c>
 800fe70:	80800015 	stw	r2,0(r16)
 800fe74:	8c400044 	addi	r17,r17,1
 800fe78:	dc45883a 	add	r2,sp,r17
 800fe7c:	8d3fef36 	bltu	r17,r20,800fe3c <__alt_data_end+0xfc00fe3c>
 800fe80:	9005883a 	mov	r2,r18
 800fe84:	00000406 	br	800fe98 <_fputwc_r+0x108>
 800fe88:	80c0030b 	ldhu	r3,12(r16)
 800fe8c:	a005883a 	mov	r2,r20
 800fe90:	18c01014 	ori	r3,r3,64
 800fe94:	80c0030d 	sth	r3,12(r16)
 800fe98:	dfc00717 	ldw	ra,28(sp)
 800fe9c:	dd400617 	ldw	r21,24(sp)
 800fea0:	dd000517 	ldw	r20,20(sp)
 800fea4:	dcc00417 	ldw	r19,16(sp)
 800fea8:	dc800317 	ldw	r18,12(sp)
 800feac:	dc400217 	ldw	r17,8(sp)
 800feb0:	dc000117 	ldw	r16,4(sp)
 800feb4:	dec00804 	addi	sp,sp,32
 800feb8:	f800283a 	ret
 800febc:	9809883a 	mov	r4,r19
 800fec0:	29403fcc 	andi	r5,r5,255
 800fec4:	800d883a 	mov	r6,r16
 800fec8:	80100d00 	call	80100d0 <__swbuf_r>
 800fecc:	10bfffe0 	cmpeqi	r2,r2,-1
 800fed0:	10803fcc 	andi	r2,r2,255
 800fed4:	103fd626 	beq	r2,zero,800fe30 <__alt_data_end+0xfc00fe30>
 800fed8:	00bfffc4 	movi	r2,-1
 800fedc:	003fee06 	br	800fe98 <__alt_data_end+0xfc00fe98>
 800fee0:	90ffffc4 	addi	r3,r18,-1
 800fee4:	01003f84 	movi	r4,254
 800fee8:	20ffbf36 	bltu	r4,r3,800fde8 <__alt_data_end+0xfc00fde8>
 800feec:	900b883a 	mov	r5,r18
 800fef0:	dc800005 	stb	r18,0(sp)
 800fef4:	1029883a 	mov	r20,r2
 800fef8:	003fc506 	br	800fe10 <__alt_data_end+0xfc00fe10>
 800fefc:	9809883a 	mov	r4,r19
 800ff00:	a80b883a 	mov	r5,r21
 800ff04:	800d883a 	mov	r6,r16
 800ff08:	80100d00 	call	80100d0 <__swbuf_r>
 800ff0c:	10bfffe0 	cmpeqi	r2,r2,-1
 800ff10:	003fef06 	br	800fed0 <__alt_data_end+0xfc00fed0>

0800ff14 <fputwc>:
 800ff14:	defffc04 	addi	sp,sp,-16
 800ff18:	dc000115 	stw	r16,4(sp)
 800ff1c:	040200b4 	movhi	r16,2050
 800ff20:	84264804 	addi	r16,r16,-26336
 800ff24:	dc400215 	stw	r17,8(sp)
 800ff28:	2023883a 	mov	r17,r4
 800ff2c:	81000017 	ldw	r4,0(r16)
 800ff30:	dfc00315 	stw	ra,12(sp)
 800ff34:	280d883a 	mov	r6,r5
 800ff38:	20000626 	beq	r4,zero,800ff54 <fputwc+0x40>
 800ff3c:	20800e17 	ldw	r2,56(r4)
 800ff40:	1000041e 	bne	r2,zero,800ff54 <fputwc+0x40>
 800ff44:	d9400015 	stw	r5,0(sp)
 800ff48:	800a9dc0 	call	800a9dc <__sinit>
 800ff4c:	81000017 	ldw	r4,0(r16)
 800ff50:	d9800017 	ldw	r6,0(sp)
 800ff54:	880b883a 	mov	r5,r17
 800ff58:	dfc00317 	ldw	ra,12(sp)
 800ff5c:	dc400217 	ldw	r17,8(sp)
 800ff60:	dc000117 	ldw	r16,4(sp)
 800ff64:	dec00404 	addi	sp,sp,16
 800ff68:	800fd901 	jmpi	800fd90 <_fputwc_r>

0800ff6c <_fstat_r>:
 800ff6c:	defffd04 	addi	sp,sp,-12
 800ff70:	dc000015 	stw	r16,0(sp)
 800ff74:	040200b4 	movhi	r16,2050
 800ff78:	dc400115 	stw	r17,4(sp)
 800ff7c:	842d8804 	addi	r16,r16,-18912
 800ff80:	2023883a 	mov	r17,r4
 800ff84:	2809883a 	mov	r4,r5
 800ff88:	300b883a 	mov	r5,r6
 800ff8c:	dfc00215 	stw	ra,8(sp)
 800ff90:	80000015 	stw	zero,0(r16)
 800ff94:	8013cd00 	call	8013cd0 <fstat>
 800ff98:	00ffffc4 	movi	r3,-1
 800ff9c:	10c00526 	beq	r2,r3,800ffb4 <_fstat_r+0x48>
 800ffa0:	dfc00217 	ldw	ra,8(sp)
 800ffa4:	dc400117 	ldw	r17,4(sp)
 800ffa8:	dc000017 	ldw	r16,0(sp)
 800ffac:	dec00304 	addi	sp,sp,12
 800ffb0:	f800283a 	ret
 800ffb4:	80c00017 	ldw	r3,0(r16)
 800ffb8:	183ff926 	beq	r3,zero,800ffa0 <__alt_data_end+0xfc00ffa0>
 800ffbc:	88c00015 	stw	r3,0(r17)
 800ffc0:	003ff706 	br	800ffa0 <__alt_data_end+0xfc00ffa0>

0800ffc4 <_isatty_r>:
 800ffc4:	defffd04 	addi	sp,sp,-12
 800ffc8:	dc000015 	stw	r16,0(sp)
 800ffcc:	040200b4 	movhi	r16,2050
 800ffd0:	dc400115 	stw	r17,4(sp)
 800ffd4:	842d8804 	addi	r16,r16,-18912
 800ffd8:	2023883a 	mov	r17,r4
 800ffdc:	2809883a 	mov	r4,r5
 800ffe0:	dfc00215 	stw	ra,8(sp)
 800ffe4:	80000015 	stw	zero,0(r16)
 800ffe8:	8013df80 	call	8013df8 <isatty>
 800ffec:	00ffffc4 	movi	r3,-1
 800fff0:	10c00526 	beq	r2,r3,8010008 <_isatty_r+0x44>
 800fff4:	dfc00217 	ldw	ra,8(sp)
 800fff8:	dc400117 	ldw	r17,4(sp)
 800fffc:	dc000017 	ldw	r16,0(sp)
 8010000:	dec00304 	addi	sp,sp,12
 8010004:	f800283a 	ret
 8010008:	80c00017 	ldw	r3,0(r16)
 801000c:	183ff926 	beq	r3,zero,800fff4 <__alt_data_end+0xfc00fff4>
 8010010:	88c00015 	stw	r3,0(r17)
 8010014:	003ff706 	br	800fff4 <__alt_data_end+0xfc00fff4>

08010018 <_lseek_r>:
 8010018:	defffd04 	addi	sp,sp,-12
 801001c:	dc000015 	stw	r16,0(sp)
 8010020:	040200b4 	movhi	r16,2050
 8010024:	dc400115 	stw	r17,4(sp)
 8010028:	842d8804 	addi	r16,r16,-18912
 801002c:	2023883a 	mov	r17,r4
 8010030:	2809883a 	mov	r4,r5
 8010034:	300b883a 	mov	r5,r6
 8010038:	380d883a 	mov	r6,r7
 801003c:	dfc00215 	stw	ra,8(sp)
 8010040:	80000015 	stw	zero,0(r16)
 8010044:	80141580 	call	8014158 <lseek>
 8010048:	00ffffc4 	movi	r3,-1
 801004c:	10c00526 	beq	r2,r3,8010064 <_lseek_r+0x4c>
 8010050:	dfc00217 	ldw	ra,8(sp)
 8010054:	dc400117 	ldw	r17,4(sp)
 8010058:	dc000017 	ldw	r16,0(sp)
 801005c:	dec00304 	addi	sp,sp,12
 8010060:	f800283a 	ret
 8010064:	80c00017 	ldw	r3,0(r16)
 8010068:	183ff926 	beq	r3,zero,8010050 <__alt_data_end+0xfc010050>
 801006c:	88c00015 	stw	r3,0(r17)
 8010070:	003ff706 	br	8010050 <__alt_data_end+0xfc010050>

08010074 <_read_r>:
 8010074:	defffd04 	addi	sp,sp,-12
 8010078:	dc000015 	stw	r16,0(sp)
 801007c:	040200b4 	movhi	r16,2050
 8010080:	dc400115 	stw	r17,4(sp)
 8010084:	842d8804 	addi	r16,r16,-18912
 8010088:	2023883a 	mov	r17,r4
 801008c:	2809883a 	mov	r4,r5
 8010090:	300b883a 	mov	r5,r6
 8010094:	380d883a 	mov	r6,r7
 8010098:	dfc00215 	stw	ra,8(sp)
 801009c:	80000015 	stw	zero,0(r16)
 80100a0:	80145a80 	call	80145a8 <read>
 80100a4:	00ffffc4 	movi	r3,-1
 80100a8:	10c00526 	beq	r2,r3,80100c0 <_read_r+0x4c>
 80100ac:	dfc00217 	ldw	ra,8(sp)
 80100b0:	dc400117 	ldw	r17,4(sp)
 80100b4:	dc000017 	ldw	r16,0(sp)
 80100b8:	dec00304 	addi	sp,sp,12
 80100bc:	f800283a 	ret
 80100c0:	80c00017 	ldw	r3,0(r16)
 80100c4:	183ff926 	beq	r3,zero,80100ac <__alt_data_end+0xfc0100ac>
 80100c8:	88c00015 	stw	r3,0(r17)
 80100cc:	003ff706 	br	80100ac <__alt_data_end+0xfc0100ac>

080100d0 <__swbuf_r>:
 80100d0:	defffc04 	addi	sp,sp,-16
 80100d4:	dc800215 	stw	r18,8(sp)
 80100d8:	dc400115 	stw	r17,4(sp)
 80100dc:	dc000015 	stw	r16,0(sp)
 80100e0:	dfc00315 	stw	ra,12(sp)
 80100e4:	2025883a 	mov	r18,r4
 80100e8:	2823883a 	mov	r17,r5
 80100ec:	3021883a 	mov	r16,r6
 80100f0:	20000226 	beq	r4,zero,80100fc <__swbuf_r+0x2c>
 80100f4:	20800e17 	ldw	r2,56(r4)
 80100f8:	10004126 	beq	r2,zero,8010200 <__swbuf_r+0x130>
 80100fc:	80c00617 	ldw	r3,24(r16)
 8010100:	8180030b 	ldhu	r6,12(r16)
 8010104:	80c00215 	stw	r3,8(r16)
 8010108:	30c0020c 	andi	r3,r6,8
 801010c:	18003526 	beq	r3,zero,80101e4 <__swbuf_r+0x114>
 8010110:	80c00417 	ldw	r3,16(r16)
 8010114:	18003326 	beq	r3,zero,80101e4 <__swbuf_r+0x114>
 8010118:	3088000c 	andi	r2,r6,8192
 801011c:	8c403fcc 	andi	r17,r17,255
 8010120:	10001726 	beq	r2,zero,8010180 <__swbuf_r+0xb0>
 8010124:	80800017 	ldw	r2,0(r16)
 8010128:	81000517 	ldw	r4,20(r16)
 801012c:	10c7c83a 	sub	r3,r2,r3
 8010130:	19001d0e 	bge	r3,r4,80101a8 <__swbuf_r+0xd8>
 8010134:	18c00044 	addi	r3,r3,1
 8010138:	81400217 	ldw	r5,8(r16)
 801013c:	11000044 	addi	r4,r2,1
 8010140:	81000015 	stw	r4,0(r16)
 8010144:	297fffc4 	addi	r5,r5,-1
 8010148:	81400215 	stw	r5,8(r16)
 801014c:	14400005 	stb	r17,0(r2)
 8010150:	80800517 	ldw	r2,20(r16)
 8010154:	10c01d26 	beq	r2,r3,80101cc <__swbuf_r+0xfc>
 8010158:	8080030b 	ldhu	r2,12(r16)
 801015c:	1080004c 	andi	r2,r2,1
 8010160:	1000181e 	bne	r2,zero,80101c4 <__swbuf_r+0xf4>
 8010164:	8805883a 	mov	r2,r17
 8010168:	dfc00317 	ldw	ra,12(sp)
 801016c:	dc800217 	ldw	r18,8(sp)
 8010170:	dc400117 	ldw	r17,4(sp)
 8010174:	dc000017 	ldw	r16,0(sp)
 8010178:	dec00404 	addi	sp,sp,16
 801017c:	f800283a 	ret
 8010180:	81001917 	ldw	r4,100(r16)
 8010184:	00b7ffc4 	movi	r2,-8193
 8010188:	31880014 	ori	r6,r6,8192
 801018c:	2084703a 	and	r2,r4,r2
 8010190:	80801915 	stw	r2,100(r16)
 8010194:	80800017 	ldw	r2,0(r16)
 8010198:	81000517 	ldw	r4,20(r16)
 801019c:	8180030d 	sth	r6,12(r16)
 80101a0:	10c7c83a 	sub	r3,r2,r3
 80101a4:	193fe316 	blt	r3,r4,8010134 <__alt_data_end+0xfc010134>
 80101a8:	9009883a 	mov	r4,r18
 80101ac:	800b883a 	mov	r5,r16
 80101b0:	800a4200 	call	800a420 <_fflush_r>
 80101b4:	1000091e 	bne	r2,zero,80101dc <__swbuf_r+0x10c>
 80101b8:	80800017 	ldw	r2,0(r16)
 80101bc:	00c00044 	movi	r3,1
 80101c0:	003fdd06 	br	8010138 <__alt_data_end+0xfc010138>
 80101c4:	00800284 	movi	r2,10
 80101c8:	88bfe61e 	bne	r17,r2,8010164 <__alt_data_end+0xfc010164>
 80101cc:	9009883a 	mov	r4,r18
 80101d0:	800b883a 	mov	r5,r16
 80101d4:	800a4200 	call	800a420 <_fflush_r>
 80101d8:	103fe226 	beq	r2,zero,8010164 <__alt_data_end+0xfc010164>
 80101dc:	00bfffc4 	movi	r2,-1
 80101e0:	003fe106 	br	8010168 <__alt_data_end+0xfc010168>
 80101e4:	9009883a 	mov	r4,r18
 80101e8:	800b883a 	mov	r5,r16
 80101ec:	800880c0 	call	800880c <__swsetup_r>
 80101f0:	1000051e 	bne	r2,zero,8010208 <__swbuf_r+0x138>
 80101f4:	8180030b 	ldhu	r6,12(r16)
 80101f8:	80c00417 	ldw	r3,16(r16)
 80101fc:	003fc606 	br	8010118 <__alt_data_end+0xfc010118>
 8010200:	800a9dc0 	call	800a9dc <__sinit>
 8010204:	003fbd06 	br	80100fc <__alt_data_end+0xfc0100fc>
 8010208:	80c0030b 	ldhu	r3,12(r16)
 801020c:	00bfffc4 	movi	r2,-1
 8010210:	18c01014 	ori	r3,r3,64
 8010214:	80c0030d 	sth	r3,12(r16)
 8010218:	00c00244 	movi	r3,9
 801021c:	90c00015 	stw	r3,0(r18)
 8010220:	003fd106 	br	8010168 <__alt_data_end+0xfc010168>

08010224 <__swbuf>:
 8010224:	00c200b4 	movhi	r3,2050
 8010228:	18e64804 	addi	r3,r3,-26336
 801022c:	2005883a 	mov	r2,r4
 8010230:	19000017 	ldw	r4,0(r3)
 8010234:	280d883a 	mov	r6,r5
 8010238:	100b883a 	mov	r5,r2
 801023c:	80100d01 	jmpi	80100d0 <__swbuf_r>

08010240 <_wcrtomb_r>:
 8010240:	defff604 	addi	sp,sp,-40
 8010244:	008200b4 	movhi	r2,2050
 8010248:	dc800815 	stw	r18,32(sp)
 801024c:	dc400715 	stw	r17,28(sp)
 8010250:	dc000615 	stw	r16,24(sp)
 8010254:	10a64c04 	addi	r2,r2,-26320
 8010258:	dfc00915 	stw	ra,36(sp)
 801025c:	2021883a 	mov	r16,r4
 8010260:	3823883a 	mov	r17,r7
 8010264:	14800017 	ldw	r18,0(r2)
 8010268:	28001426 	beq	r5,zero,80102bc <_wcrtomb_r+0x7c>
 801026c:	d9400415 	stw	r5,16(sp)
 8010270:	d9800515 	stw	r6,20(sp)
 8010274:	800b4d00 	call	800b4d0 <__locale_charset>
 8010278:	d9400417 	ldw	r5,16(sp)
 801027c:	d9800517 	ldw	r6,20(sp)
 8010280:	8009883a 	mov	r4,r16
 8010284:	dc400015 	stw	r17,0(sp)
 8010288:	100f883a 	mov	r7,r2
 801028c:	903ee83a 	callr	r18
 8010290:	00ffffc4 	movi	r3,-1
 8010294:	10c0031e 	bne	r2,r3,80102a4 <_wcrtomb_r+0x64>
 8010298:	88000015 	stw	zero,0(r17)
 801029c:	00c02284 	movi	r3,138
 80102a0:	80c00015 	stw	r3,0(r16)
 80102a4:	dfc00917 	ldw	ra,36(sp)
 80102a8:	dc800817 	ldw	r18,32(sp)
 80102ac:	dc400717 	ldw	r17,28(sp)
 80102b0:	dc000617 	ldw	r16,24(sp)
 80102b4:	dec00a04 	addi	sp,sp,40
 80102b8:	f800283a 	ret
 80102bc:	800b4d00 	call	800b4d0 <__locale_charset>
 80102c0:	8009883a 	mov	r4,r16
 80102c4:	dc400015 	stw	r17,0(sp)
 80102c8:	d9400104 	addi	r5,sp,4
 80102cc:	000d883a 	mov	r6,zero
 80102d0:	100f883a 	mov	r7,r2
 80102d4:	903ee83a 	callr	r18
 80102d8:	003fed06 	br	8010290 <__alt_data_end+0xfc010290>

080102dc <wcrtomb>:
 80102dc:	defff504 	addi	sp,sp,-44
 80102e0:	dc400515 	stw	r17,20(sp)
 80102e4:	dc000415 	stw	r16,16(sp)
 80102e8:	dfc00a15 	stw	ra,40(sp)
 80102ec:	dd400915 	stw	r21,36(sp)
 80102f0:	dd000815 	stw	r20,32(sp)
 80102f4:	dcc00715 	stw	r19,28(sp)
 80102f8:	dc800615 	stw	r18,24(sp)
 80102fc:	2021883a 	mov	r16,r4
 8010300:	3023883a 	mov	r17,r6
 8010304:	20001d26 	beq	r4,zero,801037c <wcrtomb+0xa0>
 8010308:	048200b4 	movhi	r18,2050
 801030c:	94a64804 	addi	r18,r18,-26336
 8010310:	008200b4 	movhi	r2,2050
 8010314:	95400017 	ldw	r21,0(r18)
 8010318:	10a64c04 	addi	r2,r2,-26320
 801031c:	15000017 	ldw	r20,0(r2)
 8010320:	2827883a 	mov	r19,r5
 8010324:	800b4d00 	call	800b4d0 <__locale_charset>
 8010328:	a809883a 	mov	r4,r21
 801032c:	dc400015 	stw	r17,0(sp)
 8010330:	800b883a 	mov	r5,r16
 8010334:	980d883a 	mov	r6,r19
 8010338:	100f883a 	mov	r7,r2
 801033c:	a03ee83a 	callr	r20
 8010340:	00ffffc4 	movi	r3,-1
 8010344:	10c0041e 	bne	r2,r3,8010358 <wcrtomb+0x7c>
 8010348:	90c00017 	ldw	r3,0(r18)
 801034c:	01002284 	movi	r4,138
 8010350:	88000015 	stw	zero,0(r17)
 8010354:	19000015 	stw	r4,0(r3)
 8010358:	dfc00a17 	ldw	ra,40(sp)
 801035c:	dd400917 	ldw	r21,36(sp)
 8010360:	dd000817 	ldw	r20,32(sp)
 8010364:	dcc00717 	ldw	r19,28(sp)
 8010368:	dc800617 	ldw	r18,24(sp)
 801036c:	dc400517 	ldw	r17,20(sp)
 8010370:	dc000417 	ldw	r16,16(sp)
 8010374:	dec00b04 	addi	sp,sp,44
 8010378:	f800283a 	ret
 801037c:	048200b4 	movhi	r18,2050
 8010380:	94a64804 	addi	r18,r18,-26336
 8010384:	008200b4 	movhi	r2,2050
 8010388:	94c00017 	ldw	r19,0(r18)
 801038c:	10a64c04 	addi	r2,r2,-26320
 8010390:	14000017 	ldw	r16,0(r2)
 8010394:	800b4d00 	call	800b4d0 <__locale_charset>
 8010398:	9809883a 	mov	r4,r19
 801039c:	dc400015 	stw	r17,0(sp)
 80103a0:	d9400104 	addi	r5,sp,4
 80103a4:	000d883a 	mov	r6,zero
 80103a8:	100f883a 	mov	r7,r2
 80103ac:	803ee83a 	callr	r16
 80103b0:	003fe306 	br	8010340 <__alt_data_end+0xfc010340>

080103b4 <__ascii_wctomb>:
 80103b4:	28000526 	beq	r5,zero,80103cc <__ascii_wctomb+0x18>
 80103b8:	00803fc4 	movi	r2,255
 80103bc:	11800536 	bltu	r2,r6,80103d4 <__ascii_wctomb+0x20>
 80103c0:	29800005 	stb	r6,0(r5)
 80103c4:	00800044 	movi	r2,1
 80103c8:	f800283a 	ret
 80103cc:	0005883a 	mov	r2,zero
 80103d0:	f800283a 	ret
 80103d4:	00802284 	movi	r2,138
 80103d8:	20800015 	stw	r2,0(r4)
 80103dc:	00bfffc4 	movi	r2,-1
 80103e0:	f800283a 	ret

080103e4 <_wctomb_r>:
 80103e4:	008200b4 	movhi	r2,2050
 80103e8:	defff904 	addi	sp,sp,-28
 80103ec:	10a64c04 	addi	r2,r2,-26320
 80103f0:	dfc00615 	stw	ra,24(sp)
 80103f4:	dc400515 	stw	r17,20(sp)
 80103f8:	dc000415 	stw	r16,16(sp)
 80103fc:	3823883a 	mov	r17,r7
 8010400:	14000017 	ldw	r16,0(r2)
 8010404:	d9000115 	stw	r4,4(sp)
 8010408:	d9400215 	stw	r5,8(sp)
 801040c:	d9800315 	stw	r6,12(sp)
 8010410:	800b4d00 	call	800b4d0 <__locale_charset>
 8010414:	d9000117 	ldw	r4,4(sp)
 8010418:	d9400217 	ldw	r5,8(sp)
 801041c:	d9800317 	ldw	r6,12(sp)
 8010420:	dc400015 	stw	r17,0(sp)
 8010424:	100f883a 	mov	r7,r2
 8010428:	803ee83a 	callr	r16
 801042c:	dfc00617 	ldw	ra,24(sp)
 8010430:	dc400517 	ldw	r17,20(sp)
 8010434:	dc000417 	ldw	r16,16(sp)
 8010438:	dec00704 	addi	sp,sp,28
 801043c:	f800283a 	ret

08010440 <__udivdi3>:
 8010440:	defff504 	addi	sp,sp,-44
 8010444:	dcc00415 	stw	r19,16(sp)
 8010448:	dc000115 	stw	r16,4(sp)
 801044c:	dfc00a15 	stw	ra,40(sp)
 8010450:	df000915 	stw	fp,36(sp)
 8010454:	ddc00815 	stw	r23,32(sp)
 8010458:	dd800715 	stw	r22,28(sp)
 801045c:	dd400615 	stw	r21,24(sp)
 8010460:	dd000515 	stw	r20,20(sp)
 8010464:	dc800315 	stw	r18,12(sp)
 8010468:	dc400215 	stw	r17,8(sp)
 801046c:	2027883a 	mov	r19,r4
 8010470:	2821883a 	mov	r16,r5
 8010474:	3800471e 	bne	r7,zero,8010594 <__udivdi3+0x154>
 8010478:	3025883a 	mov	r18,r6
 801047c:	2023883a 	mov	r17,r4
 8010480:	2980592e 	bgeu	r5,r6,80105e8 <__udivdi3+0x1a8>
 8010484:	00bfffd4 	movui	r2,65535
 8010488:	2829883a 	mov	r20,r5
 801048c:	1180b236 	bltu	r2,r6,8010758 <__udivdi3+0x318>
 8010490:	00803fc4 	movi	r2,255
 8010494:	1181622e 	bgeu	r2,r6,8010a20 <__udivdi3+0x5e0>
 8010498:	00800204 	movi	r2,8
 801049c:	1007883a 	mov	r3,r2
 80104a0:	3084d83a 	srl	r2,r6,r2
 80104a4:	01020074 	movhi	r4,2049
 80104a8:	211ed904 	addi	r4,r4,31588
 80104ac:	2085883a 	add	r2,r4,r2
 80104b0:	11000003 	ldbu	r4,0(r2)
 80104b4:	20c9883a 	add	r4,r4,r3
 80104b8:	00c00804 	movi	r3,32
 80104bc:	1907c83a 	sub	r3,r3,r4
 80104c0:	18000526 	beq	r3,zero,80104d8 <__udivdi3+0x98>
 80104c4:	80e0983a 	sll	r16,r16,r3
 80104c8:	9908d83a 	srl	r4,r19,r4
 80104cc:	30e4983a 	sll	r18,r6,r3
 80104d0:	98e2983a 	sll	r17,r19,r3
 80104d4:	8128b03a 	or	r20,r16,r4
 80104d8:	902ad43a 	srli	r21,r18,16
 80104dc:	a009883a 	mov	r4,r20
 80104e0:	95bfffcc 	andi	r22,r18,65535
 80104e4:	a80b883a 	mov	r5,r21
 80104e8:	80111c00 	call	80111c0 <__umodsi3>
 80104ec:	a009883a 	mov	r4,r20
 80104f0:	a80b883a 	mov	r5,r21
 80104f4:	102f883a 	mov	r23,r2
 80104f8:	80111b80 	call	80111b8 <__udivsi3>
 80104fc:	1009883a 	mov	r4,r2
 8010500:	b00b883a 	mov	r5,r22
 8010504:	1021883a 	mov	r16,r2
 8010508:	8002f580 	call	8002f58 <__mulsi3>
 801050c:	b82e943a 	slli	r23,r23,16
 8010510:	8808d43a 	srli	r4,r17,16
 8010514:	b906b03a 	or	r3,r23,r4
 8010518:	1880052e 	bgeu	r3,r2,8010530 <__udivdi3+0xf0>
 801051c:	1c87883a 	add	r3,r3,r18
 8010520:	813fffc4 	addi	r4,r16,-1
 8010524:	1c800136 	bltu	r3,r18,801052c <__udivdi3+0xec>
 8010528:	18815236 	bltu	r3,r2,8010a74 <__udivdi3+0x634>
 801052c:	2021883a 	mov	r16,r4
 8010530:	18a7c83a 	sub	r19,r3,r2
 8010534:	9809883a 	mov	r4,r19
 8010538:	a80b883a 	mov	r5,r21
 801053c:	80111c00 	call	80111c0 <__umodsi3>
 8010540:	1029883a 	mov	r20,r2
 8010544:	9809883a 	mov	r4,r19
 8010548:	a80b883a 	mov	r5,r21
 801054c:	a028943a 	slli	r20,r20,16
 8010550:	80111b80 	call	80111b8 <__udivsi3>
 8010554:	1009883a 	mov	r4,r2
 8010558:	b00b883a 	mov	r5,r22
 801055c:	8c7fffcc 	andi	r17,r17,65535
 8010560:	1027883a 	mov	r19,r2
 8010564:	a462b03a 	or	r17,r20,r17
 8010568:	8002f580 	call	8002f58 <__mulsi3>
 801056c:	8880052e 	bgeu	r17,r2,8010584 <__udivdi3+0x144>
 8010570:	8ca3883a 	add	r17,r17,r18
 8010574:	98ffffc4 	addi	r3,r19,-1
 8010578:	8c811036 	bltu	r17,r18,80109bc <__udivdi3+0x57c>
 801057c:	88810f2e 	bgeu	r17,r2,80109bc <__udivdi3+0x57c>
 8010580:	9cffff84 	addi	r19,r19,-2
 8010584:	8020943a 	slli	r16,r16,16
 8010588:	0007883a 	mov	r3,zero
 801058c:	9c04b03a 	or	r2,r19,r16
 8010590:	00006006 	br	8010714 <__udivdi3+0x2d4>
 8010594:	29c05d36 	bltu	r5,r7,801070c <__udivdi3+0x2cc>
 8010598:	00bfffd4 	movui	r2,65535
 801059c:	11c0692e 	bgeu	r2,r7,8010744 <__udivdi3+0x304>
 80105a0:	00804034 	movhi	r2,256
 80105a4:	10bfffc4 	addi	r2,r2,-1
 80105a8:	11c10e2e 	bgeu	r2,r7,80109e4 <__udivdi3+0x5a4>
 80105ac:	01400604 	movi	r5,24
 80105b0:	2811883a 	mov	r8,r5
 80105b4:	394ad83a 	srl	r5,r7,r5
 80105b8:	00820074 	movhi	r2,2049
 80105bc:	109ed904 	addi	r2,r2,31588
 80105c0:	114b883a 	add	r5,r2,r5
 80105c4:	29400003 	ldbu	r5,0(r5)
 80105c8:	00c00804 	movi	r3,32
 80105cc:	2a0b883a 	add	r5,r5,r8
 80105d0:	196fc83a 	sub	r23,r3,r5
 80105d4:	b8006b1e 	bne	r23,zero,8010784 <__udivdi3+0x344>
 80105d8:	3c011436 	bltu	r7,r16,8010a2c <__udivdi3+0x5ec>
 80105dc:	9985403a 	cmpgeu	r2,r19,r6
 80105e0:	0007883a 	mov	r3,zero
 80105e4:	00004b06 	br	8010714 <__udivdi3+0x2d4>
 80105e8:	3000041e 	bne	r6,zero,80105fc <__udivdi3+0x1bc>
 80105ec:	01000044 	movi	r4,1
 80105f0:	000b883a 	mov	r5,zero
 80105f4:	80111b80 	call	80111b8 <__udivsi3>
 80105f8:	1025883a 	mov	r18,r2
 80105fc:	00bfffd4 	movui	r2,65535
 8010600:	14805b2e 	bgeu	r2,r18,8010770 <__udivdi3+0x330>
 8010604:	00804034 	movhi	r2,256
 8010608:	10bfffc4 	addi	r2,r2,-1
 801060c:	1480fe2e 	bgeu	r2,r18,8010a08 <__udivdi3+0x5c8>
 8010610:	00800604 	movi	r2,24
 8010614:	1007883a 	mov	r3,r2
 8010618:	9084d83a 	srl	r2,r18,r2
 801061c:	01020074 	movhi	r4,2049
 8010620:	211ed904 	addi	r4,r4,31588
 8010624:	2085883a 	add	r2,r4,r2
 8010628:	11800003 	ldbu	r6,0(r2)
 801062c:	01c00804 	movi	r7,32
 8010630:	30c7883a 	add	r3,r6,r3
 8010634:	38cfc83a 	sub	r7,r7,r3
 8010638:	3800a71e 	bne	r7,zero,80108d8 <__udivdi3+0x498>
 801063c:	9028d43a 	srli	r20,r18,16
 8010640:	84a1c83a 	sub	r16,r16,r18
 8010644:	957fffcc 	andi	r21,r18,65535
 8010648:	00c00044 	movi	r3,1
 801064c:	8009883a 	mov	r4,r16
 8010650:	a00b883a 	mov	r5,r20
 8010654:	d8c00015 	stw	r3,0(sp)
 8010658:	80111c00 	call	80111c0 <__umodsi3>
 801065c:	8009883a 	mov	r4,r16
 8010660:	a00b883a 	mov	r5,r20
 8010664:	102d883a 	mov	r22,r2
 8010668:	80111b80 	call	80111b8 <__udivsi3>
 801066c:	1009883a 	mov	r4,r2
 8010670:	a80b883a 	mov	r5,r21
 8010674:	1021883a 	mov	r16,r2
 8010678:	8002f580 	call	8002f58 <__mulsi3>
 801067c:	b02c943a 	slli	r22,r22,16
 8010680:	880ed43a 	srli	r7,r17,16
 8010684:	d8c00017 	ldw	r3,0(sp)
 8010688:	b1ccb03a 	or	r6,r22,r7
 801068c:	3080052e 	bgeu	r6,r2,80106a4 <__udivdi3+0x264>
 8010690:	348d883a 	add	r6,r6,r18
 8010694:	813fffc4 	addi	r4,r16,-1
 8010698:	34800136 	bltu	r6,r18,80106a0 <__udivdi3+0x260>
 801069c:	3080f236 	bltu	r6,r2,8010a68 <__udivdi3+0x628>
 80106a0:	2021883a 	mov	r16,r4
 80106a4:	30a7c83a 	sub	r19,r6,r2
 80106a8:	9809883a 	mov	r4,r19
 80106ac:	a00b883a 	mov	r5,r20
 80106b0:	d8c00015 	stw	r3,0(sp)
 80106b4:	80111c00 	call	80111c0 <__umodsi3>
 80106b8:	102d883a 	mov	r22,r2
 80106bc:	9809883a 	mov	r4,r19
 80106c0:	a00b883a 	mov	r5,r20
 80106c4:	b02c943a 	slli	r22,r22,16
 80106c8:	80111b80 	call	80111b8 <__udivsi3>
 80106cc:	1009883a 	mov	r4,r2
 80106d0:	a80b883a 	mov	r5,r21
 80106d4:	8c7fffcc 	andi	r17,r17,65535
 80106d8:	1027883a 	mov	r19,r2
 80106dc:	b462b03a 	or	r17,r22,r17
 80106e0:	8002f580 	call	8002f58 <__mulsi3>
 80106e4:	d8c00017 	ldw	r3,0(sp)
 80106e8:	8880052e 	bgeu	r17,r2,8010700 <__udivdi3+0x2c0>
 80106ec:	8ca3883a 	add	r17,r17,r18
 80106f0:	993fffc4 	addi	r4,r19,-1
 80106f4:	8c80af36 	bltu	r17,r18,80109b4 <__udivdi3+0x574>
 80106f8:	8880ae2e 	bgeu	r17,r2,80109b4 <__udivdi3+0x574>
 80106fc:	9cffff84 	addi	r19,r19,-2
 8010700:	8020943a 	slli	r16,r16,16
 8010704:	9c04b03a 	or	r2,r19,r16
 8010708:	00000206 	br	8010714 <__udivdi3+0x2d4>
 801070c:	0007883a 	mov	r3,zero
 8010710:	0005883a 	mov	r2,zero
 8010714:	dfc00a17 	ldw	ra,40(sp)
 8010718:	df000917 	ldw	fp,36(sp)
 801071c:	ddc00817 	ldw	r23,32(sp)
 8010720:	dd800717 	ldw	r22,28(sp)
 8010724:	dd400617 	ldw	r21,24(sp)
 8010728:	dd000517 	ldw	r20,20(sp)
 801072c:	dcc00417 	ldw	r19,16(sp)
 8010730:	dc800317 	ldw	r18,12(sp)
 8010734:	dc400217 	ldw	r17,8(sp)
 8010738:	dc000117 	ldw	r16,4(sp)
 801073c:	dec00b04 	addi	sp,sp,44
 8010740:	f800283a 	ret
 8010744:	00803fc4 	movi	r2,255
 8010748:	11c0a92e 	bgeu	r2,r7,80109f0 <__udivdi3+0x5b0>
 801074c:	01400204 	movi	r5,8
 8010750:	2811883a 	mov	r8,r5
 8010754:	003f9706 	br	80105b4 <__alt_data_end+0xfc0105b4>
 8010758:	00804034 	movhi	r2,256
 801075c:	10bfffc4 	addi	r2,r2,-1
 8010760:	1180a62e 	bgeu	r2,r6,80109fc <__udivdi3+0x5bc>
 8010764:	00800604 	movi	r2,24
 8010768:	1007883a 	mov	r3,r2
 801076c:	003f4c06 	br	80104a0 <__alt_data_end+0xfc0104a0>
 8010770:	00803fc4 	movi	r2,255
 8010774:	1480a72e 	bgeu	r2,r18,8010a14 <__udivdi3+0x5d4>
 8010778:	00800204 	movi	r2,8
 801077c:	1007883a 	mov	r3,r2
 8010780:	003fa506 	br	8010618 <__alt_data_end+0xfc010618>
 8010784:	3178d83a 	srl	fp,r6,r5
 8010788:	3dce983a 	sll	r7,r7,r23
 801078c:	8168d83a 	srl	r20,r16,r5
 8010790:	9950d83a 	srl	r8,r19,r5
 8010794:	3f38b03a 	or	fp,r7,fp
 8010798:	e024d43a 	srli	r18,fp,16
 801079c:	85e0983a 	sll	r16,r16,r23
 80107a0:	a009883a 	mov	r4,r20
 80107a4:	900b883a 	mov	r5,r18
 80107a8:	8220b03a 	or	r16,r16,r8
 80107ac:	35ea983a 	sll	r21,r6,r23
 80107b0:	80111c00 	call	80111c0 <__umodsi3>
 80107b4:	a009883a 	mov	r4,r20
 80107b8:	900b883a 	mov	r5,r18
 80107bc:	1023883a 	mov	r17,r2
 80107c0:	e5bfffcc 	andi	r22,fp,65535
 80107c4:	80111b80 	call	80111b8 <__udivsi3>
 80107c8:	1009883a 	mov	r4,r2
 80107cc:	b00b883a 	mov	r5,r22
 80107d0:	1029883a 	mov	r20,r2
 80107d4:	8002f580 	call	8002f58 <__mulsi3>
 80107d8:	8806943a 	slli	r3,r17,16
 80107dc:	8014d43a 	srli	r10,r16,16
 80107e0:	1a92b03a 	or	r9,r3,r10
 80107e4:	4880042e 	bgeu	r9,r2,80107f8 <__udivdi3+0x3b8>
 80107e8:	4f13883a 	add	r9,r9,fp
 80107ec:	a0ffffc4 	addi	r3,r20,-1
 80107f0:	4f00952e 	bgeu	r9,fp,8010a48 <__udivdi3+0x608>
 80107f4:	1829883a 	mov	r20,r3
 80107f8:	48a3c83a 	sub	r17,r9,r2
 80107fc:	8809883a 	mov	r4,r17
 8010800:	900b883a 	mov	r5,r18
 8010804:	80111c00 	call	80111c0 <__umodsi3>
 8010808:	8809883a 	mov	r4,r17
 801080c:	900b883a 	mov	r5,r18
 8010810:	d8800015 	stw	r2,0(sp)
 8010814:	80111b80 	call	80111b8 <__udivsi3>
 8010818:	1009883a 	mov	r4,r2
 801081c:	b00b883a 	mov	r5,r22
 8010820:	1023883a 	mov	r17,r2
 8010824:	8002f580 	call	8002f58 <__mulsi3>
 8010828:	d8c00017 	ldw	r3,0(sp)
 801082c:	823fffcc 	andi	r8,r16,65535
 8010830:	1806943a 	slli	r3,r3,16
 8010834:	1a20b03a 	or	r16,r3,r8
 8010838:	8080042e 	bgeu	r16,r2,801084c <__udivdi3+0x40c>
 801083c:	8721883a 	add	r16,r16,fp
 8010840:	88ffffc4 	addi	r3,r17,-1
 8010844:	87007c2e 	bgeu	r16,fp,8010a38 <__udivdi3+0x5f8>
 8010848:	1823883a 	mov	r17,r3
 801084c:	a028943a 	slli	r20,r20,16
 8010850:	acbfffcc 	andi	r18,r21,65535
 8010854:	900b883a 	mov	r5,r18
 8010858:	8d28b03a 	or	r20,r17,r20
 801085c:	a022d43a 	srli	r17,r20,16
 8010860:	a5bfffcc 	andi	r22,r20,65535
 8010864:	b009883a 	mov	r4,r22
 8010868:	a82ad43a 	srli	r21,r21,16
 801086c:	80a1c83a 	sub	r16,r16,r2
 8010870:	8002f580 	call	8002f58 <__mulsi3>
 8010874:	8809883a 	mov	r4,r17
 8010878:	900b883a 	mov	r5,r18
 801087c:	1039883a 	mov	fp,r2
 8010880:	8002f580 	call	8002f58 <__mulsi3>
 8010884:	8809883a 	mov	r4,r17
 8010888:	a80b883a 	mov	r5,r21
 801088c:	1025883a 	mov	r18,r2
 8010890:	8002f580 	call	8002f58 <__mulsi3>
 8010894:	b009883a 	mov	r4,r22
 8010898:	a80b883a 	mov	r5,r21
 801089c:	1023883a 	mov	r17,r2
 80108a0:	8002f580 	call	8002f58 <__mulsi3>
 80108a4:	e006d43a 	srli	r3,fp,16
 80108a8:	9085883a 	add	r2,r18,r2
 80108ac:	10c7883a 	add	r3,r2,r3
 80108b0:	1c80022e 	bgeu	r3,r18,80108bc <__udivdi3+0x47c>
 80108b4:	00800074 	movhi	r2,1
 80108b8:	88a3883a 	add	r17,r17,r2
 80108bc:	1808d43a 	srli	r4,r3,16
 80108c0:	8909883a 	add	r4,r17,r4
 80108c4:	81004436 	bltu	r16,r4,80109d8 <__udivdi3+0x598>
 80108c8:	81003e26 	beq	r16,r4,80109c4 <__udivdi3+0x584>
 80108cc:	a005883a 	mov	r2,r20
 80108d0:	0007883a 	mov	r3,zero
 80108d4:	003f8f06 	br	8010714 <__alt_data_end+0xfc010714>
 80108d8:	91e4983a 	sll	r18,r18,r7
 80108dc:	80eed83a 	srl	r23,r16,r3
 80108e0:	81cc983a 	sll	r6,r16,r7
 80108e4:	9028d43a 	srli	r20,r18,16
 80108e8:	98c6d83a 	srl	r3,r19,r3
 80108ec:	b809883a 	mov	r4,r23
 80108f0:	a00b883a 	mov	r5,r20
 80108f4:	30ecb03a 	or	r22,r6,r3
 80108f8:	99e2983a 	sll	r17,r19,r7
 80108fc:	80111c00 	call	80111c0 <__umodsi3>
 8010900:	b809883a 	mov	r4,r23
 8010904:	a00b883a 	mov	r5,r20
 8010908:	1021883a 	mov	r16,r2
 801090c:	957fffcc 	andi	r21,r18,65535
 8010910:	80111b80 	call	80111b8 <__udivsi3>
 8010914:	a80b883a 	mov	r5,r21
 8010918:	1009883a 	mov	r4,r2
 801091c:	102f883a 	mov	r23,r2
 8010920:	8002f580 	call	8002f58 <__mulsi3>
 8010924:	8020943a 	slli	r16,r16,16
 8010928:	b00ad43a 	srli	r5,r22,16
 801092c:	814cb03a 	or	r6,r16,r5
 8010930:	3080062e 	bgeu	r6,r2,801094c <__udivdi3+0x50c>
 8010934:	348d883a 	add	r6,r6,r18
 8010938:	b8ffffc4 	addi	r3,r23,-1
 801093c:	34804836 	bltu	r6,r18,8010a60 <__udivdi3+0x620>
 8010940:	3080472e 	bgeu	r6,r2,8010a60 <__udivdi3+0x620>
 8010944:	bdffff84 	addi	r23,r23,-2
 8010948:	348d883a 	add	r6,r6,r18
 801094c:	30a7c83a 	sub	r19,r6,r2
 8010950:	9809883a 	mov	r4,r19
 8010954:	a00b883a 	mov	r5,r20
 8010958:	80111c00 	call	80111c0 <__umodsi3>
 801095c:	9809883a 	mov	r4,r19
 8010960:	a00b883a 	mov	r5,r20
 8010964:	1039883a 	mov	fp,r2
 8010968:	80111b80 	call	80111b8 <__udivsi3>
 801096c:	1009883a 	mov	r4,r2
 8010970:	a80b883a 	mov	r5,r21
 8010974:	e038943a 	slli	fp,fp,16
 8010978:	1027883a 	mov	r19,r2
 801097c:	8002f580 	call	8002f58 <__mulsi3>
 8010980:	b1bfffcc 	andi	r6,r22,65535
 8010984:	e18cb03a 	or	r6,fp,r6
 8010988:	3080062e 	bgeu	r6,r2,80109a4 <__udivdi3+0x564>
 801098c:	348d883a 	add	r6,r6,r18
 8010990:	98ffffc4 	addi	r3,r19,-1
 8010994:	34803036 	bltu	r6,r18,8010a58 <__udivdi3+0x618>
 8010998:	30802f2e 	bgeu	r6,r2,8010a58 <__udivdi3+0x618>
 801099c:	9cffff84 	addi	r19,r19,-2
 80109a0:	348d883a 	add	r6,r6,r18
 80109a4:	b82e943a 	slli	r23,r23,16
 80109a8:	30a1c83a 	sub	r16,r6,r2
 80109ac:	9dc6b03a 	or	r3,r19,r23
 80109b0:	003f2606 	br	801064c <__alt_data_end+0xfc01064c>
 80109b4:	2027883a 	mov	r19,r4
 80109b8:	003f5106 	br	8010700 <__alt_data_end+0xfc010700>
 80109bc:	1827883a 	mov	r19,r3
 80109c0:	003ef006 	br	8010584 <__alt_data_end+0xfc010584>
 80109c4:	1808943a 	slli	r4,r3,16
 80109c8:	9dc6983a 	sll	r3,r19,r23
 80109cc:	e73fffcc 	andi	fp,fp,65535
 80109d0:	2709883a 	add	r4,r4,fp
 80109d4:	193fbd2e 	bgeu	r3,r4,80108cc <__alt_data_end+0xfc0108cc>
 80109d8:	a0bfffc4 	addi	r2,r20,-1
 80109dc:	0007883a 	mov	r3,zero
 80109e0:	003f4c06 	br	8010714 <__alt_data_end+0xfc010714>
 80109e4:	01400404 	movi	r5,16
 80109e8:	2811883a 	mov	r8,r5
 80109ec:	003ef106 	br	80105b4 <__alt_data_end+0xfc0105b4>
 80109f0:	000b883a 	mov	r5,zero
 80109f4:	0011883a 	mov	r8,zero
 80109f8:	003eee06 	br	80105b4 <__alt_data_end+0xfc0105b4>
 80109fc:	00800404 	movi	r2,16
 8010a00:	1007883a 	mov	r3,r2
 8010a04:	003ea606 	br	80104a0 <__alt_data_end+0xfc0104a0>
 8010a08:	00800404 	movi	r2,16
 8010a0c:	1007883a 	mov	r3,r2
 8010a10:	003f0106 	br	8010618 <__alt_data_end+0xfc010618>
 8010a14:	0005883a 	mov	r2,zero
 8010a18:	0007883a 	mov	r3,zero
 8010a1c:	003efe06 	br	8010618 <__alt_data_end+0xfc010618>
 8010a20:	0005883a 	mov	r2,zero
 8010a24:	0007883a 	mov	r3,zero
 8010a28:	003e9d06 	br	80104a0 <__alt_data_end+0xfc0104a0>
 8010a2c:	0007883a 	mov	r3,zero
 8010a30:	00800044 	movi	r2,1
 8010a34:	003f3706 	br	8010714 <__alt_data_end+0xfc010714>
 8010a38:	80bf832e 	bgeu	r16,r2,8010848 <__alt_data_end+0xfc010848>
 8010a3c:	8c7fff84 	addi	r17,r17,-2
 8010a40:	8721883a 	add	r16,r16,fp
 8010a44:	003f8106 	br	801084c <__alt_data_end+0xfc01084c>
 8010a48:	48bf6a2e 	bgeu	r9,r2,80107f4 <__alt_data_end+0xfc0107f4>
 8010a4c:	a53fff84 	addi	r20,r20,-2
 8010a50:	4f13883a 	add	r9,r9,fp
 8010a54:	003f6806 	br	80107f8 <__alt_data_end+0xfc0107f8>
 8010a58:	1827883a 	mov	r19,r3
 8010a5c:	003fd106 	br	80109a4 <__alt_data_end+0xfc0109a4>
 8010a60:	182f883a 	mov	r23,r3
 8010a64:	003fb906 	br	801094c <__alt_data_end+0xfc01094c>
 8010a68:	843fff84 	addi	r16,r16,-2
 8010a6c:	348d883a 	add	r6,r6,r18
 8010a70:	003f0c06 	br	80106a4 <__alt_data_end+0xfc0106a4>
 8010a74:	843fff84 	addi	r16,r16,-2
 8010a78:	1c87883a 	add	r3,r3,r18
 8010a7c:	003eac06 	br	8010530 <__alt_data_end+0xfc010530>

08010a80 <__umoddi3>:
 8010a80:	defff404 	addi	sp,sp,-48
 8010a84:	dd800815 	stw	r22,32(sp)
 8010a88:	dc400315 	stw	r17,12(sp)
 8010a8c:	dc000215 	stw	r16,8(sp)
 8010a90:	dfc00b15 	stw	ra,44(sp)
 8010a94:	df000a15 	stw	fp,40(sp)
 8010a98:	ddc00915 	stw	r23,36(sp)
 8010a9c:	dd400715 	stw	r21,28(sp)
 8010aa0:	dd000615 	stw	r20,24(sp)
 8010aa4:	dcc00515 	stw	r19,20(sp)
 8010aa8:	dc800415 	stw	r18,16(sp)
 8010aac:	2021883a 	mov	r16,r4
 8010ab0:	2823883a 	mov	r17,r5
 8010ab4:	282d883a 	mov	r22,r5
 8010ab8:	38003c1e 	bne	r7,zero,8010bac <__umoddi3+0x12c>
 8010abc:	3027883a 	mov	r19,r6
 8010ac0:	2029883a 	mov	r20,r4
 8010ac4:	2980522e 	bgeu	r5,r6,8010c10 <__umoddi3+0x190>
 8010ac8:	00bfffd4 	movui	r2,65535
 8010acc:	1180a436 	bltu	r2,r6,8010d60 <__umoddi3+0x2e0>
 8010ad0:	00803fc4 	movi	r2,255
 8010ad4:	11815e2e 	bgeu	r2,r6,8011050 <__umoddi3+0x5d0>
 8010ad8:	01400204 	movi	r5,8
 8010adc:	2805883a 	mov	r2,r5
 8010ae0:	314ad83a 	srl	r5,r6,r5
 8010ae4:	00c20074 	movhi	r3,2049
 8010ae8:	18ded904 	addi	r3,r3,31588
 8010aec:	194b883a 	add	r5,r3,r5
 8010af0:	29000003 	ldbu	r4,0(r5)
 8010af4:	2089883a 	add	r4,r4,r2
 8010af8:	00800804 	movi	r2,32
 8010afc:	1105c83a 	sub	r2,r2,r4
 8010b00:	10010c26 	beq	r2,zero,8010f34 <__umoddi3+0x4b4>
 8010b04:	88a2983a 	sll	r17,r17,r2
 8010b08:	8108d83a 	srl	r4,r16,r4
 8010b0c:	30a6983a 	sll	r19,r6,r2
 8010b10:	80a8983a 	sll	r20,r16,r2
 8010b14:	1025883a 	mov	r18,r2
 8010b18:	892cb03a 	or	r22,r17,r4
 8010b1c:	9822d43a 	srli	r17,r19,16
 8010b20:	b009883a 	mov	r4,r22
 8010b24:	9d7fffcc 	andi	r21,r19,65535
 8010b28:	880b883a 	mov	r5,r17
 8010b2c:	80111c00 	call	80111c0 <__umodsi3>
 8010b30:	b009883a 	mov	r4,r22
 8010b34:	880b883a 	mov	r5,r17
 8010b38:	102f883a 	mov	r23,r2
 8010b3c:	80111b80 	call	80111b8 <__udivsi3>
 8010b40:	1009883a 	mov	r4,r2
 8010b44:	a80b883a 	mov	r5,r21
 8010b48:	8002f580 	call	8002f58 <__mulsi3>
 8010b4c:	b82e943a 	slli	r23,r23,16
 8010b50:	a008d43a 	srli	r4,r20,16
 8010b54:	b906b03a 	or	r3,r23,r4
 8010b58:	1880042e 	bgeu	r3,r2,8010b6c <__umoddi3+0xec>
 8010b5c:	1cc7883a 	add	r3,r3,r19
 8010b60:	1cc00236 	bltu	r3,r19,8010b6c <__umoddi3+0xec>
 8010b64:	1880012e 	bgeu	r3,r2,8010b6c <__umoddi3+0xec>
 8010b68:	1cc7883a 	add	r3,r3,r19
 8010b6c:	18a1c83a 	sub	r16,r3,r2
 8010b70:	8009883a 	mov	r4,r16
 8010b74:	880b883a 	mov	r5,r17
 8010b78:	80111c00 	call	80111c0 <__umodsi3>
 8010b7c:	8009883a 	mov	r4,r16
 8010b80:	880b883a 	mov	r5,r17
 8010b84:	102d883a 	mov	r22,r2
 8010b88:	80111b80 	call	80111b8 <__udivsi3>
 8010b8c:	1009883a 	mov	r4,r2
 8010b90:	a80b883a 	mov	r5,r21
 8010b94:	b02c943a 	slli	r22,r22,16
 8010b98:	8002f580 	call	8002f58 <__mulsi3>
 8010b9c:	a13fffcc 	andi	r4,r20,65535
 8010ba0:	b106b03a 	or	r3,r22,r4
 8010ba4:	1880572e 	bgeu	r3,r2,8010d04 <__umoddi3+0x284>
 8010ba8:	00005206 	br	8010cf4 <__umoddi3+0x274>
 8010bac:	29c05936 	bltu	r5,r7,8010d14 <__umoddi3+0x294>
 8010bb0:	00bfffd4 	movui	r2,65535
 8010bb4:	11c0652e 	bgeu	r2,r7,8010d4c <__umoddi3+0x2cc>
 8010bb8:	00804034 	movhi	r2,256
 8010bbc:	10bfffc4 	addi	r2,r2,-1
 8010bc0:	11c1172e 	bgeu	r2,r7,8011020 <__umoddi3+0x5a0>
 8010bc4:	01400604 	movi	r5,24
 8010bc8:	282b883a 	mov	r21,r5
 8010bcc:	394ad83a 	srl	r5,r7,r5
 8010bd0:	00c20074 	movhi	r3,2049
 8010bd4:	18ded904 	addi	r3,r3,31588
 8010bd8:	194b883a 	add	r5,r3,r5
 8010bdc:	28800003 	ldbu	r2,0(r5)
 8010be0:	00c00804 	movi	r3,32
 8010be4:	156b883a 	add	r21,r2,r21
 8010be8:	1d69c83a 	sub	r20,r3,r21
 8010bec:	a000671e 	bne	r20,zero,8010d8c <__umoddi3+0x30c>
 8010bf0:	3c400136 	bltu	r7,r17,8010bf8 <__umoddi3+0x178>
 8010bf4:	81812336 	bltu	r16,r6,8011084 <__umoddi3+0x604>
 8010bf8:	8185c83a 	sub	r2,r16,r6
 8010bfc:	89e3c83a 	sub	r17,r17,r7
 8010c00:	8087803a 	cmpltu	r3,r16,r2
 8010c04:	88edc83a 	sub	r22,r17,r3
 8010c08:	b007883a 	mov	r3,r22
 8010c0c:	00004306 	br	8010d1c <__umoddi3+0x29c>
 8010c10:	3000041e 	bne	r6,zero,8010c24 <__umoddi3+0x1a4>
 8010c14:	01000044 	movi	r4,1
 8010c18:	000b883a 	mov	r5,zero
 8010c1c:	80111b80 	call	80111b8 <__udivsi3>
 8010c20:	1027883a 	mov	r19,r2
 8010c24:	00bfffd4 	movui	r2,65535
 8010c28:	14c0532e 	bgeu	r2,r19,8010d78 <__umoddi3+0x2f8>
 8010c2c:	00804034 	movhi	r2,256
 8010c30:	10bfffc4 	addi	r2,r2,-1
 8010c34:	14c1032e 	bgeu	r2,r19,8011044 <__umoddi3+0x5c4>
 8010c38:	00800604 	movi	r2,24
 8010c3c:	1007883a 	mov	r3,r2
 8010c40:	9884d83a 	srl	r2,r19,r2
 8010c44:	01020074 	movhi	r4,2049
 8010c48:	211ed904 	addi	r4,r4,31588
 8010c4c:	2085883a 	add	r2,r4,r2
 8010c50:	11000003 	ldbu	r4,0(r2)
 8010c54:	00800804 	movi	r2,32
 8010c58:	20c7883a 	add	r3,r4,r3
 8010c5c:	10c5c83a 	sub	r2,r2,r3
 8010c60:	1000b61e 	bne	r2,zero,8010f3c <__umoddi3+0x4bc>
 8010c64:	982ad43a 	srli	r21,r19,16
 8010c68:	8ce3c83a 	sub	r17,r17,r19
 8010c6c:	9dbfffcc 	andi	r22,r19,65535
 8010c70:	0025883a 	mov	r18,zero
 8010c74:	8809883a 	mov	r4,r17
 8010c78:	a80b883a 	mov	r5,r21
 8010c7c:	80111c00 	call	80111c0 <__umodsi3>
 8010c80:	8809883a 	mov	r4,r17
 8010c84:	a80b883a 	mov	r5,r21
 8010c88:	102f883a 	mov	r23,r2
 8010c8c:	80111b80 	call	80111b8 <__udivsi3>
 8010c90:	1009883a 	mov	r4,r2
 8010c94:	b00b883a 	mov	r5,r22
 8010c98:	8002f580 	call	8002f58 <__mulsi3>
 8010c9c:	b82e943a 	slli	r23,r23,16
 8010ca0:	a008d43a 	srli	r4,r20,16
 8010ca4:	b906b03a 	or	r3,r23,r4
 8010ca8:	1880032e 	bgeu	r3,r2,8010cb8 <__umoddi3+0x238>
 8010cac:	1cc7883a 	add	r3,r3,r19
 8010cb0:	1cc00136 	bltu	r3,r19,8010cb8 <__umoddi3+0x238>
 8010cb4:	1880f136 	bltu	r3,r2,801107c <__umoddi3+0x5fc>
 8010cb8:	18a1c83a 	sub	r16,r3,r2
 8010cbc:	8009883a 	mov	r4,r16
 8010cc0:	a80b883a 	mov	r5,r21
 8010cc4:	80111c00 	call	80111c0 <__umodsi3>
 8010cc8:	8009883a 	mov	r4,r16
 8010ccc:	a80b883a 	mov	r5,r21
 8010cd0:	1023883a 	mov	r17,r2
 8010cd4:	80111b80 	call	80111b8 <__udivsi3>
 8010cd8:	1009883a 	mov	r4,r2
 8010cdc:	b00b883a 	mov	r5,r22
 8010ce0:	8822943a 	slli	r17,r17,16
 8010ce4:	8002f580 	call	8002f58 <__mulsi3>
 8010ce8:	a13fffcc 	andi	r4,r20,65535
 8010cec:	8906b03a 	or	r3,r17,r4
 8010cf0:	1880042e 	bgeu	r3,r2,8010d04 <__umoddi3+0x284>
 8010cf4:	1cc7883a 	add	r3,r3,r19
 8010cf8:	1cc00236 	bltu	r3,r19,8010d04 <__umoddi3+0x284>
 8010cfc:	1880012e 	bgeu	r3,r2,8010d04 <__umoddi3+0x284>
 8010d00:	1cc7883a 	add	r3,r3,r19
 8010d04:	1887c83a 	sub	r3,r3,r2
 8010d08:	1c84d83a 	srl	r2,r3,r18
 8010d0c:	0007883a 	mov	r3,zero
 8010d10:	00000206 	br	8010d1c <__umoddi3+0x29c>
 8010d14:	2005883a 	mov	r2,r4
 8010d18:	2807883a 	mov	r3,r5
 8010d1c:	dfc00b17 	ldw	ra,44(sp)
 8010d20:	df000a17 	ldw	fp,40(sp)
 8010d24:	ddc00917 	ldw	r23,36(sp)
 8010d28:	dd800817 	ldw	r22,32(sp)
 8010d2c:	dd400717 	ldw	r21,28(sp)
 8010d30:	dd000617 	ldw	r20,24(sp)
 8010d34:	dcc00517 	ldw	r19,20(sp)
 8010d38:	dc800417 	ldw	r18,16(sp)
 8010d3c:	dc400317 	ldw	r17,12(sp)
 8010d40:	dc000217 	ldw	r16,8(sp)
 8010d44:	dec00c04 	addi	sp,sp,48
 8010d48:	f800283a 	ret
 8010d4c:	00803fc4 	movi	r2,255
 8010d50:	11c0b02e 	bgeu	r2,r7,8011014 <__umoddi3+0x594>
 8010d54:	01400204 	movi	r5,8
 8010d58:	282b883a 	mov	r21,r5
 8010d5c:	003f9b06 	br	8010bcc <__alt_data_end+0xfc010bcc>
 8010d60:	00804034 	movhi	r2,256
 8010d64:	10bfffc4 	addi	r2,r2,-1
 8010d68:	1180b02e 	bgeu	r2,r6,801102c <__umoddi3+0x5ac>
 8010d6c:	01400604 	movi	r5,24
 8010d70:	2805883a 	mov	r2,r5
 8010d74:	003f5a06 	br	8010ae0 <__alt_data_end+0xfc010ae0>
 8010d78:	00803fc4 	movi	r2,255
 8010d7c:	14c0ae2e 	bgeu	r2,r19,8011038 <__umoddi3+0x5b8>
 8010d80:	00800204 	movi	r2,8
 8010d84:	1007883a 	mov	r3,r2
 8010d88:	003fad06 	br	8010c40 <__alt_data_end+0xfc010c40>
 8010d8c:	3d0a983a 	sll	r5,r7,r20
 8010d90:	356cd83a 	srl	r22,r6,r21
 8010d94:	8d78d83a 	srl	fp,r17,r21
 8010d98:	8d10983a 	sll	r8,r17,r20
 8010d9c:	2dacb03a 	or	r22,r5,r22
 8010da0:	b02ed43a 	srli	r23,r22,16
 8010da4:	8564d83a 	srl	r18,r16,r21
 8010da8:	e009883a 	mov	r4,fp
 8010dac:	b80b883a 	mov	r5,r23
 8010db0:	44a4b03a 	or	r18,r8,r18
 8010db4:	3526983a 	sll	r19,r6,r20
 8010db8:	80111c00 	call	80111c0 <__umodsi3>
 8010dbc:	e009883a 	mov	r4,fp
 8010dc0:	b80b883a 	mov	r5,r23
 8010dc4:	b47fffcc 	andi	r17,r22,65535
 8010dc8:	d8800015 	stw	r2,0(sp)
 8010dcc:	80111b80 	call	80111b8 <__udivsi3>
 8010dd0:	1009883a 	mov	r4,r2
 8010dd4:	880b883a 	mov	r5,r17
 8010dd8:	1039883a 	mov	fp,r2
 8010ddc:	8002f580 	call	8002f58 <__mulsi3>
 8010de0:	d9800017 	ldw	r6,0(sp)
 8010de4:	9008d43a 	srli	r4,r18,16
 8010de8:	8520983a 	sll	r16,r16,r20
 8010dec:	300c943a 	slli	r6,r6,16
 8010df0:	3106b03a 	or	r3,r6,r4
 8010df4:	1880042e 	bgeu	r3,r2,8010e08 <__umoddi3+0x388>
 8010df8:	1d87883a 	add	r3,r3,r22
 8010dfc:	e13fffc4 	addi	r4,fp,-1
 8010e00:	1d809a2e 	bgeu	r3,r22,801106c <__umoddi3+0x5ec>
 8010e04:	2039883a 	mov	fp,r4
 8010e08:	1887c83a 	sub	r3,r3,r2
 8010e0c:	1809883a 	mov	r4,r3
 8010e10:	b80b883a 	mov	r5,r23
 8010e14:	d8c00115 	stw	r3,4(sp)
 8010e18:	80111c00 	call	80111c0 <__umodsi3>
 8010e1c:	d8c00117 	ldw	r3,4(sp)
 8010e20:	b80b883a 	mov	r5,r23
 8010e24:	d8800015 	stw	r2,0(sp)
 8010e28:	1809883a 	mov	r4,r3
 8010e2c:	80111b80 	call	80111b8 <__udivsi3>
 8010e30:	880b883a 	mov	r5,r17
 8010e34:	1009883a 	mov	r4,r2
 8010e38:	102f883a 	mov	r23,r2
 8010e3c:	8002f580 	call	8002f58 <__mulsi3>
 8010e40:	d9800017 	ldw	r6,0(sp)
 8010e44:	947fffcc 	andi	r17,r18,65535
 8010e48:	300c943a 	slli	r6,r6,16
 8010e4c:	3464b03a 	or	r18,r6,r17
 8010e50:	9080042e 	bgeu	r18,r2,8010e64 <__umoddi3+0x3e4>
 8010e54:	95a5883a 	add	r18,r18,r22
 8010e58:	b8ffffc4 	addi	r3,r23,-1
 8010e5c:	95807f2e 	bgeu	r18,r22,801105c <__umoddi3+0x5dc>
 8010e60:	182f883a 	mov	r23,r3
 8010e64:	e038943a 	slli	fp,fp,16
 8010e68:	980cd43a 	srli	r6,r19,16
 8010e6c:	98ffffcc 	andi	r3,r19,65535
 8010e70:	bf38b03a 	or	fp,r23,fp
 8010e74:	e02ed43a 	srli	r23,fp,16
 8010e78:	e73fffcc 	andi	fp,fp,65535
 8010e7c:	180b883a 	mov	r5,r3
 8010e80:	e009883a 	mov	r4,fp
 8010e84:	d9800015 	stw	r6,0(sp)
 8010e88:	d8c00115 	stw	r3,4(sp)
 8010e8c:	90a5c83a 	sub	r18,r18,r2
 8010e90:	8002f580 	call	8002f58 <__mulsi3>
 8010e94:	d8c00117 	ldw	r3,4(sp)
 8010e98:	b809883a 	mov	r4,r23
 8010e9c:	1023883a 	mov	r17,r2
 8010ea0:	180b883a 	mov	r5,r3
 8010ea4:	8002f580 	call	8002f58 <__mulsi3>
 8010ea8:	d9800017 	ldw	r6,0(sp)
 8010eac:	b809883a 	mov	r4,r23
 8010eb0:	d8800115 	stw	r2,4(sp)
 8010eb4:	300b883a 	mov	r5,r6
 8010eb8:	302f883a 	mov	r23,r6
 8010ebc:	8002f580 	call	8002f58 <__mulsi3>
 8010ec0:	e009883a 	mov	r4,fp
 8010ec4:	b80b883a 	mov	r5,r23
 8010ec8:	d8800015 	stw	r2,0(sp)
 8010ecc:	8002f580 	call	8002f58 <__mulsi3>
 8010ed0:	d8c00117 	ldw	r3,4(sp)
 8010ed4:	880cd43a 	srli	r6,r17,16
 8010ed8:	d9c00017 	ldw	r7,0(sp)
 8010edc:	1885883a 	add	r2,r3,r2
 8010ee0:	118d883a 	add	r6,r2,r6
 8010ee4:	30c0022e 	bgeu	r6,r3,8010ef0 <__umoddi3+0x470>
 8010ee8:	00800074 	movhi	r2,1
 8010eec:	388f883a 	add	r7,r7,r2
 8010ef0:	3006d43a 	srli	r3,r6,16
 8010ef4:	300c943a 	slli	r6,r6,16
 8010ef8:	8c7fffcc 	andi	r17,r17,65535
 8010efc:	38c7883a 	add	r3,r7,r3
 8010f00:	3463883a 	add	r17,r6,r17
 8010f04:	90c03d36 	bltu	r18,r3,8010ffc <__umoddi3+0x57c>
 8010f08:	90c06026 	beq	r18,r3,801108c <__umoddi3+0x60c>
 8010f0c:	90c9c83a 	sub	r4,r18,r3
 8010f10:	880f883a 	mov	r7,r17
 8010f14:	81cfc83a 	sub	r7,r16,r7
 8010f18:	81c7803a 	cmpltu	r3,r16,r7
 8010f1c:	20c7c83a 	sub	r3,r4,r3
 8010f20:	1d44983a 	sll	r2,r3,r21
 8010f24:	3d0ed83a 	srl	r7,r7,r20
 8010f28:	1d06d83a 	srl	r3,r3,r20
 8010f2c:	11c4b03a 	or	r2,r2,r7
 8010f30:	003f7a06 	br	8010d1c <__alt_data_end+0xfc010d1c>
 8010f34:	0025883a 	mov	r18,zero
 8010f38:	003ef806 	br	8010b1c <__alt_data_end+0xfc010b1c>
 8010f3c:	98a6983a 	sll	r19,r19,r2
 8010f40:	88e8d83a 	srl	r20,r17,r3
 8010f44:	80c6d83a 	srl	r3,r16,r3
 8010f48:	982ad43a 	srli	r21,r19,16
 8010f4c:	88a2983a 	sll	r17,r17,r2
 8010f50:	a009883a 	mov	r4,r20
 8010f54:	a80b883a 	mov	r5,r21
 8010f58:	88eeb03a 	or	r23,r17,r3
 8010f5c:	1025883a 	mov	r18,r2
 8010f60:	80111c00 	call	80111c0 <__umodsi3>
 8010f64:	a009883a 	mov	r4,r20
 8010f68:	a80b883a 	mov	r5,r21
 8010f6c:	1023883a 	mov	r17,r2
 8010f70:	9dbfffcc 	andi	r22,r19,65535
 8010f74:	80111b80 	call	80111b8 <__udivsi3>
 8010f78:	1009883a 	mov	r4,r2
 8010f7c:	b00b883a 	mov	r5,r22
 8010f80:	8002f580 	call	8002f58 <__mulsi3>
 8010f84:	8822943a 	slli	r17,r17,16
 8010f88:	b808d43a 	srli	r4,r23,16
 8010f8c:	84a8983a 	sll	r20,r16,r18
 8010f90:	8906b03a 	or	r3,r17,r4
 8010f94:	1880042e 	bgeu	r3,r2,8010fa8 <__umoddi3+0x528>
 8010f98:	1cc7883a 	add	r3,r3,r19
 8010f9c:	1cc00236 	bltu	r3,r19,8010fa8 <__umoddi3+0x528>
 8010fa0:	1880012e 	bgeu	r3,r2,8010fa8 <__umoddi3+0x528>
 8010fa4:	1cc7883a 	add	r3,r3,r19
 8010fa8:	18a1c83a 	sub	r16,r3,r2
 8010fac:	8009883a 	mov	r4,r16
 8010fb0:	a80b883a 	mov	r5,r21
 8010fb4:	80111c00 	call	80111c0 <__umodsi3>
 8010fb8:	8009883a 	mov	r4,r16
 8010fbc:	a80b883a 	mov	r5,r21
 8010fc0:	1039883a 	mov	fp,r2
 8010fc4:	80111b80 	call	80111b8 <__udivsi3>
 8010fc8:	1009883a 	mov	r4,r2
 8010fcc:	b00b883a 	mov	r5,r22
 8010fd0:	8002f580 	call	8002f58 <__mulsi3>
 8010fd4:	e006943a 	slli	r3,fp,16
 8010fd8:	b93fffcc 	andi	r4,r23,65535
 8010fdc:	1906b03a 	or	r3,r3,r4
 8010fe0:	1880042e 	bgeu	r3,r2,8010ff4 <__umoddi3+0x574>
 8010fe4:	1cc7883a 	add	r3,r3,r19
 8010fe8:	1cc00236 	bltu	r3,r19,8010ff4 <__umoddi3+0x574>
 8010fec:	1880012e 	bgeu	r3,r2,8010ff4 <__umoddi3+0x574>
 8010ff0:	1cc7883a 	add	r3,r3,r19
 8010ff4:	18a3c83a 	sub	r17,r3,r2
 8010ff8:	003f1e06 	br	8010c74 <__alt_data_end+0xfc010c74>
 8010ffc:	8ccfc83a 	sub	r7,r17,r19
 8011000:	1d89c83a 	sub	r4,r3,r22
 8011004:	89e3803a 	cmpltu	r17,r17,r7
 8011008:	2463c83a 	sub	r17,r4,r17
 801100c:	9449c83a 	sub	r4,r18,r17
 8011010:	003fc006 	br	8010f14 <__alt_data_end+0xfc010f14>
 8011014:	000b883a 	mov	r5,zero
 8011018:	002b883a 	mov	r21,zero
 801101c:	003eeb06 	br	8010bcc <__alt_data_end+0xfc010bcc>
 8011020:	01400404 	movi	r5,16
 8011024:	282b883a 	mov	r21,r5
 8011028:	003ee806 	br	8010bcc <__alt_data_end+0xfc010bcc>
 801102c:	01400404 	movi	r5,16
 8011030:	2805883a 	mov	r2,r5
 8011034:	003eaa06 	br	8010ae0 <__alt_data_end+0xfc010ae0>
 8011038:	0005883a 	mov	r2,zero
 801103c:	0007883a 	mov	r3,zero
 8011040:	003eff06 	br	8010c40 <__alt_data_end+0xfc010c40>
 8011044:	00800404 	movi	r2,16
 8011048:	1007883a 	mov	r3,r2
 801104c:	003efc06 	br	8010c40 <__alt_data_end+0xfc010c40>
 8011050:	000b883a 	mov	r5,zero
 8011054:	0005883a 	mov	r2,zero
 8011058:	003ea106 	br	8010ae0 <__alt_data_end+0xfc010ae0>
 801105c:	90bf802e 	bgeu	r18,r2,8010e60 <__alt_data_end+0xfc010e60>
 8011060:	bdffff84 	addi	r23,r23,-2
 8011064:	95a5883a 	add	r18,r18,r22
 8011068:	003f7e06 	br	8010e64 <__alt_data_end+0xfc010e64>
 801106c:	18bf652e 	bgeu	r3,r2,8010e04 <__alt_data_end+0xfc010e04>
 8011070:	e73fff84 	addi	fp,fp,-2
 8011074:	1d87883a 	add	r3,r3,r22
 8011078:	003f6306 	br	8010e08 <__alt_data_end+0xfc010e08>
 801107c:	1cc7883a 	add	r3,r3,r19
 8011080:	003f0d06 	br	8010cb8 <__alt_data_end+0xfc010cb8>
 8011084:	8005883a 	mov	r2,r16
 8011088:	003edf06 	br	8010c08 <__alt_data_end+0xfc010c08>
 801108c:	847fdb36 	bltu	r16,r17,8010ffc <__alt_data_end+0xfc010ffc>
 8011090:	880f883a 	mov	r7,r17
 8011094:	0009883a 	mov	r4,zero
 8011098:	003f9e06 	br	8010f14 <__alt_data_end+0xfc010f14>

0801109c <udivmodsi4>:
 801109c:	2900182e 	bgeu	r5,r4,8011100 <udivmodsi4+0x64>
 80110a0:	28001716 	blt	r5,zero,8011100 <udivmodsi4+0x64>
 80110a4:	00800804 	movi	r2,32
 80110a8:	00c00044 	movi	r3,1
 80110ac:	00000206 	br	80110b8 <udivmodsi4+0x1c>
 80110b0:	10001126 	beq	r2,zero,80110f8 <udivmodsi4+0x5c>
 80110b4:	28000516 	blt	r5,zero,80110cc <udivmodsi4+0x30>
 80110b8:	294b883a 	add	r5,r5,r5
 80110bc:	10bfffc4 	addi	r2,r2,-1
 80110c0:	18c7883a 	add	r3,r3,r3
 80110c4:	293ffa36 	bltu	r5,r4,80110b0 <__alt_data_end+0xfc0110b0>
 80110c8:	18000b26 	beq	r3,zero,80110f8 <udivmodsi4+0x5c>
 80110cc:	0005883a 	mov	r2,zero
 80110d0:	21400236 	bltu	r4,r5,80110dc <udivmodsi4+0x40>
 80110d4:	2149c83a 	sub	r4,r4,r5
 80110d8:	10c4b03a 	or	r2,r2,r3
 80110dc:	1806d07a 	srli	r3,r3,1
 80110e0:	280ad07a 	srli	r5,r5,1
 80110e4:	183ffa1e 	bne	r3,zero,80110d0 <__alt_data_end+0xfc0110d0>
 80110e8:	3000011e 	bne	r6,zero,80110f0 <udivmodsi4+0x54>
 80110ec:	f800283a 	ret
 80110f0:	2005883a 	mov	r2,r4
 80110f4:	f800283a 	ret
 80110f8:	0005883a 	mov	r2,zero
 80110fc:	003ffa06 	br	80110e8 <__alt_data_end+0xfc0110e8>
 8011100:	00c00044 	movi	r3,1
 8011104:	003ff106 	br	80110cc <__alt_data_end+0xfc0110cc>

08011108 <__divsi3>:
 8011108:	defffe04 	addi	sp,sp,-8
 801110c:	dfc00115 	stw	ra,4(sp)
 8011110:	dc000015 	stw	r16,0(sp)
 8011114:	20000b16 	blt	r4,zero,8011144 <__divsi3+0x3c>
 8011118:	0021883a 	mov	r16,zero
 801111c:	28000c16 	blt	r5,zero,8011150 <__divsi3+0x48>
 8011120:	000d883a 	mov	r6,zero
 8011124:	801109c0 	call	801109c <udivmodsi4>
 8011128:	0407c83a 	sub	r3,zero,r16
 801112c:	1884f03a 	xor	r2,r3,r2
 8011130:	1405883a 	add	r2,r2,r16
 8011134:	dfc00117 	ldw	ra,4(sp)
 8011138:	dc000017 	ldw	r16,0(sp)
 801113c:	dec00204 	addi	sp,sp,8
 8011140:	f800283a 	ret
 8011144:	0109c83a 	sub	r4,zero,r4
 8011148:	04000044 	movi	r16,1
 801114c:	283ff40e 	bge	r5,zero,8011120 <__alt_data_end+0xfc011120>
 8011150:	014bc83a 	sub	r5,zero,r5
 8011154:	8400005c 	xori	r16,r16,1
 8011158:	003ff106 	br	8011120 <__alt_data_end+0xfc011120>

0801115c <__modsi3>:
 801115c:	defffd04 	addi	sp,sp,-12
 8011160:	dfc00215 	stw	ra,8(sp)
 8011164:	dc400115 	stw	r17,4(sp)
 8011168:	dc000015 	stw	r16,0(sp)
 801116c:	20000c16 	blt	r4,zero,80111a0 <__modsi3+0x44>
 8011170:	0023883a 	mov	r17,zero
 8011174:	0021883a 	mov	r16,zero
 8011178:	28000d16 	blt	r5,zero,80111b0 <__modsi3+0x54>
 801117c:	01800044 	movi	r6,1
 8011180:	801109c0 	call	801109c <udivmodsi4>
 8011184:	1404f03a 	xor	r2,r2,r16
 8011188:	8885883a 	add	r2,r17,r2
 801118c:	dfc00217 	ldw	ra,8(sp)
 8011190:	dc400117 	ldw	r17,4(sp)
 8011194:	dc000017 	ldw	r16,0(sp)
 8011198:	dec00304 	addi	sp,sp,12
 801119c:	f800283a 	ret
 80111a0:	0109c83a 	sub	r4,zero,r4
 80111a4:	04400044 	movi	r17,1
 80111a8:	043fffc4 	movi	r16,-1
 80111ac:	283ff30e 	bge	r5,zero,801117c <__alt_data_end+0xfc01117c>
 80111b0:	014bc83a 	sub	r5,zero,r5
 80111b4:	003ff106 	br	801117c <__alt_data_end+0xfc01117c>

080111b8 <__udivsi3>:
 80111b8:	000d883a 	mov	r6,zero
 80111bc:	801109c1 	jmpi	801109c <udivmodsi4>

080111c0 <__umodsi3>:
 80111c0:	01800044 	movi	r6,1
 80111c4:	801109c1 	jmpi	801109c <udivmodsi4>

080111c8 <__adddf3>:
 80111c8:	02000434 	movhi	r8,16
 80111cc:	423fffc4 	addi	r8,r8,-1
 80111d0:	defffb04 	addi	sp,sp,-20
 80111d4:	2a12703a 	and	r9,r5,r8
 80111d8:	2806d7fa 	srli	r3,r5,31
 80111dc:	3a10703a 	and	r8,r7,r8
 80111e0:	3804d53a 	srli	r2,r7,20
 80111e4:	3014d77a 	srli	r10,r6,29
 80111e8:	dc000015 	stw	r16,0(sp)
 80111ec:	481290fa 	slli	r9,r9,3
 80111f0:	2820d53a 	srli	r16,r5,20
 80111f4:	401090fa 	slli	r8,r8,3
 80111f8:	200ad77a 	srli	r5,r4,29
 80111fc:	380ed7fa 	srli	r7,r7,31
 8011200:	dc800215 	stw	r18,8(sp)
 8011204:	dc400115 	stw	r17,4(sp)
 8011208:	dfc00415 	stw	ra,16(sp)
 801120c:	dcc00315 	stw	r19,12(sp)
 8011210:	1c803fcc 	andi	r18,r3,255
 8011214:	8401ffcc 	andi	r16,r16,2047
 8011218:	494ab03a 	or	r5,r9,r5
 801121c:	202290fa 	slli	r17,r4,3
 8011220:	1081ffcc 	andi	r2,r2,2047
 8011224:	4290b03a 	or	r8,r8,r10
 8011228:	300c90fa 	slli	r6,r6,3
 801122c:	91c07026 	beq	r18,r7,80113f0 <__adddf3+0x228>
 8011230:	8087c83a 	sub	r3,r16,r2
 8011234:	00c0b30e 	bge	zero,r3,8011504 <__adddf3+0x33c>
 8011238:	10002a1e 	bne	r2,zero,80112e4 <__adddf3+0x11c>
 801123c:	4184b03a 	or	r2,r8,r6
 8011240:	1000991e 	bne	r2,zero,80114a8 <__adddf3+0x2e0>
 8011244:	888001cc 	andi	r2,r17,7
 8011248:	10005b26 	beq	r2,zero,80113b8 <__adddf3+0x1f0>
 801124c:	88c003cc 	andi	r3,r17,15
 8011250:	00800104 	movi	r2,4
 8011254:	18805826 	beq	r3,r2,80113b8 <__adddf3+0x1f0>
 8011258:	89800104 	addi	r6,r17,4
 801125c:	3463803a 	cmpltu	r17,r6,r17
 8011260:	2c4b883a 	add	r5,r5,r17
 8011264:	2880202c 	andhi	r2,r5,128
 8011268:	9007883a 	mov	r3,r18
 801126c:	3023883a 	mov	r17,r6
 8011270:	10005426 	beq	r2,zero,80113c4 <__adddf3+0x1fc>
 8011274:	84000044 	addi	r16,r16,1
 8011278:	0081ffc4 	movi	r2,2047
 801127c:	8080c126 	beq	r16,r2,8011584 <__adddf3+0x3bc>
 8011280:	013fe034 	movhi	r4,65408
 8011284:	213fffc4 	addi	r4,r4,-1
 8011288:	290a703a 	and	r5,r5,r4
 801128c:	2804977a 	slli	r2,r5,29
 8011290:	280a927a 	slli	r5,r5,9
 8011294:	8822d0fa 	srli	r17,r17,3
 8011298:	8401ffcc 	andi	r16,r16,2047
 801129c:	2808d33a 	srli	r4,r5,12
 80112a0:	1444b03a 	or	r2,r2,r17
 80112a4:	8401ffcc 	andi	r16,r16,2047
 80112a8:	800a953a 	slli	r5,r16,20
 80112ac:	18c03fcc 	andi	r3,r3,255
 80112b0:	04000434 	movhi	r16,16
 80112b4:	180697fa 	slli	r3,r3,31
 80112b8:	843fffc4 	addi	r16,r16,-1
 80112bc:	2420703a 	and	r16,r4,r16
 80112c0:	8160b03a 	or	r16,r16,r5
 80112c4:	80c6b03a 	or	r3,r16,r3
 80112c8:	dfc00417 	ldw	ra,16(sp)
 80112cc:	dcc00317 	ldw	r19,12(sp)
 80112d0:	dc800217 	ldw	r18,8(sp)
 80112d4:	dc400117 	ldw	r17,4(sp)
 80112d8:	dc000017 	ldw	r16,0(sp)
 80112dc:	dec00504 	addi	sp,sp,20
 80112e0:	f800283a 	ret
 80112e4:	0081ffc4 	movi	r2,2047
 80112e8:	80bfd626 	beq	r16,r2,8011244 <__alt_data_end+0xfc011244>
 80112ec:	42002034 	orhi	r8,r8,128
 80112f0:	00800e04 	movi	r2,56
 80112f4:	10c0a616 	blt	r2,r3,8011590 <__adddf3+0x3c8>
 80112f8:	008007c4 	movi	r2,31
 80112fc:	10c0c916 	blt	r2,r3,8011624 <__adddf3+0x45c>
 8011300:	00800804 	movi	r2,32
 8011304:	10c5c83a 	sub	r2,r2,r3
 8011308:	408e983a 	sll	r7,r8,r2
 801130c:	30c8d83a 	srl	r4,r6,r3
 8011310:	3084983a 	sll	r2,r6,r2
 8011314:	40c6d83a 	srl	r3,r8,r3
 8011318:	390cb03a 	or	r6,r7,r4
 801131c:	1004c03a 	cmpne	r2,r2,zero
 8011320:	308cb03a 	or	r6,r6,r2
 8011324:	898dc83a 	sub	r6,r17,r6
 8011328:	89a3803a 	cmpltu	r17,r17,r6
 801132c:	28cbc83a 	sub	r5,r5,r3
 8011330:	2c4bc83a 	sub	r5,r5,r17
 8011334:	3023883a 	mov	r17,r6
 8011338:	2880202c 	andhi	r2,r5,128
 801133c:	10006d26 	beq	r2,zero,80114f4 <__adddf3+0x32c>
 8011340:	04c02034 	movhi	r19,128
 8011344:	9cffffc4 	addi	r19,r19,-1
 8011348:	2ce6703a 	and	r19,r5,r19
 801134c:	98007e26 	beq	r19,zero,8011548 <__adddf3+0x380>
 8011350:	9809883a 	mov	r4,r19
 8011354:	80139600 	call	8013960 <__clzsi2>
 8011358:	10fffe04 	addi	r3,r2,-8
 801135c:	010007c4 	movi	r4,31
 8011360:	20c07f16 	blt	r4,r3,8011560 <__adddf3+0x398>
 8011364:	01400a04 	movi	r5,40
 8011368:	2885c83a 	sub	r2,r5,r2
 801136c:	888ad83a 	srl	r5,r17,r2
 8011370:	98e6983a 	sll	r19,r19,r3
 8011374:	88e2983a 	sll	r17,r17,r3
 8011378:	2ce6b03a 	or	r19,r5,r19
 801137c:	1c007c16 	blt	r3,r16,8011570 <__adddf3+0x3a8>
 8011380:	1c21c83a 	sub	r16,r3,r16
 8011384:	81400044 	addi	r5,r16,1
 8011388:	00c007c4 	movi	r3,31
 801138c:	19409816 	blt	r3,r5,80115f0 <__adddf3+0x428>
 8011390:	1c21c83a 	sub	r16,r3,r16
 8011394:	8c08983a 	sll	r4,r17,r16
 8011398:	8946d83a 	srl	r3,r17,r5
 801139c:	9c20983a 	sll	r16,r19,r16
 80113a0:	2008c03a 	cmpne	r4,r4,zero
 80113a4:	994ad83a 	srl	r5,r19,r5
 80113a8:	1c06b03a 	or	r3,r3,r16
 80113ac:	1922b03a 	or	r17,r3,r4
 80113b0:	0021883a 	mov	r16,zero
 80113b4:	003fa306 	br	8011244 <__alt_data_end+0xfc011244>
 80113b8:	2880202c 	andhi	r2,r5,128
 80113bc:	9007883a 	mov	r3,r18
 80113c0:	103fac1e 	bne	r2,zero,8011274 <__alt_data_end+0xfc011274>
 80113c4:	2804977a 	slli	r2,r5,29
 80113c8:	8822d0fa 	srli	r17,r17,3
 80113cc:	0101ffc4 	movi	r4,2047
 80113d0:	280ad0fa 	srli	r5,r5,3
 80113d4:	1444b03a 	or	r2,r2,r17
 80113d8:	81002c26 	beq	r16,r4,801148c <__adddf3+0x2c4>
 80113dc:	8120703a 	and	r16,r16,r4
 80113e0:	01000434 	movhi	r4,16
 80113e4:	213fffc4 	addi	r4,r4,-1
 80113e8:	2908703a 	and	r4,r5,r4
 80113ec:	003fad06 	br	80112a4 <__alt_data_end+0xfc0112a4>
 80113f0:	8089c83a 	sub	r4,r16,r2
 80113f4:	01006a0e 	bge	zero,r4,80115a0 <__adddf3+0x3d8>
 80113f8:	10003326 	beq	r2,zero,80114c8 <__adddf3+0x300>
 80113fc:	0081ffc4 	movi	r2,2047
 8011400:	80bf9026 	beq	r16,r2,8011244 <__alt_data_end+0xfc011244>
 8011404:	42002034 	orhi	r8,r8,128
 8011408:	00800e04 	movi	r2,56
 801140c:	1100b116 	blt	r2,r4,80116d4 <__adddf3+0x50c>
 8011410:	008007c4 	movi	r2,31
 8011414:	1100e216 	blt	r2,r4,80117a0 <__adddf3+0x5d8>
 8011418:	00800804 	movi	r2,32
 801141c:	1105c83a 	sub	r2,r2,r4
 8011420:	4092983a 	sll	r9,r8,r2
 8011424:	310ed83a 	srl	r7,r6,r4
 8011428:	3084983a 	sll	r2,r6,r2
 801142c:	4110d83a 	srl	r8,r8,r4
 8011430:	49ccb03a 	or	r6,r9,r7
 8011434:	1004c03a 	cmpne	r2,r2,zero
 8011438:	308cb03a 	or	r6,r6,r2
 801143c:	344d883a 	add	r6,r6,r17
 8011440:	3463803a 	cmpltu	r17,r6,r17
 8011444:	414b883a 	add	r5,r8,r5
 8011448:	2c4b883a 	add	r5,r5,r17
 801144c:	3023883a 	mov	r17,r6
 8011450:	2880202c 	andhi	r2,r5,128
 8011454:	10002726 	beq	r2,zero,80114f4 <__adddf3+0x32c>
 8011458:	84000044 	addi	r16,r16,1
 801145c:	0081ffc4 	movi	r2,2047
 8011460:	8080ae26 	beq	r16,r2,801171c <__adddf3+0x554>
 8011464:	00bfe034 	movhi	r2,65408
 8011468:	10bfffc4 	addi	r2,r2,-1
 801146c:	288a703a 	and	r5,r5,r2
 8011470:	880cd07a 	srli	r6,r17,1
 8011474:	280897fa 	slli	r4,r5,31
 8011478:	88c0004c 	andi	r3,r17,1
 801147c:	30e2b03a 	or	r17,r6,r3
 8011480:	280ad07a 	srli	r5,r5,1
 8011484:	8922b03a 	or	r17,r17,r4
 8011488:	003f6e06 	br	8011244 <__alt_data_end+0xfc011244>
 801148c:	1148b03a 	or	r4,r2,r5
 8011490:	20003c26 	beq	r4,zero,8011584 <__adddf3+0x3bc>
 8011494:	29000234 	orhi	r4,r5,8
 8011498:	01400434 	movhi	r5,16
 801149c:	297fffc4 	addi	r5,r5,-1
 80114a0:	2148703a 	and	r4,r4,r5
 80114a4:	003f7f06 	br	80112a4 <__alt_data_end+0xfc0112a4>
 80114a8:	18ffffc4 	addi	r3,r3,-1
 80114ac:	18004d1e 	bne	r3,zero,80115e4 <__adddf3+0x41c>
 80114b0:	898dc83a 	sub	r6,r17,r6
 80114b4:	89a3803a 	cmpltu	r17,r17,r6
 80114b8:	2a0bc83a 	sub	r5,r5,r8
 80114bc:	2c4bc83a 	sub	r5,r5,r17
 80114c0:	3023883a 	mov	r17,r6
 80114c4:	003f9c06 	br	8011338 <__alt_data_end+0xfc011338>
 80114c8:	4184b03a 	or	r2,r8,r6
 80114cc:	103f5d26 	beq	r2,zero,8011244 <__alt_data_end+0xfc011244>
 80114d0:	213fffc4 	addi	r4,r4,-1
 80114d4:	203fd926 	beq	r4,zero,801143c <__alt_data_end+0xfc01143c>
 80114d8:	0081ffc4 	movi	r2,2047
 80114dc:	80bfca1e 	bne	r16,r2,8011408 <__alt_data_end+0xfc011408>
 80114e0:	003f5806 	br	8011244 <__alt_data_end+0xfc011244>
 80114e4:	10c8b03a 	or	r4,r2,r3
 80114e8:	20008b26 	beq	r4,zero,8011718 <__adddf3+0x550>
 80114ec:	100b883a 	mov	r5,r2
 80114f0:	1823883a 	mov	r17,r3
 80114f4:	888001cc 	andi	r2,r17,7
 80114f8:	103f541e 	bne	r2,zero,801124c <__alt_data_end+0xfc01124c>
 80114fc:	9007883a 	mov	r3,r18
 8011500:	003fb006 	br	80113c4 <__alt_data_end+0xfc0113c4>
 8011504:	1800531e 	bne	r3,zero,8011654 <__adddf3+0x48c>
 8011508:	80800044 	addi	r2,r16,1
 801150c:	1081ffcc 	andi	r2,r2,2047
 8011510:	00c00044 	movi	r3,1
 8011514:	1880990e 	bge	r3,r2,801177c <__adddf3+0x5b4>
 8011518:	8985c83a 	sub	r2,r17,r6
 801151c:	8887803a 	cmpltu	r3,r17,r2
 8011520:	2a27c83a 	sub	r19,r5,r8
 8011524:	98e7c83a 	sub	r19,r19,r3
 8011528:	98c0202c 	andhi	r3,r19,128
 801152c:	18006226 	beq	r3,zero,80116b8 <__adddf3+0x4f0>
 8011530:	3463c83a 	sub	r17,r6,r17
 8011534:	4151c83a 	sub	r8,r8,r5
 8011538:	344d803a 	cmpltu	r6,r6,r17
 801153c:	41a7c83a 	sub	r19,r8,r6
 8011540:	3825883a 	mov	r18,r7
 8011544:	983f821e 	bne	r19,zero,8011350 <__alt_data_end+0xfc011350>
 8011548:	8809883a 	mov	r4,r17
 801154c:	80139600 	call	8013960 <__clzsi2>
 8011550:	10800804 	addi	r2,r2,32
 8011554:	10fffe04 	addi	r3,r2,-8
 8011558:	010007c4 	movi	r4,31
 801155c:	20ff810e 	bge	r4,r3,8011364 <__alt_data_end+0xfc011364>
 8011560:	14fff604 	addi	r19,r2,-40
 8011564:	8ce6983a 	sll	r19,r17,r19
 8011568:	0023883a 	mov	r17,zero
 801156c:	1c3f840e 	bge	r3,r16,8011380 <__alt_data_end+0xfc011380>
 8011570:	017fe034 	movhi	r5,65408
 8011574:	297fffc4 	addi	r5,r5,-1
 8011578:	80e1c83a 	sub	r16,r16,r3
 801157c:	994a703a 	and	r5,r19,r5
 8011580:	003f3006 	br	8011244 <__alt_data_end+0xfc011244>
 8011584:	0009883a 	mov	r4,zero
 8011588:	0005883a 	mov	r2,zero
 801158c:	003f4506 	br	80112a4 <__alt_data_end+0xfc0112a4>
 8011590:	418cb03a 	or	r6,r8,r6
 8011594:	300cc03a 	cmpne	r6,r6,zero
 8011598:	0007883a 	mov	r3,zero
 801159c:	003f6106 	br	8011324 <__alt_data_end+0xfc011324>
 80115a0:	2000921e 	bne	r4,zero,80117ec <__adddf3+0x624>
 80115a4:	80800044 	addi	r2,r16,1
 80115a8:	11c1ffcc 	andi	r7,r2,2047
 80115ac:	01000044 	movi	r4,1
 80115b0:	21c0610e 	bge	r4,r7,8011738 <__adddf3+0x570>
 80115b4:	0101ffc4 	movi	r4,2047
 80115b8:	1100a326 	beq	r2,r4,8011848 <__adddf3+0x680>
 80115bc:	344d883a 	add	r6,r6,r17
 80115c0:	3463803a 	cmpltu	r17,r6,r17
 80115c4:	414b883a 	add	r5,r8,r5
 80115c8:	2c4b883a 	add	r5,r5,r17
 80115cc:	282297fa 	slli	r17,r5,31
 80115d0:	300cd07a 	srli	r6,r6,1
 80115d4:	280ad07a 	srli	r5,r5,1
 80115d8:	1021883a 	mov	r16,r2
 80115dc:	89a2b03a 	or	r17,r17,r6
 80115e0:	003f1806 	br	8011244 <__alt_data_end+0xfc011244>
 80115e4:	0081ffc4 	movi	r2,2047
 80115e8:	80bf411e 	bne	r16,r2,80112f0 <__alt_data_end+0xfc0112f0>
 80115ec:	003f1506 	br	8011244 <__alt_data_end+0xfc011244>
 80115f0:	80bff844 	addi	r2,r16,-31
 80115f4:	00c00804 	movi	r3,32
 80115f8:	9884d83a 	srl	r2,r19,r2
 80115fc:	28c04a26 	beq	r5,r3,8011728 <__adddf3+0x560>
 8011600:	00c00fc4 	movi	r3,63
 8011604:	1c21c83a 	sub	r16,r3,r16
 8011608:	9c26983a 	sll	r19,r19,r16
 801160c:	9c62b03a 	or	r17,r19,r17
 8011610:	8822c03a 	cmpne	r17,r17,zero
 8011614:	88a2b03a 	or	r17,r17,r2
 8011618:	000b883a 	mov	r5,zero
 801161c:	0021883a 	mov	r16,zero
 8011620:	003fb406 	br	80114f4 <__alt_data_end+0xfc0114f4>
 8011624:	18bff804 	addi	r2,r3,-32
 8011628:	01000804 	movi	r4,32
 801162c:	4084d83a 	srl	r2,r8,r2
 8011630:	19003f26 	beq	r3,r4,8011730 <__adddf3+0x568>
 8011634:	01001004 	movi	r4,64
 8011638:	20c7c83a 	sub	r3,r4,r3
 801163c:	40d0983a 	sll	r8,r8,r3
 8011640:	418cb03a 	or	r6,r8,r6
 8011644:	300cc03a 	cmpne	r6,r6,zero
 8011648:	308cb03a 	or	r6,r6,r2
 801164c:	0007883a 	mov	r3,zero
 8011650:	003f3406 	br	8011324 <__alt_data_end+0xfc011324>
 8011654:	80002326 	beq	r16,zero,80116e4 <__adddf3+0x51c>
 8011658:	0101ffc4 	movi	r4,2047
 801165c:	11005e26 	beq	r2,r4,80117d8 <__adddf3+0x610>
 8011660:	00c7c83a 	sub	r3,zero,r3
 8011664:	29402034 	orhi	r5,r5,128
 8011668:	01000e04 	movi	r4,56
 801166c:	20c07216 	blt	r4,r3,8011838 <__adddf3+0x670>
 8011670:	010007c4 	movi	r4,31
 8011674:	20c0ce16 	blt	r4,r3,80119b0 <__adddf3+0x7e8>
 8011678:	01000804 	movi	r4,32
 801167c:	20c9c83a 	sub	r4,r4,r3
 8011680:	2914983a 	sll	r10,r5,r4
 8011684:	88d2d83a 	srl	r9,r17,r3
 8011688:	8908983a 	sll	r4,r17,r4
 801168c:	28c6d83a 	srl	r3,r5,r3
 8011690:	5262b03a 	or	r17,r10,r9
 8011694:	2008c03a 	cmpne	r4,r4,zero
 8011698:	8922b03a 	or	r17,r17,r4
 801169c:	3463c83a 	sub	r17,r6,r17
 80116a0:	40c7c83a 	sub	r3,r8,r3
 80116a4:	344d803a 	cmpltu	r6,r6,r17
 80116a8:	198bc83a 	sub	r5,r3,r6
 80116ac:	1021883a 	mov	r16,r2
 80116b0:	3825883a 	mov	r18,r7
 80116b4:	003f2006 	br	8011338 <__alt_data_end+0xfc011338>
 80116b8:	9886b03a 	or	r3,r19,r2
 80116bc:	1800141e 	bne	r3,zero,8011710 <__adddf3+0x548>
 80116c0:	0007883a 	mov	r3,zero
 80116c4:	000b883a 	mov	r5,zero
 80116c8:	0023883a 	mov	r17,zero
 80116cc:	0021883a 	mov	r16,zero
 80116d0:	003f3c06 	br	80113c4 <__alt_data_end+0xfc0113c4>
 80116d4:	418cb03a 	or	r6,r8,r6
 80116d8:	300cc03a 	cmpne	r6,r6,zero
 80116dc:	0011883a 	mov	r8,zero
 80116e0:	003f5606 	br	801143c <__alt_data_end+0xfc01143c>
 80116e4:	2c48b03a 	or	r4,r5,r17
 80116e8:	20003b26 	beq	r4,zero,80117d8 <__adddf3+0x610>
 80116ec:	00c6303a 	nor	r3,zero,r3
 80116f0:	1800371e 	bne	r3,zero,80117d0 <__adddf3+0x608>
 80116f4:	3463c83a 	sub	r17,r6,r17
 80116f8:	414bc83a 	sub	r5,r8,r5
 80116fc:	344d803a 	cmpltu	r6,r6,r17
 8011700:	298bc83a 	sub	r5,r5,r6
 8011704:	1021883a 	mov	r16,r2
 8011708:	3825883a 	mov	r18,r7
 801170c:	003f0a06 	br	8011338 <__alt_data_end+0xfc011338>
 8011710:	1023883a 	mov	r17,r2
 8011714:	003f0d06 	br	801134c <__alt_data_end+0xfc01134c>
 8011718:	0007883a 	mov	r3,zero
 801171c:	000b883a 	mov	r5,zero
 8011720:	0023883a 	mov	r17,zero
 8011724:	003f2706 	br	80113c4 <__alt_data_end+0xfc0113c4>
 8011728:	0027883a 	mov	r19,zero
 801172c:	003fb706 	br	801160c <__alt_data_end+0xfc01160c>
 8011730:	0011883a 	mov	r8,zero
 8011734:	003fc206 	br	8011640 <__alt_data_end+0xfc011640>
 8011738:	2c44b03a 	or	r2,r5,r17
 801173c:	8000871e 	bne	r16,zero,801195c <__adddf3+0x794>
 8011740:	1000b126 	beq	r2,zero,8011a08 <__adddf3+0x840>
 8011744:	4184b03a 	or	r2,r8,r6
 8011748:	103ebe26 	beq	r2,zero,8011244 <__alt_data_end+0xfc011244>
 801174c:	3445883a 	add	r2,r6,r17
 8011750:	1463803a 	cmpltu	r17,r2,r17
 8011754:	414b883a 	add	r5,r8,r5
 8011758:	2c4b883a 	add	r5,r5,r17
 801175c:	28c0202c 	andhi	r3,r5,128
 8011760:	1023883a 	mov	r17,r2
 8011764:	183f6326 	beq	r3,zero,80114f4 <__alt_data_end+0xfc0114f4>
 8011768:	00bfe034 	movhi	r2,65408
 801176c:	10bfffc4 	addi	r2,r2,-1
 8011770:	2021883a 	mov	r16,r4
 8011774:	288a703a 	and	r5,r5,r2
 8011778:	003eb206 	br	8011244 <__alt_data_end+0xfc011244>
 801177c:	2c44b03a 	or	r2,r5,r17
 8011780:	8000251e 	bne	r16,zero,8011818 <__adddf3+0x650>
 8011784:	10004b1e 	bne	r2,zero,80118b4 <__adddf3+0x6ec>
 8011788:	4184b03a 	or	r2,r8,r6
 801178c:	103fe226 	beq	r2,zero,8011718 <__alt_data_end+0xfc011718>
 8011790:	400b883a 	mov	r5,r8
 8011794:	3023883a 	mov	r17,r6
 8011798:	3825883a 	mov	r18,r7
 801179c:	003ea906 	br	8011244 <__alt_data_end+0xfc011244>
 80117a0:	20bff804 	addi	r2,r4,-32
 80117a4:	01c00804 	movi	r7,32
 80117a8:	4084d83a 	srl	r2,r8,r2
 80117ac:	21c07e26 	beq	r4,r7,80119a8 <__adddf3+0x7e0>
 80117b0:	01c01004 	movi	r7,64
 80117b4:	3909c83a 	sub	r4,r7,r4
 80117b8:	4110983a 	sll	r8,r8,r4
 80117bc:	418cb03a 	or	r6,r8,r6
 80117c0:	300cc03a 	cmpne	r6,r6,zero
 80117c4:	308cb03a 	or	r6,r6,r2
 80117c8:	0011883a 	mov	r8,zero
 80117cc:	003f1b06 	br	801143c <__alt_data_end+0xfc01143c>
 80117d0:	0101ffc4 	movi	r4,2047
 80117d4:	113fa41e 	bne	r2,r4,8011668 <__alt_data_end+0xfc011668>
 80117d8:	400b883a 	mov	r5,r8
 80117dc:	3023883a 	mov	r17,r6
 80117e0:	1021883a 	mov	r16,r2
 80117e4:	3825883a 	mov	r18,r7
 80117e8:	003e9606 	br	8011244 <__alt_data_end+0xfc011244>
 80117ec:	80001a1e 	bne	r16,zero,8011858 <__adddf3+0x690>
 80117f0:	2c4eb03a 	or	r7,r5,r17
 80117f4:	38005526 	beq	r7,zero,801194c <__adddf3+0x784>
 80117f8:	0108303a 	nor	r4,zero,r4
 80117fc:	2000511e 	bne	r4,zero,8011944 <__adddf3+0x77c>
 8011800:	89a3883a 	add	r17,r17,r6
 8011804:	414b883a 	add	r5,r8,r5
 8011808:	898d803a 	cmpltu	r6,r17,r6
 801180c:	298b883a 	add	r5,r5,r6
 8011810:	1021883a 	mov	r16,r2
 8011814:	003f0e06 	br	8011450 <__alt_data_end+0xfc011450>
 8011818:	1000341e 	bne	r2,zero,80118ec <__adddf3+0x724>
 801181c:	4184b03a 	or	r2,r8,r6
 8011820:	10006f26 	beq	r2,zero,80119e0 <__adddf3+0x818>
 8011824:	400b883a 	mov	r5,r8
 8011828:	3023883a 	mov	r17,r6
 801182c:	3825883a 	mov	r18,r7
 8011830:	0401ffc4 	movi	r16,2047
 8011834:	003e8306 	br	8011244 <__alt_data_end+0xfc011244>
 8011838:	2c62b03a 	or	r17,r5,r17
 801183c:	8822c03a 	cmpne	r17,r17,zero
 8011840:	0007883a 	mov	r3,zero
 8011844:	003f9506 	br	801169c <__alt_data_end+0xfc01169c>
 8011848:	1021883a 	mov	r16,r2
 801184c:	000b883a 	mov	r5,zero
 8011850:	0023883a 	mov	r17,zero
 8011854:	003edb06 	br	80113c4 <__alt_data_end+0xfc0113c4>
 8011858:	01c1ffc4 	movi	r7,2047
 801185c:	11c03b26 	beq	r2,r7,801194c <__adddf3+0x784>
 8011860:	0109c83a 	sub	r4,zero,r4
 8011864:	29402034 	orhi	r5,r5,128
 8011868:	01c00e04 	movi	r7,56
 801186c:	39006216 	blt	r7,r4,80119f8 <__adddf3+0x830>
 8011870:	01c007c4 	movi	r7,31
 8011874:	39006b16 	blt	r7,r4,8011a24 <__adddf3+0x85c>
 8011878:	01c00804 	movi	r7,32
 801187c:	390fc83a 	sub	r7,r7,r4
 8011880:	29d4983a 	sll	r10,r5,r7
 8011884:	8912d83a 	srl	r9,r17,r4
 8011888:	89ce983a 	sll	r7,r17,r7
 801188c:	2908d83a 	srl	r4,r5,r4
 8011890:	5262b03a 	or	r17,r10,r9
 8011894:	380ac03a 	cmpne	r5,r7,zero
 8011898:	8962b03a 	or	r17,r17,r5
 801189c:	89a3883a 	add	r17,r17,r6
 80118a0:	2211883a 	add	r8,r4,r8
 80118a4:	898d803a 	cmpltu	r6,r17,r6
 80118a8:	418b883a 	add	r5,r8,r6
 80118ac:	1021883a 	mov	r16,r2
 80118b0:	003ee706 	br	8011450 <__alt_data_end+0xfc011450>
 80118b4:	4184b03a 	or	r2,r8,r6
 80118b8:	103e6226 	beq	r2,zero,8011244 <__alt_data_end+0xfc011244>
 80118bc:	8987c83a 	sub	r3,r17,r6
 80118c0:	88c9803a 	cmpltu	r4,r17,r3
 80118c4:	2a05c83a 	sub	r2,r5,r8
 80118c8:	1105c83a 	sub	r2,r2,r4
 80118cc:	1100202c 	andhi	r4,r2,128
 80118d0:	203f0426 	beq	r4,zero,80114e4 <__alt_data_end+0xfc0114e4>
 80118d4:	3463c83a 	sub	r17,r6,r17
 80118d8:	414bc83a 	sub	r5,r8,r5
 80118dc:	344d803a 	cmpltu	r6,r6,r17
 80118e0:	298bc83a 	sub	r5,r5,r6
 80118e4:	3825883a 	mov	r18,r7
 80118e8:	003e5606 	br	8011244 <__alt_data_end+0xfc011244>
 80118ec:	4184b03a 	or	r2,r8,r6
 80118f0:	10002b26 	beq	r2,zero,80119a0 <__adddf3+0x7d8>
 80118f4:	2804d0fa 	srli	r2,r5,3
 80118f8:	8822d0fa 	srli	r17,r17,3
 80118fc:	280a977a 	slli	r5,r5,29
 8011900:	10c0022c 	andhi	r3,r2,8
 8011904:	2c62b03a 	or	r17,r5,r17
 8011908:	18000826 	beq	r3,zero,801192c <__adddf3+0x764>
 801190c:	4008d0fa 	srli	r4,r8,3
 8011910:	20c0022c 	andhi	r3,r4,8
 8011914:	1800051e 	bne	r3,zero,801192c <__adddf3+0x764>
 8011918:	300cd0fa 	srli	r6,r6,3
 801191c:	4010977a 	slli	r8,r8,29
 8011920:	2005883a 	mov	r2,r4
 8011924:	3825883a 	mov	r18,r7
 8011928:	41a2b03a 	or	r17,r8,r6
 801192c:	880ad77a 	srli	r5,r17,29
 8011930:	100490fa 	slli	r2,r2,3
 8011934:	882290fa 	slli	r17,r17,3
 8011938:	0401ffc4 	movi	r16,2047
 801193c:	288ab03a 	or	r5,r5,r2
 8011940:	003e4006 	br	8011244 <__alt_data_end+0xfc011244>
 8011944:	01c1ffc4 	movi	r7,2047
 8011948:	11ffc71e 	bne	r2,r7,8011868 <__alt_data_end+0xfc011868>
 801194c:	400b883a 	mov	r5,r8
 8011950:	3023883a 	mov	r17,r6
 8011954:	1021883a 	mov	r16,r2
 8011958:	003e3a06 	br	8011244 <__alt_data_end+0xfc011244>
 801195c:	10002d26 	beq	r2,zero,8011a14 <__adddf3+0x84c>
 8011960:	4184b03a 	or	r2,r8,r6
 8011964:	10000e26 	beq	r2,zero,80119a0 <__adddf3+0x7d8>
 8011968:	2804d0fa 	srli	r2,r5,3
 801196c:	8822d0fa 	srli	r17,r17,3
 8011970:	280a977a 	slli	r5,r5,29
 8011974:	10c0022c 	andhi	r3,r2,8
 8011978:	2c62b03a 	or	r17,r5,r17
 801197c:	183feb26 	beq	r3,zero,801192c <__alt_data_end+0xfc01192c>
 8011980:	4008d0fa 	srli	r4,r8,3
 8011984:	20c0022c 	andhi	r3,r4,8
 8011988:	183fe81e 	bne	r3,zero,801192c <__alt_data_end+0xfc01192c>
 801198c:	300cd0fa 	srli	r6,r6,3
 8011990:	4010977a 	slli	r8,r8,29
 8011994:	2005883a 	mov	r2,r4
 8011998:	41a2b03a 	or	r17,r8,r6
 801199c:	003fe306 	br	801192c <__alt_data_end+0xfc01192c>
 80119a0:	0401ffc4 	movi	r16,2047
 80119a4:	003e2706 	br	8011244 <__alt_data_end+0xfc011244>
 80119a8:	0011883a 	mov	r8,zero
 80119ac:	003f8306 	br	80117bc <__alt_data_end+0xfc0117bc>
 80119b0:	193ff804 	addi	r4,r3,-32
 80119b4:	02400804 	movi	r9,32
 80119b8:	2908d83a 	srl	r4,r5,r4
 80119bc:	1a402526 	beq	r3,r9,8011a54 <__adddf3+0x88c>
 80119c0:	02401004 	movi	r9,64
 80119c4:	48c7c83a 	sub	r3,r9,r3
 80119c8:	28ca983a 	sll	r5,r5,r3
 80119cc:	2c62b03a 	or	r17,r5,r17
 80119d0:	8822c03a 	cmpne	r17,r17,zero
 80119d4:	8922b03a 	or	r17,r17,r4
 80119d8:	0007883a 	mov	r3,zero
 80119dc:	003f2f06 	br	801169c <__alt_data_end+0xfc01169c>
 80119e0:	01402034 	movhi	r5,128
 80119e4:	0007883a 	mov	r3,zero
 80119e8:	297fffc4 	addi	r5,r5,-1
 80119ec:	047ffe04 	movi	r17,-8
 80119f0:	0401ffc4 	movi	r16,2047
 80119f4:	003e7306 	br	80113c4 <__alt_data_end+0xfc0113c4>
 80119f8:	2c62b03a 	or	r17,r5,r17
 80119fc:	8822c03a 	cmpne	r17,r17,zero
 8011a00:	0009883a 	mov	r4,zero
 8011a04:	003fa506 	br	801189c <__alt_data_end+0xfc01189c>
 8011a08:	400b883a 	mov	r5,r8
 8011a0c:	3023883a 	mov	r17,r6
 8011a10:	003e0c06 	br	8011244 <__alt_data_end+0xfc011244>
 8011a14:	400b883a 	mov	r5,r8
 8011a18:	3023883a 	mov	r17,r6
 8011a1c:	0401ffc4 	movi	r16,2047
 8011a20:	003e0806 	br	8011244 <__alt_data_end+0xfc011244>
 8011a24:	21fff804 	addi	r7,r4,-32
 8011a28:	02400804 	movi	r9,32
 8011a2c:	29ced83a 	srl	r7,r5,r7
 8011a30:	22400a26 	beq	r4,r9,8011a5c <__adddf3+0x894>
 8011a34:	02401004 	movi	r9,64
 8011a38:	4909c83a 	sub	r4,r9,r4
 8011a3c:	290a983a 	sll	r5,r5,r4
 8011a40:	2c62b03a 	or	r17,r5,r17
 8011a44:	8822c03a 	cmpne	r17,r17,zero
 8011a48:	89e2b03a 	or	r17,r17,r7
 8011a4c:	0009883a 	mov	r4,zero
 8011a50:	003f9206 	br	801189c <__alt_data_end+0xfc01189c>
 8011a54:	000b883a 	mov	r5,zero
 8011a58:	003fdc06 	br	80119cc <__alt_data_end+0xfc0119cc>
 8011a5c:	000b883a 	mov	r5,zero
 8011a60:	003ff706 	br	8011a40 <__alt_data_end+0xfc011a40>

08011a64 <__divdf3>:
 8011a64:	defff004 	addi	sp,sp,-64
 8011a68:	dc800815 	stw	r18,32(sp)
 8011a6c:	2824d53a 	srli	r18,r5,20
 8011a70:	dd800c15 	stw	r22,48(sp)
 8011a74:	282cd7fa 	srli	r22,r5,31
 8011a78:	dc000615 	stw	r16,24(sp)
 8011a7c:	04000434 	movhi	r16,16
 8011a80:	df000e15 	stw	fp,56(sp)
 8011a84:	dd000a15 	stw	r20,40(sp)
 8011a88:	dcc00915 	stw	r19,36(sp)
 8011a8c:	dc400715 	stw	r17,28(sp)
 8011a90:	843fffc4 	addi	r16,r16,-1
 8011a94:	dfc00f15 	stw	ra,60(sp)
 8011a98:	ddc00d15 	stw	r23,52(sp)
 8011a9c:	dd400b15 	stw	r21,44(sp)
 8011aa0:	9481ffcc 	andi	r18,r18,2047
 8011aa4:	2029883a 	mov	r20,r4
 8011aa8:	2027883a 	mov	r19,r4
 8011aac:	2c22703a 	and	r17,r5,r16
 8011ab0:	b7003fcc 	andi	fp,r22,255
 8011ab4:	90005e26 	beq	r18,zero,8011c30 <__divdf3+0x1cc>
 8011ab8:	0081ffc4 	movi	r2,2047
 8011abc:	90803526 	beq	r18,r2,8011b94 <__divdf3+0x130>
 8011ac0:	8c000434 	orhi	r16,r17,16
 8011ac4:	2004d77a 	srli	r2,r4,29
 8011ac8:	802090fa 	slli	r16,r16,3
 8011acc:	202690fa 	slli	r19,r4,3
 8011ad0:	94bf0044 	addi	r18,r18,-1023
 8011ad4:	80a2b03a 	or	r17,r16,r2
 8011ad8:	0029883a 	mov	r20,zero
 8011adc:	0011883a 	mov	r8,zero
 8011ae0:	380ad53a 	srli	r5,r7,20
 8011ae4:	382ed7fa 	srli	r23,r7,31
 8011ae8:	04000434 	movhi	r16,16
 8011aec:	843fffc4 	addi	r16,r16,-1
 8011af0:	2941ffcc 	andi	r5,r5,2047
 8011af4:	302b883a 	mov	r21,r6
 8011af8:	3c20703a 	and	r16,r7,r16
 8011afc:	ba403fcc 	andi	r9,r23,255
 8011b00:	28006726 	beq	r5,zero,8011ca0 <__divdf3+0x23c>
 8011b04:	0081ffc4 	movi	r2,2047
 8011b08:	28805f26 	beq	r5,r2,8011c88 <__divdf3+0x224>
 8011b0c:	84000434 	orhi	r16,r16,16
 8011b10:	3004d77a 	srli	r2,r6,29
 8011b14:	802090fa 	slli	r16,r16,3
 8011b18:	302a90fa 	slli	r21,r6,3
 8011b1c:	297f0044 	addi	r5,r5,-1023
 8011b20:	80a0b03a 	or	r16,r16,r2
 8011b24:	000f883a 	mov	r7,zero
 8011b28:	3d06b03a 	or	r3,r7,r20
 8011b2c:	180690ba 	slli	r3,r3,2
 8011b30:	00820074 	movhi	r2,2049
 8011b34:	1086d504 	addi	r2,r2,6996
 8011b38:	1885883a 	add	r2,r3,r2
 8011b3c:	10800017 	ldw	r2,0(r2)
 8011b40:	b5c8f03a 	xor	r4,r22,r23
 8011b44:	200d883a 	mov	r6,r4
 8011b48:	25003fcc 	andi	r20,r4,255
 8011b4c:	9165c83a 	sub	r18,r18,r5
 8011b50:	1000683a 	jmp	r2
 8011b54:	08011d9c 	xori	zero,at,1142
 8011b58:	08011bcc 	andi	zero,at,1135
 8011b5c:	08011d60 	cmpeqi	zero,at,1141
 8011b60:	08011bb0 	cmpltui	zero,at,1134
 8011b64:	08011d60 	cmpeqi	zero,at,1141
 8011b68:	08011d34 	orhi	zero,at,1140
 8011b6c:	08011d60 	cmpeqi	zero,at,1141
 8011b70:	08011bb0 	cmpltui	zero,at,1134
 8011b74:	08011bcc 	andi	zero,at,1135
 8011b78:	08011bcc 	andi	zero,at,1135
 8011b7c:	08011d34 	orhi	zero,at,1140
 8011b80:	08011bb0 	cmpltui	zero,at,1134
 8011b84:	08011bc0 	call	8011bc <__reset-0x77fee44>
 8011b88:	08011bc0 	call	8011bc <__reset-0x77fee44>
 8011b8c:	08011bc0 	call	8011bc <__reset-0x77fee44>
 8011b90:	08011d70 	cmpltui	zero,at,1141
 8011b94:	8904b03a 	or	r2,r17,r4
 8011b98:	1000631e 	bne	r2,zero,8011d28 <__divdf3+0x2c4>
 8011b9c:	05000204 	movi	r20,8
 8011ba0:	0023883a 	mov	r17,zero
 8011ba4:	0027883a 	mov	r19,zero
 8011ba8:	02000084 	movi	r8,2
 8011bac:	003fcc06 	br	8011ae0 <__alt_data_end+0xfc011ae0>
 8011bb0:	8023883a 	mov	r17,r16
 8011bb4:	a827883a 	mov	r19,r21
 8011bb8:	4839883a 	mov	fp,r9
 8011bbc:	3811883a 	mov	r8,r7
 8011bc0:	00800084 	movi	r2,2
 8011bc4:	4081531e 	bne	r8,r2,8012114 <__divdf3+0x6b0>
 8011bc8:	e029883a 	mov	r20,fp
 8011bcc:	a180004c 	andi	r6,r20,1
 8011bd0:	0201ffc4 	movi	r8,2047
 8011bd4:	000b883a 	mov	r5,zero
 8011bd8:	0027883a 	mov	r19,zero
 8011bdc:	4010953a 	slli	r8,r8,20
 8011be0:	30c03fcc 	andi	r3,r6,255
 8011be4:	04000434 	movhi	r16,16
 8011be8:	180697fa 	slli	r3,r3,31
 8011bec:	843fffc4 	addi	r16,r16,-1
 8011bf0:	2c20703a 	and	r16,r5,r16
 8011bf4:	8220b03a 	or	r16,r16,r8
 8011bf8:	80c6b03a 	or	r3,r16,r3
 8011bfc:	9805883a 	mov	r2,r19
 8011c00:	dfc00f17 	ldw	ra,60(sp)
 8011c04:	df000e17 	ldw	fp,56(sp)
 8011c08:	ddc00d17 	ldw	r23,52(sp)
 8011c0c:	dd800c17 	ldw	r22,48(sp)
 8011c10:	dd400b17 	ldw	r21,44(sp)
 8011c14:	dd000a17 	ldw	r20,40(sp)
 8011c18:	dcc00917 	ldw	r19,36(sp)
 8011c1c:	dc800817 	ldw	r18,32(sp)
 8011c20:	dc400717 	ldw	r17,28(sp)
 8011c24:	dc000617 	ldw	r16,24(sp)
 8011c28:	dec01004 	addi	sp,sp,64
 8011c2c:	f800283a 	ret
 8011c30:	8904b03a 	or	r2,r17,r4
 8011c34:	10003726 	beq	r2,zero,8011d14 <__divdf3+0x2b0>
 8011c38:	88014d26 	beq	r17,zero,8012170 <__divdf3+0x70c>
 8011c3c:	8809883a 	mov	r4,r17
 8011c40:	d9800215 	stw	r6,8(sp)
 8011c44:	d9c00515 	stw	r7,20(sp)
 8011c48:	80139600 	call	8013960 <__clzsi2>
 8011c4c:	d9800217 	ldw	r6,8(sp)
 8011c50:	d9c00517 	ldw	r7,20(sp)
 8011c54:	1007883a 	mov	r3,r2
 8011c58:	01000a04 	movi	r4,40
 8011c5c:	1cfffe04 	addi	r19,r3,-8
 8011c60:	20c9c83a 	sub	r4,r4,r3
 8011c64:	8cca983a 	sll	r5,r17,r19
 8011c68:	a108d83a 	srl	r4,r20,r4
 8011c6c:	a4e6983a 	sll	r19,r20,r19
 8011c70:	2162b03a 	or	r17,r4,r5
 8011c74:	04bf0344 	movi	r18,-1011
 8011c78:	90e5c83a 	sub	r18,r18,r3
 8011c7c:	0029883a 	mov	r20,zero
 8011c80:	0011883a 	mov	r8,zero
 8011c84:	003f9606 	br	8011ae0 <__alt_data_end+0xfc011ae0>
 8011c88:	8184b03a 	or	r2,r16,r6
 8011c8c:	10001f1e 	bne	r2,zero,8011d0c <__divdf3+0x2a8>
 8011c90:	0021883a 	mov	r16,zero
 8011c94:	002b883a 	mov	r21,zero
 8011c98:	01c00084 	movi	r7,2
 8011c9c:	003fa206 	br	8011b28 <__alt_data_end+0xfc011b28>
 8011ca0:	8184b03a 	or	r2,r16,r6
 8011ca4:	10001526 	beq	r2,zero,8011cfc <__divdf3+0x298>
 8011ca8:	80013d26 	beq	r16,zero,80121a0 <__divdf3+0x73c>
 8011cac:	8009883a 	mov	r4,r16
 8011cb0:	d9800215 	stw	r6,8(sp)
 8011cb4:	da000315 	stw	r8,12(sp)
 8011cb8:	da400415 	stw	r9,16(sp)
 8011cbc:	80139600 	call	8013960 <__clzsi2>
 8011cc0:	d9800217 	ldw	r6,8(sp)
 8011cc4:	da000317 	ldw	r8,12(sp)
 8011cc8:	da400417 	ldw	r9,16(sp)
 8011ccc:	1007883a 	mov	r3,r2
 8011cd0:	01000a04 	movi	r4,40
 8011cd4:	1d7ffe04 	addi	r21,r3,-8
 8011cd8:	20c9c83a 	sub	r4,r4,r3
 8011cdc:	8560983a 	sll	r16,r16,r21
 8011ce0:	3108d83a 	srl	r4,r6,r4
 8011ce4:	356a983a 	sll	r21,r6,r21
 8011ce8:	2420b03a 	or	r16,r4,r16
 8011cec:	017f0344 	movi	r5,-1011
 8011cf0:	28cbc83a 	sub	r5,r5,r3
 8011cf4:	000f883a 	mov	r7,zero
 8011cf8:	003f8b06 	br	8011b28 <__alt_data_end+0xfc011b28>
 8011cfc:	0021883a 	mov	r16,zero
 8011d00:	002b883a 	mov	r21,zero
 8011d04:	01c00044 	movi	r7,1
 8011d08:	003f8706 	br	8011b28 <__alt_data_end+0xfc011b28>
 8011d0c:	01c000c4 	movi	r7,3
 8011d10:	003f8506 	br	8011b28 <__alt_data_end+0xfc011b28>
 8011d14:	05000104 	movi	r20,4
 8011d18:	0023883a 	mov	r17,zero
 8011d1c:	0027883a 	mov	r19,zero
 8011d20:	02000044 	movi	r8,1
 8011d24:	003f6e06 	br	8011ae0 <__alt_data_end+0xfc011ae0>
 8011d28:	05000304 	movi	r20,12
 8011d2c:	020000c4 	movi	r8,3
 8011d30:	003f6b06 	br	8011ae0 <__alt_data_end+0xfc011ae0>
 8011d34:	01400434 	movhi	r5,16
 8011d38:	000d883a 	mov	r6,zero
 8011d3c:	297fffc4 	addi	r5,r5,-1
 8011d40:	04ffffc4 	movi	r19,-1
 8011d44:	0201ffc4 	movi	r8,2047
 8011d48:	003fa406 	br	8011bdc <__alt_data_end+0xfc011bdc>
 8011d4c:	043f0084 	movi	r16,-1022
 8011d50:	84a1c83a 	sub	r16,r16,r18
 8011d54:	00800e04 	movi	r2,56
 8011d58:	14014d0e 	bge	r2,r16,8012290 <__divdf3+0x82c>
 8011d5c:	a180004c 	andi	r6,r20,1
 8011d60:	0011883a 	mov	r8,zero
 8011d64:	000b883a 	mov	r5,zero
 8011d68:	0027883a 	mov	r19,zero
 8011d6c:	003f9b06 	br	8011bdc <__alt_data_end+0xfc011bdc>
 8011d70:	8880022c 	andhi	r2,r17,8
 8011d74:	1000f026 	beq	r2,zero,8012138 <__divdf3+0x6d4>
 8011d78:	8080022c 	andhi	r2,r16,8
 8011d7c:	1000ee1e 	bne	r2,zero,8012138 <__divdf3+0x6d4>
 8011d80:	00800434 	movhi	r2,16
 8011d84:	81400234 	orhi	r5,r16,8
 8011d88:	10bfffc4 	addi	r2,r2,-1
 8011d8c:	b80d883a 	mov	r6,r23
 8011d90:	288a703a 	and	r5,r5,r2
 8011d94:	a827883a 	mov	r19,r21
 8011d98:	003fea06 	br	8011d44 <__alt_data_end+0xfc011d44>
 8011d9c:	84411c36 	bltu	r16,r17,8012210 <__divdf3+0x7ac>
 8011da0:	8c011a26 	beq	r17,r16,801220c <__divdf3+0x7a8>
 8011da4:	94bfffc4 	addi	r18,r18,-1
 8011da8:	dcc00015 	stw	r19,0(sp)
 8011dac:	8811883a 	mov	r8,r17
 8011db0:	002d883a 	mov	r22,zero
 8011db4:	a80cd63a 	srli	r6,r21,24
 8011db8:	8020923a 	slli	r16,r16,8
 8011dbc:	a82a923a 	slli	r21,r21,8
 8011dc0:	4009883a 	mov	r4,r8
 8011dc4:	342eb03a 	or	r23,r6,r16
 8011dc8:	dd400115 	stw	r21,4(sp)
 8011dcc:	b82ad43a 	srli	r21,r23,16
 8011dd0:	da000315 	stw	r8,12(sp)
 8011dd4:	bcffffcc 	andi	r19,r23,65535
 8011dd8:	a80b883a 	mov	r5,r21
 8011ddc:	80111b80 	call	80111b8 <__udivsi3>
 8011de0:	1009883a 	mov	r4,r2
 8011de4:	980b883a 	mov	r5,r19
 8011de8:	1023883a 	mov	r17,r2
 8011dec:	8002f580 	call	8002f58 <__mulsi3>
 8011df0:	da000317 	ldw	r8,12(sp)
 8011df4:	a80b883a 	mov	r5,r21
 8011df8:	1039883a 	mov	fp,r2
 8011dfc:	4009883a 	mov	r4,r8
 8011e00:	80111c00 	call	80111c0 <__umodsi3>
 8011e04:	d8c00017 	ldw	r3,0(sp)
 8011e08:	1004943a 	slli	r2,r2,16
 8011e0c:	1810d43a 	srli	r8,r3,16
 8011e10:	120eb03a 	or	r7,r2,r8
 8011e14:	3f00062e 	bgeu	r7,fp,8011e30 <__divdf3+0x3cc>
 8011e18:	3dcf883a 	add	r7,r7,r23
 8011e1c:	88bfffc4 	addi	r2,r17,-1
 8011e20:	3dc10a36 	bltu	r7,r23,801224c <__divdf3+0x7e8>
 8011e24:	3f01092e 	bgeu	r7,fp,801224c <__divdf3+0x7e8>
 8011e28:	8c7fff84 	addi	r17,r17,-2
 8011e2c:	3dcf883a 	add	r7,r7,r23
 8011e30:	3f39c83a 	sub	fp,r7,fp
 8011e34:	e009883a 	mov	r4,fp
 8011e38:	a80b883a 	mov	r5,r21
 8011e3c:	80111b80 	call	80111b8 <__udivsi3>
 8011e40:	1009883a 	mov	r4,r2
 8011e44:	980b883a 	mov	r5,r19
 8011e48:	1021883a 	mov	r16,r2
 8011e4c:	8002f580 	call	8002f58 <__mulsi3>
 8011e50:	e009883a 	mov	r4,fp
 8011e54:	a80b883a 	mov	r5,r21
 8011e58:	d8800315 	stw	r2,12(sp)
 8011e5c:	80111c00 	call	80111c0 <__umodsi3>
 8011e60:	d9000017 	ldw	r4,0(sp)
 8011e64:	1004943a 	slli	r2,r2,16
 8011e68:	da000317 	ldw	r8,12(sp)
 8011e6c:	20ffffcc 	andi	r3,r4,65535
 8011e70:	10ceb03a 	or	r7,r2,r3
 8011e74:	3a00062e 	bgeu	r7,r8,8011e90 <__divdf3+0x42c>
 8011e78:	3dcf883a 	add	r7,r7,r23
 8011e7c:	80bfffc4 	addi	r2,r16,-1
 8011e80:	3dc0f036 	bltu	r7,r23,8012244 <__divdf3+0x7e0>
 8011e84:	3a00ef2e 	bgeu	r7,r8,8012244 <__divdf3+0x7e0>
 8011e88:	843fff84 	addi	r16,r16,-2
 8011e8c:	3dcf883a 	add	r7,r7,r23
 8011e90:	d8c00117 	ldw	r3,4(sp)
 8011e94:	8822943a 	slli	r17,r17,16
 8011e98:	3a0fc83a 	sub	r7,r7,r8
 8011e9c:	1806d43a 	srli	r3,r3,16
 8011ea0:	8462b03a 	or	r17,r16,r17
 8011ea4:	8affffcc 	andi	r11,r17,65535
 8011ea8:	d8c00015 	stw	r3,0(sp)
 8011eac:	d8c00117 	ldw	r3,4(sp)
 8011eb0:	8820d43a 	srli	r16,r17,16
 8011eb4:	5809883a 	mov	r4,r11
 8011eb8:	1f3fffcc 	andi	fp,r3,65535
 8011ebc:	e00b883a 	mov	r5,fp
 8011ec0:	d9c00515 	stw	r7,20(sp)
 8011ec4:	dac00215 	stw	r11,8(sp)
 8011ec8:	8002f580 	call	8002f58 <__mulsi3>
 8011ecc:	8009883a 	mov	r4,r16
 8011ed0:	e00b883a 	mov	r5,fp
 8011ed4:	d8800415 	stw	r2,16(sp)
 8011ed8:	8002f580 	call	8002f58 <__mulsi3>
 8011edc:	d9400017 	ldw	r5,0(sp)
 8011ee0:	8009883a 	mov	r4,r16
 8011ee4:	d8800315 	stw	r2,12(sp)
 8011ee8:	8002f580 	call	8002f58 <__mulsi3>
 8011eec:	dac00217 	ldw	r11,8(sp)
 8011ef0:	d9400017 	ldw	r5,0(sp)
 8011ef4:	d8800215 	stw	r2,8(sp)
 8011ef8:	5809883a 	mov	r4,r11
 8011efc:	8002f580 	call	8002f58 <__mulsi3>
 8011f00:	da400417 	ldw	r9,16(sp)
 8011f04:	da800317 	ldw	r10,12(sp)
 8011f08:	d9c00517 	ldw	r7,20(sp)
 8011f0c:	480ad43a 	srli	r5,r9,16
 8011f10:	5085883a 	add	r2,r10,r2
 8011f14:	db000217 	ldw	r12,8(sp)
 8011f18:	1151883a 	add	r8,r2,r5
 8011f1c:	4280022e 	bgeu	r8,r10,8011f28 <__divdf3+0x4c4>
 8011f20:	00800074 	movhi	r2,1
 8011f24:	6099883a 	add	r12,r12,r2
 8011f28:	400ad43a 	srli	r5,r8,16
 8011f2c:	4010943a 	slli	r8,r8,16
 8011f30:	4c3fffcc 	andi	r16,r9,65535
 8011f34:	6149883a 	add	r4,r12,r5
 8011f38:	4411883a 	add	r8,r8,r16
 8011f3c:	3900a736 	bltu	r7,r4,80121dc <__divdf3+0x778>
 8011f40:	3900c426 	beq	r7,r4,8012254 <__divdf3+0x7f0>
 8011f44:	3909c83a 	sub	r4,r7,r4
 8011f48:	b221c83a 	sub	r16,r22,r8
 8011f4c:	b42d803a 	cmpltu	r22,r22,r16
 8011f50:	25adc83a 	sub	r22,r4,r22
 8011f54:	b5c0c626 	beq	r22,r23,8012270 <__divdf3+0x80c>
 8011f58:	b009883a 	mov	r4,r22
 8011f5c:	a80b883a 	mov	r5,r21
 8011f60:	80111b80 	call	80111b8 <__udivsi3>
 8011f64:	1009883a 	mov	r4,r2
 8011f68:	980b883a 	mov	r5,r19
 8011f6c:	d8800315 	stw	r2,12(sp)
 8011f70:	8002f580 	call	8002f58 <__mulsi3>
 8011f74:	a80b883a 	mov	r5,r21
 8011f78:	b009883a 	mov	r4,r22
 8011f7c:	d8800415 	stw	r2,16(sp)
 8011f80:	80111c00 	call	80111c0 <__umodsi3>
 8011f84:	1004943a 	slli	r2,r2,16
 8011f88:	800ed43a 	srli	r7,r16,16
 8011f8c:	da400417 	ldw	r9,16(sp)
 8011f90:	da000317 	ldw	r8,12(sp)
 8011f94:	11cab03a 	or	r5,r2,r7
 8011f98:	2a40062e 	bgeu	r5,r9,8011fb4 <__divdf3+0x550>
 8011f9c:	2dcb883a 	add	r5,r5,r23
 8011fa0:	40bfffc4 	addi	r2,r8,-1
 8011fa4:	2dc0b436 	bltu	r5,r23,8012278 <__divdf3+0x814>
 8011fa8:	2a40b32e 	bgeu	r5,r9,8012278 <__divdf3+0x814>
 8011fac:	423fff84 	addi	r8,r8,-2
 8011fb0:	2dcb883a 	add	r5,r5,r23
 8011fb4:	2a6dc83a 	sub	r22,r5,r9
 8011fb8:	b009883a 	mov	r4,r22
 8011fbc:	a80b883a 	mov	r5,r21
 8011fc0:	da000315 	stw	r8,12(sp)
 8011fc4:	80111b80 	call	80111b8 <__udivsi3>
 8011fc8:	980b883a 	mov	r5,r19
 8011fcc:	1009883a 	mov	r4,r2
 8011fd0:	d8800415 	stw	r2,16(sp)
 8011fd4:	8002f580 	call	8002f58 <__mulsi3>
 8011fd8:	b009883a 	mov	r4,r22
 8011fdc:	a80b883a 	mov	r5,r21
 8011fe0:	1027883a 	mov	r19,r2
 8011fe4:	80111c00 	call	80111c0 <__umodsi3>
 8011fe8:	1004943a 	slli	r2,r2,16
 8011fec:	843fffcc 	andi	r16,r16,65535
 8011ff0:	da000317 	ldw	r8,12(sp)
 8011ff4:	140eb03a 	or	r7,r2,r16
 8011ff8:	da400417 	ldw	r9,16(sp)
 8011ffc:	3cc0062e 	bgeu	r7,r19,8012018 <__divdf3+0x5b4>
 8012000:	3dcf883a 	add	r7,r7,r23
 8012004:	48bfffc4 	addi	r2,r9,-1
 8012008:	3dc09d36 	bltu	r7,r23,8012280 <__divdf3+0x81c>
 801200c:	3cc09c2e 	bgeu	r7,r19,8012280 <__divdf3+0x81c>
 8012010:	4a7fff84 	addi	r9,r9,-2
 8012014:	3dcf883a 	add	r7,r7,r23
 8012018:	4010943a 	slli	r8,r8,16
 801201c:	3cebc83a 	sub	r21,r7,r19
 8012020:	e00b883a 	mov	r5,fp
 8012024:	4a26b03a 	or	r19,r9,r8
 8012028:	99ffffcc 	andi	r7,r19,65535
 801202c:	9820d43a 	srli	r16,r19,16
 8012030:	3809883a 	mov	r4,r7
 8012034:	d9c00515 	stw	r7,20(sp)
 8012038:	8002f580 	call	8002f58 <__mulsi3>
 801203c:	8009883a 	mov	r4,r16
 8012040:	e00b883a 	mov	r5,fp
 8012044:	102d883a 	mov	r22,r2
 8012048:	8002f580 	call	8002f58 <__mulsi3>
 801204c:	d9400017 	ldw	r5,0(sp)
 8012050:	8009883a 	mov	r4,r16
 8012054:	1039883a 	mov	fp,r2
 8012058:	8002f580 	call	8002f58 <__mulsi3>
 801205c:	d9c00517 	ldw	r7,20(sp)
 8012060:	d9400017 	ldw	r5,0(sp)
 8012064:	1021883a 	mov	r16,r2
 8012068:	3809883a 	mov	r4,r7
 801206c:	8002f580 	call	8002f58 <__mulsi3>
 8012070:	b008d43a 	srli	r4,r22,16
 8012074:	e085883a 	add	r2,fp,r2
 8012078:	1109883a 	add	r4,r2,r4
 801207c:	2700022e 	bgeu	r4,fp,8012088 <__divdf3+0x624>
 8012080:	00800074 	movhi	r2,1
 8012084:	80a1883a 	add	r16,r16,r2
 8012088:	200ad43a 	srli	r5,r4,16
 801208c:	2008943a 	slli	r4,r4,16
 8012090:	b5bfffcc 	andi	r22,r22,65535
 8012094:	8145883a 	add	r2,r16,r5
 8012098:	2589883a 	add	r4,r4,r22
 801209c:	a8802c36 	bltu	r21,r2,8012150 <__divdf3+0x6ec>
 80120a0:	a880a426 	beq	r21,r2,8012334 <__divdf3+0x8d0>
 80120a4:	9cc00054 	ori	r19,r19,1
 80120a8:	9200ffc4 	addi	r8,r18,1023
 80120ac:	023f270e 	bge	zero,r8,8011d4c <__alt_data_end+0xfc011d4c>
 80120b0:	988001cc 	andi	r2,r19,7
 80120b4:	10000726 	beq	r2,zero,80120d4 <__divdf3+0x670>
 80120b8:	990003cc 	andi	r4,r19,15
 80120bc:	00800104 	movi	r2,4
 80120c0:	20800426 	beq	r4,r2,80120d4 <__divdf3+0x670>
 80120c4:	9885883a 	add	r2,r19,r2
 80120c8:	14e7803a 	cmpltu	r19,r2,r19
 80120cc:	8ce3883a 	add	r17,r17,r19
 80120d0:	1027883a 	mov	r19,r2
 80120d4:	8880402c 	andhi	r2,r17,256
 80120d8:	10000426 	beq	r2,zero,80120ec <__divdf3+0x688>
 80120dc:	00bfc034 	movhi	r2,65280
 80120e0:	10bfffc4 	addi	r2,r2,-1
 80120e4:	92010004 	addi	r8,r18,1024
 80120e8:	88a2703a 	and	r17,r17,r2
 80120ec:	0081ff84 	movi	r2,2046
 80120f0:	123eb616 	blt	r2,r8,8011bcc <__alt_data_end+0xfc011bcc>
 80120f4:	9826d0fa 	srli	r19,r19,3
 80120f8:	8804977a 	slli	r2,r17,29
 80120fc:	8820927a 	slli	r16,r17,9
 8012100:	4201ffcc 	andi	r8,r8,2047
 8012104:	14e6b03a 	or	r19,r2,r19
 8012108:	800ad33a 	srli	r5,r16,12
 801210c:	a180004c 	andi	r6,r20,1
 8012110:	003eb206 	br	8011bdc <__alt_data_end+0xfc011bdc>
 8012114:	008000c4 	movi	r2,3
 8012118:	4080ac26 	beq	r8,r2,80123cc <__divdf3+0x968>
 801211c:	00800044 	movi	r2,1
 8012120:	4080591e 	bne	r8,r2,8012288 <__divdf3+0x824>
 8012124:	e00d883a 	mov	r6,fp
 8012128:	0011883a 	mov	r8,zero
 801212c:	000b883a 	mov	r5,zero
 8012130:	0027883a 	mov	r19,zero
 8012134:	003ea906 	br	8011bdc <__alt_data_end+0xfc011bdc>
 8012138:	00800434 	movhi	r2,16
 801213c:	89400234 	orhi	r5,r17,8
 8012140:	10bfffc4 	addi	r2,r2,-1
 8012144:	b00d883a 	mov	r6,r22
 8012148:	288a703a 	and	r5,r5,r2
 801214c:	003efd06 	br	8011d44 <__alt_data_end+0xfc011d44>
 8012150:	adcf883a 	add	r7,r21,r23
 8012154:	997fffc4 	addi	r5,r19,-1
 8012158:	3dc0412e 	bgeu	r7,r23,8012260 <__divdf3+0x7fc>
 801215c:	2827883a 	mov	r19,r5
 8012160:	38bfd01e 	bne	r7,r2,80120a4 <__alt_data_end+0xfc0120a4>
 8012164:	d8c00117 	ldw	r3,4(sp)
 8012168:	193fce1e 	bne	r3,r4,80120a4 <__alt_data_end+0xfc0120a4>
 801216c:	003fce06 	br	80120a8 <__alt_data_end+0xfc0120a8>
 8012170:	d9800215 	stw	r6,8(sp)
 8012174:	d9c00515 	stw	r7,20(sp)
 8012178:	80139600 	call	8013960 <__clzsi2>
 801217c:	10c00804 	addi	r3,r2,32
 8012180:	010009c4 	movi	r4,39
 8012184:	d9800217 	ldw	r6,8(sp)
 8012188:	d9c00517 	ldw	r7,20(sp)
 801218c:	20feb20e 	bge	r4,r3,8011c58 <__alt_data_end+0xfc011c58>
 8012190:	117ffe04 	addi	r5,r2,-8
 8012194:	a162983a 	sll	r17,r20,r5
 8012198:	0027883a 	mov	r19,zero
 801219c:	003eb506 	br	8011c74 <__alt_data_end+0xfc011c74>
 80121a0:	3009883a 	mov	r4,r6
 80121a4:	d9800215 	stw	r6,8(sp)
 80121a8:	da000315 	stw	r8,12(sp)
 80121ac:	da400415 	stw	r9,16(sp)
 80121b0:	80139600 	call	8013960 <__clzsi2>
 80121b4:	10c00804 	addi	r3,r2,32
 80121b8:	010009c4 	movi	r4,39
 80121bc:	d9800217 	ldw	r6,8(sp)
 80121c0:	da000317 	ldw	r8,12(sp)
 80121c4:	da400417 	ldw	r9,16(sp)
 80121c8:	20fec10e 	bge	r4,r3,8011cd0 <__alt_data_end+0xfc011cd0>
 80121cc:	10bffe04 	addi	r2,r2,-8
 80121d0:	a8a0983a 	sll	r16,r21,r2
 80121d4:	002b883a 	mov	r21,zero
 80121d8:	003ec406 	br	8011cec <__alt_data_end+0xfc011cec>
 80121dc:	d8c00117 	ldw	r3,4(sp)
 80121e0:	b0ed883a 	add	r22,r22,r3
 80121e4:	b0c5803a 	cmpltu	r2,r22,r3
 80121e8:	15c5883a 	add	r2,r2,r23
 80121ec:	11cf883a 	add	r7,r2,r7
 80121f0:	88bfffc4 	addi	r2,r17,-1
 80121f4:	b9c00d2e 	bgeu	r23,r7,801222c <__divdf3+0x7c8>
 80121f8:	39003f36 	bltu	r7,r4,80122f8 <__divdf3+0x894>
 80121fc:	21c06a26 	beq	r4,r7,80123a8 <__divdf3+0x944>
 8012200:	3909c83a 	sub	r4,r7,r4
 8012204:	1023883a 	mov	r17,r2
 8012208:	003f4f06 	br	8011f48 <__alt_data_end+0xfc011f48>
 801220c:	9d7ee536 	bltu	r19,r21,8011da4 <__alt_data_end+0xfc011da4>
 8012210:	982ed07a 	srli	r23,r19,1
 8012214:	880497fa 	slli	r2,r17,31
 8012218:	8810d07a 	srli	r8,r17,1
 801221c:	982c97fa 	slli	r22,r19,31
 8012220:	b884b03a 	or	r2,r23,r2
 8012224:	d8800015 	stw	r2,0(sp)
 8012228:	003ee206 	br	8011db4 <__alt_data_end+0xfc011db4>
 801222c:	3dfff41e 	bne	r7,r23,8012200 <__alt_data_end+0xfc012200>
 8012230:	d8c00117 	ldw	r3,4(sp)
 8012234:	b0fff02e 	bgeu	r22,r3,80121f8 <__alt_data_end+0xfc0121f8>
 8012238:	b909c83a 	sub	r4,r23,r4
 801223c:	1023883a 	mov	r17,r2
 8012240:	003f4106 	br	8011f48 <__alt_data_end+0xfc011f48>
 8012244:	1021883a 	mov	r16,r2
 8012248:	003f1106 	br	8011e90 <__alt_data_end+0xfc011e90>
 801224c:	1023883a 	mov	r17,r2
 8012250:	003ef706 	br	8011e30 <__alt_data_end+0xfc011e30>
 8012254:	b23fe136 	bltu	r22,r8,80121dc <__alt_data_end+0xfc0121dc>
 8012258:	0009883a 	mov	r4,zero
 801225c:	003f3a06 	br	8011f48 <__alt_data_end+0xfc011f48>
 8012260:	38802c36 	bltu	r7,r2,8012314 <__divdf3+0x8b0>
 8012264:	11c05326 	beq	r2,r7,80123b4 <__divdf3+0x950>
 8012268:	2827883a 	mov	r19,r5
 801226c:	003f8d06 	br	80120a4 <__alt_data_end+0xfc0120a4>
 8012270:	04ffffc4 	movi	r19,-1
 8012274:	003f8c06 	br	80120a8 <__alt_data_end+0xfc0120a8>
 8012278:	1011883a 	mov	r8,r2
 801227c:	003f4d06 	br	8011fb4 <__alt_data_end+0xfc011fb4>
 8012280:	1013883a 	mov	r9,r2
 8012284:	003f6406 	br	8012018 <__alt_data_end+0xfc012018>
 8012288:	e029883a 	mov	r20,fp
 801228c:	003f8606 	br	80120a8 <__alt_data_end+0xfc0120a8>
 8012290:	008007c4 	movi	r2,31
 8012294:	14002a16 	blt	r2,r16,8012340 <__divdf3+0x8dc>
 8012298:	91410784 	addi	r5,r18,1054
 801229c:	9c0cd83a 	srl	r6,r19,r16
 80122a0:	8948983a 	sll	r4,r17,r5
 80122a4:	9944983a 	sll	r2,r19,r5
 80122a8:	8c20d83a 	srl	r16,r17,r16
 80122ac:	3108b03a 	or	r4,r6,r4
 80122b0:	1004c03a 	cmpne	r2,r2,zero
 80122b4:	2084b03a 	or	r2,r4,r2
 80122b8:	110001cc 	andi	r4,r2,7
 80122bc:	20000726 	beq	r4,zero,80122dc <__divdf3+0x878>
 80122c0:	114003cc 	andi	r5,r2,15
 80122c4:	01000104 	movi	r4,4
 80122c8:	29000426 	beq	r5,r4,80122dc <__divdf3+0x878>
 80122cc:	11000104 	addi	r4,r2,4
 80122d0:	2085803a 	cmpltu	r2,r4,r2
 80122d4:	80a1883a 	add	r16,r16,r2
 80122d8:	2005883a 	mov	r2,r4
 80122dc:	8100202c 	andhi	r4,r16,128
 80122e0:	20002d26 	beq	r4,zero,8012398 <__divdf3+0x934>
 80122e4:	a180004c 	andi	r6,r20,1
 80122e8:	02000044 	movi	r8,1
 80122ec:	000b883a 	mov	r5,zero
 80122f0:	0027883a 	mov	r19,zero
 80122f4:	003e3906 	br	8011bdc <__alt_data_end+0xfc011bdc>
 80122f8:	d8c00117 	ldw	r3,4(sp)
 80122fc:	8c7fff84 	addi	r17,r17,-2
 8012300:	b0ed883a 	add	r22,r22,r3
 8012304:	b0c5803a 	cmpltu	r2,r22,r3
 8012308:	15c5883a 	add	r2,r2,r23
 801230c:	11cf883a 	add	r7,r2,r7
 8012310:	003f0c06 	br	8011f44 <__alt_data_end+0xfc011f44>
 8012314:	d8c00117 	ldw	r3,4(sp)
 8012318:	997fff84 	addi	r5,r19,-2
 801231c:	18d1883a 	add	r8,r3,r3
 8012320:	40c7803a 	cmpltu	r3,r8,r3
 8012324:	1dcd883a 	add	r6,r3,r23
 8012328:	398f883a 	add	r7,r7,r6
 801232c:	da000115 	stw	r8,4(sp)
 8012330:	003f8a06 	br	801215c <__alt_data_end+0xfc01215c>
 8012334:	203f861e 	bne	r4,zero,8012150 <__alt_data_end+0xfc012150>
 8012338:	d8000115 	stw	zero,4(sp)
 801233c:	003f8906 	br	8012164 <__alt_data_end+0xfc012164>
 8012340:	00bef884 	movi	r2,-1054
 8012344:	1485c83a 	sub	r2,r2,r18
 8012348:	01000804 	movi	r4,32
 801234c:	8884d83a 	srl	r2,r17,r2
 8012350:	81001c26 	beq	r16,r4,80123c4 <__divdf3+0x960>
 8012354:	91010f84 	addi	r4,r18,1086
 8012358:	8908983a 	sll	r4,r17,r4
 801235c:	24c8b03a 	or	r4,r4,r19
 8012360:	2008c03a 	cmpne	r4,r4,zero
 8012364:	2084b03a 	or	r2,r4,r2
 8012368:	140001cc 	andi	r16,r2,7
 801236c:	8000061e 	bne	r16,zero,8012388 <__divdf3+0x924>
 8012370:	000b883a 	mov	r5,zero
 8012374:	1004d0fa 	srli	r2,r2,3
 8012378:	a180004c 	andi	r6,r20,1
 801237c:	0011883a 	mov	r8,zero
 8012380:	1426b03a 	or	r19,r2,r16
 8012384:	003e1506 	br	8011bdc <__alt_data_end+0xfc011bdc>
 8012388:	114003cc 	andi	r5,r2,15
 801238c:	01000104 	movi	r4,4
 8012390:	0021883a 	mov	r16,zero
 8012394:	293fcd1e 	bne	r5,r4,80122cc <__alt_data_end+0xfc0122cc>
 8012398:	800a927a 	slli	r5,r16,9
 801239c:	8020977a 	slli	r16,r16,29
 80123a0:	280ad33a 	srli	r5,r5,12
 80123a4:	003ff306 	br	8012374 <__alt_data_end+0xfc012374>
 80123a8:	b23fd336 	bltu	r22,r8,80122f8 <__alt_data_end+0xfc0122f8>
 80123ac:	1023883a 	mov	r17,r2
 80123b0:	003fa906 	br	8012258 <__alt_data_end+0xfc012258>
 80123b4:	d8c00117 	ldw	r3,4(sp)
 80123b8:	193fd636 	bltu	r3,r4,8012314 <__alt_data_end+0xfc012314>
 80123bc:	2827883a 	mov	r19,r5
 80123c0:	003f6806 	br	8012164 <__alt_data_end+0xfc012164>
 80123c4:	0009883a 	mov	r4,zero
 80123c8:	003fe406 	br	801235c <__alt_data_end+0xfc01235c>
 80123cc:	00800434 	movhi	r2,16
 80123d0:	89400234 	orhi	r5,r17,8
 80123d4:	10bfffc4 	addi	r2,r2,-1
 80123d8:	e00d883a 	mov	r6,fp
 80123dc:	288a703a 	and	r5,r5,r2
 80123e0:	003e5806 	br	8011d44 <__alt_data_end+0xfc011d44>

080123e4 <__eqdf2>:
 80123e4:	2804d53a 	srli	r2,r5,20
 80123e8:	3806d53a 	srli	r3,r7,20
 80123ec:	02000434 	movhi	r8,16
 80123f0:	423fffc4 	addi	r8,r8,-1
 80123f4:	1081ffcc 	andi	r2,r2,2047
 80123f8:	0241ffc4 	movi	r9,2047
 80123fc:	2a14703a 	and	r10,r5,r8
 8012400:	18c1ffcc 	andi	r3,r3,2047
 8012404:	3a10703a 	and	r8,r7,r8
 8012408:	280ad7fa 	srli	r5,r5,31
 801240c:	380ed7fa 	srli	r7,r7,31
 8012410:	12400f26 	beq	r2,r9,8012450 <__eqdf2+0x6c>
 8012414:	0241ffc4 	movi	r9,2047
 8012418:	1a400326 	beq	r3,r9,8012428 <__eqdf2+0x44>
 801241c:	10c00526 	beq	r2,r3,8012434 <__eqdf2+0x50>
 8012420:	00800044 	movi	r2,1
 8012424:	f800283a 	ret
 8012428:	4192b03a 	or	r9,r8,r6
 801242c:	483ffc1e 	bne	r9,zero,8012420 <__alt_data_end+0xfc012420>
 8012430:	10fffb1e 	bne	r2,r3,8012420 <__alt_data_end+0xfc012420>
 8012434:	523ffa1e 	bne	r10,r8,8012420 <__alt_data_end+0xfc012420>
 8012438:	21bff91e 	bne	r4,r6,8012420 <__alt_data_end+0xfc012420>
 801243c:	29c00826 	beq	r5,r7,8012460 <__eqdf2+0x7c>
 8012440:	103ff71e 	bne	r2,zero,8012420 <__alt_data_end+0xfc012420>
 8012444:	5104b03a 	or	r2,r10,r4
 8012448:	1004c03a 	cmpne	r2,r2,zero
 801244c:	f800283a 	ret
 8012450:	5112b03a 	or	r9,r10,r4
 8012454:	483fef26 	beq	r9,zero,8012414 <__alt_data_end+0xfc012414>
 8012458:	00800044 	movi	r2,1
 801245c:	f800283a 	ret
 8012460:	0005883a 	mov	r2,zero
 8012464:	f800283a 	ret

08012468 <__gedf2>:
 8012468:	2804d53a 	srli	r2,r5,20
 801246c:	3806d53a 	srli	r3,r7,20
 8012470:	02000434 	movhi	r8,16
 8012474:	423fffc4 	addi	r8,r8,-1
 8012478:	0241ffc4 	movi	r9,2047
 801247c:	1081ffcc 	andi	r2,r2,2047
 8012480:	2a14703a 	and	r10,r5,r8
 8012484:	1a46703a 	and	r3,r3,r9
 8012488:	3a10703a 	and	r8,r7,r8
 801248c:	280ad7fa 	srli	r5,r5,31
 8012490:	380ed7fa 	srli	r7,r7,31
 8012494:	12400b26 	beq	r2,r9,80124c4 <__gedf2+0x5c>
 8012498:	1a401626 	beq	r3,r9,80124f4 <__gedf2+0x8c>
 801249c:	10000c1e 	bne	r2,zero,80124d0 <__gedf2+0x68>
 80124a0:	5112b03a 	or	r9,r10,r4
 80124a4:	4813003a 	cmpeq	r9,r9,zero
 80124a8:	4817883a 	mov	r11,r9
 80124ac:	18000c1e 	bne	r3,zero,80124e0 <__gedf2+0x78>
 80124b0:	4198b03a 	or	r12,r8,r6
 80124b4:	60000a1e 	bne	r12,zero,80124e0 <__gedf2+0x78>
 80124b8:	48001326 	beq	r9,zero,8012508 <__gedf2+0xa0>
 80124bc:	0005883a 	mov	r2,zero
 80124c0:	f800283a 	ret
 80124c4:	5112b03a 	or	r9,r10,r4
 80124c8:	4800191e 	bne	r9,zero,8012530 <__gedf2+0xc8>
 80124cc:	18800926 	beq	r3,r2,80124f4 <__gedf2+0x8c>
 80124d0:	18000b1e 	bne	r3,zero,8012500 <__gedf2+0x98>
 80124d4:	4192b03a 	or	r9,r8,r6
 80124d8:	0017883a 	mov	r11,zero
 80124dc:	48000a26 	beq	r9,zero,8012508 <__gedf2+0xa0>
 80124e0:	39c03fcc 	andi	r7,r7,255
 80124e4:	58000726 	beq	r11,zero,8012504 <__gedf2+0x9c>
 80124e8:	3800081e 	bne	r7,zero,801250c <__gedf2+0xa4>
 80124ec:	00bfffc4 	movi	r2,-1
 80124f0:	f800283a 	ret
 80124f4:	4192b03a 	or	r9,r8,r6
 80124f8:	48000d1e 	bne	r9,zero,8012530 <__gedf2+0xc8>
 80124fc:	103fe826 	beq	r2,zero,80124a0 <__alt_data_end+0xfc0124a0>
 8012500:	39c03fcc 	andi	r7,r7,255
 8012504:	29c00326 	beq	r5,r7,8012514 <__gedf2+0xac>
 8012508:	283ff81e 	bne	r5,zero,80124ec <__alt_data_end+0xfc0124ec>
 801250c:	00800044 	movi	r2,1
 8012510:	f800283a 	ret
 8012514:	18bffc16 	blt	r3,r2,8012508 <__alt_data_end+0xfc012508>
 8012518:	10c00316 	blt	r2,r3,8012528 <__gedf2+0xc0>
 801251c:	42bffa36 	bltu	r8,r10,8012508 <__alt_data_end+0xfc012508>
 8012520:	52000526 	beq	r10,r8,8012538 <__gedf2+0xd0>
 8012524:	523fe52e 	bgeu	r10,r8,80124bc <__alt_data_end+0xfc0124bc>
 8012528:	283ff026 	beq	r5,zero,80124ec <__alt_data_end+0xfc0124ec>
 801252c:	003ff706 	br	801250c <__alt_data_end+0xfc01250c>
 8012530:	00bfff84 	movi	r2,-2
 8012534:	f800283a 	ret
 8012538:	313ff336 	bltu	r6,r4,8012508 <__alt_data_end+0xfc012508>
 801253c:	21bfdf2e 	bgeu	r4,r6,80124bc <__alt_data_end+0xfc0124bc>
 8012540:	283fea26 	beq	r5,zero,80124ec <__alt_data_end+0xfc0124ec>
 8012544:	003ff106 	br	801250c <__alt_data_end+0xfc01250c>

08012548 <__ledf2>:
 8012548:	2804d53a 	srli	r2,r5,20
 801254c:	3810d53a 	srli	r8,r7,20
 8012550:	00c00434 	movhi	r3,16
 8012554:	18ffffc4 	addi	r3,r3,-1
 8012558:	0241ffc4 	movi	r9,2047
 801255c:	1081ffcc 	andi	r2,r2,2047
 8012560:	28d4703a 	and	r10,r5,r3
 8012564:	4250703a 	and	r8,r8,r9
 8012568:	38c6703a 	and	r3,r7,r3
 801256c:	280ad7fa 	srli	r5,r5,31
 8012570:	380ed7fa 	srli	r7,r7,31
 8012574:	12400b26 	beq	r2,r9,80125a4 <__ledf2+0x5c>
 8012578:	42401926 	beq	r8,r9,80125e0 <__ledf2+0x98>
 801257c:	10000c1e 	bne	r2,zero,80125b0 <__ledf2+0x68>
 8012580:	5112b03a 	or	r9,r10,r4
 8012584:	4813003a 	cmpeq	r9,r9,zero
 8012588:	4817883a 	mov	r11,r9
 801258c:	40000f26 	beq	r8,zero,80125cc <__ledf2+0x84>
 8012590:	39c03fcc 	andi	r7,r7,255
 8012594:	58001826 	beq	r11,zero,80125f8 <__ledf2+0xb0>
 8012598:	38000a1e 	bne	r7,zero,80125c4 <__ledf2+0x7c>
 801259c:	00bfffc4 	movi	r2,-1
 80125a0:	f800283a 	ret
 80125a4:	5112b03a 	or	r9,r10,r4
 80125a8:	48000f1e 	bne	r9,zero,80125e8 <__ledf2+0xa0>
 80125ac:	40800c26 	beq	r8,r2,80125e0 <__ledf2+0x98>
 80125b0:	4000101e 	bne	r8,zero,80125f4 <__ledf2+0xac>
 80125b4:	1992b03a 	or	r9,r3,r6
 80125b8:	0017883a 	mov	r11,zero
 80125bc:	483ff41e 	bne	r9,zero,8012590 <__alt_data_end+0xfc012590>
 80125c0:	283ff61e 	bne	r5,zero,801259c <__alt_data_end+0xfc01259c>
 80125c4:	00800044 	movi	r2,1
 80125c8:	f800283a 	ret
 80125cc:	1998b03a 	or	r12,r3,r6
 80125d0:	603fef1e 	bne	r12,zero,8012590 <__alt_data_end+0xfc012590>
 80125d4:	483ffa26 	beq	r9,zero,80125c0 <__alt_data_end+0xfc0125c0>
 80125d8:	0005883a 	mov	r2,zero
 80125dc:	f800283a 	ret
 80125e0:	1992b03a 	or	r9,r3,r6
 80125e4:	48000226 	beq	r9,zero,80125f0 <__ledf2+0xa8>
 80125e8:	00800084 	movi	r2,2
 80125ec:	f800283a 	ret
 80125f0:	103fe326 	beq	r2,zero,8012580 <__alt_data_end+0xfc012580>
 80125f4:	39c03fcc 	andi	r7,r7,255
 80125f8:	29fff11e 	bne	r5,r7,80125c0 <__alt_data_end+0xfc0125c0>
 80125fc:	40bff016 	blt	r8,r2,80125c0 <__alt_data_end+0xfc0125c0>
 8012600:	12000316 	blt	r2,r8,8012610 <__ledf2+0xc8>
 8012604:	1abfee36 	bltu	r3,r10,80125c0 <__alt_data_end+0xfc0125c0>
 8012608:	50c00326 	beq	r10,r3,8012618 <__ledf2+0xd0>
 801260c:	50fff22e 	bgeu	r10,r3,80125d8 <__alt_data_end+0xfc0125d8>
 8012610:	283fe226 	beq	r5,zero,801259c <__alt_data_end+0xfc01259c>
 8012614:	003feb06 	br	80125c4 <__alt_data_end+0xfc0125c4>
 8012618:	313fe936 	bltu	r6,r4,80125c0 <__alt_data_end+0xfc0125c0>
 801261c:	21bfee2e 	bgeu	r4,r6,80125d8 <__alt_data_end+0xfc0125d8>
 8012620:	283fde26 	beq	r5,zero,801259c <__alt_data_end+0xfc01259c>
 8012624:	003fe706 	br	80125c4 <__alt_data_end+0xfc0125c4>

08012628 <__muldf3>:
 8012628:	deffee04 	addi	sp,sp,-72
 801262c:	dd000c15 	stw	r20,48(sp)
 8012630:	2828d53a 	srli	r20,r5,20
 8012634:	dd400d15 	stw	r21,52(sp)
 8012638:	282ad7fa 	srli	r21,r5,31
 801263c:	dc000815 	stw	r16,32(sp)
 8012640:	04000434 	movhi	r16,16
 8012644:	ddc00f15 	stw	r23,60(sp)
 8012648:	dcc00b15 	stw	r19,44(sp)
 801264c:	dc800a15 	stw	r18,40(sp)
 8012650:	843fffc4 	addi	r16,r16,-1
 8012654:	dfc01115 	stw	ra,68(sp)
 8012658:	df001015 	stw	fp,64(sp)
 801265c:	dd800e15 	stw	r22,56(sp)
 8012660:	dc400915 	stw	r17,36(sp)
 8012664:	a501ffcc 	andi	r20,r20,2047
 8012668:	2025883a 	mov	r18,r4
 801266c:	202f883a 	mov	r23,r4
 8012670:	2c20703a 	and	r16,r5,r16
 8012674:	a827883a 	mov	r19,r21
 8012678:	aa403fcc 	andi	r9,r21,255
 801267c:	a0005926 	beq	r20,zero,80127e4 <__muldf3+0x1bc>
 8012680:	0081ffc4 	movi	r2,2047
 8012684:	a0803426 	beq	r20,r2,8012758 <__muldf3+0x130>
 8012688:	84000434 	orhi	r16,r16,16
 801268c:	2004d77a 	srli	r2,r4,29
 8012690:	802090fa 	slli	r16,r16,3
 8012694:	202e90fa 	slli	r23,r4,3
 8012698:	a53f0044 	addi	r20,r20,-1023
 801269c:	80a0b03a 	or	r16,r16,r2
 80126a0:	000b883a 	mov	r5,zero
 80126a4:	0039883a 	mov	fp,zero
 80126a8:	3806d53a 	srli	r3,r7,20
 80126ac:	382cd7fa 	srli	r22,r7,31
 80126b0:	00800434 	movhi	r2,16
 80126b4:	10bfffc4 	addi	r2,r2,-1
 80126b8:	18c1ffcc 	andi	r3,r3,2047
 80126bc:	3025883a 	mov	r18,r6
 80126c0:	38a2703a 	and	r17,r7,r2
 80126c4:	b2803fcc 	andi	r10,r22,255
 80126c8:	18006426 	beq	r3,zero,801285c <__muldf3+0x234>
 80126cc:	0081ffc4 	movi	r2,2047
 80126d0:	18805c26 	beq	r3,r2,8012844 <__muldf3+0x21c>
 80126d4:	8c400434 	orhi	r17,r17,16
 80126d8:	3004d77a 	srli	r2,r6,29
 80126dc:	882290fa 	slli	r17,r17,3
 80126e0:	302490fa 	slli	r18,r6,3
 80126e4:	18ff0044 	addi	r3,r3,-1023
 80126e8:	88a2b03a 	or	r17,r17,r2
 80126ec:	000f883a 	mov	r7,zero
 80126f0:	394ab03a 	or	r5,r7,r5
 80126f4:	280a90ba 	slli	r5,r5,2
 80126f8:	00820074 	movhi	r2,2049
 80126fc:	1089c604 	addi	r2,r2,10008
 8012700:	288b883a 	add	r5,r5,r2
 8012704:	28800017 	ldw	r2,0(r5)
 8012708:	a0c7883a 	add	r3,r20,r3
 801270c:	b54cf03a 	xor	r6,r22,r21
 8012710:	1a000044 	addi	r8,r3,1
 8012714:	1000683a 	jmp	r2
 8012718:	0801295c 	xori	zero,at,1189
 801271c:	08012948 	cmpgei	zero,at,1189
 8012720:	08012948 	cmpgei	zero,at,1189
 8012724:	08012934 	orhi	zero,at,1188
 8012728:	08012774 	orhi	zero,at,1181
 801272c:	08012774 	orhi	zero,at,1181
 8012730:	0801291c 	xori	zero,at,1188
 8012734:	08012934 	orhi	zero,at,1188
 8012738:	08012774 	orhi	zero,at,1181
 801273c:	0801291c 	xori	zero,at,1188
 8012740:	08012774 	orhi	zero,at,1181
 8012744:	08012934 	orhi	zero,at,1188
 8012748:	08012778 	rdprs	zero,at,1181
 801274c:	08012778 	rdprs	zero,at,1181
 8012750:	08012778 	rdprs	zero,at,1181
 8012754:	08012c98 	cmpnei	zero,at,1202
 8012758:	8104b03a 	or	r2,r16,r4
 801275c:	10006c1e 	bne	r2,zero,8012910 <__muldf3+0x2e8>
 8012760:	01400204 	movi	r5,8
 8012764:	0021883a 	mov	r16,zero
 8012768:	002f883a 	mov	r23,zero
 801276c:	07000084 	movi	fp,2
 8012770:	003fcd06 	br	80126a8 <__alt_data_end+0xfc0126a8>
 8012774:	3013883a 	mov	r9,r6
 8012778:	00800084 	movi	r2,2
 801277c:	e080501e 	bne	fp,r2,80128c0 <__muldf3+0x298>
 8012780:	4cc0004c 	andi	r19,r9,1
 8012784:	0101ffc4 	movi	r4,2047
 8012788:	0021883a 	mov	r16,zero
 801278c:	002f883a 	mov	r23,zero
 8012790:	2008953a 	slli	r4,r4,20
 8012794:	98c03fcc 	andi	r3,r19,255
 8012798:	04400434 	movhi	r17,16
 801279c:	8c7fffc4 	addi	r17,r17,-1
 80127a0:	180697fa 	slli	r3,r3,31
 80127a4:	8460703a 	and	r16,r16,r17
 80127a8:	8120b03a 	or	r16,r16,r4
 80127ac:	80c6b03a 	or	r3,r16,r3
 80127b0:	b805883a 	mov	r2,r23
 80127b4:	dfc01117 	ldw	ra,68(sp)
 80127b8:	df001017 	ldw	fp,64(sp)
 80127bc:	ddc00f17 	ldw	r23,60(sp)
 80127c0:	dd800e17 	ldw	r22,56(sp)
 80127c4:	dd400d17 	ldw	r21,52(sp)
 80127c8:	dd000c17 	ldw	r20,48(sp)
 80127cc:	dcc00b17 	ldw	r19,44(sp)
 80127d0:	dc800a17 	ldw	r18,40(sp)
 80127d4:	dc400917 	ldw	r17,36(sp)
 80127d8:	dc000817 	ldw	r16,32(sp)
 80127dc:	dec01204 	addi	sp,sp,72
 80127e0:	f800283a 	ret
 80127e4:	8104b03a 	or	r2,r16,r4
 80127e8:	10004426 	beq	r2,zero,80128fc <__muldf3+0x2d4>
 80127ec:	80014b26 	beq	r16,zero,8012d1c <__muldf3+0x6f4>
 80127f0:	8009883a 	mov	r4,r16
 80127f4:	d9800715 	stw	r6,28(sp)
 80127f8:	d9c00215 	stw	r7,8(sp)
 80127fc:	da400415 	stw	r9,16(sp)
 8012800:	80139600 	call	8013960 <__clzsi2>
 8012804:	d9800717 	ldw	r6,28(sp)
 8012808:	d9c00217 	ldw	r7,8(sp)
 801280c:	da400417 	ldw	r9,16(sp)
 8012810:	1007883a 	mov	r3,r2
 8012814:	01000a04 	movi	r4,40
 8012818:	1dfffe04 	addi	r23,r3,-8
 801281c:	20c9c83a 	sub	r4,r4,r3
 8012820:	85e0983a 	sll	r16,r16,r23
 8012824:	9108d83a 	srl	r4,r18,r4
 8012828:	95ee983a 	sll	r23,r18,r23
 801282c:	2420b03a 	or	r16,r4,r16
 8012830:	053f0344 	movi	r20,-1011
 8012834:	a0e9c83a 	sub	r20,r20,r3
 8012838:	000b883a 	mov	r5,zero
 801283c:	0039883a 	mov	fp,zero
 8012840:	003f9906 	br	80126a8 <__alt_data_end+0xfc0126a8>
 8012844:	8984b03a 	or	r2,r17,r6
 8012848:	10002a1e 	bne	r2,zero,80128f4 <__muldf3+0x2cc>
 801284c:	0023883a 	mov	r17,zero
 8012850:	0025883a 	mov	r18,zero
 8012854:	01c00084 	movi	r7,2
 8012858:	003fa506 	br	80126f0 <__alt_data_end+0xfc0126f0>
 801285c:	8984b03a 	or	r2,r17,r6
 8012860:	10002026 	beq	r2,zero,80128e4 <__muldf3+0x2bc>
 8012864:	88011c26 	beq	r17,zero,8012cd8 <__muldf3+0x6b0>
 8012868:	8809883a 	mov	r4,r17
 801286c:	d9400215 	stw	r5,8(sp)
 8012870:	d9800715 	stw	r6,28(sp)
 8012874:	da400415 	stw	r9,16(sp)
 8012878:	da800315 	stw	r10,12(sp)
 801287c:	80139600 	call	8013960 <__clzsi2>
 8012880:	d9400217 	ldw	r5,8(sp)
 8012884:	d9800717 	ldw	r6,28(sp)
 8012888:	da400417 	ldw	r9,16(sp)
 801288c:	da800317 	ldw	r10,12(sp)
 8012890:	1007883a 	mov	r3,r2
 8012894:	01000a04 	movi	r4,40
 8012898:	1cbffe04 	addi	r18,r3,-8
 801289c:	20c9c83a 	sub	r4,r4,r3
 80128a0:	8ca2983a 	sll	r17,r17,r18
 80128a4:	3108d83a 	srl	r4,r6,r4
 80128a8:	34a4983a 	sll	r18,r6,r18
 80128ac:	2462b03a 	or	r17,r4,r17
 80128b0:	00bf0344 	movi	r2,-1011
 80128b4:	10c7c83a 	sub	r3,r2,r3
 80128b8:	000f883a 	mov	r7,zero
 80128bc:	003f8c06 	br	80126f0 <__alt_data_end+0xfc0126f0>
 80128c0:	008000c4 	movi	r2,3
 80128c4:	e0816d26 	beq	fp,r2,8012e7c <__muldf3+0x854>
 80128c8:	00800044 	movi	r2,1
 80128cc:	e081321e 	bne	fp,r2,8012d98 <__muldf3+0x770>
 80128d0:	48a6703a 	and	r19,r9,r2
 80128d4:	0009883a 	mov	r4,zero
 80128d8:	0021883a 	mov	r16,zero
 80128dc:	002f883a 	mov	r23,zero
 80128e0:	003fab06 	br	8012790 <__alt_data_end+0xfc012790>
 80128e4:	0023883a 	mov	r17,zero
 80128e8:	0025883a 	mov	r18,zero
 80128ec:	01c00044 	movi	r7,1
 80128f0:	003f7f06 	br	80126f0 <__alt_data_end+0xfc0126f0>
 80128f4:	01c000c4 	movi	r7,3
 80128f8:	003f7d06 	br	80126f0 <__alt_data_end+0xfc0126f0>
 80128fc:	01400104 	movi	r5,4
 8012900:	0021883a 	mov	r16,zero
 8012904:	002f883a 	mov	r23,zero
 8012908:	07000044 	movi	fp,1
 801290c:	003f6606 	br	80126a8 <__alt_data_end+0xfc0126a8>
 8012910:	01400304 	movi	r5,12
 8012914:	070000c4 	movi	fp,3
 8012918:	003f6306 	br	80126a8 <__alt_data_end+0xfc0126a8>
 801291c:	04000434 	movhi	r16,16
 8012920:	0027883a 	mov	r19,zero
 8012924:	843fffc4 	addi	r16,r16,-1
 8012928:	05ffffc4 	movi	r23,-1
 801292c:	0101ffc4 	movi	r4,2047
 8012930:	003f9706 	br	8012790 <__alt_data_end+0xfc012790>
 8012934:	8821883a 	mov	r16,r17
 8012938:	902f883a 	mov	r23,r18
 801293c:	5013883a 	mov	r9,r10
 8012940:	3839883a 	mov	fp,r7
 8012944:	003f8c06 	br	8012778 <__alt_data_end+0xfc012778>
 8012948:	8821883a 	mov	r16,r17
 801294c:	902f883a 	mov	r23,r18
 8012950:	3013883a 	mov	r9,r6
 8012954:	3839883a 	mov	fp,r7
 8012958:	003f8706 	br	8012778 <__alt_data_end+0xfc012778>
 801295c:	b82ad43a 	srli	r21,r23,16
 8012960:	9038d43a 	srli	fp,r18,16
 8012964:	bdffffcc 	andi	r23,r23,65535
 8012968:	94bfffcc 	andi	r18,r18,65535
 801296c:	9009883a 	mov	r4,r18
 8012970:	b80b883a 	mov	r5,r23
 8012974:	d8c00515 	stw	r3,20(sp)
 8012978:	d9800715 	stw	r6,28(sp)
 801297c:	da000615 	stw	r8,24(sp)
 8012980:	8002f580 	call	8002f58 <__mulsi3>
 8012984:	9009883a 	mov	r4,r18
 8012988:	a80b883a 	mov	r5,r21
 801298c:	1029883a 	mov	r20,r2
 8012990:	8002f580 	call	8002f58 <__mulsi3>
 8012994:	e009883a 	mov	r4,fp
 8012998:	a80b883a 	mov	r5,r21
 801299c:	102d883a 	mov	r22,r2
 80129a0:	8002f580 	call	8002f58 <__mulsi3>
 80129a4:	e009883a 	mov	r4,fp
 80129a8:	b80b883a 	mov	r5,r23
 80129ac:	1027883a 	mov	r19,r2
 80129b0:	8002f580 	call	8002f58 <__mulsi3>
 80129b4:	a008d43a 	srli	r4,r20,16
 80129b8:	b085883a 	add	r2,r22,r2
 80129bc:	d8c00517 	ldw	r3,20(sp)
 80129c0:	110f883a 	add	r7,r2,r4
 80129c4:	d9800717 	ldw	r6,28(sp)
 80129c8:	da000617 	ldw	r8,24(sp)
 80129cc:	3d80022e 	bgeu	r7,r22,80129d8 <__muldf3+0x3b0>
 80129d0:	00800074 	movhi	r2,1
 80129d4:	98a7883a 	add	r19,r19,r2
 80129d8:	3804943a 	slli	r2,r7,16
 80129dc:	380ed43a 	srli	r7,r7,16
 80129e0:	882cd43a 	srli	r22,r17,16
 80129e4:	a53fffcc 	andi	r20,r20,65535
 80129e8:	8c7fffcc 	andi	r17,r17,65535
 80129ec:	1529883a 	add	r20,r2,r20
 80129f0:	8809883a 	mov	r4,r17
 80129f4:	b80b883a 	mov	r5,r23
 80129f8:	d8c00515 	stw	r3,20(sp)
 80129fc:	d9800715 	stw	r6,28(sp)
 8012a00:	da000615 	stw	r8,24(sp)
 8012a04:	d9c00015 	stw	r7,0(sp)
 8012a08:	dd000115 	stw	r20,4(sp)
 8012a0c:	8002f580 	call	8002f58 <__mulsi3>
 8012a10:	a80b883a 	mov	r5,r21
 8012a14:	8809883a 	mov	r4,r17
 8012a18:	d8800415 	stw	r2,16(sp)
 8012a1c:	8002f580 	call	8002f58 <__mulsi3>
 8012a20:	a80b883a 	mov	r5,r21
 8012a24:	b009883a 	mov	r4,r22
 8012a28:	1029883a 	mov	r20,r2
 8012a2c:	8002f580 	call	8002f58 <__mulsi3>
 8012a30:	b009883a 	mov	r4,r22
 8012a34:	b80b883a 	mov	r5,r23
 8012a38:	102b883a 	mov	r21,r2
 8012a3c:	8002f580 	call	8002f58 <__mulsi3>
 8012a40:	da400417 	ldw	r9,16(sp)
 8012a44:	a085883a 	add	r2,r20,r2
 8012a48:	d8c00517 	ldw	r3,20(sp)
 8012a4c:	4808d43a 	srli	r4,r9,16
 8012a50:	d9800717 	ldw	r6,28(sp)
 8012a54:	da000617 	ldw	r8,24(sp)
 8012a58:	1109883a 	add	r4,r2,r4
 8012a5c:	2500022e 	bgeu	r4,r20,8012a68 <__muldf3+0x440>
 8012a60:	00800074 	movhi	r2,1
 8012a64:	a8ab883a 	add	r21,r21,r2
 8012a68:	200e943a 	slli	r7,r4,16
 8012a6c:	2004d43a 	srli	r2,r4,16
 8012a70:	802ed43a 	srli	r23,r16,16
 8012a74:	843fffcc 	andi	r16,r16,65535
 8012a78:	4d3fffcc 	andi	r20,r9,65535
 8012a7c:	9009883a 	mov	r4,r18
 8012a80:	800b883a 	mov	r5,r16
 8012a84:	3d29883a 	add	r20,r7,r20
 8012a88:	d8c00515 	stw	r3,20(sp)
 8012a8c:	d9800715 	stw	r6,28(sp)
 8012a90:	da000615 	stw	r8,24(sp)
 8012a94:	a8ab883a 	add	r21,r21,r2
 8012a98:	8002f580 	call	8002f58 <__mulsi3>
 8012a9c:	9009883a 	mov	r4,r18
 8012aa0:	b80b883a 	mov	r5,r23
 8012aa4:	d8800315 	stw	r2,12(sp)
 8012aa8:	8002f580 	call	8002f58 <__mulsi3>
 8012aac:	e009883a 	mov	r4,fp
 8012ab0:	b80b883a 	mov	r5,r23
 8012ab4:	1025883a 	mov	r18,r2
 8012ab8:	8002f580 	call	8002f58 <__mulsi3>
 8012abc:	e009883a 	mov	r4,fp
 8012ac0:	800b883a 	mov	r5,r16
 8012ac4:	d8800215 	stw	r2,8(sp)
 8012ac8:	8002f580 	call	8002f58 <__mulsi3>
 8012acc:	da800317 	ldw	r10,12(sp)
 8012ad0:	d9400017 	ldw	r5,0(sp)
 8012ad4:	9085883a 	add	r2,r18,r2
 8012ad8:	5008d43a 	srli	r4,r10,16
 8012adc:	a153883a 	add	r9,r20,r5
 8012ae0:	d8c00517 	ldw	r3,20(sp)
 8012ae4:	1109883a 	add	r4,r2,r4
 8012ae8:	d9800717 	ldw	r6,28(sp)
 8012aec:	da000617 	ldw	r8,24(sp)
 8012af0:	dac00217 	ldw	r11,8(sp)
 8012af4:	2480022e 	bgeu	r4,r18,8012b00 <__muldf3+0x4d8>
 8012af8:	00800074 	movhi	r2,1
 8012afc:	5897883a 	add	r11,r11,r2
 8012b00:	200e943a 	slli	r7,r4,16
 8012b04:	2038d43a 	srli	fp,r4,16
 8012b08:	52bfffcc 	andi	r10,r10,65535
 8012b0c:	3a8f883a 	add	r7,r7,r10
 8012b10:	8809883a 	mov	r4,r17
 8012b14:	800b883a 	mov	r5,r16
 8012b18:	d8c00515 	stw	r3,20(sp)
 8012b1c:	d9800715 	stw	r6,28(sp)
 8012b20:	d9c00215 	stw	r7,8(sp)
 8012b24:	da000615 	stw	r8,24(sp)
 8012b28:	da400415 	stw	r9,16(sp)
 8012b2c:	5f39883a 	add	fp,r11,fp
 8012b30:	8002f580 	call	8002f58 <__mulsi3>
 8012b34:	8809883a 	mov	r4,r17
 8012b38:	b80b883a 	mov	r5,r23
 8012b3c:	1025883a 	mov	r18,r2
 8012b40:	8002f580 	call	8002f58 <__mulsi3>
 8012b44:	b009883a 	mov	r4,r22
 8012b48:	b80b883a 	mov	r5,r23
 8012b4c:	d8800315 	stw	r2,12(sp)
 8012b50:	8002f580 	call	8002f58 <__mulsi3>
 8012b54:	b009883a 	mov	r4,r22
 8012b58:	800b883a 	mov	r5,r16
 8012b5c:	1023883a 	mov	r17,r2
 8012b60:	8002f580 	call	8002f58 <__mulsi3>
 8012b64:	da800317 	ldw	r10,12(sp)
 8012b68:	9008d43a 	srli	r4,r18,16
 8012b6c:	d8c00517 	ldw	r3,20(sp)
 8012b70:	5085883a 	add	r2,r10,r2
 8012b74:	1109883a 	add	r4,r2,r4
 8012b78:	d9800717 	ldw	r6,28(sp)
 8012b7c:	d9c00217 	ldw	r7,8(sp)
 8012b80:	da000617 	ldw	r8,24(sp)
 8012b84:	da400417 	ldw	r9,16(sp)
 8012b88:	2280022e 	bgeu	r4,r10,8012b94 <__muldf3+0x56c>
 8012b8c:	00800074 	movhi	r2,1
 8012b90:	88a3883a 	add	r17,r17,r2
 8012b94:	2004943a 	slli	r2,r4,16
 8012b98:	94bfffcc 	andi	r18,r18,65535
 8012b9c:	4ce7883a 	add	r19,r9,r19
 8012ba0:	14a5883a 	add	r18,r2,r18
 8012ba4:	9d29803a 	cmpltu	r20,r19,r20
 8012ba8:	9565883a 	add	r18,r18,r21
 8012bac:	9505883a 	add	r2,r18,r20
 8012bb0:	99e7883a 	add	r19,r19,r7
 8012bb4:	99cf803a 	cmpltu	r7,r19,r7
 8012bb8:	e08b883a 	add	r5,fp,r2
 8012bbc:	2008d43a 	srli	r4,r4,16
 8012bc0:	29ef883a 	add	r23,r5,r7
 8012bc4:	1529803a 	cmpltu	r20,r2,r20
 8012bc8:	956b803a 	cmpltu	r21,r18,r21
 8012bcc:	b9cf803a 	cmpltu	r7,r23,r7
 8012bd0:	a564b03a 	or	r18,r20,r21
 8012bd4:	2f39803a 	cmpltu	fp,r5,fp
 8012bd8:	9125883a 	add	r18,r18,r4
 8012bdc:	3f38b03a 	or	fp,r7,fp
 8012be0:	9725883a 	add	r18,r18,fp
 8012be4:	9804927a 	slli	r2,r19,9
 8012be8:	9463883a 	add	r17,r18,r17
 8012bec:	d9000117 	ldw	r4,4(sp)
 8012bf0:	b820d5fa 	srli	r16,r23,23
 8012bf4:	8822927a 	slli	r17,r17,9
 8012bf8:	9826d5fa 	srli	r19,r19,23
 8012bfc:	1104b03a 	or	r2,r2,r4
 8012c00:	b82e927a 	slli	r23,r23,9
 8012c04:	1004c03a 	cmpne	r2,r2,zero
 8012c08:	8c20b03a 	or	r16,r17,r16
 8012c0c:	14e6b03a 	or	r19,r2,r19
 8012c10:	8080402c 	andhi	r2,r16,256
 8012c14:	9deeb03a 	or	r23,r19,r23
 8012c18:	10000726 	beq	r2,zero,8012c38 <__muldf3+0x610>
 8012c1c:	b804d07a 	srli	r2,r23,1
 8012c20:	800697fa 	slli	r3,r16,31
 8012c24:	bdc0004c 	andi	r23,r23,1
 8012c28:	8020d07a 	srli	r16,r16,1
 8012c2c:	b8aeb03a 	or	r23,r23,r2
 8012c30:	b8eeb03a 	or	r23,r23,r3
 8012c34:	4007883a 	mov	r3,r8
 8012c38:	1900ffc4 	addi	r4,r3,1023
 8012c3c:	01004d0e 	bge	zero,r4,8012d74 <__muldf3+0x74c>
 8012c40:	b88001cc 	andi	r2,r23,7
 8012c44:	10000726 	beq	r2,zero,8012c64 <__muldf3+0x63c>
 8012c48:	b94003cc 	andi	r5,r23,15
 8012c4c:	00800104 	movi	r2,4
 8012c50:	28800426 	beq	r5,r2,8012c64 <__muldf3+0x63c>
 8012c54:	b885883a 	add	r2,r23,r2
 8012c58:	15ef803a 	cmpltu	r23,r2,r23
 8012c5c:	85e1883a 	add	r16,r16,r23
 8012c60:	102f883a 	mov	r23,r2
 8012c64:	8080402c 	andhi	r2,r16,256
 8012c68:	10000426 	beq	r2,zero,8012c7c <__muldf3+0x654>
 8012c6c:	00bfc034 	movhi	r2,65280
 8012c70:	10bfffc4 	addi	r2,r2,-1
 8012c74:	19010004 	addi	r4,r3,1024
 8012c78:	80a0703a 	and	r16,r16,r2
 8012c7c:	0081ff84 	movi	r2,2046
 8012c80:	1100340e 	bge	r2,r4,8012d54 <__muldf3+0x72c>
 8012c84:	34c0004c 	andi	r19,r6,1
 8012c88:	0101ffc4 	movi	r4,2047
 8012c8c:	0021883a 	mov	r16,zero
 8012c90:	002f883a 	mov	r23,zero
 8012c94:	003ebe06 	br	8012790 <__alt_data_end+0xfc012790>
 8012c98:	8080022c 	andhi	r2,r16,8
 8012c9c:	10000926 	beq	r2,zero,8012cc4 <__muldf3+0x69c>
 8012ca0:	8880022c 	andhi	r2,r17,8
 8012ca4:	1000071e 	bne	r2,zero,8012cc4 <__muldf3+0x69c>
 8012ca8:	00800434 	movhi	r2,16
 8012cac:	8c000234 	orhi	r16,r17,8
 8012cb0:	10bfffc4 	addi	r2,r2,-1
 8012cb4:	b027883a 	mov	r19,r22
 8012cb8:	80a0703a 	and	r16,r16,r2
 8012cbc:	902f883a 	mov	r23,r18
 8012cc0:	003f1a06 	br	801292c <__alt_data_end+0xfc01292c>
 8012cc4:	00800434 	movhi	r2,16
 8012cc8:	84000234 	orhi	r16,r16,8
 8012ccc:	10bfffc4 	addi	r2,r2,-1
 8012cd0:	80a0703a 	and	r16,r16,r2
 8012cd4:	003f1506 	br	801292c <__alt_data_end+0xfc01292c>
 8012cd8:	3009883a 	mov	r4,r6
 8012cdc:	d9400215 	stw	r5,8(sp)
 8012ce0:	d9800715 	stw	r6,28(sp)
 8012ce4:	da400415 	stw	r9,16(sp)
 8012ce8:	da800315 	stw	r10,12(sp)
 8012cec:	80139600 	call	8013960 <__clzsi2>
 8012cf0:	10c00804 	addi	r3,r2,32
 8012cf4:	010009c4 	movi	r4,39
 8012cf8:	d9400217 	ldw	r5,8(sp)
 8012cfc:	d9800717 	ldw	r6,28(sp)
 8012d00:	da400417 	ldw	r9,16(sp)
 8012d04:	da800317 	ldw	r10,12(sp)
 8012d08:	20fee20e 	bge	r4,r3,8012894 <__alt_data_end+0xfc012894>
 8012d0c:	147ffe04 	addi	r17,r2,-8
 8012d10:	9462983a 	sll	r17,r18,r17
 8012d14:	0025883a 	mov	r18,zero
 8012d18:	003ee506 	br	80128b0 <__alt_data_end+0xfc0128b0>
 8012d1c:	d9800715 	stw	r6,28(sp)
 8012d20:	d9c00215 	stw	r7,8(sp)
 8012d24:	da400415 	stw	r9,16(sp)
 8012d28:	80139600 	call	8013960 <__clzsi2>
 8012d2c:	10c00804 	addi	r3,r2,32
 8012d30:	010009c4 	movi	r4,39
 8012d34:	d9800717 	ldw	r6,28(sp)
 8012d38:	d9c00217 	ldw	r7,8(sp)
 8012d3c:	da400417 	ldw	r9,16(sp)
 8012d40:	20feb40e 	bge	r4,r3,8012814 <__alt_data_end+0xfc012814>
 8012d44:	143ffe04 	addi	r16,r2,-8
 8012d48:	9420983a 	sll	r16,r18,r16
 8012d4c:	002f883a 	mov	r23,zero
 8012d50:	003eb706 	br	8012830 <__alt_data_end+0xfc012830>
 8012d54:	8004977a 	slli	r2,r16,29
 8012d58:	b82ed0fa 	srli	r23,r23,3
 8012d5c:	8020927a 	slli	r16,r16,9
 8012d60:	2101ffcc 	andi	r4,r4,2047
 8012d64:	15eeb03a 	or	r23,r2,r23
 8012d68:	8020d33a 	srli	r16,r16,12
 8012d6c:	34c0004c 	andi	r19,r6,1
 8012d70:	003e8706 	br	8012790 <__alt_data_end+0xfc012790>
 8012d74:	00bf0084 	movi	r2,-1022
 8012d78:	10c5c83a 	sub	r2,r2,r3
 8012d7c:	01000e04 	movi	r4,56
 8012d80:	2080080e 	bge	r4,r2,8012da4 <__muldf3+0x77c>
 8012d84:	34c0004c 	andi	r19,r6,1
 8012d88:	0009883a 	mov	r4,zero
 8012d8c:	0021883a 	mov	r16,zero
 8012d90:	002f883a 	mov	r23,zero
 8012d94:	003e7e06 	br	8012790 <__alt_data_end+0xfc012790>
 8012d98:	4007883a 	mov	r3,r8
 8012d9c:	480d883a 	mov	r6,r9
 8012da0:	003fa506 	br	8012c38 <__alt_data_end+0xfc012c38>
 8012da4:	010007c4 	movi	r4,31
 8012da8:	20801816 	blt	r4,r2,8012e0c <__muldf3+0x7e4>
 8012dac:	18c10784 	addi	r3,r3,1054
 8012db0:	80c8983a 	sll	r4,r16,r3
 8012db4:	b88ad83a 	srl	r5,r23,r2
 8012db8:	b8c6983a 	sll	r3,r23,r3
 8012dbc:	80a0d83a 	srl	r16,r16,r2
 8012dc0:	2908b03a 	or	r4,r5,r4
 8012dc4:	1804c03a 	cmpne	r2,r3,zero
 8012dc8:	2088b03a 	or	r4,r4,r2
 8012dcc:	208001cc 	andi	r2,r4,7
 8012dd0:	10000726 	beq	r2,zero,8012df0 <__muldf3+0x7c8>
 8012dd4:	20c003cc 	andi	r3,r4,15
 8012dd8:	00800104 	movi	r2,4
 8012ddc:	18800426 	beq	r3,r2,8012df0 <__muldf3+0x7c8>
 8012de0:	20c00104 	addi	r3,r4,4
 8012de4:	1905803a 	cmpltu	r2,r3,r4
 8012de8:	80a1883a 	add	r16,r16,r2
 8012dec:	1809883a 	mov	r4,r3
 8012df0:	8080202c 	andhi	r2,r16,128
 8012df4:	10001b26 	beq	r2,zero,8012e64 <__muldf3+0x83c>
 8012df8:	34c0004c 	andi	r19,r6,1
 8012dfc:	01000044 	movi	r4,1
 8012e00:	0021883a 	mov	r16,zero
 8012e04:	002f883a 	mov	r23,zero
 8012e08:	003e6106 	br	8012790 <__alt_data_end+0xfc012790>
 8012e0c:	013ef884 	movi	r4,-1054
 8012e10:	20c9c83a 	sub	r4,r4,r3
 8012e14:	01400804 	movi	r5,32
 8012e18:	8108d83a 	srl	r4,r16,r4
 8012e1c:	11401526 	beq	r2,r5,8012e74 <__muldf3+0x84c>
 8012e20:	18c10f84 	addi	r3,r3,1086
 8012e24:	80e0983a 	sll	r16,r16,r3
 8012e28:	85eeb03a 	or	r23,r16,r23
 8012e2c:	b804c03a 	cmpne	r2,r23,zero
 8012e30:	1108b03a 	or	r4,r2,r4
 8012e34:	20c001cc 	andi	r3,r4,7
 8012e38:	1800061e 	bne	r3,zero,8012e54 <__muldf3+0x82c>
 8012e3c:	0021883a 	mov	r16,zero
 8012e40:	202ed0fa 	srli	r23,r4,3
 8012e44:	34c0004c 	andi	r19,r6,1
 8012e48:	0009883a 	mov	r4,zero
 8012e4c:	b8eeb03a 	or	r23,r23,r3
 8012e50:	003e4f06 	br	8012790 <__alt_data_end+0xfc012790>
 8012e54:	20c003cc 	andi	r3,r4,15
 8012e58:	00800104 	movi	r2,4
 8012e5c:	0021883a 	mov	r16,zero
 8012e60:	18bfdf1e 	bne	r3,r2,8012de0 <__alt_data_end+0xfc012de0>
 8012e64:	8004927a 	slli	r2,r16,9
 8012e68:	8006977a 	slli	r3,r16,29
 8012e6c:	1020d33a 	srli	r16,r2,12
 8012e70:	003ff306 	br	8012e40 <__alt_data_end+0xfc012e40>
 8012e74:	0021883a 	mov	r16,zero
 8012e78:	003feb06 	br	8012e28 <__alt_data_end+0xfc012e28>
 8012e7c:	00800434 	movhi	r2,16
 8012e80:	84000234 	orhi	r16,r16,8
 8012e84:	10bfffc4 	addi	r2,r2,-1
 8012e88:	4cc0004c 	andi	r19,r9,1
 8012e8c:	80a0703a 	and	r16,r16,r2
 8012e90:	003ea606 	br	801292c <__alt_data_end+0xfc01292c>

08012e94 <__subdf3>:
 8012e94:	00c00434 	movhi	r3,16
 8012e98:	18ffffc4 	addi	r3,r3,-1
 8012e9c:	defffb04 	addi	sp,sp,-20
 8012ea0:	28d2703a 	and	r9,r5,r3
 8012ea4:	3814d53a 	srli	r10,r7,20
 8012ea8:	38c6703a 	and	r3,r7,r3
 8012eac:	3004d77a 	srli	r2,r6,29
 8012eb0:	dc800215 	stw	r18,8(sp)
 8012eb4:	dc000015 	stw	r16,0(sp)
 8012eb8:	2824d7fa 	srli	r18,r5,31
 8012ebc:	2820d53a 	srli	r16,r5,20
 8012ec0:	481290fa 	slli	r9,r9,3
 8012ec4:	200ad77a 	srli	r5,r4,29
 8012ec8:	180690fa 	slli	r3,r3,3
 8012ecc:	dc400115 	stw	r17,4(sp)
 8012ed0:	dfc00415 	stw	ra,16(sp)
 8012ed4:	202290fa 	slli	r17,r4,3
 8012ed8:	dcc00315 	stw	r19,12(sp)
 8012edc:	5281ffcc 	andi	r10,r10,2047
 8012ee0:	0101ffc4 	movi	r4,2047
 8012ee4:	9011883a 	mov	r8,r18
 8012ee8:	8401ffcc 	andi	r16,r16,2047
 8012eec:	94803fcc 	andi	r18,r18,255
 8012ef0:	494ab03a 	or	r5,r9,r5
 8012ef4:	380ed7fa 	srli	r7,r7,31
 8012ef8:	1886b03a 	or	r3,r3,r2
 8012efc:	300c90fa 	slli	r6,r6,3
 8012f00:	51009026 	beq	r10,r4,8013144 <__subdf3+0x2b0>
 8012f04:	39c0005c 	xori	r7,r7,1
 8012f08:	8285c83a 	sub	r2,r16,r10
 8012f0c:	91c06f26 	beq	r18,r7,80130cc <__subdf3+0x238>
 8012f10:	0080b10e 	bge	zero,r2,80131d8 <__subdf3+0x344>
 8012f14:	50002a1e 	bne	r10,zero,8012fc0 <__subdf3+0x12c>
 8012f18:	1988b03a 	or	r4,r3,r6
 8012f1c:	2000941e 	bne	r4,zero,8013170 <__subdf3+0x2dc>
 8012f20:	888001cc 	andi	r2,r17,7
 8012f24:	10005b26 	beq	r2,zero,8013094 <__subdf3+0x200>
 8012f28:	88c003cc 	andi	r3,r17,15
 8012f2c:	00800104 	movi	r2,4
 8012f30:	18805826 	beq	r3,r2,8013094 <__subdf3+0x200>
 8012f34:	88c00104 	addi	r3,r17,4
 8012f38:	1c63803a 	cmpltu	r17,r3,r17
 8012f3c:	2c4b883a 	add	r5,r5,r17
 8012f40:	2880202c 	andhi	r2,r5,128
 8012f44:	9200004c 	andi	r8,r18,1
 8012f48:	1823883a 	mov	r17,r3
 8012f4c:	10005426 	beq	r2,zero,80130a0 <__subdf3+0x20c>
 8012f50:	84000044 	addi	r16,r16,1
 8012f54:	0081ffc4 	movi	r2,2047
 8012f58:	8080bf26 	beq	r16,r2,8013258 <__subdf3+0x3c4>
 8012f5c:	013fe034 	movhi	r4,65408
 8012f60:	213fffc4 	addi	r4,r4,-1
 8012f64:	290a703a 	and	r5,r5,r4
 8012f68:	2804977a 	slli	r2,r5,29
 8012f6c:	280a927a 	slli	r5,r5,9
 8012f70:	8822d0fa 	srli	r17,r17,3
 8012f74:	8401ffcc 	andi	r16,r16,2047
 8012f78:	2808d33a 	srli	r4,r5,12
 8012f7c:	1444b03a 	or	r2,r2,r17
 8012f80:	8401ffcc 	andi	r16,r16,2047
 8012f84:	800a953a 	slli	r5,r16,20
 8012f88:	40c03fcc 	andi	r3,r8,255
 8012f8c:	04000434 	movhi	r16,16
 8012f90:	180697fa 	slli	r3,r3,31
 8012f94:	843fffc4 	addi	r16,r16,-1
 8012f98:	2420703a 	and	r16,r4,r16
 8012f9c:	8160b03a 	or	r16,r16,r5
 8012fa0:	80c6b03a 	or	r3,r16,r3
 8012fa4:	dfc00417 	ldw	ra,16(sp)
 8012fa8:	dcc00317 	ldw	r19,12(sp)
 8012fac:	dc800217 	ldw	r18,8(sp)
 8012fb0:	dc400117 	ldw	r17,4(sp)
 8012fb4:	dc000017 	ldw	r16,0(sp)
 8012fb8:	dec00504 	addi	sp,sp,20
 8012fbc:	f800283a 	ret
 8012fc0:	0101ffc4 	movi	r4,2047
 8012fc4:	813fd626 	beq	r16,r4,8012f20 <__alt_data_end+0xfc012f20>
 8012fc8:	18c02034 	orhi	r3,r3,128
 8012fcc:	01000e04 	movi	r4,56
 8012fd0:	2080a416 	blt	r4,r2,8013264 <__subdf3+0x3d0>
 8012fd4:	010007c4 	movi	r4,31
 8012fd8:	2080c716 	blt	r4,r2,80132f8 <__subdf3+0x464>
 8012fdc:	01000804 	movi	r4,32
 8012fe0:	2089c83a 	sub	r4,r4,r2
 8012fe4:	1910983a 	sll	r8,r3,r4
 8012fe8:	308ed83a 	srl	r7,r6,r2
 8012fec:	3108983a 	sll	r4,r6,r4
 8012ff0:	1884d83a 	srl	r2,r3,r2
 8012ff4:	41ccb03a 	or	r6,r8,r7
 8012ff8:	2008c03a 	cmpne	r4,r4,zero
 8012ffc:	310cb03a 	or	r6,r6,r4
 8013000:	898dc83a 	sub	r6,r17,r6
 8013004:	89a3803a 	cmpltu	r17,r17,r6
 8013008:	288bc83a 	sub	r5,r5,r2
 801300c:	2c4bc83a 	sub	r5,r5,r17
 8013010:	3023883a 	mov	r17,r6
 8013014:	2880202c 	andhi	r2,r5,128
 8013018:	10006b26 	beq	r2,zero,80131c8 <__subdf3+0x334>
 801301c:	04c02034 	movhi	r19,128
 8013020:	9cffffc4 	addi	r19,r19,-1
 8013024:	2ce6703a 	and	r19,r5,r19
 8013028:	98007c26 	beq	r19,zero,801321c <__subdf3+0x388>
 801302c:	9809883a 	mov	r4,r19
 8013030:	80139600 	call	8013960 <__clzsi2>
 8013034:	10fffe04 	addi	r3,r2,-8
 8013038:	010007c4 	movi	r4,31
 801303c:	20c07d16 	blt	r4,r3,8013234 <__subdf3+0x3a0>
 8013040:	01400a04 	movi	r5,40
 8013044:	2885c83a 	sub	r2,r5,r2
 8013048:	888ad83a 	srl	r5,r17,r2
 801304c:	98e6983a 	sll	r19,r19,r3
 8013050:	88e2983a 	sll	r17,r17,r3
 8013054:	2ce6b03a 	or	r19,r5,r19
 8013058:	1c007a16 	blt	r3,r16,8013244 <__subdf3+0x3b0>
 801305c:	1c21c83a 	sub	r16,r3,r16
 8013060:	81400044 	addi	r5,r16,1
 8013064:	00c007c4 	movi	r3,31
 8013068:	19409616 	blt	r3,r5,80132c4 <__subdf3+0x430>
 801306c:	1c21c83a 	sub	r16,r3,r16
 8013070:	8c08983a 	sll	r4,r17,r16
 8013074:	8946d83a 	srl	r3,r17,r5
 8013078:	9c20983a 	sll	r16,r19,r16
 801307c:	2008c03a 	cmpne	r4,r4,zero
 8013080:	994ad83a 	srl	r5,r19,r5
 8013084:	1c06b03a 	or	r3,r3,r16
 8013088:	1922b03a 	or	r17,r3,r4
 801308c:	0021883a 	mov	r16,zero
 8013090:	003fa306 	br	8012f20 <__alt_data_end+0xfc012f20>
 8013094:	2880202c 	andhi	r2,r5,128
 8013098:	9200004c 	andi	r8,r18,1
 801309c:	103fac1e 	bne	r2,zero,8012f50 <__alt_data_end+0xfc012f50>
 80130a0:	2804977a 	slli	r2,r5,29
 80130a4:	8822d0fa 	srli	r17,r17,3
 80130a8:	00c1ffc4 	movi	r3,2047
 80130ac:	280ad0fa 	srli	r5,r5,3
 80130b0:	1444b03a 	or	r2,r2,r17
 80130b4:	80c02726 	beq	r16,r3,8013154 <__subdf3+0x2c0>
 80130b8:	01000434 	movhi	r4,16
 80130bc:	213fffc4 	addi	r4,r4,-1
 80130c0:	80e0703a 	and	r16,r16,r3
 80130c4:	2908703a 	and	r4,r5,r4
 80130c8:	003fad06 	br	8012f80 <__alt_data_end+0xfc012f80>
 80130cc:	0080690e 	bge	zero,r2,8013274 <__subdf3+0x3e0>
 80130d0:	50002f26 	beq	r10,zero,8013190 <__subdf3+0x2fc>
 80130d4:	0101ffc4 	movi	r4,2047
 80130d8:	813f9126 	beq	r16,r4,8012f20 <__alt_data_end+0xfc012f20>
 80130dc:	18c02034 	orhi	r3,r3,128
 80130e0:	01000e04 	movi	r4,56
 80130e4:	2080b00e 	bge	r4,r2,80133a8 <__subdf3+0x514>
 80130e8:	198cb03a 	or	r6,r3,r6
 80130ec:	300ec03a 	cmpne	r7,r6,zero
 80130f0:	0005883a 	mov	r2,zero
 80130f4:	3c4f883a 	add	r7,r7,r17
 80130f8:	3c63803a 	cmpltu	r17,r7,r17
 80130fc:	114b883a 	add	r5,r2,r5
 8013100:	2c4b883a 	add	r5,r5,r17
 8013104:	3823883a 	mov	r17,r7
 8013108:	2880202c 	andhi	r2,r5,128
 801310c:	10002e26 	beq	r2,zero,80131c8 <__subdf3+0x334>
 8013110:	84000044 	addi	r16,r16,1
 8013114:	0081ffc4 	movi	r2,2047
 8013118:	8080de26 	beq	r16,r2,8013494 <__subdf3+0x600>
 801311c:	00bfe034 	movhi	r2,65408
 8013120:	10bfffc4 	addi	r2,r2,-1
 8013124:	288a703a 	and	r5,r5,r2
 8013128:	880cd07a 	srli	r6,r17,1
 801312c:	280897fa 	slli	r4,r5,31
 8013130:	88c0004c 	andi	r3,r17,1
 8013134:	30e2b03a 	or	r17,r6,r3
 8013138:	280ad07a 	srli	r5,r5,1
 801313c:	8922b03a 	or	r17,r17,r4
 8013140:	003f7706 	br	8012f20 <__alt_data_end+0xfc012f20>
 8013144:	1984b03a 	or	r2,r3,r6
 8013148:	103f6e26 	beq	r2,zero,8012f04 <__alt_data_end+0xfc012f04>
 801314c:	39c03fcc 	andi	r7,r7,255
 8013150:	003f6d06 	br	8012f08 <__alt_data_end+0xfc012f08>
 8013154:	1146b03a 	or	r3,r2,r5
 8013158:	18003f26 	beq	r3,zero,8013258 <__subdf3+0x3c4>
 801315c:	00c00434 	movhi	r3,16
 8013160:	29000234 	orhi	r4,r5,8
 8013164:	18ffffc4 	addi	r3,r3,-1
 8013168:	20c8703a 	and	r4,r4,r3
 801316c:	003f8406 	br	8012f80 <__alt_data_end+0xfc012f80>
 8013170:	10bfffc4 	addi	r2,r2,-1
 8013174:	1000501e 	bne	r2,zero,80132b8 <__subdf3+0x424>
 8013178:	898fc83a 	sub	r7,r17,r6
 801317c:	89e3803a 	cmpltu	r17,r17,r7
 8013180:	28cbc83a 	sub	r5,r5,r3
 8013184:	2c4bc83a 	sub	r5,r5,r17
 8013188:	3823883a 	mov	r17,r7
 801318c:	003fa106 	br	8013014 <__alt_data_end+0xfc013014>
 8013190:	1988b03a 	or	r4,r3,r6
 8013194:	203f6226 	beq	r4,zero,8012f20 <__alt_data_end+0xfc012f20>
 8013198:	10bfffc4 	addi	r2,r2,-1
 801319c:	10009b1e 	bne	r2,zero,801340c <__subdf3+0x578>
 80131a0:	344d883a 	add	r6,r6,r17
 80131a4:	3463803a 	cmpltu	r17,r6,r17
 80131a8:	194b883a 	add	r5,r3,r5
 80131ac:	2c4b883a 	add	r5,r5,r17
 80131b0:	3023883a 	mov	r17,r6
 80131b4:	003fd406 	br	8013108 <__alt_data_end+0xfc013108>
 80131b8:	1106b03a 	or	r3,r2,r4
 80131bc:	1800b426 	beq	r3,zero,8013490 <__subdf3+0x5fc>
 80131c0:	100b883a 	mov	r5,r2
 80131c4:	2023883a 	mov	r17,r4
 80131c8:	888001cc 	andi	r2,r17,7
 80131cc:	103f561e 	bne	r2,zero,8012f28 <__alt_data_end+0xfc012f28>
 80131d0:	9200004c 	andi	r8,r18,1
 80131d4:	003fb206 	br	80130a0 <__alt_data_end+0xfc0130a0>
 80131d8:	1000531e 	bne	r2,zero,8013328 <__subdf3+0x494>
 80131dc:	80800044 	addi	r2,r16,1
 80131e0:	1081ffcc 	andi	r2,r2,2047
 80131e4:	01000044 	movi	r4,1
 80131e8:	2080a00e 	bge	r4,r2,801346c <__subdf3+0x5d8>
 80131ec:	8985c83a 	sub	r2,r17,r6
 80131f0:	8889803a 	cmpltu	r4,r17,r2
 80131f4:	28e7c83a 	sub	r19,r5,r3
 80131f8:	9927c83a 	sub	r19,r19,r4
 80131fc:	9900202c 	andhi	r4,r19,128
 8013200:	20006226 	beq	r4,zero,801338c <__subdf3+0x4f8>
 8013204:	3463c83a 	sub	r17,r6,r17
 8013208:	194bc83a 	sub	r5,r3,r5
 801320c:	344d803a 	cmpltu	r6,r6,r17
 8013210:	29a7c83a 	sub	r19,r5,r6
 8013214:	3825883a 	mov	r18,r7
 8013218:	983f841e 	bne	r19,zero,801302c <__alt_data_end+0xfc01302c>
 801321c:	8809883a 	mov	r4,r17
 8013220:	80139600 	call	8013960 <__clzsi2>
 8013224:	10800804 	addi	r2,r2,32
 8013228:	10fffe04 	addi	r3,r2,-8
 801322c:	010007c4 	movi	r4,31
 8013230:	20ff830e 	bge	r4,r3,8013040 <__alt_data_end+0xfc013040>
 8013234:	14fff604 	addi	r19,r2,-40
 8013238:	8ce6983a 	sll	r19,r17,r19
 801323c:	0023883a 	mov	r17,zero
 8013240:	1c3f860e 	bge	r3,r16,801305c <__alt_data_end+0xfc01305c>
 8013244:	017fe034 	movhi	r5,65408
 8013248:	297fffc4 	addi	r5,r5,-1
 801324c:	80e1c83a 	sub	r16,r16,r3
 8013250:	994a703a 	and	r5,r19,r5
 8013254:	003f3206 	br	8012f20 <__alt_data_end+0xfc012f20>
 8013258:	0009883a 	mov	r4,zero
 801325c:	0005883a 	mov	r2,zero
 8013260:	003f4706 	br	8012f80 <__alt_data_end+0xfc012f80>
 8013264:	198cb03a 	or	r6,r3,r6
 8013268:	300cc03a 	cmpne	r6,r6,zero
 801326c:	0005883a 	mov	r2,zero
 8013270:	003f6306 	br	8013000 <__alt_data_end+0xfc013000>
 8013274:	10009d1e 	bne	r2,zero,80134ec <__subdf3+0x658>
 8013278:	81c00044 	addi	r7,r16,1
 801327c:	3881ffcc 	andi	r2,r7,2047
 8013280:	02400044 	movi	r9,1
 8013284:	4880680e 	bge	r9,r2,8013428 <__subdf3+0x594>
 8013288:	0081ffc4 	movi	r2,2047
 801328c:	3880ae26 	beq	r7,r2,8013548 <__subdf3+0x6b4>
 8013290:	344d883a 	add	r6,r6,r17
 8013294:	3463803a 	cmpltu	r17,r6,r17
 8013298:	194b883a 	add	r5,r3,r5
 801329c:	2c4b883a 	add	r5,r5,r17
 80132a0:	282297fa 	slli	r17,r5,31
 80132a4:	300cd07a 	srli	r6,r6,1
 80132a8:	280ad07a 	srli	r5,r5,1
 80132ac:	3821883a 	mov	r16,r7
 80132b0:	89a2b03a 	or	r17,r17,r6
 80132b4:	003f1a06 	br	8012f20 <__alt_data_end+0xfc012f20>
 80132b8:	0101ffc4 	movi	r4,2047
 80132bc:	813f431e 	bne	r16,r4,8012fcc <__alt_data_end+0xfc012fcc>
 80132c0:	003f1706 	br	8012f20 <__alt_data_end+0xfc012f20>
 80132c4:	80bff844 	addi	r2,r16,-31
 80132c8:	00c00804 	movi	r3,32
 80132cc:	9884d83a 	srl	r2,r19,r2
 80132d0:	28c05126 	beq	r5,r3,8013418 <__subdf3+0x584>
 80132d4:	00c00fc4 	movi	r3,63
 80132d8:	1c21c83a 	sub	r16,r3,r16
 80132dc:	9c26983a 	sll	r19,r19,r16
 80132e0:	9c62b03a 	or	r17,r19,r17
 80132e4:	8822c03a 	cmpne	r17,r17,zero
 80132e8:	88a2b03a 	or	r17,r17,r2
 80132ec:	000b883a 	mov	r5,zero
 80132f0:	0021883a 	mov	r16,zero
 80132f4:	003fb406 	br	80131c8 <__alt_data_end+0xfc0131c8>
 80132f8:	113ff804 	addi	r4,r2,-32
 80132fc:	01c00804 	movi	r7,32
 8013300:	1908d83a 	srl	r4,r3,r4
 8013304:	11c04626 	beq	r2,r7,8013420 <__subdf3+0x58c>
 8013308:	01c01004 	movi	r7,64
 801330c:	3885c83a 	sub	r2,r7,r2
 8013310:	1884983a 	sll	r2,r3,r2
 8013314:	118cb03a 	or	r6,r2,r6
 8013318:	300cc03a 	cmpne	r6,r6,zero
 801331c:	310cb03a 	or	r6,r6,r4
 8013320:	0005883a 	mov	r2,zero
 8013324:	003f3606 	br	8013000 <__alt_data_end+0xfc013000>
 8013328:	80002b26 	beq	r16,zero,80133d8 <__subdf3+0x544>
 801332c:	0101ffc4 	movi	r4,2047
 8013330:	51006926 	beq	r10,r4,80134d8 <__subdf3+0x644>
 8013334:	0085c83a 	sub	r2,zero,r2
 8013338:	29402034 	orhi	r5,r5,128
 801333c:	01000e04 	movi	r4,56
 8013340:	20807d16 	blt	r4,r2,8013538 <__subdf3+0x6a4>
 8013344:	010007c4 	movi	r4,31
 8013348:	2080d916 	blt	r4,r2,80136b0 <__subdf3+0x81c>
 801334c:	01000804 	movi	r4,32
 8013350:	2089c83a 	sub	r4,r4,r2
 8013354:	2912983a 	sll	r9,r5,r4
 8013358:	8890d83a 	srl	r8,r17,r2
 801335c:	8908983a 	sll	r4,r17,r4
 8013360:	2884d83a 	srl	r2,r5,r2
 8013364:	4a22b03a 	or	r17,r9,r8
 8013368:	2008c03a 	cmpne	r4,r4,zero
 801336c:	8922b03a 	or	r17,r17,r4
 8013370:	3463c83a 	sub	r17,r6,r17
 8013374:	1885c83a 	sub	r2,r3,r2
 8013378:	344d803a 	cmpltu	r6,r6,r17
 801337c:	118bc83a 	sub	r5,r2,r6
 8013380:	5021883a 	mov	r16,r10
 8013384:	3825883a 	mov	r18,r7
 8013388:	003f2206 	br	8013014 <__alt_data_end+0xfc013014>
 801338c:	9886b03a 	or	r3,r19,r2
 8013390:	18001c1e 	bne	r3,zero,8013404 <__subdf3+0x570>
 8013394:	0011883a 	mov	r8,zero
 8013398:	000b883a 	mov	r5,zero
 801339c:	0023883a 	mov	r17,zero
 80133a0:	0021883a 	mov	r16,zero
 80133a4:	003f3e06 	br	80130a0 <__alt_data_end+0xfc0130a0>
 80133a8:	010007c4 	movi	r4,31
 80133ac:	20803c16 	blt	r4,r2,80134a0 <__subdf3+0x60c>
 80133b0:	01000804 	movi	r4,32
 80133b4:	2089c83a 	sub	r4,r4,r2
 80133b8:	1912983a 	sll	r9,r3,r4
 80133bc:	308ed83a 	srl	r7,r6,r2
 80133c0:	3108983a 	sll	r4,r6,r4
 80133c4:	1884d83a 	srl	r2,r3,r2
 80133c8:	49ceb03a 	or	r7,r9,r7
 80133cc:	2008c03a 	cmpne	r4,r4,zero
 80133d0:	390eb03a 	or	r7,r7,r4
 80133d4:	003f4706 	br	80130f4 <__alt_data_end+0xfc0130f4>
 80133d8:	2c48b03a 	or	r4,r5,r17
 80133dc:	20003e26 	beq	r4,zero,80134d8 <__subdf3+0x644>
 80133e0:	0084303a 	nor	r2,zero,r2
 80133e4:	10003a1e 	bne	r2,zero,80134d0 <__subdf3+0x63c>
 80133e8:	3463c83a 	sub	r17,r6,r17
 80133ec:	194bc83a 	sub	r5,r3,r5
 80133f0:	344d803a 	cmpltu	r6,r6,r17
 80133f4:	298bc83a 	sub	r5,r5,r6
 80133f8:	5021883a 	mov	r16,r10
 80133fc:	3825883a 	mov	r18,r7
 8013400:	003f0406 	br	8013014 <__alt_data_end+0xfc013014>
 8013404:	1023883a 	mov	r17,r2
 8013408:	003f0706 	br	8013028 <__alt_data_end+0xfc013028>
 801340c:	0101ffc4 	movi	r4,2047
 8013410:	813f331e 	bne	r16,r4,80130e0 <__alt_data_end+0xfc0130e0>
 8013414:	003ec206 	br	8012f20 <__alt_data_end+0xfc012f20>
 8013418:	0027883a 	mov	r19,zero
 801341c:	003fb006 	br	80132e0 <__alt_data_end+0xfc0132e0>
 8013420:	0005883a 	mov	r2,zero
 8013424:	003fbb06 	br	8013314 <__alt_data_end+0xfc013314>
 8013428:	2c44b03a 	or	r2,r5,r17
 801342c:	80008b1e 	bne	r16,zero,801365c <__subdf3+0x7c8>
 8013430:	1000b526 	beq	r2,zero,8013708 <__subdf3+0x874>
 8013434:	1984b03a 	or	r2,r3,r6
 8013438:	103eb926 	beq	r2,zero,8012f20 <__alt_data_end+0xfc012f20>
 801343c:	3449883a 	add	r4,r6,r17
 8013440:	2463803a 	cmpltu	r17,r4,r17
 8013444:	194b883a 	add	r5,r3,r5
 8013448:	2c4b883a 	add	r5,r5,r17
 801344c:	2880202c 	andhi	r2,r5,128
 8013450:	2023883a 	mov	r17,r4
 8013454:	103f5c26 	beq	r2,zero,80131c8 <__alt_data_end+0xfc0131c8>
 8013458:	00bfe034 	movhi	r2,65408
 801345c:	10bfffc4 	addi	r2,r2,-1
 8013460:	4821883a 	mov	r16,r9
 8013464:	288a703a 	and	r5,r5,r2
 8013468:	003ead06 	br	8012f20 <__alt_data_end+0xfc012f20>
 801346c:	2c44b03a 	or	r2,r5,r17
 8013470:	8000291e 	bne	r16,zero,8013518 <__subdf3+0x684>
 8013474:	10004f1e 	bne	r2,zero,80135b4 <__subdf3+0x720>
 8013478:	1984b03a 	or	r2,r3,r6
 801347c:	10000426 	beq	r2,zero,8013490 <__subdf3+0x5fc>
 8013480:	180b883a 	mov	r5,r3
 8013484:	3023883a 	mov	r17,r6
 8013488:	3825883a 	mov	r18,r7
 801348c:	003ea406 	br	8012f20 <__alt_data_end+0xfc012f20>
 8013490:	0011883a 	mov	r8,zero
 8013494:	000b883a 	mov	r5,zero
 8013498:	0023883a 	mov	r17,zero
 801349c:	003f0006 	br	80130a0 <__alt_data_end+0xfc0130a0>
 80134a0:	11fff804 	addi	r7,r2,-32
 80134a4:	19c8d83a 	srl	r4,r3,r7
 80134a8:	01c00804 	movi	r7,32
 80134ac:	11c07e26 	beq	r2,r7,80136a8 <__subdf3+0x814>
 80134b0:	01c01004 	movi	r7,64
 80134b4:	3885c83a 	sub	r2,r7,r2
 80134b8:	1884983a 	sll	r2,r3,r2
 80134bc:	118cb03a 	or	r6,r2,r6
 80134c0:	300ec03a 	cmpne	r7,r6,zero
 80134c4:	390eb03a 	or	r7,r7,r4
 80134c8:	0005883a 	mov	r2,zero
 80134cc:	003f0906 	br	80130f4 <__alt_data_end+0xfc0130f4>
 80134d0:	0101ffc4 	movi	r4,2047
 80134d4:	513f991e 	bne	r10,r4,801333c <__alt_data_end+0xfc01333c>
 80134d8:	180b883a 	mov	r5,r3
 80134dc:	3023883a 	mov	r17,r6
 80134e0:	5021883a 	mov	r16,r10
 80134e4:	3825883a 	mov	r18,r7
 80134e8:	003e8d06 	br	8012f20 <__alt_data_end+0xfc012f20>
 80134ec:	80001a1e 	bne	r16,zero,8013558 <__subdf3+0x6c4>
 80134f0:	2c48b03a 	or	r4,r5,r17
 80134f4:	20005526 	beq	r4,zero,801364c <__subdf3+0x7b8>
 80134f8:	0084303a 	nor	r2,zero,r2
 80134fc:	1000511e 	bne	r2,zero,8013644 <__subdf3+0x7b0>
 8013500:	89a3883a 	add	r17,r17,r6
 8013504:	194b883a 	add	r5,r3,r5
 8013508:	898d803a 	cmpltu	r6,r17,r6
 801350c:	298b883a 	add	r5,r5,r6
 8013510:	5021883a 	mov	r16,r10
 8013514:	003efc06 	br	8013108 <__alt_data_end+0xfc013108>
 8013518:	1000341e 	bne	r2,zero,80135ec <__subdf3+0x758>
 801351c:	1984b03a 	or	r2,r3,r6
 8013520:	10006f26 	beq	r2,zero,80136e0 <__subdf3+0x84c>
 8013524:	180b883a 	mov	r5,r3
 8013528:	3023883a 	mov	r17,r6
 801352c:	3825883a 	mov	r18,r7
 8013530:	0401ffc4 	movi	r16,2047
 8013534:	003e7a06 	br	8012f20 <__alt_data_end+0xfc012f20>
 8013538:	2c62b03a 	or	r17,r5,r17
 801353c:	8822c03a 	cmpne	r17,r17,zero
 8013540:	0005883a 	mov	r2,zero
 8013544:	003f8a06 	br	8013370 <__alt_data_end+0xfc013370>
 8013548:	3821883a 	mov	r16,r7
 801354c:	000b883a 	mov	r5,zero
 8013550:	0023883a 	mov	r17,zero
 8013554:	003ed206 	br	80130a0 <__alt_data_end+0xfc0130a0>
 8013558:	0101ffc4 	movi	r4,2047
 801355c:	51003b26 	beq	r10,r4,801364c <__subdf3+0x7b8>
 8013560:	0085c83a 	sub	r2,zero,r2
 8013564:	29402034 	orhi	r5,r5,128
 8013568:	01000e04 	movi	r4,56
 801356c:	20806216 	blt	r4,r2,80136f8 <__subdf3+0x864>
 8013570:	010007c4 	movi	r4,31
 8013574:	20806b16 	blt	r4,r2,8013724 <__subdf3+0x890>
 8013578:	01000804 	movi	r4,32
 801357c:	2089c83a 	sub	r4,r4,r2
 8013580:	2912983a 	sll	r9,r5,r4
 8013584:	888ed83a 	srl	r7,r17,r2
 8013588:	8908983a 	sll	r4,r17,r4
 801358c:	2884d83a 	srl	r2,r5,r2
 8013590:	49e2b03a 	or	r17,r9,r7
 8013594:	2008c03a 	cmpne	r4,r4,zero
 8013598:	8922b03a 	or	r17,r17,r4
 801359c:	89a3883a 	add	r17,r17,r6
 80135a0:	10c5883a 	add	r2,r2,r3
 80135a4:	898d803a 	cmpltu	r6,r17,r6
 80135a8:	118b883a 	add	r5,r2,r6
 80135ac:	5021883a 	mov	r16,r10
 80135b0:	003ed506 	br	8013108 <__alt_data_end+0xfc013108>
 80135b4:	1984b03a 	or	r2,r3,r6
 80135b8:	103e5926 	beq	r2,zero,8012f20 <__alt_data_end+0xfc012f20>
 80135bc:	8989c83a 	sub	r4,r17,r6
 80135c0:	8911803a 	cmpltu	r8,r17,r4
 80135c4:	28c5c83a 	sub	r2,r5,r3
 80135c8:	1205c83a 	sub	r2,r2,r8
 80135cc:	1200202c 	andhi	r8,r2,128
 80135d0:	403ef926 	beq	r8,zero,80131b8 <__alt_data_end+0xfc0131b8>
 80135d4:	3463c83a 	sub	r17,r6,r17
 80135d8:	194bc83a 	sub	r5,r3,r5
 80135dc:	344d803a 	cmpltu	r6,r6,r17
 80135e0:	298bc83a 	sub	r5,r5,r6
 80135e4:	3825883a 	mov	r18,r7
 80135e8:	003e4d06 	br	8012f20 <__alt_data_end+0xfc012f20>
 80135ec:	1984b03a 	or	r2,r3,r6
 80135f0:	10002b26 	beq	r2,zero,80136a0 <__subdf3+0x80c>
 80135f4:	2808d0fa 	srli	r4,r5,3
 80135f8:	8822d0fa 	srli	r17,r17,3
 80135fc:	280a977a 	slli	r5,r5,29
 8013600:	2080022c 	andhi	r2,r4,8
 8013604:	2c62b03a 	or	r17,r5,r17
 8013608:	10000826 	beq	r2,zero,801362c <__subdf3+0x798>
 801360c:	1810d0fa 	srli	r8,r3,3
 8013610:	4080022c 	andhi	r2,r8,8
 8013614:	1000051e 	bne	r2,zero,801362c <__subdf3+0x798>
 8013618:	300cd0fa 	srli	r6,r6,3
 801361c:	1804977a 	slli	r2,r3,29
 8013620:	4009883a 	mov	r4,r8
 8013624:	3825883a 	mov	r18,r7
 8013628:	11a2b03a 	or	r17,r2,r6
 801362c:	880ad77a 	srli	r5,r17,29
 8013630:	200890fa 	slli	r4,r4,3
 8013634:	882290fa 	slli	r17,r17,3
 8013638:	0401ffc4 	movi	r16,2047
 801363c:	290ab03a 	or	r5,r5,r4
 8013640:	003e3706 	br	8012f20 <__alt_data_end+0xfc012f20>
 8013644:	0101ffc4 	movi	r4,2047
 8013648:	513fc71e 	bne	r10,r4,8013568 <__alt_data_end+0xfc013568>
 801364c:	180b883a 	mov	r5,r3
 8013650:	3023883a 	mov	r17,r6
 8013654:	5021883a 	mov	r16,r10
 8013658:	003e3106 	br	8012f20 <__alt_data_end+0xfc012f20>
 801365c:	10002d26 	beq	r2,zero,8013714 <__subdf3+0x880>
 8013660:	1984b03a 	or	r2,r3,r6
 8013664:	10000e26 	beq	r2,zero,80136a0 <__subdf3+0x80c>
 8013668:	2808d0fa 	srli	r4,r5,3
 801366c:	8822d0fa 	srli	r17,r17,3
 8013670:	280a977a 	slli	r5,r5,29
 8013674:	2080022c 	andhi	r2,r4,8
 8013678:	2c62b03a 	or	r17,r5,r17
 801367c:	103feb26 	beq	r2,zero,801362c <__alt_data_end+0xfc01362c>
 8013680:	180ed0fa 	srli	r7,r3,3
 8013684:	3880022c 	andhi	r2,r7,8
 8013688:	103fe81e 	bne	r2,zero,801362c <__alt_data_end+0xfc01362c>
 801368c:	300cd0fa 	srli	r6,r6,3
 8013690:	1804977a 	slli	r2,r3,29
 8013694:	3809883a 	mov	r4,r7
 8013698:	11a2b03a 	or	r17,r2,r6
 801369c:	003fe306 	br	801362c <__alt_data_end+0xfc01362c>
 80136a0:	0401ffc4 	movi	r16,2047
 80136a4:	003e1e06 	br	8012f20 <__alt_data_end+0xfc012f20>
 80136a8:	0005883a 	mov	r2,zero
 80136ac:	003f8306 	br	80134bc <__alt_data_end+0xfc0134bc>
 80136b0:	113ff804 	addi	r4,r2,-32
 80136b4:	02000804 	movi	r8,32
 80136b8:	2908d83a 	srl	r4,r5,r4
 80136bc:	12002526 	beq	r2,r8,8013754 <__subdf3+0x8c0>
 80136c0:	02001004 	movi	r8,64
 80136c4:	4085c83a 	sub	r2,r8,r2
 80136c8:	288a983a 	sll	r5,r5,r2
 80136cc:	2c62b03a 	or	r17,r5,r17
 80136d0:	8822c03a 	cmpne	r17,r17,zero
 80136d4:	8922b03a 	or	r17,r17,r4
 80136d8:	0005883a 	mov	r2,zero
 80136dc:	003f2406 	br	8013370 <__alt_data_end+0xfc013370>
 80136e0:	01402034 	movhi	r5,128
 80136e4:	0011883a 	mov	r8,zero
 80136e8:	297fffc4 	addi	r5,r5,-1
 80136ec:	047ffe04 	movi	r17,-8
 80136f0:	0401ffc4 	movi	r16,2047
 80136f4:	003e6a06 	br	80130a0 <__alt_data_end+0xfc0130a0>
 80136f8:	2c62b03a 	or	r17,r5,r17
 80136fc:	8822c03a 	cmpne	r17,r17,zero
 8013700:	0005883a 	mov	r2,zero
 8013704:	003fa506 	br	801359c <__alt_data_end+0xfc01359c>
 8013708:	180b883a 	mov	r5,r3
 801370c:	3023883a 	mov	r17,r6
 8013710:	003e0306 	br	8012f20 <__alt_data_end+0xfc012f20>
 8013714:	180b883a 	mov	r5,r3
 8013718:	3023883a 	mov	r17,r6
 801371c:	0401ffc4 	movi	r16,2047
 8013720:	003dff06 	br	8012f20 <__alt_data_end+0xfc012f20>
 8013724:	113ff804 	addi	r4,r2,-32
 8013728:	01c00804 	movi	r7,32
 801372c:	2908d83a 	srl	r4,r5,r4
 8013730:	11c00a26 	beq	r2,r7,801375c <__subdf3+0x8c8>
 8013734:	01c01004 	movi	r7,64
 8013738:	3885c83a 	sub	r2,r7,r2
 801373c:	288a983a 	sll	r5,r5,r2
 8013740:	2c62b03a 	or	r17,r5,r17
 8013744:	8822c03a 	cmpne	r17,r17,zero
 8013748:	8922b03a 	or	r17,r17,r4
 801374c:	0005883a 	mov	r2,zero
 8013750:	003f9206 	br	801359c <__alt_data_end+0xfc01359c>
 8013754:	000b883a 	mov	r5,zero
 8013758:	003fdc06 	br	80136cc <__alt_data_end+0xfc0136cc>
 801375c:	000b883a 	mov	r5,zero
 8013760:	003ff706 	br	8013740 <__alt_data_end+0xfc013740>

08013764 <__fixdfsi>:
 8013764:	2806d53a 	srli	r3,r5,20
 8013768:	00800434 	movhi	r2,16
 801376c:	10bfffc4 	addi	r2,r2,-1
 8013770:	18c1ffcc 	andi	r3,r3,2047
 8013774:	0180ff84 	movi	r6,1022
 8013778:	2884703a 	and	r2,r5,r2
 801377c:	280ad7fa 	srli	r5,r5,31
 8013780:	30c0130e 	bge	r6,r3,80137d0 <__fixdfsi+0x6c>
 8013784:	01810744 	movi	r6,1053
 8013788:	30c00d16 	blt	r6,r3,80137c0 <__fixdfsi+0x5c>
 801378c:	01810cc4 	movi	r6,1075
 8013790:	30cdc83a 	sub	r6,r6,r3
 8013794:	01c007c4 	movi	r7,31
 8013798:	10800434 	orhi	r2,r2,16
 801379c:	39800e0e 	bge	r7,r6,80137d8 <__fixdfsi+0x74>
 80137a0:	010104c4 	movi	r4,1043
 80137a4:	20c7c83a 	sub	r3,r4,r3
 80137a8:	10c6d83a 	srl	r3,r2,r3
 80137ac:	29403fcc 	andi	r5,r5,255
 80137b0:	0145c83a 	sub	r2,zero,r5
 80137b4:	1884f03a 	xor	r2,r3,r2
 80137b8:	1145883a 	add	r2,r2,r5
 80137bc:	f800283a 	ret
 80137c0:	00a00034 	movhi	r2,32768
 80137c4:	10bfffc4 	addi	r2,r2,-1
 80137c8:	2885883a 	add	r2,r5,r2
 80137cc:	f800283a 	ret
 80137d0:	0005883a 	mov	r2,zero
 80137d4:	f800283a 	ret
 80137d8:	18fefb44 	addi	r3,r3,-1043
 80137dc:	2188d83a 	srl	r4,r4,r6
 80137e0:	10c6983a 	sll	r3,r2,r3
 80137e4:	20c6b03a 	or	r3,r4,r3
 80137e8:	003ff006 	br	80137ac <__alt_data_end+0xfc0137ac>

080137ec <__floatsidf>:
 80137ec:	defffd04 	addi	sp,sp,-12
 80137f0:	dc400115 	stw	r17,4(sp)
 80137f4:	dfc00215 	stw	ra,8(sp)
 80137f8:	dc000015 	stw	r16,0(sp)
 80137fc:	2023883a 	mov	r17,r4
 8013800:	20001426 	beq	r4,zero,8013854 <__floatsidf+0x68>
 8013804:	2020d7fa 	srli	r16,r4,31
 8013808:	80000126 	beq	r16,zero,8013810 <__floatsidf+0x24>
 801380c:	0123c83a 	sub	r17,zero,r4
 8013810:	8809883a 	mov	r4,r17
 8013814:	80139600 	call	8013960 <__clzsi2>
 8013818:	01410784 	movi	r5,1054
 801381c:	00c00284 	movi	r3,10
 8013820:	288bc83a 	sub	r5,r5,r2
 8013824:	18801c16 	blt	r3,r2,8013898 <__floatsidf+0xac>
 8013828:	00c002c4 	movi	r3,11
 801382c:	1887c83a 	sub	r3,r3,r2
 8013830:	88c8d83a 	srl	r4,r17,r3
 8013834:	00c00434 	movhi	r3,16
 8013838:	18ffffc4 	addi	r3,r3,-1
 801383c:	10800544 	addi	r2,r2,21
 8013840:	20c8703a 	and	r4,r4,r3
 8013844:	8884983a 	sll	r2,r17,r2
 8013848:	28c1ffcc 	andi	r3,r5,2047
 801384c:	800d883a 	mov	r6,r16
 8013850:	00000406 	br	8013864 <__floatsidf+0x78>
 8013854:	000d883a 	mov	r6,zero
 8013858:	0007883a 	mov	r3,zero
 801385c:	0009883a 	mov	r4,zero
 8013860:	0005883a 	mov	r2,zero
 8013864:	180a953a 	slli	r5,r3,20
 8013868:	31803fcc 	andi	r6,r6,255
 801386c:	00c00434 	movhi	r3,16
 8013870:	300c97fa 	slli	r6,r6,31
 8013874:	18ffffc4 	addi	r3,r3,-1
 8013878:	20c6703a 	and	r3,r4,r3
 801387c:	1946b03a 	or	r3,r3,r5
 8013880:	1986b03a 	or	r3,r3,r6
 8013884:	dfc00217 	ldw	ra,8(sp)
 8013888:	dc400117 	ldw	r17,4(sp)
 801388c:	dc000017 	ldw	r16,0(sp)
 8013890:	dec00304 	addi	sp,sp,12
 8013894:	f800283a 	ret
 8013898:	10fffd44 	addi	r3,r2,-11
 801389c:	88c8983a 	sll	r4,r17,r3
 80138a0:	00800434 	movhi	r2,16
 80138a4:	10bfffc4 	addi	r2,r2,-1
 80138a8:	2088703a 	and	r4,r4,r2
 80138ac:	28c1ffcc 	andi	r3,r5,2047
 80138b0:	800d883a 	mov	r6,r16
 80138b4:	0005883a 	mov	r2,zero
 80138b8:	003fea06 	br	8013864 <__alt_data_end+0xfc013864>

080138bc <__floatunsidf>:
 80138bc:	defffe04 	addi	sp,sp,-8
 80138c0:	dc000015 	stw	r16,0(sp)
 80138c4:	dfc00115 	stw	ra,4(sp)
 80138c8:	2021883a 	mov	r16,r4
 80138cc:	20001026 	beq	r4,zero,8013910 <__floatunsidf+0x54>
 80138d0:	80139600 	call	8013960 <__clzsi2>
 80138d4:	01410784 	movi	r5,1054
 80138d8:	100d883a 	mov	r6,r2
 80138dc:	288bc83a 	sub	r5,r5,r2
 80138e0:	00800284 	movi	r2,10
 80138e4:	11801616 	blt	r2,r6,8013940 <__floatunsidf+0x84>
 80138e8:	008002c4 	movi	r2,11
 80138ec:	1185c83a 	sub	r2,r2,r6
 80138f0:	8084d83a 	srl	r2,r16,r2
 80138f4:	00c00434 	movhi	r3,16
 80138f8:	31c00544 	addi	r7,r6,21
 80138fc:	18ffffc4 	addi	r3,r3,-1
 8013900:	81e0983a 	sll	r16,r16,r7
 8013904:	10cc703a 	and	r6,r2,r3
 8013908:	2941ffcc 	andi	r5,r5,2047
 801390c:	00000206 	br	8013918 <__floatunsidf+0x5c>
 8013910:	000b883a 	mov	r5,zero
 8013914:	000d883a 	mov	r6,zero
 8013918:	280a953a 	slli	r5,r5,20
 801391c:	00c00434 	movhi	r3,16
 8013920:	18ffffc4 	addi	r3,r3,-1
 8013924:	30c6703a 	and	r3,r6,r3
 8013928:	8005883a 	mov	r2,r16
 801392c:	1946b03a 	or	r3,r3,r5
 8013930:	dfc00117 	ldw	ra,4(sp)
 8013934:	dc000017 	ldw	r16,0(sp)
 8013938:	dec00204 	addi	sp,sp,8
 801393c:	f800283a 	ret
 8013940:	31bffd44 	addi	r6,r6,-11
 8013944:	818c983a 	sll	r6,r16,r6
 8013948:	00800434 	movhi	r2,16
 801394c:	10bfffc4 	addi	r2,r2,-1
 8013950:	2941ffcc 	andi	r5,r5,2047
 8013954:	0021883a 	mov	r16,zero
 8013958:	308c703a 	and	r6,r6,r2
 801395c:	003fee06 	br	8013918 <__alt_data_end+0xfc013918>

08013960 <__clzsi2>:
 8013960:	00bfffd4 	movui	r2,65535
 8013964:	11000b36 	bltu	r2,r4,8013994 <__clzsi2+0x34>
 8013968:	00803fc4 	movi	r2,255
 801396c:	1100122e 	bgeu	r2,r4,80139b8 <__clzsi2+0x58>
 8013970:	00c00204 	movi	r3,8
 8013974:	01400604 	movi	r5,24
 8013978:	20c8d83a 	srl	r4,r4,r3
 801397c:	00820074 	movhi	r2,2049
 8013980:	109ed904 	addi	r2,r2,31588
 8013984:	1109883a 	add	r4,r2,r4
 8013988:	20800003 	ldbu	r2,0(r4)
 801398c:	2885c83a 	sub	r2,r5,r2
 8013990:	f800283a 	ret
 8013994:	00804034 	movhi	r2,256
 8013998:	10bfffc4 	addi	r2,r2,-1
 801399c:	11000336 	bltu	r2,r4,80139ac <__clzsi2+0x4c>
 80139a0:	00c00404 	movi	r3,16
 80139a4:	180b883a 	mov	r5,r3
 80139a8:	003ff306 	br	8013978 <__alt_data_end+0xfc013978>
 80139ac:	00c00604 	movi	r3,24
 80139b0:	01400204 	movi	r5,8
 80139b4:	003ff006 	br	8013978 <__alt_data_end+0xfc013978>
 80139b8:	0007883a 	mov	r3,zero
 80139bc:	01400804 	movi	r5,32
 80139c0:	003fed06 	br	8013978 <__alt_data_end+0xfc013978>

080139c4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 80139c4:	defffe04 	addi	sp,sp,-8
 80139c8:	dfc00115 	stw	ra,4(sp)
 80139cc:	df000015 	stw	fp,0(sp)
 80139d0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 80139d4:	008200b4 	movhi	r2,2050
 80139d8:	10a65404 	addi	r2,r2,-26288
 80139dc:	10800017 	ldw	r2,0(r2)
 80139e0:	10000526 	beq	r2,zero,80139f8 <alt_get_errno+0x34>
 80139e4:	008200b4 	movhi	r2,2050
 80139e8:	10a65404 	addi	r2,r2,-26288
 80139ec:	10800017 	ldw	r2,0(r2)
 80139f0:	103ee83a 	callr	r2
 80139f4:	00000206 	br	8013a00 <alt_get_errno+0x3c>
 80139f8:	008200b4 	movhi	r2,2050
 80139fc:	10ad8804 	addi	r2,r2,-18912
}
 8013a00:	e037883a 	mov	sp,fp
 8013a04:	dfc00117 	ldw	ra,4(sp)
 8013a08:	df000017 	ldw	fp,0(sp)
 8013a0c:	dec00204 	addi	sp,sp,8
 8013a10:	f800283a 	ret

08013a14 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
 8013a14:	defffb04 	addi	sp,sp,-20
 8013a18:	dfc00415 	stw	ra,16(sp)
 8013a1c:	df000315 	stw	fp,12(sp)
 8013a20:	df000304 	addi	fp,sp,12
 8013a24:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
 8013a28:	e0bfff17 	ldw	r2,-4(fp)
 8013a2c:	10000816 	blt	r2,zero,8013a50 <close+0x3c>
 8013a30:	e13fff17 	ldw	r4,-4(fp)
 8013a34:	01400304 	movi	r5,12
 8013a38:	8002f580 	call	8002f58 <__mulsi3>
 8013a3c:	1007883a 	mov	r3,r2
 8013a40:	008200b4 	movhi	r2,2050
 8013a44:	10a16a04 	addi	r2,r2,-31320
 8013a48:	1885883a 	add	r2,r3,r2
 8013a4c:	00000106 	br	8013a54 <close+0x40>
 8013a50:	0005883a 	mov	r2,zero
 8013a54:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
 8013a58:	e0bffd17 	ldw	r2,-12(fp)
 8013a5c:	10001926 	beq	r2,zero,8013ac4 <close+0xb0>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
 8013a60:	e0bffd17 	ldw	r2,-12(fp)
 8013a64:	10800017 	ldw	r2,0(r2)
 8013a68:	10800417 	ldw	r2,16(r2)
 8013a6c:	10000626 	beq	r2,zero,8013a88 <close+0x74>
 8013a70:	e0bffd17 	ldw	r2,-12(fp)
 8013a74:	10800017 	ldw	r2,0(r2)
 8013a78:	10800417 	ldw	r2,16(r2)
 8013a7c:	e13ffd17 	ldw	r4,-12(fp)
 8013a80:	103ee83a 	callr	r2
 8013a84:	00000106 	br	8013a8c <close+0x78>
 8013a88:	0005883a 	mov	r2,zero
 8013a8c:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
 8013a90:	e13fff17 	ldw	r4,-4(fp)
 8013a94:	80146ac0 	call	80146ac <alt_release_fd>
    if (rval < 0)
 8013a98:	e0bffe17 	ldw	r2,-8(fp)
 8013a9c:	1000070e 	bge	r2,zero,8013abc <close+0xa8>
    {
      ALT_ERRNO = -rval;
 8013aa0:	80139c40 	call	80139c4 <alt_get_errno>
 8013aa4:	1007883a 	mov	r3,r2
 8013aa8:	e0bffe17 	ldw	r2,-8(fp)
 8013aac:	0085c83a 	sub	r2,zero,r2
 8013ab0:	18800015 	stw	r2,0(r3)
      return -1;
 8013ab4:	00bfffc4 	movi	r2,-1
 8013ab8:	00000706 	br	8013ad8 <close+0xc4>
    }
    return 0;
 8013abc:	0005883a 	mov	r2,zero
 8013ac0:	00000506 	br	8013ad8 <close+0xc4>
  }
  else
  {
    ALT_ERRNO = EBADFD;
 8013ac4:	80139c40 	call	80139c4 <alt_get_errno>
 8013ac8:	1007883a 	mov	r3,r2
 8013acc:	00801444 	movi	r2,81
 8013ad0:	18800015 	stw	r2,0(r3)
    return -1;
 8013ad4:	00bfffc4 	movi	r2,-1
  }
}
 8013ad8:	e037883a 	mov	sp,fp
 8013adc:	dfc00117 	ldw	ra,4(sp)
 8013ae0:	df000017 	ldw	fp,0(sp)
 8013ae4:	dec00204 	addi	sp,sp,8
 8013ae8:	f800283a 	ret

08013aec <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
 8013aec:	defffc04 	addi	sp,sp,-16
 8013af0:	df000315 	stw	fp,12(sp)
 8013af4:	df000304 	addi	fp,sp,12
 8013af8:	e13ffd15 	stw	r4,-12(fp)
 8013afc:	e17ffe15 	stw	r5,-8(fp)
 8013b00:	e1bfff15 	stw	r6,-4(fp)
  return len;
 8013b04:	e0bfff17 	ldw	r2,-4(fp)
}
 8013b08:	e037883a 	mov	sp,fp
 8013b0c:	df000017 	ldw	fp,0(sp)
 8013b10:	dec00104 	addi	sp,sp,4
 8013b14:	f800283a 	ret

08013b18 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 8013b18:	defffe04 	addi	sp,sp,-8
 8013b1c:	dfc00115 	stw	ra,4(sp)
 8013b20:	df000015 	stw	fp,0(sp)
 8013b24:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 8013b28:	008200b4 	movhi	r2,2050
 8013b2c:	10a65404 	addi	r2,r2,-26288
 8013b30:	10800017 	ldw	r2,0(r2)
 8013b34:	10000526 	beq	r2,zero,8013b4c <alt_get_errno+0x34>
 8013b38:	008200b4 	movhi	r2,2050
 8013b3c:	10a65404 	addi	r2,r2,-26288
 8013b40:	10800017 	ldw	r2,0(r2)
 8013b44:	103ee83a 	callr	r2
 8013b48:	00000206 	br	8013b54 <alt_get_errno+0x3c>
 8013b4c:	008200b4 	movhi	r2,2050
 8013b50:	10ad8804 	addi	r2,r2,-18912
}
 8013b54:	e037883a 	mov	sp,fp
 8013b58:	dfc00117 	ldw	ra,4(sp)
 8013b5c:	df000017 	ldw	fp,0(sp)
 8013b60:	dec00204 	addi	sp,sp,8
 8013b64:	f800283a 	ret

08013b68 <alt_dma_txchan_open>:
 *
 * The return value will be NULL on failure, and non-NULL otherwise. 
 */

alt_dma_txchan alt_dma_txchan_open (const char* name)
{
 8013b68:	defffc04 	addi	sp,sp,-16
 8013b6c:	dfc00315 	stw	ra,12(sp)
 8013b70:	df000215 	stw	fp,8(sp)
 8013b74:	df000204 	addi	fp,sp,8
 8013b78:	e13fff15 	stw	r4,-4(fp)
  alt_dma_txchan dev;

  dev = (alt_dma_txchan) alt_find_dev (name, &alt_dma_txchan_list);
 8013b7c:	e13fff17 	ldw	r4,-4(fp)
 8013b80:	d1602304 	addi	r5,gp,-32628
 8013b84:	8013bf00 	call	8013bf0 <alt_find_dev>
 8013b88:	e0bffe15 	stw	r2,-8(fp)

  if (!dev)
 8013b8c:	e0bffe17 	ldw	r2,-8(fp)
 8013b90:	1000041e 	bne	r2,zero,8013ba4 <alt_dma_txchan_open+0x3c>
  {
    ALT_ERRNO = ENODEV;
 8013b94:	8013b180 	call	8013b18 <alt_get_errno>
 8013b98:	1007883a 	mov	r3,r2
 8013b9c:	008004c4 	movi	r2,19
 8013ba0:	18800015 	stw	r2,0(r3)
  }

  return dev;
 8013ba4:	e0bffe17 	ldw	r2,-8(fp)
}
 8013ba8:	e037883a 	mov	sp,fp
 8013bac:	dfc00117 	ldw	ra,4(sp)
 8013bb0:	df000017 	ldw	fp,0(sp)
 8013bb4:	dec00204 	addi	sp,sp,8
 8013bb8:	f800283a 	ret

08013bbc <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
 8013bbc:	defffd04 	addi	sp,sp,-12
 8013bc0:	df000215 	stw	fp,8(sp)
 8013bc4:	df000204 	addi	fp,sp,8
 8013bc8:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
 8013bcc:	0001883a 	nop
 8013bd0:	e0bfff17 	ldw	r2,-4(fp)
 8013bd4:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
 8013bd8:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
 8013bdc:	10000226 	beq	r2,zero,8013be8 <_exit+0x2c>
    ALT_SIM_FAIL();
 8013be0:	002af070 	cmpltui	zero,zero,43969
 8013be4:	00000106 	br	8013bec <_exit+0x30>
  } else {
    ALT_SIM_PASS();
 8013be8:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
 8013bec:	003fff06 	br	8013bec <__alt_data_end+0xfc013bec>

08013bf0 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
 8013bf0:	defffa04 	addi	sp,sp,-24
 8013bf4:	dfc00515 	stw	ra,20(sp)
 8013bf8:	df000415 	stw	fp,16(sp)
 8013bfc:	df000404 	addi	fp,sp,16
 8013c00:	e13ffe15 	stw	r4,-8(fp)
 8013c04:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
 8013c08:	e0bfff17 	ldw	r2,-4(fp)
 8013c0c:	10800017 	ldw	r2,0(r2)
 8013c10:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
 8013c14:	e13ffe17 	ldw	r4,-8(fp)
 8013c18:	80045e40 	call	80045e4 <strlen>
 8013c1c:	10800044 	addi	r2,r2,1
 8013c20:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 8013c24:	00000d06 	br	8013c5c <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
 8013c28:	e0bffc17 	ldw	r2,-16(fp)
 8013c2c:	10c00217 	ldw	r3,8(r2)
 8013c30:	e0bffd17 	ldw	r2,-12(fp)
 8013c34:	1809883a 	mov	r4,r3
 8013c38:	e17ffe17 	ldw	r5,-8(fp)
 8013c3c:	100d883a 	mov	r6,r2
 8013c40:	80171680 	call	8017168 <memcmp>
 8013c44:	1000021e 	bne	r2,zero,8013c50 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
 8013c48:	e0bffc17 	ldw	r2,-16(fp)
 8013c4c:	00000706 	br	8013c6c <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
 8013c50:	e0bffc17 	ldw	r2,-16(fp)
 8013c54:	10800017 	ldw	r2,0(r2)
 8013c58:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 8013c5c:	e0fffc17 	ldw	r3,-16(fp)
 8013c60:	e0bfff17 	ldw	r2,-4(fp)
 8013c64:	18bff01e 	bne	r3,r2,8013c28 <__alt_data_end+0xfc013c28>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
 8013c68:	0005883a 	mov	r2,zero
}
 8013c6c:	e037883a 	mov	sp,fp
 8013c70:	dfc00117 	ldw	ra,4(sp)
 8013c74:	df000017 	ldw	fp,0(sp)
 8013c78:	dec00204 	addi	sp,sp,8
 8013c7c:	f800283a 	ret

08013c80 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 8013c80:	defffe04 	addi	sp,sp,-8
 8013c84:	dfc00115 	stw	ra,4(sp)
 8013c88:	df000015 	stw	fp,0(sp)
 8013c8c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 8013c90:	008200b4 	movhi	r2,2050
 8013c94:	10a65404 	addi	r2,r2,-26288
 8013c98:	10800017 	ldw	r2,0(r2)
 8013c9c:	10000526 	beq	r2,zero,8013cb4 <alt_get_errno+0x34>
 8013ca0:	008200b4 	movhi	r2,2050
 8013ca4:	10a65404 	addi	r2,r2,-26288
 8013ca8:	10800017 	ldw	r2,0(r2)
 8013cac:	103ee83a 	callr	r2
 8013cb0:	00000206 	br	8013cbc <alt_get_errno+0x3c>
 8013cb4:	008200b4 	movhi	r2,2050
 8013cb8:	10ad8804 	addi	r2,r2,-18912
}
 8013cbc:	e037883a 	mov	sp,fp
 8013cc0:	dfc00117 	ldw	ra,4(sp)
 8013cc4:	df000017 	ldw	fp,0(sp)
 8013cc8:	dec00204 	addi	sp,sp,8
 8013ccc:	f800283a 	ret

08013cd0 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
 8013cd0:	defffb04 	addi	sp,sp,-20
 8013cd4:	dfc00415 	stw	ra,16(sp)
 8013cd8:	df000315 	stw	fp,12(sp)
 8013cdc:	df000304 	addi	fp,sp,12
 8013ce0:	e13ffe15 	stw	r4,-8(fp)
 8013ce4:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 8013ce8:	e0bffe17 	ldw	r2,-8(fp)
 8013cec:	10000816 	blt	r2,zero,8013d10 <fstat+0x40>
 8013cf0:	e13ffe17 	ldw	r4,-8(fp)
 8013cf4:	01400304 	movi	r5,12
 8013cf8:	8002f580 	call	8002f58 <__mulsi3>
 8013cfc:	1007883a 	mov	r3,r2
 8013d00:	008200b4 	movhi	r2,2050
 8013d04:	10a16a04 	addi	r2,r2,-31320
 8013d08:	1885883a 	add	r2,r3,r2
 8013d0c:	00000106 	br	8013d14 <fstat+0x44>
 8013d10:	0005883a 	mov	r2,zero
 8013d14:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
 8013d18:	e0bffd17 	ldw	r2,-12(fp)
 8013d1c:	10001026 	beq	r2,zero,8013d60 <fstat+0x90>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
 8013d20:	e0bffd17 	ldw	r2,-12(fp)
 8013d24:	10800017 	ldw	r2,0(r2)
 8013d28:	10800817 	ldw	r2,32(r2)
 8013d2c:	10000726 	beq	r2,zero,8013d4c <fstat+0x7c>
    {
      return fd->dev->fstat(fd, st);
 8013d30:	e0bffd17 	ldw	r2,-12(fp)
 8013d34:	10800017 	ldw	r2,0(r2)
 8013d38:	10800817 	ldw	r2,32(r2)
 8013d3c:	e13ffd17 	ldw	r4,-12(fp)
 8013d40:	e17fff17 	ldw	r5,-4(fp)
 8013d44:	103ee83a 	callr	r2
 8013d48:	00000a06 	br	8013d74 <fstat+0xa4>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
 8013d4c:	e0bfff17 	ldw	r2,-4(fp)
 8013d50:	00c80004 	movi	r3,8192
 8013d54:	10c00115 	stw	r3,4(r2)
      return 0;
 8013d58:	0005883a 	mov	r2,zero
 8013d5c:	00000506 	br	8013d74 <fstat+0xa4>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 8013d60:	8013c800 	call	8013c80 <alt_get_errno>
 8013d64:	1007883a 	mov	r3,r2
 8013d68:	00801444 	movi	r2,81
 8013d6c:	18800015 	stw	r2,0(r3)
    return -1;
 8013d70:	00bfffc4 	movi	r2,-1
  }
}
 8013d74:	e037883a 	mov	sp,fp
 8013d78:	dfc00117 	ldw	ra,4(sp)
 8013d7c:	df000017 	ldw	fp,0(sp)
 8013d80:	dec00204 	addi	sp,sp,8
 8013d84:	f800283a 	ret

08013d88 <getpid>:
 *
 * ALT_GETPID is mapped onto the getpid() system call in alt_syscall.h
 */
 
int ALT_GETPID (void)
{
 8013d88:	deffff04 	addi	sp,sp,-4
 8013d8c:	df000015 	stw	fp,0(sp)
 8013d90:	d839883a 	mov	fp,sp
  return 0;
 8013d94:	0005883a 	mov	r2,zero
}
 8013d98:	e037883a 	mov	sp,fp
 8013d9c:	df000017 	ldw	fp,0(sp)
 8013da0:	dec00104 	addi	sp,sp,4
 8013da4:	f800283a 	ret

08013da8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 8013da8:	defffe04 	addi	sp,sp,-8
 8013dac:	dfc00115 	stw	ra,4(sp)
 8013db0:	df000015 	stw	fp,0(sp)
 8013db4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 8013db8:	008200b4 	movhi	r2,2050
 8013dbc:	10a65404 	addi	r2,r2,-26288
 8013dc0:	10800017 	ldw	r2,0(r2)
 8013dc4:	10000526 	beq	r2,zero,8013ddc <alt_get_errno+0x34>
 8013dc8:	008200b4 	movhi	r2,2050
 8013dcc:	10a65404 	addi	r2,r2,-26288
 8013dd0:	10800017 	ldw	r2,0(r2)
 8013dd4:	103ee83a 	callr	r2
 8013dd8:	00000206 	br	8013de4 <alt_get_errno+0x3c>
 8013ddc:	008200b4 	movhi	r2,2050
 8013de0:	10ad8804 	addi	r2,r2,-18912
}
 8013de4:	e037883a 	mov	sp,fp
 8013de8:	dfc00117 	ldw	ra,4(sp)
 8013dec:	df000017 	ldw	fp,0(sp)
 8013df0:	dec00204 	addi	sp,sp,8
 8013df4:	f800283a 	ret

08013df8 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
 8013df8:	deffed04 	addi	sp,sp,-76
 8013dfc:	dfc01215 	stw	ra,72(sp)
 8013e00:	df001115 	stw	fp,68(sp)
 8013e04:	df001104 	addi	fp,sp,68
 8013e08:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 8013e0c:	e0bfff17 	ldw	r2,-4(fp)
 8013e10:	10000816 	blt	r2,zero,8013e34 <isatty+0x3c>
 8013e14:	e13fff17 	ldw	r4,-4(fp)
 8013e18:	01400304 	movi	r5,12
 8013e1c:	8002f580 	call	8002f58 <__mulsi3>
 8013e20:	1007883a 	mov	r3,r2
 8013e24:	008200b4 	movhi	r2,2050
 8013e28:	10a16a04 	addi	r2,r2,-31320
 8013e2c:	1885883a 	add	r2,r3,r2
 8013e30:	00000106 	br	8013e38 <isatty+0x40>
 8013e34:	0005883a 	mov	r2,zero
 8013e38:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
 8013e3c:	e0bfef17 	ldw	r2,-68(fp)
 8013e40:	10000e26 	beq	r2,zero,8013e7c <isatty+0x84>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
 8013e44:	e0bfef17 	ldw	r2,-68(fp)
 8013e48:	10800017 	ldw	r2,0(r2)
 8013e4c:	10800817 	ldw	r2,32(r2)
 8013e50:	1000021e 	bne	r2,zero,8013e5c <isatty+0x64>
    {
      return 1;
 8013e54:	00800044 	movi	r2,1
 8013e58:	00000d06 	br	8013e90 <isatty+0x98>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
 8013e5c:	e0bff004 	addi	r2,fp,-64
 8013e60:	e13fff17 	ldw	r4,-4(fp)
 8013e64:	100b883a 	mov	r5,r2
 8013e68:	8013cd00 	call	8013cd0 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
 8013e6c:	e0bff117 	ldw	r2,-60(fp)
 8013e70:	10880020 	cmpeqi	r2,r2,8192
 8013e74:	10803fcc 	andi	r2,r2,255
 8013e78:	00000506 	br	8013e90 <isatty+0x98>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 8013e7c:	8013da80 	call	8013da8 <alt_get_errno>
 8013e80:	1007883a 	mov	r3,r2
 8013e84:	00801444 	movi	r2,81
 8013e88:	18800015 	stw	r2,0(r3)
    return 0;
 8013e8c:	0005883a 	mov	r2,zero
  }
}
 8013e90:	e037883a 	mov	sp,fp
 8013e94:	dfc00117 	ldw	ra,4(sp)
 8013e98:	df000017 	ldw	fp,0(sp)
 8013e9c:	dec00204 	addi	sp,sp,8
 8013ea0:	f800283a 	ret

08013ea4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 8013ea4:	defffe04 	addi	sp,sp,-8
 8013ea8:	dfc00115 	stw	ra,4(sp)
 8013eac:	df000015 	stw	fp,0(sp)
 8013eb0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 8013eb4:	008200b4 	movhi	r2,2050
 8013eb8:	10a65404 	addi	r2,r2,-26288
 8013ebc:	10800017 	ldw	r2,0(r2)
 8013ec0:	10000526 	beq	r2,zero,8013ed8 <alt_get_errno+0x34>
 8013ec4:	008200b4 	movhi	r2,2050
 8013ec8:	10a65404 	addi	r2,r2,-26288
 8013ecc:	10800017 	ldw	r2,0(r2)
 8013ed0:	103ee83a 	callr	r2
 8013ed4:	00000206 	br	8013ee0 <alt_get_errno+0x3c>
 8013ed8:	008200b4 	movhi	r2,2050
 8013edc:	10ad8804 	addi	r2,r2,-18912
}
 8013ee0:	e037883a 	mov	sp,fp
 8013ee4:	dfc00117 	ldw	ra,4(sp)
 8013ee8:	df000017 	ldw	fp,0(sp)
 8013eec:	dec00204 	addi	sp,sp,8
 8013ef0:	f800283a 	ret

08013ef4 <kill>:
 *
 * ALT_KILL is mapped onto the kill() system call in alt_syscall.h
 */

int ALT_KILL (int pid, int sig)
{
 8013ef4:	defffb04 	addi	sp,sp,-20
 8013ef8:	dfc00415 	stw	ra,16(sp)
 8013efc:	df000315 	stw	fp,12(sp)
 8013f00:	df000304 	addi	fp,sp,12
 8013f04:	e13ffe15 	stw	r4,-8(fp)
 8013f08:	e17fff15 	stw	r5,-4(fp)
  int status = 0;
 8013f0c:	e03ffd15 	stw	zero,-12(fp)

  if (pid <= 0)
 8013f10:	e0bffe17 	ldw	r2,-8(fp)
 8013f14:	00803116 	blt	zero,r2,8013fdc <kill+0xe8>
  {
    switch (sig)
 8013f18:	e0bfff17 	ldw	r2,-4(fp)
 8013f1c:	10800828 	cmpgeui	r2,r2,32
 8013f20:	1000291e 	bne	r2,zero,8013fc8 <kill+0xd4>
 8013f24:	e0bfff17 	ldw	r2,-4(fp)
 8013f28:	100690ba 	slli	r3,r2,2
 8013f2c:	00820074 	movhi	r2,2049
 8013f30:	108fd004 	addi	r2,r2,16192
 8013f34:	1885883a 	add	r2,r3,r2
 8013f38:	10800017 	ldw	r2,0(r2)
 8013f3c:	1000683a 	jmp	r2
 8013f40:	08013fd4 	ori	zero,at,1279
 8013f44:	08013fc8 	cmpgei	zero,at,1279
 8013f48:	08013fc8 	cmpgei	zero,at,1279
 8013f4c:	08013fc0 	call	8013fc <__reset-0x77fec04>
 8013f50:	08013fc0 	call	8013fc <__reset-0x77fec04>
 8013f54:	08013fc0 	call	8013fc <__reset-0x77fec04>
 8013f58:	08013fc0 	call	8013fc <__reset-0x77fec04>
 8013f5c:	08013fc8 	cmpgei	zero,at,1279
 8013f60:	08013fc0 	call	8013fc <__reset-0x77fec04>
 8013f64:	08013fc0 	call	8013fc <__reset-0x77fec04>
 8013f68:	08013fc0 	call	8013fc <__reset-0x77fec04>
 8013f6c:	08013fc0 	call	8013fc <__reset-0x77fec04>
 8013f70:	08013fc0 	call	8013fc <__reset-0x77fec04>
 8013f74:	08013fc0 	call	8013fc <__reset-0x77fec04>
 8013f78:	08013fc0 	call	8013fc <__reset-0x77fec04>
 8013f7c:	08013fc0 	call	8013fc <__reset-0x77fec04>
 8013f80:	08013fd4 	ori	zero,at,1279
 8013f84:	08013fc8 	cmpgei	zero,at,1279
 8013f88:	08013fc8 	cmpgei	zero,at,1279
 8013f8c:	08013fc8 	cmpgei	zero,at,1279
 8013f90:	08013fd4 	ori	zero,at,1279
 8013f94:	08013fc8 	cmpgei	zero,at,1279
 8013f98:	08013fc8 	cmpgei	zero,at,1279
 8013f9c:	08013fc0 	call	8013fc <__reset-0x77fec04>
 8013fa0:	08013fc0 	call	8013fc <__reset-0x77fec04>
 8013fa4:	08013fc0 	call	8013fc <__reset-0x77fec04>
 8013fa8:	08013fc0 	call	8013fc <__reset-0x77fec04>
 8013fac:	08013fc0 	call	8013fc <__reset-0x77fec04>
 8013fb0:	08013fc8 	cmpgei	zero,at,1279
 8013fb4:	08013fc8 	cmpgei	zero,at,1279
 8013fb8:	08013fc0 	call	8013fc <__reset-0x77fec04>
 8013fbc:	08013fc0 	call	8013fc <__reset-0x77fec04>
       * The Posix standard defines the default behaviour for all these signals 
       * as being eqivalent to a call to _exit(). No mechanism is provided to 
       * change this behaviour.
       */

      _exit(0);
 8013fc0:	0009883a 	mov	r4,zero
 8013fc4:	8013bbc0 	call	8013bbc <_exit>
      break;
    default:

      /* Tried to send an unsupported signal */

      status = EINVAL;
 8013fc8:	00800584 	movi	r2,22
 8013fcc:	e0bffd15 	stw	r2,-12(fp)
 8013fd0:	00000606 	br	8013fec <kill+0xf8>
    {
    case 0:

      /* The null signal is used to check that a pid is valid. */

      break;
 8013fd4:	0001883a 	nop
 8013fd8:	00000406 	br	8013fec <kill+0xf8>

      status = EINVAL;
    }
  }

  else if (pid > 0)
 8013fdc:	e0bffe17 	ldw	r2,-8(fp)
 8013fe0:	0080020e 	bge	zero,r2,8013fec <kill+0xf8>
  {
    /* Attempted to signal a non-existant process */

    status = ESRCH;
 8013fe4:	008000c4 	movi	r2,3
 8013fe8:	e0bffd15 	stw	r2,-12(fp)
  }

  if (status)
 8013fec:	e0bffd17 	ldw	r2,-12(fp)
 8013ff0:	10000626 	beq	r2,zero,801400c <kill+0x118>
  {
    ALT_ERRNO = status;
 8013ff4:	8013ea40 	call	8013ea4 <alt_get_errno>
 8013ff8:	1007883a 	mov	r3,r2
 8013ffc:	e0bffd17 	ldw	r2,-12(fp)
 8014000:	18800015 	stw	r2,0(r3)
    return -1;
 8014004:	00bfffc4 	movi	r2,-1
 8014008:	00000106 	br	8014010 <kill+0x11c>
  }

  return 0;
 801400c:	0005883a 	mov	r2,zero
}
 8014010:	e037883a 	mov	sp,fp
 8014014:	dfc00117 	ldw	ra,4(sp)
 8014018:	df000017 	ldw	fp,0(sp)
 801401c:	dec00204 	addi	sp,sp,8
 8014020:	f800283a 	ret

08014024 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
 8014024:	defffc04 	addi	sp,sp,-16
 8014028:	df000315 	stw	fp,12(sp)
 801402c:	df000304 	addi	fp,sp,12
 8014030:	e13ffd15 	stw	r4,-12(fp)
 8014034:	e17ffe15 	stw	r5,-8(fp)
 8014038:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
 801403c:	e0fffe17 	ldw	r3,-8(fp)
 8014040:	e0bffd17 	ldw	r2,-12(fp)
 8014044:	18800c26 	beq	r3,r2,8014078 <alt_load_section+0x54>
  {
    while( to != end )
 8014048:	00000806 	br	801406c <alt_load_section+0x48>
    {
      *to++ = *from++;
 801404c:	e0bffe17 	ldw	r2,-8(fp)
 8014050:	10c00104 	addi	r3,r2,4
 8014054:	e0fffe15 	stw	r3,-8(fp)
 8014058:	e0fffd17 	ldw	r3,-12(fp)
 801405c:	19000104 	addi	r4,r3,4
 8014060:	e13ffd15 	stw	r4,-12(fp)
 8014064:	18c00017 	ldw	r3,0(r3)
 8014068:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
 801406c:	e0fffe17 	ldw	r3,-8(fp)
 8014070:	e0bfff17 	ldw	r2,-4(fp)
 8014074:	18bff51e 	bne	r3,r2,801404c <__alt_data_end+0xfc01404c>
    {
      *to++ = *from++;
    }
  }
}
 8014078:	e037883a 	mov	sp,fp
 801407c:	df000017 	ldw	fp,0(sp)
 8014080:	dec00104 	addi	sp,sp,4
 8014084:	f800283a 	ret

08014088 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
 8014088:	defffe04 	addi	sp,sp,-8
 801408c:	dfc00115 	stw	ra,4(sp)
 8014090:	df000015 	stw	fp,0(sp)
 8014094:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
 8014098:	010200b4 	movhi	r4,2050
 801409c:	21265b04 	addi	r4,r4,-26260
 80140a0:	01420074 	movhi	r5,2049
 80140a4:	295f3704 	addi	r5,r5,31964
 80140a8:	018200b4 	movhi	r6,2050
 80140ac:	31a65b04 	addi	r6,r6,-26260
 80140b0:	80140240 	call	8014024 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
 80140b4:	01020034 	movhi	r4,2048
 80140b8:	21000804 	addi	r4,r4,32
 80140bc:	01420034 	movhi	r5,2048
 80140c0:	29400804 	addi	r5,r5,32
 80140c4:	01820034 	movhi	r6,2048
 80140c8:	31808c04 	addi	r6,r6,560
 80140cc:	80140240 	call	8014024 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
 80140d0:	01020074 	movhi	r4,2049
 80140d4:	211d2904 	addi	r4,r4,29860
 80140d8:	01420074 	movhi	r5,2049
 80140dc:	295d2904 	addi	r5,r5,29860
 80140e0:	01820074 	movhi	r6,2049
 80140e4:	319f3704 	addi	r6,r6,31964
 80140e8:	80140240 	call	8014024 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
 80140ec:	80164e00 	call	80164e0 <alt_dcache_flush_all>
  alt_icache_flush_all();
 80140f0:	801674c0 	call	801674c <alt_icache_flush_all>
}
 80140f4:	e037883a 	mov	sp,fp
 80140f8:	dfc00117 	ldw	ra,4(sp)
 80140fc:	df000017 	ldw	fp,0(sp)
 8014100:	dec00204 	addi	sp,sp,8
 8014104:	f800283a 	ret

08014108 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 8014108:	defffe04 	addi	sp,sp,-8
 801410c:	dfc00115 	stw	ra,4(sp)
 8014110:	df000015 	stw	fp,0(sp)
 8014114:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 8014118:	008200b4 	movhi	r2,2050
 801411c:	10a65404 	addi	r2,r2,-26288
 8014120:	10800017 	ldw	r2,0(r2)
 8014124:	10000526 	beq	r2,zero,801413c <alt_get_errno+0x34>
 8014128:	008200b4 	movhi	r2,2050
 801412c:	10a65404 	addi	r2,r2,-26288
 8014130:	10800017 	ldw	r2,0(r2)
 8014134:	103ee83a 	callr	r2
 8014138:	00000206 	br	8014144 <alt_get_errno+0x3c>
 801413c:	008200b4 	movhi	r2,2050
 8014140:	10ad8804 	addi	r2,r2,-18912
}
 8014144:	e037883a 	mov	sp,fp
 8014148:	dfc00117 	ldw	ra,4(sp)
 801414c:	df000017 	ldw	fp,0(sp)
 8014150:	dec00204 	addi	sp,sp,8
 8014154:	f800283a 	ret

08014158 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
 8014158:	defff904 	addi	sp,sp,-28
 801415c:	dfc00615 	stw	ra,24(sp)
 8014160:	df000515 	stw	fp,20(sp)
 8014164:	df000504 	addi	fp,sp,20
 8014168:	e13ffd15 	stw	r4,-12(fp)
 801416c:	e17ffe15 	stw	r5,-8(fp)
 8014170:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
 8014174:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 8014178:	e0bffd17 	ldw	r2,-12(fp)
 801417c:	10000816 	blt	r2,zero,80141a0 <lseek+0x48>
 8014180:	e13ffd17 	ldw	r4,-12(fp)
 8014184:	01400304 	movi	r5,12
 8014188:	8002f580 	call	8002f58 <__mulsi3>
 801418c:	1007883a 	mov	r3,r2
 8014190:	008200b4 	movhi	r2,2050
 8014194:	10a16a04 	addi	r2,r2,-31320
 8014198:	1885883a 	add	r2,r3,r2
 801419c:	00000106 	br	80141a4 <lseek+0x4c>
 80141a0:	0005883a 	mov	r2,zero
 80141a4:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
 80141a8:	e0bffc17 	ldw	r2,-16(fp)
 80141ac:	10001026 	beq	r2,zero,80141f0 <lseek+0x98>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
 80141b0:	e0bffc17 	ldw	r2,-16(fp)
 80141b4:	10800017 	ldw	r2,0(r2)
 80141b8:	10800717 	ldw	r2,28(r2)
 80141bc:	10000926 	beq	r2,zero,80141e4 <lseek+0x8c>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
 80141c0:	e0bffc17 	ldw	r2,-16(fp)
 80141c4:	10800017 	ldw	r2,0(r2)
 80141c8:	10800717 	ldw	r2,28(r2)
 80141cc:	e13ffc17 	ldw	r4,-16(fp)
 80141d0:	e17ffe17 	ldw	r5,-8(fp)
 80141d4:	e1bfff17 	ldw	r6,-4(fp)
 80141d8:	103ee83a 	callr	r2
 80141dc:	e0bffb15 	stw	r2,-20(fp)
 80141e0:	00000506 	br	80141f8 <lseek+0xa0>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
 80141e4:	00bfde84 	movi	r2,-134
 80141e8:	e0bffb15 	stw	r2,-20(fp)
 80141ec:	00000206 	br	80141f8 <lseek+0xa0>
    }
  }
  else  
  {
    rc = -EBADFD;
 80141f0:	00bfebc4 	movi	r2,-81
 80141f4:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
 80141f8:	e0bffb17 	ldw	r2,-20(fp)
 80141fc:	1000070e 	bge	r2,zero,801421c <lseek+0xc4>
  {
    ALT_ERRNO = -rc;
 8014200:	80141080 	call	8014108 <alt_get_errno>
 8014204:	1007883a 	mov	r3,r2
 8014208:	e0bffb17 	ldw	r2,-20(fp)
 801420c:	0085c83a 	sub	r2,zero,r2
 8014210:	18800015 	stw	r2,0(r3)
    rc = -1;
 8014214:	00bfffc4 	movi	r2,-1
 8014218:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
 801421c:	e0bffb17 	ldw	r2,-20(fp)
}
 8014220:	e037883a 	mov	sp,fp
 8014224:	dfc00117 	ldw	ra,4(sp)
 8014228:	df000017 	ldw	fp,0(sp)
 801422c:	dec00204 	addi	sp,sp,8
 8014230:	f800283a 	ret

08014234 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
 8014234:	defffd04 	addi	sp,sp,-12
 8014238:	dfc00215 	stw	ra,8(sp)
 801423c:	df000115 	stw	fp,4(sp)
 8014240:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
 8014244:	0009883a 	mov	r4,zero
 8014248:	80149640 	call	8014964 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
 801424c:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
 8014250:	80149980 	call	8014998 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
 8014254:	01020074 	movhi	r4,2049
 8014258:	211f1c04 	addi	r4,r4,31856
 801425c:	01420074 	movhi	r5,2049
 8014260:	295f1c04 	addi	r5,r5,31856
 8014264:	01820074 	movhi	r6,2049
 8014268:	319f1c04 	addi	r6,r6,31856
 801426c:	80168480 	call	8016848 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
 8014270:	80166940 	call	8016694 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
 8014274:	01020074 	movhi	r4,2049
 8014278:	2119bc04 	addi	r4,r4,26352
 801427c:	80171540 	call	8017154 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
 8014280:	d1275d17 	ldw	r4,-25228(gp)
 8014284:	d0e75e17 	ldw	r3,-25224(gp)
 8014288:	d0a75f17 	ldw	r2,-25220(gp)
 801428c:	180b883a 	mov	r5,r3
 8014290:	100d883a 	mov	r6,r2
 8014294:	8000e4c0 	call	8000e4c <main>
 8014298:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
 801429c:	01000044 	movi	r4,1
 80142a0:	8013a140 	call	8013a14 <close>
  exit (result);
 80142a4:	e13fff17 	ldw	r4,-4(fp)
 80142a8:	80034b80 	call	80034b8 <exit>

080142ac <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
 80142ac:	defffe04 	addi	sp,sp,-8
 80142b0:	df000115 	stw	fp,4(sp)
 80142b4:	df000104 	addi	fp,sp,4
 80142b8:	e13fff15 	stw	r4,-4(fp)
}
 80142bc:	e037883a 	mov	sp,fp
 80142c0:	df000017 	ldw	fp,0(sp)
 80142c4:	dec00104 	addi	sp,sp,4
 80142c8:	f800283a 	ret

080142cc <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
 80142cc:	defffe04 	addi	sp,sp,-8
 80142d0:	df000115 	stw	fp,4(sp)
 80142d4:	df000104 	addi	fp,sp,4
 80142d8:	e13fff15 	stw	r4,-4(fp)
}
 80142dc:	e037883a 	mov	sp,fp
 80142e0:	df000017 	ldw	fp,0(sp)
 80142e4:	dec00104 	addi	sp,sp,4
 80142e8:	f800283a 	ret

080142ec <alt_printf>:
/* 
 * ALT printf function 
 */
void 
alt_printf(const char* fmt, ... )
{
 80142ec:	defff204 	addi	sp,sp,-56
 80142f0:	dfc00a15 	stw	ra,40(sp)
 80142f4:	df000915 	stw	fp,36(sp)
 80142f8:	df000904 	addi	fp,sp,36
 80142fc:	e1400215 	stw	r5,8(fp)
 8014300:	e1800315 	stw	r6,12(fp)
 8014304:	e1c00415 	stw	r7,16(fp)
 8014308:	e13fff15 	stw	r4,-4(fp)
	va_list args;
	va_start(args, fmt);
 801430c:	e0800204 	addi	r2,fp,8
 8014310:	e0bffe15 	stw	r2,-8(fp)
    const char *w;
    char c;

    /* Process format string. */
    w = fmt;
 8014314:	e0bfff17 	ldw	r2,-4(fp)
 8014318:	e0bff715 	stw	r2,-36(fp)
    while ((c = *w++) != 0)
 801431c:	00007106 	br	80144e4 <alt_printf+0x1f8>
    {
        /* If not a format escape character, just print  */
        /* character.  Otherwise, process format string. */
        if (c != '%')
 8014320:	e0bff807 	ldb	r2,-32(fp)
 8014324:	10800960 	cmpeqi	r2,r2,37
 8014328:	1000041e 	bne	r2,zero,801433c <alt_printf+0x50>
        {
            alt_putchar(c);
 801432c:	e0bff807 	ldb	r2,-32(fp)
 8014330:	1009883a 	mov	r4,r2
 8014334:	80145140 	call	8014514 <alt_putchar>
 8014338:	00006a06 	br	80144e4 <alt_printf+0x1f8>
        }
        else
        {
            /* Get format character.  If none     */
            /* available, processing is complete. */
            if ((c = *w++) != 0)
 801433c:	e0bff717 	ldw	r2,-36(fp)
 8014340:	10c00044 	addi	r3,r2,1
 8014344:	e0fff715 	stw	r3,-36(fp)
 8014348:	10800003 	ldbu	r2,0(r2)
 801434c:	e0bff805 	stb	r2,-32(fp)
 8014350:	e0bff807 	ldb	r2,-32(fp)
 8014354:	10006226 	beq	r2,zero,80144e0 <alt_printf+0x1f4>
            {
                if (c == '%')
 8014358:	e0bff807 	ldb	r2,-32(fp)
 801435c:	10800958 	cmpnei	r2,r2,37
 8014360:	1000041e 	bne	r2,zero,8014374 <alt_printf+0x88>
                {
                    /* Process "%" escape sequence. */
                    alt_putchar(c);
 8014364:	e0bff807 	ldb	r2,-32(fp)
 8014368:	1009883a 	mov	r4,r2
 801436c:	80145140 	call	8014514 <alt_putchar>
 8014370:	00005c06 	br	80144e4 <alt_printf+0x1f8>
                } 
                else if (c == 'c')
 8014374:	e0bff807 	ldb	r2,-32(fp)
 8014378:	108018d8 	cmpnei	r2,r2,99
 801437c:	1000081e 	bne	r2,zero,80143a0 <alt_printf+0xb4>
                {
                    int v = va_arg(args, int);
 8014380:	e0bffe17 	ldw	r2,-8(fp)
 8014384:	10c00104 	addi	r3,r2,4
 8014388:	e0fffe15 	stw	r3,-8(fp)
 801438c:	10800017 	ldw	r2,0(r2)
 8014390:	e0bffd15 	stw	r2,-12(fp)
                    alt_putchar(v);
 8014394:	e13ffd17 	ldw	r4,-12(fp)
 8014398:	80145140 	call	8014514 <alt_putchar>
 801439c:	00005106 	br	80144e4 <alt_printf+0x1f8>
                }
                else if (c == 'x')
 80143a0:	e0bff807 	ldb	r2,-32(fp)
 80143a4:	10801e18 	cmpnei	r2,r2,120
 80143a8:	1000341e 	bne	r2,zero,801447c <alt_printf+0x190>
                {
                    /* Process hexadecimal number format. */
                    unsigned long v = va_arg(args, unsigned long);
 80143ac:	e0bffe17 	ldw	r2,-8(fp)
 80143b0:	10c00104 	addi	r3,r2,4
 80143b4:	e0fffe15 	stw	r3,-8(fp)
 80143b8:	10800017 	ldw	r2,0(r2)
 80143bc:	e0bffb15 	stw	r2,-20(fp)
                    unsigned long digit;
                    int digit_shift;

                    /* If the number value is zero, just print and continue. */
                    if (v == 0)
 80143c0:	e0bffb17 	ldw	r2,-20(fp)
 80143c4:	1000031e 	bne	r2,zero,80143d4 <alt_printf+0xe8>
                    {
                        alt_putchar('0');
 80143c8:	01000c04 	movi	r4,48
 80143cc:	80145140 	call	8014514 <alt_putchar>
                        continue;
 80143d0:	00004406 	br	80144e4 <alt_printf+0x1f8>
                    }

                    /* Find first non-zero digit. */
                    digit_shift = 28;
 80143d4:	00800704 	movi	r2,28
 80143d8:	e0bff915 	stw	r2,-28(fp)
                    while (!(v & (0xF << digit_shift)))
 80143dc:	00000306 	br	80143ec <alt_printf+0x100>
                        digit_shift -= 4;
 80143e0:	e0bff917 	ldw	r2,-28(fp)
 80143e4:	10bfff04 	addi	r2,r2,-4
 80143e8:	e0bff915 	stw	r2,-28(fp)
                        continue;
                    }

                    /* Find first non-zero digit. */
                    digit_shift = 28;
                    while (!(v & (0xF << digit_shift)))
 80143ec:	00c003c4 	movi	r3,15
 80143f0:	e0bff917 	ldw	r2,-28(fp)
 80143f4:	1884983a 	sll	r2,r3,r2
 80143f8:	1007883a 	mov	r3,r2
 80143fc:	e0bffb17 	ldw	r2,-20(fp)
 8014400:	1884703a 	and	r2,r3,r2
 8014404:	103ff626 	beq	r2,zero,80143e0 <__alt_data_end+0xfc0143e0>
                        digit_shift -= 4;

                    /* Print digits. */
                    for (; digit_shift >= 0; digit_shift -= 4)
 8014408:	00001906 	br	8014470 <alt_printf+0x184>
                    {
                        digit = (v & (0xF << digit_shift)) >> digit_shift;
 801440c:	00c003c4 	movi	r3,15
 8014410:	e0bff917 	ldw	r2,-28(fp)
 8014414:	1884983a 	sll	r2,r3,r2
 8014418:	1007883a 	mov	r3,r2
 801441c:	e0bffb17 	ldw	r2,-20(fp)
 8014420:	1886703a 	and	r3,r3,r2
 8014424:	e0bff917 	ldw	r2,-28(fp)
 8014428:	1884d83a 	srl	r2,r3,r2
 801442c:	e0bffc15 	stw	r2,-16(fp)
                        if (digit <= 9)
 8014430:	e0bffc17 	ldw	r2,-16(fp)
 8014434:	108002a8 	cmpgeui	r2,r2,10
 8014438:	1000041e 	bne	r2,zero,801444c <alt_printf+0x160>
                            c = '0' + digit;
 801443c:	e0bffc17 	ldw	r2,-16(fp)
 8014440:	10800c04 	addi	r2,r2,48
 8014444:	e0bff805 	stb	r2,-32(fp)
 8014448:	00000306 	br	8014458 <alt_printf+0x16c>
                        else
                            c = 'a' + digit - 10;
 801444c:	e0bffc17 	ldw	r2,-16(fp)
 8014450:	108015c4 	addi	r2,r2,87
 8014454:	e0bff805 	stb	r2,-32(fp)
                        alt_putchar(c);
 8014458:	e0bff807 	ldb	r2,-32(fp)
 801445c:	1009883a 	mov	r4,r2
 8014460:	80145140 	call	8014514 <alt_putchar>
                    digit_shift = 28;
                    while (!(v & (0xF << digit_shift)))
                        digit_shift -= 4;

                    /* Print digits. */
                    for (; digit_shift >= 0; digit_shift -= 4)
 8014464:	e0bff917 	ldw	r2,-28(fp)
 8014468:	10bfff04 	addi	r2,r2,-4
 801446c:	e0bff915 	stw	r2,-28(fp)
 8014470:	e0bff917 	ldw	r2,-28(fp)
 8014474:	103fe50e 	bge	r2,zero,801440c <__alt_data_end+0xfc01440c>
 8014478:	00001a06 	br	80144e4 <alt_printf+0x1f8>
                        else
                            c = 'a' + digit - 10;
                        alt_putchar(c);
                    }
                }
                else if (c == 's')
 801447c:	e0bff807 	ldb	r2,-32(fp)
 8014480:	10801cd8 	cmpnei	r2,r2,115
 8014484:	1000151e 	bne	r2,zero,80144dc <alt_printf+0x1f0>
                {
                    /* Process string format. */
                    char *s = va_arg(args, char *);
 8014488:	e0bffe17 	ldw	r2,-8(fp)
 801448c:	10c00104 	addi	r3,r2,4
 8014490:	e0fffe15 	stw	r3,-8(fp)
 8014494:	10800017 	ldw	r2,0(r2)
 8014498:	e0bffa15 	stw	r2,-24(fp)

                    while(*s)
 801449c:	00000906 	br	80144c4 <alt_printf+0x1d8>
                      alt_putchar(*s++);
 80144a0:	e0bffa17 	ldw	r2,-24(fp)
 80144a4:	10c00044 	addi	r3,r2,1
 80144a8:	e0fffa15 	stw	r3,-24(fp)
 80144ac:	10800003 	ldbu	r2,0(r2)
 80144b0:	10803fcc 	andi	r2,r2,255
 80144b4:	1080201c 	xori	r2,r2,128
 80144b8:	10bfe004 	addi	r2,r2,-128
 80144bc:	1009883a 	mov	r4,r2
 80144c0:	80145140 	call	8014514 <alt_putchar>
                else if (c == 's')
                {
                    /* Process string format. */
                    char *s = va_arg(args, char *);

                    while(*s)
 80144c4:	e0bffa17 	ldw	r2,-24(fp)
 80144c8:	10800003 	ldbu	r2,0(r2)
 80144cc:	10803fcc 	andi	r2,r2,255
 80144d0:	1080201c 	xori	r2,r2,128
 80144d4:	10bfe004 	addi	r2,r2,-128
 80144d8:	103ff11e 	bne	r2,zero,80144a0 <__alt_data_end+0xfc0144a0>
 80144dc:	00000106 	br	80144e4 <alt_printf+0x1f8>
                      alt_putchar(*s++);
                }
            }
            else
            {
                break;
 80144e0:	00000706 	br	8014500 <alt_printf+0x214>
    const char *w;
    char c;

    /* Process format string. */
    w = fmt;
    while ((c = *w++) != 0)
 80144e4:	e0bff717 	ldw	r2,-36(fp)
 80144e8:	10c00044 	addi	r3,r2,1
 80144ec:	e0fff715 	stw	r3,-36(fp)
 80144f0:	10800003 	ldbu	r2,0(r2)
 80144f4:	e0bff805 	stb	r2,-32(fp)
 80144f8:	e0bff807 	ldb	r2,-32(fp)
 80144fc:	103f881e 	bne	r2,zero,8014320 <__alt_data_end+0xfc014320>
            {
                break;
            }
        }
    }
}
 8014500:	e037883a 	mov	sp,fp
 8014504:	dfc00117 	ldw	ra,4(sp)
 8014508:	df000017 	ldw	fp,0(sp)
 801450c:	dec00504 	addi	sp,sp,20
 8014510:	f800283a 	ret

08014514 <alt_putchar>:
 * Uses the ALT_DRIVER_WRITE() macro to call directly to driver if available.
 * Otherwise, uses newlib provided putchar() routine.
 */
int 
alt_putchar(int c)
{
 8014514:	defffd04 	addi	sp,sp,-12
 8014518:	dfc00215 	stw	ra,8(sp)
 801451c:	df000115 	stw	fp,4(sp)
 8014520:	df000104 	addi	fp,sp,4
 8014524:	e13fff15 	stw	r4,-4(fp)
    if (ALT_DRIVER_WRITE(ALT_STDOUT_DEV, &c1, 1, 0) == -1) {
        return -1;
    }
    return c;
#else
    return putchar(c);
 8014528:	008200b4 	movhi	r2,2050
 801452c:	10a64804 	addi	r2,r2,-26336
 8014530:	10800017 	ldw	r2,0(r2)
 8014534:	10800217 	ldw	r2,8(r2)
 8014538:	e13fff17 	ldw	r4,-4(fp)
 801453c:	100b883a 	mov	r5,r2
 8014540:	80172840 	call	8017284 <putc>
#endif
}
 8014544:	e037883a 	mov	sp,fp
 8014548:	dfc00117 	ldw	ra,4(sp)
 801454c:	df000017 	ldw	fp,0(sp)
 8014550:	dec00204 	addi	sp,sp,8
 8014554:	f800283a 	ret

08014558 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 8014558:	defffe04 	addi	sp,sp,-8
 801455c:	dfc00115 	stw	ra,4(sp)
 8014560:	df000015 	stw	fp,0(sp)
 8014564:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 8014568:	008200b4 	movhi	r2,2050
 801456c:	10a65404 	addi	r2,r2,-26288
 8014570:	10800017 	ldw	r2,0(r2)
 8014574:	10000526 	beq	r2,zero,801458c <alt_get_errno+0x34>
 8014578:	008200b4 	movhi	r2,2050
 801457c:	10a65404 	addi	r2,r2,-26288
 8014580:	10800017 	ldw	r2,0(r2)
 8014584:	103ee83a 	callr	r2
 8014588:	00000206 	br	8014594 <alt_get_errno+0x3c>
 801458c:	008200b4 	movhi	r2,2050
 8014590:	10ad8804 	addi	r2,r2,-18912
}
 8014594:	e037883a 	mov	sp,fp
 8014598:	dfc00117 	ldw	ra,4(sp)
 801459c:	df000017 	ldw	fp,0(sp)
 80145a0:	dec00204 	addi	sp,sp,8
 80145a4:	f800283a 	ret

080145a8 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
 80145a8:	defff904 	addi	sp,sp,-28
 80145ac:	dfc00615 	stw	ra,24(sp)
 80145b0:	df000515 	stw	fp,20(sp)
 80145b4:	df000504 	addi	fp,sp,20
 80145b8:	e13ffd15 	stw	r4,-12(fp)
 80145bc:	e17ffe15 	stw	r5,-8(fp)
 80145c0:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 80145c4:	e0bffd17 	ldw	r2,-12(fp)
 80145c8:	10000816 	blt	r2,zero,80145ec <read+0x44>
 80145cc:	e13ffd17 	ldw	r4,-12(fp)
 80145d0:	01400304 	movi	r5,12
 80145d4:	8002f580 	call	8002f58 <__mulsi3>
 80145d8:	1007883a 	mov	r3,r2
 80145dc:	008200b4 	movhi	r2,2050
 80145e0:	10a16a04 	addi	r2,r2,-31320
 80145e4:	1885883a 	add	r2,r3,r2
 80145e8:	00000106 	br	80145f0 <read+0x48>
 80145ec:	0005883a 	mov	r2,zero
 80145f0:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 80145f4:	e0bffb17 	ldw	r2,-20(fp)
 80145f8:	10002226 	beq	r2,zero,8014684 <read+0xdc>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 80145fc:	e0bffb17 	ldw	r2,-20(fp)
 8014600:	10800217 	ldw	r2,8(r2)
 8014604:	108000cc 	andi	r2,r2,3
 8014608:	10800060 	cmpeqi	r2,r2,1
 801460c:	1000181e 	bne	r2,zero,8014670 <read+0xc8>
        (fd->dev->read))
 8014610:	e0bffb17 	ldw	r2,-20(fp)
 8014614:	10800017 	ldw	r2,0(r2)
 8014618:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 801461c:	10001426 	beq	r2,zero,8014670 <read+0xc8>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
 8014620:	e0bffb17 	ldw	r2,-20(fp)
 8014624:	10800017 	ldw	r2,0(r2)
 8014628:	10800517 	ldw	r2,20(r2)
 801462c:	e0ffff17 	ldw	r3,-4(fp)
 8014630:	e13ffb17 	ldw	r4,-20(fp)
 8014634:	e17ffe17 	ldw	r5,-8(fp)
 8014638:	180d883a 	mov	r6,r3
 801463c:	103ee83a 	callr	r2
 8014640:	e0bffc15 	stw	r2,-16(fp)
 8014644:	e0bffc17 	ldw	r2,-16(fp)
 8014648:	1000070e 	bge	r2,zero,8014668 <read+0xc0>
        {
          ALT_ERRNO = -rval;
 801464c:	80145580 	call	8014558 <alt_get_errno>
 8014650:	1007883a 	mov	r3,r2
 8014654:	e0bffc17 	ldw	r2,-16(fp)
 8014658:	0085c83a 	sub	r2,zero,r2
 801465c:	18800015 	stw	r2,0(r3)
          return -1;
 8014660:	00bfffc4 	movi	r2,-1
 8014664:	00000c06 	br	8014698 <read+0xf0>
        }
        return rval;
 8014668:	e0bffc17 	ldw	r2,-16(fp)
 801466c:	00000a06 	br	8014698 <read+0xf0>
      }
      else
      {
        ALT_ERRNO = EACCES;
 8014670:	80145580 	call	8014558 <alt_get_errno>
 8014674:	1007883a 	mov	r3,r2
 8014678:	00800344 	movi	r2,13
 801467c:	18800015 	stw	r2,0(r3)
 8014680:	00000406 	br	8014694 <read+0xec>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
 8014684:	80145580 	call	8014558 <alt_get_errno>
 8014688:	1007883a 	mov	r3,r2
 801468c:	00801444 	movi	r2,81
 8014690:	18800015 	stw	r2,0(r3)
  }
  return -1;
 8014694:	00bfffc4 	movi	r2,-1
}
 8014698:	e037883a 	mov	sp,fp
 801469c:	dfc00117 	ldw	ra,4(sp)
 80146a0:	df000017 	ldw	fp,0(sp)
 80146a4:	dec00204 	addi	sp,sp,8
 80146a8:	f800283a 	ret

080146ac <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
 80146ac:	defffc04 	addi	sp,sp,-16
 80146b0:	dfc00315 	stw	ra,12(sp)
 80146b4:	df000215 	stw	fp,8(sp)
 80146b8:	dc000115 	stw	r16,4(sp)
 80146bc:	df000204 	addi	fp,sp,8
 80146c0:	e13ffe15 	stw	r4,-8(fp)
  if (fd > 2)
 80146c4:	e0bffe17 	ldw	r2,-8(fp)
 80146c8:	108000d0 	cmplti	r2,r2,3
 80146cc:	1000111e 	bne	r2,zero,8014714 <alt_release_fd+0x68>
  {
    alt_fd_list[fd].fd_flags = 0;
 80146d0:	040200b4 	movhi	r16,2050
 80146d4:	84216a04 	addi	r16,r16,-31320
 80146d8:	e0bffe17 	ldw	r2,-8(fp)
 80146dc:	1009883a 	mov	r4,r2
 80146e0:	01400304 	movi	r5,12
 80146e4:	8002f580 	call	8002f58 <__mulsi3>
 80146e8:	8085883a 	add	r2,r16,r2
 80146ec:	10800204 	addi	r2,r2,8
 80146f0:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
 80146f4:	040200b4 	movhi	r16,2050
 80146f8:	84216a04 	addi	r16,r16,-31320
 80146fc:	e0bffe17 	ldw	r2,-8(fp)
 8014700:	1009883a 	mov	r4,r2
 8014704:	01400304 	movi	r5,12
 8014708:	8002f580 	call	8002f58 <__mulsi3>
 801470c:	8085883a 	add	r2,r16,r2
 8014710:	10000015 	stw	zero,0(r2)
  }
}
 8014714:	e6ffff04 	addi	sp,fp,-4
 8014718:	dfc00217 	ldw	ra,8(sp)
 801471c:	df000117 	ldw	fp,4(sp)
 8014720:	dc000017 	ldw	r16,0(sp)
 8014724:	dec00304 	addi	sp,sp,12
 8014728:	f800283a 	ret

0801472c <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
 801472c:	defff904 	addi	sp,sp,-28
 8014730:	df000615 	stw	fp,24(sp)
 8014734:	df000604 	addi	fp,sp,24
 8014738:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 801473c:	0005303a 	rdctl	r2,status
 8014740:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 8014744:	e0fffc17 	ldw	r3,-16(fp)
 8014748:	00bfff84 	movi	r2,-2
 801474c:	1884703a 	and	r2,r3,r2
 8014750:	1001703a 	wrctl	status,r2
  
  return context;
 8014754:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
 8014758:	e0bffa15 	stw	r2,-24(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
 801475c:	d0a02617 	ldw	r2,-32616(gp)
 8014760:	10c000c4 	addi	r3,r2,3
 8014764:	00bfff04 	movi	r2,-4
 8014768:	1884703a 	and	r2,r3,r2
 801476c:	d0a02615 	stw	r2,-32616(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
 8014770:	d0e02617 	ldw	r3,-32616(gp)
 8014774:	e0bfff17 	ldw	r2,-4(fp)
 8014778:	1887883a 	add	r3,r3,r2
 801477c:	00830034 	movhi	r2,3072
 8014780:	10800004 	addi	r2,r2,0
 8014784:	10c0062e 	bgeu	r2,r3,80147a0 <sbrk+0x74>
 8014788:	e0bffa17 	ldw	r2,-24(fp)
 801478c:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 8014790:	e0bffd17 	ldw	r2,-12(fp)
 8014794:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
 8014798:	00bfffc4 	movi	r2,-1
 801479c:	00000b06 	br	80147cc <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
 80147a0:	d0a02617 	ldw	r2,-32616(gp)
 80147a4:	e0bffb15 	stw	r2,-20(fp)
  heap_end += incr; 
 80147a8:	d0e02617 	ldw	r3,-32616(gp)
 80147ac:	e0bfff17 	ldw	r2,-4(fp)
 80147b0:	1885883a 	add	r2,r3,r2
 80147b4:	d0a02615 	stw	r2,-32616(gp)
 80147b8:	e0bffa17 	ldw	r2,-24(fp)
 80147bc:	e0bffe15 	stw	r2,-8(fp)
 80147c0:	e0bffe17 	ldw	r2,-8(fp)
 80147c4:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
 80147c8:	e0bffb17 	ldw	r2,-20(fp)
} 
 80147cc:	e037883a 	mov	sp,fp
 80147d0:	df000017 	ldw	fp,0(sp)
 80147d4:	dec00104 	addi	sp,sp,4
 80147d8:	f800283a 	ret

080147dc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 80147dc:	defffe04 	addi	sp,sp,-8
 80147e0:	dfc00115 	stw	ra,4(sp)
 80147e4:	df000015 	stw	fp,0(sp)
 80147e8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 80147ec:	008200b4 	movhi	r2,2050
 80147f0:	10a65404 	addi	r2,r2,-26288
 80147f4:	10800017 	ldw	r2,0(r2)
 80147f8:	10000526 	beq	r2,zero,8014810 <alt_get_errno+0x34>
 80147fc:	008200b4 	movhi	r2,2050
 8014800:	10a65404 	addi	r2,r2,-26288
 8014804:	10800017 	ldw	r2,0(r2)
 8014808:	103ee83a 	callr	r2
 801480c:	00000206 	br	8014818 <alt_get_errno+0x3c>
 8014810:	008200b4 	movhi	r2,2050
 8014814:	10ad8804 	addi	r2,r2,-18912
}
 8014818:	e037883a 	mov	sp,fp
 801481c:	dfc00117 	ldw	ra,4(sp)
 8014820:	df000017 	ldw	fp,0(sp)
 8014824:	dec00204 	addi	sp,sp,8
 8014828:	f800283a 	ret

0801482c <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
 801482c:	defff904 	addi	sp,sp,-28
 8014830:	dfc00615 	stw	ra,24(sp)
 8014834:	df000515 	stw	fp,20(sp)
 8014838:	df000504 	addi	fp,sp,20
 801483c:	e13ffd15 	stw	r4,-12(fp)
 8014840:	e17ffe15 	stw	r5,-8(fp)
 8014844:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 8014848:	e0bffd17 	ldw	r2,-12(fp)
 801484c:	10000816 	blt	r2,zero,8014870 <write+0x44>
 8014850:	e13ffd17 	ldw	r4,-12(fp)
 8014854:	01400304 	movi	r5,12
 8014858:	8002f580 	call	8002f58 <__mulsi3>
 801485c:	1007883a 	mov	r3,r2
 8014860:	008200b4 	movhi	r2,2050
 8014864:	10a16a04 	addi	r2,r2,-31320
 8014868:	1885883a 	add	r2,r3,r2
 801486c:	00000106 	br	8014874 <write+0x48>
 8014870:	0005883a 	mov	r2,zero
 8014874:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 8014878:	e0bffb17 	ldw	r2,-20(fp)
 801487c:	10002126 	beq	r2,zero,8014904 <write+0xd8>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
 8014880:	e0bffb17 	ldw	r2,-20(fp)
 8014884:	10800217 	ldw	r2,8(r2)
 8014888:	108000cc 	andi	r2,r2,3
 801488c:	10001826 	beq	r2,zero,80148f0 <write+0xc4>
 8014890:	e0bffb17 	ldw	r2,-20(fp)
 8014894:	10800017 	ldw	r2,0(r2)
 8014898:	10800617 	ldw	r2,24(r2)
 801489c:	10001426 	beq	r2,zero,80148f0 <write+0xc4>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
 80148a0:	e0bffb17 	ldw	r2,-20(fp)
 80148a4:	10800017 	ldw	r2,0(r2)
 80148a8:	10800617 	ldw	r2,24(r2)
 80148ac:	e0ffff17 	ldw	r3,-4(fp)
 80148b0:	e13ffb17 	ldw	r4,-20(fp)
 80148b4:	e17ffe17 	ldw	r5,-8(fp)
 80148b8:	180d883a 	mov	r6,r3
 80148bc:	103ee83a 	callr	r2
 80148c0:	e0bffc15 	stw	r2,-16(fp)
 80148c4:	e0bffc17 	ldw	r2,-16(fp)
 80148c8:	1000070e 	bge	r2,zero,80148e8 <write+0xbc>
      {
        ALT_ERRNO = -rval;
 80148cc:	80147dc0 	call	80147dc <alt_get_errno>
 80148d0:	1007883a 	mov	r3,r2
 80148d4:	e0bffc17 	ldw	r2,-16(fp)
 80148d8:	0085c83a 	sub	r2,zero,r2
 80148dc:	18800015 	stw	r2,0(r3)
        return -1;
 80148e0:	00bfffc4 	movi	r2,-1
 80148e4:	00000c06 	br	8014918 <write+0xec>
      }
      return rval;
 80148e8:	e0bffc17 	ldw	r2,-16(fp)
 80148ec:	00000a06 	br	8014918 <write+0xec>
    }
    else
    {
      ALT_ERRNO = EACCES;
 80148f0:	80147dc0 	call	80147dc <alt_get_errno>
 80148f4:	1007883a 	mov	r3,r2
 80148f8:	00800344 	movi	r2,13
 80148fc:	18800015 	stw	r2,0(r3)
 8014900:	00000406 	br	8014914 <write+0xe8>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
 8014904:	80147dc0 	call	80147dc <alt_get_errno>
 8014908:	1007883a 	mov	r3,r2
 801490c:	00801444 	movi	r2,81
 8014910:	18800015 	stw	r2,0(r3)
  }
  return -1;
 8014914:	00bfffc4 	movi	r2,-1
}
 8014918:	e037883a 	mov	sp,fp
 801491c:	dfc00117 	ldw	ra,4(sp)
 8014920:	df000017 	ldw	fp,0(sp)
 8014924:	dec00204 	addi	sp,sp,8
 8014928:	f800283a 	ret

0801492c <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
 801492c:	defffd04 	addi	sp,sp,-12
 8014930:	dfc00215 	stw	ra,8(sp)
 8014934:	df000115 	stw	fp,4(sp)
 8014938:	df000104 	addi	fp,sp,4
 801493c:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
 8014940:	e13fff17 	ldw	r4,-4(fp)
 8014944:	014200b4 	movhi	r5,2050
 8014948:	29664f04 	addi	r5,r5,-26308
 801494c:	801654c0 	call	801654c <alt_dev_llist_insert>
}
 8014950:	e037883a 	mov	sp,fp
 8014954:	dfc00117 	ldw	ra,4(sp)
 8014958:	df000017 	ldw	fp,0(sp)
 801495c:	dec00204 	addi	sp,sp,8
 8014960:	f800283a 	ret

08014964 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
 8014964:	defffd04 	addi	sp,sp,-12
 8014968:	dfc00215 	stw	ra,8(sp)
 801496c:	df000115 	stw	fp,4(sp)
 8014970:	df000104 	addi	fp,sp,4
 8014974:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
 8014978:	8016eb00 	call	8016eb0 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
 801497c:	00800044 	movi	r2,1
 8014980:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
 8014984:	e037883a 	mov	sp,fp
 8014988:	dfc00117 	ldw	ra,4(sp)
 801498c:	df000017 	ldw	fp,0(sp)
 8014990:	dec00204 	addi	sp,sp,8
 8014994:	f800283a 	ret

08014998 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
 8014998:	defffd04 	addi	sp,sp,-12
 801499c:	dfc00215 	stw	ra,8(sp)
 80149a0:	df000115 	stw	fp,4(sp)
 80149a4:	df000104 	addi	fp,sp,4
    ALTERA_AVALON_DMA_INIT ( DMA_FPGA_TO_HPS, dma_fpga_to_hps);
 80149a8:	008000c4 	movi	r2,3
 80149ac:	d8800015 	stw	r2,0(sp)
 80149b0:	010200b4 	movhi	r4,2050
 80149b4:	2121f304 	addi	r4,r4,-30772
 80149b8:	014200b4 	movhi	r5,2050
 80149bc:	2961fa04 	addi	r5,r5,-30744
 80149c0:	01801004 	movi	r6,64
 80149c4:	000f883a 	mov	r7,zero
 80149c8:	80155280 	call	8015528 <alt_avalon_dma_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
 80149cc:	010200b4 	movhi	r4,2050
 80149d0:	21220b04 	addi	r4,r4,-30676
 80149d4:	000b883a 	mov	r5,zero
 80149d8:	000d883a 	mov	r6,zero
 80149dc:	80157340 	call	8015734 <altera_avalon_jtag_uart_init>
 80149e0:	010200b4 	movhi	r4,2050
 80149e4:	21220104 	addi	r4,r4,-30716
 80149e8:	801492c0 	call	801492c <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID, sysid);
 80149ec:	0001883a 	nop
    ALTERA_UP_AVALON_RS232_INIT ( BT_RS232_UART, bt_rs232_uart);
 80149f0:	010200b4 	movhi	r4,2050
 80149f4:	21261904 	addi	r4,r4,-26524
 80149f8:	801492c0 	call	801492c <alt_dev_reg>
    ALTERA_UP_AVALON_RS232_INIT ( WIFI_RS232_UART, wifi_rs232_uart);
 80149fc:	010200b4 	movhi	r4,2050
 8014a00:	21262404 	addi	r4,r4,-26480
 8014a04:	801492c0 	call	801492c <alt_dev_reg>
}
 8014a08:	e037883a 	mov	sp,fp
 8014a0c:	dfc00117 	ldw	ra,4(sp)
 8014a10:	df000017 	ldw	fp,0(sp)
 8014a14:	dec00204 	addi	sp,sp,8
 8014a18:	f800283a 	ret

08014a1c <alt_dma_txchan_reg>:
/*
 * Register a DMA transmit channel with the system.
 */

static ALT_INLINE int alt_dma_txchan_reg (alt_dma_txchan_dev* dev)
{
 8014a1c:	defffd04 	addi	sp,sp,-12
 8014a20:	dfc00215 	stw	ra,8(sp)
 8014a24:	df000115 	stw	fp,4(sp)
 8014a28:	df000104 	addi	fp,sp,4
 8014a2c:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dma_txchan_list;

  return alt_dev_llist_insert((alt_dev_llist*) dev, &alt_dma_txchan_list);
 8014a30:	e13fff17 	ldw	r4,-4(fp)
 8014a34:	014200b4 	movhi	r5,2050
 8014a38:	29665204 	addi	r5,r5,-26296
 8014a3c:	801654c0 	call	801654c <alt_dev_llist_insert>
}
 8014a40:	e037883a 	mov	sp,fp
 8014a44:	dfc00117 	ldw	ra,4(sp)
 8014a48:	df000017 	ldw	fp,0(sp)
 8014a4c:	dec00204 	addi	sp,sp,8
 8014a50:	f800283a 	ret

08014a54 <alt_dma_rxchan_reg>:
/*
 * Register a DMA receive channel with the system.
 */

static ALT_INLINE int alt_dma_rxchan_reg (alt_dma_rxchan_dev* dev)
{
 8014a54:	defffd04 	addi	sp,sp,-12
 8014a58:	dfc00215 	stw	ra,8(sp)
 8014a5c:	df000115 	stw	fp,4(sp)
 8014a60:	df000104 	addi	fp,sp,4
 8014a64:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dma_rxchan_list;

  return alt_dev_llist_insert((alt_dev_llist*) dev, &alt_dma_rxchan_list);
 8014a68:	e13fff17 	ldw	r4,-4(fp)
 8014a6c:	014200b4 	movhi	r5,2050
 8014a70:	29665604 	addi	r5,r5,-26280
 8014a74:	801654c0 	call	801654c <alt_dev_llist_insert>
}
 8014a78:	e037883a 	mov	sp,fp
 8014a7c:	dfc00117 	ldw	ra,4(sp)
 8014a80:	df000017 	ldw	fp,0(sp)
 8014a84:	dec00204 	addi	sp,sp,8
 8014a88:	f800283a 	ret

08014a8c <alt_avalon_dma_launch_bidir>:
 * both the receive and transmit channels are using incrementing addresses,
 * i.e. both channels are accesing memory rather than devices.
 */

void alt_avalon_dma_launch_bidir (alt_avalon_dma_priv* priv)
{
 8014a8c:	defffc04 	addi	sp,sp,-16
 8014a90:	df000315 	stw	fp,12(sp)
 8014a94:	df000304 	addi	fp,sp,12
 8014a98:	e13fff15 	stw	r4,-4(fp)
  alt_avalon_dma_txslot* tx_slot;
  alt_avalon_dma_rxslot* rx_slot;

  if ((priv->tx_start != priv->tx_end) && (priv->rx_start != priv->rx_end))
 8014a9c:	e0bfff17 	ldw	r2,-4(fp)
 8014aa0:	10c00117 	ldw	r3,4(r2)
 8014aa4:	e0bfff17 	ldw	r2,-4(fp)
 8014aa8:	10800217 	ldw	r2,8(r2)
 8014aac:	18802e26 	beq	r3,r2,8014b68 <alt_avalon_dma_launch_bidir+0xdc>
 8014ab0:	e0bfff17 	ldw	r2,-4(fp)
 8014ab4:	10c00317 	ldw	r3,12(r2)
 8014ab8:	e0bfff17 	ldw	r2,-4(fp)
 8014abc:	10800417 	ldw	r2,16(r2)
 8014ac0:	18802926 	beq	r3,r2,8014b68 <alt_avalon_dma_launch_bidir+0xdc>
  {
    priv->active = 1;
 8014ac4:	e0bfff17 	ldw	r2,-4(fp)
 8014ac8:	00c00044 	movi	r3,1
 8014acc:	10c00815 	stw	r3,32(r2)

    tx_slot = &priv->tx_buf[priv->tx_start];
 8014ad0:	e0bfff17 	ldw	r2,-4(fp)
 8014ad4:	10800117 	ldw	r2,4(r2)
 8014ad8:	1004913a 	slli	r2,r2,4
 8014adc:	10800904 	addi	r2,r2,36
 8014ae0:	e0ffff17 	ldw	r3,-4(fp)
 8014ae4:	1885883a 	add	r2,r3,r2
 8014ae8:	e0bffd15 	stw	r2,-12(fp)
    rx_slot = &priv->rx_buf[priv->rx_start];
 8014aec:	e0bfff17 	ldw	r2,-4(fp)
 8014af0:	10800317 	ldw	r2,12(r2)
 8014af4:	1004913a 	slli	r2,r2,4
 8014af8:	10801904 	addi	r2,r2,100
 8014afc:	e0ffff17 	ldw	r3,-4(fp)
 8014b00:	1885883a 	add	r2,r3,r2
 8014b04:	e0bffe15 	stw	r2,-8(fp)

    IOWR_ALTERA_AVALON_DMA_RADDRESS (priv->base, (alt_u32) tx_slot->from);
 8014b08:	e0bfff17 	ldw	r2,-4(fp)
 8014b0c:	10800017 	ldw	r2,0(r2)
 8014b10:	10800104 	addi	r2,r2,4
 8014b14:	e0fffd17 	ldw	r3,-12(fp)
 8014b18:	18c00017 	ldw	r3,0(r3)
 8014b1c:	10c00035 	stwio	r3,0(r2)
    IOWR_ALTERA_AVALON_DMA_WADDRESS (priv->base, (alt_u32) rx_slot->data);
 8014b20:	e0bfff17 	ldw	r2,-4(fp)
 8014b24:	10800017 	ldw	r2,0(r2)
 8014b28:	10800204 	addi	r2,r2,8
 8014b2c:	e0fffe17 	ldw	r3,-8(fp)
 8014b30:	18c00017 	ldw	r3,0(r3)
 8014b34:	10c00035 	stwio	r3,0(r2)

    IOWR_ALTERA_AVALON_DMA_LENGTH (priv->base,
 8014b38:	e0bfff17 	ldw	r2,-4(fp)
 8014b3c:	10800017 	ldw	r2,0(r2)
 8014b40:	11000304 	addi	r4,r2,12
 8014b44:	e0bffd17 	ldw	r2,-12(fp)
 8014b48:	11400117 	ldw	r5,4(r2)
 8014b4c:	e0bffe17 	ldw	r2,-8(fp)
 8014b50:	10c00117 	ldw	r3,4(r2)
 8014b54:	2805883a 	mov	r2,r5
 8014b58:	1880012e 	bgeu	r3,r2,8014b60 <alt_avalon_dma_launch_bidir+0xd4>
 8014b5c:	1805883a 	mov	r2,r3
 8014b60:	20800035 	stwio	r2,0(r4)
 8014b64:	00000206 	br	8014b70 <alt_avalon_dma_launch_bidir+0xe4>
       (tx_slot->len > rx_slot->len) ? rx_slot->len : tx_slot->len);
  }
  else
  {
    priv->active = 0;
 8014b68:	e0bfff17 	ldw	r2,-4(fp)
 8014b6c:	10000815 	stw	zero,32(r2)
  }
}
 8014b70:	e037883a 	mov	sp,fp
 8014b74:	df000017 	ldw	fp,0(sp)
 8014b78:	dec00104 	addi	sp,sp,4
 8014b7c:	f800283a 	ret

08014b80 <alt_avalon_dma_launch_txonly>:
 * i.e. the receive channel is accessing a single memory location (which is
 * probably a device register).
 */

static void alt_avalon_dma_launch_txonly (alt_avalon_dma_priv* priv)
{
 8014b80:	defffd04 	addi	sp,sp,-12
 8014b84:	df000215 	stw	fp,8(sp)
 8014b88:	df000204 	addi	fp,sp,8
 8014b8c:	e13fff15 	stw	r4,-4(fp)
  alt_avalon_dma_txslot* tx_slot;

  if (priv->tx_start != priv->tx_end)
 8014b90:	e0bfff17 	ldw	r2,-4(fp)
 8014b94:	10c00117 	ldw	r3,4(r2)
 8014b98:	e0bfff17 	ldw	r2,-4(fp)
 8014b9c:	10800217 	ldw	r2,8(r2)
 8014ba0:	18801726 	beq	r3,r2,8014c00 <alt_avalon_dma_launch_txonly+0x80>
  {
    priv->active = 1;
 8014ba4:	e0bfff17 	ldw	r2,-4(fp)
 8014ba8:	00c00044 	movi	r3,1
 8014bac:	10c00815 	stw	r3,32(r2)
    tx_slot      = &priv->tx_buf[priv->tx_start];
 8014bb0:	e0bfff17 	ldw	r2,-4(fp)
 8014bb4:	10800117 	ldw	r2,4(r2)
 8014bb8:	1004913a 	slli	r2,r2,4
 8014bbc:	10800904 	addi	r2,r2,36
 8014bc0:	e0ffff17 	ldw	r3,-4(fp)
 8014bc4:	1885883a 	add	r2,r3,r2
 8014bc8:	e0bffe15 	stw	r2,-8(fp)

    IOWR_ALTERA_AVALON_DMA_RADDRESS (priv->base, (alt_u32) tx_slot->from);
 8014bcc:	e0bfff17 	ldw	r2,-4(fp)
 8014bd0:	10800017 	ldw	r2,0(r2)
 8014bd4:	10800104 	addi	r2,r2,4
 8014bd8:	e0fffe17 	ldw	r3,-8(fp)
 8014bdc:	18c00017 	ldw	r3,0(r3)
 8014be0:	10c00035 	stwio	r3,0(r2)
    IOWR_ALTERA_AVALON_DMA_LENGTH (priv->base, tx_slot->len);
 8014be4:	e0bfff17 	ldw	r2,-4(fp)
 8014be8:	10800017 	ldw	r2,0(r2)
 8014bec:	10800304 	addi	r2,r2,12
 8014bf0:	e0fffe17 	ldw	r3,-8(fp)
 8014bf4:	18c00117 	ldw	r3,4(r3)
 8014bf8:	10c00035 	stwio	r3,0(r2)
 8014bfc:	00000206 	br	8014c08 <alt_avalon_dma_launch_txonly+0x88>
  }
  else
  {
    priv->active = 0;
 8014c00:	e0bfff17 	ldw	r2,-4(fp)
 8014c04:	10000815 	stw	zero,32(r2)
  }
}
 8014c08:	e037883a 	mov	sp,fp
 8014c0c:	df000017 	ldw	fp,0(sp)
 8014c10:	dec00104 	addi	sp,sp,4
 8014c14:	f800283a 	ret

08014c18 <alt_avalon_dma_launch_rxonly>:
 * i.e. the transmit channel is accessing a single memory location (which is
 * probably a device register).
 */

static void alt_avalon_dma_launch_rxonly (alt_avalon_dma_priv* priv)
{
 8014c18:	defffd04 	addi	sp,sp,-12
 8014c1c:	df000215 	stw	fp,8(sp)
 8014c20:	df000204 	addi	fp,sp,8
 8014c24:	e13fff15 	stw	r4,-4(fp)
  alt_avalon_dma_rxslot* rx_slot;

  if (priv->rx_start != priv->rx_end)
 8014c28:	e0bfff17 	ldw	r2,-4(fp)
 8014c2c:	10c00317 	ldw	r3,12(r2)
 8014c30:	e0bfff17 	ldw	r2,-4(fp)
 8014c34:	10800417 	ldw	r2,16(r2)
 8014c38:	18801726 	beq	r3,r2,8014c98 <alt_avalon_dma_launch_rxonly+0x80>
  {
    priv->active = 1;
 8014c3c:	e0bfff17 	ldw	r2,-4(fp)
 8014c40:	00c00044 	movi	r3,1
 8014c44:	10c00815 	stw	r3,32(r2)
    rx_slot      = &priv->rx_buf[priv->rx_start];
 8014c48:	e0bfff17 	ldw	r2,-4(fp)
 8014c4c:	10800317 	ldw	r2,12(r2)
 8014c50:	1004913a 	slli	r2,r2,4
 8014c54:	10801904 	addi	r2,r2,100
 8014c58:	e0ffff17 	ldw	r3,-4(fp)
 8014c5c:	1885883a 	add	r2,r3,r2
 8014c60:	e0bffe15 	stw	r2,-8(fp)

    IOWR_ALTERA_AVALON_DMA_WADDRESS (priv->base, (alt_u32) rx_slot->data);
 8014c64:	e0bfff17 	ldw	r2,-4(fp)
 8014c68:	10800017 	ldw	r2,0(r2)
 8014c6c:	10800204 	addi	r2,r2,8
 8014c70:	e0fffe17 	ldw	r3,-8(fp)
 8014c74:	18c00017 	ldw	r3,0(r3)
 8014c78:	10c00035 	stwio	r3,0(r2)
    IOWR_ALTERA_AVALON_DMA_LENGTH (priv->base, rx_slot->len);
 8014c7c:	e0bfff17 	ldw	r2,-4(fp)
 8014c80:	10800017 	ldw	r2,0(r2)
 8014c84:	10800304 	addi	r2,r2,12
 8014c88:	e0fffe17 	ldw	r3,-8(fp)
 8014c8c:	18c00117 	ldw	r3,4(r3)
 8014c90:	10c00035 	stwio	r3,0(r2)
 8014c94:	00000206 	br	8014ca0 <alt_avalon_dma_launch_rxonly+0x88>
  }
  else
  {
    priv->active = 0;
 8014c98:	e0bfff17 	ldw	r2,-4(fp)
 8014c9c:	10000815 	stw	zero,32(r2)
  }
}
 8014ca0:	e037883a 	mov	sp,fp
 8014ca4:	df000017 	ldw	fp,0(sp)
 8014ca8:	dec00104 	addi	sp,sp,4
 8014cac:	f800283a 	ret

08014cb0 <alt_avalon_dma_ioctl>:
 * device instance. See alt_dma_dev.h for the meaning of the supported
 * ioctl requests.
 */

static int alt_avalon_dma_ioctl (alt_avalon_dma_priv* priv, int req, void* arg)
{
 8014cb0:	defffa04 	addi	sp,sp,-24
 8014cb4:	df000515 	stw	fp,20(sp)
 8014cb8:	df000504 	addi	fp,sp,20
 8014cbc:	e13ffd15 	stw	r4,-12(fp)
 8014cc0:	e17ffe15 	stw	r5,-8(fp)
 8014cc4:	e1bfff15 	stw	r6,-4(fp)
  int     status = 0;
 8014cc8:	e03ffb15 	stw	zero,-20(fp)
   * since it cannot catch concurrent calls to alt_alavalon_dma_prepare()
   * or alt_avalon_dma_send(), but it should at least catch the most
   * common class of problems.
   */

  if ((priv->tx_start != priv->tx_end) ||
 8014ccc:	e0bffd17 	ldw	r2,-12(fp)
 8014cd0:	10c00117 	ldw	r3,4(r2)
 8014cd4:	e0bffd17 	ldw	r2,-12(fp)
 8014cd8:	10800217 	ldw	r2,8(r2)
 8014cdc:	18800a1e 	bne	r3,r2,8014d08 <alt_avalon_dma_ioctl+0x58>
      (priv->rx_start != priv->rx_end) ||
 8014ce0:	e0bffd17 	ldw	r2,-12(fp)
 8014ce4:	10c00317 	ldw	r3,12(r2)
 8014ce8:	e0bffd17 	ldw	r2,-12(fp)
 8014cec:	10800417 	ldw	r2,16(r2)
   * since it cannot catch concurrent calls to alt_alavalon_dma_prepare()
   * or alt_avalon_dma_send(), but it should at least catch the most
   * common class of problems.
   */

  if ((priv->tx_start != priv->tx_end) ||
 8014cf0:	1880051e 	bne	r3,r2,8014d08 <alt_avalon_dma_ioctl+0x58>
      (priv->rx_start != priv->rx_end) ||
      IORD_ALTERA_AVALON_DMA_LENGTH (priv->base))
 8014cf4:	e0bffd17 	ldw	r2,-12(fp)
 8014cf8:	10800017 	ldw	r2,0(r2)
 8014cfc:	10800304 	addi	r2,r2,12
 8014d00:	10800037 	ldwio	r2,0(r2)
   * or alt_avalon_dma_send(), but it should at least catch the most
   * common class of problems.
   */

  if ((priv->tx_start != priv->tx_end) ||
      (priv->rx_start != priv->rx_end) ||
 8014d04:	10000226 	beq	r2,zero,8014d10 <alt_avalon_dma_ioctl+0x60>
      IORD_ALTERA_AVALON_DMA_LENGTH (priv->base))
  {
    return -EIO;
 8014d08:	00bffec4 	movi	r2,-5
 8014d0c:	0000b506 	br	8014fe4 <alt_avalon_dma_ioctl+0x334>
  }

  /* Now process the ioctl. */

  switch (req)
 8014d10:	e0bffe17 	ldw	r2,-8(fp)
 8014d14:	108002a8 	cmpgeui	r2,r2,10
 8014d18:	1000781e 	bne	r2,zero,8014efc <alt_avalon_dma_ioctl+0x24c>
 8014d1c:	e0bffe17 	ldw	r2,-8(fp)
 8014d20:	100690ba 	slli	r3,r2,2
 8014d24:	00820074 	movhi	r2,2049
 8014d28:	10934e04 	addi	r2,r2,19768
 8014d2c:	1885883a 	add	r2,r3,r2
 8014d30:	10800017 	ldw	r2,0(r2)
 8014d34:	1000683a 	jmp	r2
 8014d38:	08014efc 	xorhi	zero,at,1339
 8014d3c:	08014d60 	cmpeqi	zero,at,1333
 8014d40:	08014db8 	rdprs	zero,at,1334
 8014d44:	08014de4 	muli	zero,at,1335
 8014d48:	08014e3c 	xorhi	zero,at,1336
 8014d4c:	08014e68 	cmpgeui	zero,at,1337
 8014d50:	08014e84 	addi	zero,at,1338
 8014d54:	08014ea4 	muli	zero,at,1338
 8014d58:	08014ec4 	addi	zero,at,1339
 8014d5c:	08014ee4 	muli	zero,at,1339
  {
  case ALT_DMA_TX_STREAM_ON:
    if (!(priv->flags & ALT_AVALON_DMA_RX_STREAM))
 8014d60:	e0bffd17 	ldw	r2,-12(fp)
 8014d64:	10800517 	ldw	r2,20(r2)
 8014d68:	1080100c 	andi	r2,r2,64
 8014d6c:	10000f1e 	bne	r2,zero,8014dac <alt_avalon_dma_ioctl+0xfc>
    {
      IOWR_ALTERA_AVALON_DMA_RADDRESS (priv->base, (alt_u32) arg);
 8014d70:	e0bffd17 	ldw	r2,-12(fp)
 8014d74:	10800017 	ldw	r2,0(r2)
 8014d78:	10800104 	addi	r2,r2,4
 8014d7c:	e0ffff17 	ldw	r3,-4(fp)
 8014d80:	10c00035 	stwio	r3,0(r2)
      priv->flags |= ALT_AVALON_DMA_TX_STREAM;
 8014d84:	e0bffd17 	ldw	r2,-12(fp)
 8014d88:	10800517 	ldw	r2,20(r2)
 8014d8c:	10c00814 	ori	r3,r2,32
 8014d90:	e0bffd17 	ldw	r2,-12(fp)
 8014d94:	10c00515 	stw	r3,20(r2)
      priv->launch = alt_avalon_dma_launch_rxonly;
 8014d98:	e0fffd17 	ldw	r3,-12(fp)
 8014d9c:	00820074 	movhi	r2,2049
 8014da0:	10930604 	addi	r2,r2,19480
 8014da4:	18800715 	stw	r2,28(r3)
    }
    else
    {
      status = -EIO;
    }
    break;
 8014da8:	00005606 	br	8014f04 <alt_avalon_dma_ioctl+0x254>
      priv->flags |= ALT_AVALON_DMA_TX_STREAM;
      priv->launch = alt_avalon_dma_launch_rxonly;
    }
    else
    {
      status = -EIO;
 8014dac:	00bffec4 	movi	r2,-5
 8014db0:	e0bffb15 	stw	r2,-20(fp)
    }
    break;
 8014db4:	00005306 	br	8014f04 <alt_avalon_dma_ioctl+0x254>
  case ALT_DMA_TX_STREAM_OFF:
    priv->flags &= ~ALT_AVALON_DMA_TX_STREAM;
 8014db8:	e0bffd17 	ldw	r2,-12(fp)
 8014dbc:	10c00517 	ldw	r3,20(r2)
 8014dc0:	00bff7c4 	movi	r2,-33
 8014dc4:	1886703a 	and	r3,r3,r2
 8014dc8:	e0bffd17 	ldw	r2,-12(fp)
 8014dcc:	10c00515 	stw	r3,20(r2)
    priv->launch = alt_avalon_dma_launch_bidir;
 8014dd0:	e0fffd17 	ldw	r3,-12(fp)
 8014dd4:	00820074 	movhi	r2,2049
 8014dd8:	1092a304 	addi	r2,r2,19084
 8014ddc:	18800715 	stw	r2,28(r3)
    break;
 8014de0:	00004806 	br	8014f04 <alt_avalon_dma_ioctl+0x254>
  case ALT_DMA_RX_STREAM_ON:
    if (!(priv->flags & ALT_AVALON_DMA_TX_STREAM))
 8014de4:	e0bffd17 	ldw	r2,-12(fp)
 8014de8:	10800517 	ldw	r2,20(r2)
 8014dec:	1080080c 	andi	r2,r2,32
 8014df0:	10000f1e 	bne	r2,zero,8014e30 <alt_avalon_dma_ioctl+0x180>
    {
      IOWR_ALTERA_AVALON_DMA_WADDRESS (priv->base, (alt_u32) arg);
 8014df4:	e0bffd17 	ldw	r2,-12(fp)
 8014df8:	10800017 	ldw	r2,0(r2)
 8014dfc:	10800204 	addi	r2,r2,8
 8014e00:	e0ffff17 	ldw	r3,-4(fp)
 8014e04:	10c00035 	stwio	r3,0(r2)
      priv->flags |= ALT_AVALON_DMA_RX_STREAM;
 8014e08:	e0bffd17 	ldw	r2,-12(fp)
 8014e0c:	10800517 	ldw	r2,20(r2)
 8014e10:	10c01014 	ori	r3,r2,64
 8014e14:	e0bffd17 	ldw	r2,-12(fp)
 8014e18:	10c00515 	stw	r3,20(r2)
      priv->launch = alt_avalon_dma_launch_txonly;
 8014e1c:	e0fffd17 	ldw	r3,-12(fp)
 8014e20:	00820074 	movhi	r2,2049
 8014e24:	1092e004 	addi	r2,r2,19328
 8014e28:	18800715 	stw	r2,28(r3)
    }
    else
    {
      status = -EIO;
    }
    break;
 8014e2c:	00003506 	br	8014f04 <alt_avalon_dma_ioctl+0x254>
      priv->flags |= ALT_AVALON_DMA_RX_STREAM;
      priv->launch = alt_avalon_dma_launch_txonly;
    }
    else
    {
      status = -EIO;
 8014e30:	00bffec4 	movi	r2,-5
 8014e34:	e0bffb15 	stw	r2,-20(fp)
    }
    break;
 8014e38:	00003206 	br	8014f04 <alt_avalon_dma_ioctl+0x254>
  case ALT_DMA_RX_STREAM_OFF:
    priv->flags &= ~ALT_AVALON_DMA_RX_STREAM;
 8014e3c:	e0bffd17 	ldw	r2,-12(fp)
 8014e40:	10c00517 	ldw	r3,20(r2)
 8014e44:	00bfefc4 	movi	r2,-65
 8014e48:	1886703a 	and	r3,r3,r2
 8014e4c:	e0bffd17 	ldw	r2,-12(fp)
 8014e50:	10c00515 	stw	r3,20(r2)
    priv->launch = alt_avalon_dma_launch_bidir;
 8014e54:	e0fffd17 	ldw	r3,-12(fp)
 8014e58:	00820074 	movhi	r2,2049
 8014e5c:	1092a304 	addi	r2,r2,19084
 8014e60:	18800715 	stw	r2,28(r3)
    break;
 8014e64:	00002706 	br	8014f04 <alt_avalon_dma_ioctl+0x254>
  case ALT_DMA_SET_MODE_8:
    priv->flags = (priv->flags & ~ALT_AVALON_DMA_MODE_MSK) |
 8014e68:	e0bffd17 	ldw	r2,-12(fp)
 8014e6c:	10c00517 	ldw	r3,20(r2)
 8014e70:	00bffc04 	movi	r2,-16
 8014e74:	1886703a 	and	r3,r3,r2
 8014e78:	e0bffd17 	ldw	r2,-12(fp)
 8014e7c:	10c00515 	stw	r3,20(r2)
      ALT_AVALON_DMA_MODE_8;
    break;
 8014e80:	00002006 	br	8014f04 <alt_avalon_dma_ioctl+0x254>
  case ALT_DMA_SET_MODE_16:
    priv->flags = (priv->flags & ~ALT_AVALON_DMA_MODE_MSK) |
 8014e84:	e0bffd17 	ldw	r2,-12(fp)
 8014e88:	10c00517 	ldw	r3,20(r2)
 8014e8c:	00bffc04 	movi	r2,-16
 8014e90:	1884703a 	and	r2,r3,r2
 8014e94:	10c00054 	ori	r3,r2,1
 8014e98:	e0bffd17 	ldw	r2,-12(fp)
 8014e9c:	10c00515 	stw	r3,20(r2)
      ALT_AVALON_DMA_MODE_16;
    break;
 8014ea0:	00001806 	br	8014f04 <alt_avalon_dma_ioctl+0x254>
  case ALT_DMA_SET_MODE_32:
    priv->flags = (priv->flags & ~ALT_AVALON_DMA_MODE_MSK) |
 8014ea4:	e0bffd17 	ldw	r2,-12(fp)
 8014ea8:	10c00517 	ldw	r3,20(r2)
 8014eac:	00bffc04 	movi	r2,-16
 8014eb0:	1884703a 	and	r2,r3,r2
 8014eb4:	10c000d4 	ori	r3,r2,3
 8014eb8:	e0bffd17 	ldw	r2,-12(fp)
 8014ebc:	10c00515 	stw	r3,20(r2)
      ALT_AVALON_DMA_MODE_32;
    break;
 8014ec0:	00001006 	br	8014f04 <alt_avalon_dma_ioctl+0x254>
  case ALT_DMA_SET_MODE_64:
    priv->flags = (priv->flags & ~ALT_AVALON_DMA_MODE_MSK) |
 8014ec4:	e0bffd17 	ldw	r2,-12(fp)
 8014ec8:	10c00517 	ldw	r3,20(r2)
 8014ecc:	00bffc04 	movi	r2,-16
 8014ed0:	1884703a 	and	r2,r3,r2
 8014ed4:	10c001d4 	ori	r3,r2,7
 8014ed8:	e0bffd17 	ldw	r2,-12(fp)
 8014edc:	10c00515 	stw	r3,20(r2)
      ALT_AVALON_DMA_MODE_64;
    break;
 8014ee0:	00000806 	br	8014f04 <alt_avalon_dma_ioctl+0x254>
  case ALT_DMA_SET_MODE_128:
    priv->flags = (priv->flags & ~ALT_AVALON_DMA_MODE_MSK) |
 8014ee4:	e0bffd17 	ldw	r2,-12(fp)
 8014ee8:	10800517 	ldw	r2,20(r2)
 8014eec:	10c003d4 	ori	r3,r2,15
 8014ef0:	e0bffd17 	ldw	r2,-12(fp)
 8014ef4:	10c00515 	stw	r3,20(r2)
      ALT_AVALON_DMA_MODE_128;
    break;
 8014ef8:	00000206 	br	8014f04 <alt_avalon_dma_ioctl+0x254>
  default:
    status = -ENOTTY;
 8014efc:	00bff9c4 	movi	r2,-25
 8014f00:	e0bffb15 	stw	r2,-20(fp)
  }

  if (!status)
 8014f04:	e0bffb17 	ldw	r2,-20(fp)
 8014f08:	1000351e 	bne	r2,zero,8014fe0 <alt_avalon_dma_ioctl+0x330>
  {
     switch (priv->flags & ALT_AVALON_DMA_MODE_MSK)
 8014f0c:	e0bffd17 	ldw	r2,-12(fp)
 8014f10:	10800517 	ldw	r2,20(r2)
 8014f14:	108003cc 	andi	r2,r2,15
 8014f18:	10c00060 	cmpeqi	r3,r2,1
 8014f1c:	1800091e 	bne	r3,zero,8014f44 <alt_avalon_dma_ioctl+0x294>
 8014f20:	0080052e 	bgeu	zero,r2,8014f38 <alt_avalon_dma_ioctl+0x288>
 8014f24:	10c000e0 	cmpeqi	r3,r2,3
 8014f28:	1800091e 	bne	r3,zero,8014f50 <alt_avalon_dma_ioctl+0x2a0>
 8014f2c:	108001e0 	cmpeqi	r2,r2,7
 8014f30:	10000a1e 	bne	r2,zero,8014f5c <alt_avalon_dma_ioctl+0x2ac>
 8014f34:	00000c06 	br	8014f68 <alt_avalon_dma_ioctl+0x2b8>
     {
     case ALT_AVALON_DMA_MODE_8:
       mode = ALTERA_AVALON_DMA_CONTROL_BYTE_MSK;
 8014f38:	00800044 	movi	r2,1
 8014f3c:	e0bffc15 	stw	r2,-16(fp)
       break;
 8014f40:	00000b06 	br	8014f70 <alt_avalon_dma_ioctl+0x2c0>
     case ALT_AVALON_DMA_MODE_16:
       mode = ALTERA_AVALON_DMA_CONTROL_HW_MSK;
 8014f44:	00800084 	movi	r2,2
 8014f48:	e0bffc15 	stw	r2,-16(fp)
       break;
 8014f4c:	00000806 	br	8014f70 <alt_avalon_dma_ioctl+0x2c0>
     case ALT_AVALON_DMA_MODE_32:
       mode = ALTERA_AVALON_DMA_CONTROL_WORD_MSK;
 8014f50:	00800104 	movi	r2,4
 8014f54:	e0bffc15 	stw	r2,-16(fp)
       break;
 8014f58:	00000506 	br	8014f70 <alt_avalon_dma_ioctl+0x2c0>
     case ALT_AVALON_DMA_MODE_64:
       mode = ALTERA_AVALON_DMA_CONTROL_DWORD_MSK;
 8014f5c:	00810004 	movi	r2,1024
 8014f60:	e0bffc15 	stw	r2,-16(fp)
       break;
 8014f64:	00000206 	br	8014f70 <alt_avalon_dma_ioctl+0x2c0>
     default:
       mode = ALTERA_AVALON_DMA_CONTROL_QWORD_MSK;
 8014f68:	00820004 	movi	r2,2048
 8014f6c:	e0bffc15 	stw	r2,-16(fp)
     }

    if (priv->flags & ALT_AVALON_DMA_TX_STREAM)
 8014f70:	e0bffd17 	ldw	r2,-12(fp)
 8014f74:	10800517 	ldw	r2,20(r2)
 8014f78:	1080080c 	andi	r2,r2,32
 8014f7c:	10000726 	beq	r2,zero,8014f9c <alt_avalon_dma_ioctl+0x2ec>
    {
      IOWR_ALTERA_AVALON_DMA_CONTROL (priv->base,
 8014f80:	e0bffd17 	ldw	r2,-12(fp)
 8014f84:	10800017 	ldw	r2,0(r2)
 8014f88:	10800604 	addi	r2,r2,24
 8014f8c:	e0fffc17 	ldw	r3,-16(fp)
 8014f90:	18c07e14 	ori	r3,r3,504
 8014f94:	10c00035 	stwio	r3,0(r2)
 8014f98:	00001106 	br	8014fe0 <alt_avalon_dma_ioctl+0x330>
        ALTERA_AVALON_DMA_CONTROL_REEN_MSK |
        ALTERA_AVALON_DMA_CONTROL_WEEN_MSK |
        ALTERA_AVALON_DMA_CONTROL_LEEN_MSK |
        ALTERA_AVALON_DMA_CONTROL_RCON_MSK);
    }
    else if (priv->flags & ALT_AVALON_DMA_RX_STREAM)
 8014f9c:	e0bffd17 	ldw	r2,-12(fp)
 8014fa0:	10800517 	ldw	r2,20(r2)
 8014fa4:	1080100c 	andi	r2,r2,64
 8014fa8:	10000726 	beq	r2,zero,8014fc8 <alt_avalon_dma_ioctl+0x318>
    {
      IOWR_ALTERA_AVALON_DMA_CONTROL (priv->base,
 8014fac:	e0bffd17 	ldw	r2,-12(fp)
 8014fb0:	10800017 	ldw	r2,0(r2)
 8014fb4:	10800604 	addi	r2,r2,24
 8014fb8:	e0fffc17 	ldw	r3,-16(fp)
 8014fbc:	18c0be14 	ori	r3,r3,760
 8014fc0:	10c00035 	stwio	r3,0(r2)
 8014fc4:	00000606 	br	8014fe0 <alt_avalon_dma_ioctl+0x330>
        ALTERA_AVALON_DMA_CONTROL_LEEN_MSK |
        ALTERA_AVALON_DMA_CONTROL_WCON_MSK);
    }
    else
    {
      IOWR_ALTERA_AVALON_DMA_CONTROL (priv->base,
 8014fc8:	e0bffd17 	ldw	r2,-12(fp)
 8014fcc:	10800017 	ldw	r2,0(r2)
 8014fd0:	10800604 	addi	r2,r2,24
 8014fd4:	e0fffc17 	ldw	r3,-16(fp)
 8014fd8:	18c03e14 	ori	r3,r3,248
 8014fdc:	10c00035 	stwio	r3,0(r2)
        ALTERA_AVALON_DMA_CONTROL_WEEN_MSK      |
        ALTERA_AVALON_DMA_CONTROL_LEEN_MSK);
    }
  }

  return status;
 8014fe0:	e0bffb17 	ldw	r2,-20(fp)
}
 8014fe4:	e037883a 	mov	sp,fp
 8014fe8:	df000017 	ldw	fp,0(sp)
 8014fec:	dec00104 	addi	sp,sp,4
 8014ff0:	f800283a 	ret

08014ff4 <alt_avalon_dma_tx_ioctl>:
 */

int alt_avalon_dma_tx_ioctl (alt_dma_txchan dma,
           int req,
           void* arg)
{
 8014ff4:	defffb04 	addi	sp,sp,-20
 8014ff8:	dfc00415 	stw	ra,16(sp)
 8014ffc:	df000315 	stw	fp,12(sp)
 8015000:	df000304 	addi	fp,sp,12
 8015004:	e13ffd15 	stw	r4,-12(fp)
 8015008:	e17ffe15 	stw	r5,-8(fp)
 801500c:	e1bfff15 	stw	r6,-4(fp)
  return alt_avalon_dma_ioctl (((alt_avalon_dma_txchan*) dma)->priv,
 8015010:	e0bffd17 	ldw	r2,-12(fp)
 8015014:	10800617 	ldw	r2,24(r2)
 8015018:	1009883a 	mov	r4,r2
 801501c:	e17ffe17 	ldw	r5,-8(fp)
 8015020:	e1bfff17 	ldw	r6,-4(fp)
 8015024:	8014cb00 	call	8014cb0 <alt_avalon_dma_ioctl>
             req,
             arg);
}
 8015028:	e037883a 	mov	sp,fp
 801502c:	dfc00117 	ldw	ra,4(sp)
 8015030:	df000017 	ldw	fp,0(sp)
 8015034:	dec00204 	addi	sp,sp,8
 8015038:	f800283a 	ret

0801503c <alt_avalon_dma_rx_ioctl>:
 */

int alt_avalon_dma_rx_ioctl (alt_dma_rxchan dma,
           int req,
           void* arg)
{
 801503c:	defffb04 	addi	sp,sp,-20
 8015040:	dfc00415 	stw	ra,16(sp)
 8015044:	df000315 	stw	fp,12(sp)
 8015048:	df000304 	addi	fp,sp,12
 801504c:	e13ffd15 	stw	r4,-12(fp)
 8015050:	e17ffe15 	stw	r5,-8(fp)
 8015054:	e1bfff15 	stw	r6,-4(fp)
  return alt_avalon_dma_ioctl (((alt_avalon_dma_rxchan*) dma)->priv,
 8015058:	e0bffd17 	ldw	r2,-12(fp)
 801505c:	10800617 	ldw	r2,24(r2)
 8015060:	1009883a 	mov	r4,r2
 8015064:	e17ffe17 	ldw	r5,-8(fp)
 8015068:	e1bfff17 	ldw	r6,-4(fp)
 801506c:	8014cb00 	call	8014cb0 <alt_avalon_dma_ioctl>
             req,
             arg);
}
 8015070:	e037883a 	mov	sp,fp
 8015074:	dfc00117 	ldw	ra,4(sp)
 8015078:	df000017 	ldw	fp,0(sp)
 801507c:	dec00204 	addi	sp,sp,8
 8015080:	f800283a 	ret

08015084 <alt_avalon_dma_prepare>:
int alt_avalon_dma_prepare (alt_dma_rxchan   dma,
                            void*            data,
                            alt_u32          len,
                            alt_rxchan_done* done,
                            void*            handle)
{
 8015084:	defff404 	addi	sp,sp,-48
 8015088:	dfc00b15 	stw	ra,44(sp)
 801508c:	df000a15 	stw	fp,40(sp)
 8015090:	df000a04 	addi	fp,sp,40
 8015094:	e13ffc15 	stw	r4,-16(fp)
 8015098:	e17ffd15 	stw	r5,-12(fp)
 801509c:	e1bffe15 	stw	r6,-8(fp)
 80150a0:	e1ffff15 	stw	r7,-4(fp)
  alt_u32                end;
  alt_u32                next;
  alt_u32                align_mask;
  alt_avalon_dma_priv*   priv;

  priv = ((alt_avalon_dma_rxchan*) dma)->priv;
 80150a4:	e0bffc17 	ldw	r2,-16(fp)
 80150a8:	10800617 	ldw	r2,24(r2)
 80150ac:	e0bff615 	stw	r2,-40(fp)
  /*
   * Ensure that the data is correctly aligned, and that it's not too
   * big for the device.
   */

  align_mask = priv->flags & ALT_AVALON_DMA_MODE_MSK;
 80150b0:	e0bff617 	ldw	r2,-40(fp)
 80150b4:	10800517 	ldw	r2,20(r2)
 80150b8:	108003cc 	andi	r2,r2,15
 80150bc:	e0bff715 	stw	r2,-36(fp)

  if ((((alt_u32) data) & align_mask) || (len & align_mask) ||
 80150c0:	e0fffd17 	ldw	r3,-12(fp)
 80150c4:	e0bff717 	ldw	r2,-36(fp)
 80150c8:	1884703a 	and	r2,r3,r2
 80150cc:	1000081e 	bne	r2,zero,80150f0 <alt_avalon_dma_prepare+0x6c>
 80150d0:	e0fffe17 	ldw	r3,-8(fp)
 80150d4:	e0bff717 	ldw	r2,-36(fp)
 80150d8:	1884703a 	and	r2,r3,r2
 80150dc:	1000041e 	bne	r2,zero,80150f0 <alt_avalon_dma_prepare+0x6c>
     (len > priv->max_length))
 80150e0:	e0bff617 	ldw	r2,-40(fp)
 80150e4:	10c00617 	ldw	r3,24(r2)
   * big for the device.
   */

  align_mask = priv->flags & ALT_AVALON_DMA_MODE_MSK;

  if ((((alt_u32) data) & align_mask) || (len & align_mask) ||
 80150e8:	e0bffe17 	ldw	r2,-8(fp)
 80150ec:	1880022e 	bgeu	r3,r2,80150f8 <alt_avalon_dma_prepare+0x74>
     (len > priv->max_length))
  {
    return -EINVAL;
 80150f0:	00bffa84 	movi	r2,-22
 80150f4:	00002c06 	br	80151a8 <alt_avalon_dma_prepare+0x124>
  }

  start = priv->rx_start;
 80150f8:	e0bff617 	ldw	r2,-40(fp)
 80150fc:	10800317 	ldw	r2,12(r2)
 8015100:	e0bff815 	stw	r2,-32(fp)
  end   = priv->rx_end;
 8015104:	e0bff617 	ldw	r2,-40(fp)
 8015108:	10800417 	ldw	r2,16(r2)
 801510c:	e0bff915 	stw	r2,-28(fp)
  slot  = &priv->rx_buf[end];
 8015110:	e0bff917 	ldw	r2,-28(fp)
 8015114:	1004913a 	slli	r2,r2,4
 8015118:	10801904 	addi	r2,r2,100
 801511c:	e0fff617 	ldw	r3,-40(fp)
 8015120:	1885883a 	add	r2,r3,r2
 8015124:	e0bffa15 	stw	r2,-24(fp)

  next  = (end + 1) & ALT_AVALON_DMA_NSLOTS_MSK;
 8015128:	e0bff917 	ldw	r2,-28(fp)
 801512c:	10800044 	addi	r2,r2,1
 8015130:	108000cc 	andi	r2,r2,3
 8015134:	e0bffb15 	stw	r2,-20(fp)

  if (next == start)
 8015138:	e0fffb17 	ldw	r3,-20(fp)
 801513c:	e0bff817 	ldw	r2,-32(fp)
 8015140:	1880021e 	bne	r3,r2,801514c <alt_avalon_dma_prepare+0xc8>
  {
    return -ENOSPC;
 8015144:	00bff904 	movi	r2,-28
 8015148:	00001706 	br	80151a8 <alt_avalon_dma_prepare+0x124>
  }

  slot->data   = data;
 801514c:	e0bffa17 	ldw	r2,-24(fp)
 8015150:	e0fffd17 	ldw	r3,-12(fp)
 8015154:	10c00015 	stw	r3,0(r2)
  slot->len    = len;
 8015158:	e0bffa17 	ldw	r2,-24(fp)
 801515c:	e0fffe17 	ldw	r3,-8(fp)
 8015160:	10c00115 	stw	r3,4(r2)
  slot->done   = done;
 8015164:	e0bffa17 	ldw	r2,-24(fp)
 8015168:	e0ffff17 	ldw	r3,-4(fp)
 801516c:	10c00215 	stw	r3,8(r2)
  slot->handle = handle;
 8015170:	e0bffa17 	ldw	r2,-24(fp)
 8015174:	e0c00217 	ldw	r3,8(fp)
 8015178:	10c00315 	stw	r3,12(r2)

  priv->rx_end = next;
 801517c:	e0bff617 	ldw	r2,-40(fp)
 8015180:	e0fffb17 	ldw	r3,-20(fp)
 8015184:	10c00415 	stw	r3,16(r2)

  if (!priv->active)
 8015188:	e0bff617 	ldw	r2,-40(fp)
 801518c:	10800817 	ldw	r2,32(r2)
 8015190:	1000041e 	bne	r2,zero,80151a4 <alt_avalon_dma_prepare+0x120>
  {
    priv->launch (priv);
 8015194:	e0bff617 	ldw	r2,-40(fp)
 8015198:	10800717 	ldw	r2,28(r2)
 801519c:	e13ff617 	ldw	r4,-40(fp)
 80151a0:	103ee83a 	callr	r2
  }

  return 0;
 80151a4:	0005883a 	mov	r2,zero
}
 80151a8:	e037883a 	mov	sp,fp
 80151ac:	dfc00117 	ldw	ra,4(sp)
 80151b0:	df000017 	ldw	fp,0(sp)
 80151b4:	dec00204 	addi	sp,sp,8
 80151b8:	f800283a 	ret

080151bc <alt_avalon_dma_space>:
 *
 * A negative value indicates that the value could not be determined.
 */

int alt_avalon_dma_space (alt_dma_txchan dma)
{
 80151bc:	defffb04 	addi	sp,sp,-20
 80151c0:	df000415 	stw	fp,16(sp)
 80151c4:	df000404 	addi	fp,sp,16
 80151c8:	e13fff15 	stw	r4,-4(fp)
  alt_avalon_dma_priv* priv;

  alt_u32 start;
  alt_u32 end;

  priv = ((alt_avalon_dma_txchan*) dma)->priv;
 80151cc:	e0bfff17 	ldw	r2,-4(fp)
 80151d0:	10800617 	ldw	r2,24(r2)
 80151d4:	e0bffc15 	stw	r2,-16(fp)

  start = priv->tx_start;
 80151d8:	e0bffc17 	ldw	r2,-16(fp)
 80151dc:	10800117 	ldw	r2,4(r2)
 80151e0:	e0bffd15 	stw	r2,-12(fp)
  end   = priv->tx_end;
 80151e4:	e0bffc17 	ldw	r2,-16(fp)
 80151e8:	10800217 	ldw	r2,8(r2)
 80151ec:	e0bffe15 	stw	r2,-8(fp)

  return (start > end) ? start - end - 1 :
 80151f0:	e0bffd17 	ldw	r2,-12(fp)
 80151f4:	e0fffe17 	ldw	r3,-8(fp)
 80151f8:	1880052e 	bgeu	r3,r2,8015210 <alt_avalon_dma_space+0x54>
 80151fc:	e0fffd17 	ldw	r3,-12(fp)
 8015200:	e0bffe17 	ldw	r2,-8(fp)
 8015204:	1885c83a 	sub	r2,r3,r2
 8015208:	10bfffc4 	addi	r2,r2,-1
 801520c:	00000406 	br	8015220 <alt_avalon_dma_space+0x64>
    ALT_AVALON_DMA_NSLOTS + start - end - 1;
 8015210:	e0fffd17 	ldw	r3,-12(fp)
 8015214:	e0bffe17 	ldw	r2,-8(fp)
 8015218:	1885c83a 	sub	r2,r3,r2
 801521c:	108000c4 	addi	r2,r2,3
}
 8015220:	e037883a 	mov	sp,fp
 8015224:	df000017 	ldw	fp,0(sp)
 8015228:	dec00104 	addi	sp,sp,4
 801522c:	f800283a 	ret

08015230 <alt_avalon_dma_send>:
int alt_avalon_dma_send (alt_dma_txchan   dma,
                         const void*      from,
                         alt_u32          len,
                         alt_txchan_done* done,
                         void*            handle)
{
 8015230:	defff404 	addi	sp,sp,-48
 8015234:	dfc00b15 	stw	ra,44(sp)
 8015238:	df000a15 	stw	fp,40(sp)
 801523c:	df000a04 	addi	fp,sp,40
 8015240:	e13ffc15 	stw	r4,-16(fp)
 8015244:	e17ffd15 	stw	r5,-12(fp)
 8015248:	e1bffe15 	stw	r6,-8(fp)
 801524c:	e1ffff15 	stw	r7,-4(fp)
  alt_u32                end;
  alt_u32                align_mask;
  alt_u32                next;
  alt_avalon_dma_priv*   priv;

  priv = ((alt_avalon_dma_txchan*) dma)->priv;
 8015250:	e0bffc17 	ldw	r2,-16(fp)
 8015254:	10800617 	ldw	r2,24(r2)
 8015258:	e0bff615 	stw	r2,-40(fp)
  /*
   * Ensure that the data is correctly aligned, and not too large
   * for the device
   */

  align_mask = priv->flags & ALT_AVALON_DMA_MODE_MSK;
 801525c:	e0bff617 	ldw	r2,-40(fp)
 8015260:	10800517 	ldw	r2,20(r2)
 8015264:	108003cc 	andi	r2,r2,15
 8015268:	e0bff715 	stw	r2,-36(fp)

  if ((((alt_u32) from) & align_mask) ||
 801526c:	e0fffd17 	ldw	r3,-12(fp)
 8015270:	e0bff717 	ldw	r2,-36(fp)
 8015274:	1884703a 	and	r2,r3,r2
 8015278:	1000081e 	bne	r2,zero,801529c <alt_avalon_dma_send+0x6c>
        (len & align_mask)            ||
 801527c:	e0fffe17 	ldw	r3,-8(fp)
 8015280:	e0bff717 	ldw	r2,-36(fp)
 8015284:	1884703a 	and	r2,r3,r2
   * for the device
   */

  align_mask = priv->flags & ALT_AVALON_DMA_MODE_MSK;

  if ((((alt_u32) from) & align_mask) ||
 8015288:	1000041e 	bne	r2,zero,801529c <alt_avalon_dma_send+0x6c>
        (len & align_mask)            ||
        (len > priv->max_length))
 801528c:	e0bff617 	ldw	r2,-40(fp)
 8015290:	10c00617 	ldw	r3,24(r2)
   */

  align_mask = priv->flags & ALT_AVALON_DMA_MODE_MSK;

  if ((((alt_u32) from) & align_mask) ||
        (len & align_mask)            ||
 8015294:	e0bffe17 	ldw	r2,-8(fp)
 8015298:	1880022e 	bgeu	r3,r2,80152a4 <alt_avalon_dma_send+0x74>
        (len > priv->max_length))
  {
    return -EINVAL;
 801529c:	00bffa84 	movi	r2,-22
 80152a0:	00002c06 	br	8015354 <alt_avalon_dma_send+0x124>
  }

  start = priv->tx_start;
 80152a4:	e0bff617 	ldw	r2,-40(fp)
 80152a8:	10800117 	ldw	r2,4(r2)
 80152ac:	e0bff815 	stw	r2,-32(fp)
  end   = priv->tx_end;
 80152b0:	e0bff617 	ldw	r2,-40(fp)
 80152b4:	10800217 	ldw	r2,8(r2)
 80152b8:	e0bff915 	stw	r2,-28(fp)
  slot  = &priv->tx_buf[end];
 80152bc:	e0bff917 	ldw	r2,-28(fp)
 80152c0:	1004913a 	slli	r2,r2,4
 80152c4:	10800904 	addi	r2,r2,36
 80152c8:	e0fff617 	ldw	r3,-40(fp)
 80152cc:	1885883a 	add	r2,r3,r2
 80152d0:	e0bffa15 	stw	r2,-24(fp)
  next  = (end + 1) & ALT_AVALON_DMA_NSLOTS_MSK;
 80152d4:	e0bff917 	ldw	r2,-28(fp)
 80152d8:	10800044 	addi	r2,r2,1
 80152dc:	108000cc 	andi	r2,r2,3
 80152e0:	e0bffb15 	stw	r2,-20(fp)

  if (next == start)
 80152e4:	e0fffb17 	ldw	r3,-20(fp)
 80152e8:	e0bff817 	ldw	r2,-32(fp)
 80152ec:	1880021e 	bne	r3,r2,80152f8 <alt_avalon_dma_send+0xc8>
  {
    return -ENOSPC;
 80152f0:	00bff904 	movi	r2,-28
 80152f4:	00001706 	br	8015354 <alt_avalon_dma_send+0x124>
  }

  /* Fill in the descriptor */

  slot->from   = from;
 80152f8:	e0bffa17 	ldw	r2,-24(fp)
 80152fc:	e0fffd17 	ldw	r3,-12(fp)
 8015300:	10c00015 	stw	r3,0(r2)
  slot->len    = len;
 8015304:	e0bffa17 	ldw	r2,-24(fp)
 8015308:	e0fffe17 	ldw	r3,-8(fp)
 801530c:	10c00115 	stw	r3,4(r2)
  slot->done   = done;
 8015310:	e0bffa17 	ldw	r2,-24(fp)
 8015314:	e0ffff17 	ldw	r3,-4(fp)
 8015318:	10c00215 	stw	r3,8(r2)
  slot->handle = handle;
 801531c:	e0bffa17 	ldw	r2,-24(fp)
 8015320:	e0c00217 	ldw	r3,8(fp)
 8015324:	10c00315 	stw	r3,12(r2)

  priv->tx_end = next;
 8015328:	e0bff617 	ldw	r2,-40(fp)
 801532c:	e0fffb17 	ldw	r3,-20(fp)
 8015330:	10c00215 	stw	r3,8(r2)

  if (!priv->active)
 8015334:	e0bff617 	ldw	r2,-40(fp)
 8015338:	10800817 	ldw	r2,32(r2)
 801533c:	1000041e 	bne	r2,zero,8015350 <alt_avalon_dma_send+0x120>
  {
    priv->launch (priv);
 8015340:	e0bff617 	ldw	r2,-40(fp)
 8015344:	10800717 	ldw	r2,28(r2)
 8015348:	e13ff617 	ldw	r4,-40(fp)
 801534c:	103ee83a 	callr	r2
  }

  return 0;
 8015350:	0005883a 	mov	r2,zero
}
 8015354:	e037883a 	mov	sp,fp
 8015358:	dfc00117 	ldw	ra,4(sp)
 801535c:	df000017 	ldw	fp,0(sp)
 8015360:	dec00204 	addi	sp,sp,8
 8015364:	f800283a 	ret

08015368 <alt_avalon_dma_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_dma_irq (void* context)
#else
static void alt_avalon_dma_irq (void* context, alt_u32 id)
#endif
{
 8015368:	defff004 	addi	sp,sp,-64
 801536c:	dfc00f15 	stw	ra,60(sp)
 8015370:	df000e15 	stw	fp,56(sp)
 8015374:	df000e04 	addi	fp,sp,56
 8015378:	e13ffe15 	stw	r4,-8(fp)
 801537c:	e17fff15 	stw	r5,-4(fp)
  alt_avalon_dma_priv* priv = (alt_avalon_dma_priv*) context;
 8015380:	e0bffe17 	ldw	r2,-8(fp)
 8015384:	e0bff215 	stw	r2,-56(fp)
  alt_u32                rx_start;
  int                    stream_tx;
  int                    stream_rx;
  alt_irq_context        cpu_sr;

  stream_tx = priv->flags & ALT_AVALON_DMA_TX_STREAM;
 8015388:	e0bff217 	ldw	r2,-56(fp)
 801538c:	10800517 	ldw	r2,20(r2)
 8015390:	1080080c 	andi	r2,r2,32
 8015394:	e0bff315 	stw	r2,-52(fp)
  stream_rx = priv->flags & ALT_AVALON_DMA_RX_STREAM;
 8015398:	e0bff217 	ldw	r2,-56(fp)
 801539c:	10800517 	ldw	r2,20(r2)
 80153a0:	1080100c 	andi	r2,r2,64
 80153a4:	e0bff415 	stw	r2,-48(fp)

  tx_start = priv->tx_start;
 80153a8:	e0bff217 	ldw	r2,-56(fp)
 80153ac:	10800117 	ldw	r2,4(r2)
 80153b0:	e0bff515 	stw	r2,-44(fp)
  rx_start = priv->rx_start;
 80153b4:	e0bff217 	ldw	r2,-56(fp)
 80153b8:	10800317 	ldw	r2,12(r2)
 80153bc:	e0bff615 	stw	r2,-40(fp)

  tx_slot = &priv->tx_buf[tx_start];
 80153c0:	e0bff517 	ldw	r2,-44(fp)
 80153c4:	1004913a 	slli	r2,r2,4
 80153c8:	10800904 	addi	r2,r2,36
 80153cc:	e0fff217 	ldw	r3,-56(fp)
 80153d0:	1885883a 	add	r2,r3,r2
 80153d4:	e0bff715 	stw	r2,-36(fp)
  rx_slot = &priv->rx_buf[rx_start];
 80153d8:	e0bff617 	ldw	r2,-40(fp)
 80153dc:	1004913a 	slli	r2,r2,4
 80153e0:	10801904 	addi	r2,r2,100
 80153e4:	e0fff217 	ldw	r3,-56(fp)
 80153e8:	1885883a 	add	r2,r3,r2
 80153ec:	e0bff815 	stw	r2,-32(fp)

  /* Increment the descriptors */

  if (!stream_tx)
 80153f0:	e0bff317 	ldw	r2,-52(fp)
 80153f4:	1000051e 	bne	r2,zero,801540c <alt_avalon_dma_irq+0xa4>
  {
    priv->tx_start = (tx_start + 1) & ALT_AVALON_DMA_NSLOTS_MSK;
 80153f8:	e0bff517 	ldw	r2,-44(fp)
 80153fc:	10800044 	addi	r2,r2,1
 8015400:	10c000cc 	andi	r3,r2,3
 8015404:	e0bff217 	ldw	r2,-56(fp)
 8015408:	10c00115 	stw	r3,4(r2)
  }
  if (!stream_rx)
 801540c:	e0bff417 	ldw	r2,-48(fp)
 8015410:	1000051e 	bne	r2,zero,8015428 <alt_avalon_dma_irq+0xc0>
  {
    priv->rx_start = (rx_start + 1) & ALT_AVALON_DMA_NSLOTS_MSK;
 8015414:	e0bff617 	ldw	r2,-40(fp)
 8015418:	10800044 	addi	r2,r2,1
 801541c:	10c000cc 	andi	r3,r2,3
 8015420:	e0bff217 	ldw	r2,-56(fp)
 8015424:	10c00315 	stw	r3,12(r2)
  }

  /* clear the interrupt */

  IOWR_ALTERA_AVALON_DMA_STATUS (priv->base, 0);
 8015428:	e0bff217 	ldw	r2,-56(fp)
 801542c:	10800017 	ldw	r2,0(r2)
 8015430:	0007883a 	mov	r3,zero
 8015434:	10c00035 	stwio	r3,0(r2)
  
  /* Dummy read to ensure IRQ is cleared prior to ISR completion*/
  IORD_ALTERA_AVALON_DMA_STATUS (priv->base);
 8015438:	e0bff217 	ldw	r2,-56(fp)
 801543c:	10800017 	ldw	r2,0(r2)
 8015440:	10800037 	ldwio	r2,0(r2)

  /* launch the next transaction */

  priv->launch (priv);
 8015444:	e0bff217 	ldw	r2,-56(fp)
 8015448:	10800717 	ldw	r2,28(r2)
 801544c:	e13ff217 	ldw	r4,-56(fp)
 8015450:	103ee83a 	callr	r2
   * Other interrupts are explicitly disabled if callbacks
   * are registered because there is no guarantee that they are 
   * preemption-safe. This allows the DMA driver to support 
   * interrupt preemption.
   */
  if (!stream_tx && tx_slot->done)
 8015454:	e0bff317 	ldw	r2,-52(fp)
 8015458:	1000151e 	bne	r2,zero,80154b0 <alt_avalon_dma_irq+0x148>
 801545c:	e0bff717 	ldw	r2,-36(fp)
 8015460:	10800217 	ldw	r2,8(r2)
 8015464:	10001226 	beq	r2,zero,80154b0 <alt_avalon_dma_irq+0x148>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 8015468:	0005303a 	rdctl	r2,status
 801546c:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 8015470:	e0fffa17 	ldw	r3,-24(fp)
 8015474:	00bfff84 	movi	r2,-2
 8015478:	1884703a 	and	r2,r3,r2
 801547c:	1001703a 	wrctl	status,r2
  
  return context;
 8015480:	e0bffa17 	ldw	r2,-24(fp)
  {
    cpu_sr = alt_irq_disable_all();
 8015484:	e0bff915 	stw	r2,-28(fp)
    tx_slot->done (tx_slot->handle);
 8015488:	e0bff717 	ldw	r2,-36(fp)
 801548c:	10800217 	ldw	r2,8(r2)
 8015490:	e0fff717 	ldw	r3,-36(fp)
 8015494:	18c00317 	ldw	r3,12(r3)
 8015498:	1809883a 	mov	r4,r3
 801549c:	103ee83a 	callr	r2
 80154a0:	e0bff917 	ldw	r2,-28(fp)
 80154a4:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 80154a8:	e0bffb17 	ldw	r2,-20(fp)
 80154ac:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(cpu_sr);
    
  }
  if (!stream_rx && rx_slot->done)
 80154b0:	e0bff417 	ldw	r2,-48(fp)
 80154b4:	1000171e 	bne	r2,zero,8015514 <alt_avalon_dma_irq+0x1ac>
 80154b8:	e0bff817 	ldw	r2,-32(fp)
 80154bc:	10800217 	ldw	r2,8(r2)
 80154c0:	10001426 	beq	r2,zero,8015514 <alt_avalon_dma_irq+0x1ac>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 80154c4:	0005303a 	rdctl	r2,status
 80154c8:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 80154cc:	e0fffc17 	ldw	r3,-16(fp)
 80154d0:	00bfff84 	movi	r2,-2
 80154d4:	1884703a 	and	r2,r3,r2
 80154d8:	1001703a 	wrctl	status,r2
  
  return context;
 80154dc:	e0bffc17 	ldw	r2,-16(fp)
  {
    cpu_sr = alt_irq_disable_all();
 80154e0:	e0bff915 	stw	r2,-28(fp)
    rx_slot->done (rx_slot->handle, rx_slot->data);
 80154e4:	e0bff817 	ldw	r2,-32(fp)
 80154e8:	10800217 	ldw	r2,8(r2)
 80154ec:	e0fff817 	ldw	r3,-32(fp)
 80154f0:	19000317 	ldw	r4,12(r3)
 80154f4:	e0fff817 	ldw	r3,-32(fp)
 80154f8:	18c00017 	ldw	r3,0(r3)
 80154fc:	180b883a 	mov	r5,r3
 8015500:	103ee83a 	callr	r2
 8015504:	e0bff917 	ldw	r2,-28(fp)
 8015508:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 801550c:	e0bffd17 	ldw	r2,-12(fp)
 8015510:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(cpu_sr);
  }
}
 8015514:	e037883a 	mov	sp,fp
 8015518:	dfc00117 	ldw	ra,4(sp)
 801551c:	df000017 	ldw	fp,0(sp)
 8015520:	dec00204 	addi	sp,sp,8
 8015524:	f800283a 	ret

08015528 <alt_avalon_dma_init>:
void alt_avalon_dma_init (alt_avalon_dma_txchan* tx,
                          alt_avalon_dma_rxchan* rx,
                          void*                  base,
                          alt_u32                ic_id,
                          alt_u32                irq)
{
 8015528:	defffa04 	addi	sp,sp,-24
 801552c:	dfc00515 	stw	ra,20(sp)
 8015530:	df000415 	stw	fp,16(sp)
 8015534:	df000404 	addi	fp,sp,16
 8015538:	e13ffc15 	stw	r4,-16(fp)
 801553c:	e17ffd15 	stw	r5,-12(fp)
 8015540:	e1bffe15 	stw	r6,-8(fp)
 8015544:	e1ffff15 	stw	r7,-4(fp)

  /* Halt any current transactions (reset the device) */
  IOWR_ALTERA_AVALON_DMA_CONTROL (base, ALTERA_AVALON_DMA_CONTROL_SOFTWARERESET_MSK);
 8015548:	e0bffe17 	ldw	r2,-8(fp)
 801554c:	10800604 	addi	r2,r2,24
 8015550:	00c40004 	movi	r3,4096
 8015554:	10c00035 	stwio	r3,0(r2)
  IOWR_ALTERA_AVALON_DMA_CONTROL (base, ALTERA_AVALON_DMA_CONTROL_SOFTWARERESET_MSK);
 8015558:	e0bffe17 	ldw	r2,-8(fp)
 801555c:	10800604 	addi	r2,r2,24
 8015560:	00c40004 	movi	r3,4096
 8015564:	10c00035 	stwio	r3,0(r2)

  /* Set the default mode of the device (32 bit block reads and writes from/to memory). */
  IOWR_ALTERA_AVALON_DMA_CONTROL (base,
 8015568:	e0bffe17 	ldw	r2,-8(fp)
 801556c:	10800604 	addi	r2,r2,24
 8015570:	00c03f04 	movi	r3,252
 8015574:	10c00035 	stwio	r3,0(r2)
                          ALTERA_AVALON_DMA_CONTROL_REEN_MSK      |
                          ALTERA_AVALON_DMA_CONTROL_WEEN_MSK      |
                          ALTERA_AVALON_DMA_CONTROL_LEEN_MSK);

  /* Clear any pending interrupts and the DONE flag */
  IOWR_ALTERA_AVALON_DMA_STATUS (base, 0);
 8015578:	0007883a 	mov	r3,zero
 801557c:	e0bffe17 	ldw	r2,-8(fp)
 8015580:	10c00035 	stwio	r3,0(r2)
   * system.
   */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  if (alt_ic_isr_register(ic_id, irq, alt_avalon_dma_irq, tx->priv, 0x0) >= 0)
#else
  if (alt_irq_register (irq, tx->priv, alt_avalon_dma_irq) >= 0)
 8015584:	e0bffc17 	ldw	r2,-16(fp)
 8015588:	10800617 	ldw	r2,24(r2)
 801558c:	e1000217 	ldw	r4,8(fp)
 8015590:	100b883a 	mov	r5,r2
 8015594:	01820074 	movhi	r6,2049
 8015598:	3194da04 	addi	r6,r6,21352
 801559c:	80168c00 	call	80168c0 <alt_irq_register>
 80155a0:	10000616 	blt	r2,zero,80155bc <alt_avalon_dma_init+0x94>
#endif  
  {
    alt_dma_txchan_reg (&tx->dev);
 80155a4:	e0bffc17 	ldw	r2,-16(fp)
 80155a8:	1009883a 	mov	r4,r2
 80155ac:	8014a1c0 	call	8014a1c <alt_dma_txchan_reg>
    alt_dma_rxchan_reg (&rx->dev);
 80155b0:	e0bffd17 	ldw	r2,-12(fp)
 80155b4:	1009883a 	mov	r4,r2
 80155b8:	8014a540 	call	8014a54 <alt_dma_rxchan_reg>
  }
}
 80155bc:	e037883a 	mov	sp,fp
 80155c0:	dfc00117 	ldw	ra,4(sp)
 80155c4:	df000017 	ldw	fp,0(sp)
 80155c8:	dec00204 	addi	sp,sp,8
 80155cc:	f800283a 	ret

080155d0 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
 80155d0:	defffa04 	addi	sp,sp,-24
 80155d4:	dfc00515 	stw	ra,20(sp)
 80155d8:	df000415 	stw	fp,16(sp)
 80155dc:	df000404 	addi	fp,sp,16
 80155e0:	e13ffd15 	stw	r4,-12(fp)
 80155e4:	e17ffe15 	stw	r5,-8(fp)
 80155e8:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 80155ec:	e0bffd17 	ldw	r2,-12(fp)
 80155f0:	10800017 	ldw	r2,0(r2)
 80155f4:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
 80155f8:	e0bffc17 	ldw	r2,-16(fp)
 80155fc:	10c00a04 	addi	r3,r2,40
 8015600:	e0bffd17 	ldw	r2,-12(fp)
 8015604:	10800217 	ldw	r2,8(r2)
 8015608:	1809883a 	mov	r4,r3
 801560c:	e17ffe17 	ldw	r5,-8(fp)
 8015610:	e1bfff17 	ldw	r6,-4(fp)
 8015614:	100f883a 	mov	r7,r2
 8015618:	8015bf00 	call	8015bf0 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
 801561c:	e037883a 	mov	sp,fp
 8015620:	dfc00117 	ldw	ra,4(sp)
 8015624:	df000017 	ldw	fp,0(sp)
 8015628:	dec00204 	addi	sp,sp,8
 801562c:	f800283a 	ret

08015630 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
 8015630:	defffa04 	addi	sp,sp,-24
 8015634:	dfc00515 	stw	ra,20(sp)
 8015638:	df000415 	stw	fp,16(sp)
 801563c:	df000404 	addi	fp,sp,16
 8015640:	e13ffd15 	stw	r4,-12(fp)
 8015644:	e17ffe15 	stw	r5,-8(fp)
 8015648:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 801564c:	e0bffd17 	ldw	r2,-12(fp)
 8015650:	10800017 	ldw	r2,0(r2)
 8015654:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
 8015658:	e0bffc17 	ldw	r2,-16(fp)
 801565c:	10c00a04 	addi	r3,r2,40
 8015660:	e0bffd17 	ldw	r2,-12(fp)
 8015664:	10800217 	ldw	r2,8(r2)
 8015668:	1809883a 	mov	r4,r3
 801566c:	e17ffe17 	ldw	r5,-8(fp)
 8015670:	e1bfff17 	ldw	r6,-4(fp)
 8015674:	100f883a 	mov	r7,r2
 8015678:	8015dfc0 	call	8015dfc <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
 801567c:	e037883a 	mov	sp,fp
 8015680:	dfc00117 	ldw	ra,4(sp)
 8015684:	df000017 	ldw	fp,0(sp)
 8015688:	dec00204 	addi	sp,sp,8
 801568c:	f800283a 	ret

08015690 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
 8015690:	defffc04 	addi	sp,sp,-16
 8015694:	dfc00315 	stw	ra,12(sp)
 8015698:	df000215 	stw	fp,8(sp)
 801569c:	df000204 	addi	fp,sp,8
 80156a0:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 80156a4:	e0bfff17 	ldw	r2,-4(fp)
 80156a8:	10800017 	ldw	r2,0(r2)
 80156ac:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
 80156b0:	e0bffe17 	ldw	r2,-8(fp)
 80156b4:	10c00a04 	addi	r3,r2,40
 80156b8:	e0bfff17 	ldw	r2,-4(fp)
 80156bc:	10800217 	ldw	r2,8(r2)
 80156c0:	1809883a 	mov	r4,r3
 80156c4:	100b883a 	mov	r5,r2
 80156c8:	8015a9c0 	call	8015a9c <altera_avalon_jtag_uart_close>
}
 80156cc:	e037883a 	mov	sp,fp
 80156d0:	dfc00117 	ldw	ra,4(sp)
 80156d4:	df000017 	ldw	fp,0(sp)
 80156d8:	dec00204 	addi	sp,sp,8
 80156dc:	f800283a 	ret

080156e0 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
 80156e0:	defffa04 	addi	sp,sp,-24
 80156e4:	dfc00515 	stw	ra,20(sp)
 80156e8:	df000415 	stw	fp,16(sp)
 80156ec:	df000404 	addi	fp,sp,16
 80156f0:	e13ffd15 	stw	r4,-12(fp)
 80156f4:	e17ffe15 	stw	r5,-8(fp)
 80156f8:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
 80156fc:	e0bffd17 	ldw	r2,-12(fp)
 8015700:	10800017 	ldw	r2,0(r2)
 8015704:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
 8015708:	e0bffc17 	ldw	r2,-16(fp)
 801570c:	10800a04 	addi	r2,r2,40
 8015710:	1009883a 	mov	r4,r2
 8015714:	e17ffe17 	ldw	r5,-8(fp)
 8015718:	e1bfff17 	ldw	r6,-4(fp)
 801571c:	8015b040 	call	8015b04 <altera_avalon_jtag_uart_ioctl>
}
 8015720:	e037883a 	mov	sp,fp
 8015724:	dfc00117 	ldw	ra,4(sp)
 8015728:	df000017 	ldw	fp,0(sp)
 801572c:	dec00204 	addi	sp,sp,8
 8015730:	f800283a 	ret

08015734 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
 8015734:	defffb04 	addi	sp,sp,-20
 8015738:	dfc00415 	stw	ra,16(sp)
 801573c:	df000315 	stw	fp,12(sp)
 8015740:	df000304 	addi	fp,sp,12
 8015744:	e13ffd15 	stw	r4,-12(fp)
 8015748:	e17ffe15 	stw	r5,-8(fp)
 801574c:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 8015750:	e0bffd17 	ldw	r2,-12(fp)
 8015754:	00c00044 	movi	r3,1
 8015758:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
 801575c:	e0bffd17 	ldw	r2,-12(fp)
 8015760:	10800017 	ldw	r2,0(r2)
 8015764:	10800104 	addi	r2,r2,4
 8015768:	1007883a 	mov	r3,r2
 801576c:	e0bffd17 	ldw	r2,-12(fp)
 8015770:	10800817 	ldw	r2,32(r2)
 8015774:	18800035 	stwio	r2,0(r3)
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
                      sp, NULL);
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
 8015778:	e0bfff17 	ldw	r2,-4(fp)
 801577c:	1009883a 	mov	r4,r2
 8015780:	e17ffd17 	ldw	r5,-12(fp)
 8015784:	01820074 	movhi	r6,2049
 8015788:	3195fb04 	addi	r6,r6,22508
 801578c:	80168c00 	call	80168c0 <alt_irq_register>
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
 8015790:	e0bffd17 	ldw	r2,-12(fp)
 8015794:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
 8015798:	e0bffd17 	ldw	r2,-12(fp)
 801579c:	10c00204 	addi	r3,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
 80157a0:	008200b4 	movhi	r2,2050
 80157a4:	10ad9004 	addi	r2,r2,-18880
 80157a8:	10800017 	ldw	r2,0(r2)
 80157ac:	1809883a 	mov	r4,r3
 80157b0:	100b883a 	mov	r5,r2
 80157b4:	01820074 	movhi	r6,2049
 80157b8:	31967d04 	addi	r6,r6,23028
 80157bc:	e1fffd17 	ldw	r7,-12(fp)
 80157c0:	80163a00 	call	80163a0 <alt_alarm_start>
 80157c4:	1000040e 	bge	r2,zero,80157d8 <altera_avalon_jtag_uart_init+0xa4>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
 80157c8:	e0fffd17 	ldw	r3,-12(fp)
 80157cc:	00a00034 	movhi	r2,32768
 80157d0:	10bfffc4 	addi	r2,r2,-1
 80157d4:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
 80157d8:	e037883a 	mov	sp,fp
 80157dc:	dfc00117 	ldw	ra,4(sp)
 80157e0:	df000017 	ldw	fp,0(sp)
 80157e4:	dec00204 	addi	sp,sp,8
 80157e8:	f800283a 	ret

080157ec <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
 80157ec:	defff704 	addi	sp,sp,-36
 80157f0:	df000815 	stw	fp,32(sp)
 80157f4:	df000804 	addi	fp,sp,32
 80157f8:	e13ffe15 	stw	r4,-8(fp)
 80157fc:	e17fff15 	stw	r5,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
 8015800:	e0bffe17 	ldw	r2,-8(fp)
 8015804:	e0bffa15 	stw	r2,-24(fp)
  unsigned int base = sp->base;
 8015808:	e0bffa17 	ldw	r2,-24(fp)
 801580c:	10800017 	ldw	r2,0(r2)
 8015810:	e0bffb15 	stw	r2,-20(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 8015814:	e0bffb17 	ldw	r2,-20(fp)
 8015818:	10800104 	addi	r2,r2,4
 801581c:	10800037 	ldwio	r2,0(r2)
 8015820:	e0bffc15 	stw	r2,-16(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
 8015824:	e0bffc17 	ldw	r2,-16(fp)
 8015828:	1080c00c 	andi	r2,r2,768
 801582c:	1000011e 	bne	r2,zero,8015834 <altera_avalon_jtag_uart_irq+0x48>
      break;
 8015830:	00006c06 	br	80159e4 <altera_avalon_jtag_uart_irq+0x1f8>

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
 8015834:	e0bffc17 	ldw	r2,-16(fp)
 8015838:	1080400c 	andi	r2,r2,256
 801583c:	10003426 	beq	r2,zero,8015910 <altera_avalon_jtag_uart_irq+0x124>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
 8015840:	00800074 	movhi	r2,1
 8015844:	e0bff815 	stw	r2,-32(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 8015848:	e0bffa17 	ldw	r2,-24(fp)
 801584c:	10800a17 	ldw	r2,40(r2)
 8015850:	10800044 	addi	r2,r2,1
 8015854:	1081ffcc 	andi	r2,r2,2047
 8015858:	e0bffd15 	stw	r2,-12(fp)
        if (next == sp->rx_out)
 801585c:	e0bffa17 	ldw	r2,-24(fp)
 8015860:	10c00b17 	ldw	r3,44(r2)
 8015864:	e0bffd17 	ldw	r2,-12(fp)
 8015868:	1880011e 	bne	r3,r2,8015870 <altera_avalon_jtag_uart_irq+0x84>
          break;
 801586c:	00001606 	br	80158c8 <altera_avalon_jtag_uart_irq+0xdc>

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
 8015870:	e0bffb17 	ldw	r2,-20(fp)
 8015874:	10800037 	ldwio	r2,0(r2)
 8015878:	e0bff815 	stw	r2,-32(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
 801587c:	e0bff817 	ldw	r2,-32(fp)
 8015880:	10a0000c 	andi	r2,r2,32768
 8015884:	1000011e 	bne	r2,zero,801588c <altera_avalon_jtag_uart_irq+0xa0>
          break;
 8015888:	00000f06 	br	80158c8 <altera_avalon_jtag_uart_irq+0xdc>

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
 801588c:	e0bffa17 	ldw	r2,-24(fp)
 8015890:	10800a17 	ldw	r2,40(r2)
 8015894:	e0fff817 	ldw	r3,-32(fp)
 8015898:	1809883a 	mov	r4,r3
 801589c:	e0fffa17 	ldw	r3,-24(fp)
 80158a0:	1885883a 	add	r2,r3,r2
 80158a4:	10800e04 	addi	r2,r2,56
 80158a8:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 80158ac:	e0bffa17 	ldw	r2,-24(fp)
 80158b0:	10800a17 	ldw	r2,40(r2)
 80158b4:	10800044 	addi	r2,r2,1
 80158b8:	10c1ffcc 	andi	r3,r2,2047
 80158bc:	e0bffa17 	ldw	r2,-24(fp)
 80158c0:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
 80158c4:	003fe006 	br	8015848 <__alt_data_end+0xfc015848>

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
 80158c8:	e0bff817 	ldw	r2,-32(fp)
 80158cc:	10bfffec 	andhi	r2,r2,65535
 80158d0:	10000f26 	beq	r2,zero,8015910 <altera_avalon_jtag_uart_irq+0x124>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 80158d4:	e0bffa17 	ldw	r2,-24(fp)
 80158d8:	10c00817 	ldw	r3,32(r2)
 80158dc:	00bfff84 	movi	r2,-2
 80158e0:	1886703a 	and	r3,r3,r2
 80158e4:	e0bffa17 	ldw	r2,-24(fp)
 80158e8:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
 80158ec:	e0bffb17 	ldw	r2,-20(fp)
 80158f0:	10800104 	addi	r2,r2,4
 80158f4:	1007883a 	mov	r3,r2
 80158f8:	e0bffa17 	ldw	r2,-24(fp)
 80158fc:	10800817 	ldw	r2,32(r2)
 8015900:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 8015904:	e0bffb17 	ldw	r2,-20(fp)
 8015908:	10800104 	addi	r2,r2,4
 801590c:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
 8015910:	e0bffc17 	ldw	r2,-16(fp)
 8015914:	1080800c 	andi	r2,r2,512
 8015918:	10003126 	beq	r2,zero,80159e0 <altera_avalon_jtag_uart_irq+0x1f4>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
 801591c:	e0bffc17 	ldw	r2,-16(fp)
 8015920:	1004d43a 	srli	r2,r2,16
 8015924:	e0bff915 	stw	r2,-28(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
 8015928:	00001406 	br	801597c <altera_avalon_jtag_uart_irq+0x190>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
 801592c:	e0bffb17 	ldw	r2,-20(fp)
 8015930:	e0fffa17 	ldw	r3,-24(fp)
 8015934:	18c00d17 	ldw	r3,52(r3)
 8015938:	e13ffa17 	ldw	r4,-24(fp)
 801593c:	20c7883a 	add	r3,r4,r3
 8015940:	18c20e04 	addi	r3,r3,2104
 8015944:	18c00003 	ldbu	r3,0(r3)
 8015948:	18c03fcc 	andi	r3,r3,255
 801594c:	18c0201c 	xori	r3,r3,128
 8015950:	18ffe004 	addi	r3,r3,-128
 8015954:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 8015958:	e0bffa17 	ldw	r2,-24(fp)
 801595c:	10800d17 	ldw	r2,52(r2)
 8015960:	10800044 	addi	r2,r2,1
 8015964:	10c1ffcc 	andi	r3,r2,2047
 8015968:	e0bffa17 	ldw	r2,-24(fp)
 801596c:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
 8015970:	e0bff917 	ldw	r2,-28(fp)
 8015974:	10bfffc4 	addi	r2,r2,-1
 8015978:	e0bff915 	stw	r2,-28(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
 801597c:	e0bff917 	ldw	r2,-28(fp)
 8015980:	10000526 	beq	r2,zero,8015998 <altera_avalon_jtag_uart_irq+0x1ac>
 8015984:	e0bffa17 	ldw	r2,-24(fp)
 8015988:	10c00d17 	ldw	r3,52(r2)
 801598c:	e0bffa17 	ldw	r2,-24(fp)
 8015990:	10800c17 	ldw	r2,48(r2)
 8015994:	18bfe51e 	bne	r3,r2,801592c <__alt_data_end+0xfc01592c>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
 8015998:	e0bff917 	ldw	r2,-28(fp)
 801599c:	10001026 	beq	r2,zero,80159e0 <altera_avalon_jtag_uart_irq+0x1f4>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 80159a0:	e0bffa17 	ldw	r2,-24(fp)
 80159a4:	10c00817 	ldw	r3,32(r2)
 80159a8:	00bfff44 	movi	r2,-3
 80159ac:	1886703a 	and	r3,r3,r2
 80159b0:	e0bffa17 	ldw	r2,-24(fp)
 80159b4:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 80159b8:	e0bffa17 	ldw	r2,-24(fp)
 80159bc:	10800017 	ldw	r2,0(r2)
 80159c0:	10800104 	addi	r2,r2,4
 80159c4:	1007883a 	mov	r3,r2
 80159c8:	e0bffa17 	ldw	r2,-24(fp)
 80159cc:	10800817 	ldw	r2,32(r2)
 80159d0:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 80159d4:	e0bffb17 	ldw	r2,-20(fp)
 80159d8:	10800104 	addi	r2,r2,4
 80159dc:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
 80159e0:	003f8c06 	br	8015814 <__alt_data_end+0xfc015814>
}
 80159e4:	e037883a 	mov	sp,fp
 80159e8:	df000017 	ldw	fp,0(sp)
 80159ec:	dec00104 	addi	sp,sp,4
 80159f0:	f800283a 	ret

080159f4 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
 80159f4:	defff804 	addi	sp,sp,-32
 80159f8:	df000715 	stw	fp,28(sp)
 80159fc:	df000704 	addi	fp,sp,28
 8015a00:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
 8015a04:	e0bffb17 	ldw	r2,-20(fp)
 8015a08:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
 8015a0c:	e0bff917 	ldw	r2,-28(fp)
 8015a10:	10800017 	ldw	r2,0(r2)
 8015a14:	10800104 	addi	r2,r2,4
 8015a18:	10800037 	ldwio	r2,0(r2)
 8015a1c:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
 8015a20:	e0bffa17 	ldw	r2,-24(fp)
 8015a24:	1081000c 	andi	r2,r2,1024
 8015a28:	10000b26 	beq	r2,zero,8015a58 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
 8015a2c:	e0bff917 	ldw	r2,-28(fp)
 8015a30:	10800017 	ldw	r2,0(r2)
 8015a34:	10800104 	addi	r2,r2,4
 8015a38:	1007883a 	mov	r3,r2
 8015a3c:	e0bff917 	ldw	r2,-28(fp)
 8015a40:	10800817 	ldw	r2,32(r2)
 8015a44:	10810014 	ori	r2,r2,1024
 8015a48:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
 8015a4c:	e0bff917 	ldw	r2,-28(fp)
 8015a50:	10000915 	stw	zero,36(r2)
 8015a54:	00000a06 	br	8015a80 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
 8015a58:	e0bff917 	ldw	r2,-28(fp)
 8015a5c:	10c00917 	ldw	r3,36(r2)
 8015a60:	00a00034 	movhi	r2,32768
 8015a64:	10bfff04 	addi	r2,r2,-4
 8015a68:	10c00536 	bltu	r2,r3,8015a80 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
 8015a6c:	e0bff917 	ldw	r2,-28(fp)
 8015a70:	10800917 	ldw	r2,36(r2)
 8015a74:	10c00044 	addi	r3,r2,1
 8015a78:	e0bff917 	ldw	r2,-28(fp)
 8015a7c:	10c00915 	stw	r3,36(r2)
 8015a80:	008200b4 	movhi	r2,2050
 8015a84:	10ad9004 	addi	r2,r2,-18880
 8015a88:	10800017 	ldw	r2,0(r2)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
 8015a8c:	e037883a 	mov	sp,fp
 8015a90:	df000017 	ldw	fp,0(sp)
 8015a94:	dec00104 	addi	sp,sp,4
 8015a98:	f800283a 	ret

08015a9c <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
 8015a9c:	defffd04 	addi	sp,sp,-12
 8015aa0:	df000215 	stw	fp,8(sp)
 8015aa4:	df000204 	addi	fp,sp,8
 8015aa8:	e13ffe15 	stw	r4,-8(fp)
 8015aac:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 8015ab0:	00000506 	br	8015ac8 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
 8015ab4:	e0bfff17 	ldw	r2,-4(fp)
 8015ab8:	1090000c 	andi	r2,r2,16384
 8015abc:	10000226 	beq	r2,zero,8015ac8 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
 8015ac0:	00bffd44 	movi	r2,-11
 8015ac4:	00000b06 	br	8015af4 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 8015ac8:	e0bffe17 	ldw	r2,-8(fp)
 8015acc:	10c00d17 	ldw	r3,52(r2)
 8015ad0:	e0bffe17 	ldw	r2,-8(fp)
 8015ad4:	10800c17 	ldw	r2,48(r2)
 8015ad8:	18800526 	beq	r3,r2,8015af0 <altera_avalon_jtag_uart_close+0x54>
 8015adc:	e0bffe17 	ldw	r2,-8(fp)
 8015ae0:	10c00917 	ldw	r3,36(r2)
 8015ae4:	e0bffe17 	ldw	r2,-8(fp)
 8015ae8:	10800117 	ldw	r2,4(r2)
 8015aec:	18bff136 	bltu	r3,r2,8015ab4 <__alt_data_end+0xfc015ab4>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
 8015af0:	0005883a 	mov	r2,zero
}
 8015af4:	e037883a 	mov	sp,fp
 8015af8:	df000017 	ldw	fp,0(sp)
 8015afc:	dec00104 	addi	sp,sp,4
 8015b00:	f800283a 	ret

08015b04 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
 8015b04:	defffa04 	addi	sp,sp,-24
 8015b08:	df000515 	stw	fp,20(sp)
 8015b0c:	df000504 	addi	fp,sp,20
 8015b10:	e13ffd15 	stw	r4,-12(fp)
 8015b14:	e17ffe15 	stw	r5,-8(fp)
 8015b18:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
 8015b1c:	00bff9c4 	movi	r2,-25
 8015b20:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
 8015b24:	e0bffe17 	ldw	r2,-8(fp)
 8015b28:	10da8060 	cmpeqi	r3,r2,27137
 8015b2c:	1800031e 	bne	r3,zero,8015b3c <altera_avalon_jtag_uart_ioctl+0x38>
 8015b30:	109a80a0 	cmpeqi	r2,r2,27138
 8015b34:	1000191e 	bne	r2,zero,8015b9c <altera_avalon_jtag_uart_ioctl+0x98>
      rc = 0;
    }
    break;

  default:
    break;
 8015b38:	00002806 	br	8015bdc <altera_avalon_jtag_uart_ioctl+0xd8>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
 8015b3c:	e0bffd17 	ldw	r2,-12(fp)
 8015b40:	10c00117 	ldw	r3,4(r2)
 8015b44:	00a00034 	movhi	r2,32768
 8015b48:	10bfffc4 	addi	r2,r2,-1
 8015b4c:	18801226 	beq	r3,r2,8015b98 <altera_avalon_jtag_uart_ioctl+0x94>
    {
      int timeout = *((int *)arg);
 8015b50:	e0bfff17 	ldw	r2,-4(fp)
 8015b54:	10800017 	ldw	r2,0(r2)
 8015b58:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
 8015b5c:	e0bffc17 	ldw	r2,-16(fp)
 8015b60:	10800090 	cmplti	r2,r2,2
 8015b64:	1000061e 	bne	r2,zero,8015b80 <altera_avalon_jtag_uart_ioctl+0x7c>
 8015b68:	e0fffc17 	ldw	r3,-16(fp)
 8015b6c:	00a00034 	movhi	r2,32768
 8015b70:	10bfffc4 	addi	r2,r2,-1
 8015b74:	18800226 	beq	r3,r2,8015b80 <altera_avalon_jtag_uart_ioctl+0x7c>
 8015b78:	e0bffc17 	ldw	r2,-16(fp)
 8015b7c:	00000206 	br	8015b88 <altera_avalon_jtag_uart_ioctl+0x84>
 8015b80:	00a00034 	movhi	r2,32768
 8015b84:	10bfff84 	addi	r2,r2,-2
 8015b88:	e0fffd17 	ldw	r3,-12(fp)
 8015b8c:	18800115 	stw	r2,4(r3)
      rc = 0;
 8015b90:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
 8015b94:	00001106 	br	8015bdc <altera_avalon_jtag_uart_ioctl+0xd8>
 8015b98:	00001006 	br	8015bdc <altera_avalon_jtag_uart_ioctl+0xd8>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
 8015b9c:	e0bffd17 	ldw	r2,-12(fp)
 8015ba0:	10c00117 	ldw	r3,4(r2)
 8015ba4:	00a00034 	movhi	r2,32768
 8015ba8:	10bfffc4 	addi	r2,r2,-1
 8015bac:	18800a26 	beq	r3,r2,8015bd8 <altera_avalon_jtag_uart_ioctl+0xd4>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
 8015bb0:	e0bffd17 	ldw	r2,-12(fp)
 8015bb4:	10c00917 	ldw	r3,36(r2)
 8015bb8:	e0bffd17 	ldw	r2,-12(fp)
 8015bbc:	10800117 	ldw	r2,4(r2)
 8015bc0:	1885803a 	cmpltu	r2,r3,r2
 8015bc4:	10c03fcc 	andi	r3,r2,255
 8015bc8:	e0bfff17 	ldw	r2,-4(fp)
 8015bcc:	10c00015 	stw	r3,0(r2)
      rc = 0;
 8015bd0:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
 8015bd4:	00000006 	br	8015bd8 <altera_avalon_jtag_uart_ioctl+0xd4>
 8015bd8:	0001883a 	nop

  default:
    break;
  }

  return rc;
 8015bdc:	e0bffb17 	ldw	r2,-20(fp)
}
 8015be0:	e037883a 	mov	sp,fp
 8015be4:	df000017 	ldw	fp,0(sp)
 8015be8:	dec00104 	addi	sp,sp,4
 8015bec:	f800283a 	ret

08015bf0 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
 8015bf0:	defff304 	addi	sp,sp,-52
 8015bf4:	dfc00c15 	stw	ra,48(sp)
 8015bf8:	df000b15 	stw	fp,44(sp)
 8015bfc:	df000b04 	addi	fp,sp,44
 8015c00:	e13ffc15 	stw	r4,-16(fp)
 8015c04:	e17ffd15 	stw	r5,-12(fp)
 8015c08:	e1bffe15 	stw	r6,-8(fp)
 8015c0c:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
 8015c10:	e0bffd17 	ldw	r2,-12(fp)
 8015c14:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 8015c18:	00004906 	br	8015d40 <altera_avalon_jtag_uart_read+0x150>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
 8015c1c:	e0bffc17 	ldw	r2,-16(fp)
 8015c20:	10800a17 	ldw	r2,40(r2)
 8015c24:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
 8015c28:	e0bffc17 	ldw	r2,-16(fp)
 8015c2c:	10800b17 	ldw	r2,44(r2)
 8015c30:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
 8015c34:	e0fff717 	ldw	r3,-36(fp)
 8015c38:	e0bff817 	ldw	r2,-32(fp)
 8015c3c:	18800536 	bltu	r3,r2,8015c54 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
 8015c40:	e0fff717 	ldw	r3,-36(fp)
 8015c44:	e0bff817 	ldw	r2,-32(fp)
 8015c48:	1885c83a 	sub	r2,r3,r2
 8015c4c:	e0bff615 	stw	r2,-40(fp)
 8015c50:	00000406 	br	8015c64 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
 8015c54:	00c20004 	movi	r3,2048
 8015c58:	e0bff817 	ldw	r2,-32(fp)
 8015c5c:	1885c83a 	sub	r2,r3,r2
 8015c60:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
 8015c64:	e0bff617 	ldw	r2,-40(fp)
 8015c68:	1000011e 	bne	r2,zero,8015c70 <altera_avalon_jtag_uart_read+0x80>
        break; /* No more data available */
 8015c6c:	00001d06 	br	8015ce4 <altera_avalon_jtag_uart_read+0xf4>

      if (n > space)
 8015c70:	e0fffe17 	ldw	r3,-8(fp)
 8015c74:	e0bff617 	ldw	r2,-40(fp)
 8015c78:	1880022e 	bgeu	r3,r2,8015c84 <altera_avalon_jtag_uart_read+0x94>
        n = space;
 8015c7c:	e0bffe17 	ldw	r2,-8(fp)
 8015c80:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
 8015c84:	e0bff817 	ldw	r2,-32(fp)
 8015c88:	10800e04 	addi	r2,r2,56
 8015c8c:	e0fffc17 	ldw	r3,-16(fp)
 8015c90:	1885883a 	add	r2,r3,r2
 8015c94:	e13ff517 	ldw	r4,-44(fp)
 8015c98:	100b883a 	mov	r5,r2
 8015c9c:	e1bff617 	ldw	r6,-40(fp)
 8015ca0:	800b7d40 	call	800b7d4 <memcpy>
      ptr   += n;
 8015ca4:	e0fff517 	ldw	r3,-44(fp)
 8015ca8:	e0bff617 	ldw	r2,-40(fp)
 8015cac:	1885883a 	add	r2,r3,r2
 8015cb0:	e0bff515 	stw	r2,-44(fp)
      space -= n;
 8015cb4:	e0fffe17 	ldw	r3,-8(fp)
 8015cb8:	e0bff617 	ldw	r2,-40(fp)
 8015cbc:	1885c83a 	sub	r2,r3,r2
 8015cc0:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 8015cc4:	e0fff817 	ldw	r3,-32(fp)
 8015cc8:	e0bff617 	ldw	r2,-40(fp)
 8015ccc:	1885883a 	add	r2,r3,r2
 8015cd0:	10c1ffcc 	andi	r3,r2,2047
 8015cd4:	e0bffc17 	ldw	r2,-16(fp)
 8015cd8:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
 8015cdc:	e0bffe17 	ldw	r2,-8(fp)
 8015ce0:	00bfce16 	blt	zero,r2,8015c1c <__alt_data_end+0xfc015c1c>

    /* If we read any data then return it */
    if (ptr != buffer)
 8015ce4:	e0fff517 	ldw	r3,-44(fp)
 8015ce8:	e0bffd17 	ldw	r2,-12(fp)
 8015cec:	18800126 	beq	r3,r2,8015cf4 <altera_avalon_jtag_uart_read+0x104>
      break;
 8015cf0:	00001506 	br	8015d48 <altera_avalon_jtag_uart_read+0x158>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
 8015cf4:	e0bfff17 	ldw	r2,-4(fp)
 8015cf8:	1090000c 	andi	r2,r2,16384
 8015cfc:	10000126 	beq	r2,zero,8015d04 <altera_avalon_jtag_uart_read+0x114>
      break;
 8015d00:	00001106 	br	8015d48 <altera_avalon_jtag_uart_read+0x158>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
 8015d04:	0001883a 	nop
 8015d08:	e0bffc17 	ldw	r2,-16(fp)
 8015d0c:	10c00a17 	ldw	r3,40(r2)
 8015d10:	e0bff717 	ldw	r2,-36(fp)
 8015d14:	1880051e 	bne	r3,r2,8015d2c <altera_avalon_jtag_uart_read+0x13c>
 8015d18:	e0bffc17 	ldw	r2,-16(fp)
 8015d1c:	10c00917 	ldw	r3,36(r2)
 8015d20:	e0bffc17 	ldw	r2,-16(fp)
 8015d24:	10800117 	ldw	r2,4(r2)
 8015d28:	18bff736 	bltu	r3,r2,8015d08 <__alt_data_end+0xfc015d08>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
 8015d2c:	e0bffc17 	ldw	r2,-16(fp)
 8015d30:	10c00a17 	ldw	r3,40(r2)
 8015d34:	e0bff717 	ldw	r2,-36(fp)
 8015d38:	1880011e 	bne	r3,r2,8015d40 <altera_avalon_jtag_uart_read+0x150>
      break;
 8015d3c:	00000206 	br	8015d48 <altera_avalon_jtag_uart_read+0x158>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 8015d40:	e0bffe17 	ldw	r2,-8(fp)
 8015d44:	00bfb516 	blt	zero,r2,8015c1c <__alt_data_end+0xfc015c1c>
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
 8015d48:	e0fff517 	ldw	r3,-44(fp)
 8015d4c:	e0bffd17 	ldw	r2,-12(fp)
 8015d50:	18801826 	beq	r3,r2,8015db4 <altera_avalon_jtag_uart_read+0x1c4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 8015d54:	0005303a 	rdctl	r2,status
 8015d58:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 8015d5c:	e0fffa17 	ldw	r3,-24(fp)
 8015d60:	00bfff84 	movi	r2,-2
 8015d64:	1884703a 	and	r2,r3,r2
 8015d68:	1001703a 	wrctl	status,r2
  
  return context;
 8015d6c:	e0bffa17 	ldw	r2,-24(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
 8015d70:	e0bff915 	stw	r2,-28(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 8015d74:	e0bffc17 	ldw	r2,-16(fp)
 8015d78:	10800817 	ldw	r2,32(r2)
 8015d7c:	10c00054 	ori	r3,r2,1
 8015d80:	e0bffc17 	ldw	r2,-16(fp)
 8015d84:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 8015d88:	e0bffc17 	ldw	r2,-16(fp)
 8015d8c:	10800017 	ldw	r2,0(r2)
 8015d90:	10800104 	addi	r2,r2,4
 8015d94:	1007883a 	mov	r3,r2
 8015d98:	e0bffc17 	ldw	r2,-16(fp)
 8015d9c:	10800817 	ldw	r2,32(r2)
 8015da0:	18800035 	stwio	r2,0(r3)
 8015da4:	e0bff917 	ldw	r2,-28(fp)
 8015da8:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 8015dac:	e0bffb17 	ldw	r2,-20(fp)
 8015db0:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
 8015db4:	e0fff517 	ldw	r3,-44(fp)
 8015db8:	e0bffd17 	ldw	r2,-12(fp)
 8015dbc:	18800426 	beq	r3,r2,8015dd0 <altera_avalon_jtag_uart_read+0x1e0>
    return ptr - buffer;
 8015dc0:	e0fff517 	ldw	r3,-44(fp)
 8015dc4:	e0bffd17 	ldw	r2,-12(fp)
 8015dc8:	1885c83a 	sub	r2,r3,r2
 8015dcc:	00000606 	br	8015de8 <altera_avalon_jtag_uart_read+0x1f8>
  else if (flags & O_NONBLOCK)
 8015dd0:	e0bfff17 	ldw	r2,-4(fp)
 8015dd4:	1090000c 	andi	r2,r2,16384
 8015dd8:	10000226 	beq	r2,zero,8015de4 <altera_avalon_jtag_uart_read+0x1f4>
    return -EWOULDBLOCK;
 8015ddc:	00bffd44 	movi	r2,-11
 8015de0:	00000106 	br	8015de8 <altera_avalon_jtag_uart_read+0x1f8>
  else
    return -EIO;
 8015de4:	00bffec4 	movi	r2,-5
}
 8015de8:	e037883a 	mov	sp,fp
 8015dec:	dfc00117 	ldw	ra,4(sp)
 8015df0:	df000017 	ldw	fp,0(sp)
 8015df4:	dec00204 	addi	sp,sp,8
 8015df8:	f800283a 	ret

08015dfc <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
 8015dfc:	defff304 	addi	sp,sp,-52
 8015e00:	dfc00c15 	stw	ra,48(sp)
 8015e04:	df000b15 	stw	fp,44(sp)
 8015e08:	df000b04 	addi	fp,sp,44
 8015e0c:	e13ffc15 	stw	r4,-16(fp)
 8015e10:	e17ffd15 	stw	r5,-12(fp)
 8015e14:	e1bffe15 	stw	r6,-8(fp)
 8015e18:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
 8015e1c:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
 8015e20:	e0bffd17 	ldw	r2,-12(fp)
 8015e24:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 8015e28:	00003806 	br	8015f0c <altera_avalon_jtag_uart_write+0x110>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
 8015e2c:	e0bffc17 	ldw	r2,-16(fp)
 8015e30:	10800c17 	ldw	r2,48(r2)
 8015e34:	e0bff815 	stw	r2,-32(fp)
      out = sp->tx_out;
 8015e38:	e0bffc17 	ldw	r2,-16(fp)
 8015e3c:	10800d17 	ldw	r2,52(r2)
 8015e40:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
 8015e44:	e0fff817 	ldw	r3,-32(fp)
 8015e48:	e0bff517 	ldw	r2,-44(fp)
 8015e4c:	1880062e 	bgeu	r3,r2,8015e68 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
 8015e50:	e0fff517 	ldw	r3,-44(fp)
 8015e54:	e0bff817 	ldw	r2,-32(fp)
 8015e58:	1885c83a 	sub	r2,r3,r2
 8015e5c:	10bfffc4 	addi	r2,r2,-1
 8015e60:	e0bff615 	stw	r2,-40(fp)
 8015e64:	00000b06 	br	8015e94 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
 8015e68:	e0bff517 	ldw	r2,-44(fp)
 8015e6c:	10000526 	beq	r2,zero,8015e84 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
 8015e70:	00c20004 	movi	r3,2048
 8015e74:	e0bff817 	ldw	r2,-32(fp)
 8015e78:	1885c83a 	sub	r2,r3,r2
 8015e7c:	e0bff615 	stw	r2,-40(fp)
 8015e80:	00000406 	br	8015e94 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
 8015e84:	00c1ffc4 	movi	r3,2047
 8015e88:	e0bff817 	ldw	r2,-32(fp)
 8015e8c:	1885c83a 	sub	r2,r3,r2
 8015e90:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
 8015e94:	e0bff617 	ldw	r2,-40(fp)
 8015e98:	1000011e 	bne	r2,zero,8015ea0 <altera_avalon_jtag_uart_write+0xa4>
        break;
 8015e9c:	00001d06 	br	8015f14 <altera_avalon_jtag_uart_write+0x118>

      if (n > count)
 8015ea0:	e0fffe17 	ldw	r3,-8(fp)
 8015ea4:	e0bff617 	ldw	r2,-40(fp)
 8015ea8:	1880022e 	bgeu	r3,r2,8015eb4 <altera_avalon_jtag_uart_write+0xb8>
        n = count;
 8015eac:	e0bffe17 	ldw	r2,-8(fp)
 8015eb0:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
 8015eb4:	e0bff817 	ldw	r2,-32(fp)
 8015eb8:	10820e04 	addi	r2,r2,2104
 8015ebc:	e0fffc17 	ldw	r3,-16(fp)
 8015ec0:	1885883a 	add	r2,r3,r2
 8015ec4:	1009883a 	mov	r4,r2
 8015ec8:	e17ffd17 	ldw	r5,-12(fp)
 8015ecc:	e1bff617 	ldw	r6,-40(fp)
 8015ed0:	800b7d40 	call	800b7d4 <memcpy>
      ptr   += n;
 8015ed4:	e0fffd17 	ldw	r3,-12(fp)
 8015ed8:	e0bff617 	ldw	r2,-40(fp)
 8015edc:	1885883a 	add	r2,r3,r2
 8015ee0:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
 8015ee4:	e0fffe17 	ldw	r3,-8(fp)
 8015ee8:	e0bff617 	ldw	r2,-40(fp)
 8015eec:	1885c83a 	sub	r2,r3,r2
 8015ef0:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 8015ef4:	e0fff817 	ldw	r3,-32(fp)
 8015ef8:	e0bff617 	ldw	r2,-40(fp)
 8015efc:	1885883a 	add	r2,r3,r2
 8015f00:	10c1ffcc 	andi	r3,r2,2047
 8015f04:	e0bffc17 	ldw	r2,-16(fp)
 8015f08:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 8015f0c:	e0bffe17 	ldw	r2,-8(fp)
 8015f10:	00bfc616 	blt	zero,r2,8015e2c <__alt_data_end+0xfc015e2c>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 8015f14:	0005303a 	rdctl	r2,status
 8015f18:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 8015f1c:	e0fffa17 	ldw	r3,-24(fp)
 8015f20:	00bfff84 	movi	r2,-2
 8015f24:	1884703a 	and	r2,r3,r2
 8015f28:	1001703a 	wrctl	status,r2
  
  return context;
 8015f2c:	e0bffa17 	ldw	r2,-24(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
 8015f30:	e0bff915 	stw	r2,-28(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 8015f34:	e0bffc17 	ldw	r2,-16(fp)
 8015f38:	10800817 	ldw	r2,32(r2)
 8015f3c:	10c00094 	ori	r3,r2,2
 8015f40:	e0bffc17 	ldw	r2,-16(fp)
 8015f44:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 8015f48:	e0bffc17 	ldw	r2,-16(fp)
 8015f4c:	10800017 	ldw	r2,0(r2)
 8015f50:	10800104 	addi	r2,r2,4
 8015f54:	1007883a 	mov	r3,r2
 8015f58:	e0bffc17 	ldw	r2,-16(fp)
 8015f5c:	10800817 	ldw	r2,32(r2)
 8015f60:	18800035 	stwio	r2,0(r3)
 8015f64:	e0bff917 	ldw	r2,-28(fp)
 8015f68:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 8015f6c:	e0bffb17 	ldw	r2,-20(fp)
 8015f70:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
 8015f74:	e0bffe17 	ldw	r2,-8(fp)
 8015f78:	0080120e 	bge	zero,r2,8015fc4 <altera_avalon_jtag_uart_write+0x1c8>
    {
      if (flags & O_NONBLOCK)
 8015f7c:	e0bfff17 	ldw	r2,-4(fp)
 8015f80:	1090000c 	andi	r2,r2,16384
 8015f84:	10000126 	beq	r2,zero,8015f8c <altera_avalon_jtag_uart_write+0x190>
        break;
 8015f88:	00001006 	br	8015fcc <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
 8015f8c:	0001883a 	nop
 8015f90:	e0bffc17 	ldw	r2,-16(fp)
 8015f94:	10c00d17 	ldw	r3,52(r2)
 8015f98:	e0bff517 	ldw	r2,-44(fp)
 8015f9c:	1880051e 	bne	r3,r2,8015fb4 <altera_avalon_jtag_uart_write+0x1b8>
 8015fa0:	e0bffc17 	ldw	r2,-16(fp)
 8015fa4:	10c00917 	ldw	r3,36(r2)
 8015fa8:	e0bffc17 	ldw	r2,-16(fp)
 8015fac:	10800117 	ldw	r2,4(r2)
 8015fb0:	18bff736 	bltu	r3,r2,8015f90 <__alt_data_end+0xfc015f90>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
 8015fb4:	e0bffc17 	ldw	r2,-16(fp)
 8015fb8:	10800917 	ldw	r2,36(r2)
 8015fbc:	10000126 	beq	r2,zero,8015fc4 <altera_avalon_jtag_uart_write+0x1c8>
         break;
 8015fc0:	00000206 	br	8015fcc <altera_avalon_jtag_uart_write+0x1d0>
    }
  }
  while (count > 0);
 8015fc4:	e0bffe17 	ldw	r2,-8(fp)
 8015fc8:	00bf9716 	blt	zero,r2,8015e28 <__alt_data_end+0xfc015e28>
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
 8015fcc:	e0fffd17 	ldw	r3,-12(fp)
 8015fd0:	e0bff717 	ldw	r2,-36(fp)
 8015fd4:	18800426 	beq	r3,r2,8015fe8 <altera_avalon_jtag_uart_write+0x1ec>
    return ptr - start;
 8015fd8:	e0fffd17 	ldw	r3,-12(fp)
 8015fdc:	e0bff717 	ldw	r2,-36(fp)
 8015fe0:	1885c83a 	sub	r2,r3,r2
 8015fe4:	00000606 	br	8016000 <altera_avalon_jtag_uart_write+0x204>
  else if (flags & O_NONBLOCK)
 8015fe8:	e0bfff17 	ldw	r2,-4(fp)
 8015fec:	1090000c 	andi	r2,r2,16384
 8015ff0:	10000226 	beq	r2,zero,8015ffc <altera_avalon_jtag_uart_write+0x200>
    return -EWOULDBLOCK;
 8015ff4:	00bffd44 	movi	r2,-11
 8015ff8:	00000106 	br	8016000 <altera_avalon_jtag_uart_write+0x204>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
 8015ffc:	00bffec4 	movi	r2,-5
}
 8016000:	e037883a 	mov	sp,fp
 8016004:	dfc00117 	ldw	ra,4(sp)
 8016008:	df000017 	ldw	fp,0(sp)
 801600c:	dec00204 	addi	sp,sp,8
 8016010:	f800283a 	ret

08016014 <alt_up_rs232_enable_read_interrupt>:
#include "altera_up_avalon_rs232.h"
#include "altera_up_avalon_rs232_regs.h"


void alt_up_rs232_enable_read_interrupt(alt_up_rs232_dev *rs232)
{
 8016014:	defffd04 	addi	sp,sp,-12
 8016018:	df000215 	stw	fp,8(sp)
 801601c:	df000204 	addi	fp,sp,8
 8016020:	e13fff15 	stw	r4,-4(fp)
	alt_u32 ctrl_reg;
	ctrl_reg = IORD_ALT_UP_RS232_CONTROL(rs232->base); 
 8016024:	e0bfff17 	ldw	r2,-4(fp)
 8016028:	10800a17 	ldw	r2,40(r2)
 801602c:	10800104 	addi	r2,r2,4
 8016030:	10800037 	ldwio	r2,0(r2)
 8016034:	e0bffe15 	stw	r2,-8(fp)
	// set RE to 1 while maintaining other bits the same
	ctrl_reg |= ALT_UP_RS232_CONTROL_RE_MSK;
 8016038:	e0bffe17 	ldw	r2,-8(fp)
 801603c:	10800054 	ori	r2,r2,1
 8016040:	e0bffe15 	stw	r2,-8(fp)
	IOWR_ALT_UP_RS232_CONTROL(rs232->base, ctrl_reg);
 8016044:	e0bfff17 	ldw	r2,-4(fp)
 8016048:	10800a17 	ldw	r2,40(r2)
 801604c:	10800104 	addi	r2,r2,4
 8016050:	1007883a 	mov	r3,r2
 8016054:	e0bffe17 	ldw	r2,-8(fp)
 8016058:	18800035 	stwio	r2,0(r3)
}
 801605c:	e037883a 	mov	sp,fp
 8016060:	df000017 	ldw	fp,0(sp)
 8016064:	dec00104 	addi	sp,sp,4
 8016068:	f800283a 	ret

0801606c <alt_up_rs232_disable_read_interrupt>:

void alt_up_rs232_disable_read_interrupt(alt_up_rs232_dev *rs232)
{
 801606c:	defffd04 	addi	sp,sp,-12
 8016070:	df000215 	stw	fp,8(sp)
 8016074:	df000204 	addi	fp,sp,8
 8016078:	e13fff15 	stw	r4,-4(fp)
	alt_u32 ctrl_reg;
	ctrl_reg = IORD_ALT_UP_RS232_CONTROL(rs232->base); 
 801607c:	e0bfff17 	ldw	r2,-4(fp)
 8016080:	10800a17 	ldw	r2,40(r2)
 8016084:	10800104 	addi	r2,r2,4
 8016088:	10800037 	ldwio	r2,0(r2)
 801608c:	e0bffe15 	stw	r2,-8(fp)
	// set RE to 0 while maintaining other bits the same
	ctrl_reg &= ~ALT_UP_RS232_CONTROL_RE_MSK;
 8016090:	e0fffe17 	ldw	r3,-8(fp)
 8016094:	00bfff84 	movi	r2,-2
 8016098:	1884703a 	and	r2,r3,r2
 801609c:	e0bffe15 	stw	r2,-8(fp)
	IOWR_ALT_UP_RS232_CONTROL(rs232->base, ctrl_reg);
 80160a0:	e0bfff17 	ldw	r2,-4(fp)
 80160a4:	10800a17 	ldw	r2,40(r2)
 80160a8:	10800104 	addi	r2,r2,4
 80160ac:	1007883a 	mov	r3,r2
 80160b0:	e0bffe17 	ldw	r2,-8(fp)
 80160b4:	18800035 	stwio	r2,0(r3)
}
 80160b8:	e037883a 	mov	sp,fp
 80160bc:	df000017 	ldw	fp,0(sp)
 80160c0:	dec00104 	addi	sp,sp,4
 80160c4:	f800283a 	ret

080160c8 <alt_up_rs232_get_used_space_in_read_FIFO>:

unsigned alt_up_rs232_get_used_space_in_read_FIFO(alt_up_rs232_dev *rs232)
{
 80160c8:	defffd04 	addi	sp,sp,-12
 80160cc:	df000215 	stw	fp,8(sp)
 80160d0:	df000204 	addi	fp,sp,8
 80160d4:	e13fff15 	stw	r4,-4(fp)
	alt_u16 ravail = 0;
 80160d8:	e03ffe0d 	sth	zero,-8(fp)
	// we can only read the 16 bits for RAVAIL --- a read of DATA will discard the data
//	ravail = IORD_16DIRECT(IOADDR_ALT_UP_RS232_DATA(rs232->base), 2); 
	ravail = IORD_ALT_UP_RS232_RAVAIL(rs232->base); 
 80160dc:	e0bfff17 	ldw	r2,-4(fp)
 80160e0:	10800a17 	ldw	r2,40(r2)
 80160e4:	10800084 	addi	r2,r2,2
 80160e8:	1080002b 	ldhuio	r2,0(r2)
 80160ec:	10bfffcc 	andi	r2,r2,65535
 80160f0:	e0bffe0d 	sth	r2,-8(fp)
//	return ravail;
	return (ravail & ALT_UP_RS232_RAVAIL_MSK) >> ALT_UP_RS232_RAVAIL_OFST;
 80160f4:	e0bffe0b 	ldhu	r2,-8(fp)
}
 80160f8:	e037883a 	mov	sp,fp
 80160fc:	df000017 	ldw	fp,0(sp)
 8016100:	dec00104 	addi	sp,sp,4
 8016104:	f800283a 	ret

08016108 <alt_up_rs232_get_available_space_in_write_FIFO>:

unsigned alt_up_rs232_get_available_space_in_write_FIFO(alt_up_rs232_dev *rs232)
{
 8016108:	defffd04 	addi	sp,sp,-12
 801610c:	df000215 	stw	fp,8(sp)
 8016110:	df000204 	addi	fp,sp,8
 8016114:	e13fff15 	stw	r4,-4(fp)
	alt_u32 ctrl_reg;
	ctrl_reg = IORD_ALT_UP_RS232_CONTROL(rs232->base); 
 8016118:	e0bfff17 	ldw	r2,-4(fp)
 801611c:	10800a17 	ldw	r2,40(r2)
 8016120:	10800104 	addi	r2,r2,4
 8016124:	10800037 	ldwio	r2,0(r2)
 8016128:	e0bffe15 	stw	r2,-8(fp)
	return (ctrl_reg & ALT_UP_RS232_CONTROL_WSPACE_MSK) >> ALT_UP_RS232_CONTROL_WSPACE_OFST;
 801612c:	e0bffe17 	ldw	r2,-8(fp)
 8016130:	1004d43a 	srli	r2,r2,16
}
 8016134:	e037883a 	mov	sp,fp
 8016138:	df000017 	ldw	fp,0(sp)
 801613c:	dec00104 	addi	sp,sp,4
 8016140:	f800283a 	ret

08016144 <alt_up_rs232_check_parity>:

int alt_up_rs232_check_parity(alt_u32 data_reg)
{
 8016144:	defffd04 	addi	sp,sp,-12
 8016148:	df000215 	stw	fp,8(sp)
 801614c:	df000204 	addi	fp,sp,8
 8016150:	e13fff15 	stw	r4,-4(fp)
	unsigned parity_error = (data_reg & ALT_UP_RS232_DATA_PE_MSK) >> ALT_UP_RS232_DATA_PE_OFST;
 8016154:	e0bfff17 	ldw	r2,-4(fp)
 8016158:	1080800c 	andi	r2,r2,512
 801615c:	1004d27a 	srli	r2,r2,9
 8016160:	e0bffe15 	stw	r2,-8(fp)
	return (parity_error ? -1 : 0);
 8016164:	e0bffe17 	ldw	r2,-8(fp)
 8016168:	10000226 	beq	r2,zero,8016174 <alt_up_rs232_check_parity+0x30>
 801616c:	00bfffc4 	movi	r2,-1
 8016170:	00000106 	br	8016178 <alt_up_rs232_check_parity+0x34>
 8016174:	0005883a 	mov	r2,zero
}
 8016178:	e037883a 	mov	sp,fp
 801617c:	df000017 	ldw	fp,0(sp)
 8016180:	dec00104 	addi	sp,sp,4
 8016184:	f800283a 	ret

08016188 <alt_up_rs232_write_data>:

int alt_up_rs232_write_data(alt_up_rs232_dev *rs232, alt_u8 data)
{
 8016188:	defffd04 	addi	sp,sp,-12
 801618c:	df000215 	stw	fp,8(sp)
 8016190:	df000204 	addi	fp,sp,8
 8016194:	e13ffe15 	stw	r4,-8(fp)
 8016198:	2805883a 	mov	r2,r5
 801619c:	e0bfff05 	stb	r2,-4(fp)
	/*alt_u32 data_reg;
	data_reg = IORD_ALT_UP_RS232_DATA(rs232->base);*/
    
	// we can write directly without thinking about other bit fields for this
	// case ONLY, because only DATA field of the data register is writable
	IOWR_ALT_UP_RS232_DATA(rs232->base, (data>>ALT_UP_RS232_DATA_DATA_OFST) & ALT_UP_RS232_DATA_DATA_MSK);
 80161a0:	e0bffe17 	ldw	r2,-8(fp)
 80161a4:	10800a17 	ldw	r2,40(r2)
 80161a8:	1007883a 	mov	r3,r2
 80161ac:	e0bfff03 	ldbu	r2,-4(fp)
 80161b0:	18800035 	stwio	r2,0(r3)
	return 0;
 80161b4:	0005883a 	mov	r2,zero
}
 80161b8:	e037883a 	mov	sp,fp
 80161bc:	df000017 	ldw	fp,0(sp)
 80161c0:	dec00104 	addi	sp,sp,4
 80161c4:	f800283a 	ret

080161c8 <alt_up_rs232_read_data>:

int alt_up_rs232_read_data(alt_up_rs232_dev *rs232, alt_u8 *data, alt_u8 *parity_error)
{
 80161c8:	defffa04 	addi	sp,sp,-24
 80161cc:	dfc00515 	stw	ra,20(sp)
 80161d0:	df000415 	stw	fp,16(sp)
 80161d4:	df000404 	addi	fp,sp,16
 80161d8:	e13ffd15 	stw	r4,-12(fp)
 80161dc:	e17ffe15 	stw	r5,-8(fp)
 80161e0:	e1bfff15 	stw	r6,-4(fp)
	alt_u32 data_reg;
	data_reg = IORD_ALT_UP_RS232_DATA(rs232->base);
 80161e4:	e0bffd17 	ldw	r2,-12(fp)
 80161e8:	10800a17 	ldw	r2,40(r2)
 80161ec:	10800037 	ldwio	r2,0(r2)
 80161f0:	e0bffc15 	stw	r2,-16(fp)
	*data = (data_reg & ALT_UP_RS232_DATA_DATA_MSK) >> ALT_UP_RS232_DATA_DATA_OFST;
 80161f4:	e0bffc17 	ldw	r2,-16(fp)
 80161f8:	1007883a 	mov	r3,r2
 80161fc:	e0bffe17 	ldw	r2,-8(fp)
 8016200:	10c00005 	stb	r3,0(r2)
	*parity_error = alt_up_rs232_check_parity(data_reg);
 8016204:	e13ffc17 	ldw	r4,-16(fp)
 8016208:	80161440 	call	8016144 <alt_up_rs232_check_parity>
 801620c:	1007883a 	mov	r3,r2
 8016210:	e0bfff17 	ldw	r2,-4(fp)
 8016214:	10c00005 	stb	r3,0(r2)
	return (((data_reg & ALT_UP_RS232_DATA_RVALID_MSK) >> ALT_UP_RS232_DATA_RVALID_OFST) - 1);
 8016218:	e0bffc17 	ldw	r2,-16(fp)
 801621c:	10a0000c 	andi	r2,r2,32768
 8016220:	1004d3fa 	srli	r2,r2,15
 8016224:	10bfffc4 	addi	r2,r2,-1
}
 8016228:	e037883a 	mov	sp,fp
 801622c:	dfc00117 	ldw	ra,4(sp)
 8016230:	df000017 	ldw	fp,0(sp)
 8016234:	dec00204 	addi	sp,sp,8
 8016238:	f800283a 	ret

0801623c <alt_up_rs232_read_fd>:

int alt_up_rs232_read_fd (alt_fd* fd, char* ptr, int len)
{
 801623c:	defff804 	addi	sp,sp,-32
 8016240:	dfc00715 	stw	ra,28(sp)
 8016244:	df000615 	stw	fp,24(sp)
 8016248:	df000604 	addi	fp,sp,24
 801624c:	e13ffd15 	stw	r4,-12(fp)
 8016250:	e17ffe15 	stw	r5,-8(fp)
 8016254:	e1bfff15 	stw	r6,-4(fp)
	alt_up_rs232_dev *rs232 = (alt_up_rs232_dev*)fd->dev;
 8016258:	e0bffd17 	ldw	r2,-12(fp)
 801625c:	10800017 	ldw	r2,0(r2)
 8016260:	e0bffb15 	stw	r2,-20(fp)
	int count = 0;
 8016264:	e03ffa15 	stw	zero,-24(fp)
	alt_u8 parity_error;
	while(len--)
 8016268:	00000e06 	br	80162a4 <alt_up_rs232_read_fd+0x68>
	{
		if (alt_up_rs232_read_data(rs232, (alt_u8 *)ptr++, &parity_error)==0)
 801626c:	e0bffe17 	ldw	r2,-8(fp)
 8016270:	10c00044 	addi	r3,r2,1
 8016274:	e0fffe15 	stw	r3,-8(fp)
 8016278:	e0fffc04 	addi	r3,fp,-16
 801627c:	e13ffb17 	ldw	r4,-20(fp)
 8016280:	100b883a 	mov	r5,r2
 8016284:	180d883a 	mov	r6,r3
 8016288:	80161c80 	call	80161c8 <alt_up_rs232_read_data>
 801628c:	1000041e 	bne	r2,zero,80162a0 <alt_up_rs232_read_fd+0x64>
			count++;
 8016290:	e0bffa17 	ldw	r2,-24(fp)
 8016294:	10800044 	addi	r2,r2,1
 8016298:	e0bffa15 	stw	r2,-24(fp)
 801629c:	00000106 	br	80162a4 <alt_up_rs232_read_fd+0x68>
		else
			break;
 80162a0:	00000406 	br	80162b4 <alt_up_rs232_read_fd+0x78>
int alt_up_rs232_read_fd (alt_fd* fd, char* ptr, int len)
{
	alt_up_rs232_dev *rs232 = (alt_up_rs232_dev*)fd->dev;
	int count = 0;
	alt_u8 parity_error;
	while(len--)
 80162a4:	e0bfff17 	ldw	r2,-4(fp)
 80162a8:	10ffffc4 	addi	r3,r2,-1
 80162ac:	e0ffff15 	stw	r3,-4(fp)
 80162b0:	103fee1e 	bne	r2,zero,801626c <__alt_data_end+0xfc01626c>
		if (alt_up_rs232_read_data(rs232, (alt_u8 *)ptr++, &parity_error)==0)
			count++;
		else
			break;
	}
	return count;
 80162b4:	e0bffa17 	ldw	r2,-24(fp)
}
 80162b8:	e037883a 	mov	sp,fp
 80162bc:	dfc00117 	ldw	ra,4(sp)
 80162c0:	df000017 	ldw	fp,0(sp)
 80162c4:	dec00204 	addi	sp,sp,8
 80162c8:	f800283a 	ret

080162cc <alt_up_rs232_write_fd>:

int alt_up_rs232_write_fd (alt_fd* fd, const char* ptr, int len)
{
 80162cc:	defff904 	addi	sp,sp,-28
 80162d0:	dfc00615 	stw	ra,24(sp)
 80162d4:	df000515 	stw	fp,20(sp)
 80162d8:	df000504 	addi	fp,sp,20
 80162dc:	e13ffd15 	stw	r4,-12(fp)
 80162e0:	e17ffe15 	stw	r5,-8(fp)
 80162e4:	e1bfff15 	stw	r6,-4(fp)
	alt_up_rs232_dev *rs232 = (alt_up_rs232_dev*)fd->dev;
 80162e8:	e0bffd17 	ldw	r2,-12(fp)
 80162ec:	10800017 	ldw	r2,0(r2)
 80162f0:	e0bffc15 	stw	r2,-16(fp)
	int count = 0;
 80162f4:	e03ffb15 	stw	zero,-20(fp)
	while(len--)
 80162f8:	00000f06 	br	8016338 <alt_up_rs232_write_fd+0x6c>
	{
		if (alt_up_rs232_write_data(rs232, *ptr)==0)
 80162fc:	e0bffe17 	ldw	r2,-8(fp)
 8016300:	10800003 	ldbu	r2,0(r2)
 8016304:	10803fcc 	andi	r2,r2,255
 8016308:	e13ffc17 	ldw	r4,-16(fp)
 801630c:	100b883a 	mov	r5,r2
 8016310:	80161880 	call	8016188 <alt_up_rs232_write_data>
 8016314:	1000071e 	bne	r2,zero,8016334 <alt_up_rs232_write_fd+0x68>
		{
			count++;
 8016318:	e0bffb17 	ldw	r2,-20(fp)
 801631c:	10800044 	addi	r2,r2,1
 8016320:	e0bffb15 	stw	r2,-20(fp)
			ptr++;
 8016324:	e0bffe17 	ldw	r2,-8(fp)
 8016328:	10800044 	addi	r2,r2,1
 801632c:	e0bffe15 	stw	r2,-8(fp)
 8016330:	00000106 	br	8016338 <alt_up_rs232_write_fd+0x6c>
		}
		else
			break;
 8016334:	00000406 	br	8016348 <alt_up_rs232_write_fd+0x7c>

int alt_up_rs232_write_fd (alt_fd* fd, const char* ptr, int len)
{
	alt_up_rs232_dev *rs232 = (alt_up_rs232_dev*)fd->dev;
	int count = 0;
	while(len--)
 8016338:	e0bfff17 	ldw	r2,-4(fp)
 801633c:	10ffffc4 	addi	r3,r2,-1
 8016340:	e0ffff15 	stw	r3,-4(fp)
 8016344:	103fed1e 	bne	r2,zero,80162fc <__alt_data_end+0xfc0162fc>
			ptr++;
		}
		else
			break;
	}
	return count;
 8016348:	e0bffb17 	ldw	r2,-20(fp)
}
 801634c:	e037883a 	mov	sp,fp
 8016350:	dfc00117 	ldw	ra,4(sp)
 8016354:	df000017 	ldw	fp,0(sp)
 8016358:	dec00204 	addi	sp,sp,8
 801635c:	f800283a 	ret

08016360 <alt_up_rs232_open_dev>:

alt_up_rs232_dev* alt_up_rs232_open_dev(const char* name)
{
 8016360:	defffc04 	addi	sp,sp,-16
 8016364:	dfc00315 	stw	ra,12(sp)
 8016368:	df000215 	stw	fp,8(sp)
 801636c:	df000204 	addi	fp,sp,8
 8016370:	e13fff15 	stw	r4,-4(fp)
  // find the device from the device list 
  // (see altera_hal/HAL/inc/priv/alt_file.h 
  // and altera_hal/HAL/src/alt_find_dev.c 
  // for details)
  alt_up_rs232_dev *dev = (alt_up_rs232_dev*)alt_find_dev(name, &alt_dev_list);
 8016374:	e13fff17 	ldw	r4,-4(fp)
 8016378:	014200b4 	movhi	r5,2050
 801637c:	29664f04 	addi	r5,r5,-26308
 8016380:	8013bf00 	call	8013bf0 <alt_find_dev>
 8016384:	e0bffe15 	stw	r2,-8(fp)

  return dev;
 8016388:	e0bffe17 	ldw	r2,-8(fp)
}
 801638c:	e037883a 	mov	sp,fp
 8016390:	dfc00117 	ldw	ra,4(sp)
 8016394:	df000017 	ldw	fp,0(sp)
 8016398:	dec00204 	addi	sp,sp,8
 801639c:	f800283a 	ret

080163a0 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
 80163a0:	defff504 	addi	sp,sp,-44
 80163a4:	df000a15 	stw	fp,40(sp)
 80163a8:	df000a04 	addi	fp,sp,40
 80163ac:	e13ffc15 	stw	r4,-16(fp)
 80163b0:	e17ffd15 	stw	r5,-12(fp)
 80163b4:	e1bffe15 	stw	r6,-8(fp)
 80163b8:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
 80163bc:	e03ff615 	stw	zero,-40(fp)
 80163c0:	008200b4 	movhi	r2,2050
 80163c4:	10ad9004 	addi	r2,r2,-18880
 80163c8:	10800017 	ldw	r2,0(r2)
  
  if (alt_ticks_per_second ())
 80163cc:	10003f26 	beq	r2,zero,80164cc <alt_alarm_start+0x12c>
  {
    if (alarm)
 80163d0:	e0bffc17 	ldw	r2,-16(fp)
 80163d4:	10003b26 	beq	r2,zero,80164c4 <alt_alarm_start+0x124>
    {
      alarm->callback = callback;
 80163d8:	e0bffc17 	ldw	r2,-16(fp)
 80163dc:	e0fffe17 	ldw	r3,-8(fp)
 80163e0:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
 80163e4:	e0bffc17 	ldw	r2,-16(fp)
 80163e8:	e0ffff17 	ldw	r3,-4(fp)
 80163ec:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 80163f0:	0005303a 	rdctl	r2,status
 80163f4:	e0bff815 	stw	r2,-32(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 80163f8:	e0fff817 	ldw	r3,-32(fp)
 80163fc:	00bfff84 	movi	r2,-2
 8016400:	1884703a 	and	r2,r3,r2
 8016404:	1001703a 	wrctl	status,r2
  
  return context;
 8016408:	e0bff817 	ldw	r2,-32(fp)
 
      irq_context = alt_irq_disable_all ();
 801640c:	e0bff715 	stw	r2,-36(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
 8016410:	008200b4 	movhi	r2,2050
 8016414:	10ad9104 	addi	r2,r2,-18876
 8016418:	10800017 	ldw	r2,0(r2)
      
      current_nticks = alt_nticks();
 801641c:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
 8016420:	e0fffd17 	ldw	r3,-12(fp)
 8016424:	e0bff617 	ldw	r2,-40(fp)
 8016428:	1885883a 	add	r2,r3,r2
 801642c:	10c00044 	addi	r3,r2,1
 8016430:	e0bffc17 	ldw	r2,-16(fp)
 8016434:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
 8016438:	e0bffc17 	ldw	r2,-16(fp)
 801643c:	10c00217 	ldw	r3,8(r2)
 8016440:	e0bff617 	ldw	r2,-40(fp)
 8016444:	1880042e 	bgeu	r3,r2,8016458 <alt_alarm_start+0xb8>
      {
        alarm->rollover = 1;
 8016448:	e0bffc17 	ldw	r2,-16(fp)
 801644c:	00c00044 	movi	r3,1
 8016450:	10c00405 	stb	r3,16(r2)
 8016454:	00000206 	br	8016460 <alt_alarm_start+0xc0>
      }
      else
      {
        alarm->rollover = 0;
 8016458:	e0bffc17 	ldw	r2,-16(fp)
 801645c:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
 8016460:	e0fffc17 	ldw	r3,-16(fp)
 8016464:	008200b4 	movhi	r2,2050
 8016468:	10a65904 	addi	r2,r2,-26268
 801646c:	e0bff915 	stw	r2,-28(fp)
 8016470:	e0fffa15 	stw	r3,-24(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 8016474:	e0bffa17 	ldw	r2,-24(fp)
 8016478:	e0fff917 	ldw	r3,-28(fp)
 801647c:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 8016480:	e0bff917 	ldw	r2,-28(fp)
 8016484:	10c00017 	ldw	r3,0(r2)
 8016488:	e0bffa17 	ldw	r2,-24(fp)
 801648c:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 8016490:	e0bff917 	ldw	r2,-28(fp)
 8016494:	10800017 	ldw	r2,0(r2)
 8016498:	e0fffa17 	ldw	r3,-24(fp)
 801649c:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 80164a0:	e0bff917 	ldw	r2,-28(fp)
 80164a4:	e0fffa17 	ldw	r3,-24(fp)
 80164a8:	10c00015 	stw	r3,0(r2)
 80164ac:	e0bff717 	ldw	r2,-36(fp)
 80164b0:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 80164b4:	e0bffb17 	ldw	r2,-20(fp)
 80164b8:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
 80164bc:	0005883a 	mov	r2,zero
 80164c0:	00000306 	br	80164d0 <alt_alarm_start+0x130>
    }
    else
    {
      return -EINVAL;
 80164c4:	00bffa84 	movi	r2,-22
 80164c8:	00000106 	br	80164d0 <alt_alarm_start+0x130>
    }
  }
  else
  {
    return -ENOTSUP;
 80164cc:	00bfde84 	movi	r2,-134
  }
}
 80164d0:	e037883a 	mov	sp,fp
 80164d4:	df000017 	ldw	fp,0(sp)
 80164d8:	dec00104 	addi	sp,sp,4
 80164dc:	f800283a 	ret

080164e0 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
 80164e0:	deffff04 	addi	sp,sp,-4
 80164e4:	df000015 	stw	fp,0(sp)
 80164e8:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
 80164ec:	e037883a 	mov	sp,fp
 80164f0:	df000017 	ldw	fp,0(sp)
 80164f4:	dec00104 	addi	sp,sp,4
 80164f8:	f800283a 	ret

080164fc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 80164fc:	defffe04 	addi	sp,sp,-8
 8016500:	dfc00115 	stw	ra,4(sp)
 8016504:	df000015 	stw	fp,0(sp)
 8016508:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 801650c:	008200b4 	movhi	r2,2050
 8016510:	10a65404 	addi	r2,r2,-26288
 8016514:	10800017 	ldw	r2,0(r2)
 8016518:	10000526 	beq	r2,zero,8016530 <alt_get_errno+0x34>
 801651c:	008200b4 	movhi	r2,2050
 8016520:	10a65404 	addi	r2,r2,-26288
 8016524:	10800017 	ldw	r2,0(r2)
 8016528:	103ee83a 	callr	r2
 801652c:	00000206 	br	8016538 <alt_get_errno+0x3c>
 8016530:	008200b4 	movhi	r2,2050
 8016534:	10ad8804 	addi	r2,r2,-18912
}
 8016538:	e037883a 	mov	sp,fp
 801653c:	dfc00117 	ldw	ra,4(sp)
 8016540:	df000017 	ldw	fp,0(sp)
 8016544:	dec00204 	addi	sp,sp,8
 8016548:	f800283a 	ret

0801654c <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
 801654c:	defffa04 	addi	sp,sp,-24
 8016550:	dfc00515 	stw	ra,20(sp)
 8016554:	df000415 	stw	fp,16(sp)
 8016558:	df000404 	addi	fp,sp,16
 801655c:	e13ffe15 	stw	r4,-8(fp)
 8016560:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
 8016564:	e0bffe17 	ldw	r2,-8(fp)
 8016568:	10000326 	beq	r2,zero,8016578 <alt_dev_llist_insert+0x2c>
 801656c:	e0bffe17 	ldw	r2,-8(fp)
 8016570:	10800217 	ldw	r2,8(r2)
 8016574:	1000061e 	bne	r2,zero,8016590 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
 8016578:	80164fc0 	call	80164fc <alt_get_errno>
 801657c:	1007883a 	mov	r3,r2
 8016580:	00800584 	movi	r2,22
 8016584:	18800015 	stw	r2,0(r3)
    return -EINVAL;
 8016588:	00bffa84 	movi	r2,-22
 801658c:	00001306 	br	80165dc <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
 8016590:	e0bffe17 	ldw	r2,-8(fp)
 8016594:	e0ffff17 	ldw	r3,-4(fp)
 8016598:	e0fffc15 	stw	r3,-16(fp)
 801659c:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 80165a0:	e0bffd17 	ldw	r2,-12(fp)
 80165a4:	e0fffc17 	ldw	r3,-16(fp)
 80165a8:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 80165ac:	e0bffc17 	ldw	r2,-16(fp)
 80165b0:	10c00017 	ldw	r3,0(r2)
 80165b4:	e0bffd17 	ldw	r2,-12(fp)
 80165b8:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 80165bc:	e0bffc17 	ldw	r2,-16(fp)
 80165c0:	10800017 	ldw	r2,0(r2)
 80165c4:	e0fffd17 	ldw	r3,-12(fp)
 80165c8:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 80165cc:	e0bffc17 	ldw	r2,-16(fp)
 80165d0:	e0fffd17 	ldw	r3,-12(fp)
 80165d4:	10c00015 	stw	r3,0(r2)

  return 0;  
 80165d8:	0005883a 	mov	r2,zero
}
 80165dc:	e037883a 	mov	sp,fp
 80165e0:	dfc00117 	ldw	ra,4(sp)
 80165e4:	df000017 	ldw	fp,0(sp)
 80165e8:	dec00204 	addi	sp,sp,8
 80165ec:	f800283a 	ret

080165f0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 80165f0:	defffe04 	addi	sp,sp,-8
 80165f4:	dfc00115 	stw	ra,4(sp)
 80165f8:	df000015 	stw	fp,0(sp)
 80165fc:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 8016600:	008200b4 	movhi	r2,2050
 8016604:	10a65404 	addi	r2,r2,-26288
 8016608:	10800017 	ldw	r2,0(r2)
 801660c:	10000526 	beq	r2,zero,8016624 <alt_get_errno+0x34>
 8016610:	008200b4 	movhi	r2,2050
 8016614:	10a65404 	addi	r2,r2,-26288
 8016618:	10800017 	ldw	r2,0(r2)
 801661c:	103ee83a 	callr	r2
 8016620:	00000206 	br	801662c <alt_get_errno+0x3c>
 8016624:	008200b4 	movhi	r2,2050
 8016628:	10ad8804 	addi	r2,r2,-18912
}
 801662c:	e037883a 	mov	sp,fp
 8016630:	dfc00117 	ldw	ra,4(sp)
 8016634:	df000017 	ldw	fp,0(sp)
 8016638:	dec00204 	addi	sp,sp,8
 801663c:	f800283a 	ret

08016640 <alt_dma_rxchan_open>:
 *
 * The return value will be NULL on failure, and non-NULL otherwise. 
 */

alt_dma_rxchan alt_dma_rxchan_open (const char* name)
{
 8016640:	defffc04 	addi	sp,sp,-16
 8016644:	dfc00315 	stw	ra,12(sp)
 8016648:	df000215 	stw	fp,8(sp)
 801664c:	df000204 	addi	fp,sp,8
 8016650:	e13fff15 	stw	r4,-4(fp)
  alt_dma_rxchan dev;

  dev = (alt_dma_rxchan) alt_find_dev (name, &alt_dma_rxchan_list);
 8016654:	e13fff17 	ldw	r4,-4(fp)
 8016658:	d1602704 	addi	r5,gp,-32612
 801665c:	8013bf00 	call	8013bf0 <alt_find_dev>
 8016660:	e0bffe15 	stw	r2,-8(fp)

  if (!dev)
 8016664:	e0bffe17 	ldw	r2,-8(fp)
 8016668:	1000041e 	bne	r2,zero,801667c <alt_dma_rxchan_open+0x3c>
  {
    ALT_ERRNO = ENODEV;
 801666c:	80165f00 	call	80165f0 <alt_get_errno>
 8016670:	1007883a 	mov	r3,r2
 8016674:	008004c4 	movi	r2,19
 8016678:	18800015 	stw	r2,0(r3)
  }

  return dev;
 801667c:	e0bffe17 	ldw	r2,-8(fp)
}
 8016680:	e037883a 	mov	sp,fp
 8016684:	dfc00117 	ldw	ra,4(sp)
 8016688:	df000017 	ldw	fp,0(sp)
 801668c:	dec00204 	addi	sp,sp,8
 8016690:	f800283a 	ret

08016694 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
 8016694:	defffd04 	addi	sp,sp,-12
 8016698:	dfc00215 	stw	ra,8(sp)
 801669c:	df000115 	stw	fp,4(sp)
 80166a0:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 80166a4:	00820074 	movhi	r2,2049
 80166a8:	109d2804 	addi	r2,r2,29856
 80166ac:	e0bfff15 	stw	r2,-4(fp)
 80166b0:	00000606 	br	80166cc <_do_ctors+0x38>
        (*ctor) (); 
 80166b4:	e0bfff17 	ldw	r2,-4(fp)
 80166b8:	10800017 	ldw	r2,0(r2)
 80166bc:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 80166c0:	e0bfff17 	ldw	r2,-4(fp)
 80166c4:	10bfff04 	addi	r2,r2,-4
 80166c8:	e0bfff15 	stw	r2,-4(fp)
 80166cc:	e0ffff17 	ldw	r3,-4(fp)
 80166d0:	00820074 	movhi	r2,2049
 80166d4:	109d2904 	addi	r2,r2,29860
 80166d8:	18bff62e 	bgeu	r3,r2,80166b4 <__alt_data_end+0xfc0166b4>
        (*ctor) (); 
}
 80166dc:	e037883a 	mov	sp,fp
 80166e0:	dfc00117 	ldw	ra,4(sp)
 80166e4:	df000017 	ldw	fp,0(sp)
 80166e8:	dec00204 	addi	sp,sp,8
 80166ec:	f800283a 	ret

080166f0 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
 80166f0:	defffd04 	addi	sp,sp,-12
 80166f4:	dfc00215 	stw	ra,8(sp)
 80166f8:	df000115 	stw	fp,4(sp)
 80166fc:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 8016700:	00820074 	movhi	r2,2049
 8016704:	109d2804 	addi	r2,r2,29856
 8016708:	e0bfff15 	stw	r2,-4(fp)
 801670c:	00000606 	br	8016728 <_do_dtors+0x38>
        (*dtor) (); 
 8016710:	e0bfff17 	ldw	r2,-4(fp)
 8016714:	10800017 	ldw	r2,0(r2)
 8016718:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 801671c:	e0bfff17 	ldw	r2,-4(fp)
 8016720:	10bfff04 	addi	r2,r2,-4
 8016724:	e0bfff15 	stw	r2,-4(fp)
 8016728:	e0ffff17 	ldw	r3,-4(fp)
 801672c:	00820074 	movhi	r2,2049
 8016730:	109d2904 	addi	r2,r2,29860
 8016734:	18bff62e 	bgeu	r3,r2,8016710 <__alt_data_end+0xfc016710>
        (*dtor) (); 
}
 8016738:	e037883a 	mov	sp,fp
 801673c:	dfc00117 	ldw	ra,4(sp)
 8016740:	df000017 	ldw	fp,0(sp)
 8016744:	dec00204 	addi	sp,sp,8
 8016748:	f800283a 	ret

0801674c <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
 801674c:	deffff04 	addi	sp,sp,-4
 8016750:	df000015 	stw	fp,0(sp)
 8016754:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
 8016758:	e037883a 	mov	sp,fp
 801675c:	df000017 	ldw	fp,0(sp)
 8016760:	dec00104 	addi	sp,sp,4
 8016764:	f800283a 	ret

08016768 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
 8016768:	defff804 	addi	sp,sp,-32
 801676c:	dfc00715 	stw	ra,28(sp)
 8016770:	df000615 	stw	fp,24(sp)
 8016774:	dc000515 	stw	r16,20(sp)
 8016778:	df000604 	addi	fp,sp,24
 801677c:	e13ffb15 	stw	r4,-20(fp)
 8016780:	e17ffc15 	stw	r5,-16(fp)
 8016784:	e1bffd15 	stw	r6,-12(fp)
 8016788:	e1fffe15 	stw	r7,-8(fp)
  int old;

  old = open (name, flags, mode);
 801678c:	e13ffc17 	ldw	r4,-16(fp)
 8016790:	e17ffd17 	ldw	r5,-12(fp)
 8016794:	e1bffe17 	ldw	r6,-8(fp)
 8016798:	8016bb40 	call	8016bb4 <open>
 801679c:	e0bffa15 	stw	r2,-24(fp)

  if (old >= 0)
 80167a0:	e0bffa17 	ldw	r2,-24(fp)
 80167a4:	10002216 	blt	r2,zero,8016830 <alt_open_fd+0xc8>
  {
    fd->dev      = alt_fd_list[old].dev;
 80167a8:	040200b4 	movhi	r16,2050
 80167ac:	84216a04 	addi	r16,r16,-31320
 80167b0:	e0bffa17 	ldw	r2,-24(fp)
 80167b4:	1009883a 	mov	r4,r2
 80167b8:	01400304 	movi	r5,12
 80167bc:	8002f580 	call	8002f58 <__mulsi3>
 80167c0:	8085883a 	add	r2,r16,r2
 80167c4:	10c00017 	ldw	r3,0(r2)
 80167c8:	e0bffb17 	ldw	r2,-20(fp)
 80167cc:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
 80167d0:	040200b4 	movhi	r16,2050
 80167d4:	84216a04 	addi	r16,r16,-31320
 80167d8:	e0bffa17 	ldw	r2,-24(fp)
 80167dc:	1009883a 	mov	r4,r2
 80167e0:	01400304 	movi	r5,12
 80167e4:	8002f580 	call	8002f58 <__mulsi3>
 80167e8:	8085883a 	add	r2,r16,r2
 80167ec:	10800104 	addi	r2,r2,4
 80167f0:	10c00017 	ldw	r3,0(r2)
 80167f4:	e0bffb17 	ldw	r2,-20(fp)
 80167f8:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
 80167fc:	040200b4 	movhi	r16,2050
 8016800:	84216a04 	addi	r16,r16,-31320
 8016804:	e0bffa17 	ldw	r2,-24(fp)
 8016808:	1009883a 	mov	r4,r2
 801680c:	01400304 	movi	r5,12
 8016810:	8002f580 	call	8002f58 <__mulsi3>
 8016814:	8085883a 	add	r2,r16,r2
 8016818:	10800204 	addi	r2,r2,8
 801681c:	10c00017 	ldw	r3,0(r2)
 8016820:	e0bffb17 	ldw	r2,-20(fp)
 8016824:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
 8016828:	e13ffa17 	ldw	r4,-24(fp)
 801682c:	80146ac0 	call	80146ac <alt_release_fd>
  }
} 
 8016830:	e6ffff04 	addi	sp,fp,-4
 8016834:	dfc00217 	ldw	ra,8(sp)
 8016838:	df000117 	ldw	fp,4(sp)
 801683c:	dc000017 	ldw	r16,0(sp)
 8016840:	dec00304 	addi	sp,sp,12
 8016844:	f800283a 	ret

08016848 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
 8016848:	defffb04 	addi	sp,sp,-20
 801684c:	dfc00415 	stw	ra,16(sp)
 8016850:	df000315 	stw	fp,12(sp)
 8016854:	df000304 	addi	fp,sp,12
 8016858:	e13ffd15 	stw	r4,-12(fp)
 801685c:	e17ffe15 	stw	r5,-8(fp)
 8016860:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
 8016864:	010200b4 	movhi	r4,2050
 8016868:	21216d04 	addi	r4,r4,-31308
 801686c:	e17ffd17 	ldw	r5,-12(fp)
 8016870:	01800044 	movi	r6,1
 8016874:	01c07fc4 	movi	r7,511
 8016878:	80167680 	call	8016768 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
 801687c:	010200b4 	movhi	r4,2050
 8016880:	21216a04 	addi	r4,r4,-31320
 8016884:	e17ffe17 	ldw	r5,-8(fp)
 8016888:	000d883a 	mov	r6,zero
 801688c:	01c07fc4 	movi	r7,511
 8016890:	80167680 	call	8016768 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
 8016894:	010200b4 	movhi	r4,2050
 8016898:	21217004 	addi	r4,r4,-31296
 801689c:	e17fff17 	ldw	r5,-4(fp)
 80168a0:	01800044 	movi	r6,1
 80168a4:	01c07fc4 	movi	r7,511
 80168a8:	80167680 	call	8016768 <alt_open_fd>
}  
 80168ac:	e037883a 	mov	sp,fp
 80168b0:	dfc00117 	ldw	ra,4(sp)
 80168b4:	df000017 	ldw	fp,0(sp)
 80168b8:	dec00204 	addi	sp,sp,8
 80168bc:	f800283a 	ret

080168c0 <alt_irq_register>:
 */
 
int alt_irq_register (alt_u32 id, 
                      void* context, 
                      alt_isr_func handler)
{
 80168c0:	defff004 	addi	sp,sp,-64
 80168c4:	df000f15 	stw	fp,60(sp)
 80168c8:	df000f04 	addi	fp,sp,60
 80168cc:	e13ffd15 	stw	r4,-12(fp)
 80168d0:	e17ffe15 	stw	r5,-8(fp)
 80168d4:	e1bfff15 	stw	r6,-4(fp)
  int rc = -EINVAL;  
 80168d8:	00bffa84 	movi	r2,-22
 80168dc:	e0bff115 	stw	r2,-60(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
 80168e0:	e0bffd17 	ldw	r2,-12(fp)
 80168e4:	10800828 	cmpgeui	r2,r2,32
 80168e8:	10005c1e 	bne	r2,zero,8016a5c <alt_irq_register+0x19c>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 80168ec:	0005303a 	rdctl	r2,status
 80168f0:	e0bff315 	stw	r2,-52(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 80168f4:	e0fff317 	ldw	r3,-52(fp)
 80168f8:	00bfff84 	movi	r2,-2
 80168fc:	1884703a 	and	r2,r3,r2
 8016900:	1001703a 	wrctl	status,r2
  
  return context;
 8016904:	e0bff317 	ldw	r2,-52(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all ();
 8016908:	e0bff215 	stw	r2,-56(fp)

    alt_irq[id].handler = handler;
 801690c:	008200b4 	movhi	r2,2050
 8016910:	10afdd04 	addi	r2,r2,-16524
 8016914:	e0fffd17 	ldw	r3,-12(fp)
 8016918:	180690fa 	slli	r3,r3,3
 801691c:	10c5883a 	add	r2,r2,r3
 8016920:	e0ffff17 	ldw	r3,-4(fp)
 8016924:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = context;
 8016928:	008200b4 	movhi	r2,2050
 801692c:	10afdd04 	addi	r2,r2,-16524
 8016930:	e0fffd17 	ldw	r3,-12(fp)
 8016934:	180690fa 	slli	r3,r3,3
 8016938:	10c5883a 	add	r2,r2,r3
 801693c:	10800104 	addi	r2,r2,4
 8016940:	e0fffe17 	ldw	r3,-8(fp)
 8016944:	10c00015 	stw	r3,0(r2)

    rc = (handler) ? alt_irq_enable (id): alt_irq_disable (id);
 8016948:	e0bfff17 	ldw	r2,-4(fp)
 801694c:	10001f26 	beq	r2,zero,80169cc <alt_irq_register+0x10c>
 8016950:	e0bffd17 	ldw	r2,-12(fp)
 8016954:	e0bff415 	stw	r2,-48(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 8016958:	0005303a 	rdctl	r2,status
 801695c:	e0bff515 	stw	r2,-44(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 8016960:	e0fff517 	ldw	r3,-44(fp)
 8016964:	00bfff84 	movi	r2,-2
 8016968:	1884703a 	and	r2,r3,r2
 801696c:	1001703a 	wrctl	status,r2
  
  return context;
 8016970:	e0bff517 	ldw	r2,-44(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 8016974:	e0bff615 	stw	r2,-40(fp)

  alt_irq_active |= (1 << id);
 8016978:	e0bff417 	ldw	r2,-48(fp)
 801697c:	00c00044 	movi	r3,1
 8016980:	1884983a 	sll	r2,r3,r2
 8016984:	1007883a 	mov	r3,r2
 8016988:	008200b4 	movhi	r2,2050
 801698c:	10ad8f04 	addi	r2,r2,-18884
 8016990:	10800017 	ldw	r2,0(r2)
 8016994:	1886b03a 	or	r3,r3,r2
 8016998:	008200b4 	movhi	r2,2050
 801699c:	10ad8f04 	addi	r2,r2,-18884
 80169a0:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 80169a4:	008200b4 	movhi	r2,2050
 80169a8:	10ad8f04 	addi	r2,r2,-18884
 80169ac:	10800017 	ldw	r2,0(r2)
 80169b0:	100170fa 	wrctl	ienable,r2
 80169b4:	e0bff617 	ldw	r2,-40(fp)
 80169b8:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 80169bc:	e0bff717 	ldw	r2,-36(fp)
 80169c0:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 80169c4:	0005883a 	mov	r2,zero
 80169c8:	00001f06 	br	8016a48 <alt_irq_register+0x188>
 80169cc:	e0bffd17 	ldw	r2,-12(fp)
 80169d0:	e0bff815 	stw	r2,-32(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 80169d4:	0005303a 	rdctl	r2,status
 80169d8:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 80169dc:	e0fff917 	ldw	r3,-28(fp)
 80169e0:	00bfff84 	movi	r2,-2
 80169e4:	1884703a 	and	r2,r3,r2
 80169e8:	1001703a 	wrctl	status,r2
  
  return context;
 80169ec:	e0bff917 	ldw	r2,-28(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 80169f0:	e0bffa15 	stw	r2,-24(fp)

  alt_irq_active &= ~(1 << id);
 80169f4:	e0bff817 	ldw	r2,-32(fp)
 80169f8:	00c00044 	movi	r3,1
 80169fc:	1884983a 	sll	r2,r3,r2
 8016a00:	0084303a 	nor	r2,zero,r2
 8016a04:	1007883a 	mov	r3,r2
 8016a08:	008200b4 	movhi	r2,2050
 8016a0c:	10ad8f04 	addi	r2,r2,-18884
 8016a10:	10800017 	ldw	r2,0(r2)
 8016a14:	1886703a 	and	r3,r3,r2
 8016a18:	008200b4 	movhi	r2,2050
 8016a1c:	10ad8f04 	addi	r2,r2,-18884
 8016a20:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 8016a24:	008200b4 	movhi	r2,2050
 8016a28:	10ad8f04 	addi	r2,r2,-18884
 8016a2c:	10800017 	ldw	r2,0(r2)
 8016a30:	100170fa 	wrctl	ienable,r2
 8016a34:	e0bffa17 	ldw	r2,-24(fp)
 8016a38:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 8016a3c:	e0bffb17 	ldw	r2,-20(fp)
 8016a40:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 8016a44:	0005883a 	mov	r2,zero
 8016a48:	e0bff115 	stw	r2,-60(fp)
 8016a4c:	e0bff217 	ldw	r2,-56(fp)
 8016a50:	e0bffc15 	stw	r2,-16(fp)
 8016a54:	e0bffc17 	ldw	r2,-16(fp)
 8016a58:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }
  return rc; 
 8016a5c:	e0bff117 	ldw	r2,-60(fp)
}
 8016a60:	e037883a 	mov	sp,fp
 8016a64:	df000017 	ldw	fp,0(sp)
 8016a68:	dec00104 	addi	sp,sp,4
 8016a6c:	f800283a 	ret

08016a70 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 8016a70:	defffe04 	addi	sp,sp,-8
 8016a74:	dfc00115 	stw	ra,4(sp)
 8016a78:	df000015 	stw	fp,0(sp)
 8016a7c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 8016a80:	008200b4 	movhi	r2,2050
 8016a84:	10a65404 	addi	r2,r2,-26288
 8016a88:	10800017 	ldw	r2,0(r2)
 8016a8c:	10000526 	beq	r2,zero,8016aa4 <alt_get_errno+0x34>
 8016a90:	008200b4 	movhi	r2,2050
 8016a94:	10a65404 	addi	r2,r2,-26288
 8016a98:	10800017 	ldw	r2,0(r2)
 8016a9c:	103ee83a 	callr	r2
 8016aa0:	00000206 	br	8016aac <alt_get_errno+0x3c>
 8016aa4:	008200b4 	movhi	r2,2050
 8016aa8:	10ad8804 	addi	r2,r2,-18912
}
 8016aac:	e037883a 	mov	sp,fp
 8016ab0:	dfc00117 	ldw	ra,4(sp)
 8016ab4:	df000017 	ldw	fp,0(sp)
 8016ab8:	dec00204 	addi	sp,sp,8
 8016abc:	f800283a 	ret

08016ac0 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
 8016ac0:	defffb04 	addi	sp,sp,-20
 8016ac4:	dfc00415 	stw	ra,16(sp)
 8016ac8:	df000315 	stw	fp,12(sp)
 8016acc:	dc000215 	stw	r16,8(sp)
 8016ad0:	df000304 	addi	fp,sp,12
 8016ad4:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
 8016ad8:	e0bffe17 	ldw	r2,-8(fp)
 8016adc:	10800217 	ldw	r2,8(r2)
 8016ae0:	10d00034 	orhi	r3,r2,16384
 8016ae4:	e0bffe17 	ldw	r2,-8(fp)
 8016ae8:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 8016aec:	e03ffd15 	stw	zero,-12(fp)
 8016af0:	00002306 	br	8016b80 <alt_file_locked+0xc0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 8016af4:	040200b4 	movhi	r16,2050
 8016af8:	84216a04 	addi	r16,r16,-31320
 8016afc:	e0bffd17 	ldw	r2,-12(fp)
 8016b00:	1009883a 	mov	r4,r2
 8016b04:	01400304 	movi	r5,12
 8016b08:	8002f580 	call	8002f58 <__mulsi3>
 8016b0c:	8085883a 	add	r2,r16,r2
 8016b10:	10c00017 	ldw	r3,0(r2)
 8016b14:	e0bffe17 	ldw	r2,-8(fp)
 8016b18:	10800017 	ldw	r2,0(r2)
 8016b1c:	1880151e 	bne	r3,r2,8016b74 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 8016b20:	040200b4 	movhi	r16,2050
 8016b24:	84216a04 	addi	r16,r16,-31320
 8016b28:	e0bffd17 	ldw	r2,-12(fp)
 8016b2c:	1009883a 	mov	r4,r2
 8016b30:	01400304 	movi	r5,12
 8016b34:	8002f580 	call	8002f58 <__mulsi3>
 8016b38:	8085883a 	add	r2,r16,r2
 8016b3c:	10800204 	addi	r2,r2,8
 8016b40:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 8016b44:	10000b0e 	bge	r2,zero,8016b74 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
 8016b48:	e13ffd17 	ldw	r4,-12(fp)
 8016b4c:	01400304 	movi	r5,12
 8016b50:	8002f580 	call	8002f58 <__mulsi3>
 8016b54:	1007883a 	mov	r3,r2
 8016b58:	008200b4 	movhi	r2,2050
 8016b5c:	10a16a04 	addi	r2,r2,-31320
 8016b60:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 8016b64:	e0bffe17 	ldw	r2,-8(fp)
 8016b68:	18800226 	beq	r3,r2,8016b74 <alt_file_locked+0xb4>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
 8016b6c:	00bffcc4 	movi	r2,-13
 8016b70:	00000a06 	br	8016b9c <alt_file_locked+0xdc>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 8016b74:	e0bffd17 	ldw	r2,-12(fp)
 8016b78:	10800044 	addi	r2,r2,1
 8016b7c:	e0bffd15 	stw	r2,-12(fp)
 8016b80:	008200b4 	movhi	r2,2050
 8016b84:	10a65104 	addi	r2,r2,-26300
 8016b88:	10800017 	ldw	r2,0(r2)
 8016b8c:	1007883a 	mov	r3,r2
 8016b90:	e0bffd17 	ldw	r2,-12(fp)
 8016b94:	18bfd72e 	bgeu	r3,r2,8016af4 <__alt_data_end+0xfc016af4>
    }
  }
  
  /* The device is not locked */
 
  return 0;
 8016b98:	0005883a 	mov	r2,zero
}
 8016b9c:	e6ffff04 	addi	sp,fp,-4
 8016ba0:	dfc00217 	ldw	ra,8(sp)
 8016ba4:	df000117 	ldw	fp,4(sp)
 8016ba8:	dc000017 	ldw	r16,0(sp)
 8016bac:	dec00304 	addi	sp,sp,12
 8016bb0:	f800283a 	ret

08016bb4 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
 8016bb4:	defff604 	addi	sp,sp,-40
 8016bb8:	dfc00915 	stw	ra,36(sp)
 8016bbc:	df000815 	stw	fp,32(sp)
 8016bc0:	df000804 	addi	fp,sp,32
 8016bc4:	e13ffd15 	stw	r4,-12(fp)
 8016bc8:	e17ffe15 	stw	r5,-8(fp)
 8016bcc:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
 8016bd0:	00bfffc4 	movi	r2,-1
 8016bd4:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
 8016bd8:	00bffb44 	movi	r2,-19
 8016bdc:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
 8016be0:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
 8016be4:	e13ffd17 	ldw	r4,-12(fp)
 8016be8:	014200b4 	movhi	r5,2050
 8016bec:	29664f04 	addi	r5,r5,-26308
 8016bf0:	8013bf00 	call	8013bf0 <alt_find_dev>
 8016bf4:	e0bff815 	stw	r2,-32(fp)
 8016bf8:	e0bff817 	ldw	r2,-32(fp)
 8016bfc:	1000051e 	bne	r2,zero,8016c14 <open+0x60>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
 8016c00:	e13ffd17 	ldw	r4,-12(fp)
 8016c04:	8016ed00 	call	8016ed0 <alt_find_file>
 8016c08:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
 8016c0c:	00800044 	movi	r2,1
 8016c10:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
 8016c14:	e0bff817 	ldw	r2,-32(fp)
 8016c18:	10002b26 	beq	r2,zero,8016cc8 <open+0x114>
  {
    if ((index = alt_get_fd (dev)) < 0)
 8016c1c:	e13ff817 	ldw	r4,-32(fp)
 8016c20:	8016fe40 	call	8016fe4 <alt_get_fd>
 8016c24:	e0bff915 	stw	r2,-28(fp)
 8016c28:	e0bff917 	ldw	r2,-28(fp)
 8016c2c:	1000030e 	bge	r2,zero,8016c3c <open+0x88>
    {
      status = index;
 8016c30:	e0bff917 	ldw	r2,-28(fp)
 8016c34:	e0bffa15 	stw	r2,-24(fp)
 8016c38:	00002506 	br	8016cd0 <open+0x11c>
    }
    else
    {
      fd = &alt_fd_list[index];
 8016c3c:	e13ff917 	ldw	r4,-28(fp)
 8016c40:	01400304 	movi	r5,12
 8016c44:	8002f580 	call	8002f58 <__mulsi3>
 8016c48:	1007883a 	mov	r3,r2
 8016c4c:	008200b4 	movhi	r2,2050
 8016c50:	10a16a04 	addi	r2,r2,-31320
 8016c54:	1885883a 	add	r2,r3,r2
 8016c58:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
 8016c5c:	e0fffe17 	ldw	r3,-8(fp)
 8016c60:	00900034 	movhi	r2,16384
 8016c64:	10bfffc4 	addi	r2,r2,-1
 8016c68:	1886703a 	and	r3,r3,r2
 8016c6c:	e0bffc17 	ldw	r2,-16(fp)
 8016c70:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
 8016c74:	e0bffb17 	ldw	r2,-20(fp)
 8016c78:	1000051e 	bne	r2,zero,8016c90 <open+0xdc>
 8016c7c:	e13ffc17 	ldw	r4,-16(fp)
 8016c80:	8016ac00 	call	8016ac0 <alt_file_locked>
 8016c84:	e0bffa15 	stw	r2,-24(fp)
 8016c88:	e0bffa17 	ldw	r2,-24(fp)
 8016c8c:	10001016 	blt	r2,zero,8016cd0 <open+0x11c>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
 8016c90:	e0bff817 	ldw	r2,-32(fp)
 8016c94:	10800317 	ldw	r2,12(r2)
 8016c98:	10000826 	beq	r2,zero,8016cbc <open+0x108>
 8016c9c:	e0bff817 	ldw	r2,-32(fp)
 8016ca0:	10800317 	ldw	r2,12(r2)
 8016ca4:	e13ffc17 	ldw	r4,-16(fp)
 8016ca8:	e17ffd17 	ldw	r5,-12(fp)
 8016cac:	e1bffe17 	ldw	r6,-8(fp)
 8016cb0:	e1ffff17 	ldw	r7,-4(fp)
 8016cb4:	103ee83a 	callr	r2
 8016cb8:	00000106 	br	8016cc0 <open+0x10c>
 8016cbc:	0005883a 	mov	r2,zero
 8016cc0:	e0bffa15 	stw	r2,-24(fp)
 8016cc4:	00000206 	br	8016cd0 <open+0x11c>
      }
    }
  }
  else
  {
    status = -ENODEV;
 8016cc8:	00bffb44 	movi	r2,-19
 8016ccc:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
 8016cd0:	e0bffa17 	ldw	r2,-24(fp)
 8016cd4:	1000090e 	bge	r2,zero,8016cfc <open+0x148>
  {
    alt_release_fd (index);  
 8016cd8:	e13ff917 	ldw	r4,-28(fp)
 8016cdc:	80146ac0 	call	80146ac <alt_release_fd>
    ALT_ERRNO = -status;
 8016ce0:	8016a700 	call	8016a70 <alt_get_errno>
 8016ce4:	1007883a 	mov	r3,r2
 8016ce8:	e0bffa17 	ldw	r2,-24(fp)
 8016cec:	0085c83a 	sub	r2,zero,r2
 8016cf0:	18800015 	stw	r2,0(r3)
    return -1;
 8016cf4:	00bfffc4 	movi	r2,-1
 8016cf8:	00000106 	br	8016d00 <open+0x14c>
  }
  
  /* return the reference upon success */

  return index;
 8016cfc:	e0bff917 	ldw	r2,-28(fp)
}
 8016d00:	e037883a 	mov	sp,fp
 8016d04:	dfc00117 	ldw	ra,4(sp)
 8016d08:	df000017 	ldw	fp,0(sp)
 8016d0c:	dec00204 	addi	sp,sp,8
 8016d10:	f800283a 	ret

08016d14 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
 8016d14:	defffa04 	addi	sp,sp,-24
 8016d18:	df000515 	stw	fp,20(sp)
 8016d1c:	df000504 	addi	fp,sp,20
 8016d20:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 8016d24:	0005303a 	rdctl	r2,status
 8016d28:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 8016d2c:	e0fffc17 	ldw	r3,-16(fp)
 8016d30:	00bfff84 	movi	r2,-2
 8016d34:	1884703a 	and	r2,r3,r2
 8016d38:	1001703a 	wrctl	status,r2
  
  return context;
 8016d3c:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
 8016d40:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
 8016d44:	e0bfff17 	ldw	r2,-4(fp)
 8016d48:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
 8016d4c:	e0bffd17 	ldw	r2,-12(fp)
 8016d50:	10800017 	ldw	r2,0(r2)
 8016d54:	e0fffd17 	ldw	r3,-12(fp)
 8016d58:	18c00117 	ldw	r3,4(r3)
 8016d5c:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
 8016d60:	e0bffd17 	ldw	r2,-12(fp)
 8016d64:	10800117 	ldw	r2,4(r2)
 8016d68:	e0fffd17 	ldw	r3,-12(fp)
 8016d6c:	18c00017 	ldw	r3,0(r3)
 8016d70:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
 8016d74:	e0bffd17 	ldw	r2,-12(fp)
 8016d78:	e0fffd17 	ldw	r3,-12(fp)
 8016d7c:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
 8016d80:	e0bffd17 	ldw	r2,-12(fp)
 8016d84:	e0fffd17 	ldw	r3,-12(fp)
 8016d88:	10c00015 	stw	r3,0(r2)
 8016d8c:	e0bffb17 	ldw	r2,-20(fp)
 8016d90:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 8016d94:	e0bffe17 	ldw	r2,-8(fp)
 8016d98:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
 8016d9c:	e037883a 	mov	sp,fp
 8016da0:	df000017 	ldw	fp,0(sp)
 8016da4:	dec00104 	addi	sp,sp,4
 8016da8:	f800283a 	ret

08016dac <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
 8016dac:	defffb04 	addi	sp,sp,-20
 8016db0:	dfc00415 	stw	ra,16(sp)
 8016db4:	df000315 	stw	fp,12(sp)
 8016db8:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
 8016dbc:	d0a02a17 	ldw	r2,-32600(gp)
 8016dc0:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
 8016dc4:	d0a76217 	ldw	r2,-25208(gp)
 8016dc8:	10800044 	addi	r2,r2,1
 8016dcc:	d0a76215 	stw	r2,-25208(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 8016dd0:	00002e06 	br	8016e8c <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
 8016dd4:	e0bffd17 	ldw	r2,-12(fp)
 8016dd8:	10800017 	ldw	r2,0(r2)
 8016ddc:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
 8016de0:	e0bffd17 	ldw	r2,-12(fp)
 8016de4:	10800403 	ldbu	r2,16(r2)
 8016de8:	10803fcc 	andi	r2,r2,255
 8016dec:	10000426 	beq	r2,zero,8016e00 <alt_tick+0x54>
 8016df0:	d0a76217 	ldw	r2,-25208(gp)
 8016df4:	1000021e 	bne	r2,zero,8016e00 <alt_tick+0x54>
    {
      alarm->rollover = 0;
 8016df8:	e0bffd17 	ldw	r2,-12(fp)
 8016dfc:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
 8016e00:	e0bffd17 	ldw	r2,-12(fp)
 8016e04:	10800217 	ldw	r2,8(r2)
 8016e08:	d0e76217 	ldw	r3,-25208(gp)
 8016e0c:	18801d36 	bltu	r3,r2,8016e84 <alt_tick+0xd8>
 8016e10:	e0bffd17 	ldw	r2,-12(fp)
 8016e14:	10800403 	ldbu	r2,16(r2)
 8016e18:	10803fcc 	andi	r2,r2,255
 8016e1c:	1000191e 	bne	r2,zero,8016e84 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
 8016e20:	e0bffd17 	ldw	r2,-12(fp)
 8016e24:	10800317 	ldw	r2,12(r2)
 8016e28:	e0fffd17 	ldw	r3,-12(fp)
 8016e2c:	18c00517 	ldw	r3,20(r3)
 8016e30:	1809883a 	mov	r4,r3
 8016e34:	103ee83a 	callr	r2
 8016e38:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
 8016e3c:	e0bfff17 	ldw	r2,-4(fp)
 8016e40:	1000031e 	bne	r2,zero,8016e50 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
 8016e44:	e13ffd17 	ldw	r4,-12(fp)
 8016e48:	8016d140 	call	8016d14 <alt_alarm_stop>
 8016e4c:	00000d06 	br	8016e84 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
 8016e50:	e0bffd17 	ldw	r2,-12(fp)
 8016e54:	10c00217 	ldw	r3,8(r2)
 8016e58:	e0bfff17 	ldw	r2,-4(fp)
 8016e5c:	1887883a 	add	r3,r3,r2
 8016e60:	e0bffd17 	ldw	r2,-12(fp)
 8016e64:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
 8016e68:	e0bffd17 	ldw	r2,-12(fp)
 8016e6c:	10c00217 	ldw	r3,8(r2)
 8016e70:	d0a76217 	ldw	r2,-25208(gp)
 8016e74:	1880032e 	bgeu	r3,r2,8016e84 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
 8016e78:	e0bffd17 	ldw	r2,-12(fp)
 8016e7c:	00c00044 	movi	r3,1
 8016e80:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
 8016e84:	e0bffe17 	ldw	r2,-8(fp)
 8016e88:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 8016e8c:	e0fffd17 	ldw	r3,-12(fp)
 8016e90:	d0a02a04 	addi	r2,gp,-32600
 8016e94:	18bfcf1e 	bne	r3,r2,8016dd4 <__alt_data_end+0xfc016dd4>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
 8016e98:	0001883a 	nop
}
 8016e9c:	e037883a 	mov	sp,fp
 8016ea0:	dfc00117 	ldw	ra,4(sp)
 8016ea4:	df000017 	ldw	fp,0(sp)
 8016ea8:	dec00204 	addi	sp,sp,8
 8016eac:	f800283a 	ret

08016eb0 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
 8016eb0:	deffff04 	addi	sp,sp,-4
 8016eb4:	df000015 	stw	fp,0(sp)
 8016eb8:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
 8016ebc:	000170fa 	wrctl	ienable,zero
}
 8016ec0:	e037883a 	mov	sp,fp
 8016ec4:	df000017 	ldw	fp,0(sp)
 8016ec8:	dec00104 	addi	sp,sp,4
 8016ecc:	f800283a 	ret

08016ed0 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
 8016ed0:	defffb04 	addi	sp,sp,-20
 8016ed4:	dfc00415 	stw	ra,16(sp)
 8016ed8:	df000315 	stw	fp,12(sp)
 8016edc:	df000304 	addi	fp,sp,12
 8016ee0:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
 8016ee4:	008200b4 	movhi	r2,2050
 8016ee8:	10a64d04 	addi	r2,r2,-26316
 8016eec:	10800017 	ldw	r2,0(r2)
 8016ef0:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 8016ef4:	00003106 	br	8016fbc <alt_find_file+0xec>
  {
    len = strlen(next->name);
 8016ef8:	e0bffd17 	ldw	r2,-12(fp)
 8016efc:	10800217 	ldw	r2,8(r2)
 8016f00:	1009883a 	mov	r4,r2
 8016f04:	80045e40 	call	80045e4 <strlen>
 8016f08:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
 8016f0c:	e0bffd17 	ldw	r2,-12(fp)
 8016f10:	10c00217 	ldw	r3,8(r2)
 8016f14:	e0bffe17 	ldw	r2,-8(fp)
 8016f18:	10bfffc4 	addi	r2,r2,-1
 8016f1c:	1885883a 	add	r2,r3,r2
 8016f20:	10800003 	ldbu	r2,0(r2)
 8016f24:	10803fcc 	andi	r2,r2,255
 8016f28:	1080201c 	xori	r2,r2,128
 8016f2c:	10bfe004 	addi	r2,r2,-128
 8016f30:	10800bd8 	cmpnei	r2,r2,47
 8016f34:	1000031e 	bne	r2,zero,8016f44 <alt_find_file+0x74>
    {
      len -= 1;
 8016f38:	e0bffe17 	ldw	r2,-8(fp)
 8016f3c:	10bfffc4 	addi	r2,r2,-1
 8016f40:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 8016f44:	e0bffe17 	ldw	r2,-8(fp)
 8016f48:	e0ffff17 	ldw	r3,-4(fp)
 8016f4c:	1885883a 	add	r2,r3,r2
 8016f50:	10800003 	ldbu	r2,0(r2)
 8016f54:	10803fcc 	andi	r2,r2,255
 8016f58:	1080201c 	xori	r2,r2,128
 8016f5c:	10bfe004 	addi	r2,r2,-128
 8016f60:	10800be0 	cmpeqi	r2,r2,47
 8016f64:	1000081e 	bne	r2,zero,8016f88 <alt_find_file+0xb8>
 8016f68:	e0bffe17 	ldw	r2,-8(fp)
 8016f6c:	e0ffff17 	ldw	r3,-4(fp)
 8016f70:	1885883a 	add	r2,r3,r2
 8016f74:	10800003 	ldbu	r2,0(r2)
 8016f78:	10803fcc 	andi	r2,r2,255
 8016f7c:	1080201c 	xori	r2,r2,128
 8016f80:	10bfe004 	addi	r2,r2,-128
 8016f84:	10000a1e 	bne	r2,zero,8016fb0 <alt_find_file+0xe0>
        !memcmp (next->name, name, len))
 8016f88:	e0bffd17 	ldw	r2,-12(fp)
 8016f8c:	10c00217 	ldw	r3,8(r2)
 8016f90:	e0bffe17 	ldw	r2,-8(fp)
 8016f94:	1809883a 	mov	r4,r3
 8016f98:	e17fff17 	ldw	r5,-4(fp)
 8016f9c:	100d883a 	mov	r6,r2
 8016fa0:	80171680 	call	8017168 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 8016fa4:	1000021e 	bne	r2,zero,8016fb0 <alt_find_file+0xe0>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
 8016fa8:	e0bffd17 	ldw	r2,-12(fp)
 8016fac:	00000806 	br	8016fd0 <alt_find_file+0x100>
    }
    next = (alt_dev*) next->llist.next;
 8016fb0:	e0bffd17 	ldw	r2,-12(fp)
 8016fb4:	10800017 	ldw	r2,0(r2)
 8016fb8:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 8016fbc:	e0fffd17 	ldw	r3,-12(fp)
 8016fc0:	008200b4 	movhi	r2,2050
 8016fc4:	10a64d04 	addi	r2,r2,-26316
 8016fc8:	18bfcb1e 	bne	r3,r2,8016ef8 <__alt_data_end+0xfc016ef8>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
 8016fcc:	0005883a 	mov	r2,zero
}
 8016fd0:	e037883a 	mov	sp,fp
 8016fd4:	dfc00117 	ldw	ra,4(sp)
 8016fd8:	df000017 	ldw	fp,0(sp)
 8016fdc:	dec00204 	addi	sp,sp,8
 8016fe0:	f800283a 	ret

08016fe4 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
 8016fe4:	defffa04 	addi	sp,sp,-24
 8016fe8:	dfc00515 	stw	ra,20(sp)
 8016fec:	df000415 	stw	fp,16(sp)
 8016ff0:	dc000315 	stw	r16,12(sp)
 8016ff4:	df000404 	addi	fp,sp,16
 8016ff8:	e13ffe15 	stw	r4,-8(fp)
  alt_32 i;
  int rc = -EMFILE;
 8016ffc:	00bffa04 	movi	r2,-24
 8017000:	e0bffd15 	stw	r2,-12(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 8017004:	e03ffc15 	stw	zero,-16(fp)
 8017008:	00002106 	br	8017090 <alt_get_fd+0xac>
  {
    if (!alt_fd_list[i].dev)
 801700c:	040200b4 	movhi	r16,2050
 8017010:	84216a04 	addi	r16,r16,-31320
 8017014:	e0bffc17 	ldw	r2,-16(fp)
 8017018:	1009883a 	mov	r4,r2
 801701c:	01400304 	movi	r5,12
 8017020:	8002f580 	call	8002f58 <__mulsi3>
 8017024:	8085883a 	add	r2,r16,r2
 8017028:	10800017 	ldw	r2,0(r2)
 801702c:	1000151e 	bne	r2,zero,8017084 <alt_get_fd+0xa0>
    {
      alt_fd_list[i].dev = dev;
 8017030:	040200b4 	movhi	r16,2050
 8017034:	84216a04 	addi	r16,r16,-31320
 8017038:	e0bffc17 	ldw	r2,-16(fp)
 801703c:	1009883a 	mov	r4,r2
 8017040:	01400304 	movi	r5,12
 8017044:	8002f580 	call	8002f58 <__mulsi3>
 8017048:	8085883a 	add	r2,r16,r2
 801704c:	e0fffe17 	ldw	r3,-8(fp)
 8017050:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
 8017054:	008200b4 	movhi	r2,2050
 8017058:	10a65104 	addi	r2,r2,-26300
 801705c:	10c00017 	ldw	r3,0(r2)
 8017060:	e0bffc17 	ldw	r2,-16(fp)
 8017064:	1880040e 	bge	r3,r2,8017078 <alt_get_fd+0x94>
      {
        alt_max_fd = i;
 8017068:	008200b4 	movhi	r2,2050
 801706c:	10a65104 	addi	r2,r2,-26300
 8017070:	e0fffc17 	ldw	r3,-16(fp)
 8017074:	10c00015 	stw	r3,0(r2)
      }
      rc = i;
 8017078:	e0bffc17 	ldw	r2,-16(fp)
 801707c:	e0bffd15 	stw	r2,-12(fp)
      goto alt_get_fd_exit;
 8017080:	00000606 	br	801709c <alt_get_fd+0xb8>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 8017084:	e0bffc17 	ldw	r2,-16(fp)
 8017088:	10800044 	addi	r2,r2,1
 801708c:	e0bffc15 	stw	r2,-16(fp)
 8017090:	e0bffc17 	ldw	r2,-16(fp)
 8017094:	10800810 	cmplti	r2,r2,32
 8017098:	103fdc1e 	bne	r2,zero,801700c <__alt_data_end+0xfc01700c>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
 801709c:	e0bffd17 	ldw	r2,-12(fp)
}
 80170a0:	e6ffff04 	addi	sp,fp,-4
 80170a4:	dfc00217 	ldw	ra,8(sp)
 80170a8:	df000117 	ldw	fp,4(sp)
 80170ac:	dc000017 	ldw	r16,0(sp)
 80170b0:	dec00304 	addi	sp,sp,12
 80170b4:	f800283a 	ret

080170b8 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
 80170b8:	defffe04 	addi	sp,sp,-8
 80170bc:	df000115 	stw	fp,4(sp)
 80170c0:	df000104 	addi	fp,sp,4
 80170c4:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
 80170c8:	e0bfff17 	ldw	r2,-4(fp)
 80170cc:	10bffe84 	addi	r2,r2,-6
 80170d0:	10c00428 	cmpgeui	r3,r2,16
 80170d4:	18001a1e 	bne	r3,zero,8017140 <alt_exception_cause_generated_bad_addr+0x88>
 80170d8:	100690ba 	slli	r3,r2,2
 80170dc:	00820074 	movhi	r2,2049
 80170e0:	109c3c04 	addi	r2,r2,28912
 80170e4:	1885883a 	add	r2,r3,r2
 80170e8:	10800017 	ldw	r2,0(r2)
 80170ec:	1000683a 	jmp	r2
 80170f0:	08017130 	cmpltui	zero,at,1476
 80170f4:	08017130 	cmpltui	zero,at,1476
 80170f8:	08017140 	call	801714 <__reset-0x77fe8ec>
 80170fc:	08017140 	call	801714 <__reset-0x77fe8ec>
 8017100:	08017140 	call	801714 <__reset-0x77fe8ec>
 8017104:	08017130 	cmpltui	zero,at,1476
 8017108:	08017138 	rdprs	zero,at,1476
 801710c:	08017140 	call	801714 <__reset-0x77fe8ec>
 8017110:	08017130 	cmpltui	zero,at,1476
 8017114:	08017130 	cmpltui	zero,at,1476
 8017118:	08017140 	call	801714 <__reset-0x77fe8ec>
 801711c:	08017130 	cmpltui	zero,at,1476
 8017120:	08017138 	rdprs	zero,at,1476
 8017124:	08017140 	call	801714 <__reset-0x77fe8ec>
 8017128:	08017140 	call	801714 <__reset-0x77fe8ec>
 801712c:	08017130 	cmpltui	zero,at,1476
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
 8017130:	00800044 	movi	r2,1
 8017134:	00000306 	br	8017144 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
 8017138:	0005883a 	mov	r2,zero
 801713c:	00000106 	br	8017144 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
 8017140:	0005883a 	mov	r2,zero
  }
}
 8017144:	e037883a 	mov	sp,fp
 8017148:	df000017 	ldw	fp,0(sp)
 801714c:	dec00104 	addi	sp,sp,4
 8017150:	f800283a 	ret

08017154 <atexit>:
 8017154:	200b883a 	mov	r5,r4
 8017158:	000d883a 	mov	r6,zero
 801715c:	0009883a 	mov	r4,zero
 8017160:	000f883a 	mov	r7,zero
 8017164:	801734c1 	jmpi	801734c <__register_exitproc>

08017168 <memcmp>:
 8017168:	01c000c4 	movi	r7,3
 801716c:	3980192e 	bgeu	r7,r6,80171d4 <memcmp+0x6c>
 8017170:	2144b03a 	or	r2,r4,r5
 8017174:	11c4703a 	and	r2,r2,r7
 8017178:	10000f26 	beq	r2,zero,80171b8 <memcmp+0x50>
 801717c:	20800003 	ldbu	r2,0(r4)
 8017180:	28c00003 	ldbu	r3,0(r5)
 8017184:	10c0151e 	bne	r2,r3,80171dc <memcmp+0x74>
 8017188:	31bfff84 	addi	r6,r6,-2
 801718c:	01ffffc4 	movi	r7,-1
 8017190:	00000406 	br	80171a4 <memcmp+0x3c>
 8017194:	20800003 	ldbu	r2,0(r4)
 8017198:	28c00003 	ldbu	r3,0(r5)
 801719c:	31bfffc4 	addi	r6,r6,-1
 80171a0:	10c00e1e 	bne	r2,r3,80171dc <memcmp+0x74>
 80171a4:	21000044 	addi	r4,r4,1
 80171a8:	29400044 	addi	r5,r5,1
 80171ac:	31fff91e 	bne	r6,r7,8017194 <__alt_data_end+0xfc017194>
 80171b0:	0005883a 	mov	r2,zero
 80171b4:	f800283a 	ret
 80171b8:	20c00017 	ldw	r3,0(r4)
 80171bc:	28800017 	ldw	r2,0(r5)
 80171c0:	1880041e 	bne	r3,r2,80171d4 <memcmp+0x6c>
 80171c4:	31bfff04 	addi	r6,r6,-4
 80171c8:	21000104 	addi	r4,r4,4
 80171cc:	29400104 	addi	r5,r5,4
 80171d0:	39bff936 	bltu	r7,r6,80171b8 <__alt_data_end+0xfc0171b8>
 80171d4:	303fe91e 	bne	r6,zero,801717c <__alt_data_end+0xfc01717c>
 80171d8:	003ff506 	br	80171b0 <__alt_data_end+0xfc0171b0>
 80171dc:	10c5c83a 	sub	r2,r2,r3
 80171e0:	f800283a 	ret

080171e4 <_putc_r>:
 80171e4:	defffc04 	addi	sp,sp,-16
 80171e8:	dc000215 	stw	r16,8(sp)
 80171ec:	dfc00315 	stw	ra,12(sp)
 80171f0:	2021883a 	mov	r16,r4
 80171f4:	20000226 	beq	r4,zero,8017200 <_putc_r+0x1c>
 80171f8:	20800e17 	ldw	r2,56(r4)
 80171fc:	10001b26 	beq	r2,zero,801726c <_putc_r+0x88>
 8017200:	30800217 	ldw	r2,8(r6)
 8017204:	10bfffc4 	addi	r2,r2,-1
 8017208:	30800215 	stw	r2,8(r6)
 801720c:	10000a16 	blt	r2,zero,8017238 <_putc_r+0x54>
 8017210:	30800017 	ldw	r2,0(r6)
 8017214:	11400005 	stb	r5,0(r2)
 8017218:	30800017 	ldw	r2,0(r6)
 801721c:	10c00044 	addi	r3,r2,1
 8017220:	30c00015 	stw	r3,0(r6)
 8017224:	10800003 	ldbu	r2,0(r2)
 8017228:	dfc00317 	ldw	ra,12(sp)
 801722c:	dc000217 	ldw	r16,8(sp)
 8017230:	dec00404 	addi	sp,sp,16
 8017234:	f800283a 	ret
 8017238:	30c00617 	ldw	r3,24(r6)
 801723c:	10c00616 	blt	r2,r3,8017258 <_putc_r+0x74>
 8017240:	30800017 	ldw	r2,0(r6)
 8017244:	00c00284 	movi	r3,10
 8017248:	11400005 	stb	r5,0(r2)
 801724c:	30800017 	ldw	r2,0(r6)
 8017250:	11400003 	ldbu	r5,0(r2)
 8017254:	28fff11e 	bne	r5,r3,801721c <__alt_data_end+0xfc01721c>
 8017258:	8009883a 	mov	r4,r16
 801725c:	dfc00317 	ldw	ra,12(sp)
 8017260:	dc000217 	ldw	r16,8(sp)
 8017264:	dec00404 	addi	sp,sp,16
 8017268:	80100d01 	jmpi	80100d0 <__swbuf_r>
 801726c:	d9400015 	stw	r5,0(sp)
 8017270:	d9800115 	stw	r6,4(sp)
 8017274:	800a9dc0 	call	800a9dc <__sinit>
 8017278:	d9800117 	ldw	r6,4(sp)
 801727c:	d9400017 	ldw	r5,0(sp)
 8017280:	003fdf06 	br	8017200 <__alt_data_end+0xfc017200>

08017284 <putc>:
 8017284:	defffc04 	addi	sp,sp,-16
 8017288:	dc400115 	stw	r17,4(sp)
 801728c:	044200b4 	movhi	r17,2050
 8017290:	8c664804 	addi	r17,r17,-26336
 8017294:	dc800215 	stw	r18,8(sp)
 8017298:	2025883a 	mov	r18,r4
 801729c:	89000017 	ldw	r4,0(r17)
 80172a0:	dc000015 	stw	r16,0(sp)
 80172a4:	dfc00315 	stw	ra,12(sp)
 80172a8:	2821883a 	mov	r16,r5
 80172ac:	20000226 	beq	r4,zero,80172b8 <putc+0x34>
 80172b0:	20c00e17 	ldw	r3,56(r4)
 80172b4:	18001a26 	beq	r3,zero,8017320 <putc+0x9c>
 80172b8:	80800217 	ldw	r2,8(r16)
 80172bc:	10bfffc4 	addi	r2,r2,-1
 80172c0:	80800215 	stw	r2,8(r16)
 80172c4:	10000c16 	blt	r2,zero,80172f8 <putc+0x74>
 80172c8:	80800017 	ldw	r2,0(r16)
 80172cc:	14800005 	stb	r18,0(r2)
 80172d0:	80800017 	ldw	r2,0(r16)
 80172d4:	10c00044 	addi	r3,r2,1
 80172d8:	80c00015 	stw	r3,0(r16)
 80172dc:	10800003 	ldbu	r2,0(r2)
 80172e0:	dfc00317 	ldw	ra,12(sp)
 80172e4:	dc800217 	ldw	r18,8(sp)
 80172e8:	dc400117 	ldw	r17,4(sp)
 80172ec:	dc000017 	ldw	r16,0(sp)
 80172f0:	dec00404 	addi	sp,sp,16
 80172f4:	f800283a 	ret
 80172f8:	80c00617 	ldw	r3,24(r16)
 80172fc:	10c00a16 	blt	r2,r3,8017328 <putc+0xa4>
 8017300:	80800017 	ldw	r2,0(r16)
 8017304:	00c00284 	movi	r3,10
 8017308:	14800005 	stb	r18,0(r2)
 801730c:	80800017 	ldw	r2,0(r16)
 8017310:	11400003 	ldbu	r5,0(r2)
 8017314:	28ffef1e 	bne	r5,r3,80172d4 <__alt_data_end+0xfc0172d4>
 8017318:	89000017 	ldw	r4,0(r17)
 801731c:	00000406 	br	8017330 <putc+0xac>
 8017320:	800a9dc0 	call	800a9dc <__sinit>
 8017324:	003fe406 	br	80172b8 <__alt_data_end+0xfc0172b8>
 8017328:	89000017 	ldw	r4,0(r17)
 801732c:	900b883a 	mov	r5,r18
 8017330:	800d883a 	mov	r6,r16
 8017334:	dfc00317 	ldw	ra,12(sp)
 8017338:	dc800217 	ldw	r18,8(sp)
 801733c:	dc400117 	ldw	r17,4(sp)
 8017340:	dc000017 	ldw	r16,0(sp)
 8017344:	dec00404 	addi	sp,sp,16
 8017348:	80100d01 	jmpi	80100d0 <__swbuf_r>

0801734c <__register_exitproc>:
 801734c:	008200b4 	movhi	r2,2050
 8017350:	defffa04 	addi	sp,sp,-24
 8017354:	10a64704 	addi	r2,r2,-26340
 8017358:	dc000315 	stw	r16,12(sp)
 801735c:	14000017 	ldw	r16,0(r2)
 8017360:	dc400415 	stw	r17,16(sp)
 8017364:	dfc00515 	stw	ra,20(sp)
 8017368:	80805217 	ldw	r2,328(r16)
 801736c:	2023883a 	mov	r17,r4
 8017370:	10003626 	beq	r2,zero,801744c <__register_exitproc+0x100>
 8017374:	10c00117 	ldw	r3,4(r2)
 8017378:	010007c4 	movi	r4,31
 801737c:	20c00e16 	blt	r4,r3,80173b8 <__register_exitproc+0x6c>
 8017380:	1a400044 	addi	r9,r3,1
 8017384:	8800211e 	bne	r17,zero,801740c <__register_exitproc+0xc0>
 8017388:	18c00084 	addi	r3,r3,2
 801738c:	18c7883a 	add	r3,r3,r3
 8017390:	18c7883a 	add	r3,r3,r3
 8017394:	12400115 	stw	r9,4(r2)
 8017398:	10c7883a 	add	r3,r2,r3
 801739c:	19400015 	stw	r5,0(r3)
 80173a0:	0005883a 	mov	r2,zero
 80173a4:	dfc00517 	ldw	ra,20(sp)
 80173a8:	dc400417 	ldw	r17,16(sp)
 80173ac:	dc000317 	ldw	r16,12(sp)
 80173b0:	dec00604 	addi	sp,sp,24
 80173b4:	f800283a 	ret
 80173b8:	00820034 	movhi	r2,2048
 80173bc:	108d3c04 	addi	r2,r2,13552
 80173c0:	10002526 	beq	r2,zero,8017458 <__register_exitproc+0x10c>
 80173c4:	01006404 	movi	r4,400
 80173c8:	d9400015 	stw	r5,0(sp)
 80173cc:	d9800115 	stw	r6,4(sp)
 80173d0:	d9c00215 	stw	r7,8(sp)
 80173d4:	80034f00 	call	80034f0 <malloc>
 80173d8:	d9400017 	ldw	r5,0(sp)
 80173dc:	d9800117 	ldw	r6,4(sp)
 80173e0:	d9c00217 	ldw	r7,8(sp)
 80173e4:	10001c26 	beq	r2,zero,8017458 <__register_exitproc+0x10c>
 80173e8:	80c05217 	ldw	r3,328(r16)
 80173ec:	10000115 	stw	zero,4(r2)
 80173f0:	02400044 	movi	r9,1
 80173f4:	10c00015 	stw	r3,0(r2)
 80173f8:	80805215 	stw	r2,328(r16)
 80173fc:	10006215 	stw	zero,392(r2)
 8017400:	10006315 	stw	zero,396(r2)
 8017404:	0007883a 	mov	r3,zero
 8017408:	883fdf26 	beq	r17,zero,8017388 <__alt_data_end+0xfc017388>
 801740c:	18d1883a 	add	r8,r3,r3
 8017410:	4211883a 	add	r8,r8,r8
 8017414:	1211883a 	add	r8,r2,r8
 8017418:	41802215 	stw	r6,136(r8)
 801741c:	01000044 	movi	r4,1
 8017420:	11806217 	ldw	r6,392(r2)
 8017424:	20c8983a 	sll	r4,r4,r3
 8017428:	310cb03a 	or	r6,r6,r4
 801742c:	11806215 	stw	r6,392(r2)
 8017430:	41c04215 	stw	r7,264(r8)
 8017434:	01800084 	movi	r6,2
 8017438:	89bfd31e 	bne	r17,r6,8017388 <__alt_data_end+0xfc017388>
 801743c:	11806317 	ldw	r6,396(r2)
 8017440:	3108b03a 	or	r4,r6,r4
 8017444:	11006315 	stw	r4,396(r2)
 8017448:	003fcf06 	br	8017388 <__alt_data_end+0xfc017388>
 801744c:	80805304 	addi	r2,r16,332
 8017450:	80805215 	stw	r2,328(r16)
 8017454:	003fc706 	br	8017374 <__alt_data_end+0xfc017374>
 8017458:	00bfffc4 	movi	r2,-1
 801745c:	003fd106 	br	80173a4 <__alt_data_end+0xfc0173a4>
 8017460:	0201ffff 	0x201ffff
 8017464:	ffff0000 	call	ffff000 <__alt_data_end+0x3fff000>
 8017468:	00000201 	jmpi	20 <__reset-0x7ffffe0>
 801746c:	010d0bff 	0x10d0bff
 8017470:	01010002 	0x1010002
	...
 801747c:	010d0bff 	0x10d0bff
 8017480:	01010004 	movi	r4,1024
 8017484:	00000100 	call	10 <__reset-0x7fffff0>
 8017488:	00000000 	call	0 <__reset-0x8000000>
 801748c:	01110bff 	0x1110bff
 8017490:	01010004 	movi	r4,1024
 8017494:	7f000105 	stb	fp,4(r15)
 8017498:	007d0000 	call	7d000 <__reset-0x7f83000>
	...
