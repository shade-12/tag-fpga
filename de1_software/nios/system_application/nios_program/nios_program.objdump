
nios_program.elf:     file format elf32-littlenios2
nios_program.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x08000230

Program Header:
    LOAD off    0x00001000 vaddr 0x08000000 paddr 0x08000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x08000020 paddr 0x08000020 align 2**12
         filesz 0x0001e5ac memsz 0x0001e5ac flags r-x
    LOAD off    0x0001f5cc vaddr 0x0801e5cc paddr 0x08020294 align 2**12
         filesz 0x00001cc8 memsz 0x00001cc8 flags rw-
    LOAD off    0x00021f5c vaddr 0x08021f5c paddr 0x08021f5c align 2**12
         filesz 0x00000000 memsz 0x00000b90 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  08000000  08000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000210  08000020  08000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0001d68c  08000230  08000230  00001230  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000d10  0801d8bc  0801d8bc  0001e8bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001cc8  0801e5cc  08020294  0001f5cc  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000b90  08021f5c  08021f5c  00021f5c  2**2
                  ALLOC, SMALL_DATA
  6 .sdram_controller 00000000  08022aec  08022aec  00021294  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  00021294  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00001670  00000000  00000000  000212b8  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   00041aaf  00000000  00000000  00022928  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00010ad1  00000000  00000000  000643d7  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   00014cb2  00000000  00000000  00074ea8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  00004068  00000000  00000000  00089b5c  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00007aa2  00000000  00000000  0008dbc4  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    000281e1  00000000  00000000  00095666  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000010  00000000  00000000  000bd848  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 000021c8  00000000  00000000  000bd858  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  000c5dda  2**0
                  CONTENTS, READONLY
 18 .cpu          0000000c  00000000  00000000  000c5ddd  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  000c5de9  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  000c5dea  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  000c5deb  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  000c5def  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  000c5df3  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   0000000b  00000000  00000000  000c5df7  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    0000000b  00000000  00000000  000c5e02  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   0000000b  00000000  00000000  000c5e0d  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 0000000f  00000000  00000000  000c5e18  2**0
                  CONTENTS, READONLY
 28 .quartus_project_dir 0000001d  00000000  00000000  000c5e27  2**0
                  CONTENTS, READONLY
 29 .jdi          00007b07  00000000  00000000  000c5e44  2**0
                  CONTENTS, READONLY
 30 .sopcinfo     002dcdb0  00000000  00000000  000cd94b  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
08000000 l    d  .entry	00000000 .entry
08000020 l    d  .exceptions	00000000 .exceptions
08000230 l    d  .text	00000000 .text
0801d8bc l    d  .rodata	00000000 .rodata
0801e5cc l    d  .rwdata	00000000 .rwdata
08021f5c l    d  .bss	00000000 .bss
08022aec l    d  .sdram_controller	00000000 .sdram_controller
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 D:/tag2/de1_software/nios/system_application/nios_program_bsp//obj/HAL/src/crt0.o
08000268 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 BTUart.cpp
00000000 l    df *ABS*	00000000 WiFiUart.cpp
00000000 l    df *ABS*	00000000 dma.cpp
08000d18 l     F .text	00000024 alt_dma_txchan_close
08000d3c l     F .text	00000068 alt_dma_txchan_send
08000da4 l     F .text	00000058 alt_dma_txchan_ioctl
00000000 l    df *ABS*	00000000 main.cpp
00000000 l    df *ABS*	00000000 wifi_task.cpp
080015bc l     F .text	000000b0 _Z41__static_initialization_and_destruction_0ii
0800166c l     F .text	00000030 _GLOBAL__sub_I_WiFi_UART
0800169c l     F .text	00000030 _GLOBAL__sub_D_WiFi_UART
00000000 l    df *ABS*	00000000 eh_personality.cc
080016cc l     F .text	00000058 _ZL12read_sleb128PKhPl
08001724 l     F .text	00000088 _ZL16get_adjusted_ptrPKSt9type_infoS1_PPv
080017ac l     F .text	000000a0 _ZL21size_of_encoded_valueh
0800184c l     F .text	00000210 _ZL28read_encoded_value_with_basehjPKhPj
08001a5c l     F .text	00000054 _ZL15get_ttype_entryP16lsda_header_infom
08001ab0 l     F .text	000000a8 _ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl
08001b58 l     F .text	00000088 _ZL21base_of_encoded_valuehP15_Unwind_Context
08001be0 l     F .text	00000240 _ZL28check_compact_exception_specPKSt9type_infoPvPKhij
08001e20 l     F .text	00000134 _ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info
00000000 l    df *ABS*	00000000 eh_globals.cc
08021f6c l     O .bss	00000008 _ZL10eh_globals
00000000 l    df *ABS*	00000000 class_type_info.cc
00000000 l    df *ABS*	00000000 del_op.cc
00000000 l    df *ABS*	00000000 eh_terminate.cc
00000000 l    df *ABS*	00000000 si_class_type_info.cc
00000000 l    df *ABS*	00000000 eh_catch.cc
00000000 l    df *ABS*	00000000 eh_call.cc
00000000 l    df *ABS*	00000000 eh_term_handler.cc
00000000 l    df *ABS*	00000000 eh_throw.cc
08002f5c l     F .text	00000044 _ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception
00000000 l    df *ABS*	00000000 tinfo.cc
00000000 l    df *ABS*	00000000 eh_alloc.cc
08021f78 l     O .bss	00000004 _ZL14emergency_used
080220c4 l     O .bss	00000800 _ZL16emergency_buffer
08021f74 l     O .bss	00000004 _ZL15dependents_used
08021fc4 l     O .bss	00000100 _ZL17dependents_buffer
00000000 l    df *ABS*	00000000 eh_exception.cc
00000000 l    df *ABS*	00000000 eh_unex_handler.cc
00000000 l    df *ABS*	00000000 pure.cc
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 unwind-sjlj.c
08003374 l     F .text	00000118 _Unwind_ForcedUnwind_Phase2
08021f7c l     O .bss	00000004 fc_static
0800348c l     F .text	000000c0 _Unwind_RaiseException_Phase2
0800354c l     F .text	00000030 uw_install_context.isra.1
00000000 l    df *ABS*	00000000 abort.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 impure.c
0801e5cc l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 putchar.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 scanf.c
00000000 l    df *ABS*	00000000 signal.c
00000000 l    df *ABS*	00000000 signalr.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 strcat.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strcpy.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 strstr.c
08004a00 l     F .text	000000fc critical_factorization
08004afc l     F .text	00000374 two_way_long_needle
00000000 l    df *ABS*	00000000 vfprintf.c
0801df92 l     O .rodata	00000010 zeroes.4166
0801dfa2 l     O .rodata	00000010 blanks.4165
00000000 l    df *ABS*	00000000 vfprintf.c
0801dfb2 l     O .rodata	00000010 zeroes.4181
0801dfc2 l     O .rodata	00000010 blanks.4180
00000000 l    df *ABS*	00000000 vfscanf.c
0801dfda l     O .rodata	00000022 basefix.4098
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 ctype_.c
0801e0fd l     O .rodata	00000180 _ctype_b
00000000 l    df *ABS*	00000000 dtoa.c
0800ae68 l     F .text	00000228 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
0800ca10 l     F .text	00000008 __fp_lock
0800ca18 l     F .text	00000008 __fp_unlock
0800ca2c l     F .text	000001a0 __sinit.part.1
00000000 l    df *ABS*	00000000 fread.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 iswspace.c
00000000 l    df *ABS*	00000000 locale.c
0801ee18 l     O .rwdata	00000020 lc_ctype_charset
0801edf8 l     O .rwdata	00000020 lc_message_charset
0801ee38 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mbrtowc.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 mprec.c
0801e29c l     O .rodata	0000000c p05.2678
00000000 l    df *ABS*	00000000 putc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 refill.c
0800fac8 l     F .text	0000001c lflush
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sccl.c
00000000 l    df *ABS*	00000000 sf_nan.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strchr.c
00000000 l    df *ABS*	00000000 strtod.c
0801ee84 l     O .rwdata	00000014 fpi.2638
0801e3d0 l     O .rodata	00000028 tinytens
0801ee70 l     O .rwdata	00000014 fpinan.2674
00000000 l    df *ABS*	00000000 strtol.c
00000000 l    df *ABS*	00000000 strtoll_r.c
00000000 l    df *ABS*	00000000 strtoul.c
00000000 l    df *ABS*	00000000 strtoull_r.c
00000000 l    df *ABS*	00000000 vfprintf.c
0801e3f8 l     O .rodata	00000010 zeroes.4110
0801e408 l     O .rodata	00000010 blanks.4109
00000000 l    df *ABS*	00000000 ungetc.c
00000000 l    df *ABS*	00000000 vfprintf.c
08013964 l     F .text	000000fc __sprint_r.part.0
0801e428 l     O .rodata	00000010 blanks.4125
0801e418 l     O .rodata	00000010 zeroes.4126
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 gdtoa-gethex.c
08015500 l     F .text	00000100 rshift
00000000 l    df *ABS*	00000000 gdtoa-hexnan.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 strncmp.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
08017318 l     F .text	0000006c udivmodsi4
00000000 l    df *ABS*	00000000 eqsf2.c
00000000 l    df *ABS*	00000000 gesf2.c
00000000 l    df *ABS*	00000000 lesf2.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 truncdfsf2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
08019fbc l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0801a0e4 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_dma_txchan_open.c
0801a110 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_exit.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0801a278 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_getpid.c
00000000 l    df *ABS*	00000000 alt_isatty.c
0801a3a0 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_kill.c
0801a49c l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0801a61c l     F .text	00000064 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0801a700 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_printf.c
00000000 l    df *ABS*	00000000 alt_putchar.c
00000000 l    df *ABS*	00000000 alt_read.c
0801ab50 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
0802027c l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
0801add4 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0801af24 l     F .text	00000038 alt_dev_reg
0801f040 l     O .rwdata	000000a4 dma_fpga_to_hps_priv
0801f0e4 l     O .rwdata	0000001c dma_fpga_to_hps_tx
0801f100 l     O .rwdata	0000001c dma_fpga_to_hps_rx
0801f11c l     O .rwdata	00001060 jtag_uart_0
0802017c l     O .rwdata	0000002c bt_rs232_uart
080201a8 l     O .rwdata	0000002c wifi_rs232_uart
00000000 l    df *ABS*	00000000 altera_avalon_dma.c
0801b014 l     F .text	00000038 alt_dma_txchan_reg
0801b04c l     F .text	00000038 alt_dma_rxchan_reg
0801b178 l     F .text	00000098 alt_avalon_dma_launch_txonly
0801b210 l     F .text	00000098 alt_avalon_dma_launch_rxonly
0801b2a8 l     F .text	00000344 alt_avalon_dma_ioctl
0801b960 l     F .text	000001c0 alt_avalon_dma_irq
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0801bde4 l     F .text	00000208 altera_avalon_jtag_uart_irq
0801bfec l     F .text	000000a8 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_up_avalon_rs232.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0801caf4 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_dma_rxchan_open.c
0801cbe8 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0801cd60 l     F .text	000000e0 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_register.c
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0801d068 l     F .text	00000050 alt_get_errno
0801d0b8 l     F .text	000000f4 alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 __atexit.c
08021fb4 g     O .bss	00000004 alt_instruction_exception_handler
080031bc g     F .text	00000044 __cxa_free_exception
08004248 g     F .text	00000018 putchar
080030c0 g     F .text	00000008 _ZNKSt9type_info15__is_function_pEv
0800f248 g     F .text	00000074 _mprec_log10
08002a54 g     F .text	00000018 _ZSt10unexpectedv
0800f334 g     F .text	0000008c __any_on
08016170 g     F .text	00000054 _isatty_r
0801e2a8 g     O .rodata	00000028 __mprec_tinytens
0801a82c g     F .text	00000078 alt_main
080048d8 g     F .text	00000090 strcpy
08004260 g     F .text	000000b8 _puts_r
080229ec g     O .bss	00000100 alt_irq
080032fc g     F .text	00000004 _ZN10__cxxabiv115__forced_unwindD1Ev
080161c4 g     F .text	0000005c _lseek_r
08000654 g     F .text	00000048 _ZN8WiFiUartD1Ev
08003608 g     F .text	00000020 .hidden _Unwind_GetIPInfo
08020294 g       *ABS*	00000000 __flash_rwdata_start
08018844 g     F .text	00000084 .hidden __eqdf2
08003030 g     F .text	00000084 __cxa_rethrow
08003594 g     F .text	00000014 .hidden _Unwind_SjLj_Unregister
08002a90 g     F .text	00000014 _ZSt14set_unexpectedPFvvE
080035f8 g     F .text	00000010 .hidden _Unwind_GetIP
08022aec g       *ABS*	00000000 __alt_heap_start
0800468c g     F .text	00000058 _kill_r
08004204 g     F .text	0000003c printf
0801633c g     F .text	0000009c _wcrtomb_r
08001228 g     F .text	00000394 _Z13patch_dnn_resPc
08004450 g     F .text	00000084 _signal_r
0801d8d4  w    O .rodata	00000010 _ZTV6BTUart
0800fea0 g     F .text	0000005c __sseek
0800cd74 g     F .text	00000010 __sinit
0801bb20 g     F .text	000000a8 alt_avalon_dma_init
08014ec0 g     F .text	00000154 __swbuf_r
08003294 g     F .text	00000040 __cxa_free_dependent_exception
08002ab4 g     F .text	00000010 _ZN10__cxxabiv120__si_class_type_infoD2Ev
0800daac g     F .text	0000007c _setlocale_r
0801dd94  w    O .rodata	00000025 _ZTSN10__cxxabiv120__si_class_type_infoE
080011e8 g     F .text	00000040 _Z3strPVi
0800cbcc g     F .text	00000078 __sfmoreglue
08013948 g     F .text	0000001c ungetc
0801a8c4 g     F .text	00000020 __malloc_unlock
0801c834 g     F .text	00000090 alt_up_rs232_read_fd
080032fc g     F .text	00000004 _ZN10__cxxabiv115__forced_unwindD2Ev
08010068 g     F .text	00001608 _strtod_r
08002ee4 g     F .text	00000020 _ZSt18uncaught_exceptionv
0800084c g     F .text	000001a4 _ZN8WiFiUart12send_commandEPKc
0800332c g     F .text	00000020 __cxa_deleted_virtual
0800e21c g     F .text	0000015c memmove
080005d8 g     F .text	0000004c _ZN6BTUart5flushEv
080032d4 g     F .text	00000004 _ZNSt9exceptionD2Ev
0800cd5c g     F .text	00000018 _cleanup
08020210 g     O .rwdata	00000004 req
0800e378 g     F .text	000000a8 _Balloc
0800073c g     F .text	00000110 _ZN8WiFiUart7connectEv
080188c8 g     F .text	000000e0 .hidden __gtdf2
0801ded0  w    O .rodata	00000014 _ZTVSt13bad_exception
0801d4a8 g     F .text	00000020 altera_nios2_gen2_irq_init
00000000  w      *UND*	00000000 __errno
08021f60 g     O .bss	00000004 tagid_str
08000000 g     F .entry	0000000c __reset
08003644 g     F .text	00000008 .hidden _Unwind_GetRegionStart
08000020 g       *ABS*	00000000 __flash_exceptions_start
080154a8 g     F .text	00000058 _fstat_r
08021f8c g     O .bss	00000004 errno
0800ab34 g     F .text	00000024 __svfscanf
0800fe1c g     F .text	00000008 __seofread
08000000 g       *ABS*	00000000 __alt_mem_sdram_controller
0801251c g     F .text	000011d0 ___svfiprintf_internal_r
08003820 g     F .text	00000074 .hidden _Unwind_Backtrace
08021fa0 g     O .bss	00000004 alt_argv
080281d4 g       *ABS*	00000000 _gp
0801a380 g     F .text	00000020 getpid
08021fb8 g     O .bss	0000000c WiFi_UART
0801da48  w    O .rodata	0000000a _ZTS8WiFiUart
08002454 g     F .text	00000234 __cxa_call_unexpected
08002d78 g     F .text	00000008 __cxa_get_exception_ptr
0801a160 g     F .text	00000054 alt_dma_txchan_open
0801eec0 g     O .rwdata	00000180 alt_fd_list
080201dc  w    O .rwdata	00000008 _ZTS6BTUart
08004240 g     F .text	00000008 _putchar_r
08003734 g     F .text	00000044 .hidden _Unwind_SjLj_ForcedUnwind
080035c4 g     F .text	00000018 .hidden _Unwind_GetCFA
08002a6c g     F .text	00000014 _ZSt13set_terminatePFvvE
0801a1e8 g     F .text	00000090 alt_find_dev
0800e0e4 g     F .text	00000138 memcpy
08015edc g     F .text	00000294 __hexnan
08003200 g     F .text	00000094 __cxa_allocate_dependent_exception
0800ca20 g     F .text	0000000c _cleanup_r
08002718 g     F .text	00000018 _ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_
08019c4c g     F .text	000000d0 .hidden __floatsidf
0801ce40 g     F .text	00000078 alt_io_redirect
080189a8 g     F .text	000000e0 .hidden __ltdf2
0801d8bc g       *ABS*	00000000 __DTOR_END__
08002730 g     F .text	00000010 _ZN10__cxxabiv117__class_type_infoD1Ev
0801c7c0 g     F .text	00000074 alt_up_rs232_read_data
08004318 g     F .text	00000014 puts
0801d6b0 g     F .text	0000009c alt_exception_cause_generated_bad_addr
0800ddf0 g     F .text	000000f0 mbrtowc
08000ccc g     F .text	0000004c _ZN8WiFiUart5flushEv
0800fc8c g     F .text	00000074 __fpclassifyd
0800ab58 g     F .text	0000004c _vfscanf_r
080201f0 g     O .rwdata	00000004 tag_id
0800f1a4 g     F .text	000000a4 __ratio
08014e9c g     F .text	00000024 __vfiprintf_internal
0801c1e8 g     F .text	0000020c altera_avalon_jtag_uart_read
080038e4 g     F .text	00000014 malloc
080041d8 g     F .text	0000002c _printf_r
08017434 g     F .text	00000008 .hidden __udivsi3
0801a3f0 g     F .text	000000ac isatty
080044d4 g     F .text	000000bc _raise_r
0800da7c g     F .text	00000030 iswspace
0801e2f8 g     O .rodata	000000c8 __mprec_tens
0800db28 g     F .text	0000000c __locale_charset
08017570 g     F .text	000000b8 .hidden __lesf2
08016648 g     F .text	00000074 .hidden __fixunsdfsi
08000624 g     F .text	00000030 _ZN8WiFiUartC2Ev
08021f88 g     O .bss	00000004 __malloc_top_pad
080201f4 g     O .rwdata	00000004 input
080046e4 g     F .text	00000004 _getpid_r
08000624 g     F .text	00000030 _ZN8WiFiUartC1Ev
08011fdc g     F .text	00000024 strtoul
08020250 g     O .rwdata	00000004 __mb_cur_max
0800db58 g     F .text	0000000c _localeconv_r
0800069c g     F .text	00000038 _ZN8WiFiUartD0Ev
08012000 g     F .text	00000354 _strtoull_r
0800e7a0 g     F .text	0000003c __i2b
0800d468 g     F .text	000004a4 __sfvwrite_r
080027e0 g     F .text	000000b8 _ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj
08004590 g     F .text	000000a8 __sigtramp_r
0800432c g     F .text	00000054 _sbrk_r
0801de04  w    O .rodata	00000020 _ZTVSt9type_info
08016220 g     F .text	0000005c _read_r
080032dc g     F .text	0000000c _ZNKSt9exception4whatEv
0802026c g     O .rwdata	00000004 alt_max_fd
0801c73c g     F .text	00000044 alt_up_rs232_check_parity
080151b8 g     F .text	00000100 _fclose_r
0800c9e0 g     F .text	00000030 fflush
08021f84 g     O .bss	00000004 __malloc_max_sbrked_mem
0801ceb8 g     F .text	000001b0 alt_irq_register
08017628 g     F .text	0000089c .hidden __adddf3
08017444 g     F .text	00000074 .hidden __nesf2
0801b084 g     F .text	000000f4 alt_avalon_dma_launch_bidir
0801ddc8  w    O .rodata	0000002c _ZTVN10__cxxabiv120__si_class_type_infoE
08000654 g     F .text	00000048 _ZN8WiFiUartD2Ev
0800ef4c g     F .text	0000011c __b2d
080201e4  w    O .rwdata	00000008 _ZTI8WiFiUart
0801cc38 g     F .text	00000054 alt_dma_rxchan_open
08016cfc g     F .text	0000061c .hidden __umoddi3
0801a750 g     F .text	000000dc lseek
08002774 g     F .text	0000006c _ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE
08002968 g     F .text	00000004 _ZdlPv
0800029c g     F .text	00000048 _ZN6BTUartD1Ev
0801da38  w    O .rodata	00000010 _ZTV8WiFiUart
0802023c g     O .rwdata	00000004 _global_impure_ptr
0800f528 g     F .text	000005a0 _realloc_r
08022aec g       *ABS*	00000000 __bss_end
0801d3a4 g     F .text	00000104 alt_tick
0800357c g     F .text	00000018 .hidden _Unwind_SjLj_Register
080228ec g     O .bss	00000100 __hexdig
080166bc g     F .text	00000640 .hidden __udivdi3
080152cc g     F .text	00000184 _fputwc_r
0801e2d0 g     O .rodata	00000028 __mprec_bigtens
0800e584 g     F .text	00000104 __s2b
08003894 g     F .text	00000018 abort
08019d1c g     F .text	000000a4 .hidden __floatunsidf
0800ecf4 g     F .text	00000060 __mcmp
08021f64 g     O .bss	00000004 rid_str
08002e34 g     F .text	000000b0 __cxa_end_catch
0800cd94 g     F .text	00000018 __fp_lock_all
080032d8 g     F .text	00000004 _ZNSt13bad_exceptionD2Ev
0801d30c g     F .text	00000098 alt_alarm_stop
08000c24 g     F .text	00000060 _ZN8WiFiUart6read_sEv
080119f8 g     F .text	00000024 strtol
08021fa8 g     O .bss	00000004 alt_irq_active
080201f8 g     O .rwdata	00000004 id
08002a2c g     F .text	00000018 _ZSt9terminatev
08001134 g     F .text	000000b4 _Z9wifi_taskv
080000fc g     F .exceptions	000000d4 alt_irq_handler
0801ee98 g     O .rwdata	00000028 alt_dev_null
08000e24 g     F .text	000000d8 _Z9start_dmav
08003304 g     F .text	00000004 _ZN10__cxxabiv119__foreign_exceptionD2Ev
0800026c g     F .text	00000030 _ZN6BTUartC2Ev
0800026c g     F .text	00000030 _ZN6BTUartC1Ev
0801dd38  w    O .rodata	00000022 _ZTSN10__cxxabiv117__class_type_infoE
0801cad8 g     F .text	0000001c alt_dcache_flush_all
0800e688 g     F .text	00000068 __hi0bits
08020220  w    O .rwdata	00000008 _ZTISt9exception
08019bc4 g     F .text	00000088 .hidden __fixdfsi
08011670 g     F .text	0000001c strtod
08020294 g       *ABS*	00000000 __ram_rwdata_end
080030b4 g     F .text	00000004 _ZNSt9type_infoD1Ev
08020264 g     O .rwdata	00000008 alt_dev_list
08003304 g     F .text	00000004 _ZN10__cxxabiv119__foreign_exceptionD1Ev
0801b7b4 g     F .text	00000074 alt_avalon_dma_space
0801ae24 g     F .text	00000100 write
0800f3c0 g     F .text	000000a0 _putc_r
080030d0 g     F .text	00000004 _ZNSt9type_infoD0Ev
080174b8 g     F .text	000000b8 .hidden __gtsf2
0801e5cc g       *ABS*	00000000 __ram_rodata_end
0801a2c8 g     F .text	000000b8 fstat
0801c8c4 g     F .text	00000094 alt_up_rs232_write_fd
0801a4ec g     F .text	00000130 kill
080189a8 g     F .text	000000e0 .hidden __ledf2
080047ac g     F .text	00000088 strcat
0800ea6c g     F .text	00000140 __pow5mult
08013a78 g     F .text	00001424 ___vfiprintf_internal_r
08021f98 g     O .bss	00000004 __nlocale_changed
0801743c g     F .text	00000008 .hidden __umodsi3
080030c8 g     F .text	00000008 _ZNKSt9type_info11__do_upcastEPKN10__cxxabiv117__class_type_infoEPPv
080043bc g     F .text	0000002c _scanf_r
08002a80 g     F .text	00000010 _ZSt13get_terminatev
08022aec g       *ABS*	00000000 end
08003808 g     F .text	00000018 .hidden _Unwind_DeleteException
0801bd2c g     F .text	000000b8 altera_avalon_jtag_uart_init
080001d0 g     F .exceptions	00000060 alt_instruction_exception_entry
08002898 g     F .text	000000d0 _ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE
0801d8b4 g       *ABS*	00000000 __CTOR_LIST__
0c000000 g       *ABS*	00000000 __alt_stack_pointer
08019f58 g     F .text	00000064 .hidden __clzsi2
080026a0 g     F .text	00000078 _ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv
0801c3f4 g     F .text	00000218 altera_avalon_jtag_uart_write
0800cd84 g     F .text	00000004 __sfp_lock_acquire
0801de58  w    O .rodata	00000012 _ZTSSt13bad_exception
0800df80 g     F .text	000000e8 memchr
08007258 g     F .text	000020fc ___vfprintf_internal_r
080046e8 g     F .text	00000058 _sprintf_r
0800d178 g     F .text	000002f0 _free_r
0801a8e4 g     F .text	00000228 alt_printf
0800db34 g     F .text	00000010 __locale_mb_cur_max
0801b828 g     F .text	00000138 alt_avalon_dma_send
0800acd4 g     F .text	00000194 __call_exitprocs
08020270 g     O .rwdata	00000008 alt_dma_txchan_list
08021f94 g     O .bss	00000004 __mlocale_changed
0800029c g     F .text	00000048 _ZN6BTUartD2Ev
080201ec g     O .rwdata	00000004 dnn_acc
08020244 g     O .rwdata	00000004 __malloc_sbrk_base
08000230 g     F .text	0000003c _start
08021fac g     O .bss	00000004 _alt_tick_rate
08004e70 g     F .text	00000378 strstr
08011a1c g     F .text	00000314 _strtoll_r
0801ddf4  w    O .rodata	0000000d _ZTSSt9type_info
0800330c g     F .text	00000020 __cxa_pure_virtual
0800ebac g     F .text	00000148 __lshift
08021fb0 g     O .bss	00000004 _alt_nticks
0800464c g     F .text	0000001c signal
0801aba0 g     F .text	00000104 read
0801af90 g     F .text	00000084 alt_sys_init
08012354 g     F .text	000001c8 __ssprint_r
0801d760 g     F .text	00000114 __register_exitproc
0801627c g     F .text	000000c0 strncmp
08002af8 g     F .text	00000160 _ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE
0801c700 g     F .text	0000003c alt_up_rs232_get_available_space_in_write_FIFO
0800e7dc g     F .text	00000290 __multiply
0801c094 g     F .text	00000068 altera_avalon_jtag_uart_close
0800334c g     F .text	00000028 .hidden __mulsi3
0801e5cc g       *ABS*	00000000 __ram_rwdata_start
08003664 g     F .text	000000d0 .hidden _Unwind_SjLj_RaiseException
0801d8bc g       *ABS*	00000000 __ram_rodata_start
080228c4 g     O .bss	00000028 __malloc_current_mallinfo
08003778 g     F .text	00000044 .hidden _Unwind_SjLj_Resume
08017444 g     F .text	00000074 .hidden __eqsf2
0800f068 g     F .text	0000013c __d2b
0801def8  w    O .rodata	00000014 _ZTVN10__cxxabiv119__foreign_exceptionE
080030b4 g     F .text	00000004 _ZNSt9type_infoD2Ev
08003308 g     F .text	00000004 _ZN10__cxxabiv119__foreign_exceptionD0Ev
08002cf4 g     F .text	00000084 _ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE
0801bbc8 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
08011d30 g     F .text	000002ac _strtoul_r
0801d5dc g     F .text	000000d4 alt_get_fd
08000b6c g     F .text	000000b8 _ZN8WiFiUart7write_sEh
08020230  w    O .rwdata	00000008 _ZTIN10__cxxabiv119__foreign_exceptionE
0801508c g     F .text	00000054 _close_r
0800e068 g     F .text	0000007c memcmp
0801bc88 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
08022aec g       *ABS*	00000000 __alt_stack_base
0801bcd8 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
08002ab4 g     F .text	00000010 _ZN10__cxxabiv120__si_class_type_infoD1Ev
0800aba4 g     F .text	00000130 __swsetup_r
080037bc g     F .text	0000004c .hidden _Unwind_SjLj_Resume_or_Rethrow
08017ec4 g     F .text	00000980 .hidden __divdf3
0800cc44 g     F .text	00000118 __sfp
0800f2bc g     F .text	00000078 __copybits
080030b8 g     F .text	00000008 _ZNKSt9type_info14__is_pointer_pEv
0801e9f0 g     O .rwdata	00000408 __malloc_av_
0800cd90 g     F .text	00000004 __sinit_lock_release
08018a88 g     F .text	0000086c .hidden __muldf3
0800fdc8 g     F .text	00000054 __sread
0800d014 g     F .text	00000040 fread
0801debc  w    O .rodata	00000014 _ZTVSt9exception
08003300 g     F .text	00000004 _ZN10__cxxabiv115__forced_unwindD0Ev
0801c664 g     F .text	0000005c alt_up_rs232_disable_read_interrupt
0801d4c8 g     F .text	00000114 alt_find_file
0801cb44 g     F .text	000000a4 alt_dev_llist_insert
0801a8a4 g     F .text	00000020 __malloc_lock
0801ad24 g     F .text	000000b0 sbrk
080051e8 g     F .text	00002070 ___svfprintf_internal_r
0801dd68  w    O .rodata	0000002c _ZTVN10__cxxabiv117__class_type_infoE
08002fa0 g     F .text	00000090 __cxa_throw
0800c7b8 g     F .text	00000228 _fflush_r
08003628 g     F .text	00000010 .hidden _Unwind_SetIP
080150e0 g     F .text	000000d8 _calloc_r
080009f0 g     F .text	0000010c _ZN8WiFiUart9send_dataEPKci
08021f5c g       *ABS*	00000000 __bss_start
080003e8 g     F .text	000000b8 _ZN6BTUart7write_sEh
080040b4 g     F .text	00000124 memset
08000efc g     F .text	00000238 main
0801b634 g     F .text	00000048 alt_avalon_dma_rx_ioctl
08020204 g     O .rwdata	00000004 rid
08021fa4 g     O .bss	00000004 alt_envp
08021f80 g     O .bss	00000004 __malloc_max_total_mem
0801bc28 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
08015014 g     F .text	0000001c __swbuf
08002688 g     F .text	0000000c __cxa_get_globals_fast
08017570 g     F .text	000000b8 .hidden __ltsf2
0800cdc4 g     F .text	00000250 _fread_r
0800fefc g     F .text	00000008 __sclose
0c000000 g       *ABS*	00000000 __alt_heap_limit
08020200 g     O .rwdata	00000004 tagid
080152b8 g     F .text	00000014 fclose
08011790 g     F .text	00000268 _strtol_r
08019dc0 g     F .text	00000198 .hidden __truncdfsf2
08000384 g     F .text	00000064 _ZN6BTUart6read_sEv
0800b090 g     F .text	00001728 _dtoa_r
0800390c g     F .text	000007a8 _malloc_r
080164b0 g     F .text	00000030 __ascii_wctomb
080002e4 g     F .text	00000038 _ZN6BTUartD0Ev
080032e8 g     F .text	0000000c _ZNKSt13bad_exception4whatEv
08020278 g     O .rwdata	00000004 alt_errno
080136ec g     F .text	000000d4 __submore
08004668 g     F .text	00000010 _init_signal
0801dd5c  w    O .rodata	0000000c _ZTIN10__cxxabiv117__class_type_infoE
0800d90c g     F .text	000000b8 _fwalk
0800051c g     F .text	00000074 _ZN6BTUart7write_mEPci
0800df24 g     F .text	0000005c _mbtowc_r
080032d8 g     F .text	00000004 _ZNSt13bad_exceptionD1Ev
0800f460 g     F .text	000000c8 putc
08017384 g     F .text	00000054 .hidden __divsi3
0800d054 g     F .text	00000124 _malloc_trim_r
0801d8b8 g       *ABS*	00000000 __CTOR_END__
0802020c g     O .rwdata	00000004 server_endpoint
08004834 g     F .text	000000a4 strcmp
0801d8bc g       *ABS*	00000000 __flash_rodata_start
0801dee4  w    O .rodata	00000014 _ZTVN10__cxxabiv115__forced_unwindE
0801d8b8 g       *ABS*	00000000 __DTOR_LIST__
0801c958 g     F .text	00000040 alt_up_rs232_open_dev
08018844 g     F .text	00000084 .hidden __nedf2
0801af5c g     F .text	00000034 alt_irq_init
0801aca4 g     F .text	00000080 alt_release_fd
08002ac4 g     F .text	00000034 _ZN10__cxxabiv120__si_class_type_infoD0Ev
08004740 g     F .text	0000006c sprintf
0801e454 g     O .rodata	00000100 .hidden __clz_tab
08021f90 g     O .bss	00000004 _PathLocale
0801168c g     F .text	00000104 strtof
0801d74c g     F .text	00000014 atexit
080174b8 g     F .text	000000b8 .hidden __gesf2
08020208 g     O .rwdata	00000004 result
08015030 g     F .text	0000005c _write_r
0800db64 g     F .text	0000001c setlocale
08004380 g     F .text	0000003c scanf
0800365c g     F .text	00000008 .hidden _Unwind_GetTextRelBase
08002f04 g     F .text	00000058 __cxa_call_terminate
0800fdc0 g     F .text	00000008 nanf
08020240 g     O .rwdata	00000004 _impure_ptr
08020228  w    O .rwdata	00000008 _ZTIN10__cxxabiv115__forced_unwindE
08021f9c g     O .bss	00000004 alt_argc
0800dd44 g     F .text	000000ac _mbrtowc_r
0801cce8 g     F .text	0000005c _do_dtors
0800db50 g     F .text	00000008 __locale_cjk_lang
08000dfc g     F .text	00000028 _Z8dma_donePv
0800fae4 g     F .text	000001a8 __srefill_r
080201d4  w    O .rwdata	00000008 _ZTI6BTUart
08000c84 g     F .text	00000048 _ZN8WiFiUart10read_readyEv
08002aa4 g     F .text	00000010 _ZSt14get_unexpectedv
08000020 g       .exceptions	00000000 alt_irq_entry
0800dee0 g     F .text	00000044 __ascii_mbtowc
0800eeec g     F .text	00000060 __ulp
0800364c g     F .text	00000008 .hidden _Unwind_FindEnclosingFunction
0800cdac g     F .text	00000018 __fp_unlock_all
0802025c g     O .rwdata	00000008 alt_fs_list
0801de98  w    O .rodata	00000024 _ZTSN10__cxxabiv119__foreign_exceptionE
0801c60c g     F .text	00000058 alt_up_rs232_enable_read_interrupt
08003638 g     F .text	0000000c .hidden _Unwind_GetLanguageSpecificData
0801c780 g     F .text	00000040 alt_up_rs232_write_data
08002d80 g     F .text	000000b4 __cxa_begin_catch
08002730 g     F .text	00000010 _ZN10__cxxabiv117__class_type_infoD2Ev
08002a44 g     F .text	00000010 _ZN10__cxxabiv112__unexpectedEPFvvE
08000020 g       *ABS*	00000000 __ram_exceptions_start
0800db80 g     F .text	0000000c localeconv
080032f8 g     F .text	00000004 _ZNSt13bad_exceptionD0Ev
08020214 g     O .rwdata	00000004 _ZN10__cxxabiv119__terminate_handlerE
08003118 g     F .text	000000a4 __cxa_allocate_exception
08015600 g     F .text	00000084 __hexdig_init
0801ddbc  w    O .rodata	0000000c _ZTIN10__cxxabiv120__si_class_type_infoE
08020294 g       *ABS*	00000000 _edata
08000afc g     F .text	00000070 _ZN8WiFiUart4getsEPci
08022aec g       *ABS*	00000000 _end
08001f54 g     F .text	00000500 __gxx_personality_sj0
08000230 g       *ABS*	00000000 __ram_exceptions_end
0800aacc g     F .text	00000068 vfscanf
0801c0fc g     F .text	000000ec altera_avalon_jtag_uart_ioctl
080032d4 g     F .text	00000004 _ZNSt9exceptionD1Ev
0800fe24 g     F .text	0000007c __swrite
08020248 g     O .rwdata	00000004 __malloc_trim_threshold
080201fc g     O .rwdata	00000004 res
0800db44 g     F .text	0000000c __locale_msgcharset
080038ac g     F .text	00000038 exit
080035dc g     F .text	0000001c .hidden _Unwind_SetGR
0800d9c4 g     F .text	000000b8 _fwalk_reent
08002c58 g     F .text	0000009c _ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_
0800ed54 g     F .text	00000198 __mdiff
0800296c g     F .text	000000c0 _ZN10__cxxabiv111__terminateEPFvvE
080173d8 g     F .text	0000005c .hidden __modsi3
0802024c g     O .rwdata	00000004 __ctype_ptr__
0c000000 g       *ABS*	00000000 __alt_data_end
08000020 g     F .exceptions	00000000 alt_exception
0800cd88 g     F .text	00000004 __sfp_lock_release
0801de6c  w    O .rodata	0000000c _ZTISt13bad_exception
0800fd00 g     F .text	000000c0 __sccl
0801dffc g     O .rodata	00000101 _ctype_
08021f5c g     O .bss	00000004 dma_complete
08020254 g     O .rwdata	00000004 __mbtowc
0801a1b4 g     F .text	00000034 _exit
0801c998 g     F .text	00000140 alt_alarm_start
0801653c g     F .text	0000010c .hidden __muldi3
080035a8 g     F .text	0000001c .hidden _Unwind_GetGR
08002694 g     F .text	0000000c __cxa_get_globals
0800db8c g     F .text	000001b8 __smakebuf_r
08020238 g     O .rwdata	00000004 _ZN10__cxxabiv120__unexpected_handlerE
08004968 g     F .text	00000098 strlen
080043e8 g     F .text	00000068 _init_signal_r
08020218  w    O .rwdata	00000008 _ZTISt9type_info
0801d1ac g     F .text	00000160 open
080188c8 g     F .text	000000e0 .hidden __gedf2
0801ab0c g     F .text	00000044 alt_putchar
0800031c g     F .text	00000068 _ZN6BTUart4openEPKc
0801de48  w    O .rodata	0000000d _ZTSSt9exception
08015684 g     F .text	00000858 __gethex
08020258 g     O .rwdata	00000004 __wctomb
080032f4 g     F .text	00000004 _ZNSt9exceptionD0Ev
08021f68 g     O .bss	00000004 result_str
08013a60 g     F .text	00000018 __sprint_r
0801cd44 g     F .text	0000001c alt_icache_flush_all
0800ff04 g     F .text	00000164 strchr
08003654 g     F .text	00000008 .hidden _Unwind_GetDataRelBase
08020288 g     O .rwdata	00000004 alt_priority_mask
08009354 g     F .text	00000024 __vfprintf_internal
080164e0 g     F .text	0000005c _wctomb_r
080004a0 g     F .text	0000007c _ZN6BTUart6read_mEPii
0801b67c g     F .text	00000138 alt_avalon_dma_prepare
080192f4 g     F .text	000008d0 .hidden __subdf3
08020280 g     O .rwdata	00000008 alt_dma_rxchan_list
0800e6f0 g     F .text	000000b0 __lo0bits
08009378 g     F .text	00001754 __svfscanf_r
080006d4 g     F .text	00000068 _ZN8WiFiUart4openEPKc
0802028c g     O .rwdata	00000008 alt_alarm_list
080137c0 g     F .text	00000188 _ungetc_r
0801cc8c g     F .text	0000005c _do_ctors
08004678 g     F .text	00000014 __sigtramp
08000590 g     F .text	00000048 _ZN6BTUart10read_readyEv
0801c6c0 g     F .text	00000040 alt_up_rs232_get_used_space_in_read_FIFO
080163d8 g     F .text	000000d8 wcrtomb
0801a00c g     F .text	000000d8 close
0801de78  w    O .rodata	00000020 _ZTSN10__cxxabiv115__forced_unwindE
0801a680 g     F .text	00000080 alt_load
0801b5ec g     F .text	00000048 alt_avalon_dma_tx_ioctl
080030d4 g     F .text	00000044 _ZNKSt9type_info10__do_catchEPKS_PPvj
08015450 g     F .text	00000058 fputwc
08004638 g     F .text	00000014 raise
080038f8 g     F .text	00000014 free
0800cd8c g     F .text	00000004 __sinit_lock_acquire
0800e448 g     F .text	0000013c __multadd
08002740 g     F .text	00000034 _ZN10__cxxabiv117__class_type_infoD0Ev
0800e420 g     F .text	00000028 _Bfree



Disassembly of section .entry:

08000000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
 8000000:	00420034 	movhi	at,2048
    ori r1, r1, %lo(_start)
 8000004:	08408c14 	ori	at,at,560
    jmp r1
 8000008:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

08000020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
 8000020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
 8000024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
 8000028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
 800002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
 8000030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
 8000034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
 8000038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
 800003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
 8000040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
 8000044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
 8000048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
 800004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
 8000050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
 8000054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
 8000058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
 800005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
 8000060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
 8000064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
 8000068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
 800006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
 8000070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
 8000074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
 8000078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
 800007c:	10000326 	beq	r2,zero,800008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
 8000080:	20000226 	beq	r4,zero,800008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
 8000084:	80000fc0 	call	80000fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
 8000088:	00000706 	br	80000a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw   ea,  72(sp)  /* Don't re-issue */
 800008c:	df401215 	stw	ea,72(sp)
        ldhu.n  r2, 0(r4)
        ldhu.n  r3, 2(r4)
        slli.n  r3, r3, 16
        or.n    r2, r2, r3 /* Instruction that caused exception */
#else
        ldw   r2, -4(ea)   /* Instruction that caused exception */
 8000090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
 8000094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
 8000098:	80001d00 	call	80001d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
 800009c:	1000021e 	bne	r2,zero,80000a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
 80000a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
 80000a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
 80000a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
 80000ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
 80000b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
 80000b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
 80000b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
 80000bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
 80000c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
 80000c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
 80000c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
 80000cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
 80000d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
 80000d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
 80000d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
 80000dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
 80000e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
 80000e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
 80000e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
 80000ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
 80000f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
 80000f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
 80000f8:	ef80083a 	eret

080000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
 80000fc:	defff904 	addi	sp,sp,-28
 8000100:	dfc00615 	stw	ra,24(sp)
 8000104:	df000515 	stw	fp,20(sp)
 8000108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
 800010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 8000110:	0005313a 	rdctl	r2,ipending
 8000114:	e0bffe15 	stw	r2,-8(fp)

  return active;
 8000118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 800011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
 8000120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 8000124:	00800044 	movi	r2,1
 8000128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 800012c:	e0fffb17 	ldw	r3,-20(fp)
 8000130:	e0bffc17 	ldw	r2,-16(fp)
 8000134:	1884703a 	and	r2,r3,r2
 8000138:	10001526 	beq	r2,zero,8000190 <alt_irq_handler+0x94>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
 800013c:	008200b4 	movhi	r2,2050
 8000140:	108a7b04 	addi	r2,r2,10732
 8000144:	e0fffd17 	ldw	r3,-12(fp)
 8000148:	180690fa 	slli	r3,r3,3
 800014c:	10c5883a 	add	r2,r2,r3
 8000150:	10c00017 	ldw	r3,0(r2)
 8000154:	008200b4 	movhi	r2,2050
 8000158:	108a7b04 	addi	r2,r2,10732
 800015c:	e13ffd17 	ldw	r4,-12(fp)
 8000160:	200890fa 	slli	r4,r4,3
 8000164:	1105883a 	add	r2,r2,r4
 8000168:	10800104 	addi	r2,r2,4
 800016c:	10800017 	ldw	r2,0(r2)
 8000170:	1009883a 	mov	r4,r2
 8000174:	e17ffd17 	ldw	r5,-12(fp)
 8000178:	183ee83a 	callr	r3
#endif
        break;
 800017c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 8000180:	0005313a 	rdctl	r2,ipending
 8000184:	e0bfff15 	stw	r2,-4(fp)

  return active;
 8000188:	e0bfff17 	ldw	r2,-4(fp)
 800018c:	00000706 	br	80001ac <alt_irq_handler+0xb0>
      }
      mask <<= 1;
 8000190:	e0bffc17 	ldw	r2,-16(fp)
 8000194:	1085883a 	add	r2,r2,r2
 8000198:	e0bffc15 	stw	r2,-16(fp)
      i++;
 800019c:	e0bffd17 	ldw	r2,-12(fp)
 80001a0:	10800044 	addi	r2,r2,1
 80001a4:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
 80001a8:	003fe006 	br	800012c <__alt_data_end+0xfc00012c>

    active = alt_irq_pending ();
 80001ac:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
 80001b0:	e0bffb17 	ldw	r2,-20(fp)
 80001b4:	103fda1e 	bne	r2,zero,8000120 <__alt_data_end+0xfc000120>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
 80001b8:	0001883a 	nop
}
 80001bc:	e037883a 	mov	sp,fp
 80001c0:	dfc00117 	ldw	ra,4(sp)
 80001c4:	df000017 	ldw	fp,0(sp)
 80001c8:	dec00204 	addi	sp,sp,8
 80001cc:	f800283a 	ret

080001d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
 80001d0:	defffb04 	addi	sp,sp,-20
 80001d4:	dfc00415 	stw	ra,16(sp)
 80001d8:	df000315 	stw	fp,12(sp)
 80001dc:	df000304 	addi	fp,sp,12
 80001e0:	e13fff15 	stw	r4,-4(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
 80001e4:	00bfffc4 	movi	r2,-1
 80001e8:	e0bffd15 	stw	r2,-12(fp)
  badaddr = 0;
 80001ec:	e03ffe15 	stw	zero,-8(fp)
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
 80001f0:	d0a77817 	ldw	r2,-25120(gp)
 80001f4:	10000726 	beq	r2,zero,8000214 <alt_instruction_exception_entry+0x44>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
 80001f8:	d0a77817 	ldw	r2,-25120(gp)
 80001fc:	e0fffd17 	ldw	r3,-12(fp)
 8000200:	1809883a 	mov	r4,r3
 8000204:	e17fff17 	ldw	r5,-4(fp)
 8000208:	e1bffe17 	ldw	r6,-8(fp)
 800020c:	103ee83a 	callr	r2
 8000210:	00000206 	br	800021c <alt_instruction_exception_entry+0x4c>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
 8000214:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
 8000218:	0005883a 	mov	r2,zero
}
 800021c:	e037883a 	mov	sp,fp
 8000220:	dfc00117 	ldw	ra,4(sp)
 8000224:	df000017 	ldw	fp,0(sp)
 8000228:	dec00204 	addi	sp,sp,8
 800022c:	f800283a 	ret

Disassembly of section .text:

08000230 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
 8000230:	06c30034 	movhi	sp,3072
    ori sp, sp, %lo(__alt_stack_pointer)
 8000234:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
 8000238:	068200b4 	movhi	gp,2050
    ori gp, gp, %lo(_gp)
 800023c:	d6a07514 	ori	gp,gp,33236
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
 8000240:	008200b4 	movhi	r2,2050
    ori r2, r2, %lo(__bss_start)
 8000244:	1087d714 	ori	r2,r2,8028

    movhi r3, %hi(__bss_end)
 8000248:	00c200b4 	movhi	r3,2050
    ori r3, r3, %lo(__bss_end)
 800024c:	18cabb14 	ori	r3,r3,10988

    beq r2, r3, 1f
 8000250:	10c00326 	beq	r2,r3,8000260 <_start+0x30>

0:
    stw zero, (r2)
 8000254:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
 8000258:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
 800025c:	10fffd36 	bltu	r2,r3,8000254 <__alt_data_end+0xfc000254>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
 8000260:	801a6800 	call	801a680 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
 8000264:	801a82c0 	call	801a82c <alt_main>

08000268 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
 8000268:	003fff06 	br	8000268 <__alt_data_end+0xfc000268>

0800026c <_ZN6BTUartC1Ev>:
#include "BTUart.h"
#include "sys/alt_dev.h"
#include "altera_up_avalon_rs232.h"


BTUart::BTUart()
 800026c:	defffe04 	addi	sp,sp,-8
 8000270:	df000115 	stw	fp,4(sp)
 8000274:	df000104 	addi	fp,sp,4
 8000278:	e13fff15 	stw	r4,-4(fp)
 800027c:	e0ffff17 	ldw	r3,-4(fp)
 8000280:	008200b4 	movhi	r2,2050
 8000284:	10b63704 	addi	r2,r2,-10020
 8000288:	18800015 	stw	r2,0(r3)
{
    // TODO Auto-generated constructor stub
}
 800028c:	e037883a 	mov	sp,fp
 8000290:	df000017 	ldw	fp,0(sp)
 8000294:	dec00104 	addi	sp,sp,4
 8000298:	f800283a 	ret

0800029c <_ZN6BTUartD1Ev>:


BTUart::~BTUart()
 800029c:	defffd04 	addi	sp,sp,-12
 80002a0:	dfc00215 	stw	ra,8(sp)
 80002a4:	df000115 	stw	fp,4(sp)
 80002a8:	df000104 	addi	fp,sp,4
 80002ac:	e13fff15 	stw	r4,-4(fp)
 80002b0:	e0ffff17 	ldw	r3,-4(fp)
 80002b4:	008200b4 	movhi	r2,2050
 80002b8:	10b63704 	addi	r2,r2,-10020
 80002bc:	18800015 	stw	r2,0(r3)
{
	// TODO Auto-generated destructor stub
}
 80002c0:	0005883a 	mov	r2,zero
 80002c4:	10000226 	beq	r2,zero,80002d0 <_ZN6BTUartD1Ev+0x34>
 80002c8:	e13fff17 	ldw	r4,-4(fp)
 80002cc:	80029680 	call	8002968 <_ZdlPv>
 80002d0:	e037883a 	mov	sp,fp
 80002d4:	dfc00117 	ldw	ra,4(sp)
 80002d8:	df000017 	ldw	fp,0(sp)
 80002dc:	dec00204 	addi	sp,sp,8
 80002e0:	f800283a 	ret

080002e4 <_ZN6BTUartD0Ev>:
{
    // TODO Auto-generated constructor stub
}


BTUart::~BTUart()
 80002e4:	defffd04 	addi	sp,sp,-12
 80002e8:	dfc00215 	stw	ra,8(sp)
 80002ec:	df000115 	stw	fp,4(sp)
 80002f0:	df000104 	addi	fp,sp,4
 80002f4:	e13fff15 	stw	r4,-4(fp)
{
	// TODO Auto-generated destructor stub
}
 80002f8:	e13fff17 	ldw	r4,-4(fp)
 80002fc:	800029c0 	call	800029c <_ZN6BTUartD1Ev>
 8000300:	e13fff17 	ldw	r4,-4(fp)
 8000304:	80029680 	call	8002968 <_ZdlPv>
 8000308:	e037883a 	mov	sp,fp
 800030c:	dfc00117 	ldw	ra,4(sp)
 8000310:	df000017 	ldw	fp,0(sp)
 8000314:	dec00204 	addi	sp,sp,8
 8000318:	f800283a 	ret

0800031c <_ZN6BTUart4openEPKc>:


int BTUart::open(const char *device_name)
{
 800031c:	defffc04 	addi	sp,sp,-16
 8000320:	dfc00315 	stw	ra,12(sp)
 8000324:	df000215 	stw	fp,8(sp)
 8000328:	df000204 	addi	fp,sp,8
 800032c:	e13ffe15 	stw	r4,-8(fp)
 8000330:	e17fff15 	stw	r5,-4(fp)
	RS232_DEV = alt_up_rs232_open_dev(device_name);
 8000334:	e13fff17 	ldw	r4,-4(fp)
 8000338:	801c9580 	call	801c958 <alt_up_rs232_open_dev>
 800033c:	1007883a 	mov	r3,r2
 8000340:	e0bffe17 	ldw	r2,-8(fp)
 8000344:	10c00115 	stw	r3,4(r2)

    // Enable the read interrupts for the RS232 UART core 
    alt_up_rs232_enable_read_interrupt(RS232_DEV);
 8000348:	e0bffe17 	ldw	r2,-8(fp)
 800034c:	10800117 	ldw	r2,4(r2)
 8000350:	1009883a 	mov	r4,r2
 8000354:	801c60c0 	call	801c60c <alt_up_rs232_enable_read_interrupt>

    if (RS232_DEV == NULL) {
 8000358:	e0bffe17 	ldw	r2,-8(fp)
 800035c:	10800117 	ldw	r2,4(r2)
 8000360:	1000021e 	bne	r2,zero,800036c <_ZN6BTUart4openEPKc+0x50>
        return 0;
 8000364:	0005883a 	mov	r2,zero
 8000368:	00000106 	br	8000370 <_ZN6BTUart4openEPKc+0x54>
    }
        
    return 1;
 800036c:	00800044 	movi	r2,1
}
 8000370:	e037883a 	mov	sp,fp
 8000374:	dfc00117 	ldw	ra,4(sp)
 8000378:	df000017 	ldw	fp,0(sp)
 800037c:	dec00204 	addi	sp,sp,8
 8000380:	f800283a 	ret

08000384 <_ZN6BTUart6read_sEv>:


int BTUart::read_s(void)
{
 8000384:	defffc04 	addi	sp,sp,-16
 8000388:	dfc00315 	stw	ra,12(sp)
 800038c:	df000215 	stw	fp,8(sp)
 8000390:	df000204 	addi	fp,sp,8
 8000394:	e13fff15 	stw	r4,-4(fp)
    while (!read_ready()) {}    // Wait for data to be available to read
 8000398:	0001883a 	nop
 800039c:	e13fff17 	ldw	r4,-4(fp)
 80003a0:	80005900 	call	8000590 <_ZN6BTUart10read_readyEv>
 80003a4:	1005003a 	cmpeq	r2,r2,zero
 80003a8:	10803fcc 	andi	r2,r2,255
 80003ac:	103ffb1e 	bne	r2,zero,800039c <__alt_data_end+0xfc00039c>

    alt_u8 buffer;
    alt_u8 parity_error;

    alt_up_rs232_read_data(RS232_DEV, &buffer, &parity_error);
 80003b0:	e0bfff17 	ldw	r2,-4(fp)
 80003b4:	10c00117 	ldw	r3,4(r2)
 80003b8:	e0bffe44 	addi	r2,fp,-7
 80003bc:	1809883a 	mov	r4,r3
 80003c0:	e17ffe04 	addi	r5,fp,-8
 80003c4:	100d883a 	mov	r6,r2
 80003c8:	801c7c00 	call	801c7c0 <alt_up_rs232_read_data>

    return (int) buffer;
 80003cc:	e0bffe03 	ldbu	r2,-8(fp)
 80003d0:	10803fcc 	andi	r2,r2,255
}
 80003d4:	e037883a 	mov	sp,fp
 80003d8:	dfc00117 	ldw	ra,4(sp)
 80003dc:	df000017 	ldw	fp,0(sp)
 80003e0:	dec00204 	addi	sp,sp,8
 80003e4:	f800283a 	ret

080003e8 <_ZN6BTUart7write_sEh>:


int BTUart::write_s(alt_u8 data)
{
 80003e8:	defffb04 	addi	sp,sp,-20
 80003ec:	dfc00415 	stw	ra,16(sp)
 80003f0:	df000315 	stw	fp,12(sp)
 80003f4:	df000304 	addi	fp,sp,12
 80003f8:	e13ffe15 	stw	r4,-8(fp)
 80003fc:	2805883a 	mov	r2,r5
 8000400:	e0bfff05 	stb	r2,-4(fp)
    alt_up_rs232_disable_read_interrupt(RS232_DEV);
 8000404:	e0bffe17 	ldw	r2,-8(fp)
 8000408:	10800117 	ldw	r2,4(r2)
 800040c:	1009883a 	mov	r4,r2
 8000410:	801c6640 	call	801c664 <alt_up_rs232_disable_read_interrupt>

    int result = 0;
 8000414:	e03ffd15 	stw	zero,-12(fp)
    WRITE_FIFO_SPACE = alt_up_rs232_get_available_space_in_write_FIFO(RS232_DEV);
 8000418:	e0bffe17 	ldw	r2,-8(fp)
 800041c:	10800117 	ldw	r2,4(r2)
 8000420:	1009883a 	mov	r4,r2
 8000424:	801c7000 	call	801c700 <alt_up_rs232_get_available_space_in_write_FIFO>
 8000428:	1007883a 	mov	r3,r2
 800042c:	e0bffe17 	ldw	r2,-8(fp)
 8000430:	10c00215 	stw	r3,8(r2)

    if (WRITE_FIFO_SPACE >= WRITE_FIFO_EMPTY) {
 8000434:	e0bffe17 	ldw	r2,-8(fp)
 8000438:	10800217 	ldw	r2,8(r2)
 800043c:	10802030 	cmpltui	r2,r2,128
 8000440:	10000d1e 	bne	r2,zero,8000478 <_ZN6BTUart7write_sEh+0x90>
        alt_up_rs232_write_data(RS232_DEV, data);
 8000444:	e0bffe17 	ldw	r2,-8(fp)
 8000448:	10c00117 	ldw	r3,4(r2)
 800044c:	e0bfff03 	ldbu	r2,-4(fp)
 8000450:	1809883a 	mov	r4,r3
 8000454:	100b883a 	mov	r5,r2
 8000458:	801c7800 	call	801c780 <alt_up_rs232_write_data>
        alt_printf("write %c to RS232 UART\n", data);
 800045c:	e0bfff03 	ldbu	r2,-4(fp)
 8000460:	010200b4 	movhi	r4,2050
 8000464:	21362f04 	addi	r4,r4,-10052
 8000468:	100b883a 	mov	r5,r2
 800046c:	801a8e40 	call	801a8e4 <alt_printf>
        result = 1;
 8000470:	00800044 	movi	r2,1
 8000474:	e0bffd15 	stw	r2,-12(fp)
    }

    // Enable the read interrupts for the RS232 UART core 
    alt_up_rs232_enable_read_interrupt(RS232_DEV);
 8000478:	e0bffe17 	ldw	r2,-8(fp)
 800047c:	10800117 	ldw	r2,4(r2)
 8000480:	1009883a 	mov	r4,r2
 8000484:	801c60c0 	call	801c60c <alt_up_rs232_enable_read_interrupt>
    return result;
 8000488:	e0bffd17 	ldw	r2,-12(fp)
}
 800048c:	e037883a 	mov	sp,fp
 8000490:	dfc00117 	ldw	ra,4(sp)
 8000494:	df000017 	ldw	fp,0(sp)
 8000498:	dec00204 	addi	sp,sp,8
 800049c:	f800283a 	ret

080004a0 <_ZN6BTUart6read_mEPii>:


void BTUart::read_m(int *buffer, int length)
{
 80004a0:	defff904 	addi	sp,sp,-28
 80004a4:	dfc00615 	stw	ra,24(sp)
 80004a8:	df000515 	stw	fp,20(sp)
 80004ac:	dc000415 	stw	r16,16(sp)
 80004b0:	df000504 	addi	fp,sp,20
 80004b4:	e13ffc15 	stw	r4,-16(fp)
 80004b8:	e17ffd15 	stw	r5,-12(fp)
 80004bc:	e1bffe15 	stw	r6,-8(fp)
    int count;

    for (count = 0; count < length; count++) {
 80004c0:	e03ffb15 	stw	zero,-20(fp)
 80004c4:	00000c06 	br	80004f8 <_ZN6BTUart6read_mEPii+0x58>
		buffer[count] = read_s();
 80004c8:	e0bffb17 	ldw	r2,-20(fp)
 80004cc:	1085883a 	add	r2,r2,r2
 80004d0:	1085883a 	add	r2,r2,r2
 80004d4:	1007883a 	mov	r3,r2
 80004d8:	e0bffd17 	ldw	r2,-12(fp)
 80004dc:	10e1883a 	add	r16,r2,r3
 80004e0:	e13ffc17 	ldw	r4,-16(fp)
 80004e4:	80003840 	call	8000384 <_ZN6BTUart6read_sEv>
 80004e8:	80800015 	stw	r2,0(r16)

void BTUart::read_m(int *buffer, int length)
{
    int count;

    for (count = 0; count < length; count++) {
 80004ec:	e0bffb17 	ldw	r2,-20(fp)
 80004f0:	10800044 	addi	r2,r2,1
 80004f4:	e0bffb15 	stw	r2,-20(fp)
 80004f8:	e0fffb17 	ldw	r3,-20(fp)
 80004fc:	e0bffe17 	ldw	r2,-8(fp)
 8000500:	18bff116 	blt	r3,r2,80004c8 <__alt_data_end+0xfc0004c8>
		buffer[count] = read_s();
	}
}
 8000504:	e6ffff04 	addi	sp,fp,-4
 8000508:	dfc00217 	ldw	ra,8(sp)
 800050c:	df000117 	ldw	fp,4(sp)
 8000510:	dc000017 	ldw	r16,0(sp)
 8000514:	dec00304 	addi	sp,sp,12
 8000518:	f800283a 	ret

0800051c <_ZN6BTUart7write_mEPci>:


int BTUart::write_m(char data[], int length)
{
 800051c:	defffa04 	addi	sp,sp,-24
 8000520:	dfc00515 	stw	ra,20(sp)
 8000524:	df000415 	stw	fp,16(sp)
 8000528:	df000404 	addi	fp,sp,16
 800052c:	e13ffd15 	stw	r4,-12(fp)
 8000530:	e17ffe15 	stw	r5,-8(fp)
 8000534:	e1bfff15 	stw	r6,-4(fp)
    int count;

	for (count = 0; count < length; count++) {
 8000538:	e03ffc15 	stw	zero,-16(fp)
 800053c:	00000b06 	br	800056c <_ZN6BTUart7write_mEPci+0x50>
        // printf("Write from m: %c\n", data[count]);
		write_s(data[count]);
 8000540:	e0bffc17 	ldw	r2,-16(fp)
 8000544:	e0fffe17 	ldw	r3,-8(fp)
 8000548:	1885883a 	add	r2,r3,r2
 800054c:	10800003 	ldbu	r2,0(r2)
 8000550:	10803fcc 	andi	r2,r2,255
 8000554:	e13ffd17 	ldw	r4,-12(fp)
 8000558:	100b883a 	mov	r5,r2
 800055c:	80003e80 	call	80003e8 <_ZN6BTUart7write_sEh>

int BTUart::write_m(char data[], int length)
{
    int count;

	for (count = 0; count < length; count++) {
 8000560:	e0bffc17 	ldw	r2,-16(fp)
 8000564:	10800044 	addi	r2,r2,1
 8000568:	e0bffc15 	stw	r2,-16(fp)
 800056c:	e0fffc17 	ldw	r3,-16(fp)
 8000570:	e0bfff17 	ldw	r2,-4(fp)
 8000574:	18bff216 	blt	r3,r2,8000540 <__alt_data_end+0xfc000540>
        // printf("Write from m: %c\n", data[count]);
		write_s(data[count]);
	}
    return count;
 8000578:	e0bffc17 	ldw	r2,-16(fp)
}
 800057c:	e037883a 	mov	sp,fp
 8000580:	dfc00117 	ldw	ra,4(sp)
 8000584:	df000017 	ldw	fp,0(sp)
 8000588:	dec00204 	addi	sp,sp,8
 800058c:	f800283a 	ret

08000590 <_ZN6BTUart10read_readyEv>:


int BTUart::read_ready(void)
{
 8000590:	defffc04 	addi	sp,sp,-16
 8000594:	dfc00315 	stw	ra,12(sp)
 8000598:	df000215 	stw	fp,8(sp)
 800059c:	df000204 	addi	fp,sp,8
 80005a0:	e13fff15 	stw	r4,-4(fp)
    alt_u16 read_fifo_used = alt_up_rs232_get_used_space_in_read_FIFO(RS232_DEV);
 80005a4:	e0bfff17 	ldw	r2,-4(fp)
 80005a8:	10800117 	ldw	r2,4(r2)
 80005ac:	1009883a 	mov	r4,r2
 80005b0:	801c6c00 	call	801c6c0 <alt_up_rs232_get_used_space_in_read_FIFO>
 80005b4:	e0bffe0d 	sth	r2,-8(fp)
    return (read_fifo_used > READ_FIFO_EMPTY);
 80005b8:	e0bffe0b 	ldhu	r2,-8(fp)
 80005bc:	1004c03a 	cmpne	r2,r2,zero
 80005c0:	10803fcc 	andi	r2,r2,255
}
 80005c4:	e037883a 	mov	sp,fp
 80005c8:	dfc00117 	ldw	ra,4(sp)
 80005cc:	df000017 	ldw	fp,0(sp)
 80005d0:	dec00204 	addi	sp,sp,8
 80005d4:	f800283a 	ret

080005d8 <_ZN6BTUart5flushEv>:


void BTUart::flush(void)
{
 80005d8:	defffd04 	addi	sp,sp,-12
 80005dc:	dfc00215 	stw	ra,8(sp)
 80005e0:	df000115 	stw	fp,4(sp)
 80005e4:	df000104 	addi	fp,sp,4
 80005e8:	e13fff15 	stw	r4,-4(fp)
    while (read_ready()) {
 80005ec:	00000206 	br	80005f8 <_ZN6BTUart5flushEv+0x20>
        // read unwanted char out of fifo receiver buffer
        read_s();
 80005f0:	e13fff17 	ldw	r4,-4(fp)
 80005f4:	80003840 	call	8000384 <_ZN6BTUart6read_sEv>
}


void BTUart::flush(void)
{
    while (read_ready()) {
 80005f8:	e13fff17 	ldw	r4,-4(fp)
 80005fc:	80005900 	call	8000590 <_ZN6BTUart10read_readyEv>
 8000600:	1004c03a 	cmpne	r2,r2,zero
 8000604:	10803fcc 	andi	r2,r2,255
 8000608:	103ff91e 	bne	r2,zero,80005f0 <__alt_data_end+0xfc0005f0>
        // read unwanted char out of fifo receiver buffer
        read_s();
    }
    return; // no more characters so return 
 800060c:	0001883a 	nop
 8000610:	e037883a 	mov	sp,fp
 8000614:	dfc00117 	ldw	ra,4(sp)
 8000618:	df000017 	ldw	fp,0(sp)
 800061c:	dec00204 	addi	sp,sp,8
 8000620:	f800283a 	ret

08000624 <_ZN8WiFiUartC1Ev>:
#include "WiFiUart.h"
#include "sys/alt_dev.h"
#include "altera_up_avalon_rs232.h"


WiFiUart::WiFiUart()
 8000624:	defffe04 	addi	sp,sp,-8
 8000628:	df000115 	stw	fp,4(sp)
 800062c:	df000104 	addi	fp,sp,4
 8000630:	e13fff15 	stw	r4,-4(fp)
 8000634:	e0ffff17 	ldw	r3,-4(fp)
 8000638:	008200b4 	movhi	r2,2050
 800063c:	10b69004 	addi	r2,r2,-9664
 8000640:	18800015 	stw	r2,0(r3)
{
    // TODO Auto-generated constructor stub
}
 8000644:	e037883a 	mov	sp,fp
 8000648:	df000017 	ldw	fp,0(sp)
 800064c:	dec00104 	addi	sp,sp,4
 8000650:	f800283a 	ret

08000654 <_ZN8WiFiUartD1Ev>:


WiFiUart::~WiFiUart()
 8000654:	defffd04 	addi	sp,sp,-12
 8000658:	dfc00215 	stw	ra,8(sp)
 800065c:	df000115 	stw	fp,4(sp)
 8000660:	df000104 	addi	fp,sp,4
 8000664:	e13fff15 	stw	r4,-4(fp)
 8000668:	e0ffff17 	ldw	r3,-4(fp)
 800066c:	008200b4 	movhi	r2,2050
 8000670:	10b69004 	addi	r2,r2,-9664
 8000674:	18800015 	stw	r2,0(r3)
{
	// TODO Auto-generated destructor stub
}
 8000678:	0005883a 	mov	r2,zero
 800067c:	10000226 	beq	r2,zero,8000688 <_ZN8WiFiUartD1Ev+0x34>
 8000680:	e13fff17 	ldw	r4,-4(fp)
 8000684:	80029680 	call	8002968 <_ZdlPv>
 8000688:	e037883a 	mov	sp,fp
 800068c:	dfc00117 	ldw	ra,4(sp)
 8000690:	df000017 	ldw	fp,0(sp)
 8000694:	dec00204 	addi	sp,sp,8
 8000698:	f800283a 	ret

0800069c <_ZN8WiFiUartD0Ev>:
{
    // TODO Auto-generated constructor stub
}


WiFiUart::~WiFiUart()
 800069c:	defffd04 	addi	sp,sp,-12
 80006a0:	dfc00215 	stw	ra,8(sp)
 80006a4:	df000115 	stw	fp,4(sp)
 80006a8:	df000104 	addi	fp,sp,4
 80006ac:	e13fff15 	stw	r4,-4(fp)
{
	// TODO Auto-generated destructor stub
}
 80006b0:	e13fff17 	ldw	r4,-4(fp)
 80006b4:	80006540 	call	8000654 <_ZN8WiFiUartD1Ev>
 80006b8:	e13fff17 	ldw	r4,-4(fp)
 80006bc:	80029680 	call	8002968 <_ZdlPv>
 80006c0:	e037883a 	mov	sp,fp
 80006c4:	dfc00117 	ldw	ra,4(sp)
 80006c8:	df000017 	ldw	fp,0(sp)
 80006cc:	dec00204 	addi	sp,sp,8
 80006d0:	f800283a 	ret

080006d4 <_ZN8WiFiUart4openEPKc>:


int WiFiUart::open(const char *device_name)
{
 80006d4:	defffc04 	addi	sp,sp,-16
 80006d8:	dfc00315 	stw	ra,12(sp)
 80006dc:	df000215 	stw	fp,8(sp)
 80006e0:	df000204 	addi	fp,sp,8
 80006e4:	e13ffe15 	stw	r4,-8(fp)
 80006e8:	e17fff15 	stw	r5,-4(fp)
	RS232_DEV = alt_up_rs232_open_dev(device_name);
 80006ec:	e13fff17 	ldw	r4,-4(fp)
 80006f0:	801c9580 	call	801c958 <alt_up_rs232_open_dev>
 80006f4:	1007883a 	mov	r3,r2
 80006f8:	e0bffe17 	ldw	r2,-8(fp)
 80006fc:	10c00115 	stw	r3,4(r2)

    // Enable the read interrupts for the RS232 UART core 
    alt_up_rs232_enable_read_interrupt(RS232_DEV);
 8000700:	e0bffe17 	ldw	r2,-8(fp)
 8000704:	10800117 	ldw	r2,4(r2)
 8000708:	1009883a 	mov	r4,r2
 800070c:	801c60c0 	call	801c60c <alt_up_rs232_enable_read_interrupt>

    if (RS232_DEV == NULL) {
 8000710:	e0bffe17 	ldw	r2,-8(fp)
 8000714:	10800117 	ldw	r2,4(r2)
 8000718:	1000021e 	bne	r2,zero,8000724 <_ZN8WiFiUart4openEPKc+0x50>
        return 0;
 800071c:	0005883a 	mov	r2,zero
 8000720:	00000106 	br	8000728 <_ZN8WiFiUart4openEPKc+0x54>
    }
        
    return 1;
 8000724:	00800044 	movi	r2,1
}
 8000728:	e037883a 	mov	sp,fp
 800072c:	dfc00117 	ldw	ra,4(sp)
 8000730:	df000017 	ldw	fp,0(sp)
 8000734:	dec00204 	addi	sp,sp,8
 8000738:	f800283a 	ret

0800073c <_ZN8WiFiUart7connectEv>:


int WiFiUart::connect()
{
 800073c:	deffda04 	addi	sp,sp,-152
 8000740:	dfc02515 	stw	ra,148(sp)
 8000744:	df002415 	stw	fp,144(sp)
 8000748:	df002404 	addi	fp,sp,144
 800074c:	e13fff15 	stw	r4,-4(fp)
	if (RS232_DEV == NULL) {
 8000750:	e0bfff17 	ldw	r2,-4(fp)
 8000754:	10800117 	ldw	r2,4(r2)
 8000758:	1000051e 	bne	r2,zero,8000770 <_ZN8WiFiUart7connectEv+0x34>
        printf("ERROR: Open RS232 port before conencting.\n");
 800075c:	010200b4 	movhi	r4,2050
 8000760:	21363904 	addi	r4,r4,-10012
 8000764:	80043180 	call	8004318 <puts>
        return 0;
 8000768:	0005883a 	mov	r2,zero
 800076c:	00003206 	br	8000838 <_ZN8WiFiUart7connectEv+0xfc>
    }

    char ssid[20], passwd[20];

    send_command("AT+CWMODE_CUR=1");    // Obtain current AT command version
 8000770:	e13fff17 	ldw	r4,-4(fp)
 8000774:	014200b4 	movhi	r5,2050
 8000778:	29764404 	addi	r5,r5,-9968
 800077c:	800084c0 	call	800084c <_ZN8WiFiUart12send_commandEPKc>
    send_command("AT+CWLAPOPT=1,0x2");  // Get avaialble wifi ssid, sorted according to RSSI (signal strength)
 8000780:	e13fff17 	ldw	r4,-4(fp)
 8000784:	014200b4 	movhi	r5,2050
 8000788:	29764804 	addi	r5,r5,-9952
 800078c:	800084c0 	call	800084c <_ZN8WiFiUart12send_commandEPKc>

    printf("Network Name (SSID) List:\n");
 8000790:	010200b4 	movhi	r4,2050
 8000794:	21364d04 	addi	r4,r4,-9932
 8000798:	80043180 	call	8004318 <puts>
    send_command("AT+CWLAP");           // List available APs
 800079c:	e13fff17 	ldw	r4,-4(fp)
 80007a0:	014200b4 	movhi	r5,2050
 80007a4:	29765404 	addi	r5,r5,-9904
 80007a8:	800084c0 	call	800084c <_ZN8WiFiUart12send_commandEPKc>

    // Collect user input
    printf("Enter the Network Name (SSID): ");
 80007ac:	010200b4 	movhi	r4,2050
 80007b0:	21365704 	addi	r4,r4,-9892
 80007b4:	80042040 	call	8004204 <printf>
    scanf("%s", ssid);
 80007b8:	010200b4 	movhi	r4,2050
 80007bc:	21365f04 	addi	r4,r4,-9860
 80007c0:	e17fdc04 	addi	r5,fp,-144
 80007c4:	80043800 	call	8004380 <scanf>
    printf("\n");
 80007c8:	01000284 	movi	r4,10
 80007cc:	80042480 	call	8004248 <putchar>

    printf("Enter the Password of Network Name (SSID): ");
 80007d0:	010200b4 	movhi	r4,2050
 80007d4:	21366004 	addi	r4,r4,-9856
 80007d8:	80042040 	call	8004204 <printf>
    scanf("%s", passwd);
 80007dc:	e0bfe104 	addi	r2,fp,-124
 80007e0:	010200b4 	movhi	r4,2050
 80007e4:	21365f04 	addi	r4,r4,-9860
 80007e8:	100b883a 	mov	r5,r2
 80007ec:	80043800 	call	8004380 <scanf>
    printf("\n");
 80007f0:	01000284 	movi	r4,10
 80007f4:	80042480 	call	8004248 <putchar>

    printf("Connecting to WiFi AP (SSID: %s)\n", ssid);
 80007f8:	010200b4 	movhi	r4,2050
 80007fc:	21366b04 	addi	r4,r4,-9812
 8000800:	e17fdc04 	addi	r5,fp,-144
 8000804:	80042040 	call	8004204 <printf>

    char cmd[100];
    sprintf(cmd, "AT+CWJAP_CUR=\"%s\",\"%s\"", ssid, passwd);   // Connects to an AP
 8000808:	e0ffe604 	addi	r3,fp,-104
 800080c:	e0bfe104 	addi	r2,fp,-124
 8000810:	1809883a 	mov	r4,r3
 8000814:	014200b4 	movhi	r5,2050
 8000818:	29767404 	addi	r5,r5,-9776
 800081c:	e1bfdc04 	addi	r6,fp,-144
 8000820:	100f883a 	mov	r7,r2
 8000824:	80047400 	call	8004740 <sprintf>

    // Return the response obtained after sending AT command
    // requesting wifi connection
    return send_command(cmd);
 8000828:	e0bfe604 	addi	r2,fp,-104
 800082c:	e13fff17 	ldw	r4,-4(fp)
 8000830:	100b883a 	mov	r5,r2
 8000834:	800084c0 	call	800084c <_ZN8WiFiUart12send_commandEPKc>
    return 1;
}
 8000838:	e037883a 	mov	sp,fp
 800083c:	dfc00117 	ldw	ra,4(sp)
 8000840:	df000017 	ldw	fp,0(sp)
 8000844:	dec00204 	addi	sp,sp,8
 8000848:	f800283a 	ret

0800084c <_ZN8WiFiUart12send_commandEPKc>:


int WiFiUart::send_command(const char *cmd)
{
 800084c:	defeff04 	addi	sp,sp,-1028
 8000850:	dfc10015 	stw	ra,1024(sp)
 8000854:	df00ff15 	stw	fp,1020(sp)
 8000858:	dc00fe15 	stw	r16,1016(sp)
 800085c:	df00ff04 	addi	fp,sp,1020
 8000860:	e13ffd15 	stw	r4,-12(fp)
 8000864:	e17ffe15 	stw	r5,-8(fp)
    int count;

	for (count = 0; count < strlen(cmd); count++) {
 8000868:	e03f0115 	stw	zero,-1020(fp)
 800086c:	00000b06 	br	800089c <_ZN8WiFiUart12send_commandEPKc+0x50>
		write_s(cmd[count]);
 8000870:	e0bf0117 	ldw	r2,-1020(fp)
 8000874:	e0fffe17 	ldw	r3,-8(fp)
 8000878:	1885883a 	add	r2,r3,r2
 800087c:	10800003 	ldbu	r2,0(r2)
 8000880:	10803fcc 	andi	r2,r2,255
 8000884:	e13ffd17 	ldw	r4,-12(fp)
 8000888:	100b883a 	mov	r5,r2
 800088c:	8000b6c0 	call	8000b6c <_ZN8WiFiUart7write_sEh>

int WiFiUart::send_command(const char *cmd)
{
    int count;

	for (count = 0; count < strlen(cmd); count++) {
 8000890:	e0bf0117 	ldw	r2,-1020(fp)
 8000894:	10800044 	addi	r2,r2,1
 8000898:	e0bf0115 	stw	r2,-1020(fp)
 800089c:	e43f0117 	ldw	r16,-1020(fp)
 80008a0:	e13ffe17 	ldw	r4,-8(fp)
 80008a4:	80049680 	call	8004968 <strlen>
 80008a8:	80bff136 	bltu	r16,r2,8000870 <__alt_data_end+0xfc000870>
		write_s(cmd[count]);
	}
    alt_u8 c = {'\r'};
 80008ac:	00800344 	movi	r2,13
 80008b0:	e0bf0205 	stb	r2,-1016(fp)
    write_s(c);
 80008b4:	e0bf0203 	ldbu	r2,-1016(fp)
 80008b8:	e13ffd17 	ldw	r4,-12(fp)
 80008bc:	100b883a 	mov	r5,r2
 80008c0:	8000b6c0 	call	8000b6c <_ZN8WiFiUart7write_sEh>
    c = {'\n'};
 80008c4:	00800284 	movi	r2,10
 80008c8:	e0bf0205 	stb	r2,-1016(fp)
    write_s(c);
 80008cc:	e0bf0203 	ldbu	r2,-1016(fp)
 80008d0:	e13ffd17 	ldw	r4,-12(fp)
 80008d4:	100b883a 	mov	r5,r2
 80008d8:	8000b6c0 	call	8000b6c <_ZN8WiFiUart7write_sEh>

    char buffer[1000];
    count = 0;
 80008dc:	e03f0115 	stw	zero,-1020(fp)

    while (read_ready()) {
 80008e0:	00000a06 	br	800090c <_ZN8WiFiUart12send_commandEPKc+0xc0>
        // read unwanted char out of fifo receiver buffer
        buffer[count] = read_s();
 80008e4:	e13ffd17 	ldw	r4,-12(fp)
 80008e8:	8000c240 	call	8000c24 <_ZN8WiFiUart6read_sEv>
 80008ec:	1009883a 	mov	r4,r2
 80008f0:	e0ff0244 	addi	r3,fp,-1015
 80008f4:	e0bf0117 	ldw	r2,-1020(fp)
 80008f8:	1885883a 	add	r2,r3,r2
 80008fc:	11000005 	stb	r4,0(r2)
        count++;
 8000900:	e0bf0117 	ldw	r2,-1020(fp)
 8000904:	10800044 	addi	r2,r2,1
 8000908:	e0bf0115 	stw	r2,-1020(fp)
    write_s(c);

    char buffer[1000];
    count = 0;

    while (read_ready()) {
 800090c:	e13ffd17 	ldw	r4,-12(fp)
 8000910:	8000c840 	call	8000c84 <_ZN8WiFiUart10read_readyEv>
 8000914:	1004c03a 	cmpne	r2,r2,zero
 8000918:	10803fcc 	andi	r2,r2,255
 800091c:	103ff11e 	bne	r2,zero,80008e4 <__alt_data_end+0xfc0008e4>
        // read unwanted char out of fifo receiver buffer
        buffer[count] = read_s();
        count++;
    }

    if (strstr(buffer, "OK") != NULL) {
 8000920:	e0bf0244 	addi	r2,fp,-1015
 8000924:	1009883a 	mov	r4,r2
 8000928:	014200b4 	movhi	r5,2050
 800092c:	29767a04 	addi	r5,r5,-9752
 8000930:	8004e700 	call	8004e70 <strstr>
 8000934:	10000a26 	beq	r2,zero,8000960 <_ZN8WiFiUart12send_commandEPKc+0x114>
        if (strcmp("AT+CWLAP", cmd) == 0)
 8000938:	010200b4 	movhi	r4,2050
 800093c:	21365404 	addi	r4,r4,-9904
 8000940:	e17ffe17 	ldw	r5,-8(fp)
 8000944:	80048340 	call	8004834 <strcmp>
 8000948:	1000031e 	bne	r2,zero,8000958 <_ZN8WiFiUart12send_commandEPKc+0x10c>
            printf("%s\n", buffer);
 800094c:	e0bf0244 	addi	r2,fp,-1015
 8000950:	1009883a 	mov	r4,r2
 8000954:	80043180 	call	8004318 <puts>
        return true;
 8000958:	00800044 	movi	r2,1
 800095c:	00001e06 	br	80009d8 <_ZN8WiFiUart12send_commandEPKc+0x18c>
    } else if (strstr(buffer, "ERROR") != NULL) {
 8000960:	e0bf0244 	addi	r2,fp,-1015
 8000964:	1009883a 	mov	r4,r2
 8000968:	014200b4 	movhi	r5,2050
 800096c:	29767b04 	addi	r5,r5,-9748
 8000970:	8004e700 	call	8004e70 <strstr>
 8000974:	10000726 	beq	r2,zero,8000994 <_ZN8WiFiUart12send_commandEPKc+0x148>
        printf("AT ERROR: %s\n", buffer);
 8000978:	e0bf0244 	addi	r2,fp,-1015
 800097c:	010200b4 	movhi	r4,2050
 8000980:	21367d04 	addi	r4,r4,-9740
 8000984:	100b883a 	mov	r5,r2
 8000988:	80042040 	call	8004204 <printf>
        return false;
 800098c:	0005883a 	mov	r2,zero
 8000990:	00001106 	br	80009d8 <_ZN8WiFiUart12send_commandEPKc+0x18c>
    } else if (strstr(buffer, "FAIL") != NULL) {
 8000994:	e0bf0244 	addi	r2,fp,-1015
 8000998:	1009883a 	mov	r4,r2
 800099c:	014200b4 	movhi	r5,2050
 80009a0:	29768104 	addi	r5,r5,-9724
 80009a4:	8004e700 	call	8004e70 <strstr>
 80009a8:	10000726 	beq	r2,zero,80009c8 <_ZN8WiFiUart12send_commandEPKc+0x17c>
        printf("AT ERROR: %s\n", buffer);
 80009ac:	e0bf0244 	addi	r2,fp,-1015
 80009b0:	010200b4 	movhi	r4,2050
 80009b4:	21367d04 	addi	r4,r4,-9740
 80009b8:	100b883a 	mov	r5,r2
 80009bc:	80042040 	call	8004204 <printf>
        return false;
 80009c0:	0005883a 	mov	r2,zero
 80009c4:	00000406 	br	80009d8 <_ZN8WiFiUart12send_commandEPKc+0x18c>
    }

    printf("AT ERROR: Buffer empty.\n");
 80009c8:	010200b4 	movhi	r4,2050
 80009cc:	21368304 	addi	r4,r4,-9716
 80009d0:	80043180 	call	8004318 <puts>
    return false;
 80009d4:	0005883a 	mov	r2,zero
}
 80009d8:	e6ffff04 	addi	sp,fp,-4
 80009dc:	dfc00217 	ldw	ra,8(sp)
 80009e0:	df000117 	ldw	fp,4(sp)
 80009e4:	dc000017 	ldw	r16,0(sp)
 80009e8:	dec00304 	addi	sp,sp,12
 80009ec:	f800283a 	ret

080009f0 <_ZN8WiFiUart9send_dataEPKci>:


int WiFiUart::send_data(const char *data, int length)
{
 80009f0:	deff0004 	addi	sp,sp,-1024
 80009f4:	dfc0ff15 	stw	ra,1020(sp)
 80009f8:	df00fe15 	stw	fp,1016(sp)
 80009fc:	df00fe04 	addi	fp,sp,1016
 8000a00:	e13ffd15 	stw	r4,-12(fp)
 8000a04:	e17ffe15 	stw	r5,-8(fp)
 8000a08:	e1bfff15 	stw	r6,-4(fp)
    int count;

	for (count = 0; count < length; count++) {
 8000a0c:	e03f0215 	stw	zero,-1016(fp)
 8000a10:	00000b06 	br	8000a40 <_ZN8WiFiUart9send_dataEPKci+0x50>
		write_s(data[count]);
 8000a14:	e0bf0217 	ldw	r2,-1016(fp)
 8000a18:	e0fffe17 	ldw	r3,-8(fp)
 8000a1c:	1885883a 	add	r2,r3,r2
 8000a20:	10800003 	ldbu	r2,0(r2)
 8000a24:	10803fcc 	andi	r2,r2,255
 8000a28:	e13ffd17 	ldw	r4,-12(fp)
 8000a2c:	100b883a 	mov	r5,r2
 8000a30:	8000b6c0 	call	8000b6c <_ZN8WiFiUart7write_sEh>

int WiFiUart::send_data(const char *data, int length)
{
    int count;

	for (count = 0; count < length; count++) {
 8000a34:	e0bf0217 	ldw	r2,-1016(fp)
 8000a38:	10800044 	addi	r2,r2,1
 8000a3c:	e0bf0215 	stw	r2,-1016(fp)
 8000a40:	e0ff0217 	ldw	r3,-1016(fp)
 8000a44:	e0bfff17 	ldw	r2,-4(fp)
 8000a48:	18bff216 	blt	r3,r2,8000a14 <__alt_data_end+0xfc000a14>
		write_s(data[count]);
	}

    char buffer[1000];
    count = 0;
 8000a4c:	e03f0215 	stw	zero,-1016(fp)

    while (read_ready()) {
 8000a50:	00000a06 	br	8000a7c <_ZN8WiFiUart9send_dataEPKci+0x8c>
        // read unwanted char out of fifo receiver buffer
        buffer[count] = read_s();
 8000a54:	e13ffd17 	ldw	r4,-12(fp)
 8000a58:	8000c240 	call	8000c24 <_ZN8WiFiUart6read_sEv>
 8000a5c:	1009883a 	mov	r4,r2
 8000a60:	e0ff0304 	addi	r3,fp,-1012
 8000a64:	e0bf0217 	ldw	r2,-1016(fp)
 8000a68:	1885883a 	add	r2,r3,r2
 8000a6c:	11000005 	stb	r4,0(r2)
        count++;
 8000a70:	e0bf0217 	ldw	r2,-1016(fp)
 8000a74:	10800044 	addi	r2,r2,1
 8000a78:	e0bf0215 	stw	r2,-1016(fp)
	}

    char buffer[1000];
    count = 0;

    while (read_ready()) {
 8000a7c:	e13ffd17 	ldw	r4,-12(fp)
 8000a80:	8000c840 	call	8000c84 <_ZN8WiFiUart10read_readyEv>
 8000a84:	1004c03a 	cmpne	r2,r2,zero
 8000a88:	10803fcc 	andi	r2,r2,255
 8000a8c:	103ff11e 	bne	r2,zero,8000a54 <__alt_data_end+0xfc000a54>
        // read unwanted char out of fifo receiver buffer
        buffer[count] = read_s();
        count++;
    }

    if (strstr(buffer, "SEND OK") != NULL) {
 8000a90:	e0bf0304 	addi	r2,fp,-1012
 8000a94:	1009883a 	mov	r4,r2
 8000a98:	014200b4 	movhi	r5,2050
 8000a9c:	29768904 	addi	r5,r5,-9692
 8000aa0:	8004e700 	call	8004e70 <strstr>
 8000aa4:	10000226 	beq	r2,zero,8000ab0 <_ZN8WiFiUart9send_dataEPKci+0xc0>
        return true;
 8000aa8:	00800044 	movi	r2,1
 8000aac:	00000e06 	br	8000ae8 <_ZN8WiFiUart9send_dataEPKci+0xf8>
    } else if (strstr(buffer, "SEND FAIL") != NULL) {
 8000ab0:	e0bf0304 	addi	r2,fp,-1012
 8000ab4:	1009883a 	mov	r4,r2
 8000ab8:	014200b4 	movhi	r5,2050
 8000abc:	29768b04 	addi	r5,r5,-9684
 8000ac0:	8004e700 	call	8004e70 <strstr>
 8000ac4:	10000726 	beq	r2,zero,8000ae4 <_ZN8WiFiUart9send_dataEPKci+0xf4>
        printf("%s", buffer);
 8000ac8:	e0bf0304 	addi	r2,fp,-1012
 8000acc:	010200b4 	movhi	r4,2050
 8000ad0:	21365f04 	addi	r4,r4,-9860
 8000ad4:	100b883a 	mov	r5,r2
 8000ad8:	80042040 	call	8004204 <printf>
        return false;
 8000adc:	0005883a 	mov	r2,zero
 8000ae0:	00000106 	br	8000ae8 <_ZN8WiFiUart9send_dataEPKci+0xf8>
    }

    return false;
 8000ae4:	0005883a 	mov	r2,zero
}
 8000ae8:	e037883a 	mov	sp,fp
 8000aec:	dfc00117 	ldw	ra,4(sp)
 8000af0:	df000017 	ldw	fp,0(sp)
 8000af4:	dec00204 	addi	sp,sp,8
 8000af8:	f800283a 	ret

08000afc <_ZN8WiFiUart4getsEPci>:


void WiFiUart::gets(char *buffer, int length)
{
 8000afc:	defff904 	addi	sp,sp,-28
 8000b00:	dfc00615 	stw	ra,24(sp)
 8000b04:	df000515 	stw	fp,20(sp)
 8000b08:	dc000415 	stw	r16,16(sp)
 8000b0c:	df000504 	addi	fp,sp,20
 8000b10:	e13ffc15 	stw	r4,-16(fp)
 8000b14:	e17ffd15 	stw	r5,-12(fp)
 8000b18:	e1bffe15 	stw	r6,-8(fp)
	int count;

    for (count = 0; count < length; count++) {
 8000b1c:	e03ffb15 	stw	zero,-20(fp)
 8000b20:	00000906 	br	8000b48 <_ZN8WiFiUart4getsEPci+0x4c>
		buffer[count] = read_s();
 8000b24:	e0bffb17 	ldw	r2,-20(fp)
 8000b28:	e0fffd17 	ldw	r3,-12(fp)
 8000b2c:	18a1883a 	add	r16,r3,r2
 8000b30:	e13ffc17 	ldw	r4,-16(fp)
 8000b34:	8000c240 	call	8000c24 <_ZN8WiFiUart6read_sEv>
 8000b38:	80800005 	stb	r2,0(r16)

void WiFiUart::gets(char *buffer, int length)
{
	int count;

    for (count = 0; count < length; count++) {
 8000b3c:	e0bffb17 	ldw	r2,-20(fp)
 8000b40:	10800044 	addi	r2,r2,1
 8000b44:	e0bffb15 	stw	r2,-20(fp)
 8000b48:	e0fffb17 	ldw	r3,-20(fp)
 8000b4c:	e0bffe17 	ldw	r2,-8(fp)
 8000b50:	18bff416 	blt	r3,r2,8000b24 <__alt_data_end+0xfc000b24>
		buffer[count] = read_s();
	}
}
 8000b54:	e6ffff04 	addi	sp,fp,-4
 8000b58:	dfc00217 	ldw	ra,8(sp)
 8000b5c:	df000117 	ldw	fp,4(sp)
 8000b60:	dc000017 	ldw	r16,0(sp)
 8000b64:	dec00304 	addi	sp,sp,12
 8000b68:	f800283a 	ret

08000b6c <_ZN8WiFiUart7write_sEh>:


int WiFiUart::write_s(alt_u8 data)
{
 8000b6c:	defffb04 	addi	sp,sp,-20
 8000b70:	dfc00415 	stw	ra,16(sp)
 8000b74:	df000315 	stw	fp,12(sp)
 8000b78:	df000304 	addi	fp,sp,12
 8000b7c:	e13ffe15 	stw	r4,-8(fp)
 8000b80:	2805883a 	mov	r2,r5
 8000b84:	e0bfff05 	stb	r2,-4(fp)
    alt_up_rs232_disable_read_interrupt(RS232_DEV);
 8000b88:	e0bffe17 	ldw	r2,-8(fp)
 8000b8c:	10800117 	ldw	r2,4(r2)
 8000b90:	1009883a 	mov	r4,r2
 8000b94:	801c6640 	call	801c664 <alt_up_rs232_disable_read_interrupt>

    int result = 0;
 8000b98:	e03ffd15 	stw	zero,-12(fp)
    WRITE_FIFO_SPACE = alt_up_rs232_get_available_space_in_write_FIFO(RS232_DEV);
 8000b9c:	e0bffe17 	ldw	r2,-8(fp)
 8000ba0:	10800117 	ldw	r2,4(r2)
 8000ba4:	1009883a 	mov	r4,r2
 8000ba8:	801c7000 	call	801c700 <alt_up_rs232_get_available_space_in_write_FIFO>
 8000bac:	1007883a 	mov	r3,r2
 8000bb0:	e0bffe17 	ldw	r2,-8(fp)
 8000bb4:	10c00215 	stw	r3,8(r2)

    if (WRITE_FIFO_SPACE >= WRITE_FIFO_EMPTY) {
 8000bb8:	e0bffe17 	ldw	r2,-8(fp)
 8000bbc:	10800217 	ldw	r2,8(r2)
 8000bc0:	10802030 	cmpltui	r2,r2,128
 8000bc4:	10000d1e 	bne	r2,zero,8000bfc <_ZN8WiFiUart7write_sEh+0x90>
        alt_up_rs232_write_data(RS232_DEV, data);
 8000bc8:	e0bffe17 	ldw	r2,-8(fp)
 8000bcc:	10c00117 	ldw	r3,4(r2)
 8000bd0:	e0bfff03 	ldbu	r2,-4(fp)
 8000bd4:	1809883a 	mov	r4,r3
 8000bd8:	100b883a 	mov	r5,r2
 8000bdc:	801c7800 	call	801c780 <alt_up_rs232_write_data>
        printf("%s", data);
 8000be0:	e0bfff03 	ldbu	r2,-4(fp)
 8000be4:	010200b4 	movhi	r4,2050
 8000be8:	21365f04 	addi	r4,r4,-9860
 8000bec:	100b883a 	mov	r5,r2
 8000bf0:	80042040 	call	8004204 <printf>
        result = 1;
 8000bf4:	00800044 	movi	r2,1
 8000bf8:	e0bffd15 	stw	r2,-12(fp)
    }

    // Enable the read interrupts for the RS232 UART core 
    alt_up_rs232_enable_read_interrupt(RS232_DEV);
 8000bfc:	e0bffe17 	ldw	r2,-8(fp)
 8000c00:	10800117 	ldw	r2,4(r2)
 8000c04:	1009883a 	mov	r4,r2
 8000c08:	801c60c0 	call	801c60c <alt_up_rs232_enable_read_interrupt>
    return result;
 8000c0c:	e0bffd17 	ldw	r2,-12(fp)
}
 8000c10:	e037883a 	mov	sp,fp
 8000c14:	dfc00117 	ldw	ra,4(sp)
 8000c18:	df000017 	ldw	fp,0(sp)
 8000c1c:	dec00204 	addi	sp,sp,8
 8000c20:	f800283a 	ret

08000c24 <_ZN8WiFiUart6read_sEv>:


unsigned char WiFiUart::read_s(void)
{
 8000c24:	defffc04 	addi	sp,sp,-16
 8000c28:	dfc00315 	stw	ra,12(sp)
 8000c2c:	df000215 	stw	fp,8(sp)
 8000c30:	df000204 	addi	fp,sp,8
 8000c34:	e13fff15 	stw	r4,-4(fp)
    while (!read_ready()) {}    // Wait for data to be available to read
 8000c38:	0001883a 	nop
 8000c3c:	e13fff17 	ldw	r4,-4(fp)
 8000c40:	8000c840 	call	8000c84 <_ZN8WiFiUart10read_readyEv>
 8000c44:	1005003a 	cmpeq	r2,r2,zero
 8000c48:	10803fcc 	andi	r2,r2,255
 8000c4c:	103ffb1e 	bne	r2,zero,8000c3c <__alt_data_end+0xfc000c3c>

    alt_u8 buffer;
    alt_u8 parity_error;

    alt_up_rs232_read_data(RS232_DEV, &buffer, &parity_error);
 8000c50:	e0bfff17 	ldw	r2,-4(fp)
 8000c54:	10c00117 	ldw	r3,4(r2)
 8000c58:	e0bffe44 	addi	r2,fp,-7
 8000c5c:	1809883a 	mov	r4,r3
 8000c60:	e17ffe04 	addi	r5,fp,-8
 8000c64:	100d883a 	mov	r6,r2
 8000c68:	801c7c00 	call	801c7c0 <alt_up_rs232_read_data>

    return (unsigned char) buffer;
 8000c6c:	e0bffe03 	ldbu	r2,-8(fp)
}
 8000c70:	e037883a 	mov	sp,fp
 8000c74:	dfc00117 	ldw	ra,4(sp)
 8000c78:	df000017 	ldw	fp,0(sp)
 8000c7c:	dec00204 	addi	sp,sp,8
 8000c80:	f800283a 	ret

08000c84 <_ZN8WiFiUart10read_readyEv>:


int WiFiUart::read_ready(void)
{
 8000c84:	defffc04 	addi	sp,sp,-16
 8000c88:	dfc00315 	stw	ra,12(sp)
 8000c8c:	df000215 	stw	fp,8(sp)
 8000c90:	df000204 	addi	fp,sp,8
 8000c94:	e13fff15 	stw	r4,-4(fp)
    alt_u16 read_fifo_used = alt_up_rs232_get_used_space_in_read_FIFO(RS232_DEV);
 8000c98:	e0bfff17 	ldw	r2,-4(fp)
 8000c9c:	10800117 	ldw	r2,4(r2)
 8000ca0:	1009883a 	mov	r4,r2
 8000ca4:	801c6c00 	call	801c6c0 <alt_up_rs232_get_used_space_in_read_FIFO>
 8000ca8:	e0bffe0d 	sth	r2,-8(fp)
    return (read_fifo_used > READ_FIFO_EMPTY);
 8000cac:	e0bffe0b 	ldhu	r2,-8(fp)
 8000cb0:	1004c03a 	cmpne	r2,r2,zero
 8000cb4:	10803fcc 	andi	r2,r2,255
}
 8000cb8:	e037883a 	mov	sp,fp
 8000cbc:	dfc00117 	ldw	ra,4(sp)
 8000cc0:	df000017 	ldw	fp,0(sp)
 8000cc4:	dec00204 	addi	sp,sp,8
 8000cc8:	f800283a 	ret

08000ccc <_ZN8WiFiUart5flushEv>:


void WiFiUart::flush(void)
{
 8000ccc:	defffd04 	addi	sp,sp,-12
 8000cd0:	dfc00215 	stw	ra,8(sp)
 8000cd4:	df000115 	stw	fp,4(sp)
 8000cd8:	df000104 	addi	fp,sp,4
 8000cdc:	e13fff15 	stw	r4,-4(fp)
    while (read_ready()) {
 8000ce0:	00000206 	br	8000cec <_ZN8WiFiUart5flushEv+0x20>
        // read unwanted char out of fifo receiver buffer
        read_s();
 8000ce4:	e13fff17 	ldw	r4,-4(fp)
 8000ce8:	8000c240 	call	8000c24 <_ZN8WiFiUart6read_sEv>
}


void WiFiUart::flush(void)
{
    while (read_ready()) {
 8000cec:	e13fff17 	ldw	r4,-4(fp)
 8000cf0:	8000c840 	call	8000c84 <_ZN8WiFiUart10read_readyEv>
 8000cf4:	1004c03a 	cmpne	r2,r2,zero
 8000cf8:	10803fcc 	andi	r2,r2,255
 8000cfc:	103ff91e 	bne	r2,zero,8000ce4 <__alt_data_end+0xfc000ce4>
        // read unwanted char out of fifo receiver buffer
        read_s();
    }
    return; // no more characters so return 
 8000d00:	0001883a 	nop
 8000d04:	e037883a 	mov	sp,fp
 8000d08:	dfc00117 	ldw	ra,4(sp)
 8000d0c:	df000017 	ldw	fp,0(sp)
 8000d10:	dec00204 	addi	sp,sp,8
 8000d14:	f800283a 	ret

08000d18 <alt_dma_txchan_close>:
 * system that it has finished with a given DMA transmit channel. This is only
 * provided for completness.
 */

static ALT_INLINE int alt_dma_txchan_close (alt_dma_txchan dma)
{
 8000d18:	defffe04 	addi	sp,sp,-8
 8000d1c:	df000115 	stw	fp,4(sp)
 8000d20:	df000104 	addi	fp,sp,4
 8000d24:	e13fff15 	stw	r4,-4(fp)
  return 0;
 8000d28:	0005883a 	mov	r2,zero
}
 8000d2c:	e037883a 	mov	sp,fp
 8000d30:	df000017 	ldw	fp,0(sp)
 8000d34:	dec00104 	addi	sp,sp,4
 8000d38:	f800283a 	ret

08000d3c <alt_dma_txchan_send>:
static ALT_INLINE int alt_dma_txchan_send (alt_dma_txchan dma, 
             const void* from, 
             alt_u32 length,
             alt_txchan_done* done, 
             void* handle)
{
 8000d3c:	defff904 	addi	sp,sp,-28
 8000d40:	dfc00615 	stw	ra,24(sp)
 8000d44:	df000515 	stw	fp,20(sp)
 8000d48:	df000504 	addi	fp,sp,20
 8000d4c:	e13ffc15 	stw	r4,-16(fp)
 8000d50:	e17ffd15 	stw	r5,-12(fp)
 8000d54:	e1bffe15 	stw	r6,-8(fp)
 8000d58:	e1ffff15 	stw	r7,-4(fp)
  return dma ? dma->dma_send (dma, 
        from, 
        length,
        done, 
        handle) : -ENODEV;
 8000d5c:	e0bffc17 	ldw	r2,-16(fp)
 8000d60:	10000a26 	beq	r2,zero,8000d8c <alt_dma_txchan_send+0x50>
 8000d64:	e0bffc17 	ldw	r2,-16(fp)
 8000d68:	10800417 	ldw	r2,16(r2)
 8000d6c:	e0c00217 	ldw	r3,8(fp)
 8000d70:	d8c00015 	stw	r3,0(sp)
 8000d74:	e13ffc17 	ldw	r4,-16(fp)
 8000d78:	e17ffd17 	ldw	r5,-12(fp)
 8000d7c:	e1bffe17 	ldw	r6,-8(fp)
 8000d80:	e1ffff17 	ldw	r7,-4(fp)
 8000d84:	103ee83a 	callr	r2
 8000d88:	00000106 	br	8000d90 <alt_dma_txchan_send+0x54>
 8000d8c:	00bffb44 	movi	r2,-19
}
 8000d90:	e037883a 	mov	sp,fp
 8000d94:	dfc00117 	ldw	ra,4(sp)
 8000d98:	df000017 	ldw	fp,0(sp)
 8000d9c:	dec00204 	addi	sp,sp,8
 8000da0:	f800283a 	ret

08000da4 <alt_dma_txchan_ioctl>:
 */

static ALT_INLINE int alt_dma_txchan_ioctl (alt_dma_txchan dma, 
              int            req, 
              void*          arg)
{
 8000da4:	defffb04 	addi	sp,sp,-20
 8000da8:	dfc00415 	stw	ra,16(sp)
 8000dac:	df000315 	stw	fp,12(sp)
 8000db0:	df000304 	addi	fp,sp,12
 8000db4:	e13ffd15 	stw	r4,-12(fp)
 8000db8:	e17ffe15 	stw	r5,-8(fp)
 8000dbc:	e1bfff15 	stw	r6,-4(fp)
  return dma ? dma->ioctl (dma, req, arg) : -ENODEV;
 8000dc0:	e0bffd17 	ldw	r2,-12(fp)
 8000dc4:	10000726 	beq	r2,zero,8000de4 <alt_dma_txchan_ioctl+0x40>
 8000dc8:	e0bffd17 	ldw	r2,-12(fp)
 8000dcc:	10800517 	ldw	r2,20(r2)
 8000dd0:	e13ffd17 	ldw	r4,-12(fp)
 8000dd4:	e17ffe17 	ldw	r5,-8(fp)
 8000dd8:	e1bfff17 	ldw	r6,-4(fp)
 8000ddc:	103ee83a 	callr	r2
 8000de0:	00000106 	br	8000de8 <alt_dma_txchan_ioctl+0x44>
 8000de4:	00bffb44 	movi	r2,-19
}
 8000de8:	e037883a 	mov	sp,fp
 8000dec:	dfc00117 	ldw	ra,4(sp)
 8000df0:	df000017 	ldw	fp,0(sp)
 8000df4:	dec00204 	addi	sp,sp,8
 8000df8:	f800283a 	ret

08000dfc <_Z8dma_donePv>:
volatile int dma_complete = 0; /* flag used to indicate the transaction is complete */


/* function that is called when the transaction completes */
void dma_done(void* handle)
{
 8000dfc:	defffe04 	addi	sp,sp,-8
 8000e00:	df000115 	stw	fp,4(sp)
 8000e04:	df000104 	addi	fp,sp,4
 8000e08:	e13fff15 	stw	r4,-4(fp)
    dma_complete = 1;
 8000e0c:	00800044 	movi	r2,1
 8000e10:	d0a76215 	stw	r2,-25208(gp)
}
 8000e14:	e037883a 	mov	sp,fp
 8000e18:	df000017 	ldw	fp,0(sp)
 8000e1c:	dec00104 	addi	sp,sp,4
 8000e20:	f800283a 	ret

08000e24 <_Z9start_dmav>:


int start_dma(void)
{
 8000e24:	defffc04 	addi	sp,sp,-16
 8000e28:	dfc00315 	stw	ra,12(sp)
 8000e2c:	df000215 	stw	fp,8(sp)
 8000e30:	df000204 	addi	fp,sp,8
    alt_dma_txchan tx;

    /* Obtain a handle for the device */
    if ((tx = alt_dma_txchan_open (DMA_FPGA_TO_HPS_NAME)) == NULL)
 8000e34:	010200b4 	movhi	r4,2050
 8000e38:	21369504 	addi	r4,r4,-9644
 8000e3c:	801a1600 	call	801a160 <alt_dma_txchan_open>
 8000e40:	e0bfff15 	stw	r2,-4(fp)
 8000e44:	e0bfff17 	ldw	r2,-4(fp)
 8000e48:	1005003a 	cmpeq	r2,r2,zero
 8000e4c:	10803fcc 	andi	r2,r2,255
 8000e50:	10000526 	beq	r2,zero,8000e68 <_Z9start_dmav+0x44>
    {
        printf ("Error: failed to open device\n");
 8000e54:	010200b4 	movhi	r4,2050
 8000e58:	21369b04 	addi	r4,r4,-9620
 8000e5c:	80043180 	call	8004318 <puts>
        exit (1);
 8000e60:	01000044 	movi	r4,1
 8000e64:	80038ac0 	call	80038ac <exit>
    }
    else
    {
        alt_dma_txchan_ioctl(tx, ALT_DMA_TX_ONLY_ON, dnn_acc);
 8000e68:	d0a00617 	ldw	r2,-32744(gp)
 8000e6c:	e13fff17 	ldw	r4,-4(fp)
 8000e70:	014000c4 	movi	r5,3
 8000e74:	100d883a 	mov	r6,r2
 8000e78:	8000da40 	call	8000da4 <alt_dma_txchan_ioctl>

        /* Post the transmit request */
        if (alt_dma_txchan_send (tx, tag_id, 1, dma_done, NULL) < 0)
 8000e7c:	d0a00717 	ldw	r2,-32740(gp)
 8000e80:	d8000015 	stw	zero,0(sp)
 8000e84:	e13fff17 	ldw	r4,-4(fp)
 8000e88:	100b883a 	mov	r5,r2
 8000e8c:	01800044 	movi	r6,1
 8000e90:	01c20034 	movhi	r7,2048
 8000e94:	39c37f04 	addi	r7,r7,3580
 8000e98:	8000d3c0 	call	8000d3c <alt_dma_txchan_send>
 8000e9c:	1004d7fa 	srli	r2,r2,31
 8000ea0:	10803fcc 	andi	r2,r2,255
 8000ea4:	10000526 	beq	r2,zero,8000ebc <_Z9start_dmav+0x98>
        {
            printf ("Error: failed to post transmit request\n");
 8000ea8:	010200b4 	movhi	r4,2050
 8000eac:	2136a304 	addi	r4,r4,-9588
 8000eb0:	80043180 	call	8004318 <puts>
            exit (1);
 8000eb4:	01000044 	movi	r4,1
 8000eb8:	80038ac0 	call	80038ac <exit>
        }
        /* Wait for the transaction to complete */
        while (!dma_complete);
 8000ebc:	0001883a 	nop
 8000ec0:	d0a76217 	ldw	r2,-25208(gp)
 8000ec4:	1005003a 	cmpeq	r2,r2,zero
 8000ec8:	10803fcc 	andi	r2,r2,255
 8000ecc:	103ffc1e 	bne	r2,zero,8000ec0 <__alt_data_end+0xfc000ec0>
        
        printf ("Transaction complete\n");
 8000ed0:	010200b4 	movhi	r4,2050
 8000ed4:	2136ad04 	addi	r4,r4,-9548
 8000ed8:	80043180 	call	8004318 <puts>
        alt_dma_txchan_close (tx);
 8000edc:	e13fff17 	ldw	r4,-4(fp)
 8000ee0:	8000d180 	call	8000d18 <alt_dma_txchan_close>
    }

    return dma_complete;
 8000ee4:	d0a76217 	ldw	r2,-25208(gp)
 8000ee8:	e037883a 	mov	sp,fp
 8000eec:	dfc00117 	ldw	ra,4(sp)
 8000ef0:	df000017 	ldw	fp,0(sp)
 8000ef4:	dec00204 	addi	sp,sp,8
 8000ef8:	f800283a 	ret

08000efc <main>:
volatile int *id = (volatile int *) 0x0A900000; /* tag id */
volatile int *res = (volatile int *) 0x0B000000; /* dnn result */


int main()
{
 8000efc:	deffe004 	addi	sp,sp,-128
 8000f00:	dfc01f15 	stw	ra,124(sp)
 8000f04:	df001e15 	stw	fp,120(sp)
 8000f08:	ddc01d15 	stw	r23,116(sp)
 8000f0c:	dd801c15 	stw	r22,112(sp)
 8000f10:	dd401b15 	stw	r21,108(sp)
 8000f14:	dd001a15 	stw	r20,104(sp)
 8000f18:	dcc01915 	stw	r19,100(sp)
 8000f1c:	dc801815 	stw	r18,96(sp)
 8000f20:	dc401715 	stw	r17,92(sp)
 8000f24:	dc001615 	stw	r16,88(sp)
 8000f28:	df001e04 	addi	fp,sp,120
 8000f2c:	00820034 	movhi	r2,2048
 8000f30:	1087d504 	addi	r2,r2,8020
 8000f34:	e0bfee15 	stw	r2,-72(fp)
 8000f38:	008200b4 	movhi	r2,2050
 8000f3c:	10b61d04 	addi	r2,r2,-10124
 8000f40:	e0bfef15 	stw	r2,-68(fp)
 8000f44:	e0bff004 	addi	r2,fp,-64
 8000f48:	e0ffe204 	addi	r3,fp,-120
 8000f4c:	10c00015 	stw	r3,0(r2)
 8000f50:	00c20034 	movhi	r3,2048
 8000f54:	18c44104 	addi	r3,r3,4356
 8000f58:	10c00115 	stw	r3,4(r2)
 8000f5c:	16c00215 	stw	sp,8(r2)
 8000f60:	e0bfe804 	addi	r2,fp,-96
 8000f64:	1009883a 	mov	r4,r2
 8000f68:	800357c0 	call	800357c <_Unwind_SjLj_Register>
  printf("NIOS II SOFTWARE APPLICATION\n");
 8000f6c:	010200b4 	movhi	r4,2050
 8000f70:	00bfffc4 	movi	r2,-1
 8000f74:	e0bfe915 	stw	r2,-92(fp)
 8000f78:	2136b304 	addi	r4,r4,-9524
 8000f7c:	80043180 	call	8004318 <puts>
  printf("===========================================\n\n");
 8000f80:	010200b4 	movhi	r4,2050
 8000f84:	2136bb04 	addi	r4,r4,-9492
 8000f88:	80043180 	call	8004318 <puts>

  BTUart BT_UART;
 8000f8c:	e0bfe504 	addi	r2,fp,-108
 8000f90:	1009883a 	mov	r4,r2
 8000f94:	800026c0 	call	800026c <_ZN6BTUartC1Ev>
  int dma_done = 0, count = 0;
 8000f98:	e03fe315 	stw	zero,-116(fp)
 8000f9c:	e03fe215 	stw	zero,-120(fp)

  int init_success = BT_UART.open(BT_RS232_UART_NAME);
 8000fa0:	e0bfe504 	addi	r2,fp,-108
 8000fa4:	1009883a 	mov	r4,r2
 8000fa8:	014200b4 	movhi	r5,2050
 8000fac:	00800044 	movi	r2,1
 8000fb0:	e0bfe915 	stw	r2,-92(fp)
 8000fb4:	2976c704 	addi	r5,r5,-9444
 8000fb8:	800031c0 	call	800031c <_ZN6BTUart4openEPKc>
 8000fbc:	e0bfe415 	stw	r2,-112(fp)
  BT_UART.flush();
 8000fc0:	e0bfe504 	addi	r2,fp,-108
 8000fc4:	1009883a 	mov	r4,r2
 8000fc8:	80005d80 	call	80005d8 <_ZN6BTUart5flushEv>

  if (init_success)
 8000fcc:	e0bfe417 	ldw	r2,-112(fp)
 8000fd0:	10000326 	beq	r2,zero,8000fe0 <main+0xe4>
    printf("INIT SUCCESS: RS232 UART port.\n");
 8000fd4:	010200b4 	movhi	r4,2050
 8000fd8:	2136cc04 	addi	r4,r4,-9424
 8000fdc:	80043180 	call	8004318 <puts>


  printf("START READING FROM UART FIFO ...\n");
 8000fe0:	010200b4 	movhi	r4,2050
 8000fe4:	00800044 	movi	r2,1
 8000fe8:	e0bfe915 	stw	r2,-92(fp)
 8000fec:	2136d404 	addi	r4,r4,-9392
 8000ff0:	80043180 	call	8004318 <puts>

  while (1) {
    if (BT_UART.read_ready()) {
 8000ff4:	e0ffe504 	addi	r3,fp,-108
 8000ff8:	00800044 	movi	r2,1
 8000ffc:	e0bfe915 	stw	r2,-92(fp)
 8001000:	1809883a 	mov	r4,r3
 8001004:	80005900 	call	8000590 <_ZN6BTUart10read_readyEv>
 8001008:	1004c03a 	cmpne	r2,r2,zero
 800100c:	10803fcc 	andi	r2,r2,255
 8001010:	103ff826 	beq	r2,zero,8000ff4 <__alt_data_end+0xfc000ff4>
      if (count < INPUT_SIZE) {
 8001014:	e0bfe217 	ldw	r2,-120(fp)
 8001018:	10815e08 	cmpgei	r2,r2,1400
 800101c:	10000f1e 	bne	r2,zero,800105c <main+0x160>
        input[count] = BT_UART.read_s();  // Store received image data in 'input' array
 8001020:	d0e00817 	ldw	r3,-32736(gp)
 8001024:	e0bfe217 	ldw	r2,-120(fp)
 8001028:	1085883a 	add	r2,r2,r2
 800102c:	1085883a 	add	r2,r2,r2
 8001030:	1885883a 	add	r2,r3,r2
 8001034:	e0bff515 	stw	r2,-44(fp)
 8001038:	e0bfe504 	addi	r2,fp,-108
 800103c:	1009883a 	mov	r4,r2
 8001040:	80003840 	call	8000384 <_ZN6BTUart6read_sEv>
 8001044:	e0fff517 	ldw	r3,-44(fp)
 8001048:	18800015 	stw	r2,0(r3)
        count++;
 800104c:	e0bfe217 	ldw	r2,-120(fp)
 8001050:	10800044 	addi	r2,r2,1
 8001054:	e0bfe215 	stw	r2,-120(fp)
 8001058:	003fe606 	br	8000ff4 <__alt_data_end+0xfc000ff4>
      } else {
        while (!BT_UART.read_ready()) {} // Wait for next integer (dynamodb entry id: require to store result in the correct entry in db)
 800105c:	0001883a 	nop
 8001060:	e0ffe504 	addi	r3,fp,-108
 8001064:	00800044 	movi	r2,1
 8001068:	e0bfe915 	stw	r2,-92(fp)
 800106c:	1809883a 	mov	r4,r3
 8001070:	80005900 	call	8000590 <_ZN6BTUart10read_readyEv>
 8001074:	1005003a 	cmpeq	r2,r2,zero
 8001078:	10803fcc 	andi	r2,r2,255
 800107c:	103ff81e 	bne	r2,zero,8001060 <__alt_data_end+0xfc001060>
        id[0] = BT_UART.read_s();
 8001080:	d0a00917 	ldw	r2,-32732(gp)
 8001084:	e0bff615 	stw	r2,-40(fp)
 8001088:	e0bfe504 	addi	r2,fp,-108
 800108c:	1009883a 	mov	r4,r2
 8001090:	80003840 	call	8000384 <_ZN6BTUart6read_sEv>
 8001094:	e0fff617 	ldw	r3,-40(fp)
 8001098:	18800015 	stw	r2,0(r3)
        printf("\nTAG ID: %d\n", id[0]);
 800109c:	d0a00917 	ldw	r2,-32732(gp)
 80010a0:	10800017 	ldw	r2,0(r2)
 80010a4:	010200b4 	movhi	r4,2050
 80010a8:	2136dd04 	addi	r4,r4,-9356
 80010ac:	100b883a 	mov	r5,r2
 80010b0:	80042040 	call	8004204 <printf>

        // Write to DMA control port slave address to start DNN accelerator on HPS side
        dma_done = start_dma();
 80010b4:	8000e240 	call	8000e24 <_Z9start_dmav>
 80010b8:	e0bfe315 	stw	r2,-116(fp)

        if (dma_done)
 80010bc:	e0bfe317 	ldw	r2,-116(fp)
 80010c0:	10000226 	beq	r2,zero,80010cc <main+0x1d0>
          dma_done = 0;
 80010c4:	e03fe315 	stw	zero,-116(fp)
 80010c8:	00000506 	br	80010e0 <main+0x1e4>
        else
          printf("DMA ERROR: Start DMA falied.\n");
 80010cc:	010200b4 	movhi	r4,2050
 80010d0:	00800044 	movi	r2,1
 80010d4:	e0bfe915 	stw	r2,-92(fp)
 80010d8:	2136e104 	addi	r4,r4,-9340
 80010dc:	80043180 	call	8004318 <puts>

        while (res != id) {} // wait for dnn to finish
 80010e0:	0001883a 	nop
 80010e4:	d0e00a17 	ldw	r3,-32728(gp)
 80010e8:	d0a00917 	ldw	r2,-32732(gp)
 80010ec:	18bffd1e 	bne	r3,r2,80010e4 <__alt_data_end+0xfc0010e4>
        wifi_task();
 80010f0:	00800044 	movi	r2,1
 80010f4:	e0bfe915 	stw	r2,-92(fp)
 80010f8:	80011340 	call	8001134 <_Z9wifi_taskv>

        count = 0;  // Reset counter, wait for next image
 80010fc:	e03fe215 	stw	zero,-120(fp)
 8001100:	003fbc06 	br	8000ff4 <__alt_data_end+0xfc000ff4>
 8001104:	e7001e04 	addi	fp,fp,120
 8001108:	e0bfea17 	ldw	r2,-88(fp)
 800110c:	e0bff715 	stw	r2,-36(fp)
      }
    }
  }

  return 0;
 8001110:	e0bfe504 	addi	r2,fp,-108
 8001114:	e03fe915 	stw	zero,-92(fp)
 8001118:	1009883a 	mov	r4,r2
 800111c:	800029c0 	call	800029c <_ZN6BTUartD1Ev>
 8001120:	e0fff717 	ldw	r3,-36(fp)
 8001124:	00bfffc4 	movi	r2,-1
 8001128:	e0bfe915 	stw	r2,-92(fp)
 800112c:	1809883a 	mov	r4,r3
 8001130:	80037780 	call	8003778 <_Unwind_SjLj_Resume>

08001134 <_Z9wifi_taskv>:
char *patch_dnn_res(char *str);
WiFiUart WiFi_UART;


int wifi_task()
{
 8001134:	deffe304 	addi	sp,sp,-116
 8001138:	dfc01c15 	stw	ra,112(sp)
 800113c:	df001b15 	stw	fp,108(sp)
 8001140:	df001b04 	addi	fp,sp,108
    int open_success = WiFi_UART.open(WIFI_RS232_UART_NAME);
 8001144:	010200b4 	movhi	r4,2050
 8001148:	2107ee04 	addi	r4,r4,8120
 800114c:	014200b4 	movhi	r5,2050
 8001150:	2976e904 	addi	r5,r5,-9308
 8001154:	80006d40 	call	80006d4 <_ZN8WiFiUart4openEPKc>
 8001158:	e0bfe515 	stw	r2,-108(fp)
    WiFi_UART.flush();
 800115c:	010200b4 	movhi	r4,2050
 8001160:	2107ee04 	addi	r4,r4,8120
 8001164:	8000ccc0 	call	8000ccc <_ZN8WiFiUart5flushEv>

    if (!open_success) {
 8001168:	e0bfe517 	ldw	r2,-108(fp)
 800116c:	1000051e 	bne	r2,zero,8001184 <_Z9wifi_taskv+0x50>
        printf("OPEN ERROR: RS232 UART port fail to open.\n");
 8001170:	010200b4 	movhi	r4,2050
 8001174:	2136ef04 	addi	r4,r4,-9284
 8001178:	80043180 	call	8004318 <puts>
        return 0;
 800117c:	0005883a 	mov	r2,zero
 8001180:	00001406 	br	80011d4 <_Z9wifi_taskv+0xa0>
    }

    int connect_success = WiFi_UART.connect();
 8001184:	010200b4 	movhi	r4,2050
 8001188:	2107ee04 	addi	r4,r4,8120
 800118c:	800073c0 	call	800073c <_ZN8WiFiUart7connectEv>
 8001190:	e0bfe615 	stw	r2,-104(fp)

    if (!connect_success)
 8001194:	e0bfe617 	ldw	r2,-104(fp)
 8001198:	1000021e 	bne	r2,zero,80011a4 <_Z9wifi_taskv+0x70>
        return 0;
 800119c:	0005883a 	mov	r2,zero
 80011a0:	00000c06 	br	80011d4 <_Z9wifi_taskv+0xa0>

    char str[100];
    if (patch_dnn_res(str) != NULL)
 80011a4:	e0bfe704 	addi	r2,fp,-100
 80011a8:	1009883a 	mov	r4,r2
 80011ac:	80012280 	call	8001228 <_Z13patch_dnn_resPc>
 80011b0:	1004c03a 	cmpne	r2,r2,zero
 80011b4:	10803fcc 	andi	r2,r2,255
 80011b8:	10000526 	beq	r2,zero,80011d0 <_Z9wifi_taskv+0x9c>
        printf("Response: %s\n", str);
 80011bc:	e0bfe704 	addi	r2,fp,-100
 80011c0:	010200b4 	movhi	r4,2050
 80011c4:	2136fa04 	addi	r4,r4,-9240
 80011c8:	100b883a 	mov	r5,r2
 80011cc:	80042040 	call	8004204 <printf>

    return 0;
 80011d0:	0005883a 	mov	r2,zero
}
 80011d4:	e037883a 	mov	sp,fp
 80011d8:	dfc00117 	ldw	ra,4(sp)
 80011dc:	df000017 	ldw	fp,0(sp)
 80011e0:	dec00204 	addi	sp,sp,8
 80011e4:	f800283a 	ret

080011e8 <_Z3strPVi>:
const char *rid_str = str(rid);
const char *result_str = (result) ? "true" : "false";


/* Convert integer to string */
char * str(volatile int *num) {
 80011e8:	defffb04 	addi	sp,sp,-20
 80011ec:	dfc00415 	stw	ra,16(sp)
 80011f0:	df000315 	stw	fp,12(sp)
 80011f4:	df000304 	addi	fp,sp,12
 80011f8:	e13fff15 	stw	r4,-4(fp)
    char snum[5];
    sprintf(snum, "%i", num);
 80011fc:	e13ffd04 	addi	r4,fp,-12
 8001200:	014200b4 	movhi	r5,2050
 8001204:	29773b04 	addi	r5,r5,-8980
 8001208:	e1bfff17 	ldw	r6,-4(fp)
 800120c:	80047400 	call	8004740 <sprintf>
    return snum;
 8001210:	e0bffd04 	addi	r2,fp,-12
}
 8001214:	e037883a 	mov	sp,fp
 8001218:	dfc00117 	ldw	ra,4(sp)
 800121c:	df000017 	ldw	fp,0(sp)
 8001220:	dec00204 	addi	sp,sp,8
 8001224:	f800283a 	ret

08001228 <_Z13patch_dnn_resPc>:


char *patch_dnn_res(char *str)
{
 8001228:	defee604 	addi	sp,sp,-1128
 800122c:	dfc11915 	stw	ra,1124(sp)
 8001230:	df011815 	stw	fp,1120(sp)
 8001234:	dc011715 	stw	r16,1116(sp)
 8001238:	df011804 	addi	fp,sp,1120
 800123c:	e13ffe15 	stw	r4,-8(fp)
    char *patch_result_req;
    patch_result_req = (char *) malloc(strlen(req) + strlen(tagid_str) + strlen(rid_str) + strlen(result_str) + 1); /* make space for the new string */
 8001240:	d0a00f17 	ldw	r2,-32708(gp)
 8001244:	1009883a 	mov	r4,r2
 8001248:	80049680 	call	8004968 <strlen>
 800124c:	1021883a 	mov	r16,r2
 8001250:	d0a76317 	ldw	r2,-25204(gp)
 8001254:	1009883a 	mov	r4,r2
 8001258:	80049680 	call	8004968 <strlen>
 800125c:	80a1883a 	add	r16,r16,r2
 8001260:	d0a76417 	ldw	r2,-25200(gp)
 8001264:	1009883a 	mov	r4,r2
 8001268:	80049680 	call	8004968 <strlen>
 800126c:	80a1883a 	add	r16,r16,r2
 8001270:	d0a76517 	ldw	r2,-25196(gp)
 8001274:	1009883a 	mov	r4,r2
 8001278:	80049680 	call	8004968 <strlen>
 800127c:	8085883a 	add	r2,r16,r2
 8001280:	10800044 	addi	r2,r2,1
 8001284:	1009883a 	mov	r4,r2
 8001288:	80038e40 	call	80038e4 <malloc>
 800128c:	e0beea15 	stw	r2,-1112(fp)
    strcpy(patch_result_req, req);
 8001290:	d0a00f17 	ldw	r2,-32708(gp)
 8001294:	e13eea17 	ldw	r4,-1112(fp)
 8001298:	100b883a 	mov	r5,r2
 800129c:	80048d80 	call	80048d8 <strcpy>
    strcat(patch_result_req, tagid_str);
 80012a0:	d0a76317 	ldw	r2,-25204(gp)
 80012a4:	e13eea17 	ldw	r4,-1112(fp)
 80012a8:	100b883a 	mov	r5,r2
 80012ac:	80047ac0 	call	80047ac <strcat>
    strcat(patch_result_req, "&readingId=");
 80012b0:	e13eea17 	ldw	r4,-1112(fp)
 80012b4:	80049680 	call	8004968 <strlen>
 80012b8:	1007883a 	mov	r3,r2
 80012bc:	e0beea17 	ldw	r2,-1112(fp)
 80012c0:	10c5883a 	add	r2,r2,r3
 80012c4:	00c00984 	movi	r3,38
 80012c8:	10c00005 	stb	r3,0(r2)
 80012cc:	00c01c84 	movi	r3,114
 80012d0:	10c00045 	stb	r3,1(r2)
 80012d4:	00c01944 	movi	r3,101
 80012d8:	10c00085 	stb	r3,2(r2)
 80012dc:	00c01844 	movi	r3,97
 80012e0:	10c000c5 	stb	r3,3(r2)
 80012e4:	00c01904 	movi	r3,100
 80012e8:	10c00105 	stb	r3,4(r2)
 80012ec:	00c01a44 	movi	r3,105
 80012f0:	10c00145 	stb	r3,5(r2)
 80012f4:	00c01b84 	movi	r3,110
 80012f8:	10c00185 	stb	r3,6(r2)
 80012fc:	00c019c4 	movi	r3,103
 8001300:	10c001c5 	stb	r3,7(r2)
 8001304:	00c01244 	movi	r3,73
 8001308:	10c00205 	stb	r3,8(r2)
 800130c:	00c01904 	movi	r3,100
 8001310:	10c00245 	stb	r3,9(r2)
 8001314:	00c00f44 	movi	r3,61
 8001318:	10c00285 	stb	r3,10(r2)
 800131c:	100002c5 	stb	zero,11(r2)
    strcat(patch_result_req, rid_str);
 8001320:	d0a76417 	ldw	r2,-25200(gp)
 8001324:	e13eea17 	ldw	r4,-1112(fp)
 8001328:	100b883a 	mov	r5,r2
 800132c:	80047ac0 	call	80047ac <strcat>
    strcat(patch_result_req, "&poach=");
 8001330:	e13eea17 	ldw	r4,-1112(fp)
 8001334:	80049680 	call	8004968 <strlen>
 8001338:	1007883a 	mov	r3,r2
 800133c:	e0beea17 	ldw	r2,-1112(fp)
 8001340:	10c5883a 	add	r2,r2,r3
 8001344:	00c00984 	movi	r3,38
 8001348:	10c00005 	stb	r3,0(r2)
 800134c:	00c01c04 	movi	r3,112
 8001350:	10c00045 	stb	r3,1(r2)
 8001354:	00c01bc4 	movi	r3,111
 8001358:	10c00085 	stb	r3,2(r2)
 800135c:	00c01844 	movi	r3,97
 8001360:	10c000c5 	stb	r3,3(r2)
 8001364:	00c018c4 	movi	r3,99
 8001368:	10c00105 	stb	r3,4(r2)
 800136c:	00c01a04 	movi	r3,104
 8001370:	10c00145 	stb	r3,5(r2)
 8001374:	00c00f44 	movi	r3,61
 8001378:	10c00185 	stb	r3,6(r2)
 800137c:	100001c5 	stb	zero,7(r2)
    strcat(patch_result_req, result_str);
 8001380:	d0a76517 	ldw	r2,-25196(gp)
 8001384:	e13eea17 	ldw	r4,-1112(fp)
 8001388:	100b883a 	mov	r5,r2
 800138c:	80047ac0 	call	80047ac <strcat>
    strcat(patch_result_req, "\r\n\r\n");
 8001390:	e13eea17 	ldw	r4,-1112(fp)
 8001394:	80049680 	call	8004968 <strlen>
 8001398:	1007883a 	mov	r3,r2
 800139c:	e0beea17 	ldw	r2,-1112(fp)
 80013a0:	10c5883a 	add	r2,r2,r3
 80013a4:	00c00344 	movi	r3,13
 80013a8:	10c00005 	stb	r3,0(r2)
 80013ac:	00c00284 	movi	r3,10
 80013b0:	10c00045 	stb	r3,1(r2)
 80013b4:	00c00344 	movi	r3,13
 80013b8:	10c00085 	stb	r3,2(r2)
 80013bc:	00c00284 	movi	r3,10
 80013c0:	10c000c5 	stb	r3,3(r2)
 80013c4:	10000105 	stb	zero,4(r2)

    bool success = true;
 80013c8:	00800044 	movi	r2,1
 80013cc:	e0bee805 	stb	r2,-1120(fp)
    char cmd_buffer[100];
    char buffer[1000];

    if (success) {
 80013d0:	e0bee803 	ldbu	r2,-1120(fp)
 80013d4:	10000e26 	beq	r2,zero,8001410 <_Z13patch_dnn_resPc+0x1e8>
        sprintf(cmd_buffer, "AT+CIPSTART=\"TCP\",\"%s\",80", server_endpoint);
 80013d8:	d0a00e17 	ldw	r2,-32712(gp)
 80013dc:	e0ffe504 	addi	r3,fp,-108
 80013e0:	1809883a 	mov	r4,r3
 80013e4:	014200b4 	movhi	r5,2050
 80013e8:	29773c04 	addi	r5,r5,-8976
 80013ec:	100d883a 	mov	r6,r2
 80013f0:	80047400 	call	8004740 <sprintf>
        success = WiFi_UART.send_command(cmd_buffer);
 80013f4:	e0bfe504 	addi	r2,fp,-108
 80013f8:	010200b4 	movhi	r4,2050
 80013fc:	2107ee04 	addi	r4,r4,8120
 8001400:	100b883a 	mov	r5,r2
 8001404:	800084c0 	call	800084c <_ZN8WiFiUart12send_commandEPKc>
 8001408:	1004c03a 	cmpne	r2,r2,zero
 800140c:	e0bee805 	stb	r2,-1120(fp)
    }
    if (success) {
 8001410:	e0bee803 	ldbu	r2,-1120(fp)
 8001414:	10001026 	beq	r2,zero,8001458 <_Z13patch_dnn_resPc+0x230>
        sprintf(cmd_buffer, "AT+CIPSEND=%d", strlen(patch_result_req));
 8001418:	e13eea17 	ldw	r4,-1112(fp)
 800141c:	80049680 	call	8004968 <strlen>
 8001420:	1007883a 	mov	r3,r2
 8001424:	e0bfe504 	addi	r2,fp,-108
 8001428:	1009883a 	mov	r4,r2
 800142c:	014200b4 	movhi	r5,2050
 8001430:	29774304 	addi	r5,r5,-8948
 8001434:	180d883a 	mov	r6,r3
 8001438:	80047400 	call	8004740 <sprintf>
        success = WiFi_UART.send_command(cmd_buffer);
 800143c:	e0bfe504 	addi	r2,fp,-108
 8001440:	010200b4 	movhi	r4,2050
 8001444:	2107ee04 	addi	r4,r4,8120
 8001448:	100b883a 	mov	r5,r2
 800144c:	800084c0 	call	800084c <_ZN8WiFiUart12send_commandEPKc>
 8001450:	1004c03a 	cmpne	r2,r2,zero
 8001454:	e0bee805 	stb	r2,-1120(fp)
    }
    if (success) {
 8001458:	e0bee803 	ldbu	r2,-1120(fp)
 800145c:	10000926 	beq	r2,zero,8001484 <_Z13patch_dnn_resPc+0x25c>
        success = WiFi_UART.send_data(patch_result_req, strlen(patch_result_req));
 8001460:	e13eea17 	ldw	r4,-1112(fp)
 8001464:	80049680 	call	8004968 <strlen>
 8001468:	010200b4 	movhi	r4,2050
 800146c:	2107ee04 	addi	r4,r4,8120
 8001470:	e17eea17 	ldw	r5,-1112(fp)
 8001474:	100d883a 	mov	r6,r2
 8001478:	80009f00 	call	80009f0 <_ZN8WiFiUart9send_dataEPKci>
 800147c:	1004c03a 	cmpne	r2,r2,zero
 8001480:	e0bee805 	stb	r2,-1120(fp)
    }

    int length = 0;
 8001484:	e03ee915 	stw	zero,-1116(fp)

    if (success) {
 8001488:	e0bee803 	ldbu	r2,-1120(fp)
 800148c:	10003c26 	beq	r2,zero,8001580 <_Z13patch_dnn_resPc+0x358>
        while (1) {
            WiFi_UART.gets(buffer, sizeof(buffer));
 8001490:	0080fa04 	movi	r2,1000
 8001494:	e0feeb04 	addi	r3,fp,-1108
 8001498:	010200b4 	movhi	r4,2050
 800149c:	2107ee04 	addi	r4,r4,8120
 80014a0:	180b883a 	mov	r5,r3
 80014a4:	100d883a 	mov	r6,r2
 80014a8:	8000afc0 	call	8000afc <_ZN8WiFiUart4getsEPci>
            if (strstr(buffer, "+IPD") != NULL) {
 80014ac:	e0beeb04 	addi	r2,fp,-1108
 80014b0:	1009883a 	mov	r4,r2
 80014b4:	014200b4 	movhi	r5,2050
 80014b8:	29774704 	addi	r5,r5,-8932
 80014bc:	8004e700 	call	8004e70 <strstr>
 80014c0:	10002e26 	beq	r2,zero,800157c <_Z13patch_dnn_resPc+0x354>
                length = strlen(buffer);
 80014c4:	e0beeb04 	addi	r2,fp,-1108
 80014c8:	1009883a 	mov	r4,r2
 80014cc:	80049680 	call	8004968 <strlen>
 80014d0:	e0bee915 	stw	r2,-1116(fp)
                while (1) {
                    WiFi_UART.gets(buffer + length, sizeof(buffer) - length);
 80014d4:	e0bee917 	ldw	r2,-1116(fp)
 80014d8:	e0feeb04 	addi	r3,fp,-1108
 80014dc:	188b883a 	add	r5,r3,r2
 80014e0:	e0bee917 	ldw	r2,-1116(fp)
 80014e4:	00c0fa04 	movi	r3,1000
 80014e8:	1885c83a 	sub	r2,r3,r2
 80014ec:	010200b4 	movhi	r4,2050
 80014f0:	2107ee04 	addi	r4,r4,8120
 80014f4:	100d883a 	mov	r6,r2
 80014f8:	8000afc0 	call	8000afc <_ZN8WiFiUart4getsEPci>
                    if (strcmp(buffer + length, "\r\n") == 0)
 80014fc:	e0bee917 	ldw	r2,-1116(fp)
 8001500:	e0feeb04 	addi	r3,fp,-1108
 8001504:	1885883a 	add	r2,r3,r2
 8001508:	1009883a 	mov	r4,r2
 800150c:	014200b4 	movhi	r5,2050
 8001510:	29774904 	addi	r5,r5,-8924
 8001514:	80048340 	call	8004834 <strcmp>
 8001518:	10000e1e 	bne	r2,zero,8001554 <_Z13patch_dnn_resPc+0x32c>
                        break;
 800151c:	0001883a 	nop
                    length += strlen(buffer + length);
                }
                break;
 8001520:	0001883a 	nop
            }
        }
        WiFi_UART.gets(buffer, 9);
 8001524:	e0beeb04 	addi	r2,fp,-1108
 8001528:	010200b4 	movhi	r4,2050
 800152c:	2107ee04 	addi	r4,r4,8120
 8001530:	100b883a 	mov	r5,r2
 8001534:	01800244 	movi	r6,9
 8001538:	8000afc0 	call	8000afc <_ZN8WiFiUart4getsEPci>
        printf("Response: %s\n", buffer);
 800153c:	e0beeb04 	addi	r2,fp,-1108
 8001540:	010200b4 	movhi	r4,2050
 8001544:	2136fa04 	addi	r4,r4,-9240
 8001548:	100b883a 	mov	r5,r2
 800154c:	80042040 	call	8004204 <printf>
 8001550:	00000b06 	br	8001580 <_Z13patch_dnn_resPc+0x358>
                length = strlen(buffer);
                while (1) {
                    WiFi_UART.gets(buffer + length, sizeof(buffer) - length);
                    if (strcmp(buffer + length, "\r\n") == 0)
                        break;
                    length += strlen(buffer + length);
 8001554:	e0bee917 	ldw	r2,-1116(fp)
 8001558:	e0feeb04 	addi	r3,fp,-1108
 800155c:	1885883a 	add	r2,r3,r2
 8001560:	1009883a 	mov	r4,r2
 8001564:	80049680 	call	8004968 <strlen>
 8001568:	1007883a 	mov	r3,r2
 800156c:	e0bee917 	ldw	r2,-1116(fp)
 8001570:	1885883a 	add	r2,r3,r2
 8001574:	e0bee915 	stw	r2,-1116(fp)
    int length = 0;

    if (success) {
        while (1) {
            WiFi_UART.gets(buffer, sizeof(buffer));
            if (strstr(buffer, "+IPD") != NULL) {
 8001578:	003fd606 	br	80014d4 <__alt_data_end+0xfc0014d4>
        success = WiFi_UART.send_data(patch_result_req, strlen(patch_result_req));
    }

    int length = 0;

    if (success) {
 800157c:	003fc406 	br	8001490 <__alt_data_end+0xfc001490>
        }
        WiFi_UART.gets(buffer, 9);
        printf("Response: %s\n", buffer);
    }

    if (success) {
 8001580:	e0bee803 	ldbu	r2,-1120(fp)
 8001584:	10000626 	beq	r2,zero,80015a0 <_Z13patch_dnn_resPc+0x378>
        strcpy(str, buffer);
 8001588:	e0beeb04 	addi	r2,fp,-1108
 800158c:	e13ffe17 	ldw	r4,-8(fp)
 8001590:	100b883a 	mov	r5,r2
 8001594:	80048d80 	call	80048d8 <strcpy>
        return str;
 8001598:	e0bffe17 	ldw	r2,-8(fp)
 800159c:	00000106 	br	80015a4 <_Z13patch_dnn_resPc+0x37c>
    } else {
        return NULL;
 80015a0:	0005883a 	mov	r2,zero
    }
 80015a4:	e6ffff04 	addi	sp,fp,-4
 80015a8:	dfc00217 	ldw	ra,8(sp)
 80015ac:	df000117 	ldw	fp,4(sp)
 80015b0:	dc000017 	ldw	r16,0(sp)
 80015b4:	dec00304 	addi	sp,sp,12
 80015b8:	f800283a 	ret

080015bc <_Z41__static_initialization_and_destruction_0ii>:
 80015bc:	defffc04 	addi	sp,sp,-16
 80015c0:	dfc00315 	stw	ra,12(sp)
 80015c4:	df000215 	stw	fp,8(sp)
 80015c8:	df000204 	addi	fp,sp,8
 80015cc:	e13ffe15 	stw	r4,-8(fp)
 80015d0:	e17fff15 	stw	r5,-4(fp)
 80015d4:	e0bffe17 	ldw	r2,-8(fp)
 80015d8:	10800058 	cmpnei	r2,r2,1
 80015dc:	1000161e 	bne	r2,zero,8001638 <_Z41__static_initialization_and_destruction_0ii+0x7c>
 80015e0:	e0ffff17 	ldw	r3,-4(fp)
 80015e4:	00bfffd4 	movui	r2,65535
 80015e8:	1880131e 	bne	r3,r2,8001638 <_Z41__static_initialization_and_destruction_0ii+0x7c>
#include "../../src/terasic_includes.h"
#include "../../src/tasks.h"

char *str(volatile int *num);
char *patch_dnn_res(char *str);
WiFiUart WiFi_UART;
 80015ec:	010200b4 	movhi	r4,2050
 80015f0:	2107ee04 	addi	r4,r4,8120
 80015f4:	80006240 	call	8000624 <_ZN8WiFiUartC1Ev>
                  Host: k7t0ap6b0i.execute-api.us-west-2.amazonaws.com\r\n\
                  Content-Type: application/json\r\n\
                  \r\n\
                  tagId=";

const char *tagid_str = str(tagid);
 80015f8:	d0a00b17 	ldw	r2,-32724(gp)
 80015fc:	1009883a 	mov	r4,r2
 8001600:	80011e80 	call	80011e8 <_Z3strPVi>
 8001604:	d0a76315 	stw	r2,-25204(gp)
const char *rid_str = str(rid);
 8001608:	d0a00c17 	ldw	r2,-32720(gp)
 800160c:	1009883a 	mov	r4,r2
 8001610:	80011e80 	call	80011e8 <_Z3strPVi>
 8001614:	d0a76415 	stw	r2,-25200(gp)
const char *result_str = (result) ? "true" : "false";
 8001618:	d0a00d17 	ldw	r2,-32716(gp)
 800161c:	10000326 	beq	r2,zero,800162c <_Z41__static_initialization_and_destruction_0ii+0x70>
 8001620:	008200b4 	movhi	r2,2050
 8001624:	10b74a04 	addi	r2,r2,-8920
 8001628:	00000206 	br	8001634 <_Z41__static_initialization_and_destruction_0ii+0x78>
 800162c:	008200b4 	movhi	r2,2050
 8001630:	10b74c04 	addi	r2,r2,-8912
 8001634:	d0a76515 	stw	r2,-25196(gp)
 8001638:	e0bffe17 	ldw	r2,-8(fp)
 800163c:	1000061e 	bne	r2,zero,8001658 <_Z41__static_initialization_and_destruction_0ii+0x9c>
 8001640:	e0ffff17 	ldw	r3,-4(fp)
 8001644:	00bfffd4 	movui	r2,65535
 8001648:	1880031e 	bne	r3,r2,8001658 <_Z41__static_initialization_and_destruction_0ii+0x9c>
#include "../../src/terasic_includes.h"
#include "../../src/tasks.h"

char *str(volatile int *num);
char *patch_dnn_res(char *str);
WiFiUart WiFi_UART;
 800164c:	010200b4 	movhi	r4,2050
 8001650:	2107ee04 	addi	r4,r4,8120
 8001654:	80006540 	call	8000654 <_ZN8WiFiUartD1Ev>
        strcpy(str, buffer);
        return str;
    } else {
        return NULL;
    }
 8001658:	e037883a 	mov	sp,fp
 800165c:	dfc00117 	ldw	ra,4(sp)
 8001660:	df000017 	ldw	fp,0(sp)
 8001664:	dec00204 	addi	sp,sp,8
 8001668:	f800283a 	ret

0800166c <_GLOBAL__sub_I_WiFi_UART>:
 800166c:	defffe04 	addi	sp,sp,-8
 8001670:	dfc00115 	stw	ra,4(sp)
 8001674:	df000015 	stw	fp,0(sp)
 8001678:	d839883a 	mov	fp,sp
 800167c:	01000044 	movi	r4,1
 8001680:	017fffd4 	movui	r5,65535
 8001684:	80015bc0 	call	80015bc <_Z41__static_initialization_and_destruction_0ii>
 8001688:	e037883a 	mov	sp,fp
 800168c:	dfc00117 	ldw	ra,4(sp)
 8001690:	df000017 	ldw	fp,0(sp)
 8001694:	dec00204 	addi	sp,sp,8
 8001698:	f800283a 	ret

0800169c <_GLOBAL__sub_D_WiFi_UART>:
 800169c:	defffe04 	addi	sp,sp,-8
 80016a0:	dfc00115 	stw	ra,4(sp)
 80016a4:	df000015 	stw	fp,0(sp)
 80016a8:	d839883a 	mov	fp,sp
 80016ac:	0009883a 	mov	r4,zero
 80016b0:	017fffd4 	movui	r5,65535
 80016b4:	80015bc0 	call	80015bc <_Z41__static_initialization_and_destruction_0ii>
 80016b8:	e037883a 	mov	sp,fp
 80016bc:	dfc00117 	ldw	ra,4(sp)
 80016c0:	df000017 	ldw	fp,0(sp)
 80016c4:	dec00204 	addi	sp,sp,8
 80016c8:	f800283a 	ret

080016cc <_ZL12read_sleb128PKhPl>:
 80016cc:	0011883a 	mov	r8,zero
 80016d0:	000d883a 	mov	r6,zero
 80016d4:	21c00003 	ldbu	r7,0(r4)
 80016d8:	20800044 	addi	r2,r4,1
 80016dc:	1009883a 	mov	r4,r2
 80016e0:	38c01fcc 	andi	r3,r7,127
 80016e4:	1986983a 	sll	r3,r3,r6
 80016e8:	3a403fcc 	andi	r9,r7,255
 80016ec:	4a40201c 	xori	r9,r9,128
 80016f0:	4a7fe004 	addi	r9,r9,-128
 80016f4:	40d0b03a 	or	r8,r8,r3
 80016f8:	318001c4 	addi	r6,r6,7
 80016fc:	483ff516 	blt	r9,zero,80016d4 <__alt_data_end+0xfc0016d4>
 8001700:	00c007c4 	movi	r3,31
 8001704:	19800536 	bltu	r3,r6,800171c <_ZL12read_sleb128PKhPl+0x50>
 8001708:	39c0100c 	andi	r7,r7,64
 800170c:	38000326 	beq	r7,zero,800171c <_ZL12read_sleb128PKhPl+0x50>
 8001710:	00ffffc4 	movi	r3,-1
 8001714:	198c983a 	sll	r6,r3,r6
 8001718:	3210b03a 	or	r8,r6,r8
 800171c:	2a000015 	stw	r8,0(r5)
 8001720:	f800283a 	ret

08001724 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv>:
 8001724:	28800017 	ldw	r2,0(r5)
 8001728:	30c00017 	ldw	r3,0(r6)
 800172c:	defffb04 	addi	sp,sp,-20
 8001730:	10800217 	ldw	r2,8(r2)
 8001734:	dc400315 	stw	r17,12(sp)
 8001738:	dc000215 	stw	r16,8(sp)
 800173c:	d9400115 	stw	r5,4(sp)
 8001740:	dfc00415 	stw	ra,16(sp)
 8001744:	2021883a 	mov	r16,r4
 8001748:	d8c00015 	stw	r3,0(sp)
 800174c:	2809883a 	mov	r4,r5
 8001750:	3023883a 	mov	r17,r6
 8001754:	103ee83a 	callr	r2
 8001758:	10803fcc 	andi	r2,r2,255
 800175c:	d9400117 	ldw	r5,4(sp)
 8001760:	10000326 	beq	r2,zero,8001770 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv+0x4c>
 8001764:	d8800017 	ldw	r2,0(sp)
 8001768:	10800017 	ldw	r2,0(r2)
 800176c:	d8800015 	stw	r2,0(sp)
 8001770:	80800017 	ldw	r2,0(r16)
 8001774:	8009883a 	mov	r4,r16
 8001778:	d80d883a 	mov	r6,sp
 800177c:	10800417 	ldw	r2,16(r2)
 8001780:	01c00044 	movi	r7,1
 8001784:	103ee83a 	callr	r2
 8001788:	10c03fcc 	andi	r3,r2,255
 800178c:	18000226 	beq	r3,zero,8001798 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv+0x74>
 8001790:	d8c00017 	ldw	r3,0(sp)
 8001794:	88c00015 	stw	r3,0(r17)
 8001798:	dfc00417 	ldw	ra,16(sp)
 800179c:	dc400317 	ldw	r17,12(sp)
 80017a0:	dc000217 	ldw	r16,8(sp)
 80017a4:	dec00504 	addi	sp,sp,20
 80017a8:	f800283a 	ret

080017ac <_ZL21size_of_encoded_valueh>:
 80017ac:	deffff04 	addi	sp,sp,-4
 80017b0:	dfc00015 	stw	ra,0(sp)
 80017b4:	00803fc4 	movi	r2,255
 80017b8:	20802026 	beq	r4,r2,800183c <_ZL21size_of_encoded_valueh+0x90>
 80017bc:	210001cc 	andi	r4,r4,7
 80017c0:	00800144 	movi	r2,5
 80017c4:	11001c36 	bltu	r2,r4,8001838 <_ZL21size_of_encoded_valueh+0x8c>
 80017c8:	200890ba 	slli	r4,r4,2
 80017cc:	00820034 	movhi	r2,2048
 80017d0:	1085f804 	addi	r2,r2,6112
 80017d4:	2089883a 	add	r4,r4,r2
 80017d8:	20800017 	ldw	r2,0(r4)
 80017dc:	1000683a 	jmp	r2
 80017e0:	080017f8 	rdprs	zero,at,95
 80017e4:	08001838 	rdprs	zero,at,96
 80017e8:	08001808 	cmpgei	zero,at,96
 80017ec:	080017f8 	rdprs	zero,at,95
 80017f0:	08001828 	cmpgeui	zero,at,96
 80017f4:	08001818 	cmpnei	zero,at,96
 80017f8:	00800104 	movi	r2,4
 80017fc:	dfc00017 	ldw	ra,0(sp)
 8001800:	dec00104 	addi	sp,sp,4
 8001804:	f800283a 	ret
 8001808:	00800084 	movi	r2,2
 800180c:	dfc00017 	ldw	ra,0(sp)
 8001810:	dec00104 	addi	sp,sp,4
 8001814:	f800283a 	ret
 8001818:	00800044 	movi	r2,1
 800181c:	dfc00017 	ldw	ra,0(sp)
 8001820:	dec00104 	addi	sp,sp,4
 8001824:	f800283a 	ret
 8001828:	00800204 	movi	r2,8
 800182c:	dfc00017 	ldw	ra,0(sp)
 8001830:	dec00104 	addi	sp,sp,4
 8001834:	f800283a 	ret
 8001838:	80038940 	call	8003894 <abort>
 800183c:	0005883a 	mov	r2,zero
 8001840:	dfc00017 	ldw	ra,0(sp)
 8001844:	dec00104 	addi	sp,sp,4
 8001848:	f800283a 	ret

0800184c <_ZL28read_encoded_value_with_basehjPKhPj>:
 800184c:	defffa04 	addi	sp,sp,-24
 8001850:	dc000315 	stw	r16,12(sp)
 8001854:	dfc00515 	stw	ra,20(sp)
 8001858:	dc400415 	stw	r17,16(sp)
 800185c:	00801404 	movi	r2,80
 8001860:	2021883a 	mov	r16,r4
 8001864:	20807526 	beq	r4,r2,8001a3c <_ZL28read_encoded_value_with_basehjPKhPj+0x1f0>
 8001868:	208003cc 	andi	r2,r4,15
 800186c:	00c00304 	movi	r3,12
 8001870:	18807136 	bltu	r3,r2,8001a38 <_ZL28read_encoded_value_with_basehjPKhPj+0x1ec>
 8001874:	100490ba 	slli	r2,r2,2
 8001878:	00c20034 	movhi	r3,2048
 800187c:	18c62404 	addi	r3,r3,6288
 8001880:	10c5883a 	add	r2,r2,r3
 8001884:	10800017 	ldw	r2,0(r2)
 8001888:	2823883a 	mov	r17,r5
 800188c:	1000683a 	jmp	r2
 8001890:	08001978 	rdprs	zero,at,101
 8001894:	080019a8 	cmpgeui	zero,at,102
 8001898:	08001960 	cmpeqi	zero,at,101
 800189c:	080018c4 	addi	zero,at,99
 80018a0:	08001930 	cmpltui	zero,at,100
 80018a4:	080019e4 	muli	zero,at,103
 80018a8:	08001a38 	rdprs	zero,at,104
 80018ac:	08001a38 	rdprs	zero,at,104
 80018b0:	08001a38 	rdprs	zero,at,104
 80018b4:	080019f0 	cmpltui	zero,at,103
 80018b8:	08001a14 	ori	zero,at,104
 80018bc:	080018c4 	addi	zero,at,99
 80018c0:	08001930 	cmpltui	zero,at,100
 80018c4:	30800043 	ldbu	r2,1(r6)
 80018c8:	30c00083 	ldbu	r3,2(r6)
 80018cc:	310000c3 	ldbu	r4,3(r6)
 80018d0:	32000003 	ldbu	r8,0(r6)
 80018d4:	1004923a 	slli	r2,r2,8
 80018d8:	1806943a 	slli	r3,r3,16
 80018dc:	2008963a 	slli	r4,r4,24
 80018e0:	1204b03a 	or	r2,r2,r8
 80018e4:	1884b03a 	or	r2,r3,r2
 80018e8:	2086b03a 	or	r3,r4,r2
 80018ec:	30800104 	addi	r2,r6,4
 80018f0:	18000926 	beq	r3,zero,8001918 <_ZL28read_encoded_value_with_basehjPKhPj+0xcc>
 80018f4:	81401c0c 	andi	r5,r16,112
 80018f8:	01000404 	movi	r4,16
 80018fc:	29005526 	beq	r5,r4,8001a54 <_ZL28read_encoded_value_with_basehjPKhPj+0x208>
 8001900:	84003fcc 	andi	r16,r16,255
 8001904:	8400201c 	xori	r16,r16,128
 8001908:	843fe004 	addi	r16,r16,-128
 800190c:	1c47883a 	add	r3,r3,r17
 8001910:	8000010e 	bge	r16,zero,8001918 <_ZL28read_encoded_value_with_basehjPKhPj+0xcc>
 8001914:	18c00017 	ldw	r3,0(r3)
 8001918:	38c00015 	stw	r3,0(r7)
 800191c:	dfc00517 	ldw	ra,20(sp)
 8001920:	dc400417 	ldw	r17,16(sp)
 8001924:	dc000317 	ldw	r16,12(sp)
 8001928:	dec00604 	addi	sp,sp,24
 800192c:	f800283a 	ret
 8001930:	30800043 	ldbu	r2,1(r6)
 8001934:	30c00083 	ldbu	r3,2(r6)
 8001938:	310000c3 	ldbu	r4,3(r6)
 800193c:	32000003 	ldbu	r8,0(r6)
 8001940:	1004923a 	slli	r2,r2,8
 8001944:	1806943a 	slli	r3,r3,16
 8001948:	2008963a 	slli	r4,r4,24
 800194c:	1204b03a 	or	r2,r2,r8
 8001950:	1884b03a 	or	r2,r3,r2
 8001954:	2086b03a 	or	r3,r4,r2
 8001958:	30800204 	addi	r2,r6,8
 800195c:	003fe406 	br	80018f0 <__alt_data_end+0xfc0018f0>
 8001960:	30c00043 	ldbu	r3,1(r6)
 8001964:	32000003 	ldbu	r8,0(r6)
 8001968:	30800084 	addi	r2,r6,2
 800196c:	1806923a 	slli	r3,r3,8
 8001970:	1a06b03a 	or	r3,r3,r8
 8001974:	003fde06 	br	80018f0 <__alt_data_end+0xfc0018f0>
 8001978:	30800043 	ldbu	r2,1(r6)
 800197c:	30c00083 	ldbu	r3,2(r6)
 8001980:	314000c3 	ldbu	r5,3(r6)
 8001984:	31000003 	ldbu	r4,0(r6)
 8001988:	1004923a 	slli	r2,r2,8
 800198c:	1806943a 	slli	r3,r3,16
 8001990:	280a963a 	slli	r5,r5,24
 8001994:	1104b03a 	or	r2,r2,r4
 8001998:	1884b03a 	or	r2,r3,r2
 800199c:	2886b03a 	or	r3,r5,r2
 80019a0:	30800104 	addi	r2,r6,4
 80019a4:	003fd206 	br	80018f0 <__alt_data_end+0xfc0018f0>
 80019a8:	3013883a 	mov	r9,r6
 80019ac:	0007883a 	mov	r3,zero
 80019b0:	0011883a 	mov	r8,zero
 80019b4:	49000003 	ldbu	r4,0(r9)
 80019b8:	48800044 	addi	r2,r9,1
 80019bc:	1013883a 	mov	r9,r2
 80019c0:	21401fcc 	andi	r5,r4,127
 80019c4:	2a0a983a 	sll	r5,r5,r8
 80019c8:	21003fcc 	andi	r4,r4,255
 80019cc:	2100201c 	xori	r4,r4,128
 80019d0:	213fe004 	addi	r4,r4,-128
 80019d4:	1946b03a 	or	r3,r3,r5
 80019d8:	420001c4 	addi	r8,r8,7
 80019dc:	203ff516 	blt	r4,zero,80019b4 <__alt_data_end+0xfc0019b4>
 80019e0:	003fc306 	br	80018f0 <__alt_data_end+0xfc0018f0>
 80019e4:	30c00003 	ldbu	r3,0(r6)
 80019e8:	30800044 	addi	r2,r6,1
 80019ec:	003fc006 	br	80018f0 <__alt_data_end+0xfc0018f0>
 80019f0:	3009883a 	mov	r4,r6
 80019f4:	d80b883a 	mov	r5,sp
 80019f8:	d9800115 	stw	r6,4(sp)
 80019fc:	d9c00215 	stw	r7,8(sp)
 8001a00:	80016cc0 	call	80016cc <_ZL12read_sleb128PKhPl>
 8001a04:	d8c00017 	ldw	r3,0(sp)
 8001a08:	d9800117 	ldw	r6,4(sp)
 8001a0c:	d9c00217 	ldw	r7,8(sp)
 8001a10:	003fb706 	br	80018f0 <__alt_data_end+0xfc0018f0>
 8001a14:	30c00043 	ldbu	r3,1(r6)
 8001a18:	32000003 	ldbu	r8,0(r6)
 8001a1c:	30800084 	addi	r2,r6,2
 8001a20:	1806923a 	slli	r3,r3,8
 8001a24:	1a06b03a 	or	r3,r3,r8
 8001a28:	18ffffcc 	andi	r3,r3,65535
 8001a2c:	18e0001c 	xori	r3,r3,32768
 8001a30:	18e00004 	addi	r3,r3,-32768
 8001a34:	003fae06 	br	80018f0 <__alt_data_end+0xfc0018f0>
 8001a38:	80038940 	call	8003894 <abort>
 8001a3c:	318000c4 	addi	r6,r6,3
 8001a40:	00bfff04 	movi	r2,-4
 8001a44:	3084703a 	and	r2,r6,r2
 8001a48:	10c00017 	ldw	r3,0(r2)
 8001a4c:	10800104 	addi	r2,r2,4
 8001a50:	003fb106 	br	8001918 <__alt_data_end+0xfc001918>
 8001a54:	3023883a 	mov	r17,r6
 8001a58:	003fa906 	br	8001900 <__alt_data_end+0xfc001900>

08001a5c <_ZL15get_ttype_entryP16lsda_header_infom>:
 8001a5c:	defffc04 	addi	sp,sp,-16
 8001a60:	dfc00315 	stw	ra,12(sp)
 8001a64:	dc000215 	stw	r16,8(sp)
 8001a68:	2021883a 	mov	r16,r4
 8001a6c:	21000503 	ldbu	r4,20(r4)
 8001a70:	d9400115 	stw	r5,4(sp)
 8001a74:	80017ac0 	call	80017ac <_ZL21size_of_encoded_valueh>
 8001a78:	d9400117 	ldw	r5,4(sp)
 8001a7c:	1009883a 	mov	r4,r2
 8001a80:	800334c0 	call	800334c <__mulsi3>
 8001a84:	81800317 	ldw	r6,12(r16)
 8001a88:	81000503 	ldbu	r4,20(r16)
 8001a8c:	81400217 	ldw	r5,8(r16)
 8001a90:	308dc83a 	sub	r6,r6,r2
 8001a94:	d80f883a 	mov	r7,sp
 8001a98:	800184c0 	call	800184c <_ZL28read_encoded_value_with_basehjPKhPj>
 8001a9c:	d8800017 	ldw	r2,0(sp)
 8001aa0:	dfc00317 	ldw	ra,12(sp)
 8001aa4:	dc000217 	ldw	r16,8(sp)
 8001aa8:	dec00404 	addi	sp,sp,16
 8001aac:	f800283a 	ret

08001ab0 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl>:
 8001ab0:	defffb04 	addi	sp,sp,-20
 8001ab4:	dc000115 	stw	r16,4(sp)
 8001ab8:	24000317 	ldw	r16,12(r4)
 8001abc:	01ce303a 	nor	r7,zero,r7
 8001ac0:	dc800315 	stw	r18,12(sp)
 8001ac4:	dc400215 	stw	r17,8(sp)
 8001ac8:	dfc00415 	stw	ra,16(sp)
 8001acc:	2023883a 	mov	r17,r4
 8001ad0:	2825883a 	mov	r18,r5
 8001ad4:	d9800015 	stw	r6,0(sp)
 8001ad8:	81e1883a 	add	r16,r16,r7
 8001adc:	8009883a 	mov	r4,r16
 8001ae0:	000b883a 	mov	r5,zero
 8001ae4:	000d883a 	mov	r6,zero
 8001ae8:	20800003 	ldbu	r2,0(r4)
 8001aec:	84000044 	addi	r16,r16,1
 8001af0:	8009883a 	mov	r4,r16
 8001af4:	10c01fcc 	andi	r3,r2,127
 8001af8:	1986983a 	sll	r3,r3,r6
 8001afc:	10803fcc 	andi	r2,r2,255
 8001b00:	1080201c 	xori	r2,r2,128
 8001b04:	10bfe004 	addi	r2,r2,-128
 8001b08:	28cab03a 	or	r5,r5,r3
 8001b0c:	318001c4 	addi	r6,r6,7
 8001b10:	103ff516 	blt	r2,zero,8001ae8 <__alt_data_end+0xfc001ae8>
 8001b14:	28000e26 	beq	r5,zero,8001b50 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0xa0>
 8001b18:	8809883a 	mov	r4,r17
 8001b1c:	8001a5c0 	call	8001a5c <_ZL15get_ttype_entryP16lsda_header_infom>
 8001b20:	1009883a 	mov	r4,r2
 8001b24:	900b883a 	mov	r5,r18
 8001b28:	d80d883a 	mov	r6,sp
 8001b2c:	80017240 	call	8001724 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv>
 8001b30:	10c03fcc 	andi	r3,r2,255
 8001b34:	183fe926 	beq	r3,zero,8001adc <__alt_data_end+0xfc001adc>
 8001b38:	dfc00417 	ldw	ra,16(sp)
 8001b3c:	dc800317 	ldw	r18,12(sp)
 8001b40:	dc400217 	ldw	r17,8(sp)
 8001b44:	dc000117 	ldw	r16,4(sp)
 8001b48:	dec00504 	addi	sp,sp,20
 8001b4c:	f800283a 	ret
 8001b50:	0005883a 	mov	r2,zero
 8001b54:	003ff806 	br	8001b38 <__alt_data_end+0xfc001b38>

08001b58 <_ZL21base_of_encoded_valuehP15_Unwind_Context>:
 8001b58:	deffff04 	addi	sp,sp,-4
 8001b5c:	dfc00015 	stw	ra,0(sp)
 8001b60:	00803fc4 	movi	r2,255
 8001b64:	20800e26 	beq	r4,r2,8001ba0 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x48>
 8001b68:	20801c0c 	andi	r2,r4,112
 8001b6c:	00c00804 	movi	r3,32
 8001b70:	10c01726 	beq	r2,r3,8001bd0 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x78>
 8001b74:	18800e2e 	bgeu	r3,r2,8001bb0 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x58>
 8001b78:	00c01004 	movi	r3,64
 8001b7c:	10c01026 	beq	r2,r3,8001bc0 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x68>
 8001b80:	00c01404 	movi	r3,80
 8001b84:	10c00626 	beq	r2,r3,8001ba0 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x48>
 8001b88:	00c00c04 	movi	r3,48
 8001b8c:	10c00b1e 	bne	r2,r3,8001bbc <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x64>
 8001b90:	2809883a 	mov	r4,r5
 8001b94:	dfc00017 	ldw	ra,0(sp)
 8001b98:	dec00104 	addi	sp,sp,4
 8001b9c:	80036541 	jmpi	8003654 <_Unwind_GetDataRelBase>
 8001ba0:	0005883a 	mov	r2,zero
 8001ba4:	dfc00017 	ldw	ra,0(sp)
 8001ba8:	dec00104 	addi	sp,sp,4
 8001bac:	f800283a 	ret
 8001bb0:	103ffb26 	beq	r2,zero,8001ba0 <__alt_data_end+0xfc001ba0>
 8001bb4:	00c00404 	movi	r3,16
 8001bb8:	10fff926 	beq	r2,r3,8001ba0 <__alt_data_end+0xfc001ba0>
 8001bbc:	80038940 	call	8003894 <abort>
 8001bc0:	2809883a 	mov	r4,r5
 8001bc4:	dfc00017 	ldw	ra,0(sp)
 8001bc8:	dec00104 	addi	sp,sp,4
 8001bcc:	80036441 	jmpi	8003644 <_Unwind_GetRegionStart>
 8001bd0:	2809883a 	mov	r4,r5
 8001bd4:	dfc00017 	ldw	ra,0(sp)
 8001bd8:	dec00104 	addi	sp,sp,4
 8001bdc:	800365c1 	jmpi	800365c <_Unwind_GetTextRelBase>

08001be0 <_ZL28check_compact_exception_specPKSt9type_infoPvPKhij>:
 8001be0:	defff104 	addi	sp,sp,-60
 8001be4:	dd800b15 	stw	r22,44(sp)
 8001be8:	382dd23a 	srai	r22,r7,8
 8001bec:	dd400a15 	stw	r21,40(sp)
 8001bf0:	dd000915 	stw	r20,36(sp)
 8001bf4:	dfc00e15 	stw	ra,56(sp)
 8001bf8:	df000d15 	stw	fp,52(sp)
 8001bfc:	ddc00c15 	stw	r23,48(sp)
 8001c00:	dcc00815 	stw	r19,32(sp)
 8001c04:	dc800715 	stw	r18,28(sp)
 8001c08:	dc400615 	stw	r17,24(sp)
 8001c0c:	dc000515 	stw	r16,20(sp)
 8001c10:	d9c00315 	stw	r7,12(sp)
 8001c14:	d9400215 	stw	r5,8(sp)
 8001c18:	2029883a 	mov	r20,r4
 8001c1c:	dd400f17 	ldw	r21,60(sp)
 8001c20:	b000010e 	bge	r22,zero,8001c28 <_ZL28check_compact_exception_specPKSt9type_infoPvPKhij+0x48>
 8001c24:	05adc83a 	sub	r22,zero,r22
 8001c28:	01000144 	movi	r4,5
 8001c2c:	000b883a 	mov	r5,zero
 8001c30:	d9800415 	stw	r6,16(sp)
 8001c34:	8001b580 	call	8001b58 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 8001c38:	d9800417 	ldw	r6,16(sp)
 8001c3c:	100b883a 	mov	r5,r2
 8001c40:	d9c00104 	addi	r7,sp,4
 8001c44:	01000144 	movi	r4,5
 8001c48:	800184c0 	call	800184c <_ZL28read_encoded_value_with_basehjPKhPj>
 8001c4c:	1009883a 	mov	r4,r2
 8001c50:	017ffe44 	movi	r5,-7
 8001c54:	1021883a 	mov	r16,r2
 8001c58:	800334c0 	call	800334c <__mulsi3>
 8001c5c:	1027883a 	mov	r19,r2
 8001c60:	002f883a 	mov	r23,zero
 8001c64:	84400003 	ldbu	r17,0(r16)
 8001c68:	8009883a 	mov	r4,r16
 8001c6c:	014001c4 	movi	r5,7
 8001c70:	800334c0 	call	800334c <__mulsi3>
 8001c74:	88c01fcc 	andi	r3,r17,127
 8001c78:	14c5883a 	add	r2,r2,r19
 8001c7c:	1886983a 	sll	r3,r3,r2
 8001c80:	8c403fcc 	andi	r17,r17,255
 8001c84:	8c40201c 	xori	r17,r17,128
 8001c88:	8c7fe004 	addi	r17,r17,-128
 8001c8c:	84000044 	addi	r16,r16,1
 8001c90:	b8eeb03a 	or	r23,r23,r3
 8001c94:	883ff316 	blt	r17,zero,8001c64 <__alt_data_end+0xfc001c64>
 8001c98:	85e1883a 	add	r16,r16,r23
 8001c9c:	8009883a 	mov	r4,r16
 8001ca0:	017ffe44 	movi	r5,-7
 8001ca4:	800334c0 	call	800334c <__mulsi3>
 8001ca8:	102f883a 	mov	r23,r2
 8001cac:	8007883a 	mov	r3,r16
 8001cb0:	0025883a 	mov	r18,zero
 8001cb4:	1cc00003 	ldbu	r19,0(r3)
 8001cb8:	1809883a 	mov	r4,r3
 8001cbc:	014001c4 	movi	r5,7
 8001cc0:	1c400044 	addi	r17,r3,1
 8001cc4:	800334c0 	call	800334c <__mulsi3>
 8001cc8:	98c01fcc 	andi	r3,r19,127
 8001ccc:	15c5883a 	add	r2,r2,r23
 8001cd0:	1884983a 	sll	r2,r3,r2
 8001cd4:	9cc03fcc 	andi	r19,r19,255
 8001cd8:	9cc0201c 	xori	r19,r19,128
 8001cdc:	9cffe004 	addi	r19,r19,-128
 8001ce0:	8807883a 	mov	r3,r17
 8001ce4:	90a4b03a 	or	r18,r18,r2
 8001ce8:	983ff216 	blt	r19,zero,8001cb4 <__alt_data_end+0xfc001cb4>
 8001cec:	b7003fcc 	andi	fp,r22,255
 8001cf0:	e73fffc4 	addi	fp,fp,-1
 8001cf4:	8f39883a 	add	fp,r17,fp
 8001cf8:	840000c4 	addi	r16,r16,3
 8001cfc:	848d883a 	add	r6,r16,r18
 8001d00:	e009883a 	mov	r4,fp
 8001d04:	017ffe44 	movi	r5,-7
 8001d08:	04ffff04 	movi	r19,-4
 8001d0c:	34e6703a 	and	r19,r6,r19
 8001d10:	800334c0 	call	800334c <__mulsi3>
 8001d14:	002f883a 	mov	r23,zero
 8001d18:	102d883a 	mov	r22,r2
 8001d1c:	e4400003 	ldbu	r17,0(fp)
 8001d20:	e009883a 	mov	r4,fp
 8001d24:	014001c4 	movi	r5,7
 8001d28:	800334c0 	call	800334c <__mulsi3>
 8001d2c:	88c01fcc 	andi	r3,r17,127
 8001d30:	1585883a 	add	r2,r2,r22
 8001d34:	1886983a 	sll	r3,r3,r2
 8001d38:	8c403fcc 	andi	r17,r17,255
 8001d3c:	8c40201c 	xori	r17,r17,128
 8001d40:	e4000044 	addi	r16,fp,1
 8001d44:	8c7fe004 	addi	r17,r17,-128
 8001d48:	b8eeb03a 	or	r23,r23,r3
 8001d4c:	8039883a 	mov	fp,r16
 8001d50:	883ff216 	blt	r17,zero,8001d1c <__alt_data_end+0xfc001d1c>
 8001d54:	d8800317 	ldw	r2,12(sp)
 8001d58:	14803fcc 	andi	r18,r2,255
 8001d5c:	b8002326 	beq	r23,zero,8001dec <_ZL28check_compact_exception_specPKSt9type_infoPvPKhij+0x20c>
 8001d60:	9009883a 	mov	r4,r18
 8001d64:	80017ac0 	call	80017ac <_ZL21size_of_encoded_valueh>
 8001d68:	1009883a 	mov	r4,r2
 8001d6c:	b97fffc4 	addi	r5,r23,-1
 8001d70:	800334c0 	call	800334c <__mulsi3>
 8001d74:	9009883a 	mov	r4,r18
 8001d78:	a80b883a 	mov	r5,r21
 8001d7c:	14cd883a 	add	r6,r2,r19
 8001d80:	d80f883a 	mov	r7,sp
 8001d84:	800184c0 	call	800184c <_ZL28read_encoded_value_with_basehjPKhPj>
 8001d88:	d9000017 	ldw	r4,0(sp)
 8001d8c:	a00b883a 	mov	r5,r20
 8001d90:	d9800204 	addi	r6,sp,8
 8001d94:	80017240 	call	8001724 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv>
 8001d98:	10c03fcc 	andi	r3,r2,255
 8001d9c:	1800141e 	bne	r3,zero,8001df0 <_ZL28check_compact_exception_specPKSt9type_infoPvPKhij+0x210>
 8001da0:	8009883a 	mov	r4,r16
 8001da4:	017ffe44 	movi	r5,-7
 8001da8:	800334c0 	call	800334c <__mulsi3>
 8001dac:	102d883a 	mov	r22,r2
 8001db0:	002f883a 	mov	r23,zero
 8001db4:	84400003 	ldbu	r17,0(r16)
 8001db8:	8009883a 	mov	r4,r16
 8001dbc:	014001c4 	movi	r5,7
 8001dc0:	800334c0 	call	800334c <__mulsi3>
 8001dc4:	88c01fcc 	andi	r3,r17,127
 8001dc8:	1585883a 	add	r2,r2,r22
 8001dcc:	1886983a 	sll	r3,r3,r2
 8001dd0:	8c403fcc 	andi	r17,r17,255
 8001dd4:	8c40201c 	xori	r17,r17,128
 8001dd8:	8c7fe004 	addi	r17,r17,-128
 8001ddc:	84000044 	addi	r16,r16,1
 8001de0:	b8eeb03a 	or	r23,r23,r3
 8001de4:	883ff316 	blt	r17,zero,8001db4 <__alt_data_end+0xfc001db4>
 8001de8:	003fdc06 	br	8001d5c <__alt_data_end+0xfc001d5c>
 8001dec:	0005883a 	mov	r2,zero
 8001df0:	dfc00e17 	ldw	ra,56(sp)
 8001df4:	df000d17 	ldw	fp,52(sp)
 8001df8:	ddc00c17 	ldw	r23,48(sp)
 8001dfc:	dd800b17 	ldw	r22,44(sp)
 8001e00:	dd400a17 	ldw	r21,40(sp)
 8001e04:	dd000917 	ldw	r20,36(sp)
 8001e08:	dcc00817 	ldw	r19,32(sp)
 8001e0c:	dc800717 	ldw	r18,28(sp)
 8001e10:	dc400617 	ldw	r17,24(sp)
 8001e14:	dc000517 	ldw	r16,20(sp)
 8001e18:	dec00f04 	addi	sp,sp,60
 8001e1c:	f800283a 	ret

08001e20 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>:
 8001e20:	defffb04 	addi	sp,sp,-20
 8001e24:	dcc00315 	stw	r19,12(sp)
 8001e28:	dc400115 	stw	r17,4(sp)
 8001e2c:	dc000015 	stw	r16,0(sp)
 8001e30:	dfc00415 	stw	ra,16(sp)
 8001e34:	dc800215 	stw	r18,8(sp)
 8001e38:	2027883a 	mov	r19,r4
 8001e3c:	2821883a 	mov	r16,r5
 8001e40:	3023883a 	mov	r17,r6
 8001e44:	20003f26 	beq	r4,zero,8001f44 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x124>
 8001e48:	80036440 	call	8003644 <_Unwind_GetRegionStart>
 8001e4c:	88800015 	stw	r2,0(r17)
 8001e50:	84800003 	ldbu	r18,0(r16)
 8001e54:	00c03fc4 	movi	r3,255
 8001e58:	84000044 	addi	r16,r16,1
 8001e5c:	90c03726 	beq	r18,r3,8001f3c <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x11c>
 8001e60:	9009883a 	mov	r4,r18
 8001e64:	980b883a 	mov	r5,r19
 8001e68:	8001b580 	call	8001b58 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 8001e6c:	800d883a 	mov	r6,r16
 8001e70:	9009883a 	mov	r4,r18
 8001e74:	100b883a 	mov	r5,r2
 8001e78:	89c00104 	addi	r7,r17,4
 8001e7c:	800184c0 	call	800184c <_ZL28read_encoded_value_with_basehjPKhPj>
 8001e80:	1021883a 	mov	r16,r2
 8001e84:	80c00003 	ldbu	r3,0(r16)
 8001e88:	01003fc4 	movi	r4,255
 8001e8c:	80800044 	addi	r2,r16,1
 8001e90:	88c00505 	stb	r3,20(r17)
 8001e94:	18c03fcc 	andi	r3,r3,255
 8001e98:	19002c26 	beq	r3,r4,8001f4c <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x12c>
 8001e9c:	100d883a 	mov	r6,r2
 8001ea0:	000f883a 	mov	r7,zero
 8001ea4:	000b883a 	mov	r5,zero
 8001ea8:	30c00003 	ldbu	r3,0(r6)
 8001eac:	10800044 	addi	r2,r2,1
 8001eb0:	100d883a 	mov	r6,r2
 8001eb4:	19001fcc 	andi	r4,r3,127
 8001eb8:	2148983a 	sll	r4,r4,r5
 8001ebc:	18c03fcc 	andi	r3,r3,255
 8001ec0:	18c0201c 	xori	r3,r3,128
 8001ec4:	18ffe004 	addi	r3,r3,-128
 8001ec8:	390eb03a 	or	r7,r7,r4
 8001ecc:	294001c4 	addi	r5,r5,7
 8001ed0:	183ff516 	blt	r3,zero,8001ea8 <__alt_data_end+0xfc001ea8>
 8001ed4:	11cf883a 	add	r7,r2,r7
 8001ed8:	89c00315 	stw	r7,12(r17)
 8001edc:	10c00003 	ldbu	r3,0(r2)
 8001ee0:	000f883a 	mov	r7,zero
 8001ee4:	10800044 	addi	r2,r2,1
 8001ee8:	88c00545 	stb	r3,21(r17)
 8001eec:	000b883a 	mov	r5,zero
 8001ef0:	10c00003 	ldbu	r3,0(r2)
 8001ef4:	10800044 	addi	r2,r2,1
 8001ef8:	19001fcc 	andi	r4,r3,127
 8001efc:	2148983a 	sll	r4,r4,r5
 8001f00:	18c03fcc 	andi	r3,r3,255
 8001f04:	18c0201c 	xori	r3,r3,128
 8001f08:	18ffe004 	addi	r3,r3,-128
 8001f0c:	390eb03a 	or	r7,r7,r4
 8001f10:	294001c4 	addi	r5,r5,7
 8001f14:	183ff616 	blt	r3,zero,8001ef0 <__alt_data_end+0xfc001ef0>
 8001f18:	11cf883a 	add	r7,r2,r7
 8001f1c:	89c00415 	stw	r7,16(r17)
 8001f20:	dfc00417 	ldw	ra,16(sp)
 8001f24:	dcc00317 	ldw	r19,12(sp)
 8001f28:	dc800217 	ldw	r18,8(sp)
 8001f2c:	dc400117 	ldw	r17,4(sp)
 8001f30:	dc000017 	ldw	r16,0(sp)
 8001f34:	dec00504 	addi	sp,sp,20
 8001f38:	f800283a 	ret
 8001f3c:	88800115 	stw	r2,4(r17)
 8001f40:	003fd006 	br	8001e84 <__alt_data_end+0xfc001e84>
 8001f44:	0005883a 	mov	r2,zero
 8001f48:	003fc006 	br	8001e4c <__alt_data_end+0xfc001e4c>
 8001f4c:	88000315 	stw	zero,12(r17)
 8001f50:	003fe206 	br	8001edc <__alt_data_end+0xfc001edc>

08001f54 <__gxx_personality_sj0>:
 8001f54:	00820034 	movhi	r2,2048
 8001f58:	deffde04 	addi	sp,sp,-136
 8001f5c:	1087d504 	addi	r2,r2,8020
 8001f60:	d8801015 	stw	r2,64(sp)
 8001f64:	008200b4 	movhi	r2,2050
 8001f68:	10b61f04 	addi	r2,r2,-10116
 8001f6c:	d8801115 	stw	r2,68(sp)
 8001f70:	00820034 	movhi	r2,2048
 8001f74:	10891004 	addi	r2,r2,9280
 8001f78:	d9001715 	stw	r4,92(sp)
 8001f7c:	d9000a04 	addi	r4,sp,40
 8001f80:	d8801315 	stw	r2,76(sp)
 8001f84:	dfc02115 	stw	ra,132(sp)
 8001f88:	df002015 	stw	fp,128(sp)
 8001f8c:	dec01215 	stw	sp,72(sp)
 8001f90:	dec01415 	stw	sp,80(sp)
 8001f94:	d9401a15 	stw	r5,104(sp)
 8001f98:	d9801815 	stw	r6,96(sp)
 8001f9c:	d9c01915 	stw	r7,100(sp)
 8001fa0:	800357c0 	call	800357c <_Unwind_SjLj_Register>
 8001fa4:	d8c01717 	ldw	r3,92(sp)
 8001fa8:	d8000915 	stw	zero,36(sp)
 8001fac:	d8000815 	stw	zero,32(sp)
 8001fb0:	00800044 	movi	r2,1
 8001fb4:	18800926 	beq	r3,r2,8001fdc <__gxx_personality_sj0+0x88>
 8001fb8:	014000c4 	movi	r5,3
 8001fbc:	d9401715 	stw	r5,92(sp)
 8001fc0:	d9000a04 	addi	r4,sp,40
 8001fc4:	80035940 	call	8003594 <_Unwind_SjLj_Unregister>
 8001fc8:	d8801717 	ldw	r2,92(sp)
 8001fcc:	dfc02117 	ldw	ra,132(sp)
 8001fd0:	df002017 	ldw	fp,128(sp)
 8001fd4:	dec02204 	addi	sp,sp,136
 8001fd8:	f800283a 	ret
 8001fdc:	d9401817 	ldw	r5,96(sp)
 8001fe0:	012f3574 	movhi	r4,48341
 8001fe4:	21354004 	addi	r4,r4,-11008
 8001fe8:	2909883a 	add	r4,r5,r4
 8001fec:	2145803a 	cmpltu	r2,r4,r5
 8001ff0:	d9401917 	ldw	r5,100(sp)
 8001ff4:	d8c01b05 	stb	r3,108(sp)
 8001ff8:	00ee2cb4 	movhi	r3,47282
 8001ffc:	18eaaf04 	addi	r3,r3,-21828
 8002000:	28c7883a 	add	r3,r5,r3
 8002004:	10c5883a 	add	r2,r2,r3
 8002008:	10003526 	beq	r2,zero,80020e0 <__gxx_personality_sj0+0x18c>
 800200c:	d8c01a17 	ldw	r3,104(sp)
 8002010:	00800184 	movi	r2,6
 8002014:	18803826 	beq	r3,r2,80020f8 <__gxx_personality_sj0+0x1a4>
 8002018:	d9002317 	ldw	r4,140(sp)
 800201c:	00ffffc4 	movi	r3,-1
 8002020:	d8c00b15 	stw	r3,44(sp)
 8002024:	80036380 	call	8003638 <_Unwind_GetLanguageSpecificData>
 8002028:	d8801915 	stw	r2,100(sp)
 800202c:	1000a326 	beq	r2,zero,80022bc <__gxx_personality_sj0+0x368>
 8002030:	d9002317 	ldw	r4,140(sp)
 8002034:	d9401917 	ldw	r5,100(sp)
 8002038:	d80d883a 	mov	r6,sp
 800203c:	00bfffc4 	movi	r2,-1
 8002040:	d8800b15 	stw	r2,44(sp)
 8002044:	8001e200 	call	8001e20 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>
 8002048:	d9000503 	ldbu	r4,20(sp)
 800204c:	d9402317 	ldw	r5,140(sp)
 8002050:	d8801715 	stw	r2,92(sp)
 8002054:	8001b580 	call	8001b58 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 8002058:	d9002317 	ldw	r4,140(sp)
 800205c:	d9400804 	addi	r5,sp,32
 8002060:	d8800215 	stw	r2,8(sp)
 8002064:	80036080 	call	8003608 <_Unwind_GetIPInfo>
 8002068:	d8c00817 	ldw	r3,32(sp)
 800206c:	1800011e 	bne	r3,zero,8002074 <__gxx_personality_sj0+0x120>
 8002070:	10bfffc4 	addi	r2,r2,-1
 8002074:	10009116 	blt	r2,zero,80022bc <__gxx_personality_sj0+0x368>
 8002078:	10004c1e 	bne	r2,zero,80021ac <__gxx_personality_sj0+0x258>
 800207c:	d8001c15 	stw	zero,112(sp)
 8002080:	00800044 	movi	r2,1
 8002084:	d8001715 	stw	zero,92(sp)
 8002088:	d8001815 	stw	zero,96(sp)
 800208c:	d9001a17 	ldw	r4,104(sp)
 8002090:	20c0004c 	andi	r3,r4,1
 8002094:	18008c26 	beq	r3,zero,80022c8 <__gxx_personality_sj0+0x374>
 8002098:	00c00084 	movi	r3,2
 800209c:	10c08726 	beq	r2,r3,80022bc <__gxx_personality_sj0+0x368>
 80020a0:	d8801b03 	ldbu	r2,108(sp)
 80020a4:	1000d21e 	bne	r2,zero,80023f0 <__gxx_personality_sj0+0x49c>
 80020a8:	d9402217 	ldw	r5,136(sp)
 80020ac:	d8801717 	ldw	r2,92(sp)
 80020b0:	d8c01817 	ldw	r3,96(sp)
 80020b4:	d9001917 	ldw	r4,100(sp)
 80020b8:	28bffb15 	stw	r2,-20(r5)
 80020bc:	d8800917 	ldw	r2,36(sp)
 80020c0:	28fffc15 	stw	r3,-16(r5)
 80020c4:	00c00184 	movi	r3,6
 80020c8:	28bfff15 	stw	r2,-4(r5)
 80020cc:	d8801c17 	ldw	r2,112(sp)
 80020d0:	293ffd15 	stw	r4,-12(r5)
 80020d4:	d8c01715 	stw	r3,92(sp)
 80020d8:	28bffe15 	stw	r2,-8(r5)
 80020dc:	003fb806 	br	8001fc0 <__alt_data_end+0xfc001fc0>
 80020e0:	d8801717 	ldw	r2,92(sp)
 80020e4:	113fc936 	bltu	r2,r4,800200c <__alt_data_end+0xfc00200c>
 80020e8:	d8c01a17 	ldw	r3,104(sp)
 80020ec:	d8001b05 	stb	zero,108(sp)
 80020f0:	00800184 	movi	r2,6
 80020f4:	18bfc81e 	bne	r3,r2,8002018 <__alt_data_end+0xfc002018>
 80020f8:	d8801b03 	ldbu	r2,108(sp)
 80020fc:	103fc61e 	bne	r2,zero,8002018 <__alt_data_end+0xfc002018>
 8002100:	d9002217 	ldw	r4,136(sp)
 8002104:	d9402217 	ldw	r5,136(sp)
 8002108:	d8802217 	ldw	r2,136(sp)
 800210c:	213ffe17 	ldw	r4,-8(r4)
 8002110:	297ffb17 	ldw	r5,-20(r5)
 8002114:	10bffd17 	ldw	r2,-12(r2)
 8002118:	d9001c15 	stw	r4,112(sp)
 800211c:	d9401715 	stw	r5,92(sp)
 8002120:	d8801915 	stw	r2,100(sp)
 8002124:	20008726 	beq	r4,zero,8002344 <__gxx_personality_sj0+0x3f0>
 8002128:	d8801717 	ldw	r2,92(sp)
 800212c:	10006f0e 	bge	r2,zero,80022ec <__gxx_personality_sj0+0x398>
 8002130:	d9002317 	ldw	r4,140(sp)
 8002134:	d9401917 	ldw	r5,100(sp)
 8002138:	d80d883a 	mov	r6,sp
 800213c:	00bfffc4 	movi	r2,-1
 8002140:	d8800b15 	stw	r2,44(sp)
 8002144:	8001e200 	call	8001e20 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>
 8002148:	d9000503 	ldbu	r4,20(sp)
 800214c:	d9402317 	ldw	r5,140(sp)
 8002150:	8001b580 	call	8001b58 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 8002154:	d9000503 	ldbu	r4,20(sp)
 8002158:	d9402317 	ldw	r5,140(sp)
 800215c:	d8800215 	stw	r2,8(sp)
 8002160:	8001b580 	call	8001b58 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 8002164:	d8c02217 	ldw	r3,136(sp)
 8002168:	18bffe15 	stw	r2,-8(r3)
 800216c:	00005f06 	br	80022ec <__gxx_personality_sj0+0x398>
 8002170:	000f883a 	mov	r7,zero
 8002174:	000d883a 	mov	r6,zero
 8002178:	19000003 	ldbu	r4,0(r3)
 800217c:	18c00044 	addi	r3,r3,1
 8002180:	d8c01715 	stw	r3,92(sp)
 8002184:	21401fcc 	andi	r5,r4,127
 8002188:	298a983a 	sll	r5,r5,r6
 800218c:	21003fcc 	andi	r4,r4,255
 8002190:	2100201c 	xori	r4,r4,128
 8002194:	213fe004 	addi	r4,r4,-128
 8002198:	394eb03a 	or	r7,r7,r5
 800219c:	318001c4 	addi	r6,r6,7
 80021a0:	203ff516 	blt	r4,zero,8002178 <__alt_data_end+0xfc002178>
 80021a4:	10bfffc4 	addi	r2,r2,-1
 80021a8:	10000e26 	beq	r2,zero,80021e4 <__gxx_personality_sj0+0x290>
 80021ac:	d8c01717 	ldw	r3,92(sp)
 80021b0:	0011883a 	mov	r8,zero
 80021b4:	000d883a 	mov	r6,zero
 80021b8:	19000003 	ldbu	r4,0(r3)
 80021bc:	18c00044 	addi	r3,r3,1
 80021c0:	21401fcc 	andi	r5,r4,127
 80021c4:	298a983a 	sll	r5,r5,r6
 80021c8:	21003fcc 	andi	r4,r4,255
 80021cc:	2100201c 	xori	r4,r4,128
 80021d0:	213fe004 	addi	r4,r4,-128
 80021d4:	4150b03a 	or	r8,r8,r5
 80021d8:	318001c4 	addi	r6,r6,7
 80021dc:	203ff616 	blt	r4,zero,80021b8 <__alt_data_end+0xfc0021b8>
 80021e0:	003fe306 	br	8002170 <__alt_data_end+0xfc002170>
 80021e4:	42000044 	addi	r8,r8,1
 80021e8:	da001c15 	stw	r8,112(sp)
 80021ec:	38004f26 	beq	r7,zero,800232c <__gxx_personality_sj0+0x3d8>
 80021f0:	d8800417 	ldw	r2,16(sp)
 80021f4:	39ffffc4 	addi	r7,r7,-1
 80021f8:	11c5883a 	add	r2,r2,r7
 80021fc:	d8801815 	stw	r2,96(sp)
 8002200:	40002e26 	beq	r8,zero,80022bc <__gxx_personality_sj0+0x368>
 8002204:	10004b26 	beq	r2,zero,8002334 <__gxx_personality_sj0+0x3e0>
 8002208:	d8c01a17 	ldw	r3,104(sp)
 800220c:	18c0020c 	andi	r3,r3,8
 8002210:	d8c01e15 	stw	r3,120(sp)
 8002214:	1800801e 	bne	r3,zero,8002418 <__gxx_personality_sj0+0x4c4>
 8002218:	d8801b03 	ldbu	r2,108(sp)
 800221c:	1000821e 	bne	r2,zero,8002428 <__gxx_personality_sj0+0x4d4>
 8002220:	d9002217 	ldw	r4,136(sp)
 8002224:	20800017 	ldw	r2,0(r4)
 8002228:	1080004c 	andi	r2,r2,1
 800222c:	1000821e 	bne	r2,zero,8002438 <__gxx_personality_sj0+0x4e4>
 8002230:	d9402217 	ldw	r5,136(sp)
 8002234:	28800504 	addi	r2,r5,20
 8002238:	d8800915 	stw	r2,36(sp)
 800223c:	10bff017 	ldw	r2,-64(r2)
 8002240:	d8801d15 	stw	r2,116(sp)
 8002244:	d9001b03 	ldbu	r4,108(sp)
 8002248:	d8001b45 	stb	zero,109(sp)
 800224c:	d9001f15 	stw	r4,124(sp)
 8002250:	00000e06 	br	800228c <__gxx_personality_sj0+0x338>
 8002254:	01c03d0e 	bge	zero,r7,800234c <__gxx_personality_sj0+0x3f8>
 8002258:	017fffc4 	movi	r5,-1
 800225c:	d9400b15 	stw	r5,44(sp)
 8002260:	d809883a 	mov	r4,sp
 8002264:	380b883a 	mov	r5,r7
 8002268:	8001a5c0 	call	8001a5c <_ZL15get_ttype_entryP16lsda_header_infom>
 800226c:	10004f26 	beq	r2,zero,80023ac <__gxx_personality_sj0+0x458>
 8002270:	d8c01d17 	ldw	r3,116(sp)
 8002274:	1800611e 	bne	r3,zero,80023fc <__gxx_personality_sj0+0x4a8>
 8002278:	d8800617 	ldw	r2,24(sp)
 800227c:	10005726 	beq	r2,zero,80023dc <__gxx_personality_sj0+0x488>
 8002280:	d9401717 	ldw	r5,92(sp)
 8002284:	2885883a 	add	r2,r5,r2
 8002288:	d8801815 	stw	r2,96(sp)
 800228c:	d9001817 	ldw	r4,96(sp)
 8002290:	d9400704 	addi	r5,sp,28
 8002294:	80016cc0 	call	80016cc <_ZL12read_sleb128PKhPl>
 8002298:	1009883a 	mov	r4,r2
 800229c:	d9400604 	addi	r5,sp,24
 80022a0:	d8801715 	stw	r2,92(sp)
 80022a4:	80016cc0 	call	80016cc <_ZL12read_sleb128PKhPl>
 80022a8:	d9c00717 	ldw	r7,28(sp)
 80022ac:	383fe91e 	bne	r7,zero,8002254 <__alt_data_end+0xfc002254>
 80022b0:	01000044 	movi	r4,1
 80022b4:	d9001b45 	stb	r4,109(sp)
 80022b8:	003fef06 	br	8002278 <__alt_data_end+0xfc002278>
 80022bc:	01000204 	movi	r4,8
 80022c0:	d9001715 	stw	r4,92(sp)
 80022c4:	003f3e06 	br	8001fc0 <__alt_data_end+0xfc001fc0>
 80022c8:	d9001a17 	ldw	r4,104(sp)
 80022cc:	20c0020c 	andi	r3,r4,8
 80022d0:	1800021e 	bne	r3,zero,80022dc <__gxx_personality_sj0+0x388>
 80022d4:	d8c01b03 	ldbu	r3,108(sp)
 80022d8:	18001826 	beq	r3,zero,800233c <__gxx_personality_sj0+0x3e8>
 80022dc:	00c00044 	movi	r3,1
 80022e0:	10c05926 	beq	r2,r3,8002448 <__gxx_personality_sj0+0x4f4>
 80022e4:	d9401717 	ldw	r5,92(sp)
 80022e8:	28005816 	blt	r5,zero,800244c <__gxx_personality_sj0+0x4f8>
 80022ec:	d9802217 	ldw	r6,136(sp)
 80022f0:	d9002317 	ldw	r4,140(sp)
 80022f4:	00bfffc4 	movi	r2,-1
 80022f8:	000b883a 	mov	r5,zero
 80022fc:	d8800b15 	stw	r2,44(sp)
 8002300:	80035dc0 	call	80035dc <_Unwind_SetGR>
 8002304:	d9002317 	ldw	r4,140(sp)
 8002308:	d9801717 	ldw	r6,92(sp)
 800230c:	01400044 	movi	r5,1
 8002310:	80035dc0 	call	80035dc <_Unwind_SetGR>
 8002314:	d9002317 	ldw	r4,140(sp)
 8002318:	d9401c17 	ldw	r5,112(sp)
 800231c:	80036280 	call	8003628 <_Unwind_SetIP>
 8002320:	010001c4 	movi	r4,7
 8002324:	d9001715 	stw	r4,92(sp)
 8002328:	003f2506 	br	8001fc0 <__alt_data_end+0xfc001fc0>
 800232c:	d8c01c17 	ldw	r3,112(sp)
 8002330:	183fe226 	beq	r3,zero,80022bc <__alt_data_end+0xfc0022bc>
 8002334:	00800084 	movi	r2,2
 8002338:	003f5206 	br	8002084 <__alt_data_end+0xfc002084>
 800233c:	00c00044 	movi	r3,1
 8002340:	10ff791e 	bne	r2,r3,8002128 <__alt_data_end+0xfc002128>
 8002344:	d9002217 	ldw	r4,136(sp)
 8002348:	8002f040 	call	8002f04 <__cxa_call_terminate>
 800234c:	d9001d17 	ldw	r4,116(sp)
 8002350:	20000426 	beq	r4,zero,8002364 <__gxx_personality_sj0+0x410>
 8002354:	d9401e17 	ldw	r5,120(sp)
 8002358:	2800021e 	bne	r5,zero,8002364 <__gxx_personality_sj0+0x410>
 800235c:	d8801f17 	ldw	r2,124(sp)
 8002360:	10001626 	beq	r2,zero,80023bc <__gxx_personality_sj0+0x468>
 8002364:	d8c00317 	ldw	r3,12(sp)
 8002368:	01ce303a 	nor	r7,zero,r7
 800236c:	000d883a 	mov	r6,zero
 8002370:	19c7883a 	add	r3,r3,r7
 8002374:	000b883a 	mov	r5,zero
 8002378:	18800003 	ldbu	r2,0(r3)
 800237c:	18c00044 	addi	r3,r3,1
 8002380:	11001fcc 	andi	r4,r2,127
 8002384:	2148983a 	sll	r4,r4,r5
 8002388:	10803fcc 	andi	r2,r2,255
 800238c:	1080201c 	xori	r2,r2,128
 8002390:	10bfe004 	addi	r2,r2,-128
 8002394:	310cb03a 	or	r6,r6,r4
 8002398:	294001c4 	addi	r5,r5,7
 800239c:	103ff616 	blt	r2,zero,8002378 <__alt_data_end+0xfc002378>
 80023a0:	3005003a 	cmpeq	r2,r6,zero
 80023a4:	10803fcc 	andi	r2,r2,255
 80023a8:	103fb326 	beq	r2,zero,8002278 <__alt_data_end+0xfc002278>
 80023ac:	d8800717 	ldw	r2,28(sp)
 80023b0:	d8801715 	stw	r2,92(sp)
 80023b4:	008000c4 	movi	r2,3
 80023b8:	003f3406 	br	800208c <__alt_data_end+0xfc00208c>
 80023bc:	d9401d17 	ldw	r5,116(sp)
 80023c0:	d9800917 	ldw	r6,36(sp)
 80023c4:	00ffffc4 	movi	r3,-1
 80023c8:	d809883a 	mov	r4,sp
 80023cc:	d8c00b15 	stw	r3,44(sp)
 80023d0:	8001ab00 	call	8001ab0 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl>
 80023d4:	1080005c 	xori	r2,r2,1
 80023d8:	003ff206 	br	80023a4 <__alt_data_end+0xfc0023a4>
 80023dc:	d8801b43 	ldbu	r2,109(sp)
 80023e0:	103fb626 	beq	r2,zero,80022bc <__alt_data_end+0xfc0022bc>
 80023e4:	d8001715 	stw	zero,92(sp)
 80023e8:	00800084 	movi	r2,2
 80023ec:	003f2706 	br	800208c <__alt_data_end+0xfc00208c>
 80023f0:	00800184 	movi	r2,6
 80023f4:	d8801715 	stw	r2,92(sp)
 80023f8:	003ef106 	br	8001fc0 <__alt_data_end+0xfc001fc0>
 80023fc:	1009883a 	mov	r4,r2
 8002400:	180b883a 	mov	r5,r3
 8002404:	d9800904 	addi	r6,sp,36
 8002408:	80017240 	call	8001724 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv>
 800240c:	10803fcc 	andi	r2,r2,255
 8002410:	103fe61e 	bne	r2,zero,80023ac <__alt_data_end+0xfc0023ac>
 8002414:	003f9806 	br	8002278 <__alt_data_end+0xfc002278>
 8002418:	008200b4 	movhi	r2,2050
 800241c:	10808a04 	addi	r2,r2,552
 8002420:	d8801d15 	stw	r2,116(sp)
 8002424:	003f8706 	br	8002244 <__alt_data_end+0xfc002244>
 8002428:	00c200b4 	movhi	r3,2050
 800242c:	18c08c04 	addi	r3,r3,560
 8002430:	d8c01d15 	stw	r3,116(sp)
 8002434:	003f8306 	br	8002244 <__alt_data_end+0xfc002244>
 8002438:	20bff517 	ldw	r2,-44(r4)
 800243c:	003f7e06 	br	8002238 <__alt_data_end+0xfc002238>
 8002440:	d9000c17 	ldw	r4,48(sp)
 8002444:	8002d800 	call	8002d80 <__cxa_begin_catch>
 8002448:	8002a2c0 	call	8002a2c <_ZSt9terminatev>
 800244c:	d8c00b15 	stw	r3,44(sp)
 8002450:	8002a540 	call	8002a54 <_ZSt10unexpectedv>

08002454 <__cxa_call_unexpected>:
 8002454:	00820034 	movhi	r2,2048
 8002458:	deffe604 	addi	sp,sp,-104
 800245c:	1087d504 	addi	r2,r2,8020
 8002460:	d8800d15 	stw	r2,52(sp)
 8002464:	008200b4 	movhi	r2,2050
 8002468:	10b62304 	addi	r2,r2,-10100
 800246c:	d8800e15 	stw	r2,56(sp)
 8002470:	d8800104 	addi	r2,sp,4
 8002474:	d8800f15 	stw	r2,60(sp)
 8002478:	00820034 	movhi	r2,2048
 800247c:	10893804 	addi	r2,r2,9440
 8002480:	d9001415 	stw	r4,80(sp)
 8002484:	d9000704 	addi	r4,sp,28
 8002488:	dfc01915 	stw	ra,100(sp)
 800248c:	d8801015 	stw	r2,64(sp)
 8002490:	df001815 	stw	fp,96(sp)
 8002494:	dec01115 	stw	sp,68(sp)
 8002498:	800357c0 	call	800357c <_Unwind_SjLj_Register>
 800249c:	d9001417 	ldw	r4,80(sp)
 80024a0:	8002d800 	call	8002d80 <__cxa_begin_catch>
 80024a4:	d8c01417 	ldw	r3,80(sp)
 80024a8:	18bffe17 	ldw	r2,-8(r3)
 80024ac:	193ff717 	ldw	r4,-36(r3)
 80024b0:	18fffd17 	ldw	r3,-12(r3)
 80024b4:	d8800315 	stw	r2,12(sp)
 80024b8:	d8c01615 	stw	r3,88(sp)
 80024bc:	d8c01417 	ldw	r3,80(sp)
 80024c0:	18fffb17 	ldw	r3,-20(r3)
 80024c4:	d8c01515 	stw	r3,84(sp)
 80024c8:	d8c01417 	ldw	r3,80(sp)
 80024cc:	18fff817 	ldw	r3,-32(r3)
 80024d0:	d8c01415 	stw	r3,80(sp)
 80024d4:	00c00044 	movi	r3,1
 80024d8:	d8c00815 	stw	r3,32(sp)
 80024dc:	8002a440 	call	8002a44 <_ZN10__cxxabiv112__unexpectedEPFvvE>
 80024e0:	d8c00917 	ldw	r3,36(sp)
 80024e4:	d8800817 	ldw	r2,32(sp)
 80024e8:	d8c01715 	stw	r3,92(sp)
 80024ec:	10000a26 	beq	r2,zero,8002518 <__cxa_call_unexpected+0xc4>
 80024f0:	10bfffc4 	addi	r2,r2,-1
 80024f4:	10000126 	beq	r2,zero,80024fc <__cxa_call_unexpected+0xa8>
 80024f8:	003da0fa 	break	3
 80024fc:	d8000815 	stw	zero,32(sp)
 8002500:	8002e340 	call	8002e34 <__cxa_end_catch>
 8002504:	8002e340 	call	8002e34 <__cxa_end_catch>
 8002508:	d9001717 	ldw	r4,92(sp)
 800250c:	00bfffc4 	movi	r2,-1
 8002510:	d8800815 	stw	r2,32(sp)
 8002514:	80037780 	call	8003778 <_Unwind_SjLj_Resume>
 8002518:	d9001717 	ldw	r4,92(sp)
 800251c:	8002d800 	call	8002d80 <__cxa_begin_catch>
 8002520:	80026880 	call	8002688 <__cxa_get_globals_fast>
 8002524:	10800017 	ldw	r2,0(r2)
 8002528:	10c00b17 	ldw	r3,44(r2)
 800252c:	18c0004c 	andi	r3,r3,1
 8002530:	18001e26 	beq	r3,zero,80025ac <__cxa_call_unexpected+0x158>
 8002534:	10800017 	ldw	r2,0(r2)
 8002538:	d8801715 	stw	r2,92(sp)
 800253c:	d8801517 	ldw	r2,84(sp)
 8002540:	00802b0e 	bge	zero,r2,80025f0 <__cxa_call_unexpected+0x19c>
 8002544:	d8c01717 	ldw	r3,92(sp)
 8002548:	d8800317 	ldw	r2,12(sp)
 800254c:	d9801617 	ldw	r6,88(sp)
 8002550:	193ff017 	ldw	r4,-64(r3)
 8002554:	d9c01517 	ldw	r7,84(sp)
 8002558:	d8800015 	stw	r2,0(sp)
 800255c:	180b883a 	mov	r5,r3
 8002560:	00800084 	movi	r2,2
 8002564:	d8800815 	stw	r2,32(sp)
 8002568:	8001be00 	call	8001be0 <_ZL28check_compact_exception_specPKSt9type_infoPvPKhij>
 800256c:	10803fcc 	andi	r2,r2,255
 8002570:	10001e1e 	bne	r2,zero,80025ec <__cxa_call_unexpected+0x198>
 8002574:	d8800317 	ldw	r2,12(sp)
 8002578:	d9801617 	ldw	r6,88(sp)
 800257c:	d9c01517 	ldw	r7,84(sp)
 8002580:	010200b4 	movhi	r4,2050
 8002584:	d8800015 	stw	r2,0(sp)
 8002588:	21379b04 	addi	r4,r4,-8596
 800258c:	00800084 	movi	r2,2
 8002590:	000b883a 	mov	r5,zero
 8002594:	d8800815 	stw	r2,32(sp)
 8002598:	8001be00 	call	8001be0 <_ZL28check_compact_exception_specPKSt9type_infoPvPKhij>
 800259c:	10803fcc 	andi	r2,r2,255
 80025a0:	1000051e 	bne	r2,zero,80025b8 <__cxa_call_unexpected+0x164>
 80025a4:	d9001417 	ldw	r4,80(sp)
 80025a8:	800296c0 	call	800296c <_ZN10__cxxabiv111__terminateEPFvvE>
 80025ac:	10801004 	addi	r2,r2,64
 80025b0:	d8801715 	stw	r2,92(sp)
 80025b4:	003fe106 	br	800253c <__alt_data_end+0xfc00253c>
 80025b8:	01000104 	movi	r4,4
 80025bc:	80031180 	call	8003118 <__cxa_allocate_exception>
 80025c0:	00c200b4 	movhi	r3,2050
 80025c4:	18f7b604 	addi	r3,r3,-8488
 80025c8:	014200b4 	movhi	r5,2050
 80025cc:	01820034 	movhi	r6,2048
 80025d0:	10c00015 	stw	r3,0(r2)
 80025d4:	29779b04 	addi	r5,r5,-8596
 80025d8:	00c00084 	movi	r3,2
 80025dc:	318cb604 	addi	r6,r6,13016
 80025e0:	1009883a 	mov	r4,r2
 80025e4:	d8c00815 	stw	r3,32(sp)
 80025e8:	8002fa00 	call	8002fa0 <__cxa_throw>
 80025ec:	80030300 	call	8003030 <__cxa_rethrow>
 80025f0:	d9401617 	ldw	r5,88(sp)
 80025f4:	00800084 	movi	r2,2
 80025f8:	0009883a 	mov	r4,zero
 80025fc:	d9800104 	addi	r6,sp,4
 8002600:	d8800815 	stw	r2,32(sp)
 8002604:	8001e200 	call	8001e20 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>
 8002608:	d8801717 	ldw	r2,92(sp)
 800260c:	d9c01517 	ldw	r7,84(sp)
 8002610:	d9000104 	addi	r4,sp,4
 8002614:	117ff017 	ldw	r5,-64(r2)
 8002618:	100d883a 	mov	r6,r2
 800261c:	8001ab00 	call	8001ab0 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl>
 8002620:	10803fcc 	andi	r2,r2,255
 8002624:	1000171e 	bne	r2,zero,8002684 <__cxa_call_unexpected+0x230>
 8002628:	d9c01517 	ldw	r7,84(sp)
 800262c:	014200b4 	movhi	r5,2050
 8002630:	00800084 	movi	r2,2
 8002634:	29779b04 	addi	r5,r5,-8596
 8002638:	d9000104 	addi	r4,sp,4
 800263c:	000d883a 	mov	r6,zero
 8002640:	d8800815 	stw	r2,32(sp)
 8002644:	8001ab00 	call	8001ab0 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl>
 8002648:	10803fcc 	andi	r2,r2,255
 800264c:	103fd526 	beq	r2,zero,80025a4 <__alt_data_end+0xfc0025a4>
 8002650:	01000104 	movi	r4,4
 8002654:	80031180 	call	8003118 <__cxa_allocate_exception>
 8002658:	00c200b4 	movhi	r3,2050
 800265c:	18f7b604 	addi	r3,r3,-8488
 8002660:	014200b4 	movhi	r5,2050
 8002664:	01820034 	movhi	r6,2048
 8002668:	10c00015 	stw	r3,0(r2)
 800266c:	29779b04 	addi	r5,r5,-8596
 8002670:	00c00084 	movi	r3,2
 8002674:	318cb604 	addi	r6,r6,13016
 8002678:	1009883a 	mov	r4,r2
 800267c:	d8c00815 	stw	r3,32(sp)
 8002680:	8002fa00 	call	8002fa0 <__cxa_throw>
 8002684:	80030300 	call	8003030 <__cxa_rethrow>

08002688 <__cxa_get_globals_fast>:
 8002688:	008200b4 	movhi	r2,2050
 800268c:	1087db04 	addi	r2,r2,8044
 8002690:	f800283a 	ret

08002694 <__cxa_get_globals>:
 8002694:	008200b4 	movhi	r2,2050
 8002698:	1087db04 	addi	r2,r2,8044
 800269c:	f800283a 	ret

080026a0 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv>:
 80026a0:	20800017 	ldw	r2,0(r4)
 80026a4:	defffa04 	addi	sp,sp,-24
 80026a8:	dc000415 	stw	r16,16(sp)
 80026ac:	10800617 	ldw	r2,24(r2)
 80026b0:	3021883a 	mov	r16,r6
 80026b4:	31800017 	ldw	r6,0(r6)
 80026b8:	00c00404 	movi	r3,16
 80026bc:	d8c00215 	stw	r3,8(sp)
 80026c0:	dfc00515 	stw	ra,20(sp)
 80026c4:	d8000015 	stw	zero,0(sp)
 80026c8:	d8000115 	stw	zero,4(sp)
 80026cc:	d8000315 	stw	zero,12(sp)
 80026d0:	d80f883a 	mov	r7,sp
 80026d4:	103ee83a 	callr	r2
 80026d8:	d8800117 	ldw	r2,4(sp)
 80026dc:	00c00184 	movi	r3,6
 80026e0:	1080018c 	andi	r2,r2,6
 80026e4:	10c00526 	beq	r2,r3,80026fc <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv+0x5c>
 80026e8:	0005883a 	mov	r2,zero
 80026ec:	dfc00517 	ldw	ra,20(sp)
 80026f0:	dc000417 	ldw	r16,16(sp)
 80026f4:	dec00604 	addi	sp,sp,24
 80026f8:	f800283a 	ret
 80026fc:	d8c00017 	ldw	r3,0(sp)
 8002700:	00800044 	movi	r2,1
 8002704:	80c00015 	stw	r3,0(r16)
 8002708:	dfc00517 	ldw	ra,20(sp)
 800270c:	dc000417 	ldw	r16,16(sp)
 8002710:	dec00604 	addi	sp,sp,24
 8002714:	f800283a 	ret

08002718 <_ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_>:
 8002718:	d8800017 	ldw	r2,0(sp)
 800271c:	11800226 	beq	r2,r6,8002728 <_ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_+0x10>
 8002720:	00800044 	movi	r2,1
 8002724:	f800283a 	ret
 8002728:	00800184 	movi	r2,6
 800272c:	f800283a 	ret

08002730 <_ZN10__cxxabiv117__class_type_infoD1Ev>:
 8002730:	008200b4 	movhi	r2,2050
 8002734:	10b75c04 	addi	r2,r2,-8848
 8002738:	20800015 	stw	r2,0(r4)
 800273c:	80030b41 	jmpi	80030b4 <_ZNSt9type_infoD1Ev>

08002740 <_ZN10__cxxabiv117__class_type_infoD0Ev>:
 8002740:	defffe04 	addi	sp,sp,-8
 8002744:	008200b4 	movhi	r2,2050
 8002748:	dc000015 	stw	r16,0(sp)
 800274c:	dfc00115 	stw	ra,4(sp)
 8002750:	10b75c04 	addi	r2,r2,-8848
 8002754:	20800015 	stw	r2,0(r4)
 8002758:	2021883a 	mov	r16,r4
 800275c:	80030b40 	call	80030b4 <_ZNSt9type_infoD1Ev>
 8002760:	8009883a 	mov	r4,r16
 8002764:	dfc00117 	ldw	ra,4(sp)
 8002768:	dc000017 	ldw	r16,0(sp)
 800276c:	dec00204 	addi	sp,sp,8
 8002770:	80029681 	jmpi	8002968 <_ZdlPv>

08002774 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE>:
 8002774:	21000117 	ldw	r4,4(r4)
 8002778:	29400117 	ldw	r5,4(r5)
 800277c:	defffd04 	addi	sp,sp,-12
 8002780:	dc400115 	stw	r17,4(sp)
 8002784:	dc000015 	stw	r16,0(sp)
 8002788:	dfc00215 	stw	ra,8(sp)
 800278c:	3023883a 	mov	r17,r6
 8002790:	3821883a 	mov	r16,r7
 8002794:	21400b26 	beq	r4,r5,80027c4 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE+0x50>
 8002798:	20c00007 	ldb	r3,0(r4)
 800279c:	00800a84 	movi	r2,42
 80027a0:	18800226 	beq	r3,r2,80027ac <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE+0x38>
 80027a4:	80048340 	call	8004834 <strcmp>
 80027a8:	10000626 	beq	r2,zero,80027c4 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE+0x50>
 80027ac:	0005883a 	mov	r2,zero
 80027b0:	dfc00217 	ldw	ra,8(sp)
 80027b4:	dc400117 	ldw	r17,4(sp)
 80027b8:	dc000017 	ldw	r16,0(sp)
 80027bc:	dec00304 	addi	sp,sp,12
 80027c0:	f800283a 	ret
 80027c4:	00800204 	movi	r2,8
 80027c8:	80800315 	stw	r2,12(r16)
 80027cc:	00800184 	movi	r2,6
 80027d0:	80800115 	stw	r2,4(r16)
 80027d4:	84400015 	stw	r17,0(r16)
 80027d8:	00800044 	movi	r2,1
 80027dc:	003ff406 	br	80027b0 <__alt_data_end+0xfc0027b0>

080027e0 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj>:
 80027e0:	20800117 	ldw	r2,4(r4)
 80027e4:	28c00117 	ldw	r3,4(r5)
 80027e8:	10c02926 	beq	r2,r3,8002890 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0xb0>
 80027ec:	defffb04 	addi	sp,sp,-20
 80027f0:	dcc00315 	stw	r19,12(sp)
 80027f4:	dc800215 	stw	r18,8(sp)
 80027f8:	dc400115 	stw	r17,4(sp)
 80027fc:	dc000015 	stw	r16,0(sp)
 8002800:	dfc00415 	stw	ra,16(sp)
 8002804:	2821883a 	mov	r16,r5
 8002808:	11400007 	ldb	r5,0(r2)
 800280c:	2025883a 	mov	r18,r4
 8002810:	01000a84 	movi	r4,42
 8002814:	3823883a 	mov	r17,r7
 8002818:	3027883a 	mov	r19,r6
 800281c:	29000426 	beq	r5,r4,8002830 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x50>
 8002820:	1009883a 	mov	r4,r2
 8002824:	180b883a 	mov	r5,r3
 8002828:	80048340 	call	8004834 <strcmp>
 800282c:	10000a26 	beq	r2,zero,8002858 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x78>
 8002830:	008000c4 	movi	r2,3
 8002834:	14400a2e 	bgeu	r2,r17,8002860 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x80>
 8002838:	0005883a 	mov	r2,zero
 800283c:	dfc00417 	ldw	ra,16(sp)
 8002840:	dcc00317 	ldw	r19,12(sp)
 8002844:	dc800217 	ldw	r18,8(sp)
 8002848:	dc400117 	ldw	r17,4(sp)
 800284c:	dc000017 	ldw	r16,0(sp)
 8002850:	dec00504 	addi	sp,sp,20
 8002854:	f800283a 	ret
 8002858:	00800044 	movi	r2,1
 800285c:	003ff706 	br	800283c <__alt_data_end+0xfc00283c>
 8002860:	80800017 	ldw	r2,0(r16)
 8002864:	8009883a 	mov	r4,r16
 8002868:	900b883a 	mov	r5,r18
 800286c:	10800517 	ldw	r2,20(r2)
 8002870:	980d883a 	mov	r6,r19
 8002874:	dfc00417 	ldw	ra,16(sp)
 8002878:	dcc00317 	ldw	r19,12(sp)
 800287c:	dc800217 	ldw	r18,8(sp)
 8002880:	dc400117 	ldw	r17,4(sp)
 8002884:	dc000017 	ldw	r16,0(sp)
 8002888:	dec00504 	addi	sp,sp,20
 800288c:	1000683a 	jmp	r2
 8002890:	00800044 	movi	r2,1
 8002894:	f800283a 	ret

08002898 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE>:
 8002898:	defffb04 	addi	sp,sp,-20
 800289c:	dc400315 	stw	r17,12(sp)
 80028a0:	d8800717 	ldw	r2,28(sp)
 80028a4:	dc400517 	ldw	r17,20(sp)
 80028a8:	dc000215 	stw	r16,8(sp)
 80028ac:	dfc00415 	stw	ra,16(sp)
 80028b0:	24000117 	ldw	r16,4(r4)
 80028b4:	88801026 	beq	r17,r2,80028f8 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x60>
 80028b8:	39400117 	ldw	r5,4(r7)
 80028bc:	81401d26 	beq	r16,r5,8002934 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x9c>
 80028c0:	80c00007 	ldb	r3,0(r16)
 80028c4:	00800a84 	movi	r2,42
 80028c8:	18800526 	beq	r3,r2,80028e0 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x48>
 80028cc:	8009883a 	mov	r4,r16
 80028d0:	d9800115 	stw	r6,4(sp)
 80028d4:	80048340 	call	8004834 <strcmp>
 80028d8:	d9800117 	ldw	r6,4(sp)
 80028dc:	10001526 	beq	r2,zero,8002934 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x9c>
 80028e0:	0005883a 	mov	r2,zero
 80028e4:	dfc00417 	ldw	ra,16(sp)
 80028e8:	dc400317 	ldw	r17,12(sp)
 80028ec:	dc000217 	ldw	r16,8(sp)
 80028f0:	dec00504 	addi	sp,sp,20
 80028f4:	f800283a 	ret
 80028f8:	d8800617 	ldw	r2,24(sp)
 80028fc:	11400117 	ldw	r5,4(r2)
 8002900:	81401326 	beq	r16,r5,8002950 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0xb8>
 8002904:	80c00007 	ldb	r3,0(r16)
 8002908:	00800a84 	movi	r2,42
 800290c:	18801326 	beq	r3,r2,800295c <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0xc4>
 8002910:	8009883a 	mov	r4,r16
 8002914:	d9800115 	stw	r6,4(sp)
 8002918:	d9c00015 	stw	r7,0(sp)
 800291c:	80048340 	call	8004834 <strcmp>
 8002920:	d9800117 	ldw	r6,4(sp)
 8002924:	d9c00017 	ldw	r7,0(sp)
 8002928:	10000926 	beq	r2,zero,8002950 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0xb8>
 800292c:	39400117 	ldw	r5,4(r7)
 8002930:	817fe61e 	bne	r16,r5,80028cc <__alt_data_end+0xfc0028cc>
 8002934:	d8800817 	ldw	r2,32(sp)
 8002938:	d8c00817 	ldw	r3,32(sp)
 800293c:	14400015 	stw	r17,0(r2)
 8002940:	11800115 	stw	r6,4(r2)
 8002944:	00800044 	movi	r2,1
 8002948:	18800315 	stw	r2,12(r3)
 800294c:	003fe406 	br	80028e0 <__alt_data_end+0xfc0028e0>
 8002950:	d8800817 	ldw	r2,32(sp)
 8002954:	11800215 	stw	r6,8(r2)
 8002958:	003fe106 	br	80028e0 <__alt_data_end+0xfc0028e0>
 800295c:	38800117 	ldw	r2,4(r7)
 8002960:	80bfdf1e 	bne	r16,r2,80028e0 <__alt_data_end+0xfc0028e0>
 8002964:	003ff306 	br	8002934 <__alt_data_end+0xfc002934>

08002968 <_ZdlPv>:
 8002968:	80038f81 	jmpi	80038f8 <free>

0800296c <_ZN10__cxxabiv111__terminateEPFvvE>:
 800296c:	00820034 	movhi	r2,2048
 8002970:	deffef04 	addi	sp,sp,-68
 8002974:	1087d504 	addi	r2,r2,8020
 8002978:	d8800615 	stw	r2,24(sp)
 800297c:	008200b4 	movhi	r2,2050
 8002980:	10b62704 	addi	r2,r2,-10084
 8002984:	d8800715 	stw	r2,28(sp)
 8002988:	00820034 	movhi	r2,2048
 800298c:	108a7104 	addi	r2,r2,10692
 8002990:	d9000d15 	stw	r4,52(sp)
 8002994:	d809883a 	mov	r4,sp
 8002998:	d8800915 	stw	r2,36(sp)
 800299c:	dfc01015 	stw	ra,64(sp)
 80029a0:	df000f15 	stw	fp,60(sp)
 80029a4:	dec00815 	stw	sp,32(sp)
 80029a8:	dec00a15 	stw	sp,40(sp)
 80029ac:	800357c0 	call	800357c <_Unwind_SjLj_Register>
 80029b0:	00800044 	movi	r2,1
 80029b4:	d8800115 	stw	r2,4(sp)
 80029b8:	d8800d17 	ldw	r2,52(sp)
 80029bc:	103ee83a 	callr	r2
 80029c0:	80038940 	call	8003894 <abort>
 80029c4:	d8c00217 	ldw	r3,8(sp)
 80029c8:	d8800117 	ldw	r2,4(sp)
 80029cc:	d8c00d15 	stw	r3,52(sp)
 80029d0:	d8c00317 	ldw	r3,12(sp)
 80029d4:	d8c00e15 	stw	r3,56(sp)
 80029d8:	10000b26 	beq	r2,zero,8002a08 <_ZN10__cxxabiv111__terminateEPFvvE+0x9c>
 80029dc:	10bfffc4 	addi	r2,r2,-1
 80029e0:	10000126 	beq	r2,zero,80029e8 <_ZN10__cxxabiv111__terminateEPFvvE+0x7c>
 80029e4:	003da0fa 	break	3
 80029e8:	d8000115 	stw	zero,4(sp)
 80029ec:	8002e340 	call	8002e34 <__cxa_end_catch>
 80029f0:	d8c00e17 	ldw	r3,56(sp)
 80029f4:	00bfffc4 	movi	r2,-1
 80029f8:	18800826 	beq	r3,r2,8002a1c <_ZN10__cxxabiv111__terminateEPFvvE+0xb0>
 80029fc:	d9000d17 	ldw	r4,52(sp)
 8002a00:	d8800115 	stw	r2,4(sp)
 8002a04:	80037780 	call	8003778 <_Unwind_SjLj_Resume>
 8002a08:	d9000d17 	ldw	r4,52(sp)
 8002a0c:	8002d800 	call	8002d80 <__cxa_begin_catch>
 8002a10:	00800084 	movi	r2,2
 8002a14:	d8800115 	stw	r2,4(sp)
 8002a18:	80038940 	call	8003894 <abort>
 8002a1c:	d8800e17 	ldw	r2,56(sp)
 8002a20:	d9000d17 	ldw	r4,52(sp)
 8002a24:	d8800115 	stw	r2,4(sp)
 8002a28:	80024540 	call	8002454 <__cxa_call_unexpected>

08002a2c <_ZSt9terminatev>:
 8002a2c:	008200b4 	movhi	r2,2050
 8002a30:	10808504 	addi	r2,r2,532
 8002a34:	11000017 	ldw	r4,0(r2)
 8002a38:	deffff04 	addi	sp,sp,-4
 8002a3c:	dfc00015 	stw	ra,0(sp)
 8002a40:	800296c0 	call	800296c <_ZN10__cxxabiv111__terminateEPFvvE>

08002a44 <_ZN10__cxxabiv112__unexpectedEPFvvE>:
 8002a44:	deffff04 	addi	sp,sp,-4
 8002a48:	dfc00015 	stw	ra,0(sp)
 8002a4c:	203ee83a 	callr	r4
 8002a50:	8002a2c0 	call	8002a2c <_ZSt9terminatev>

08002a54 <_ZSt10unexpectedv>:
 8002a54:	008200b4 	movhi	r2,2050
 8002a58:	10808e04 	addi	r2,r2,568
 8002a5c:	11000017 	ldw	r4,0(r2)
 8002a60:	deffff04 	addi	sp,sp,-4
 8002a64:	dfc00015 	stw	ra,0(sp)
 8002a68:	8002a440 	call	8002a44 <_ZN10__cxxabiv112__unexpectedEPFvvE>

08002a6c <_ZSt13set_terminatePFvvE>:
 8002a6c:	00c200b4 	movhi	r3,2050
 8002a70:	18c08504 	addi	r3,r3,532
 8002a74:	18800017 	ldw	r2,0(r3)
 8002a78:	19000015 	stw	r4,0(r3)
 8002a7c:	f800283a 	ret

08002a80 <_ZSt13get_terminatev>:
 8002a80:	008200b4 	movhi	r2,2050
 8002a84:	10808504 	addi	r2,r2,532
 8002a88:	10800017 	ldw	r2,0(r2)
 8002a8c:	f800283a 	ret

08002a90 <_ZSt14set_unexpectedPFvvE>:
 8002a90:	00c200b4 	movhi	r3,2050
 8002a94:	18c08e04 	addi	r3,r3,568
 8002a98:	18800017 	ldw	r2,0(r3)
 8002a9c:	19000015 	stw	r4,0(r3)
 8002aa0:	f800283a 	ret

08002aa4 <_ZSt14get_unexpectedv>:
 8002aa4:	008200b4 	movhi	r2,2050
 8002aa8:	10808e04 	addi	r2,r2,568
 8002aac:	10800017 	ldw	r2,0(r2)
 8002ab0:	f800283a 	ret

08002ab4 <_ZN10__cxxabiv120__si_class_type_infoD1Ev>:
 8002ab4:	008200b4 	movhi	r2,2050
 8002ab8:	10b77404 	addi	r2,r2,-8752
 8002abc:	20800015 	stw	r2,0(r4)
 8002ac0:	80027301 	jmpi	8002730 <_ZN10__cxxabiv117__class_type_infoD1Ev>

08002ac4 <_ZN10__cxxabiv120__si_class_type_infoD0Ev>:
 8002ac4:	defffe04 	addi	sp,sp,-8
 8002ac8:	008200b4 	movhi	r2,2050
 8002acc:	dc000015 	stw	r16,0(sp)
 8002ad0:	dfc00115 	stw	ra,4(sp)
 8002ad4:	10b77404 	addi	r2,r2,-8752
 8002ad8:	20800015 	stw	r2,0(r4)
 8002adc:	2021883a 	mov	r16,r4
 8002ae0:	80027300 	call	8002730 <_ZN10__cxxabiv117__class_type_infoD1Ev>
 8002ae4:	8009883a 	mov	r4,r16
 8002ae8:	dfc00117 	ldw	ra,4(sp)
 8002aec:	dc000017 	ldw	r16,0(sp)
 8002af0:	dec00204 	addi	sp,sp,8
 8002af4:	80029681 	jmpi	8002968 <_ZdlPv>

08002af8 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE>:
 8002af8:	defff504 	addi	sp,sp,-44
 8002afc:	dc000115 	stw	r16,4(sp)
 8002b00:	38800117 	ldw	r2,4(r7)
 8002b04:	24000117 	ldw	r16,4(r4)
 8002b08:	ddc00815 	stw	r23,32(sp)
 8002b0c:	dd800715 	stw	r22,28(sp)
 8002b10:	dd400615 	stw	r21,24(sp)
 8002b14:	dd000515 	stw	r20,20(sp)
 8002b18:	dcc00415 	stw	r19,16(sp)
 8002b1c:	dc800315 	stw	r18,12(sp)
 8002b20:	dc400215 	stw	r17,8(sp)
 8002b24:	dfc00a15 	stw	ra,40(sp)
 8002b28:	df000915 	stw	fp,36(sp)
 8002b2c:	202b883a 	mov	r21,r4
 8002b30:	382d883a 	mov	r22,r7
 8002b34:	2823883a 	mov	r17,r5
 8002b38:	dc800b17 	ldw	r18,44(sp)
 8002b3c:	ddc00c17 	ldw	r23,48(sp)
 8002b40:	dd000d17 	ldw	r20,52(sp)
 8002b44:	dcc00e17 	ldw	r19,56(sp)
 8002b48:	80801f26 	beq	r16,r2,8002bc8 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xd0>
 8002b4c:	87000007 	ldb	fp,0(r16)
 8002b50:	00c00a84 	movi	r3,42
 8002b54:	e0c00626 	beq	fp,r3,8002b70 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x78>
 8002b58:	8009883a 	mov	r4,r16
 8002b5c:	100b883a 	mov	r5,r2
 8002b60:	d9800015 	stw	r6,0(sp)
 8002b64:	80048340 	call	8004834 <strcmp>
 8002b68:	d9800017 	ldw	r6,0(sp)
 8002b6c:	10001626 	beq	r2,zero,8002bc8 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xd0>
 8002b70:	95002c26 	beq	r18,r20,8002c24 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x12c>
 8002b74:	a9000217 	ldw	r4,8(r21)
 8002b78:	880b883a 	mov	r5,r17
 8002b7c:	b00f883a 	mov	r7,r22
 8002b80:	20800017 	ldw	r2,0(r4)
 8002b84:	dc800b15 	stw	r18,44(sp)
 8002b88:	ddc00c15 	stw	r23,48(sp)
 8002b8c:	dd000d15 	stw	r20,52(sp)
 8002b90:	dcc00e15 	stw	r19,56(sp)
 8002b94:	10800717 	ldw	r2,28(r2)
 8002b98:	dfc00a17 	ldw	ra,40(sp)
 8002b9c:	df000917 	ldw	fp,36(sp)
 8002ba0:	ddc00817 	ldw	r23,32(sp)
 8002ba4:	dd800717 	ldw	r22,28(sp)
 8002ba8:	dd400617 	ldw	r21,24(sp)
 8002bac:	dd000517 	ldw	r20,20(sp)
 8002bb0:	dcc00417 	ldw	r19,16(sp)
 8002bb4:	dc800317 	ldw	r18,12(sp)
 8002bb8:	dc400217 	ldw	r17,8(sp)
 8002bbc:	dc000117 	ldw	r16,4(sp)
 8002bc0:	dec00b04 	addi	sp,sp,44
 8002bc4:	1000683a 	jmp	r2
 8002bc8:	9c800015 	stw	r18,0(r19)
 8002bcc:	99800115 	stw	r6,4(r19)
 8002bd0:	88001116 	blt	r17,zero,8002c18 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x120>
 8002bd4:	9463883a 	add	r17,r18,r17
 8002bd8:	a4401d26 	beq	r20,r17,8002c50 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x158>
 8002bdc:	00800044 	movi	r2,1
 8002be0:	98800315 	stw	r2,12(r19)
 8002be4:	0005883a 	mov	r2,zero
 8002be8:	dfc00a17 	ldw	ra,40(sp)
 8002bec:	df000917 	ldw	fp,36(sp)
 8002bf0:	ddc00817 	ldw	r23,32(sp)
 8002bf4:	dd800717 	ldw	r22,28(sp)
 8002bf8:	dd400617 	ldw	r21,24(sp)
 8002bfc:	dd000517 	ldw	r20,20(sp)
 8002c00:	dcc00417 	ldw	r19,16(sp)
 8002c04:	dc800317 	ldw	r18,12(sp)
 8002c08:	dc400217 	ldw	r17,8(sp)
 8002c0c:	dc000117 	ldw	r16,4(sp)
 8002c10:	dec00b04 	addi	sp,sp,44
 8002c14:	f800283a 	ret
 8002c18:	00bfff84 	movi	r2,-2
 8002c1c:	88bff11e 	bne	r17,r2,8002be4 <__alt_data_end+0xfc002be4>
 8002c20:	003fee06 	br	8002bdc <__alt_data_end+0xfc002bdc>
 8002c24:	b9400117 	ldw	r5,4(r23)
 8002c28:	81400726 	beq	r16,r5,8002c48 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x150>
 8002c2c:	00800a84 	movi	r2,42
 8002c30:	e0bfd026 	beq	fp,r2,8002b74 <__alt_data_end+0xfc002b74>
 8002c34:	8009883a 	mov	r4,r16
 8002c38:	d9800015 	stw	r6,0(sp)
 8002c3c:	80048340 	call	8004834 <strcmp>
 8002c40:	d9800017 	ldw	r6,0(sp)
 8002c44:	103fcb1e 	bne	r2,zero,8002b74 <__alt_data_end+0xfc002b74>
 8002c48:	99800215 	stw	r6,8(r19)
 8002c4c:	003fe506 	br	8002be4 <__alt_data_end+0xfc002be4>
 8002c50:	00800184 	movi	r2,6
 8002c54:	003fe206 	br	8002be0 <__alt_data_end+0xfc002be0>

08002c58 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_>:
 8002c58:	defffa04 	addi	sp,sp,-24
 8002c5c:	dc000215 	stw	r16,8(sp)
 8002c60:	dc000617 	ldw	r16,24(sp)
 8002c64:	dc800415 	stw	r18,16(sp)
 8002c68:	dc400315 	stw	r17,12(sp)
 8002c6c:	dfc00515 	stw	ra,20(sp)
 8002c70:	2023883a 	mov	r17,r4
 8002c74:	2825883a 	mov	r18,r5
 8002c78:	81800b26 	beq	r16,r6,8002ca8 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x50>
 8002c7c:	89000217 	ldw	r4,8(r17)
 8002c80:	900b883a 	mov	r5,r18
 8002c84:	20800017 	ldw	r2,0(r4)
 8002c88:	dc000615 	stw	r16,24(sp)
 8002c8c:	10800817 	ldw	r2,32(r2)
 8002c90:	dfc00517 	ldw	ra,20(sp)
 8002c94:	dc800417 	ldw	r18,16(sp)
 8002c98:	dc400317 	ldw	r17,12(sp)
 8002c9c:	dc000217 	ldw	r16,8(sp)
 8002ca0:	dec00604 	addi	sp,sp,24
 8002ca4:	1000683a 	jmp	r2
 8002ca8:	21000117 	ldw	r4,4(r4)
 8002cac:	39400117 	ldw	r5,4(r7)
 8002cb0:	21400926 	beq	r4,r5,8002cd8 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x80>
 8002cb4:	20c00007 	ldb	r3,0(r4)
 8002cb8:	00800a84 	movi	r2,42
 8002cbc:	18bfef26 	beq	r3,r2,8002c7c <__alt_data_end+0xfc002c7c>
 8002cc0:	d9800015 	stw	r6,0(sp)
 8002cc4:	d9c00115 	stw	r7,4(sp)
 8002cc8:	80048340 	call	8004834 <strcmp>
 8002ccc:	d9800017 	ldw	r6,0(sp)
 8002cd0:	d9c00117 	ldw	r7,4(sp)
 8002cd4:	103fe91e 	bne	r2,zero,8002c7c <__alt_data_end+0xfc002c7c>
 8002cd8:	00800184 	movi	r2,6
 8002cdc:	dfc00517 	ldw	ra,20(sp)
 8002ce0:	dc800417 	ldw	r18,16(sp)
 8002ce4:	dc400317 	ldw	r17,12(sp)
 8002ce8:	dc000217 	ldw	r16,8(sp)
 8002cec:	dec00604 	addi	sp,sp,24
 8002cf0:	f800283a 	ret

08002cf4 <_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE>:
 8002cf4:	defffb04 	addi	sp,sp,-20
 8002cf8:	dcc00315 	stw	r19,12(sp)
 8002cfc:	dc800215 	stw	r18,8(sp)
 8002d00:	dc400115 	stw	r17,4(sp)
 8002d04:	dc000015 	stw	r16,0(sp)
 8002d08:	dfc00415 	stw	ra,16(sp)
 8002d0c:	2027883a 	mov	r19,r4
 8002d10:	2825883a 	mov	r18,r5
 8002d14:	3023883a 	mov	r17,r6
 8002d18:	3821883a 	mov	r16,r7
 8002d1c:	80027740 	call	8002774 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE>
 8002d20:	10c03fcc 	andi	r3,r2,255
 8002d24:	18000726 	beq	r3,zero,8002d44 <_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x50>
 8002d28:	dfc00417 	ldw	ra,16(sp)
 8002d2c:	dcc00317 	ldw	r19,12(sp)
 8002d30:	dc800217 	ldw	r18,8(sp)
 8002d34:	dc400117 	ldw	r17,4(sp)
 8002d38:	dc000017 	ldw	r16,0(sp)
 8002d3c:	dec00504 	addi	sp,sp,20
 8002d40:	f800283a 	ret
 8002d44:	99000217 	ldw	r4,8(r19)
 8002d48:	900b883a 	mov	r5,r18
 8002d4c:	880d883a 	mov	r6,r17
 8002d50:	20800017 	ldw	r2,0(r4)
 8002d54:	800f883a 	mov	r7,r16
 8002d58:	10800617 	ldw	r2,24(r2)
 8002d5c:	dfc00417 	ldw	ra,16(sp)
 8002d60:	dcc00317 	ldw	r19,12(sp)
 8002d64:	dc800217 	ldw	r18,8(sp)
 8002d68:	dc400117 	ldw	r17,4(sp)
 8002d6c:	dc000017 	ldw	r16,0(sp)
 8002d70:	dec00504 	addi	sp,sp,20
 8002d74:	1000683a 	jmp	r2

08002d78 <__cxa_get_exception_ptr>:
 8002d78:	20bfff17 	ldw	r2,-4(r4)
 8002d7c:	f800283a 	ret

08002d80 <__cxa_begin_catch>:
 8002d80:	defffe04 	addi	sp,sp,-8
 8002d84:	dc000015 	stw	r16,0(sp)
 8002d88:	dfc00115 	stw	ra,4(sp)
 8002d8c:	2021883a 	mov	r16,r4
 8002d90:	80026940 	call	8002694 <__cxa_get_globals>
 8002d94:	81000017 	ldw	r4,0(r16)
 8002d98:	80c00117 	ldw	r3,4(r16)
 8002d9c:	01af3574 	movhi	r6,48341
 8002da0:	31b54004 	addi	r6,r6,-11008
 8002da4:	016e2cb4 	movhi	r5,47282
 8002da8:	296aaf04 	addi	r5,r5,-21828
 8002dac:	218d883a 	add	r6,r4,r6
 8002db0:	3109803a 	cmpltu	r4,r6,r4
 8002db4:	1947883a 	add	r3,r3,r5
 8002db8:	20c7883a 	add	r3,r4,r3
 8002dbc:	817ff504 	addi	r5,r16,-44
 8002dc0:	11000017 	ldw	r4,0(r2)
 8002dc4:	18000726 	beq	r3,zero,8002de4 <__cxa_begin_catch+0x64>
 8002dc8:	2000191e 	bne	r4,zero,8002e30 <__cxa_begin_catch+0xb0>
 8002dcc:	11400015 	stw	r5,0(r2)
 8002dd0:	0005883a 	mov	r2,zero
 8002dd4:	dfc00117 	ldw	ra,4(sp)
 8002dd8:	dc000017 	ldw	r16,0(sp)
 8002ddc:	dec00204 	addi	sp,sp,8
 8002de0:	f800283a 	ret
 8002de4:	01c00044 	movi	r7,1
 8002de8:	39bff736 	bltu	r7,r6,8002dc8 <__alt_data_end+0xfc002dc8>
 8002dec:	80fffa17 	ldw	r3,-24(r16)
 8002df0:	18000d16 	blt	r3,zero,8002e28 <__cxa_begin_catch+0xa8>
 8002df4:	18c00044 	addi	r3,r3,1
 8002df8:	11800117 	ldw	r6,4(r2)
 8002dfc:	80fffa15 	stw	r3,-24(r16)
 8002e00:	30ffffc4 	addi	r3,r6,-1
 8002e04:	10c00115 	stw	r3,4(r2)
 8002e08:	21400226 	beq	r4,r5,8002e14 <__cxa_begin_catch+0x94>
 8002e0c:	813ff915 	stw	r4,-28(r16)
 8002e10:	11400015 	stw	r5,0(r2)
 8002e14:	80bfff17 	ldw	r2,-4(r16)
 8002e18:	dfc00117 	ldw	ra,4(sp)
 8002e1c:	dc000017 	ldw	r16,0(sp)
 8002e20:	dec00204 	addi	sp,sp,8
 8002e24:	f800283a 	ret
 8002e28:	38c7c83a 	sub	r3,r7,r3
 8002e2c:	003ff206 	br	8002df8 <__alt_data_end+0xfc002df8>
 8002e30:	8002a2c0 	call	8002a2c <_ZSt9terminatev>

08002e34 <__cxa_end_catch>:
 8002e34:	deffff04 	addi	sp,sp,-4
 8002e38:	dfc00015 	stw	ra,0(sp)
 8002e3c:	80026880 	call	8002688 <__cxa_get_globals_fast>
 8002e40:	11000017 	ldw	r4,0(r2)
 8002e44:	20001326 	beq	r4,zero,8002e94 <__cxa_end_catch+0x60>
 8002e48:	21400b17 	ldw	r5,44(r4)
 8002e4c:	01ef3574 	movhi	r7,48341
 8002e50:	39f54004 	addi	r7,r7,-11008
 8002e54:	29cf883a 	add	r7,r5,r7
 8002e58:	20c00c17 	ldw	r3,48(r4)
 8002e5c:	394d803a 	cmpltu	r6,r7,r5
 8002e60:	016e2cb4 	movhi	r5,47282
 8002e64:	296aaf04 	addi	r5,r5,-21828
 8002e68:	1947883a 	add	r3,r3,r5
 8002e6c:	30c7883a 	add	r3,r6,r3
 8002e70:	18000b1e 	bne	r3,zero,8002ea0 <__cxa_end_catch+0x6c>
 8002e74:	00c00044 	movi	r3,1
 8002e78:	19c00936 	bltu	r3,r7,8002ea0 <__cxa_end_catch+0x6c>
 8002e7c:	20c00517 	ldw	r3,20(r4)
 8002e80:	18000c16 	blt	r3,zero,8002eb4 <__cxa_end_catch+0x80>
 8002e84:	197fffc4 	addi	r5,r3,-1
 8002e88:	28000f26 	beq	r5,zero,8002ec8 <__cxa_end_catch+0x94>
 8002e8c:	18001426 	beq	r3,zero,8002ee0 <__cxa_end_catch+0xac>
 8002e90:	21400515 	stw	r5,20(r4)
 8002e94:	dfc00017 	ldw	ra,0(sp)
 8002e98:	dec00104 	addi	sp,sp,4
 8002e9c:	f800283a 	ret
 8002ea0:	21000b04 	addi	r4,r4,44
 8002ea4:	10000015 	stw	zero,0(r2)
 8002ea8:	dfc00017 	ldw	ra,0(sp)
 8002eac:	dec00104 	addi	sp,sp,4
 8002eb0:	80038081 	jmpi	8003808 <_Unwind_DeleteException>
 8002eb4:	19400044 	addi	r5,r3,1
 8002eb8:	283ff51e 	bne	r5,zero,8002e90 <__alt_data_end+0xfc002e90>
 8002ebc:	20c00417 	ldw	r3,16(r4)
 8002ec0:	10c00015 	stw	r3,0(r2)
 8002ec4:	003ff206 	br	8002e90 <__alt_data_end+0xfc002e90>
 8002ec8:	20c00417 	ldw	r3,16(r4)
 8002ecc:	21000b04 	addi	r4,r4,44
 8002ed0:	10c00015 	stw	r3,0(r2)
 8002ed4:	dfc00017 	ldw	ra,0(sp)
 8002ed8:	dec00104 	addi	sp,sp,4
 8002edc:	80038081 	jmpi	8003808 <_Unwind_DeleteException>
 8002ee0:	8002a2c0 	call	8002a2c <_ZSt9terminatev>

08002ee4 <_ZSt18uncaught_exceptionv>:
 8002ee4:	deffff04 	addi	sp,sp,-4
 8002ee8:	dfc00015 	stw	ra,0(sp)
 8002eec:	80026940 	call	8002694 <__cxa_get_globals>
 8002ef0:	10800117 	ldw	r2,4(r2)
 8002ef4:	1004c03a 	cmpne	r2,r2,zero
 8002ef8:	dfc00017 	ldw	ra,0(sp)
 8002efc:	dec00104 	addi	sp,sp,4
 8002f00:	f800283a 	ret

08002f04 <__cxa_call_terminate>:
 8002f04:	defffe04 	addi	sp,sp,-8
 8002f08:	dc000015 	stw	r16,0(sp)
 8002f0c:	dfc00115 	stw	ra,4(sp)
 8002f10:	2021883a 	mov	r16,r4
 8002f14:	20000c26 	beq	r4,zero,8002f48 <__cxa_call_terminate+0x44>
 8002f18:	8002d800 	call	8002d80 <__cxa_begin_catch>
 8002f1c:	80c00017 	ldw	r3,0(r16)
 8002f20:	012f3574 	movhi	r4,48341
 8002f24:	21354004 	addi	r4,r4,-11008
 8002f28:	1909883a 	add	r4,r3,r4
 8002f2c:	80800117 	ldw	r2,4(r16)
 8002f30:	20cb803a 	cmpltu	r5,r4,r3
 8002f34:	00ee2cb4 	movhi	r3,47282
 8002f38:	18eaaf04 	addi	r3,r3,-21828
 8002f3c:	10c5883a 	add	r2,r2,r3
 8002f40:	2885883a 	add	r2,r5,r2
 8002f44:	10000126 	beq	r2,zero,8002f4c <__cxa_call_terminate+0x48>
 8002f48:	8002a2c0 	call	8002a2c <_ZSt9terminatev>
 8002f4c:	00800044 	movi	r2,1
 8002f50:	113ffd36 	bltu	r2,r4,8002f48 <__alt_data_end+0xfc002f48>
 8002f54:	813ff817 	ldw	r4,-32(r16)
 8002f58:	800296c0 	call	800296c <_ZN10__cxxabiv111__terminateEPFvvE>

08002f5c <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception>:
 8002f5c:	defffe04 	addi	sp,sp,-8
 8002f60:	dfc00115 	stw	ra,4(sp)
 8002f64:	dc000015 	stw	r16,0(sp)
 8002f68:	00800044 	movi	r2,1
 8002f6c:	11000a36 	bltu	r2,r4,8002f98 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception+0x3c>
 8002f70:	28bff617 	ldw	r2,-40(r5)
 8002f74:	2c000504 	addi	r16,r5,20
 8002f78:	10000226 	beq	r2,zero,8002f84 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception+0x28>
 8002f7c:	8009883a 	mov	r4,r16
 8002f80:	103ee83a 	callr	r2
 8002f84:	8009883a 	mov	r4,r16
 8002f88:	dfc00117 	ldw	ra,4(sp)
 8002f8c:	dc000017 	ldw	r16,0(sp)
 8002f90:	dec00204 	addi	sp,sp,8
 8002f94:	80031bc1 	jmpi	80031bc <__cxa_free_exception>
 8002f98:	293ff817 	ldw	r4,-32(r5)
 8002f9c:	800296c0 	call	800296c <_ZN10__cxxabiv111__terminateEPFvvE>

08002fa0 <__cxa_throw>:
 8002fa0:	defffb04 	addi	sp,sp,-20
 8002fa4:	dfc00415 	stw	ra,16(sp)
 8002fa8:	dcc00315 	stw	r19,12(sp)
 8002fac:	dc800215 	stw	r18,8(sp)
 8002fb0:	2827883a 	mov	r19,r5
 8002fb4:	3025883a 	mov	r18,r6
 8002fb8:	dc400115 	stw	r17,4(sp)
 8002fbc:	dc000015 	stw	r16,0(sp)
 8002fc0:	2021883a 	mov	r16,r4
 8002fc4:	80026940 	call	8002694 <__cxa_get_globals>
 8002fc8:	10c00117 	ldw	r3,4(r2)
 8002fcc:	847ffb04 	addi	r17,r16,-20
 8002fd0:	18c00044 	addi	r3,r3,1
 8002fd4:	10c00115 	stw	r3,4(r2)
 8002fd8:	00800044 	movi	r2,1
 8002fdc:	80bfef15 	stw	r2,-68(r16)
 8002fe0:	84fff015 	stw	r19,-64(r16)
 8002fe4:	84bff115 	stw	r18,-60(r16)
 8002fe8:	8002aa40 	call	8002aa4 <_ZSt14get_unexpectedv>
 8002fec:	80bff215 	stw	r2,-56(r16)
 8002ff0:	8002a800 	call	8002a80 <_ZSt13get_terminatev>
 8002ff4:	80bff315 	stw	r2,-52(r16)
 8002ff8:	0090caf4 	movhi	r2,17195
 8002ffc:	108ac004 	addi	r2,r2,11008
 8003000:	80bffb15 	stw	r2,-20(r16)
 8003004:	0091d3b4 	movhi	r2,18254
 8003008:	109550c4 	addi	r2,r2,21827
 800300c:	80bffc15 	stw	r2,-16(r16)
 8003010:	00820034 	movhi	r2,2048
 8003014:	108bd704 	addi	r2,r2,12124
 8003018:	8809883a 	mov	r4,r17
 800301c:	80bffd15 	stw	r2,-12(r16)
 8003020:	80036640 	call	8003664 <_Unwind_SjLj_RaiseException>
 8003024:	8809883a 	mov	r4,r17
 8003028:	8002d800 	call	8002d80 <__cxa_begin_catch>
 800302c:	8002a2c0 	call	8002a2c <_ZSt9terminatev>

08003030 <__cxa_rethrow>:
 8003030:	defffe04 	addi	sp,sp,-8
 8003034:	dfc00115 	stw	ra,4(sp)
 8003038:	dc000015 	stw	r16,0(sp)
 800303c:	80026940 	call	8002694 <__cxa_get_globals>
 8003040:	10c00117 	ldw	r3,4(r2)
 8003044:	11000017 	ldw	r4,0(r2)
 8003048:	18c00044 	addi	r3,r3,1
 800304c:	10c00115 	stw	r3,4(r2)
 8003050:	20001126 	beq	r4,zero,8003098 <__cxa_rethrow+0x68>
 8003054:	21400b17 	ldw	r5,44(r4)
 8003058:	01ef3574 	movhi	r7,48341
 800305c:	39f54004 	addi	r7,r7,-11008
 8003060:	29cf883a 	add	r7,r5,r7
 8003064:	20c00c17 	ldw	r3,48(r4)
 8003068:	394d803a 	cmpltu	r6,r7,r5
 800306c:	016e2cb4 	movhi	r5,47282
 8003070:	296aaf04 	addi	r5,r5,-21828
 8003074:	1947883a 	add	r3,r3,r5
 8003078:	30c7883a 	add	r3,r6,r3
 800307c:	18000726 	beq	r3,zero,800309c <__cxa_rethrow+0x6c>
 8003080:	10000015 	stw	zero,0(r2)
 8003084:	24000b04 	addi	r16,r4,44
 8003088:	8009883a 	mov	r4,r16
 800308c:	80037bc0 	call	80037bc <_Unwind_SjLj_Resume_or_Rethrow>
 8003090:	8009883a 	mov	r4,r16
 8003094:	8002d800 	call	8002d80 <__cxa_begin_catch>
 8003098:	8002a2c0 	call	8002a2c <_ZSt9terminatev>
 800309c:	00c00044 	movi	r3,1
 80030a0:	19fff736 	bltu	r3,r7,8003080 <__alt_data_end+0xfc003080>
 80030a4:	20800517 	ldw	r2,20(r4)
 80030a8:	0085c83a 	sub	r2,zero,r2
 80030ac:	20800515 	stw	r2,20(r4)
 80030b0:	003ff406 	br	8003084 <__alt_data_end+0xfc003084>

080030b4 <_ZNSt9type_infoD1Ev>:
 80030b4:	f800283a 	ret

080030b8 <_ZNKSt9type_info14__is_pointer_pEv>:
 80030b8:	0005883a 	mov	r2,zero
 80030bc:	f800283a 	ret

080030c0 <_ZNKSt9type_info15__is_function_pEv>:
 80030c0:	0005883a 	mov	r2,zero
 80030c4:	f800283a 	ret

080030c8 <_ZNKSt9type_info11__do_upcastEPKN10__cxxabiv117__class_type_infoEPPv>:
 80030c8:	0005883a 	mov	r2,zero
 80030cc:	f800283a 	ret

080030d0 <_ZNSt9type_infoD0Ev>:
 80030d0:	80029681 	jmpi	8002968 <_ZdlPv>

080030d4 <_ZNKSt9type_info10__do_catchEPKS_PPvj>:
 80030d4:	21000117 	ldw	r4,4(r4)
 80030d8:	29400117 	ldw	r5,4(r5)
 80030dc:	21400c26 	beq	r4,r5,8003110 <_ZNKSt9type_info10__do_catchEPKS_PPvj+0x3c>
 80030e0:	20c00007 	ldb	r3,0(r4)
 80030e4:	00800a84 	movi	r2,42
 80030e8:	18800726 	beq	r3,r2,8003108 <_ZNKSt9type_info10__do_catchEPKS_PPvj+0x34>
 80030ec:	deffff04 	addi	sp,sp,-4
 80030f0:	dfc00015 	stw	ra,0(sp)
 80030f4:	80048340 	call	8004834 <strcmp>
 80030f8:	1005003a 	cmpeq	r2,r2,zero
 80030fc:	dfc00017 	ldw	ra,0(sp)
 8003100:	dec00104 	addi	sp,sp,4
 8003104:	f800283a 	ret
 8003108:	0005883a 	mov	r2,zero
 800310c:	f800283a 	ret
 8003110:	00800044 	movi	r2,1
 8003114:	f800283a 	ret

08003118 <__cxa_allocate_exception>:
 8003118:	defffd04 	addi	sp,sp,-12
 800311c:	dc400115 	stw	r17,4(sp)
 8003120:	24401104 	addi	r17,r4,68
 8003124:	8809883a 	mov	r4,r17
 8003128:	dc000015 	stw	r16,0(sp)
 800312c:	dfc00215 	stw	ra,8(sp)
 8003130:	80038e40 	call	80038e4 <malloc>
 8003134:	1021883a 	mov	r16,r2
 8003138:	10000a26 	beq	r2,zero,8003164 <__cxa_allocate_exception+0x4c>
 800313c:	8009883a 	mov	r4,r16
 8003140:	000b883a 	mov	r5,zero
 8003144:	01801104 	movi	r6,68
 8003148:	80040b40 	call	80040b4 <memset>
 800314c:	80801104 	addi	r2,r16,68
 8003150:	dfc00217 	ldw	ra,8(sp)
 8003154:	dc400117 	ldw	r17,4(sp)
 8003158:	dc000017 	ldw	r16,0(sp)
 800315c:	dec00304 	addi	sp,sp,12
 8003160:	f800283a 	ret
 8003164:	014200b4 	movhi	r5,2050
 8003168:	2947de04 	addi	r5,r5,8056
 800316c:	00808004 	movi	r2,512
 8003170:	29800017 	ldw	r6,0(r5)
 8003174:	14400736 	bltu	r2,r17,8003194 <__cxa_allocate_exception+0x7c>
 8003178:	3005883a 	mov	r2,r6
 800317c:	01000104 	movi	r4,4
 8003180:	10c0004c 	andi	r3,r2,1
 8003184:	18000426 	beq	r3,zero,8003198 <__cxa_allocate_exception+0x80>
 8003188:	84000044 	addi	r16,r16,1
 800318c:	1004d07a 	srli	r2,r2,1
 8003190:	813ffb1e 	bne	r16,r4,8003180 <__alt_data_end+0xfc003180>
 8003194:	8002a2c0 	call	8002a2c <_ZSt9terminatev>
 8003198:	00800044 	movi	r2,1
 800319c:	1404983a 	sll	r2,r2,r16
 80031a0:	8020927a 	slli	r16,r16,9
 80031a4:	118cb03a 	or	r6,r2,r6
 80031a8:	008200b4 	movhi	r2,2050
 80031ac:	10883104 	addi	r2,r2,8388
 80031b0:	29800015 	stw	r6,0(r5)
 80031b4:	80a1883a 	add	r16,r16,r2
 80031b8:	003fe006 	br	800313c <__alt_data_end+0xfc00313c>

080031bc <__cxa_free_exception>:
 80031bc:	008200b4 	movhi	r2,2050
 80031c0:	10883104 	addi	r2,r2,8388
 80031c4:	20800236 	bltu	r4,r2,80031d0 <__cxa_free_exception+0x14>
 80031c8:	10c20004 	addi	r3,r2,2048
 80031cc:	20c00236 	bltu	r4,r3,80031d8 <__cxa_free_exception+0x1c>
 80031d0:	213fef04 	addi	r4,r4,-68
 80031d4:	80038f81 	jmpi	80038f8 <free>
 80031d8:	2089c83a 	sub	r4,r4,r2
 80031dc:	2008d27a 	srli	r4,r4,9
 80031e0:	014200b4 	movhi	r5,2050
 80031e4:	2947de04 	addi	r5,r5,8056
 80031e8:	00ffff84 	movi	r3,-2
 80031ec:	28800017 	ldw	r2,0(r5)
 80031f0:	1908183a 	rol	r4,r3,r4
 80031f4:	2088703a 	and	r4,r4,r2
 80031f8:	29000015 	stw	r4,0(r5)
 80031fc:	f800283a 	ret

08003200 <__cxa_allocate_dependent_exception>:
 8003200:	defffe04 	addi	sp,sp,-8
 8003204:	01001004 	movi	r4,64
 8003208:	dc000015 	stw	r16,0(sp)
 800320c:	dfc00115 	stw	ra,4(sp)
 8003210:	80038e40 	call	80038e4 <malloc>
 8003214:	1021883a 	mov	r16,r2
 8003218:	10000926 	beq	r2,zero,8003240 <__cxa_allocate_dependent_exception+0x40>
 800321c:	8009883a 	mov	r4,r16
 8003220:	000b883a 	mov	r5,zero
 8003224:	01801004 	movi	r6,64
 8003228:	80040b40 	call	80040b4 <memset>
 800322c:	8005883a 	mov	r2,r16
 8003230:	dfc00117 	ldw	ra,4(sp)
 8003234:	dc000017 	ldw	r16,0(sp)
 8003238:	dec00204 	addi	sp,sp,8
 800323c:	f800283a 	ret
 8003240:	01c200b4 	movhi	r7,2050
 8003244:	39c7dd04 	addi	r7,r7,8052
 8003248:	39800017 	ldw	r6,0(r7)
 800324c:	0005883a 	mov	r2,zero
 8003250:	01400104 	movi	r5,4
 8003254:	3007883a 	mov	r3,r6
 8003258:	1900004c 	andi	r4,r3,1
 800325c:	20000426 	beq	r4,zero,8003270 <__cxa_allocate_dependent_exception+0x70>
 8003260:	10800044 	addi	r2,r2,1
 8003264:	1806d07a 	srli	r3,r3,1
 8003268:	117ffb1e 	bne	r2,r5,8003258 <__alt_data_end+0xfc003258>
 800326c:	8002a2c0 	call	8002a2c <_ZSt9terminatev>
 8003270:	00c00044 	movi	r3,1
 8003274:	1886983a 	sll	r3,r3,r2
 8003278:	100491ba 	slli	r2,r2,6
 800327c:	040200b4 	movhi	r16,2050
 8003280:	198cb03a 	or	r6,r3,r6
 8003284:	8407f104 	addi	r16,r16,8132
 8003288:	39800015 	stw	r6,0(r7)
 800328c:	1421883a 	add	r16,r2,r16
 8003290:	003fe206 	br	800321c <__alt_data_end+0xfc00321c>

08003294 <__cxa_free_dependent_exception>:
 8003294:	008200b4 	movhi	r2,2050
 8003298:	1087f104 	addi	r2,r2,8132
 800329c:	20800236 	bltu	r4,r2,80032a8 <__cxa_free_dependent_exception+0x14>
 80032a0:	10c04004 	addi	r3,r2,256
 80032a4:	20c00136 	bltu	r4,r3,80032ac <__cxa_free_dependent_exception+0x18>
 80032a8:	80038f81 	jmpi	80038f8 <free>
 80032ac:	2089c83a 	sub	r4,r4,r2
 80032b0:	2008d1ba 	srli	r4,r4,6
 80032b4:	014200b4 	movhi	r5,2050
 80032b8:	2947dd04 	addi	r5,r5,8052
 80032bc:	00ffff84 	movi	r3,-2
 80032c0:	28800017 	ldw	r2,0(r5)
 80032c4:	1908183a 	rol	r4,r3,r4
 80032c8:	2088703a 	and	r4,r4,r2
 80032cc:	29000015 	stw	r4,0(r5)
 80032d0:	f800283a 	ret

080032d4 <_ZNSt9exceptionD1Ev>:
 80032d4:	f800283a 	ret

080032d8 <_ZNSt13bad_exceptionD1Ev>:
 80032d8:	f800283a 	ret

080032dc <_ZNKSt9exception4whatEv>:
 80032dc:	008200b4 	movhi	r2,2050
 80032e0:	10b78904 	addi	r2,r2,-8668
 80032e4:	f800283a 	ret

080032e8 <_ZNKSt13bad_exception4whatEv>:
 80032e8:	008200b4 	movhi	r2,2050
 80032ec:	10b78d04 	addi	r2,r2,-8652
 80032f0:	f800283a 	ret

080032f4 <_ZNSt9exceptionD0Ev>:
 80032f4:	80029681 	jmpi	8002968 <_ZdlPv>

080032f8 <_ZNSt13bad_exceptionD0Ev>:
 80032f8:	80029681 	jmpi	8002968 <_ZdlPv>

080032fc <_ZN10__cxxabiv115__forced_unwindD1Ev>:
 80032fc:	f800283a 	ret

08003300 <_ZN10__cxxabiv115__forced_unwindD0Ev>:
 8003300:	80029681 	jmpi	8002968 <_ZdlPv>

08003304 <_ZN10__cxxabiv119__foreign_exceptionD1Ev>:
 8003304:	f800283a 	ret

08003308 <_ZN10__cxxabiv119__foreign_exceptionD0Ev>:
 8003308:	80029681 	jmpi	8002968 <_ZdlPv>

0800330c <__cxa_pure_virtual>:
 800330c:	014200b4 	movhi	r5,2050
 8003310:	deffff04 	addi	sp,sp,-4
 8003314:	2977c304 	addi	r5,r5,-8436
 8003318:	01000084 	movi	r4,2
 800331c:	018006c4 	movi	r6,27
 8003320:	dfc00015 	stw	ra,0(sp)
 8003324:	801ae240 	call	801ae24 <write>
 8003328:	8002a2c0 	call	8002a2c <_ZSt9terminatev>

0800332c <__cxa_deleted_virtual>:
 800332c:	014200b4 	movhi	r5,2050
 8003330:	deffff04 	addi	sp,sp,-4
 8003334:	2977ca04 	addi	r5,r5,-8408
 8003338:	01000084 	movi	r4,2
 800333c:	01800784 	movi	r6,30
 8003340:	dfc00015 	stw	ra,0(sp)
 8003344:	801ae240 	call	801ae24 <write>
 8003348:	8002a2c0 	call	8002a2c <_ZSt9terminatev>

0800334c <__mulsi3>:
 800334c:	0005883a 	mov	r2,zero
 8003350:	20000726 	beq	r4,zero,8003370 <__mulsi3+0x24>
 8003354:	20c0004c 	andi	r3,r4,1
 8003358:	2008d07a 	srli	r4,r4,1
 800335c:	18000126 	beq	r3,zero,8003364 <__mulsi3+0x18>
 8003360:	1145883a 	add	r2,r2,r5
 8003364:	294b883a 	add	r5,r5,r5
 8003368:	203ffa1e 	bne	r4,zero,8003354 <__alt_data_end+0xfc003354>
 800336c:	f800283a 	ret
 8003370:	f800283a 	ret

08003374 <_Unwind_ForcedUnwind_Phase2>:
 8003374:	defff404 	addi	sp,sp,-48
 8003378:	dd800915 	stw	r22,36(sp)
 800337c:	058200b4 	movhi	r22,2050
 8003380:	ddc00a15 	stw	r23,40(sp)
 8003384:	dd400815 	stw	r21,32(sp)
 8003388:	dd000715 	stw	r20,28(sp)
 800338c:	dcc00615 	stw	r19,24(sp)
 8003390:	dc400415 	stw	r17,16(sp)
 8003394:	dc000315 	stw	r16,12(sp)
 8003398:	dfc00b15 	stw	ra,44(sp)
 800339c:	dc800515 	stw	r18,20(sp)
 80033a0:	2021883a 	mov	r16,r4
 80033a4:	2823883a 	mov	r17,r5
 80033a8:	24c00317 	ldw	r19,12(r4)
 80033ac:	25000417 	ldw	r20,16(r4)
 80033b0:	28c00017 	ldw	r3,0(r5)
 80033b4:	b587df04 	addi	r22,r22,8060
 80033b8:	054001c4 	movi	r21,7
 80033bc:	05c00204 	movi	r23,8
 80033c0:	00001606 	br	800341c <_Unwind_ForcedUnwind_Phase2+0xa8>
 80033c4:	81800017 	ldw	r6,0(r16)
 80033c8:	81c00117 	ldw	r7,4(r16)
 80033cc:	1c800617 	ldw	r18,24(r3)
 80033d0:	dc000015 	stw	r16,0(sp)
 80033d4:	dc400115 	stw	r17,4(sp)
 80033d8:	dd000215 	stw	r20,8(sp)
 80033dc:	983ee83a 	callr	r19
 80033e0:	01000044 	movi	r4,1
 80033e4:	01400284 	movi	r5,10
 80033e8:	1000241e 	bne	r2,zero,800347c <_Unwind_ForcedUnwind_Phase2+0x108>
 80033ec:	90000726 	beq	r18,zero,800340c <_Unwind_ForcedUnwind_Phase2+0x98>
 80033f0:	81800017 	ldw	r6,0(r16)
 80033f4:	81c00117 	ldw	r7,4(r16)
 80033f8:	dc000015 	stw	r16,0(sp)
 80033fc:	dc400115 	stw	r17,4(sp)
 8003400:	903ee83a 	callr	r18
 8003404:	15401f26 	beq	r2,r21,8003484 <_Unwind_ForcedUnwind_Phase2+0x110>
 8003408:	15c01c1e 	bne	r2,r23,800347c <_Unwind_ForcedUnwind_Phase2+0x108>
 800340c:	88800017 	ldw	r2,0(r17)
 8003410:	10c00017 	ldw	r3,0(r2)
 8003414:	b0c00015 	stw	r3,0(r22)
 8003418:	88c00015 	stw	r3,0(r17)
 800341c:	01000044 	movi	r4,1
 8003420:	01400284 	movi	r5,10
 8003424:	183fe71e 	bne	r3,zero,80033c4 <__alt_data_end+0xfc0033c4>
 8003428:	81800017 	ldw	r6,0(r16)
 800342c:	81c00117 	ldw	r7,4(r16)
 8003430:	01000044 	movi	r4,1
 8003434:	dc000015 	stw	r16,0(sp)
 8003438:	dc400115 	stw	r17,4(sp)
 800343c:	dd000215 	stw	r20,8(sp)
 8003440:	01400684 	movi	r5,26
 8003444:	983ee83a 	callr	r19
 8003448:	10000c1e 	bne	r2,zero,800347c <_Unwind_ForcedUnwind_Phase2+0x108>
 800344c:	00800144 	movi	r2,5
 8003450:	dfc00b17 	ldw	ra,44(sp)
 8003454:	ddc00a17 	ldw	r23,40(sp)
 8003458:	dd800917 	ldw	r22,36(sp)
 800345c:	dd400817 	ldw	r21,32(sp)
 8003460:	dd000717 	ldw	r20,28(sp)
 8003464:	dcc00617 	ldw	r19,24(sp)
 8003468:	dc800517 	ldw	r18,20(sp)
 800346c:	dc400417 	ldw	r17,16(sp)
 8003470:	dc000317 	ldw	r16,12(sp)
 8003474:	dec00c04 	addi	sp,sp,48
 8003478:	f800283a 	ret
 800347c:	00800084 	movi	r2,2
 8003480:	003ff306 	br	8003450 <__alt_data_end+0xfc003450>
 8003484:	a805883a 	mov	r2,r21
 8003488:	003ff106 	br	8003450 <__alt_data_end+0xfc003450>

0800348c <_Unwind_RaiseException_Phase2>:
 800348c:	28c00017 	ldw	r3,0(r5)
 8003490:	defff804 	addi	sp,sp,-32
 8003494:	dcc00515 	stw	r19,20(sp)
 8003498:	dc800415 	stw	r18,16(sp)
 800349c:	dc400315 	stw	r17,12(sp)
 80034a0:	dc000215 	stw	r16,8(sp)
 80034a4:	dfc00715 	stw	ra,28(sp)
 80034a8:	dd000615 	stw	r20,24(sp)
 80034ac:	2823883a 	mov	r17,r5
 80034b0:	2021883a 	mov	r16,r4
 80034b4:	048001c4 	movi	r18,7
 80034b8:	04c00204 	movi	r19,8
 80034bc:	18001326 	beq	r3,zero,800350c <_Unwind_RaiseException_Phase2+0x80>
 80034c0:	81000417 	ldw	r4,16(r16)
 80034c4:	1a000617 	ldw	r8,24(r3)
 80034c8:	19001c26 	beq	r3,r4,800353c <_Unwind_RaiseException_Phase2+0xb0>
 80034cc:	40000b26 	beq	r8,zero,80034fc <_Unwind_RaiseException_Phase2+0x70>
 80034d0:	01400084 	movi	r5,2
 80034d4:	0029883a 	mov	r20,zero
 80034d8:	81800017 	ldw	r6,0(r16)
 80034dc:	81c00117 	ldw	r7,4(r16)
 80034e0:	01000044 	movi	r4,1
 80034e4:	dc000015 	stw	r16,0(sp)
 80034e8:	dc400115 	stw	r17,4(sp)
 80034ec:	403ee83a 	callr	r8
 80034f0:	14800f26 	beq	r2,r18,8003530 <_Unwind_RaiseException_Phase2+0xa4>
 80034f4:	14c0051e 	bne	r2,r19,800350c <_Unwind_RaiseException_Phase2+0x80>
 80034f8:	a0000f1e 	bne	r20,zero,8003538 <_Unwind_RaiseException_Phase2+0xac>
 80034fc:	88c00017 	ldw	r3,0(r17)
 8003500:	18c00017 	ldw	r3,0(r3)
 8003504:	88c00015 	stw	r3,0(r17)
 8003508:	183fed1e 	bne	r3,zero,80034c0 <__alt_data_end+0xfc0034c0>
 800350c:	00800084 	movi	r2,2
 8003510:	dfc00717 	ldw	ra,28(sp)
 8003514:	dd000617 	ldw	r20,24(sp)
 8003518:	dcc00517 	ldw	r19,20(sp)
 800351c:	dc800417 	ldw	r18,16(sp)
 8003520:	dc400317 	ldw	r17,12(sp)
 8003524:	dc000217 	ldw	r16,8(sp)
 8003528:	dec00804 	addi	sp,sp,32
 800352c:	f800283a 	ret
 8003530:	9005883a 	mov	r2,r18
 8003534:	003ff606 	br	8003510 <__alt_data_end+0xfc003510>
 8003538:	80038940 	call	8003894 <abort>
 800353c:	403ffe26 	beq	r8,zero,8003538 <__alt_data_end+0xfc003538>
 8003540:	01400184 	movi	r5,6
 8003544:	05000104 	movi	r20,4
 8003548:	003fe306 	br	80034d8 <__alt_data_end+0xfc0034d8>

0800354c <uw_install_context.isra.1>:
 800354c:	20c00017 	ldw	r3,0(r4)
 8003550:	deffff04 	addi	sp,sp,-4
 8003554:	014200b4 	movhi	r5,2050
 8003558:	19000917 	ldw	r4,36(r3)
 800355c:	df000015 	stw	fp,0(sp)
 8003560:	18800804 	addi	r2,r3,32
 8003564:	d839883a 	mov	fp,sp
 8003568:	2947df04 	addi	r5,r5,8060
 800356c:	28c00015 	stw	r3,0(r5)
 8003570:	17000017 	ldw	fp,0(r2)
 8003574:	1ec00a17 	ldw	sp,40(r3)
 8003578:	2000683a 	jmp	r4

0800357c <_Unwind_SjLj_Register>:
 800357c:	008200b4 	movhi	r2,2050
 8003580:	1087df04 	addi	r2,r2,8060
 8003584:	10c00017 	ldw	r3,0(r2)
 8003588:	11000015 	stw	r4,0(r2)
 800358c:	20c00015 	stw	r3,0(r4)
 8003590:	f800283a 	ret

08003594 <_Unwind_SjLj_Unregister>:
 8003594:	20c00017 	ldw	r3,0(r4)
 8003598:	008200b4 	movhi	r2,2050
 800359c:	1087df04 	addi	r2,r2,8060
 80035a0:	10c00015 	stw	r3,0(r2)
 80035a4:	f800283a 	ret

080035a8 <_Unwind_GetGR>:
 80035a8:	20800017 	ldw	r2,0(r4)
 80035ac:	29400084 	addi	r5,r5,2
 80035b0:	294b883a 	add	r5,r5,r5
 80035b4:	294b883a 	add	r5,r5,r5
 80035b8:	114b883a 	add	r5,r2,r5
 80035bc:	28800017 	ldw	r2,0(r5)
 80035c0:	f800283a 	ret

080035c4 <_Unwind_GetCFA>:
 80035c4:	20800017 	ldw	r2,0(r4)
 80035c8:	10000226 	beq	r2,zero,80035d4 <_Unwind_GetCFA+0x10>
 80035cc:	10800a17 	ldw	r2,40(r2)
 80035d0:	f800283a 	ret
 80035d4:	0005883a 	mov	r2,zero
 80035d8:	f800283a 	ret

080035dc <_Unwind_SetGR>:
 80035dc:	20800017 	ldw	r2,0(r4)
 80035e0:	29400084 	addi	r5,r5,2
 80035e4:	294b883a 	add	r5,r5,r5
 80035e8:	294b883a 	add	r5,r5,r5
 80035ec:	114b883a 	add	r5,r2,r5
 80035f0:	29800015 	stw	r6,0(r5)
 80035f4:	f800283a 	ret

080035f8 <_Unwind_GetIP>:
 80035f8:	20800017 	ldw	r2,0(r4)
 80035fc:	10800117 	ldw	r2,4(r2)
 8003600:	10800044 	addi	r2,r2,1
 8003604:	f800283a 	ret

08003608 <_Unwind_GetIPInfo>:
 8003608:	20800017 	ldw	r2,0(r4)
 800360c:	28000015 	stw	zero,0(r5)
 8003610:	10000326 	beq	r2,zero,8003620 <_Unwind_GetIPInfo+0x18>
 8003614:	10800117 	ldw	r2,4(r2)
 8003618:	10800044 	addi	r2,r2,1
 800361c:	f800283a 	ret
 8003620:	0005883a 	mov	r2,zero
 8003624:	f800283a 	ret

08003628 <_Unwind_SetIP>:
 8003628:	20800017 	ldw	r2,0(r4)
 800362c:	297fffc4 	addi	r5,r5,-1
 8003630:	11400115 	stw	r5,4(r2)
 8003634:	f800283a 	ret

08003638 <_Unwind_GetLanguageSpecificData>:
 8003638:	20800017 	ldw	r2,0(r4)
 800363c:	10800717 	ldw	r2,28(r2)
 8003640:	f800283a 	ret

08003644 <_Unwind_GetRegionStart>:
 8003644:	0005883a 	mov	r2,zero
 8003648:	f800283a 	ret

0800364c <_Unwind_FindEnclosingFunction>:
 800364c:	0005883a 	mov	r2,zero
 8003650:	f800283a 	ret

08003654 <_Unwind_GetDataRelBase>:
 8003654:	0005883a 	mov	r2,zero
 8003658:	f800283a 	ret

0800365c <_Unwind_GetTextRelBase>:
 800365c:	0005883a 	mov	r2,zero
 8003660:	f800283a 	ret

08003664 <_Unwind_SjLj_RaiseException>:
 8003664:	008200b4 	movhi	r2,2050
 8003668:	defff804 	addi	sp,sp,-32
 800366c:	1087df04 	addi	r2,r2,8060
 8003670:	dc800515 	stw	r18,20(sp)
 8003674:	14800017 	ldw	r18,0(r2)
 8003678:	dfc00715 	stw	ra,28(sp)
 800367c:	dcc00615 	stw	r19,24(sp)
 8003680:	dc400415 	stw	r17,16(sp)
 8003684:	dc000315 	stw	r16,12(sp)
 8003688:	dc800215 	stw	r18,8(sp)
 800368c:	90001426 	beq	r18,zero,80036e0 <_Unwind_SjLj_RaiseException+0x7c>
 8003690:	2021883a 	mov	r16,r4
 8003694:	9005883a 	mov	r2,r18
 8003698:	04400184 	movi	r17,6
 800369c:	04c00204 	movi	r19,8
 80036a0:	10800617 	ldw	r2,24(r2)
 80036a4:	10000a26 	beq	r2,zero,80036d0 <_Unwind_SjLj_RaiseException+0x6c>
 80036a8:	81800017 	ldw	r6,0(r16)
 80036ac:	81c00117 	ldw	r7,4(r16)
 80036b0:	01000044 	movi	r4,1
 80036b4:	d8c00204 	addi	r3,sp,8
 80036b8:	dc000015 	stw	r16,0(sp)
 80036bc:	d8c00115 	stw	r3,4(sp)
 80036c0:	200b883a 	mov	r5,r4
 80036c4:	103ee83a 	callr	r2
 80036c8:	14400d26 	beq	r2,r17,8003700 <_Unwind_SjLj_RaiseException+0x9c>
 80036cc:	14c0171e 	bne	r2,r19,800372c <_Unwind_SjLj_RaiseException+0xc8>
 80036d0:	d8800217 	ldw	r2,8(sp)
 80036d4:	10800017 	ldw	r2,0(r2)
 80036d8:	d8800215 	stw	r2,8(sp)
 80036dc:	103ff01e 	bne	r2,zero,80036a0 <__alt_data_end+0xfc0036a0>
 80036e0:	00800144 	movi	r2,5
 80036e4:	dfc00717 	ldw	ra,28(sp)
 80036e8:	dcc00617 	ldw	r19,24(sp)
 80036ec:	dc800517 	ldw	r18,20(sp)
 80036f0:	dc400417 	ldw	r17,16(sp)
 80036f4:	dc000317 	ldw	r16,12(sp)
 80036f8:	dec00804 	addi	sp,sp,32
 80036fc:	f800283a 	ret
 8003700:	d8800217 	ldw	r2,8(sp)
 8003704:	80000315 	stw	zero,12(r16)
 8003708:	8009883a 	mov	r4,r16
 800370c:	80800415 	stw	r2,16(r16)
 8003710:	d9400204 	addi	r5,sp,8
 8003714:	dc800215 	stw	r18,8(sp)
 8003718:	800348c0 	call	800348c <_Unwind_RaiseException_Phase2>
 800371c:	00c001c4 	movi	r3,7
 8003720:	10fff01e 	bne	r2,r3,80036e4 <__alt_data_end+0xfc0036e4>
 8003724:	d9000204 	addi	r4,sp,8
 8003728:	800354c0 	call	800354c <uw_install_context.isra.1>
 800372c:	008000c4 	movi	r2,3
 8003730:	003fec06 	br	80036e4 <__alt_data_end+0xfc0036e4>

08003734 <_Unwind_SjLj_ForcedUnwind>:
 8003734:	00c200b4 	movhi	r3,2050
 8003738:	18c7df04 	addi	r3,r3,8060
 800373c:	defffe04 	addi	sp,sp,-8
 8003740:	18c00017 	ldw	r3,0(r3)
 8003744:	dfc00115 	stw	ra,4(sp)
 8003748:	21400315 	stw	r5,12(r4)
 800374c:	21800415 	stw	r6,16(r4)
 8003750:	d80b883a 	mov	r5,sp
 8003754:	d8c00015 	stw	r3,0(sp)
 8003758:	80033740 	call	8003374 <_Unwind_ForcedUnwind_Phase2>
 800375c:	00c001c4 	movi	r3,7
 8003760:	10c00326 	beq	r2,r3,8003770 <_Unwind_SjLj_ForcedUnwind+0x3c>
 8003764:	dfc00117 	ldw	ra,4(sp)
 8003768:	dec00204 	addi	sp,sp,8
 800376c:	f800283a 	ret
 8003770:	d809883a 	mov	r4,sp
 8003774:	800354c0 	call	800354c <uw_install_context.isra.1>

08003778 <_Unwind_SjLj_Resume>:
 8003778:	00c200b4 	movhi	r3,2050
 800377c:	18c7df04 	addi	r3,r3,8060
 8003780:	18c00017 	ldw	r3,0(r3)
 8003784:	20800317 	ldw	r2,12(r4)
 8003788:	defffe04 	addi	sp,sp,-8
 800378c:	dfc00115 	stw	ra,4(sp)
 8003790:	d8c00015 	stw	r3,0(sp)
 8003794:	d80b883a 	mov	r5,sp
 8003798:	1000041e 	bne	r2,zero,80037ac <_Unwind_SjLj_Resume+0x34>
 800379c:	800348c0 	call	800348c <_Unwind_RaiseException_Phase2>
 80037a0:	00c001c4 	movi	r3,7
 80037a4:	10c00326 	beq	r2,r3,80037b4 <_Unwind_SjLj_Resume+0x3c>
 80037a8:	80038940 	call	8003894 <abort>
 80037ac:	80033740 	call	8003374 <_Unwind_ForcedUnwind_Phase2>
 80037b0:	003ffb06 	br	80037a0 <__alt_data_end+0xfc0037a0>
 80037b4:	d809883a 	mov	r4,sp
 80037b8:	800354c0 	call	800354c <uw_install_context.isra.1>

080037bc <_Unwind_SjLj_Resume_or_Rethrow>:
 80037bc:	20800317 	ldw	r2,12(r4)
 80037c0:	defffe04 	addi	sp,sp,-8
 80037c4:	dfc00115 	stw	ra,4(sp)
 80037c8:	1000041e 	bne	r2,zero,80037dc <_Unwind_SjLj_Resume_or_Rethrow+0x20>
 80037cc:	80036640 	call	8003664 <_Unwind_SjLj_RaiseException>
 80037d0:	dfc00117 	ldw	ra,4(sp)
 80037d4:	dec00204 	addi	sp,sp,8
 80037d8:	f800283a 	ret
 80037dc:	008200b4 	movhi	r2,2050
 80037e0:	1087df04 	addi	r2,r2,8060
 80037e4:	10800017 	ldw	r2,0(r2)
 80037e8:	d80b883a 	mov	r5,sp
 80037ec:	d8800015 	stw	r2,0(sp)
 80037f0:	80033740 	call	8003374 <_Unwind_ForcedUnwind_Phase2>
 80037f4:	00c001c4 	movi	r3,7
 80037f8:	10c00126 	beq	r2,r3,8003800 <_Unwind_SjLj_Resume_or_Rethrow+0x44>
 80037fc:	80038940 	call	8003894 <abort>
 8003800:	d809883a 	mov	r4,sp
 8003804:	800354c0 	call	800354c <uw_install_context.isra.1>

08003808 <_Unwind_DeleteException>:
 8003808:	20800217 	ldw	r2,8(r4)
 800380c:	200b883a 	mov	r5,r4
 8003810:	10000226 	beq	r2,zero,800381c <_Unwind_DeleteException+0x14>
 8003814:	01000044 	movi	r4,1
 8003818:	1000683a 	jmp	r2
 800381c:	f800283a 	ret

08003820 <_Unwind_Backtrace>:
 8003820:	008200b4 	movhi	r2,2050
 8003824:	1087df04 	addi	r2,r2,8060
 8003828:	10800017 	ldw	r2,0(r2)
 800382c:	defffc04 	addi	sp,sp,-16
 8003830:	dc400215 	stw	r17,8(sp)
 8003834:	dc000115 	stw	r16,4(sp)
 8003838:	dfc00315 	stw	ra,12(sp)
 800383c:	2023883a 	mov	r17,r4
 8003840:	2821883a 	mov	r16,r5
 8003844:	d8800015 	stw	r2,0(sp)
 8003848:	00000506 	br	8003860 <_Unwind_Backtrace+0x40>
 800384c:	883ee83a 	callr	r17
 8003850:	10000e1e 	bne	r2,zero,800388c <_Unwind_Backtrace+0x6c>
 8003854:	d8800017 	ldw	r2,0(sp)
 8003858:	10800017 	ldw	r2,0(r2)
 800385c:	d8800015 	stw	r2,0(sp)
 8003860:	d809883a 	mov	r4,sp
 8003864:	800b883a 	mov	r5,r16
 8003868:	103ff81e 	bne	r2,zero,800384c <__alt_data_end+0xfc00384c>
 800386c:	883ee83a 	callr	r17
 8003870:	1000061e 	bne	r2,zero,800388c <_Unwind_Backtrace+0x6c>
 8003874:	00800144 	movi	r2,5
 8003878:	dfc00317 	ldw	ra,12(sp)
 800387c:	dc400217 	ldw	r17,8(sp)
 8003880:	dc000117 	ldw	r16,4(sp)
 8003884:	dec00404 	addi	sp,sp,16
 8003888:	f800283a 	ret
 800388c:	008000c4 	movi	r2,3
 8003890:	003ff906 	br	8003878 <__alt_data_end+0xfc003878>

08003894 <abort>:
 8003894:	deffff04 	addi	sp,sp,-4
 8003898:	01000184 	movi	r4,6
 800389c:	dfc00015 	stw	ra,0(sp)
 80038a0:	80046380 	call	8004638 <raise>
 80038a4:	01000044 	movi	r4,1
 80038a8:	801a1b40 	call	801a1b4 <_exit>

080038ac <exit>:
 80038ac:	defffe04 	addi	sp,sp,-8
 80038b0:	000b883a 	mov	r5,zero
 80038b4:	dc000015 	stw	r16,0(sp)
 80038b8:	dfc00115 	stw	ra,4(sp)
 80038bc:	2021883a 	mov	r16,r4
 80038c0:	800acd40 	call	800acd4 <__call_exitprocs>
 80038c4:	008200b4 	movhi	r2,2050
 80038c8:	10808f04 	addi	r2,r2,572
 80038cc:	11000017 	ldw	r4,0(r2)
 80038d0:	20800f17 	ldw	r2,60(r4)
 80038d4:	10000126 	beq	r2,zero,80038dc <exit+0x30>
 80038d8:	103ee83a 	callr	r2
 80038dc:	8009883a 	mov	r4,r16
 80038e0:	801a1b40 	call	801a1b4 <_exit>

080038e4 <malloc>:
 80038e4:	008200b4 	movhi	r2,2050
 80038e8:	10809004 	addi	r2,r2,576
 80038ec:	200b883a 	mov	r5,r4
 80038f0:	11000017 	ldw	r4,0(r2)
 80038f4:	800390c1 	jmpi	800390c <_malloc_r>

080038f8 <free>:
 80038f8:	008200b4 	movhi	r2,2050
 80038fc:	10809004 	addi	r2,r2,576
 8003900:	200b883a 	mov	r5,r4
 8003904:	11000017 	ldw	r4,0(r2)
 8003908:	800d1781 	jmpi	800d178 <_free_r>

0800390c <_malloc_r>:
 800390c:	defff504 	addi	sp,sp,-44
 8003910:	dc800315 	stw	r18,12(sp)
 8003914:	dfc00a15 	stw	ra,40(sp)
 8003918:	df000915 	stw	fp,36(sp)
 800391c:	ddc00815 	stw	r23,32(sp)
 8003920:	dd800715 	stw	r22,28(sp)
 8003924:	dd400615 	stw	r21,24(sp)
 8003928:	dd000515 	stw	r20,20(sp)
 800392c:	dcc00415 	stw	r19,16(sp)
 8003930:	dc400215 	stw	r17,8(sp)
 8003934:	dc000115 	stw	r16,4(sp)
 8003938:	288002c4 	addi	r2,r5,11
 800393c:	00c00584 	movi	r3,22
 8003940:	2025883a 	mov	r18,r4
 8003944:	18802a2e 	bgeu	r3,r2,80039f0 <_malloc_r+0xe4>
 8003948:	047ffe04 	movi	r17,-8
 800394c:	1462703a 	and	r17,r2,r17
 8003950:	88009e16 	blt	r17,zero,8003bcc <_malloc_r+0x2c0>
 8003954:	89409d36 	bltu	r17,r5,8003bcc <_malloc_r+0x2c0>
 8003958:	801a8a40 	call	801a8a4 <__malloc_lock>
 800395c:	00807dc4 	movi	r2,503
 8003960:	14402736 	bltu	r2,r17,8003a00 <_malloc_r+0xf4>
 8003964:	8806d0fa 	srli	r3,r17,3
 8003968:	04c200b4 	movhi	r19,2050
 800396c:	9cfa7c04 	addi	r19,r19,-5648
 8003970:	18c5883a 	add	r2,r3,r3
 8003974:	1085883a 	add	r2,r2,r2
 8003978:	1085883a 	add	r2,r2,r2
 800397c:	9885883a 	add	r2,r19,r2
 8003980:	14000317 	ldw	r16,12(r2)
 8003984:	80814a26 	beq	r16,r2,8003eb0 <_malloc_r+0x5a4>
 8003988:	80c00117 	ldw	r3,4(r16)
 800398c:	81000317 	ldw	r4,12(r16)
 8003990:	00bfff04 	movi	r2,-4
 8003994:	1884703a 	and	r2,r3,r2
 8003998:	81400217 	ldw	r5,8(r16)
 800399c:	8085883a 	add	r2,r16,r2
 80039a0:	10c00117 	ldw	r3,4(r2)
 80039a4:	29000315 	stw	r4,12(r5)
 80039a8:	21400215 	stw	r5,8(r4)
 80039ac:	18c00054 	ori	r3,r3,1
 80039b0:	10c00115 	stw	r3,4(r2)
 80039b4:	9009883a 	mov	r4,r18
 80039b8:	801a8c40 	call	801a8c4 <__malloc_unlock>
 80039bc:	80800204 	addi	r2,r16,8
 80039c0:	dfc00a17 	ldw	ra,40(sp)
 80039c4:	df000917 	ldw	fp,36(sp)
 80039c8:	ddc00817 	ldw	r23,32(sp)
 80039cc:	dd800717 	ldw	r22,28(sp)
 80039d0:	dd400617 	ldw	r21,24(sp)
 80039d4:	dd000517 	ldw	r20,20(sp)
 80039d8:	dcc00417 	ldw	r19,16(sp)
 80039dc:	dc800317 	ldw	r18,12(sp)
 80039e0:	dc400217 	ldw	r17,8(sp)
 80039e4:	dc000117 	ldw	r16,4(sp)
 80039e8:	dec00b04 	addi	sp,sp,44
 80039ec:	f800283a 	ret
 80039f0:	04400404 	movi	r17,16
 80039f4:	89407536 	bltu	r17,r5,8003bcc <_malloc_r+0x2c0>
 80039f8:	801a8a40 	call	801a8a4 <__malloc_lock>
 80039fc:	003fd906 	br	8003964 <__alt_data_end+0xfc003964>
 8003a00:	8806d27a 	srli	r3,r17,9
 8003a04:	18007526 	beq	r3,zero,8003bdc <_malloc_r+0x2d0>
 8003a08:	00800104 	movi	r2,4
 8003a0c:	10c0ef36 	bltu	r2,r3,8003dcc <_malloc_r+0x4c0>
 8003a10:	8806d1ba 	srli	r3,r17,6
 8003a14:	19c00e04 	addi	r7,r3,56
 8003a18:	39cb883a 	add	r5,r7,r7
 8003a1c:	04c200b4 	movhi	r19,2050
 8003a20:	294b883a 	add	r5,r5,r5
 8003a24:	9cfa7c04 	addi	r19,r19,-5648
 8003a28:	294b883a 	add	r5,r5,r5
 8003a2c:	994b883a 	add	r5,r19,r5
 8003a30:	2c000317 	ldw	r16,12(r5)
 8003a34:	2c000e26 	beq	r5,r16,8003a70 <_malloc_r+0x164>
 8003a38:	80800117 	ldw	r2,4(r16)
 8003a3c:	01bfff04 	movi	r6,-4
 8003a40:	010003c4 	movi	r4,15
 8003a44:	1184703a 	and	r2,r2,r6
 8003a48:	1447c83a 	sub	r3,r2,r17
 8003a4c:	20c00716 	blt	r4,r3,8003a6c <_malloc_r+0x160>
 8003a50:	1800650e 	bge	r3,zero,8003be8 <_malloc_r+0x2dc>
 8003a54:	84000317 	ldw	r16,12(r16)
 8003a58:	2c000526 	beq	r5,r16,8003a70 <_malloc_r+0x164>
 8003a5c:	80800117 	ldw	r2,4(r16)
 8003a60:	1184703a 	and	r2,r2,r6
 8003a64:	1447c83a 	sub	r3,r2,r17
 8003a68:	20fff90e 	bge	r4,r3,8003a50 <__alt_data_end+0xfc003a50>
 8003a6c:	39ffffc4 	addi	r7,r7,-1
 8003a70:	38c00044 	addi	r3,r7,1
 8003a74:	018200b4 	movhi	r6,2050
 8003a78:	9c000417 	ldw	r16,16(r19)
 8003a7c:	31ba7c04 	addi	r6,r6,-5648
 8003a80:	32400204 	addi	r9,r6,8
 8003a84:	82410326 	beq	r16,r9,8003e94 <_malloc_r+0x588>
 8003a88:	81000117 	ldw	r4,4(r16)
 8003a8c:	00bfff04 	movi	r2,-4
 8003a90:	208e703a 	and	r7,r4,r2
 8003a94:	3c45c83a 	sub	r2,r7,r17
 8003a98:	010003c4 	movi	r4,15
 8003a9c:	2080ee16 	blt	r4,r2,8003e58 <_malloc_r+0x54c>
 8003aa0:	32400515 	stw	r9,20(r6)
 8003aa4:	32400415 	stw	r9,16(r6)
 8003aa8:	1000510e 	bge	r2,zero,8003bf0 <_malloc_r+0x2e4>
 8003aac:	00807fc4 	movi	r2,511
 8003ab0:	11c0ce36 	bltu	r2,r7,8003dec <_malloc_r+0x4e0>
 8003ab4:	3808d0fa 	srli	r4,r7,3
 8003ab8:	01c00044 	movi	r7,1
 8003abc:	30800117 	ldw	r2,4(r6)
 8003ac0:	210b883a 	add	r5,r4,r4
 8003ac4:	294b883a 	add	r5,r5,r5
 8003ac8:	2009d0ba 	srai	r4,r4,2
 8003acc:	294b883a 	add	r5,r5,r5
 8003ad0:	298b883a 	add	r5,r5,r6
 8003ad4:	2a000217 	ldw	r8,8(r5)
 8003ad8:	3908983a 	sll	r4,r7,r4
 8003adc:	81400315 	stw	r5,12(r16)
 8003ae0:	82000215 	stw	r8,8(r16)
 8003ae4:	2088b03a 	or	r4,r4,r2
 8003ae8:	2c000215 	stw	r16,8(r5)
 8003aec:	31000115 	stw	r4,4(r6)
 8003af0:	44000315 	stw	r16,12(r8)
 8003af4:	1805d0ba 	srai	r2,r3,2
 8003af8:	01400044 	movi	r5,1
 8003afc:	288a983a 	sll	r5,r5,r2
 8003b00:	21404336 	bltu	r4,r5,8003c10 <_malloc_r+0x304>
 8003b04:	2144703a 	and	r2,r4,r5
 8003b08:	10000a1e 	bne	r2,zero,8003b34 <_malloc_r+0x228>
 8003b0c:	00bfff04 	movi	r2,-4
 8003b10:	294b883a 	add	r5,r5,r5
 8003b14:	1886703a 	and	r3,r3,r2
 8003b18:	2144703a 	and	r2,r4,r5
 8003b1c:	18c00104 	addi	r3,r3,4
 8003b20:	1000041e 	bne	r2,zero,8003b34 <_malloc_r+0x228>
 8003b24:	294b883a 	add	r5,r5,r5
 8003b28:	2144703a 	and	r2,r4,r5
 8003b2c:	18c00104 	addi	r3,r3,4
 8003b30:	103ffc26 	beq	r2,zero,8003b24 <__alt_data_end+0xfc003b24>
 8003b34:	023fff04 	movi	r8,-4
 8003b38:	01c003c4 	movi	r7,15
 8003b3c:	18c5883a 	add	r2,r3,r3
 8003b40:	1085883a 	add	r2,r2,r2
 8003b44:	1085883a 	add	r2,r2,r2
 8003b48:	9895883a 	add	r10,r19,r2
 8003b4c:	52c00304 	addi	r11,r10,12
 8003b50:	1819883a 	mov	r12,r3
 8003b54:	5c000017 	ldw	r16,0(r11)
 8003b58:	59bffd04 	addi	r6,r11,-12
 8003b5c:	8180041e 	bne	r16,r6,8003b70 <_malloc_r+0x264>
 8003b60:	0000ce06 	br	8003e9c <_malloc_r+0x590>
 8003b64:	2000d70e 	bge	r4,zero,8003ec4 <_malloc_r+0x5b8>
 8003b68:	84000317 	ldw	r16,12(r16)
 8003b6c:	8180cb26 	beq	r16,r6,8003e9c <_malloc_r+0x590>
 8003b70:	80800117 	ldw	r2,4(r16)
 8003b74:	1204703a 	and	r2,r2,r8
 8003b78:	1449c83a 	sub	r4,r2,r17
 8003b7c:	393ff90e 	bge	r7,r4,8003b64 <__alt_data_end+0xfc003b64>
 8003b80:	80800317 	ldw	r2,12(r16)
 8003b84:	80c00217 	ldw	r3,8(r16)
 8003b88:	89400054 	ori	r5,r17,1
 8003b8c:	81400115 	stw	r5,4(r16)
 8003b90:	18800315 	stw	r2,12(r3)
 8003b94:	10c00215 	stw	r3,8(r2)
 8003b98:	8463883a 	add	r17,r16,r17
 8003b9c:	9c400515 	stw	r17,20(r19)
 8003ba0:	9c400415 	stw	r17,16(r19)
 8003ba4:	20800054 	ori	r2,r4,1
 8003ba8:	88800115 	stw	r2,4(r17)
 8003bac:	8a400315 	stw	r9,12(r17)
 8003bb0:	8a400215 	stw	r9,8(r17)
 8003bb4:	8923883a 	add	r17,r17,r4
 8003bb8:	89000015 	stw	r4,0(r17)
 8003bbc:	9009883a 	mov	r4,r18
 8003bc0:	801a8c40 	call	801a8c4 <__malloc_unlock>
 8003bc4:	80800204 	addi	r2,r16,8
 8003bc8:	003f7d06 	br	80039c0 <__alt_data_end+0xfc0039c0>
 8003bcc:	00800304 	movi	r2,12
 8003bd0:	90800015 	stw	r2,0(r18)
 8003bd4:	0005883a 	mov	r2,zero
 8003bd8:	003f7906 	br	80039c0 <__alt_data_end+0xfc0039c0>
 8003bdc:	01401f84 	movi	r5,126
 8003be0:	01c00fc4 	movi	r7,63
 8003be4:	003f8d06 	br	8003a1c <__alt_data_end+0xfc003a1c>
 8003be8:	81000317 	ldw	r4,12(r16)
 8003bec:	003f6a06 	br	8003998 <__alt_data_end+0xfc003998>
 8003bf0:	81c5883a 	add	r2,r16,r7
 8003bf4:	10c00117 	ldw	r3,4(r2)
 8003bf8:	9009883a 	mov	r4,r18
 8003bfc:	18c00054 	ori	r3,r3,1
 8003c00:	10c00115 	stw	r3,4(r2)
 8003c04:	801a8c40 	call	801a8c4 <__malloc_unlock>
 8003c08:	80800204 	addi	r2,r16,8
 8003c0c:	003f6c06 	br	80039c0 <__alt_data_end+0xfc0039c0>
 8003c10:	9c000217 	ldw	r16,8(r19)
 8003c14:	00bfff04 	movi	r2,-4
 8003c18:	85800117 	ldw	r22,4(r16)
 8003c1c:	b0ac703a 	and	r22,r22,r2
 8003c20:	b4400336 	bltu	r22,r17,8003c30 <_malloc_r+0x324>
 8003c24:	b445c83a 	sub	r2,r22,r17
 8003c28:	00c003c4 	movi	r3,15
 8003c2c:	18805d16 	blt	r3,r2,8003da4 <_malloc_r+0x498>
 8003c30:	05c200b4 	movhi	r23,2050
 8003c34:	008200b4 	movhi	r2,2050
 8003c38:	bdc09104 	addi	r23,r23,580
 8003c3c:	1087e204 	addi	r2,r2,8072
 8003c40:	15400017 	ldw	r21,0(r2)
 8003c44:	b9000017 	ldw	r4,0(r23)
 8003c48:	00ffffc4 	movi	r3,-1
 8003c4c:	858d883a 	add	r6,r16,r22
 8003c50:	8d6b883a 	add	r21,r17,r21
 8003c54:	20c0e426 	beq	r4,r3,8003fe8 <_malloc_r+0x6dc>
 8003c58:	ad4403c4 	addi	r21,r21,4111
 8003c5c:	00fc0004 	movi	r3,-4096
 8003c60:	a8ea703a 	and	r21,r21,r3
 8003c64:	9009883a 	mov	r4,r18
 8003c68:	a80b883a 	mov	r5,r21
 8003c6c:	d9800015 	stw	r6,0(sp)
 8003c70:	800432c0 	call	800432c <_sbrk_r>
 8003c74:	00ffffc4 	movi	r3,-1
 8003c78:	1029883a 	mov	r20,r2
 8003c7c:	d9800017 	ldw	r6,0(sp)
 8003c80:	10c0a426 	beq	r2,r3,8003f14 <_malloc_r+0x608>
 8003c84:	1180a236 	bltu	r2,r6,8003f10 <_malloc_r+0x604>
 8003c88:	070200b4 	movhi	fp,2050
 8003c8c:	e70a3104 	addi	fp,fp,10436
 8003c90:	e0c00017 	ldw	r3,0(fp)
 8003c94:	a8c7883a 	add	r3,r21,r3
 8003c98:	e0c00015 	stw	r3,0(fp)
 8003c9c:	3500da26 	beq	r6,r20,8004008 <_malloc_r+0x6fc>
 8003ca0:	b9000017 	ldw	r4,0(r23)
 8003ca4:	00bfffc4 	movi	r2,-1
 8003ca8:	2080e426 	beq	r4,r2,800403c <_malloc_r+0x730>
 8003cac:	a185c83a 	sub	r2,r20,r6
 8003cb0:	1885883a 	add	r2,r3,r2
 8003cb4:	e0800015 	stw	r2,0(fp)
 8003cb8:	a0c001cc 	andi	r3,r20,7
 8003cbc:	1800b526 	beq	r3,zero,8003f94 <_malloc_r+0x688>
 8003cc0:	a0e9c83a 	sub	r20,r20,r3
 8003cc4:	00840204 	movi	r2,4104
 8003cc8:	a5000204 	addi	r20,r20,8
 8003ccc:	10c7c83a 	sub	r3,r2,r3
 8003cd0:	a545883a 	add	r2,r20,r21
 8003cd4:	1083ffcc 	andi	r2,r2,4095
 8003cd8:	18abc83a 	sub	r21,r3,r2
 8003cdc:	9009883a 	mov	r4,r18
 8003ce0:	a80b883a 	mov	r5,r21
 8003ce4:	800432c0 	call	800432c <_sbrk_r>
 8003ce8:	00ffffc4 	movi	r3,-1
 8003cec:	10c0d026 	beq	r2,r3,8004030 <_malloc_r+0x724>
 8003cf0:	1507c83a 	sub	r3,r2,r20
 8003cf4:	a8c7883a 	add	r3,r21,r3
 8003cf8:	18c00054 	ori	r3,r3,1
 8003cfc:	e0800017 	ldw	r2,0(fp)
 8003d00:	9d000215 	stw	r20,8(r19)
 8003d04:	a0c00115 	stw	r3,4(r20)
 8003d08:	a887883a 	add	r3,r21,r2
 8003d0c:	e0c00015 	stw	r3,0(fp)
 8003d10:	84c00e26 	beq	r16,r19,8003d4c <_malloc_r+0x440>
 8003d14:	018003c4 	movi	r6,15
 8003d18:	3580a02e 	bgeu	r6,r22,8003f9c <_malloc_r+0x690>
 8003d1c:	81400117 	ldw	r5,4(r16)
 8003d20:	013ffe04 	movi	r4,-8
 8003d24:	b0bffd04 	addi	r2,r22,-12
 8003d28:	1104703a 	and	r2,r2,r4
 8003d2c:	2900004c 	andi	r4,r5,1
 8003d30:	1108b03a 	or	r4,r2,r4
 8003d34:	81000115 	stw	r4,4(r16)
 8003d38:	01400144 	movi	r5,5
 8003d3c:	8089883a 	add	r4,r16,r2
 8003d40:	21400115 	stw	r5,4(r4)
 8003d44:	21400215 	stw	r5,8(r4)
 8003d48:	3080c036 	bltu	r6,r2,800404c <_malloc_r+0x740>
 8003d4c:	008200b4 	movhi	r2,2050
 8003d50:	1087e104 	addi	r2,r2,8068
 8003d54:	11000017 	ldw	r4,0(r2)
 8003d58:	20c0012e 	bgeu	r4,r3,8003d60 <_malloc_r+0x454>
 8003d5c:	10c00015 	stw	r3,0(r2)
 8003d60:	008200b4 	movhi	r2,2050
 8003d64:	1087e004 	addi	r2,r2,8064
 8003d68:	11000017 	ldw	r4,0(r2)
 8003d6c:	9c000217 	ldw	r16,8(r19)
 8003d70:	20c0012e 	bgeu	r4,r3,8003d78 <_malloc_r+0x46c>
 8003d74:	10c00015 	stw	r3,0(r2)
 8003d78:	80c00117 	ldw	r3,4(r16)
 8003d7c:	00bfff04 	movi	r2,-4
 8003d80:	1886703a 	and	r3,r3,r2
 8003d84:	1c45c83a 	sub	r2,r3,r17
 8003d88:	1c400236 	bltu	r3,r17,8003d94 <_malloc_r+0x488>
 8003d8c:	00c003c4 	movi	r3,15
 8003d90:	18800416 	blt	r3,r2,8003da4 <_malloc_r+0x498>
 8003d94:	9009883a 	mov	r4,r18
 8003d98:	801a8c40 	call	801a8c4 <__malloc_unlock>
 8003d9c:	0005883a 	mov	r2,zero
 8003da0:	003f0706 	br	80039c0 <__alt_data_end+0xfc0039c0>
 8003da4:	88c00054 	ori	r3,r17,1
 8003da8:	80c00115 	stw	r3,4(r16)
 8003dac:	8463883a 	add	r17,r16,r17
 8003db0:	10800054 	ori	r2,r2,1
 8003db4:	9c400215 	stw	r17,8(r19)
 8003db8:	88800115 	stw	r2,4(r17)
 8003dbc:	9009883a 	mov	r4,r18
 8003dc0:	801a8c40 	call	801a8c4 <__malloc_unlock>
 8003dc4:	80800204 	addi	r2,r16,8
 8003dc8:	003efd06 	br	80039c0 <__alt_data_end+0xfc0039c0>
 8003dcc:	00800504 	movi	r2,20
 8003dd0:	10c0482e 	bgeu	r2,r3,8003ef4 <_malloc_r+0x5e8>
 8003dd4:	00801504 	movi	r2,84
 8003dd8:	10c06836 	bltu	r2,r3,8003f7c <_malloc_r+0x670>
 8003ddc:	8806d33a 	srli	r3,r17,12
 8003de0:	19c01b84 	addi	r7,r3,110
 8003de4:	39cb883a 	add	r5,r7,r7
 8003de8:	003f0c06 	br	8003a1c <__alt_data_end+0xfc003a1c>
 8003dec:	3804d27a 	srli	r2,r7,9
 8003df0:	01000104 	movi	r4,4
 8003df4:	2080422e 	bgeu	r4,r2,8003f00 <_malloc_r+0x5f4>
 8003df8:	01000504 	movi	r4,20
 8003dfc:	20807c36 	bltu	r4,r2,8003ff0 <_malloc_r+0x6e4>
 8003e00:	110016c4 	addi	r4,r2,91
 8003e04:	210b883a 	add	r5,r4,r4
 8003e08:	294b883a 	add	r5,r5,r5
 8003e0c:	294b883a 	add	r5,r5,r5
 8003e10:	994b883a 	add	r5,r19,r5
 8003e14:	28800217 	ldw	r2,8(r5)
 8003e18:	020200b4 	movhi	r8,2050
 8003e1c:	423a7c04 	addi	r8,r8,-5648
 8003e20:	11406326 	beq	r2,r5,8003fb0 <_malloc_r+0x6a4>
 8003e24:	01bfff04 	movi	r6,-4
 8003e28:	11000117 	ldw	r4,4(r2)
 8003e2c:	2188703a 	and	r4,r4,r6
 8003e30:	3900022e 	bgeu	r7,r4,8003e3c <_malloc_r+0x530>
 8003e34:	10800217 	ldw	r2,8(r2)
 8003e38:	28bffb1e 	bne	r5,r2,8003e28 <__alt_data_end+0xfc003e28>
 8003e3c:	11800317 	ldw	r6,12(r2)
 8003e40:	99000117 	ldw	r4,4(r19)
 8003e44:	81800315 	stw	r6,12(r16)
 8003e48:	80800215 	stw	r2,8(r16)
 8003e4c:	34000215 	stw	r16,8(r6)
 8003e50:	14000315 	stw	r16,12(r2)
 8003e54:	003f2706 	br	8003af4 <__alt_data_end+0xfc003af4>
 8003e58:	88c00054 	ori	r3,r17,1
 8003e5c:	80c00115 	stw	r3,4(r16)
 8003e60:	8463883a 	add	r17,r16,r17
 8003e64:	34400515 	stw	r17,20(r6)
 8003e68:	34400415 	stw	r17,16(r6)
 8003e6c:	10c00054 	ori	r3,r2,1
 8003e70:	8a400315 	stw	r9,12(r17)
 8003e74:	8a400215 	stw	r9,8(r17)
 8003e78:	88c00115 	stw	r3,4(r17)
 8003e7c:	88a3883a 	add	r17,r17,r2
 8003e80:	88800015 	stw	r2,0(r17)
 8003e84:	9009883a 	mov	r4,r18
 8003e88:	801a8c40 	call	801a8c4 <__malloc_unlock>
 8003e8c:	80800204 	addi	r2,r16,8
 8003e90:	003ecb06 	br	80039c0 <__alt_data_end+0xfc0039c0>
 8003e94:	31000117 	ldw	r4,4(r6)
 8003e98:	003f1606 	br	8003af4 <__alt_data_end+0xfc003af4>
 8003e9c:	63000044 	addi	r12,r12,1
 8003ea0:	608000cc 	andi	r2,r12,3
 8003ea4:	5ac00204 	addi	r11,r11,8
 8003ea8:	103f2a1e 	bne	r2,zero,8003b54 <__alt_data_end+0xfc003b54>
 8003eac:	00002106 	br	8003f34 <_malloc_r+0x628>
 8003eb0:	80800204 	addi	r2,r16,8
 8003eb4:	84000517 	ldw	r16,20(r16)
 8003eb8:	143eb31e 	bne	r2,r16,8003988 <__alt_data_end+0xfc003988>
 8003ebc:	18c00084 	addi	r3,r3,2
 8003ec0:	003eec06 	br	8003a74 <__alt_data_end+0xfc003a74>
 8003ec4:	8085883a 	add	r2,r16,r2
 8003ec8:	10c00117 	ldw	r3,4(r2)
 8003ecc:	81000317 	ldw	r4,12(r16)
 8003ed0:	81400217 	ldw	r5,8(r16)
 8003ed4:	18c00054 	ori	r3,r3,1
 8003ed8:	10c00115 	stw	r3,4(r2)
 8003edc:	29000315 	stw	r4,12(r5)
 8003ee0:	21400215 	stw	r5,8(r4)
 8003ee4:	9009883a 	mov	r4,r18
 8003ee8:	801a8c40 	call	801a8c4 <__malloc_unlock>
 8003eec:	80800204 	addi	r2,r16,8
 8003ef0:	003eb306 	br	80039c0 <__alt_data_end+0xfc0039c0>
 8003ef4:	19c016c4 	addi	r7,r3,91
 8003ef8:	39cb883a 	add	r5,r7,r7
 8003efc:	003ec706 	br	8003a1c <__alt_data_end+0xfc003a1c>
 8003f00:	3804d1ba 	srli	r2,r7,6
 8003f04:	11000e04 	addi	r4,r2,56
 8003f08:	210b883a 	add	r5,r4,r4
 8003f0c:	003fbe06 	br	8003e08 <__alt_data_end+0xfc003e08>
 8003f10:	84ff5d26 	beq	r16,r19,8003c88 <__alt_data_end+0xfc003c88>
 8003f14:	9c000217 	ldw	r16,8(r19)
 8003f18:	00bfff04 	movi	r2,-4
 8003f1c:	80c00117 	ldw	r3,4(r16)
 8003f20:	1886703a 	and	r3,r3,r2
 8003f24:	003f9706 	br	8003d84 <__alt_data_end+0xfc003d84>
 8003f28:	52800017 	ldw	r10,0(r10)
 8003f2c:	18ffffc4 	addi	r3,r3,-1
 8003f30:	50805c1e 	bne	r10,r2,80040a4 <_malloc_r+0x798>
 8003f34:	190000cc 	andi	r4,r3,3
 8003f38:	50bffe04 	addi	r2,r10,-8
 8003f3c:	203ffa1e 	bne	r4,zero,8003f28 <__alt_data_end+0xfc003f28>
 8003f40:	98800117 	ldw	r2,4(r19)
 8003f44:	0146303a 	nor	r3,zero,r5
 8003f48:	1884703a 	and	r2,r3,r2
 8003f4c:	98800115 	stw	r2,4(r19)
 8003f50:	294b883a 	add	r5,r5,r5
 8003f54:	117f2e36 	bltu	r2,r5,8003c10 <__alt_data_end+0xfc003c10>
 8003f58:	283f2d26 	beq	r5,zero,8003c10 <__alt_data_end+0xfc003c10>
 8003f5c:	1146703a 	and	r3,r2,r5
 8003f60:	1800521e 	bne	r3,zero,80040ac <_malloc_r+0x7a0>
 8003f64:	6007883a 	mov	r3,r12
 8003f68:	294b883a 	add	r5,r5,r5
 8003f6c:	1148703a 	and	r4,r2,r5
 8003f70:	18c00104 	addi	r3,r3,4
 8003f74:	203ffc26 	beq	r4,zero,8003f68 <__alt_data_end+0xfc003f68>
 8003f78:	003ef006 	br	8003b3c <__alt_data_end+0xfc003b3c>
 8003f7c:	00805504 	movi	r2,340
 8003f80:	10c01336 	bltu	r2,r3,8003fd0 <_malloc_r+0x6c4>
 8003f84:	8806d3fa 	srli	r3,r17,15
 8003f88:	19c01dc4 	addi	r7,r3,119
 8003f8c:	39cb883a 	add	r5,r7,r7
 8003f90:	003ea206 	br	8003a1c <__alt_data_end+0xfc003a1c>
 8003f94:	00c40004 	movi	r3,4096
 8003f98:	003f4d06 	br	8003cd0 <__alt_data_end+0xfc003cd0>
 8003f9c:	00800044 	movi	r2,1
 8003fa0:	a0800115 	stw	r2,4(r20)
 8003fa4:	a021883a 	mov	r16,r20
 8003fa8:	0007883a 	mov	r3,zero
 8003fac:	003f7506 	br	8003d84 <__alt_data_end+0xfc003d84>
 8003fb0:	200bd0ba 	srai	r5,r4,2
 8003fb4:	01800044 	movi	r6,1
 8003fb8:	41000117 	ldw	r4,4(r8)
 8003fbc:	314a983a 	sll	r5,r6,r5
 8003fc0:	100d883a 	mov	r6,r2
 8003fc4:	2908b03a 	or	r4,r5,r4
 8003fc8:	41000115 	stw	r4,4(r8)
 8003fcc:	003f9d06 	br	8003e44 <__alt_data_end+0xfc003e44>
 8003fd0:	00815504 	movi	r2,1364
 8003fd4:	10c01336 	bltu	r2,r3,8004024 <_malloc_r+0x718>
 8003fd8:	8806d4ba 	srli	r3,r17,18
 8003fdc:	19c01f04 	addi	r7,r3,124
 8003fe0:	39cb883a 	add	r5,r7,r7
 8003fe4:	003e8d06 	br	8003a1c <__alt_data_end+0xfc003a1c>
 8003fe8:	ad400404 	addi	r21,r21,16
 8003fec:	003f1d06 	br	8003c64 <__alt_data_end+0xfc003c64>
 8003ff0:	01001504 	movi	r4,84
 8003ff4:	20801c36 	bltu	r4,r2,8004068 <_malloc_r+0x75c>
 8003ff8:	3804d33a 	srli	r2,r7,12
 8003ffc:	11001b84 	addi	r4,r2,110
 8004000:	210b883a 	add	r5,r4,r4
 8004004:	003f8006 	br	8003e08 <__alt_data_end+0xfc003e08>
 8004008:	3083ffcc 	andi	r2,r6,4095
 800400c:	103f241e 	bne	r2,zero,8003ca0 <__alt_data_end+0xfc003ca0>
 8004010:	99000217 	ldw	r4,8(r19)
 8004014:	ad85883a 	add	r2,r21,r22
 8004018:	10800054 	ori	r2,r2,1
 800401c:	20800115 	stw	r2,4(r4)
 8004020:	003f4a06 	br	8003d4c <__alt_data_end+0xfc003d4c>
 8004024:	01403f04 	movi	r5,252
 8004028:	01c01f84 	movi	r7,126
 800402c:	003e7b06 	br	8003a1c <__alt_data_end+0xfc003a1c>
 8004030:	00c00044 	movi	r3,1
 8004034:	002b883a 	mov	r21,zero
 8004038:	003f3006 	br	8003cfc <__alt_data_end+0xfc003cfc>
 800403c:	008200b4 	movhi	r2,2050
 8004040:	10809104 	addi	r2,r2,580
 8004044:	15000015 	stw	r20,0(r2)
 8004048:	003f1b06 	br	8003cb8 <__alt_data_end+0xfc003cb8>
 800404c:	9009883a 	mov	r4,r18
 8004050:	81400204 	addi	r5,r16,8
 8004054:	800d1780 	call	800d178 <_free_r>
 8004058:	008200b4 	movhi	r2,2050
 800405c:	108a3104 	addi	r2,r2,10436
 8004060:	10c00017 	ldw	r3,0(r2)
 8004064:	003f3906 	br	8003d4c <__alt_data_end+0xfc003d4c>
 8004068:	01005504 	movi	r4,340
 800406c:	20800436 	bltu	r4,r2,8004080 <_malloc_r+0x774>
 8004070:	3804d3fa 	srli	r2,r7,15
 8004074:	11001dc4 	addi	r4,r2,119
 8004078:	210b883a 	add	r5,r4,r4
 800407c:	003f6206 	br	8003e08 <__alt_data_end+0xfc003e08>
 8004080:	01015504 	movi	r4,1364
 8004084:	20800436 	bltu	r4,r2,8004098 <_malloc_r+0x78c>
 8004088:	3804d4ba 	srli	r2,r7,18
 800408c:	11001f04 	addi	r4,r2,124
 8004090:	210b883a 	add	r5,r4,r4
 8004094:	003f5c06 	br	8003e08 <__alt_data_end+0xfc003e08>
 8004098:	01403f04 	movi	r5,252
 800409c:	01001f84 	movi	r4,126
 80040a0:	003f5906 	br	8003e08 <__alt_data_end+0xfc003e08>
 80040a4:	98800117 	ldw	r2,4(r19)
 80040a8:	003fa906 	br	8003f50 <__alt_data_end+0xfc003f50>
 80040ac:	6007883a 	mov	r3,r12
 80040b0:	003ea206 	br	8003b3c <__alt_data_end+0xfc003b3c>

080040b4 <memset>:
 80040b4:	20c000cc 	andi	r3,r4,3
 80040b8:	2005883a 	mov	r2,r4
 80040bc:	18004326 	beq	r3,zero,80041cc <memset+0x118>
 80040c0:	31ffffc4 	addi	r7,r6,-1
 80040c4:	30004026 	beq	r6,zero,80041c8 <memset+0x114>
 80040c8:	2813883a 	mov	r9,r5
 80040cc:	200d883a 	mov	r6,r4
 80040d0:	2007883a 	mov	r3,r4
 80040d4:	00000406 	br	80040e8 <memset+0x34>
 80040d8:	3a3fffc4 	addi	r8,r7,-1
 80040dc:	31800044 	addi	r6,r6,1
 80040e0:	38003926 	beq	r7,zero,80041c8 <memset+0x114>
 80040e4:	400f883a 	mov	r7,r8
 80040e8:	18c00044 	addi	r3,r3,1
 80040ec:	32400005 	stb	r9,0(r6)
 80040f0:	1a0000cc 	andi	r8,r3,3
 80040f4:	403ff81e 	bne	r8,zero,80040d8 <__alt_data_end+0xfc0040d8>
 80040f8:	010000c4 	movi	r4,3
 80040fc:	21c02d2e 	bgeu	r4,r7,80041b4 <memset+0x100>
 8004100:	29803fcc 	andi	r6,r5,255
 8004104:	3008923a 	slli	r4,r6,8
 8004108:	218cb03a 	or	r6,r4,r6
 800410c:	3008943a 	slli	r4,r6,16
 8004110:	218cb03a 	or	r6,r4,r6
 8004114:	010003c4 	movi	r4,15
 8004118:	21c0182e 	bgeu	r4,r7,800417c <memset+0xc8>
 800411c:	3b3ffc04 	addi	r12,r7,-16
 8004120:	6018d13a 	srli	r12,r12,4
 8004124:	1a000104 	addi	r8,r3,4
 8004128:	1ac00204 	addi	r11,r3,8
 800412c:	6008913a 	slli	r4,r12,4
 8004130:	1a800304 	addi	r10,r3,12
 8004134:	1813883a 	mov	r9,r3
 8004138:	21000504 	addi	r4,r4,20
 800413c:	1909883a 	add	r4,r3,r4
 8004140:	49800015 	stw	r6,0(r9)
 8004144:	41800015 	stw	r6,0(r8)
 8004148:	59800015 	stw	r6,0(r11)
 800414c:	51800015 	stw	r6,0(r10)
 8004150:	42000404 	addi	r8,r8,16
 8004154:	4a400404 	addi	r9,r9,16
 8004158:	5ac00404 	addi	r11,r11,16
 800415c:	52800404 	addi	r10,r10,16
 8004160:	413ff71e 	bne	r8,r4,8004140 <__alt_data_end+0xfc004140>
 8004164:	63000044 	addi	r12,r12,1
 8004168:	6018913a 	slli	r12,r12,4
 800416c:	39c003cc 	andi	r7,r7,15
 8004170:	010000c4 	movi	r4,3
 8004174:	1b07883a 	add	r3,r3,r12
 8004178:	21c00e2e 	bgeu	r4,r7,80041b4 <memset+0x100>
 800417c:	1813883a 	mov	r9,r3
 8004180:	3811883a 	mov	r8,r7
 8004184:	010000c4 	movi	r4,3
 8004188:	49800015 	stw	r6,0(r9)
 800418c:	423fff04 	addi	r8,r8,-4
 8004190:	4a400104 	addi	r9,r9,4
 8004194:	223ffc36 	bltu	r4,r8,8004188 <__alt_data_end+0xfc004188>
 8004198:	393fff04 	addi	r4,r7,-4
 800419c:	2008d0ba 	srli	r4,r4,2
 80041a0:	39c000cc 	andi	r7,r7,3
 80041a4:	21000044 	addi	r4,r4,1
 80041a8:	2109883a 	add	r4,r4,r4
 80041ac:	2109883a 	add	r4,r4,r4
 80041b0:	1907883a 	add	r3,r3,r4
 80041b4:	38000426 	beq	r7,zero,80041c8 <memset+0x114>
 80041b8:	19cf883a 	add	r7,r3,r7
 80041bc:	19400005 	stb	r5,0(r3)
 80041c0:	18c00044 	addi	r3,r3,1
 80041c4:	19fffd1e 	bne	r3,r7,80041bc <__alt_data_end+0xfc0041bc>
 80041c8:	f800283a 	ret
 80041cc:	2007883a 	mov	r3,r4
 80041d0:	300f883a 	mov	r7,r6
 80041d4:	003fc806 	br	80040f8 <__alt_data_end+0xfc0040f8>

080041d8 <_printf_r>:
 80041d8:	defffd04 	addi	sp,sp,-12
 80041dc:	dfc00015 	stw	ra,0(sp)
 80041e0:	d9800115 	stw	r6,4(sp)
 80041e4:	d9c00215 	stw	r7,8(sp)
 80041e8:	280d883a 	mov	r6,r5
 80041ec:	21400217 	ldw	r5,8(r4)
 80041f0:	d9c00104 	addi	r7,sp,4
 80041f4:	80072580 	call	8007258 <___vfprintf_internal_r>
 80041f8:	dfc00017 	ldw	ra,0(sp)
 80041fc:	dec00304 	addi	sp,sp,12
 8004200:	f800283a 	ret

08004204 <printf>:
 8004204:	defffc04 	addi	sp,sp,-16
 8004208:	dfc00015 	stw	ra,0(sp)
 800420c:	d9400115 	stw	r5,4(sp)
 8004210:	d9800215 	stw	r6,8(sp)
 8004214:	d9c00315 	stw	r7,12(sp)
 8004218:	008200b4 	movhi	r2,2050
 800421c:	10809004 	addi	r2,r2,576
 8004220:	10800017 	ldw	r2,0(r2)
 8004224:	200b883a 	mov	r5,r4
 8004228:	d9800104 	addi	r6,sp,4
 800422c:	11000217 	ldw	r4,8(r2)
 8004230:	80093540 	call	8009354 <__vfprintf_internal>
 8004234:	dfc00017 	ldw	ra,0(sp)
 8004238:	dec00404 	addi	sp,sp,16
 800423c:	f800283a 	ret

08004240 <_putchar_r>:
 8004240:	21800217 	ldw	r6,8(r4)
 8004244:	800f3c01 	jmpi	800f3c0 <_putc_r>

08004248 <putchar>:
 8004248:	008200b4 	movhi	r2,2050
 800424c:	10809004 	addi	r2,r2,576
 8004250:	200b883a 	mov	r5,r4
 8004254:	11000017 	ldw	r4,0(r2)
 8004258:	21800217 	ldw	r6,8(r4)
 800425c:	800f3c01 	jmpi	800f3c0 <_putc_r>

08004260 <_puts_r>:
 8004260:	defff604 	addi	sp,sp,-40
 8004264:	dc000715 	stw	r16,28(sp)
 8004268:	2021883a 	mov	r16,r4
 800426c:	2809883a 	mov	r4,r5
 8004270:	dc400815 	stw	r17,32(sp)
 8004274:	dfc00915 	stw	ra,36(sp)
 8004278:	2823883a 	mov	r17,r5
 800427c:	80049680 	call	8004968 <strlen>
 8004280:	00c200b4 	movhi	r3,2050
 8004284:	18c09004 	addi	r3,r3,576
 8004288:	18c00017 	ldw	r3,0(r3)
 800428c:	11000044 	addi	r4,r2,1
 8004290:	d8800115 	stw	r2,4(sp)
 8004294:	18c00217 	ldw	r3,8(r3)
 8004298:	014200b4 	movhi	r5,2050
 800429c:	2977d304 	addi	r5,r5,-8372
 80042a0:	1880030b 	ldhu	r2,12(r3)
 80042a4:	d9400215 	stw	r5,8(sp)
 80042a8:	d9000615 	stw	r4,24(sp)
 80042ac:	01400044 	movi	r5,1
 80042b0:	01000084 	movi	r4,2
 80042b4:	d9000515 	stw	r4,20(sp)
 80042b8:	dc400015 	stw	r17,0(sp)
 80042bc:	d9400315 	stw	r5,12(sp)
 80042c0:	dec00415 	stw	sp,16(sp)
 80042c4:	1108000c 	andi	r4,r2,8192
 80042c8:	2000061e 	bne	r4,zero,80042e4 <_puts_r+0x84>
 80042cc:	19401917 	ldw	r5,100(r3)
 80042d0:	0137ffc4 	movi	r4,-8193
 80042d4:	10880014 	ori	r2,r2,8192
 80042d8:	2908703a 	and	r4,r5,r4
 80042dc:	1880030d 	sth	r2,12(r3)
 80042e0:	19001915 	stw	r4,100(r3)
 80042e4:	81400217 	ldw	r5,8(r16)
 80042e8:	8009883a 	mov	r4,r16
 80042ec:	d9800404 	addi	r6,sp,16
 80042f0:	800d4680 	call	800d468 <__sfvwrite_r>
 80042f4:	1000061e 	bne	r2,zero,8004310 <_puts_r+0xb0>
 80042f8:	00800284 	movi	r2,10
 80042fc:	dfc00917 	ldw	ra,36(sp)
 8004300:	dc400817 	ldw	r17,32(sp)
 8004304:	dc000717 	ldw	r16,28(sp)
 8004308:	dec00a04 	addi	sp,sp,40
 800430c:	f800283a 	ret
 8004310:	00bfffc4 	movi	r2,-1
 8004314:	003ff906 	br	80042fc <__alt_data_end+0xfc0042fc>

08004318 <puts>:
 8004318:	008200b4 	movhi	r2,2050
 800431c:	10809004 	addi	r2,r2,576
 8004320:	200b883a 	mov	r5,r4
 8004324:	11000017 	ldw	r4,0(r2)
 8004328:	80042601 	jmpi	8004260 <_puts_r>

0800432c <_sbrk_r>:
 800432c:	defffd04 	addi	sp,sp,-12
 8004330:	dc000015 	stw	r16,0(sp)
 8004334:	040200b4 	movhi	r16,2050
 8004338:	dc400115 	stw	r17,4(sp)
 800433c:	8407e304 	addi	r16,r16,8076
 8004340:	2023883a 	mov	r17,r4
 8004344:	2809883a 	mov	r4,r5
 8004348:	dfc00215 	stw	ra,8(sp)
 800434c:	80000015 	stw	zero,0(r16)
 8004350:	801ad240 	call	801ad24 <sbrk>
 8004354:	00ffffc4 	movi	r3,-1
 8004358:	10c00526 	beq	r2,r3,8004370 <_sbrk_r+0x44>
 800435c:	dfc00217 	ldw	ra,8(sp)
 8004360:	dc400117 	ldw	r17,4(sp)
 8004364:	dc000017 	ldw	r16,0(sp)
 8004368:	dec00304 	addi	sp,sp,12
 800436c:	f800283a 	ret
 8004370:	80c00017 	ldw	r3,0(r16)
 8004374:	183ff926 	beq	r3,zero,800435c <__alt_data_end+0xfc00435c>
 8004378:	88c00015 	stw	r3,0(r17)
 800437c:	003ff706 	br	800435c <__alt_data_end+0xfc00435c>

08004380 <scanf>:
 8004380:	defffc04 	addi	sp,sp,-16
 8004384:	dfc00015 	stw	ra,0(sp)
 8004388:	d9400115 	stw	r5,4(sp)
 800438c:	d9800215 	stw	r6,8(sp)
 8004390:	d9c00315 	stw	r7,12(sp)
 8004394:	008200b4 	movhi	r2,2050
 8004398:	10809004 	addi	r2,r2,576
 800439c:	200d883a 	mov	r6,r4
 80043a0:	11000017 	ldw	r4,0(r2)
 80043a4:	d9c00104 	addi	r7,sp,4
 80043a8:	21400117 	ldw	r5,4(r4)
 80043ac:	80093780 	call	8009378 <__svfscanf_r>
 80043b0:	dfc00017 	ldw	ra,0(sp)
 80043b4:	dec00404 	addi	sp,sp,16
 80043b8:	f800283a 	ret

080043bc <_scanf_r>:
 80043bc:	defffd04 	addi	sp,sp,-12
 80043c0:	dfc00015 	stw	ra,0(sp)
 80043c4:	d9800115 	stw	r6,4(sp)
 80043c8:	d9c00215 	stw	r7,8(sp)
 80043cc:	280d883a 	mov	r6,r5
 80043d0:	21400117 	ldw	r5,4(r4)
 80043d4:	d9c00104 	addi	r7,sp,4
 80043d8:	80093780 	call	8009378 <__svfscanf_r>
 80043dc:	dfc00017 	ldw	ra,0(sp)
 80043e0:	dec00304 	addi	sp,sp,12
 80043e4:	f800283a 	ret

080043e8 <_init_signal_r>:
 80043e8:	2080b717 	ldw	r2,732(r4)
 80043ec:	defffe04 	addi	sp,sp,-8
 80043f0:	dc000015 	stw	r16,0(sp)
 80043f4:	dfc00115 	stw	ra,4(sp)
 80043f8:	2021883a 	mov	r16,r4
 80043fc:	10000526 	beq	r2,zero,8004414 <_init_signal_r+0x2c>
 8004400:	0005883a 	mov	r2,zero
 8004404:	dfc00117 	ldw	ra,4(sp)
 8004408:	dc000017 	ldw	r16,0(sp)
 800440c:	dec00204 	addi	sp,sp,8
 8004410:	f800283a 	ret
 8004414:	01402004 	movi	r5,128
 8004418:	800390c0 	call	800390c <_malloc_r>
 800441c:	8080b715 	stw	r2,732(r16)
 8004420:	10000926 	beq	r2,zero,8004448 <_init_signal_r+0x60>
 8004424:	0007883a 	mov	r3,zero
 8004428:	01002004 	movi	r4,128
 800442c:	00000106 	br	8004434 <_init_signal_r+0x4c>
 8004430:	8080b717 	ldw	r2,732(r16)
 8004434:	10c5883a 	add	r2,r2,r3
 8004438:	10000015 	stw	zero,0(r2)
 800443c:	18c00104 	addi	r3,r3,4
 8004440:	193ffb1e 	bne	r3,r4,8004430 <__alt_data_end+0xfc004430>
 8004444:	003fee06 	br	8004400 <__alt_data_end+0xfc004400>
 8004448:	00bfffc4 	movi	r2,-1
 800444c:	003fed06 	br	8004404 <__alt_data_end+0xfc004404>

08004450 <_signal_r>:
 8004450:	00c007c4 	movi	r3,31
 8004454:	19401536 	bltu	r3,r5,80044ac <_signal_r+0x5c>
 8004458:	2080b717 	ldw	r2,732(r4)
 800445c:	defffc04 	addi	sp,sp,-16
 8004460:	dc800215 	stw	r18,8(sp)
 8004464:	dc400115 	stw	r17,4(sp)
 8004468:	dc000015 	stw	r16,0(sp)
 800446c:	dfc00315 	stw	ra,12(sp)
 8004470:	3023883a 	mov	r17,r6
 8004474:	2021883a 	mov	r16,r4
 8004478:	2825883a 	mov	r18,r5
 800447c:	10000f26 	beq	r2,zero,80044bc <_signal_r+0x6c>
 8004480:	948b883a 	add	r5,r18,r18
 8004484:	294b883a 	add	r5,r5,r5
 8004488:	114b883a 	add	r5,r2,r5
 800448c:	28800017 	ldw	r2,0(r5)
 8004490:	2c400015 	stw	r17,0(r5)
 8004494:	dfc00317 	ldw	ra,12(sp)
 8004498:	dc800217 	ldw	r18,8(sp)
 800449c:	dc400117 	ldw	r17,4(sp)
 80044a0:	dc000017 	ldw	r16,0(sp)
 80044a4:	dec00404 	addi	sp,sp,16
 80044a8:	f800283a 	ret
 80044ac:	00c00584 	movi	r3,22
 80044b0:	20c00015 	stw	r3,0(r4)
 80044b4:	00bfffc4 	movi	r2,-1
 80044b8:	f800283a 	ret
 80044bc:	80043e80 	call	80043e8 <_init_signal_r>
 80044c0:	1000021e 	bne	r2,zero,80044cc <_signal_r+0x7c>
 80044c4:	8080b717 	ldw	r2,732(r16)
 80044c8:	003fed06 	br	8004480 <__alt_data_end+0xfc004480>
 80044cc:	00bfffc4 	movi	r2,-1
 80044d0:	003ff006 	br	8004494 <__alt_data_end+0xfc004494>

080044d4 <_raise_r>:
 80044d4:	008007c4 	movi	r2,31
 80044d8:	11402936 	bltu	r2,r5,8004580 <_raise_r+0xac>
 80044dc:	20c0b717 	ldw	r3,732(r4)
 80044e0:	defffd04 	addi	sp,sp,-12
 80044e4:	dc400115 	stw	r17,4(sp)
 80044e8:	dc000015 	stw	r16,0(sp)
 80044ec:	dfc00215 	stw	ra,8(sp)
 80044f0:	2023883a 	mov	r17,r4
 80044f4:	2821883a 	mov	r16,r5
 80044f8:	18001726 	beq	r3,zero,8004558 <_raise_r+0x84>
 80044fc:	2945883a 	add	r2,r5,r5
 8004500:	1085883a 	add	r2,r2,r2
 8004504:	1887883a 	add	r3,r3,r2
 8004508:	19400017 	ldw	r5,0(r3)
 800450c:	28001226 	beq	r5,zero,8004558 <_raise_r+0x84>
 8004510:	00800044 	movi	r2,1
 8004514:	28800e26 	beq	r5,r2,8004550 <_raise_r+0x7c>
 8004518:	013fffc4 	movi	r4,-1
 800451c:	29000926 	beq	r5,r4,8004544 <_raise_r+0x70>
 8004520:	18000015 	stw	zero,0(r3)
 8004524:	8009883a 	mov	r4,r16
 8004528:	283ee83a 	callr	r5
 800452c:	0005883a 	mov	r2,zero
 8004530:	dfc00217 	ldw	ra,8(sp)
 8004534:	dc400117 	ldw	r17,4(sp)
 8004538:	dc000017 	ldw	r16,0(sp)
 800453c:	dec00304 	addi	sp,sp,12
 8004540:	f800283a 	ret
 8004544:	00c00584 	movi	r3,22
 8004548:	88c00015 	stw	r3,0(r17)
 800454c:	003ff806 	br	8004530 <__alt_data_end+0xfc004530>
 8004550:	0005883a 	mov	r2,zero
 8004554:	003ff606 	br	8004530 <__alt_data_end+0xfc004530>
 8004558:	8809883a 	mov	r4,r17
 800455c:	80046e40 	call	80046e4 <_getpid_r>
 8004560:	8809883a 	mov	r4,r17
 8004564:	100b883a 	mov	r5,r2
 8004568:	800d883a 	mov	r6,r16
 800456c:	dfc00217 	ldw	ra,8(sp)
 8004570:	dc400117 	ldw	r17,4(sp)
 8004574:	dc000017 	ldw	r16,0(sp)
 8004578:	dec00304 	addi	sp,sp,12
 800457c:	800468c1 	jmpi	800468c <_kill_r>
 8004580:	00800584 	movi	r2,22
 8004584:	20800015 	stw	r2,0(r4)
 8004588:	00bfffc4 	movi	r2,-1
 800458c:	f800283a 	ret

08004590 <__sigtramp_r>:
 8004590:	008007c4 	movi	r2,31
 8004594:	11402436 	bltu	r2,r5,8004628 <__sigtramp_r+0x98>
 8004598:	20c0b717 	ldw	r3,732(r4)
 800459c:	defffd04 	addi	sp,sp,-12
 80045a0:	dc400115 	stw	r17,4(sp)
 80045a4:	dc000015 	stw	r16,0(sp)
 80045a8:	dfc00215 	stw	ra,8(sp)
 80045ac:	2021883a 	mov	r16,r4
 80045b0:	2823883a 	mov	r17,r5
 80045b4:	18001826 	beq	r3,zero,8004618 <__sigtramp_r+0x88>
 80045b8:	8c45883a 	add	r2,r17,r17
 80045bc:	1085883a 	add	r2,r2,r2
 80045c0:	1885883a 	add	r2,r3,r2
 80045c4:	10c00017 	ldw	r3,0(r2)
 80045c8:	18001126 	beq	r3,zero,8004610 <__sigtramp_r+0x80>
 80045cc:	013fffc4 	movi	r4,-1
 80045d0:	19000d26 	beq	r3,r4,8004608 <__sigtramp_r+0x78>
 80045d4:	01000044 	movi	r4,1
 80045d8:	19000926 	beq	r3,r4,8004600 <__sigtramp_r+0x70>
 80045dc:	10000015 	stw	zero,0(r2)
 80045e0:	8809883a 	mov	r4,r17
 80045e4:	183ee83a 	callr	r3
 80045e8:	0005883a 	mov	r2,zero
 80045ec:	dfc00217 	ldw	ra,8(sp)
 80045f0:	dc400117 	ldw	r17,4(sp)
 80045f4:	dc000017 	ldw	r16,0(sp)
 80045f8:	dec00304 	addi	sp,sp,12
 80045fc:	f800283a 	ret
 8004600:	008000c4 	movi	r2,3
 8004604:	003ff906 	br	80045ec <__alt_data_end+0xfc0045ec>
 8004608:	00800084 	movi	r2,2
 800460c:	003ff706 	br	80045ec <__alt_data_end+0xfc0045ec>
 8004610:	00800044 	movi	r2,1
 8004614:	003ff506 	br	80045ec <__alt_data_end+0xfc0045ec>
 8004618:	80043e80 	call	80043e8 <_init_signal_r>
 800461c:	1000041e 	bne	r2,zero,8004630 <__sigtramp_r+0xa0>
 8004620:	80c0b717 	ldw	r3,732(r16)
 8004624:	003fe406 	br	80045b8 <__alt_data_end+0xfc0045b8>
 8004628:	00bfffc4 	movi	r2,-1
 800462c:	f800283a 	ret
 8004630:	00bfffc4 	movi	r2,-1
 8004634:	003fed06 	br	80045ec <__alt_data_end+0xfc0045ec>

08004638 <raise>:
 8004638:	008200b4 	movhi	r2,2050
 800463c:	10809004 	addi	r2,r2,576
 8004640:	200b883a 	mov	r5,r4
 8004644:	11000017 	ldw	r4,0(r2)
 8004648:	80044d41 	jmpi	80044d4 <_raise_r>

0800464c <signal>:
 800464c:	00c200b4 	movhi	r3,2050
 8004650:	18c09004 	addi	r3,r3,576
 8004654:	2005883a 	mov	r2,r4
 8004658:	19000017 	ldw	r4,0(r3)
 800465c:	280d883a 	mov	r6,r5
 8004660:	100b883a 	mov	r5,r2
 8004664:	80044501 	jmpi	8004450 <_signal_r>

08004668 <_init_signal>:
 8004668:	008200b4 	movhi	r2,2050
 800466c:	10809004 	addi	r2,r2,576
 8004670:	11000017 	ldw	r4,0(r2)
 8004674:	80043e81 	jmpi	80043e8 <_init_signal_r>

08004678 <__sigtramp>:
 8004678:	008200b4 	movhi	r2,2050
 800467c:	10809004 	addi	r2,r2,576
 8004680:	200b883a 	mov	r5,r4
 8004684:	11000017 	ldw	r4,0(r2)
 8004688:	80045901 	jmpi	8004590 <__sigtramp_r>

0800468c <_kill_r>:
 800468c:	defffd04 	addi	sp,sp,-12
 8004690:	dc000015 	stw	r16,0(sp)
 8004694:	040200b4 	movhi	r16,2050
 8004698:	dc400115 	stw	r17,4(sp)
 800469c:	8407e304 	addi	r16,r16,8076
 80046a0:	2023883a 	mov	r17,r4
 80046a4:	2809883a 	mov	r4,r5
 80046a8:	300b883a 	mov	r5,r6
 80046ac:	dfc00215 	stw	ra,8(sp)
 80046b0:	80000015 	stw	zero,0(r16)
 80046b4:	801a4ec0 	call	801a4ec <kill>
 80046b8:	00ffffc4 	movi	r3,-1
 80046bc:	10c00526 	beq	r2,r3,80046d4 <_kill_r+0x48>
 80046c0:	dfc00217 	ldw	ra,8(sp)
 80046c4:	dc400117 	ldw	r17,4(sp)
 80046c8:	dc000017 	ldw	r16,0(sp)
 80046cc:	dec00304 	addi	sp,sp,12
 80046d0:	f800283a 	ret
 80046d4:	80c00017 	ldw	r3,0(r16)
 80046d8:	183ff926 	beq	r3,zero,80046c0 <__alt_data_end+0xfc0046c0>
 80046dc:	88c00015 	stw	r3,0(r17)
 80046e0:	003ff706 	br	80046c0 <__alt_data_end+0xfc0046c0>

080046e4 <_getpid_r>:
 80046e4:	801a3801 	jmpi	801a380 <getpid>

080046e8 <_sprintf_r>:
 80046e8:	deffe404 	addi	sp,sp,-112
 80046ec:	2807883a 	mov	r3,r5
 80046f0:	dfc01a15 	stw	ra,104(sp)
 80046f4:	d9c01b15 	stw	r7,108(sp)
 80046f8:	00a00034 	movhi	r2,32768
 80046fc:	10bfffc4 	addi	r2,r2,-1
 8004700:	02008204 	movi	r8,520
 8004704:	d8800215 	stw	r2,8(sp)
 8004708:	d8800515 	stw	r2,20(sp)
 800470c:	d80b883a 	mov	r5,sp
 8004710:	d9c01b04 	addi	r7,sp,108
 8004714:	00bfffc4 	movi	r2,-1
 8004718:	d8c00015 	stw	r3,0(sp)
 800471c:	d8c00415 	stw	r3,16(sp)
 8004720:	da00030d 	sth	r8,12(sp)
 8004724:	d880038d 	sth	r2,14(sp)
 8004728:	80051e80 	call	80051e8 <___svfprintf_internal_r>
 800472c:	d8c00017 	ldw	r3,0(sp)
 8004730:	18000005 	stb	zero,0(r3)
 8004734:	dfc01a17 	ldw	ra,104(sp)
 8004738:	dec01c04 	addi	sp,sp,112
 800473c:	f800283a 	ret

08004740 <sprintf>:
 8004740:	deffe304 	addi	sp,sp,-116
 8004744:	2007883a 	mov	r3,r4
 8004748:	dfc01a15 	stw	ra,104(sp)
 800474c:	d9801b15 	stw	r6,108(sp)
 8004750:	d9c01c15 	stw	r7,112(sp)
 8004754:	010200b4 	movhi	r4,2050
 8004758:	21009004 	addi	r4,r4,576
 800475c:	21000017 	ldw	r4,0(r4)
 8004760:	00a00034 	movhi	r2,32768
 8004764:	10bfffc4 	addi	r2,r2,-1
 8004768:	280d883a 	mov	r6,r5
 800476c:	02008204 	movi	r8,520
 8004770:	d8800215 	stw	r2,8(sp)
 8004774:	d8800515 	stw	r2,20(sp)
 8004778:	d80b883a 	mov	r5,sp
 800477c:	d9c01b04 	addi	r7,sp,108
 8004780:	00bfffc4 	movi	r2,-1
 8004784:	d8c00015 	stw	r3,0(sp)
 8004788:	d8c00415 	stw	r3,16(sp)
 800478c:	da00030d 	sth	r8,12(sp)
 8004790:	d880038d 	sth	r2,14(sp)
 8004794:	80051e80 	call	80051e8 <___svfprintf_internal_r>
 8004798:	d8c00017 	ldw	r3,0(sp)
 800479c:	18000005 	stb	zero,0(r3)
 80047a0:	dfc01a17 	ldw	ra,104(sp)
 80047a4:	dec01d04 	addi	sp,sp,116
 80047a8:	f800283a 	ret

080047ac <strcat>:
 80047ac:	defffe04 	addi	sp,sp,-8
 80047b0:	dc000015 	stw	r16,0(sp)
 80047b4:	dfc00115 	stw	ra,4(sp)
 80047b8:	208000cc 	andi	r2,r4,3
 80047bc:	2021883a 	mov	r16,r4
 80047c0:	1000111e 	bne	r2,zero,8004808 <strcat+0x5c>
 80047c4:	20800017 	ldw	r2,0(r4)
 80047c8:	027fbff4 	movhi	r9,65279
 80047cc:	4a7fbfc4 	addi	r9,r9,-257
 80047d0:	0086303a 	nor	r3,zero,r2
 80047d4:	02202074 	movhi	r8,32897
 80047d8:	1245883a 	add	r2,r2,r9
 80047dc:	42202004 	addi	r8,r8,-32640
 80047e0:	10c4703a 	and	r2,r2,r3
 80047e4:	1204703a 	and	r2,r2,r8
 80047e8:	1000071e 	bne	r2,zero,8004808 <strcat+0x5c>
 80047ec:	21000104 	addi	r4,r4,4
 80047f0:	21800017 	ldw	r6,0(r4)
 80047f4:	324f883a 	add	r7,r6,r9
 80047f8:	018c303a 	nor	r6,zero,r6
 80047fc:	398c703a 	and	r6,r7,r6
 8004800:	320c703a 	and	r6,r6,r8
 8004804:	303ff926 	beq	r6,zero,80047ec <__alt_data_end+0xfc0047ec>
 8004808:	20800007 	ldb	r2,0(r4)
 800480c:	10000326 	beq	r2,zero,800481c <strcat+0x70>
 8004810:	21000044 	addi	r4,r4,1
 8004814:	21800007 	ldb	r6,0(r4)
 8004818:	303ffd1e 	bne	r6,zero,8004810 <__alt_data_end+0xfc004810>
 800481c:	80048d80 	call	80048d8 <strcpy>
 8004820:	8005883a 	mov	r2,r16
 8004824:	dfc00117 	ldw	ra,4(sp)
 8004828:	dc000017 	ldw	r16,0(sp)
 800482c:	dec00204 	addi	sp,sp,8
 8004830:	f800283a 	ret

08004834 <strcmp>:
 8004834:	2144b03a 	or	r2,r4,r5
 8004838:	108000cc 	andi	r2,r2,3
 800483c:	1000171e 	bne	r2,zero,800489c <strcmp+0x68>
 8004840:	20800017 	ldw	r2,0(r4)
 8004844:	28c00017 	ldw	r3,0(r5)
 8004848:	10c0141e 	bne	r2,r3,800489c <strcmp+0x68>
 800484c:	027fbff4 	movhi	r9,65279
 8004850:	4a7fbfc4 	addi	r9,r9,-257
 8004854:	0086303a 	nor	r3,zero,r2
 8004858:	02202074 	movhi	r8,32897
 800485c:	1245883a 	add	r2,r2,r9
 8004860:	42202004 	addi	r8,r8,-32640
 8004864:	10c4703a 	and	r2,r2,r3
 8004868:	1204703a 	and	r2,r2,r8
 800486c:	10000226 	beq	r2,zero,8004878 <strcmp+0x44>
 8004870:	00001706 	br	80048d0 <strcmp+0x9c>
 8004874:	1000161e 	bne	r2,zero,80048d0 <strcmp+0x9c>
 8004878:	21000104 	addi	r4,r4,4
 800487c:	20c00017 	ldw	r3,0(r4)
 8004880:	29400104 	addi	r5,r5,4
 8004884:	29800017 	ldw	r6,0(r5)
 8004888:	1a4f883a 	add	r7,r3,r9
 800488c:	00c4303a 	nor	r2,zero,r3
 8004890:	3884703a 	and	r2,r7,r2
 8004894:	1204703a 	and	r2,r2,r8
 8004898:	19bff626 	beq	r3,r6,8004874 <__alt_data_end+0xfc004874>
 800489c:	20800007 	ldb	r2,0(r4)
 80048a0:	1000051e 	bne	r2,zero,80048b8 <strcmp+0x84>
 80048a4:	00000606 	br	80048c0 <strcmp+0x8c>
 80048a8:	21000044 	addi	r4,r4,1
 80048ac:	20800007 	ldb	r2,0(r4)
 80048b0:	29400044 	addi	r5,r5,1
 80048b4:	10000226 	beq	r2,zero,80048c0 <strcmp+0x8c>
 80048b8:	28c00007 	ldb	r3,0(r5)
 80048bc:	10fffa26 	beq	r2,r3,80048a8 <__alt_data_end+0xfc0048a8>
 80048c0:	20800003 	ldbu	r2,0(r4)
 80048c4:	28c00003 	ldbu	r3,0(r5)
 80048c8:	10c5c83a 	sub	r2,r2,r3
 80048cc:	f800283a 	ret
 80048d0:	0005883a 	mov	r2,zero
 80048d4:	f800283a 	ret

080048d8 <strcpy>:
 80048d8:	2906b03a 	or	r3,r5,r4
 80048dc:	18c000cc 	andi	r3,r3,3
 80048e0:	2005883a 	mov	r2,r4
 80048e4:	1800161e 	bne	r3,zero,8004940 <strcpy+0x68>
 80048e8:	29c00017 	ldw	r7,0(r5)
 80048ec:	02ffbff4 	movhi	r11,65279
 80048f0:	5affbfc4 	addi	r11,r11,-257
 80048f4:	02a02074 	movhi	r10,32897
 80048f8:	01c8303a 	nor	r4,zero,r7
 80048fc:	3ac7883a 	add	r3,r7,r11
 8004900:	52a02004 	addi	r10,r10,-32640
 8004904:	20c6703a 	and	r3,r4,r3
 8004908:	1a86703a 	and	r3,r3,r10
 800490c:	18000c1e 	bne	r3,zero,8004940 <strcpy+0x68>
 8004910:	1011883a 	mov	r8,r2
 8004914:	41c00015 	stw	r7,0(r8)
 8004918:	29400104 	addi	r5,r5,4
 800491c:	29c00017 	ldw	r7,0(r5)
 8004920:	41800104 	addi	r6,r8,4
 8004924:	3011883a 	mov	r8,r6
 8004928:	01d2303a 	nor	r9,zero,r7
 800492c:	3ac7883a 	add	r3,r7,r11
 8004930:	48c6703a 	and	r3,r9,r3
 8004934:	1a86703a 	and	r3,r3,r10
 8004938:	183ff626 	beq	r3,zero,8004914 <__alt_data_end+0xfc004914>
 800493c:	00000106 	br	8004944 <strcpy+0x6c>
 8004940:	100d883a 	mov	r6,r2
 8004944:	28c00003 	ldbu	r3,0(r5)
 8004948:	31800044 	addi	r6,r6,1
 800494c:	29400044 	addi	r5,r5,1
 8004950:	30ffffc5 	stb	r3,-1(r6)
 8004954:	18c03fcc 	andi	r3,r3,255
 8004958:	18c0201c 	xori	r3,r3,128
 800495c:	18ffe004 	addi	r3,r3,-128
 8004960:	183ff81e 	bne	r3,zero,8004944 <__alt_data_end+0xfc004944>
 8004964:	f800283a 	ret

08004968 <strlen>:
 8004968:	208000cc 	andi	r2,r4,3
 800496c:	10002026 	beq	r2,zero,80049f0 <strlen+0x88>
 8004970:	20800007 	ldb	r2,0(r4)
 8004974:	10002026 	beq	r2,zero,80049f8 <strlen+0x90>
 8004978:	2005883a 	mov	r2,r4
 800497c:	00000206 	br	8004988 <strlen+0x20>
 8004980:	10c00007 	ldb	r3,0(r2)
 8004984:	18001826 	beq	r3,zero,80049e8 <strlen+0x80>
 8004988:	10800044 	addi	r2,r2,1
 800498c:	10c000cc 	andi	r3,r2,3
 8004990:	183ffb1e 	bne	r3,zero,8004980 <__alt_data_end+0xfc004980>
 8004994:	10c00017 	ldw	r3,0(r2)
 8004998:	01ffbff4 	movhi	r7,65279
 800499c:	39ffbfc4 	addi	r7,r7,-257
 80049a0:	00ca303a 	nor	r5,zero,r3
 80049a4:	01a02074 	movhi	r6,32897
 80049a8:	19c7883a 	add	r3,r3,r7
 80049ac:	31a02004 	addi	r6,r6,-32640
 80049b0:	1946703a 	and	r3,r3,r5
 80049b4:	1986703a 	and	r3,r3,r6
 80049b8:	1800091e 	bne	r3,zero,80049e0 <strlen+0x78>
 80049bc:	10800104 	addi	r2,r2,4
 80049c0:	10c00017 	ldw	r3,0(r2)
 80049c4:	19cb883a 	add	r5,r3,r7
 80049c8:	00c6303a 	nor	r3,zero,r3
 80049cc:	28c6703a 	and	r3,r5,r3
 80049d0:	1986703a 	and	r3,r3,r6
 80049d4:	183ff926 	beq	r3,zero,80049bc <__alt_data_end+0xfc0049bc>
 80049d8:	00000106 	br	80049e0 <strlen+0x78>
 80049dc:	10800044 	addi	r2,r2,1
 80049e0:	10c00007 	ldb	r3,0(r2)
 80049e4:	183ffd1e 	bne	r3,zero,80049dc <__alt_data_end+0xfc0049dc>
 80049e8:	1105c83a 	sub	r2,r2,r4
 80049ec:	f800283a 	ret
 80049f0:	2005883a 	mov	r2,r4
 80049f4:	003fe706 	br	8004994 <__alt_data_end+0xfc004994>
 80049f8:	0005883a 	mov	r2,zero
 80049fc:	f800283a 	ret

08004a00 <critical_factorization>:
 8004a00:	02c00044 	movi	r11,1
 8004a04:	5811883a 	mov	r8,r11
 8004a08:	0013883a 	mov	r9,zero
 8004a0c:	00bfffc4 	movi	r2,-1
 8004a10:	2087883a 	add	r3,r4,r2
 8004a14:	1a0f883a 	add	r7,r3,r8
 8004a18:	4247883a 	add	r3,r8,r9
 8004a1c:	20d5883a 	add	r10,r4,r3
 8004a20:	1940102e 	bgeu	r3,r5,8004a64 <critical_factorization+0x64>
 8004a24:	52800003 	ldbu	r10,0(r10)
 8004a28:	39c00003 	ldbu	r7,0(r7)
 8004a2c:	51c0042e 	bgeu	r10,r7,8004a40 <critical_factorization+0x40>
 8004a30:	1897c83a 	sub	r11,r3,r2
 8004a34:	1813883a 	mov	r9,r3
 8004a38:	02000044 	movi	r8,1
 8004a3c:	003ff406 	br	8004a10 <__alt_data_end+0xfc004a10>
 8004a40:	51c00526 	beq	r10,r7,8004a58 <critical_factorization+0x58>
 8004a44:	02c00044 	movi	r11,1
 8004a48:	4805883a 	mov	r2,r9
 8004a4c:	5811883a 	mov	r8,r11
 8004a50:	4ad3883a 	add	r9,r9,r11
 8004a54:	003fee06 	br	8004a10 <__alt_data_end+0xfc004a10>
 8004a58:	42c02226 	beq	r8,r11,8004ae4 <critical_factorization+0xe4>
 8004a5c:	42000044 	addi	r8,r8,1
 8004a60:	003feb06 	br	8004a10 <__alt_data_end+0xfc004a10>
 8004a64:	03000044 	movi	r12,1
 8004a68:	32c00015 	stw	r11,0(r6)
 8004a6c:	6011883a 	mov	r8,r12
 8004a70:	0013883a 	mov	r9,zero
 8004a74:	02ffffc4 	movi	r11,-1
 8004a78:	22c7883a 	add	r3,r4,r11
 8004a7c:	1a0f883a 	add	r7,r3,r8
 8004a80:	4247883a 	add	r3,r8,r9
 8004a84:	20d5883a 	add	r10,r4,r3
 8004a88:	1940102e 	bgeu	r3,r5,8004acc <critical_factorization+0xcc>
 8004a8c:	52800003 	ldbu	r10,0(r10)
 8004a90:	39c00003 	ldbu	r7,0(r7)
 8004a94:	3a80042e 	bgeu	r7,r10,8004aa8 <critical_factorization+0xa8>
 8004a98:	1ad9c83a 	sub	r12,r3,r11
 8004a9c:	1813883a 	mov	r9,r3
 8004aa0:	02000044 	movi	r8,1
 8004aa4:	003ff406 	br	8004a78 <__alt_data_end+0xfc004a78>
 8004aa8:	51c00526 	beq	r10,r7,8004ac0 <critical_factorization+0xc0>
 8004aac:	03000044 	movi	r12,1
 8004ab0:	4817883a 	mov	r11,r9
 8004ab4:	6011883a 	mov	r8,r12
 8004ab8:	4b13883a 	add	r9,r9,r12
 8004abc:	003fee06 	br	8004a78 <__alt_data_end+0xfc004a78>
 8004ac0:	43000b26 	beq	r8,r12,8004af0 <critical_factorization+0xf0>
 8004ac4:	42000044 	addi	r8,r8,1
 8004ac8:	003feb06 	br	8004a78 <__alt_data_end+0xfc004a78>
 8004acc:	5ac00044 	addi	r11,r11,1
 8004ad0:	10800044 	addi	r2,r2,1
 8004ad4:	58800236 	bltu	r11,r2,8004ae0 <critical_factorization+0xe0>
 8004ad8:	33000015 	stw	r12,0(r6)
 8004adc:	5805883a 	mov	r2,r11
 8004ae0:	f800283a 	ret
 8004ae4:	1813883a 	mov	r9,r3
 8004ae8:	02000044 	movi	r8,1
 8004aec:	003fc806 	br	8004a10 <__alt_data_end+0xfc004a10>
 8004af0:	1813883a 	mov	r9,r3
 8004af4:	02000044 	movi	r8,1
 8004af8:	003fdf06 	br	8004a78 <__alt_data_end+0xfc004a78>

08004afc <two_way_long_needle>:
 8004afc:	defef104 	addi	sp,sp,-1084
 8004b00:	dc810715 	stw	r18,1052(sp)
 8004b04:	dc810004 	addi	r18,sp,1024
 8004b08:	df010d15 	stw	fp,1076(sp)
 8004b0c:	dd810b15 	stw	r22,1068(sp)
 8004b10:	dc010515 	stw	r16,1044(sp)
 8004b14:	302d883a 	mov	r22,r6
 8004b18:	2021883a 	mov	r16,r4
 8004b1c:	2839883a 	mov	fp,r5
 8004b20:	3009883a 	mov	r4,r6
 8004b24:	380b883a 	mov	r5,r7
 8004b28:	900d883a 	mov	r6,r18
 8004b2c:	ddc10c15 	stw	r23,1072(sp)
 8004b30:	dc410615 	stw	r17,1048(sp)
 8004b34:	dfc10e15 	stw	ra,1080(sp)
 8004b38:	dd410a15 	stw	r21,1064(sp)
 8004b3c:	dd010915 	stw	r20,1060(sp)
 8004b40:	dcc10815 	stw	r19,1056(sp)
 8004b44:	382f883a 	mov	r23,r7
 8004b48:	8004a000 	call	8004a00 <critical_factorization>
 8004b4c:	1023883a 	mov	r17,r2
 8004b50:	d807883a 	mov	r3,sp
 8004b54:	1dc00015 	stw	r23,0(r3)
 8004b58:	18c00104 	addi	r3,r3,4
 8004b5c:	90fffd1e 	bne	r18,r3,8004b54 <__alt_data_end+0xfc004b54>
 8004b60:	b8000b26 	beq	r23,zero,8004b90 <two_way_long_needle+0x94>
 8004b64:	b93fffc4 	addi	r4,r23,-1
 8004b68:	b007883a 	mov	r3,r22
 8004b6c:	b5cb883a 	add	r5,r22,r23
 8004b70:	18800003 	ldbu	r2,0(r3)
 8004b74:	18c00044 	addi	r3,r3,1
 8004b78:	1085883a 	add	r2,r2,r2
 8004b7c:	1085883a 	add	r2,r2,r2
 8004b80:	d885883a 	add	r2,sp,r2
 8004b84:	11000015 	stw	r4,0(r2)
 8004b88:	213fffc4 	addi	r4,r4,-1
 8004b8c:	197ff81e 	bne	r3,r5,8004b70 <__alt_data_end+0xfc004b70>
 8004b90:	d9410017 	ldw	r5,1024(sp)
 8004b94:	b009883a 	mov	r4,r22
 8004b98:	880d883a 	mov	r6,r17
 8004b9c:	b14b883a 	add	r5,r22,r5
 8004ba0:	800e0680 	call	800e068 <memcmp>
 8004ba4:	1000651e 	bne	r2,zero,8004d3c <two_way_long_needle+0x240>
 8004ba8:	88bfff84 	addi	r2,r17,-2
 8004bac:	b085883a 	add	r2,r22,r2
 8004bb0:	88ffffc4 	addi	r3,r17,-1
 8004bb4:	d8810415 	stw	r2,1040(sp)
 8004bb8:	00800044 	movi	r2,1
 8004bbc:	d8c10115 	stw	r3,1028(sp)
 8004bc0:	1445c83a 	sub	r2,r2,r17
 8004bc4:	b0c7883a 	add	r3,r22,r3
 8004bc8:	0027883a 	mov	r19,zero
 8004bcc:	002b883a 	mov	r21,zero
 8004bd0:	bd3fffc4 	addi	r20,r23,-1
 8004bd4:	d8c10215 	stw	r3,1032(sp)
 8004bd8:	d8810315 	stw	r2,1036(sp)
 8004bdc:	00000706 	br	8004bfc <two_way_long_needle+0x100>
 8004be0:	98000426 	beq	r19,zero,8004bf4 <two_way_long_needle+0xf8>
 8004be4:	d8c10017 	ldw	r3,1024(sp)
 8004be8:	10c0022e 	bgeu	r2,r3,8004bf4 <two_way_long_needle+0xf8>
 8004bec:	b8c5c83a 	sub	r2,r23,r3
 8004bf0:	0027883a 	mov	r19,zero
 8004bf4:	a8ab883a 	add	r21,r21,r2
 8004bf8:	9039883a 	mov	fp,r18
 8004bfc:	ade5883a 	add	r18,r21,r23
 8004c00:	8709883a 	add	r4,r16,fp
 8004c04:	000b883a 	mov	r5,zero
 8004c08:	970dc83a 	sub	r6,r18,fp
 8004c0c:	800df800 	call	800df80 <memchr>
 8004c10:	10003d1e 	bne	r2,zero,8004d08 <two_way_long_needle+0x20c>
 8004c14:	90003c26 	beq	r18,zero,8004d08 <two_way_long_needle+0x20c>
 8004c18:	8485883a 	add	r2,r16,r18
 8004c1c:	10bfffc3 	ldbu	r2,-1(r2)
 8004c20:	1085883a 	add	r2,r2,r2
 8004c24:	1085883a 	add	r2,r2,r2
 8004c28:	d885883a 	add	r2,sp,r2
 8004c2c:	10800017 	ldw	r2,0(r2)
 8004c30:	103feb1e 	bne	r2,zero,8004be0 <__alt_data_end+0xfc004be0>
 8004c34:	9807883a 	mov	r3,r19
 8004c38:	9c40012e 	bgeu	r19,r17,8004c40 <two_way_long_needle+0x144>
 8004c3c:	8807883a 	mov	r3,r17
 8004c40:	1d000f2e 	bgeu	r3,r20,8004c80 <two_way_long_needle+0x184>
 8004c44:	8545883a 	add	r2,r16,r21
 8004c48:	b0c9883a 	add	r4,r22,r3
 8004c4c:	10c5883a 	add	r2,r2,r3
 8004c50:	21000003 	ldbu	r4,0(r4)
 8004c54:	10800003 	ldbu	r2,0(r2)
 8004c58:	20800426 	beq	r4,r2,8004c6c <two_way_long_needle+0x170>
 8004c5c:	00002506 	br	8004cf4 <two_way_long_needle+0x1f8>
 8004c60:	11000003 	ldbu	r4,0(r2)
 8004c64:	40800003 	ldbu	r2,0(r8)
 8004c68:	2080221e 	bne	r4,r2,8004cf4 <two_way_long_needle+0x1f8>
 8004c6c:	18c00044 	addi	r3,r3,1
 8004c70:	1d51883a 	add	r8,r3,r21
 8004c74:	b0c5883a 	add	r2,r22,r3
 8004c78:	8211883a 	add	r8,r16,r8
 8004c7c:	1d3ff836 	bltu	r3,r20,8004c60 <__alt_data_end+0xfc004c60>
 8004c80:	d9810117 	ldw	r6,1028(sp)
 8004c84:	9c40762e 	bgeu	r19,r17,8004e60 <two_way_long_needle+0x364>
 8004c88:	d8c10117 	ldw	r3,1028(sp)
 8004c8c:	d9010217 	ldw	r4,1032(sp)
 8004c90:	8545883a 	add	r2,r16,r21
 8004c94:	10c5883a 	add	r2,r2,r3
 8004c98:	10800003 	ldbu	r2,0(r2)
 8004c9c:	20c00003 	ldbu	r3,0(r4)
 8004ca0:	18806f1e 	bne	r3,r2,8004e60 <two_way_long_needle+0x364>
 8004ca4:	9b3fffc4 	addi	r12,r19,-1
 8004ca8:	d8810417 	ldw	r2,1040(sp)
 8004cac:	b319883a 	add	r12,r22,r12
 8004cb0:	00000606 	br	8004ccc <two_way_long_needle+0x1d0>
 8004cb4:	11000003 	ldbu	r4,0(r2)
 8004cb8:	1a000003 	ldbu	r8,0(r3)
 8004cbc:	10bfffc4 	addi	r2,r2,-1
 8004cc0:	20c03fcc 	andi	r3,r4,255
 8004cc4:	1a00051e 	bne	r3,r8,8004cdc <two_way_long_needle+0x1e0>
 8004cc8:	280d883a 	mov	r6,r5
 8004ccc:	317fffc4 	addi	r5,r6,-1
 8004cd0:	2d47883a 	add	r3,r5,r21
 8004cd4:	80c7883a 	add	r3,r16,r3
 8004cd8:	133ff61e 	bne	r2,r12,8004cb4 <__alt_data_end+0xfc004cb4>
 8004cdc:	9ac00044 	addi	r11,r19,1
 8004ce0:	32c06136 	bltu	r6,r11,8004e68 <two_way_long_needle+0x36c>
 8004ce4:	dac10017 	ldw	r11,1024(sp)
 8004ce8:	aaeb883a 	add	r21,r21,r11
 8004cec:	bae7c83a 	sub	r19,r23,r11
 8004cf0:	003fc106 	br	8004bf8 <__alt_data_end+0xfc004bf8>
 8004cf4:	d8810317 	ldw	r2,1036(sp)
 8004cf8:	0027883a 	mov	r19,zero
 8004cfc:	154f883a 	add	r7,r2,r21
 8004d00:	38eb883a 	add	r21,r7,r3
 8004d04:	003fbc06 	br	8004bf8 <__alt_data_end+0xfc004bf8>
 8004d08:	0005883a 	mov	r2,zero
 8004d0c:	dfc10e17 	ldw	ra,1080(sp)
 8004d10:	df010d17 	ldw	fp,1076(sp)
 8004d14:	ddc10c17 	ldw	r23,1072(sp)
 8004d18:	dd810b17 	ldw	r22,1068(sp)
 8004d1c:	dd410a17 	ldw	r21,1064(sp)
 8004d20:	dd010917 	ldw	r20,1060(sp)
 8004d24:	dcc10817 	ldw	r19,1056(sp)
 8004d28:	dc810717 	ldw	r18,1052(sp)
 8004d2c:	dc410617 	ldw	r17,1048(sp)
 8004d30:	dc010517 	ldw	r16,1044(sp)
 8004d34:	dec10f04 	addi	sp,sp,1084
 8004d38:	f800283a 	ret
 8004d3c:	bc45c83a 	sub	r2,r23,r17
 8004d40:	14404536 	bltu	r2,r17,8004e58 <two_way_long_needle+0x35c>
 8004d44:	10800044 	addi	r2,r2,1
 8004d48:	88ffffc4 	addi	r3,r17,-1
 8004d4c:	d8c10115 	stw	r3,1028(sp)
 8004d50:	d8810015 	stw	r2,1024(sp)
 8004d54:	b0c7883a 	add	r3,r22,r3
 8004d58:	00800044 	movi	r2,1
 8004d5c:	d8c10315 	stw	r3,1036(sp)
 8004d60:	1445c83a 	sub	r2,r2,r17
 8004d64:	b447883a 	add	r3,r22,r17
 8004d68:	0027883a 	mov	r19,zero
 8004d6c:	bd3fffc4 	addi	r20,r23,-1
 8004d70:	057fffc4 	movi	r21,-1
 8004d74:	d8c10215 	stw	r3,1032(sp)
 8004d78:	d8810415 	stw	r2,1040(sp)
 8004d7c:	9de5883a 	add	r18,r19,r23
 8004d80:	8709883a 	add	r4,r16,fp
 8004d84:	000b883a 	mov	r5,zero
 8004d88:	970dc83a 	sub	r6,r18,fp
 8004d8c:	800df800 	call	800df80 <memchr>
 8004d90:	103fdd1e 	bne	r2,zero,8004d08 <__alt_data_end+0xfc004d08>
 8004d94:	903fdc26 	beq	r18,zero,8004d08 <__alt_data_end+0xfc004d08>
 8004d98:	8485883a 	add	r2,r16,r18
 8004d9c:	10bfffc3 	ldbu	r2,-1(r2)
 8004da0:	1085883a 	add	r2,r2,r2
 8004da4:	1085883a 	add	r2,r2,r2
 8004da8:	d885883a 	add	r2,sp,r2
 8004dac:	10800017 	ldw	r2,0(r2)
 8004db0:	1000221e 	bne	r2,zero,8004e3c <two_way_long_needle+0x340>
 8004db4:	84c5883a 	add	r2,r16,r19
 8004db8:	8d000f2e 	bgeu	r17,r20,8004df8 <two_way_long_needle+0x2fc>
 8004dbc:	d9010217 	ldw	r4,1032(sp)
 8004dc0:	1447883a 	add	r3,r2,r17
 8004dc4:	21400003 	ldbu	r5,0(r4)
 8004dc8:	19000003 	ldbu	r4,0(r3)
 8004dcc:	8807883a 	mov	r3,r17
 8004dd0:	29000426 	beq	r5,r4,8004de4 <two_way_long_needle+0x2e8>
 8004dd4:	00001c06 	br	8004e48 <two_way_long_needle+0x34c>
 8004dd8:	21400003 	ldbu	r5,0(r4)
 8004ddc:	41000003 	ldbu	r4,0(r8)
 8004de0:	2900191e 	bne	r5,r4,8004e48 <two_way_long_needle+0x34c>
 8004de4:	18c00044 	addi	r3,r3,1
 8004de8:	1cd1883a 	add	r8,r3,r19
 8004dec:	b0c9883a 	add	r4,r22,r3
 8004df0:	8211883a 	add	r8,r16,r8
 8004df4:	1d3ff836 	bltu	r3,r20,8004dd8 <__alt_data_end+0xfc004dd8>
 8004df8:	d8c10117 	ldw	r3,1028(sp)
 8004dfc:	883fc326 	beq	r17,zero,8004d0c <__alt_data_end+0xfc004d0c>
 8004e00:	d9410117 	ldw	r5,1028(sp)
 8004e04:	d9810317 	ldw	r6,1036(sp)
 8004e08:	1149883a 	add	r4,r2,r5
 8004e0c:	21000003 	ldbu	r4,0(r4)
 8004e10:	31400003 	ldbu	r5,0(r6)
 8004e14:	2900081e 	bne	r5,r4,8004e38 <two_way_long_needle+0x33c>
 8004e18:	18ffffc4 	addi	r3,r3,-1
 8004e1c:	1cc9883a 	add	r4,r3,r19
 8004e20:	b0cb883a 	add	r5,r22,r3
 8004e24:	8109883a 	add	r4,r16,r4
 8004e28:	1d7fb826 	beq	r3,r21,8004d0c <__alt_data_end+0xfc004d0c>
 8004e2c:	29400003 	ldbu	r5,0(r5)
 8004e30:	21000003 	ldbu	r4,0(r4)
 8004e34:	293ff826 	beq	r5,r4,8004e18 <__alt_data_end+0xfc004e18>
 8004e38:	d8810017 	ldw	r2,1024(sp)
 8004e3c:	98a7883a 	add	r19,r19,r2
 8004e40:	9039883a 	mov	fp,r18
 8004e44:	003fcd06 	br	8004d7c <__alt_data_end+0xfc004d7c>
 8004e48:	d9010417 	ldw	r4,1040(sp)
 8004e4c:	24cf883a 	add	r7,r4,r19
 8004e50:	38e7883a 	add	r19,r7,r3
 8004e54:	003ffa06 	br	8004e40 <__alt_data_end+0xfc004e40>
 8004e58:	8805883a 	mov	r2,r17
 8004e5c:	003fb906 	br	8004d44 <__alt_data_end+0xfc004d44>
 8004e60:	880d883a 	mov	r6,r17
 8004e64:	003f9d06 	br	8004cdc <__alt_data_end+0xfc004cdc>
 8004e68:	8545883a 	add	r2,r16,r21
 8004e6c:	003fa706 	br	8004d0c <__alt_data_end+0xfc004d0c>

08004e70 <strstr>:
 8004e70:	21800007 	ldb	r6,0(r4)
 8004e74:	30003e26 	beq	r6,zero,8004f70 <strstr+0x100>
 8004e78:	28c00007 	ldb	r3,0(r5)
 8004e7c:	18000f26 	beq	r3,zero,8004ebc <strstr+0x4c>
 8004e80:	280f883a 	mov	r7,r5
 8004e84:	2011883a 	mov	r8,r4
 8004e88:	02400044 	movi	r9,1
 8004e8c:	00000206 	br	8004e98 <strstr+0x28>
 8004e90:	38c00007 	ldb	r3,0(r7)
 8004e94:	18000826 	beq	r3,zero,8004eb8 <strstr+0x48>
 8004e98:	42000044 	addi	r8,r8,1
 8004e9c:	30c7003a 	cmpeq	r3,r6,r3
 8004ea0:	41800007 	ldb	r6,0(r8)
 8004ea4:	39c00044 	addi	r7,r7,1
 8004ea8:	48d2703a 	and	r9,r9,r3
 8004eac:	303ff81e 	bne	r6,zero,8004e90 <__alt_data_end+0xfc004e90>
 8004eb0:	38800007 	ldb	r2,0(r7)
 8004eb4:	1000301e 	bne	r2,zero,8004f78 <strstr+0x108>
 8004eb8:	48000226 	beq	r9,zero,8004ec4 <strstr+0x54>
 8004ebc:	2005883a 	mov	r2,r4
 8004ec0:	f800283a 	ret
 8004ec4:	defff104 	addi	sp,sp,-60
 8004ec8:	ddc00c15 	stw	r23,48(sp)
 8004ecc:	dd800b15 	stw	r22,44(sp)
 8004ed0:	dd400a15 	stw	r21,40(sp)
 8004ed4:	dc000515 	stw	r16,20(sp)
 8004ed8:	dfc00e15 	stw	ra,56(sp)
 8004edc:	df000d15 	stw	fp,52(sp)
 8004ee0:	dd000915 	stw	r20,36(sp)
 8004ee4:	dcc00815 	stw	r19,32(sp)
 8004ee8:	dc800715 	stw	r18,28(sp)
 8004eec:	dc400615 	stw	r17,24(sp)
 8004ef0:	282f883a 	mov	r23,r5
 8004ef4:	29400007 	ldb	r5,0(r5)
 8004ef8:	202b883a 	mov	r21,r4
 8004efc:	21000044 	addi	r4,r4,1
 8004f00:	3de1c83a 	sub	r16,r7,r23
 8004f04:	800ff040 	call	800ff04 <strchr>
 8004f08:	102d883a 	mov	r22,r2
 8004f0c:	10006e26 	beq	r2,zero,80050c8 <strstr+0x258>
 8004f10:	00c00044 	movi	r3,1
 8004f14:	80c00a26 	beq	r16,r3,8004f40 <strstr+0xd0>
 8004f18:	ac09883a 	add	r4,r21,r16
 8004f1c:	20800136 	bltu	r4,r2,8004f24 <strstr+0xb4>
 8004f20:	2087c83a 	sub	r3,r4,r2
 8004f24:	008007c4 	movi	r2,31
 8004f28:	1400152e 	bgeu	r2,r16,8004f80 <strstr+0x110>
 8004f2c:	b009883a 	mov	r4,r22
 8004f30:	180b883a 	mov	r5,r3
 8004f34:	b80d883a 	mov	r6,r23
 8004f38:	800f883a 	mov	r7,r16
 8004f3c:	8004afc0 	call	8004afc <two_way_long_needle>
 8004f40:	dfc00e17 	ldw	ra,56(sp)
 8004f44:	df000d17 	ldw	fp,52(sp)
 8004f48:	ddc00c17 	ldw	r23,48(sp)
 8004f4c:	dd800b17 	ldw	r22,44(sp)
 8004f50:	dd400a17 	ldw	r21,40(sp)
 8004f54:	dd000917 	ldw	r20,36(sp)
 8004f58:	dcc00817 	ldw	r19,32(sp)
 8004f5c:	dc800717 	ldw	r18,28(sp)
 8004f60:	dc400617 	ldw	r17,24(sp)
 8004f64:	dc000517 	ldw	r16,20(sp)
 8004f68:	dec00f04 	addi	sp,sp,60
 8004f6c:	f800283a 	ret
 8004f70:	28800007 	ldb	r2,0(r5)
 8004f74:	103fd126 	beq	r2,zero,8004ebc <__alt_data_end+0xfc004ebc>
 8004f78:	0005883a 	mov	r2,zero
 8004f7c:	f800283a 	ret
 8004f80:	b809883a 	mov	r4,r23
 8004f84:	800b883a 	mov	r5,r16
 8004f88:	d80d883a 	mov	r6,sp
 8004f8c:	d8c00415 	stw	r3,16(sp)
 8004f90:	8004a000 	call	8004a00 <critical_factorization>
 8004f94:	d9400017 	ldw	r5,0(sp)
 8004f98:	b809883a 	mov	r4,r23
 8004f9c:	100d883a 	mov	r6,r2
 8004fa0:	b94b883a 	add	r5,r23,r5
 8004fa4:	1039883a 	mov	fp,r2
 8004fa8:	800e0680 	call	800e068 <memcmp>
 8004fac:	d8c00417 	ldw	r3,16(sp)
 8004fb0:	1000471e 	bne	r2,zero,80050d0 <strstr+0x260>
 8004fb4:	e47fffc4 	addi	r17,fp,-1
 8004fb8:	e4bfff84 	addi	r18,fp,-2
 8004fbc:	bc45883a 	add	r2,r23,r17
 8004fc0:	bca5883a 	add	r18,r23,r18
 8004fc4:	04c00044 	movi	r19,1
 8004fc8:	0029883a 	mov	r20,zero
 8004fcc:	002b883a 	mov	r21,zero
 8004fd0:	d8800115 	stw	r2,4(sp)
 8004fd4:	dc800215 	stw	r18,8(sp)
 8004fd8:	9f27c83a 	sub	r19,r19,fp
 8004fdc:	ac25883a 	add	r18,r21,r16
 8004fe0:	b0c9883a 	add	r4,r22,r3
 8004fe4:	000b883a 	mov	r5,zero
 8004fe8:	90cdc83a 	sub	r6,r18,r3
 8004fec:	800df800 	call	800df80 <memchr>
 8004ff0:	1000351e 	bne	r2,zero,80050c8 <strstr+0x258>
 8004ff4:	90003426 	beq	r18,zero,80050c8 <strstr+0x258>
 8004ff8:	a007883a 	mov	r3,r20
 8004ffc:	a700012e 	bgeu	r20,fp,8005004 <strstr+0x194>
 8005000:	e007883a 	mov	r3,fp
 8005004:	1c000f2e 	bgeu	r3,r16,8005044 <strstr+0x1d4>
 8005008:	b0c5883a 	add	r2,r22,r3
 800500c:	b8c9883a 	add	r4,r23,r3
 8005010:	1545883a 	add	r2,r2,r21
 8005014:	21000003 	ldbu	r4,0(r4)
 8005018:	10800003 	ldbu	r2,0(r2)
 800501c:	20800426 	beq	r4,r2,8005030 <strstr+0x1c0>
 8005020:	00002506 	br	80050b8 <strstr+0x248>
 8005024:	11000003 	ldbu	r4,0(r2)
 8005028:	38800003 	ldbu	r2,0(r7)
 800502c:	2080221e 	bne	r4,r2,80050b8 <strstr+0x248>
 8005030:	18c00044 	addi	r3,r3,1
 8005034:	1d4f883a 	add	r7,r3,r21
 8005038:	b8c5883a 	add	r2,r23,r3
 800503c:	b1cf883a 	add	r7,r22,r7
 8005040:	1c3ff836 	bltu	r3,r16,8005024 <__alt_data_end+0xfc005024>
 8005044:	880d883a 	mov	r6,r17
 8005048:	a700632e 	bgeu	r20,fp,80051d8 <strstr+0x368>
 800504c:	d9000117 	ldw	r4,4(sp)
 8005050:	b545883a 	add	r2,r22,r21
 8005054:	1445883a 	add	r2,r2,r17
 8005058:	20c00003 	ldbu	r3,0(r4)
 800505c:	10800003 	ldbu	r2,0(r2)
 8005060:	18805d1e 	bne	r3,r2,80051d8 <strstr+0x368>
 8005064:	a2bfffc4 	addi	r10,r20,-1
 8005068:	d8c00217 	ldw	r3,8(sp)
 800506c:	ba95883a 	add	r10,r23,r10
 8005070:	00000606 	br	800508c <strstr+0x21c>
 8005074:	19000003 	ldbu	r4,0(r3)
 8005078:	11c00003 	ldbu	r7,0(r2)
 800507c:	18ffffc4 	addi	r3,r3,-1
 8005080:	20803fcc 	andi	r2,r4,255
 8005084:	11c0051e 	bne	r2,r7,800509c <strstr+0x22c>
 8005088:	280d883a 	mov	r6,r5
 800508c:	317fffc4 	addi	r5,r6,-1
 8005090:	2d45883a 	add	r2,r5,r21
 8005094:	b085883a 	add	r2,r22,r2
 8005098:	1abff61e 	bne	r3,r10,8005074 <__alt_data_end+0xfc005074>
 800509c:	a2000044 	addi	r8,r20,1
 80050a0:	32004f36 	bltu	r6,r8,80051e0 <strstr+0x370>
 80050a4:	da000017 	ldw	r8,0(sp)
 80050a8:	aa2b883a 	add	r21,r21,r8
 80050ac:	8229c83a 	sub	r20,r16,r8
 80050b0:	9007883a 	mov	r3,r18
 80050b4:	003fc906 	br	8004fdc <__alt_data_end+0xfc004fdc>
 80050b8:	9d6b883a 	add	r21,r19,r21
 80050bc:	a8eb883a 	add	r21,r21,r3
 80050c0:	0029883a 	mov	r20,zero
 80050c4:	003ffa06 	br	80050b0 <__alt_data_end+0xfc0050b0>
 80050c8:	0005883a 	mov	r2,zero
 80050cc:	003f9c06 	br	8004f40 <__alt_data_end+0xfc004f40>
 80050d0:	8705c83a 	sub	r2,r16,fp
 80050d4:	1700012e 	bgeu	r2,fp,80050dc <strstr+0x26c>
 80050d8:	e005883a 	mov	r2,fp
 80050dc:	10800044 	addi	r2,r2,1
 80050e0:	e47fffc4 	addi	r17,fp,-1
 80050e4:	05000044 	movi	r20,1
 80050e8:	a729c83a 	sub	r20,r20,fp
 80050ec:	d8800015 	stw	r2,0(sp)
 80050f0:	b70d883a 	add	r6,r22,fp
 80050f4:	bc45883a 	add	r2,r23,r17
 80050f8:	dd000215 	stw	r20,8(sp)
 80050fc:	002b883a 	mov	r21,zero
 8005100:	bf27883a 	add	r19,r23,fp
 8005104:	d9800115 	stw	r6,4(sp)
 8005108:	d8800315 	stw	r2,12(sp)
 800510c:	053fffc4 	movi	r20,-1
 8005110:	ac25883a 	add	r18,r21,r16
 8005114:	b0c9883a 	add	r4,r22,r3
 8005118:	000b883a 	mov	r5,zero
 800511c:	90cdc83a 	sub	r6,r18,r3
 8005120:	800df800 	call	800df80 <memchr>
 8005124:	103fe81e 	bne	r2,zero,80050c8 <__alt_data_end+0xfc0050c8>
 8005128:	903fe726 	beq	r18,zero,80050c8 <__alt_data_end+0xfc0050c8>
 800512c:	e4000f2e 	bgeu	fp,r16,800516c <strstr+0x2fc>
 8005130:	d8c00117 	ldw	r3,4(sp)
 8005134:	99000003 	ldbu	r4,0(r19)
 8005138:	1d45883a 	add	r2,r3,r21
 800513c:	10800003 	ldbu	r2,0(r2)
 8005140:	e007883a 	mov	r3,fp
 8005144:	20800426 	beq	r4,r2,8005158 <strstr+0x2e8>
 8005148:	00001b06 	br	80051b8 <strstr+0x348>
 800514c:	11000003 	ldbu	r4,0(r2)
 8005150:	38800003 	ldbu	r2,0(r7)
 8005154:	2080181e 	bne	r4,r2,80051b8 <strstr+0x348>
 8005158:	18c00044 	addi	r3,r3,1
 800515c:	1d4f883a 	add	r7,r3,r21
 8005160:	b8c5883a 	add	r2,r23,r3
 8005164:	b1cf883a 	add	r7,r22,r7
 8005168:	1c3ff836 	bltu	r3,r16,800514c <__alt_data_end+0xfc00514c>
 800516c:	8805883a 	mov	r2,r17
 8005170:	b549883a 	add	r4,r22,r21
 8005174:	e0000e26 	beq	fp,zero,80051b0 <strstr+0x340>
 8005178:	d9800317 	ldw	r6,12(sp)
 800517c:	2447883a 	add	r3,r4,r17
 8005180:	18c00003 	ldbu	r3,0(r3)
 8005184:	31400003 	ldbu	r5,0(r6)
 8005188:	28c00426 	beq	r5,r3,800519c <strstr+0x32c>
 800518c:	00000f06 	br	80051cc <strstr+0x35c>
 8005190:	29400003 	ldbu	r5,0(r5)
 8005194:	18c00003 	ldbu	r3,0(r3)
 8005198:	28c00c1e 	bne	r5,r3,80051cc <strstr+0x35c>
 800519c:	10bfffc4 	addi	r2,r2,-1
 80051a0:	1547883a 	add	r3,r2,r21
 80051a4:	b88b883a 	add	r5,r23,r2
 80051a8:	b0c7883a 	add	r3,r22,r3
 80051ac:	153ff81e 	bne	r2,r20,8005190 <__alt_data_end+0xfc005190>
 80051b0:	2005883a 	mov	r2,r4
 80051b4:	003f6206 	br	8004f40 <__alt_data_end+0xfc004f40>
 80051b8:	d9000217 	ldw	r4,8(sp)
 80051bc:	2551883a 	add	r8,r4,r21
 80051c0:	40eb883a 	add	r21,r8,r3
 80051c4:	9007883a 	mov	r3,r18
 80051c8:	003fd106 	br	8005110 <__alt_data_end+0xfc005110>
 80051cc:	d8800017 	ldw	r2,0(sp)
 80051d0:	a8ab883a 	add	r21,r21,r2
 80051d4:	003ffb06 	br	80051c4 <__alt_data_end+0xfc0051c4>
 80051d8:	e00d883a 	mov	r6,fp
 80051dc:	003faf06 	br	800509c <__alt_data_end+0xfc00509c>
 80051e0:	b545883a 	add	r2,r22,r21
 80051e4:	003f5606 	br	8004f40 <__alt_data_end+0xfc004f40>

080051e8 <___svfprintf_internal_r>:
 80051e8:	deffb504 	addi	sp,sp,-300
 80051ec:	dfc04a15 	stw	ra,296(sp)
 80051f0:	dd804715 	stw	r22,284(sp)
 80051f4:	d9002f15 	stw	r4,188(sp)
 80051f8:	282d883a 	mov	r22,r5
 80051fc:	d9802915 	stw	r6,164(sp)
 8005200:	d9c02d15 	stw	r7,180(sp)
 8005204:	df004915 	stw	fp,292(sp)
 8005208:	ddc04815 	stw	r23,288(sp)
 800520c:	dd404615 	stw	r21,280(sp)
 8005210:	dd004515 	stw	r20,276(sp)
 8005214:	dcc04415 	stw	r19,272(sp)
 8005218:	dc804315 	stw	r18,268(sp)
 800521c:	dc404215 	stw	r17,264(sp)
 8005220:	dc004115 	stw	r16,260(sp)
 8005224:	800db580 	call	800db58 <_localeconv_r>
 8005228:	10800017 	ldw	r2,0(r2)
 800522c:	1009883a 	mov	r4,r2
 8005230:	d8803515 	stw	r2,212(sp)
 8005234:	80049680 	call	8004968 <strlen>
 8005238:	d8803915 	stw	r2,228(sp)
 800523c:	b080030b 	ldhu	r2,12(r22)
 8005240:	1080200c 	andi	r2,r2,128
 8005244:	10000226 	beq	r2,zero,8005250 <___svfprintf_internal_r+0x68>
 8005248:	b0800417 	ldw	r2,16(r22)
 800524c:	10067426 	beq	r2,zero,8006c20 <___svfprintf_internal_r+0x1a38>
 8005250:	d9001dc4 	addi	r4,sp,119
 8005254:	ddc01e04 	addi	r23,sp,120
 8005258:	d9400404 	addi	r5,sp,16
 800525c:	050200b4 	movhi	r20,2050
 8005260:	b905c83a 	sub	r2,r23,r4
 8005264:	a537e484 	addi	r20,r20,-8302
 8005268:	d9002815 	stw	r4,160(sp)
 800526c:	d9401e15 	stw	r5,120(sp)
 8005270:	d8002015 	stw	zero,128(sp)
 8005274:	d8001f15 	stw	zero,124(sp)
 8005278:	d8003315 	stw	zero,204(sp)
 800527c:	d8003715 	stw	zero,220(sp)
 8005280:	d8003815 	stw	zero,224(sp)
 8005284:	d8003b15 	stw	zero,236(sp)
 8005288:	d8003a15 	stw	zero,232(sp)
 800528c:	d8003015 	stw	zero,192(sp)
 8005290:	2811883a 	mov	r8,r5
 8005294:	d8803d15 	stw	r2,244(sp)
 8005298:	d8c02917 	ldw	r3,164(sp)
 800529c:	18800007 	ldb	r2,0(r3)
 80052a0:	1001fa26 	beq	r2,zero,8005a8c <___svfprintf_internal_r+0x8a4>
 80052a4:	00c00944 	movi	r3,37
 80052a8:	dc002917 	ldw	r16,164(sp)
 80052ac:	10c0021e 	bne	r2,r3,80052b8 <___svfprintf_internal_r+0xd0>
 80052b0:	00001606 	br	800530c <___svfprintf_internal_r+0x124>
 80052b4:	10c08526 	beq	r2,r3,80054cc <___svfprintf_internal_r+0x2e4>
 80052b8:	84000044 	addi	r16,r16,1
 80052bc:	80800007 	ldb	r2,0(r16)
 80052c0:	103ffc1e 	bne	r2,zero,80052b4 <__alt_data_end+0xfc0052b4>
 80052c4:	d9002917 	ldw	r4,164(sp)
 80052c8:	8123c83a 	sub	r17,r16,r4
 80052cc:	88000f26 	beq	r17,zero,800530c <___svfprintf_internal_r+0x124>
 80052d0:	d8802917 	ldw	r2,164(sp)
 80052d4:	d8c02017 	ldw	r3,128(sp)
 80052d8:	44400115 	stw	r17,4(r8)
 80052dc:	40800015 	stw	r2,0(r8)
 80052e0:	d8801f17 	ldw	r2,124(sp)
 80052e4:	1c47883a 	add	r3,r3,r17
 80052e8:	d8c02015 	stw	r3,128(sp)
 80052ec:	10800044 	addi	r2,r2,1
 80052f0:	d8801f15 	stw	r2,124(sp)
 80052f4:	00c001c4 	movi	r3,7
 80052f8:	18807716 	blt	r3,r2,80054d8 <___svfprintf_internal_r+0x2f0>
 80052fc:	42000204 	addi	r8,r8,8
 8005300:	d8c03017 	ldw	r3,192(sp)
 8005304:	1c47883a 	add	r3,r3,r17
 8005308:	d8c03015 	stw	r3,192(sp)
 800530c:	80800007 	ldb	r2,0(r16)
 8005310:	10007826 	beq	r2,zero,80054f4 <___svfprintf_internal_r+0x30c>
 8005314:	80800044 	addi	r2,r16,1
 8005318:	84000047 	ldb	r16,1(r16)
 800531c:	0027883a 	mov	r19,zero
 8005320:	0039883a 	mov	fp,zero
 8005324:	dcc02a05 	stb	r19,168(sp)
 8005328:	d8002785 	stb	zero,158(sp)
 800532c:	027fffc4 	movi	r9,-1
 8005330:	d8002e15 	stw	zero,184(sp)
 8005334:	04401604 	movi	r17,88
 8005338:	04800244 	movi	r18,9
 800533c:	da002915 	stw	r8,164(sp)
 8005340:	e027883a 	mov	r19,fp
 8005344:	17000044 	addi	fp,r2,1
 8005348:	80bff804 	addi	r2,r16,-32
 800534c:	88830036 	bltu	r17,r2,8005f50 <___svfprintf_internal_r+0xd68>
 8005350:	100490ba 	slli	r2,r2,2
 8005354:	01020034 	movhi	r4,2048
 8005358:	2114da04 	addi	r4,r4,21352
 800535c:	1105883a 	add	r2,r2,r4
 8005360:	10800017 	ldw	r2,0(r2)
 8005364:	1000683a 	jmp	r2
 8005368:	08005d94 	ori	zero,at,374
 800536c:	08005f50 	cmplti	zero,at,381
 8005370:	08005f50 	cmplti	zero,at,381
 8005374:	08005db0 	cmpltui	zero,at,374
 8005378:	08005f50 	cmplti	zero,at,381
 800537c:	08005f50 	cmplti	zero,at,381
 8005380:	08005f50 	cmplti	zero,at,381
 8005384:	08005f50 	cmplti	zero,at,381
 8005388:	08005f50 	cmplti	zero,at,381
 800538c:	08005f50 	cmplti	zero,at,381
 8005390:	08005e9c 	xori	zero,at,378
 8005394:	08005ec4 	addi	zero,at,379
 8005398:	08005f50 	cmplti	zero,at,381
 800539c:	08005554 	ori	zero,at,341
 80053a0:	08005564 	muli	zero,at,341
 80053a4:	08005f50 	cmplti	zero,at,381
 80053a8:	080055b4 	orhi	zero,at,342
 80053ac:	080055c4 	addi	zero,at,343
 80053b0:	080055c4 	addi	zero,at,343
 80053b4:	080055c4 	addi	zero,at,343
 80053b8:	080055c4 	addi	zero,at,343
 80053bc:	080055c4 	addi	zero,at,343
 80053c0:	080055c4 	addi	zero,at,343
 80053c4:	080055c4 	addi	zero,at,343
 80053c8:	080055c4 	addi	zero,at,343
 80053cc:	080055c4 	addi	zero,at,343
 80053d0:	08005f50 	cmplti	zero,at,381
 80053d4:	08005f50 	cmplti	zero,at,381
 80053d8:	08005f50 	cmplti	zero,at,381
 80053dc:	08005f50 	cmplti	zero,at,381
 80053e0:	08005f50 	cmplti	zero,at,381
 80053e4:	08005f50 	cmplti	zero,at,381
 80053e8:	08005f50 	cmplti	zero,at,381
 80053ec:	08005f50 	cmplti	zero,at,381
 80053f0:	08005f50 	cmplti	zero,at,381
 80053f4:	08005f50 	cmplti	zero,at,381
 80053f8:	08005608 	cmpgei	zero,at,344
 80053fc:	08005a94 	ori	zero,at,362
 8005400:	08005f50 	cmplti	zero,at,381
 8005404:	08005a94 	ori	zero,at,362
 8005408:	08005f50 	cmplti	zero,at,381
 800540c:	08005f50 	cmplti	zero,at,381
 8005410:	08005f50 	cmplti	zero,at,381
 8005414:	08005f50 	cmplti	zero,at,381
 8005418:	08005b3c 	xorhi	zero,at,364
 800541c:	08005f50 	cmplti	zero,at,381
 8005420:	08005f50 	cmplti	zero,at,381
 8005424:	08005b4c 	andi	zero,at,365
 8005428:	08005f50 	cmplti	zero,at,381
 800542c:	08005f50 	cmplti	zero,at,381
 8005430:	08005f50 	cmplti	zero,at,381
 8005434:	08005f50 	cmplti	zero,at,381
 8005438:	08005f50 	cmplti	zero,at,381
 800543c:	08005b8c 	andi	zero,at,366
 8005440:	08005f50 	cmplti	zero,at,381
 8005444:	08005f50 	cmplti	zero,at,381
 8005448:	08005ce0 	cmpeqi	zero,at,371
 800544c:	08005f50 	cmplti	zero,at,381
 8005450:	08005f50 	cmplti	zero,at,381
 8005454:	08005f50 	cmplti	zero,at,381
 8005458:	08005f50 	cmplti	zero,at,381
 800545c:	08005f50 	cmplti	zero,at,381
 8005460:	08005f50 	cmplti	zero,at,381
 8005464:	08005f50 	cmplti	zero,at,381
 8005468:	08005f50 	cmplti	zero,at,381
 800546c:	08005f50 	cmplti	zero,at,381
 8005470:	08005f50 	cmplti	zero,at,381
 8005474:	08005d48 	cmpgei	zero,at,373
 8005478:	08005c0c 	andi	zero,at,368
 800547c:	08005a94 	ori	zero,at,362
 8005480:	08005a94 	ori	zero,at,362
 8005484:	08005a94 	ori	zero,at,362
 8005488:	08005c78 	rdprs	zero,at,369
 800548c:	08005c0c 	andi	zero,at,368
 8005490:	08005f50 	cmplti	zero,at,381
 8005494:	08005f50 	cmplti	zero,at,381
 8005498:	08005c88 	cmpgei	zero,at,370
 800549c:	08005f50 	cmplti	zero,at,381
 80054a0:	08005ca0 	cmpeqi	zero,at,370
 80054a4:	08005f14 	ori	zero,at,380
 80054a8:	08005bc0 	call	8005bc <__alt_mem_sdram_controller-0x77ffa44>
 80054ac:	08005e8c 	andi	zero,at,378
 80054b0:	08005f50 	cmplti	zero,at,381
 80054b4:	08005dc0 	call	8005dc <__alt_mem_sdram_controller-0x77ffa24>
 80054b8:	08005f50 	cmplti	zero,at,381
 80054bc:	08005ed8 	cmpnei	zero,at,379
 80054c0:	08005f50 	cmplti	zero,at,381
 80054c4:	08005f50 	cmplti	zero,at,381
 80054c8:	08005e40 	call	8005e4 <__alt_mem_sdram_controller-0x77ffa1c>
 80054cc:	d9402917 	ldw	r5,164(sp)
 80054d0:	8163c83a 	sub	r17,r16,r5
 80054d4:	003f7d06 	br	80052cc <__alt_data_end+0xfc0052cc>
 80054d8:	d9002f17 	ldw	r4,188(sp)
 80054dc:	b00b883a 	mov	r5,r22
 80054e0:	b80d883a 	mov	r6,r23
 80054e4:	80123540 	call	8012354 <__ssprint_r>
 80054e8:	1000081e 	bne	r2,zero,800550c <___svfprintf_internal_r+0x324>
 80054ec:	da000404 	addi	r8,sp,16
 80054f0:	003f8306 	br	8005300 <__alt_data_end+0xfc005300>
 80054f4:	d8802017 	ldw	r2,128(sp)
 80054f8:	10000426 	beq	r2,zero,800550c <___svfprintf_internal_r+0x324>
 80054fc:	d9002f17 	ldw	r4,188(sp)
 8005500:	b00b883a 	mov	r5,r22
 8005504:	d9801e04 	addi	r6,sp,120
 8005508:	80123540 	call	8012354 <__ssprint_r>
 800550c:	b080030b 	ldhu	r2,12(r22)
 8005510:	1080100c 	andi	r2,r2,64
 8005514:	10000d1e 	bne	r2,zero,800554c <___svfprintf_internal_r+0x364>
 8005518:	d8803017 	ldw	r2,192(sp)
 800551c:	dfc04a17 	ldw	ra,296(sp)
 8005520:	df004917 	ldw	fp,292(sp)
 8005524:	ddc04817 	ldw	r23,288(sp)
 8005528:	dd804717 	ldw	r22,284(sp)
 800552c:	dd404617 	ldw	r21,280(sp)
 8005530:	dd004517 	ldw	r20,276(sp)
 8005534:	dcc04417 	ldw	r19,272(sp)
 8005538:	dc804317 	ldw	r18,268(sp)
 800553c:	dc404217 	ldw	r17,264(sp)
 8005540:	dc004117 	ldw	r16,260(sp)
 8005544:	dec04b04 	addi	sp,sp,300
 8005548:	f800283a 	ret
 800554c:	00bfffc4 	movi	r2,-1
 8005550:	003ff206 	br	800551c <__alt_data_end+0xfc00551c>
 8005554:	e005883a 	mov	r2,fp
 8005558:	9cc00114 	ori	r19,r19,4
 800555c:	e4000007 	ldb	r16,0(fp)
 8005560:	003f7806 	br	8005344 <__alt_data_end+0xfc005344>
 8005564:	e4000007 	ldb	r16,0(fp)
 8005568:	01000a84 	movi	r4,42
 800556c:	e0800044 	addi	r2,fp,1
 8005570:	81071026 	beq	r16,r4,80071b4 <___svfprintf_internal_r+0x1fcc>
 8005574:	857ff404 	addi	r21,r16,-48
 8005578:	1039883a 	mov	fp,r2
 800557c:	0013883a 	mov	r9,zero
 8005580:	957f7136 	bltu	r18,r21,8005348 <__alt_data_end+0xfc005348>
 8005584:	0009883a 	mov	r4,zero
 8005588:	01400284 	movi	r5,10
 800558c:	800334c0 	call	800334c <__mulsi3>
 8005590:	e4000007 	ldb	r16,0(fp)
 8005594:	a889883a 	add	r4,r21,r2
 8005598:	e7000044 	addi	fp,fp,1
 800559c:	857ff404 	addi	r21,r16,-48
 80055a0:	957ff92e 	bgeu	r18,r21,8005588 <__alt_data_end+0xfc005588>
 80055a4:	2013883a 	mov	r9,r4
 80055a8:	203f670e 	bge	r4,zero,8005348 <__alt_data_end+0xfc005348>
 80055ac:	027fffc4 	movi	r9,-1
 80055b0:	003f6506 	br	8005348 <__alt_data_end+0xfc005348>
 80055b4:	9cc02014 	ori	r19,r19,128
 80055b8:	e005883a 	mov	r2,fp
 80055bc:	e4000007 	ldb	r16,0(fp)
 80055c0:	003f6006 	br	8005344 <__alt_data_end+0xfc005344>
 80055c4:	857ff404 	addi	r21,r16,-48
 80055c8:	d8002e15 	stw	zero,184(sp)
 80055cc:	e021883a 	mov	r16,fp
 80055d0:	0009883a 	mov	r4,zero
 80055d4:	da402b15 	stw	r9,172(sp)
 80055d8:	01400284 	movi	r5,10
 80055dc:	800334c0 	call	800334c <__mulsi3>
 80055e0:	81400007 	ldb	r5,0(r16)
 80055e4:	1549883a 	add	r4,r2,r21
 80055e8:	e7000044 	addi	fp,fp,1
 80055ec:	2d7ff404 	addi	r21,r5,-48
 80055f0:	e021883a 	mov	r16,fp
 80055f4:	957ff82e 	bgeu	r18,r21,80055d8 <__alt_data_end+0xfc0055d8>
 80055f8:	2821883a 	mov	r16,r5
 80055fc:	d9002e15 	stw	r4,184(sp)
 8005600:	da402b17 	ldw	r9,172(sp)
 8005604:	003f5006 	br	8005348 <__alt_data_end+0xfc005348>
 8005608:	da002917 	ldw	r8,164(sp)
 800560c:	df002915 	stw	fp,164(sp)
 8005610:	9839883a 	mov	fp,r19
 8005614:	dcc02a03 	ldbu	r19,168(sp)
 8005618:	e7000414 	ori	fp,fp,16
 800561c:	e080080c 	andi	r2,fp,32
 8005620:	dcc02785 	stb	r19,158(sp)
 8005624:	d8c02d17 	ldw	r3,180(sp)
 8005628:	10018026 	beq	r2,zero,8005c2c <___svfprintf_internal_r+0xa44>
 800562c:	d9002d17 	ldw	r4,180(sp)
 8005630:	18800117 	ldw	r2,4(r3)
 8005634:	1c800017 	ldw	r18,0(r3)
 8005638:	21000204 	addi	r4,r4,8
 800563c:	d9002d15 	stw	r4,180(sp)
 8005640:	102b883a 	mov	r21,r2
 8005644:	10018216 	blt	r2,zero,8005c50 <___svfprintf_internal_r+0xa68>
 8005648:	dcc02783 	ldbu	r19,158(sp)
 800564c:	da403215 	stw	r9,200(sp)
 8005650:	00800044 	movi	r2,1
 8005654:	9546b03a 	or	r3,r18,r21
 8005658:	48000216 	blt	r9,zero,8005664 <___svfprintf_internal_r+0x47c>
 800565c:	013fdfc4 	movi	r4,-129
 8005660:	e138703a 	and	fp,fp,r4
 8005664:	1802471e 	bne	r3,zero,8005f84 <___svfprintf_internal_r+0xd9c>
 8005668:	48035226 	beq	r9,zero,80063b4 <___svfprintf_internal_r+0x11cc>
 800566c:	10803fcc 	andi	r2,r2,255
 8005670:	00c00044 	movi	r3,1
 8005674:	10c26626 	beq	r2,r3,8006010 <___svfprintf_internal_r+0xe28>
 8005678:	00c00084 	movi	r3,2
 800567c:	10c2e826 	beq	r2,r3,8006220 <___svfprintf_internal_r+0x1038>
 8005680:	b807883a 	mov	r3,r23
 8005684:	9008d0fa 	srli	r4,r18,3
 8005688:	a80a977a 	slli	r5,r21,29
 800568c:	a82ad0fa 	srli	r21,r21,3
 8005690:	948001cc 	andi	r18,r18,7
 8005694:	90800c04 	addi	r2,r18,48
 8005698:	18ffffc4 	addi	r3,r3,-1
 800569c:	2924b03a 	or	r18,r5,r4
 80056a0:	18800005 	stb	r2,0(r3)
 80056a4:	9548b03a 	or	r4,r18,r21
 80056a8:	203ff61e 	bne	r4,zero,8005684 <__alt_data_end+0xfc005684>
 80056ac:	e100004c 	andi	r4,fp,1
 80056b0:	d8c03115 	stw	r3,196(sp)
 80056b4:	2002e826 	beq	r4,zero,8006258 <___svfprintf_internal_r+0x1070>
 80056b8:	10803fcc 	andi	r2,r2,255
 80056bc:	1080201c 	xori	r2,r2,128
 80056c0:	10bfe004 	addi	r2,r2,-128
 80056c4:	01000c04 	movi	r4,48
 80056c8:	11056d26 	beq	r2,r4,8006c80 <___svfprintf_internal_r+0x1a98>
 80056cc:	d9403117 	ldw	r5,196(sp)
 80056d0:	193fffc5 	stb	r4,-1(r3)
 80056d4:	297fffc4 	addi	r5,r5,-1
 80056d8:	d9403115 	stw	r5,196(sp)
 80056dc:	b963c83a 	sub	r17,r23,r5
 80056e0:	8805883a 	mov	r2,r17
 80056e4:	8a40010e 	bge	r17,r9,80056ec <___svfprintf_internal_r+0x504>
 80056e8:	4805883a 	mov	r2,r9
 80056ec:	d8802a15 	stw	r2,168(sp)
 80056f0:	d8003415 	stw	zero,208(sp)
 80056f4:	98803fcc 	andi	r2,r19,255
 80056f8:	1080201c 	xori	r2,r2,128
 80056fc:	10bfe004 	addi	r2,r2,-128
 8005700:	10000326 	beq	r2,zero,8005710 <___svfprintf_internal_r+0x528>
 8005704:	d8c02a17 	ldw	r3,168(sp)
 8005708:	18c00044 	addi	r3,r3,1
 800570c:	d8c02a15 	stw	r3,168(sp)
 8005710:	e0c0008c 	andi	r3,fp,2
 8005714:	d8c02b15 	stw	r3,172(sp)
 8005718:	18000326 	beq	r3,zero,8005728 <___svfprintf_internal_r+0x540>
 800571c:	d8c02a17 	ldw	r3,168(sp)
 8005720:	18c00084 	addi	r3,r3,2
 8005724:	d8c02a15 	stw	r3,168(sp)
 8005728:	e0c0210c 	andi	r3,fp,132
 800572c:	d8c02c15 	stw	r3,176(sp)
 8005730:	1802121e 	bne	r3,zero,8005f7c <___svfprintf_internal_r+0xd94>
 8005734:	d9002e17 	ldw	r4,184(sp)
 8005738:	d8c02a17 	ldw	r3,168(sp)
 800573c:	20ebc83a 	sub	r21,r4,r3
 8005740:	05420e0e 	bge	zero,r21,8005f7c <___svfprintf_internal_r+0xd94>
 8005744:	02400404 	movi	r9,16
 8005748:	d8c02017 	ldw	r3,128(sp)
 800574c:	d8801f17 	ldw	r2,124(sp)
 8005750:	4d45aa0e 	bge	r9,r21,8006dfc <___svfprintf_internal_r+0x1c14>
 8005754:	014200b4 	movhi	r5,2050
 8005758:	a809883a 	mov	r4,r21
 800575c:	2977e884 	addi	r5,r5,-8286
 8005760:	dc003c15 	stw	r16,240(sp)
 8005764:	882b883a 	mov	r21,r17
 8005768:	d9403615 	stw	r5,216(sp)
 800576c:	4827883a 	mov	r19,r9
 8005770:	048001c4 	movi	r18,7
 8005774:	dc002f17 	ldw	r16,188(sp)
 8005778:	2023883a 	mov	r17,r4
 800577c:	00000306 	br	800578c <___svfprintf_internal_r+0x5a4>
 8005780:	8c7ffc04 	addi	r17,r17,-16
 8005784:	42000204 	addi	r8,r8,8
 8005788:	9c40130e 	bge	r19,r17,80057d8 <___svfprintf_internal_r+0x5f0>
 800578c:	010200b4 	movhi	r4,2050
 8005790:	18c00404 	addi	r3,r3,16
 8005794:	10800044 	addi	r2,r2,1
 8005798:	2137e884 	addi	r4,r4,-8286
 800579c:	41000015 	stw	r4,0(r8)
 80057a0:	44c00115 	stw	r19,4(r8)
 80057a4:	d8c02015 	stw	r3,128(sp)
 80057a8:	d8801f15 	stw	r2,124(sp)
 80057ac:	90bff40e 	bge	r18,r2,8005780 <__alt_data_end+0xfc005780>
 80057b0:	8009883a 	mov	r4,r16
 80057b4:	b00b883a 	mov	r5,r22
 80057b8:	b80d883a 	mov	r6,r23
 80057bc:	80123540 	call	8012354 <__ssprint_r>
 80057c0:	103f521e 	bne	r2,zero,800550c <__alt_data_end+0xfc00550c>
 80057c4:	8c7ffc04 	addi	r17,r17,-16
 80057c8:	d8c02017 	ldw	r3,128(sp)
 80057cc:	d8801f17 	ldw	r2,124(sp)
 80057d0:	da000404 	addi	r8,sp,16
 80057d4:	9c7fed16 	blt	r19,r17,800578c <__alt_data_end+0xfc00578c>
 80057d8:	dc003c17 	ldw	r16,240(sp)
 80057dc:	8809883a 	mov	r4,r17
 80057e0:	a823883a 	mov	r17,r21
 80057e4:	202b883a 	mov	r21,r4
 80057e8:	d9403617 	ldw	r5,216(sp)
 80057ec:	a8c7883a 	add	r3,r21,r3
 80057f0:	10800044 	addi	r2,r2,1
 80057f4:	41400015 	stw	r5,0(r8)
 80057f8:	45400115 	stw	r21,4(r8)
 80057fc:	d8c02015 	stw	r3,128(sp)
 8005800:	d8801f15 	stw	r2,124(sp)
 8005804:	010001c4 	movi	r4,7
 8005808:	20834416 	blt	r4,r2,800651c <___svfprintf_internal_r+0x1334>
 800580c:	d8802787 	ldb	r2,158(sp)
 8005810:	42000204 	addi	r8,r8,8
 8005814:	10000c26 	beq	r2,zero,8005848 <___svfprintf_internal_r+0x660>
 8005818:	d8801f17 	ldw	r2,124(sp)
 800581c:	d9002784 	addi	r4,sp,158
 8005820:	18c00044 	addi	r3,r3,1
 8005824:	10800044 	addi	r2,r2,1
 8005828:	41000015 	stw	r4,0(r8)
 800582c:	01000044 	movi	r4,1
 8005830:	41000115 	stw	r4,4(r8)
 8005834:	d8c02015 	stw	r3,128(sp)
 8005838:	d8801f15 	stw	r2,124(sp)
 800583c:	010001c4 	movi	r4,7
 8005840:	2082ee16 	blt	r4,r2,80063fc <___svfprintf_internal_r+0x1214>
 8005844:	42000204 	addi	r8,r8,8
 8005848:	d8802b17 	ldw	r2,172(sp)
 800584c:	10000c26 	beq	r2,zero,8005880 <___svfprintf_internal_r+0x698>
 8005850:	d8801f17 	ldw	r2,124(sp)
 8005854:	d9002704 	addi	r4,sp,156
 8005858:	18c00084 	addi	r3,r3,2
 800585c:	10800044 	addi	r2,r2,1
 8005860:	41000015 	stw	r4,0(r8)
 8005864:	01000084 	movi	r4,2
 8005868:	41000115 	stw	r4,4(r8)
 800586c:	d8c02015 	stw	r3,128(sp)
 8005870:	d8801f15 	stw	r2,124(sp)
 8005874:	010001c4 	movi	r4,7
 8005878:	2082e816 	blt	r4,r2,800641c <___svfprintf_internal_r+0x1234>
 800587c:	42000204 	addi	r8,r8,8
 8005880:	d9002c17 	ldw	r4,176(sp)
 8005884:	00802004 	movi	r2,128
 8005888:	20823126 	beq	r4,r2,8006150 <___svfprintf_internal_r+0xf68>
 800588c:	d9403217 	ldw	r5,200(sp)
 8005890:	2c67c83a 	sub	r19,r5,r17
 8005894:	04c02f0e 	bge	zero,r19,8005954 <___svfprintf_internal_r+0x76c>
 8005898:	05400404 	movi	r21,16
 800589c:	d8801f17 	ldw	r2,124(sp)
 80058a0:	acc4260e 	bge	r21,r19,800693c <___svfprintf_internal_r+0x1754>
 80058a4:	014200b4 	movhi	r5,2050
 80058a8:	9809883a 	mov	r4,r19
 80058ac:	2977e484 	addi	r5,r5,-8302
 80058b0:	dc002c15 	stw	r16,176(sp)
 80058b4:	8827883a 	mov	r19,r17
 80058b8:	d9402b15 	stw	r5,172(sp)
 80058bc:	048001c4 	movi	r18,7
 80058c0:	dc002f17 	ldw	r16,188(sp)
 80058c4:	2023883a 	mov	r17,r4
 80058c8:	00000306 	br	80058d8 <___svfprintf_internal_r+0x6f0>
 80058cc:	8c7ffc04 	addi	r17,r17,-16
 80058d0:	42000204 	addi	r8,r8,8
 80058d4:	ac40110e 	bge	r21,r17,800591c <___svfprintf_internal_r+0x734>
 80058d8:	18c00404 	addi	r3,r3,16
 80058dc:	10800044 	addi	r2,r2,1
 80058e0:	45000015 	stw	r20,0(r8)
 80058e4:	45400115 	stw	r21,4(r8)
 80058e8:	d8c02015 	stw	r3,128(sp)
 80058ec:	d8801f15 	stw	r2,124(sp)
 80058f0:	90bff60e 	bge	r18,r2,80058cc <__alt_data_end+0xfc0058cc>
 80058f4:	8009883a 	mov	r4,r16
 80058f8:	b00b883a 	mov	r5,r22
 80058fc:	b80d883a 	mov	r6,r23
 8005900:	80123540 	call	8012354 <__ssprint_r>
 8005904:	103f011e 	bne	r2,zero,800550c <__alt_data_end+0xfc00550c>
 8005908:	8c7ffc04 	addi	r17,r17,-16
 800590c:	d8c02017 	ldw	r3,128(sp)
 8005910:	d8801f17 	ldw	r2,124(sp)
 8005914:	da000404 	addi	r8,sp,16
 8005918:	ac7fef16 	blt	r21,r17,80058d8 <__alt_data_end+0xfc0058d8>
 800591c:	dc002c17 	ldw	r16,176(sp)
 8005920:	8809883a 	mov	r4,r17
 8005924:	9823883a 	mov	r17,r19
 8005928:	2027883a 	mov	r19,r4
 800592c:	d9002b17 	ldw	r4,172(sp)
 8005930:	1cc7883a 	add	r3,r3,r19
 8005934:	10800044 	addi	r2,r2,1
 8005938:	41000015 	stw	r4,0(r8)
 800593c:	44c00115 	stw	r19,4(r8)
 8005940:	d8c02015 	stw	r3,128(sp)
 8005944:	d8801f15 	stw	r2,124(sp)
 8005948:	010001c4 	movi	r4,7
 800594c:	2082a316 	blt	r4,r2,80063dc <___svfprintf_internal_r+0x11f4>
 8005950:	42000204 	addi	r8,r8,8
 8005954:	e080400c 	andi	r2,fp,256
 8005958:	1001b31e 	bne	r2,zero,8006028 <___svfprintf_internal_r+0xe40>
 800595c:	d8801f17 	ldw	r2,124(sp)
 8005960:	d9403117 	ldw	r5,196(sp)
 8005964:	1c47883a 	add	r3,r3,r17
 8005968:	10800044 	addi	r2,r2,1
 800596c:	41400015 	stw	r5,0(r8)
 8005970:	44400115 	stw	r17,4(r8)
 8005974:	d8c02015 	stw	r3,128(sp)
 8005978:	d8801f15 	stw	r2,124(sp)
 800597c:	010001c4 	movi	r4,7
 8005980:	20827e16 	blt	r4,r2,800637c <___svfprintf_internal_r+0x1194>
 8005984:	42000204 	addi	r8,r8,8
 8005988:	e080010c 	andi	r2,fp,4
 800598c:	10003226 	beq	r2,zero,8005a58 <___svfprintf_internal_r+0x870>
 8005990:	d8802e17 	ldw	r2,184(sp)
 8005994:	d9002a17 	ldw	r4,168(sp)
 8005998:	1121c83a 	sub	r16,r2,r4
 800599c:	04002e0e 	bge	zero,r16,8005a58 <___svfprintf_internal_r+0x870>
 80059a0:	04400404 	movi	r17,16
 80059a4:	d8801f17 	ldw	r2,124(sp)
 80059a8:	8c05550e 	bge	r17,r16,8006f00 <___svfprintf_internal_r+0x1d18>
 80059ac:	010200b4 	movhi	r4,2050
 80059b0:	2137e884 	addi	r4,r4,-8286
 80059b4:	d9003615 	stw	r4,216(sp)
 80059b8:	048001c4 	movi	r18,7
 80059bc:	dcc02f17 	ldw	r19,188(sp)
 80059c0:	00000306 	br	80059d0 <___svfprintf_internal_r+0x7e8>
 80059c4:	843ffc04 	addi	r16,r16,-16
 80059c8:	42000204 	addi	r8,r8,8
 80059cc:	8c00130e 	bge	r17,r16,8005a1c <___svfprintf_internal_r+0x834>
 80059d0:	014200b4 	movhi	r5,2050
 80059d4:	18c00404 	addi	r3,r3,16
 80059d8:	10800044 	addi	r2,r2,1
 80059dc:	2977e884 	addi	r5,r5,-8286
 80059e0:	41400015 	stw	r5,0(r8)
 80059e4:	44400115 	stw	r17,4(r8)
 80059e8:	d8c02015 	stw	r3,128(sp)
 80059ec:	d8801f15 	stw	r2,124(sp)
 80059f0:	90bff40e 	bge	r18,r2,80059c4 <__alt_data_end+0xfc0059c4>
 80059f4:	9809883a 	mov	r4,r19
 80059f8:	b00b883a 	mov	r5,r22
 80059fc:	b80d883a 	mov	r6,r23
 8005a00:	80123540 	call	8012354 <__ssprint_r>
 8005a04:	103ec11e 	bne	r2,zero,800550c <__alt_data_end+0xfc00550c>
 8005a08:	843ffc04 	addi	r16,r16,-16
 8005a0c:	d8c02017 	ldw	r3,128(sp)
 8005a10:	d8801f17 	ldw	r2,124(sp)
 8005a14:	da000404 	addi	r8,sp,16
 8005a18:	8c3fed16 	blt	r17,r16,80059d0 <__alt_data_end+0xfc0059d0>
 8005a1c:	d9003617 	ldw	r4,216(sp)
 8005a20:	1c07883a 	add	r3,r3,r16
 8005a24:	10800044 	addi	r2,r2,1
 8005a28:	41000015 	stw	r4,0(r8)
 8005a2c:	44000115 	stw	r16,4(r8)
 8005a30:	d8c02015 	stw	r3,128(sp)
 8005a34:	d8801f15 	stw	r2,124(sp)
 8005a38:	010001c4 	movi	r4,7
 8005a3c:	2080060e 	bge	r4,r2,8005a58 <___svfprintf_internal_r+0x870>
 8005a40:	d9002f17 	ldw	r4,188(sp)
 8005a44:	b00b883a 	mov	r5,r22
 8005a48:	b80d883a 	mov	r6,r23
 8005a4c:	80123540 	call	8012354 <__ssprint_r>
 8005a50:	103eae1e 	bne	r2,zero,800550c <__alt_data_end+0xfc00550c>
 8005a54:	d8c02017 	ldw	r3,128(sp)
 8005a58:	df002a17 	ldw	fp,168(sp)
 8005a5c:	d9402e17 	ldw	r5,184(sp)
 8005a60:	e140010e 	bge	fp,r5,8005a68 <___svfprintf_internal_r+0x880>
 8005a64:	2839883a 	mov	fp,r5
 8005a68:	d8803017 	ldw	r2,192(sp)
 8005a6c:	1705883a 	add	r2,r2,fp
 8005a70:	d8803015 	stw	r2,192(sp)
 8005a74:	1802491e 	bne	r3,zero,800639c <___svfprintf_internal_r+0x11b4>
 8005a78:	d8c02917 	ldw	r3,164(sp)
 8005a7c:	d8001f15 	stw	zero,124(sp)
 8005a80:	da000404 	addi	r8,sp,16
 8005a84:	18800007 	ldb	r2,0(r3)
 8005a88:	103e061e 	bne	r2,zero,80052a4 <__alt_data_end+0xfc0052a4>
 8005a8c:	dc002917 	ldw	r16,164(sp)
 8005a90:	003e1e06 	br	800530c <__alt_data_end+0xfc00530c>
 8005a94:	d9002d17 	ldw	r4,180(sp)
 8005a98:	d9402d17 	ldw	r5,180(sp)
 8005a9c:	da002917 	ldw	r8,164(sp)
 8005aa0:	21000017 	ldw	r4,0(r4)
 8005aa4:	29400117 	ldw	r5,4(r5)
 8005aa8:	df002915 	stw	fp,164(sp)
 8005aac:	9839883a 	mov	fp,r19
 8005ab0:	dcc02a03 	ldbu	r19,168(sp)
 8005ab4:	d9003715 	stw	r4,220(sp)
 8005ab8:	d9403815 	stw	r5,224(sp)
 8005abc:	da004015 	stw	r8,256(sp)
 8005ac0:	da403f15 	stw	r9,252(sp)
 8005ac4:	dcc02785 	stb	r19,158(sp)
 8005ac8:	800fc8c0 	call	800fc8c <__fpclassifyd>
 8005acc:	d8c02d17 	ldw	r3,180(sp)
 8005ad0:	04400044 	movi	r17,1
 8005ad4:	da004017 	ldw	r8,256(sp)
 8005ad8:	1c800204 	addi	r18,r3,8
 8005adc:	da403f17 	ldw	r9,252(sp)
 8005ae0:	d9003717 	ldw	r4,220(sp)
 8005ae4:	d9403817 	ldw	r5,224(sp)
 8005ae8:	14433e1e 	bne	r2,r17,80067e4 <___svfprintf_internal_r+0x15fc>
 8005aec:	000d883a 	mov	r6,zero
 8005af0:	000f883a 	mov	r7,zero
 8005af4:	80189a80 	call	80189a8 <__ledf2>
 8005af8:	da004017 	ldw	r8,256(sp)
 8005afc:	10050c16 	blt	r2,zero,8006f30 <___svfprintf_internal_r+0x1d48>
 8005b00:	dcc02783 	ldbu	r19,158(sp)
 8005b04:	008011c4 	movi	r2,71
 8005b08:	1404410e 	bge	r2,r16,8006c10 <___svfprintf_internal_r+0x1a28>
 8005b0c:	014200b4 	movhi	r5,2050
 8005b10:	2977d504 	addi	r5,r5,-8364
 8005b14:	d9403115 	stw	r5,196(sp)
 8005b18:	00c000c4 	movi	r3,3
 8005b1c:	00bfdfc4 	movi	r2,-129
 8005b20:	d8c02a15 	stw	r3,168(sp)
 8005b24:	e0b8703a 	and	fp,fp,r2
 8005b28:	dc802d15 	stw	r18,180(sp)
 8005b2c:	1823883a 	mov	r17,r3
 8005b30:	d8003215 	stw	zero,200(sp)
 8005b34:	d8003415 	stw	zero,208(sp)
 8005b38:	003eee06 	br	80056f4 <__alt_data_end+0xfc0056f4>
 8005b3c:	9cc00214 	ori	r19,r19,8
 8005b40:	e005883a 	mov	r2,fp
 8005b44:	e4000007 	ldb	r16,0(fp)
 8005b48:	003dfe06 	br	8005344 <__alt_data_end+0xfc005344>
 8005b4c:	da002917 	ldw	r8,164(sp)
 8005b50:	df002915 	stw	fp,164(sp)
 8005b54:	9f000414 	ori	fp,r19,16
 8005b58:	e080080c 	andi	r2,fp,32
 8005b5c:	1000f226 	beq	r2,zero,8005f28 <___svfprintf_internal_r+0xd40>
 8005b60:	d9402d17 	ldw	r5,180(sp)
 8005b64:	0005883a 	mov	r2,zero
 8005b68:	2c800017 	ldw	r18,0(r5)
 8005b6c:	2d400117 	ldw	r21,4(r5)
 8005b70:	29400204 	addi	r5,r5,8
 8005b74:	d9402d15 	stw	r5,180(sp)
 8005b78:	9546b03a 	or	r3,r18,r21
 8005b7c:	d8002785 	stb	zero,158(sp)
 8005b80:	da403215 	stw	r9,200(sp)
 8005b84:	0027883a 	mov	r19,zero
 8005b88:	003eb306 	br	8005658 <__alt_data_end+0xfc005658>
 8005b8c:	da002917 	ldw	r8,164(sp)
 8005b90:	df002915 	stw	fp,164(sp)
 8005b94:	9f000414 	ori	fp,r19,16
 8005b98:	e080080c 	andi	r2,fp,32
 8005b9c:	1000d326 	beq	r2,zero,8005eec <___svfprintf_internal_r+0xd04>
 8005ba0:	d9002d17 	ldw	r4,180(sp)
 8005ba4:	00800044 	movi	r2,1
 8005ba8:	24800017 	ldw	r18,0(r4)
 8005bac:	25400117 	ldw	r21,4(r4)
 8005bb0:	21000204 	addi	r4,r4,8
 8005bb4:	d9002d15 	stw	r4,180(sp)
 8005bb8:	9546b03a 	or	r3,r18,r21
 8005bbc:	003fef06 	br	8005b7c <__alt_data_end+0xfc005b7c>
 8005bc0:	d9402d17 	ldw	r5,180(sp)
 8005bc4:	00800c04 	movi	r2,48
 8005bc8:	d8802705 	stb	r2,156(sp)
 8005bcc:	2c800017 	ldw	r18,0(r5)
 8005bd0:	00801e04 	movi	r2,120
 8005bd4:	d8802745 	stb	r2,157(sp)
 8005bd8:	008200b4 	movhi	r2,2050
 8005bdc:	10b7dd04 	addi	r2,r2,-8332
 8005be0:	29400104 	addi	r5,r5,4
 8005be4:	da002917 	ldw	r8,164(sp)
 8005be8:	d8803b15 	stw	r2,236(sp)
 8005bec:	df002915 	stw	fp,164(sp)
 8005bf0:	002b883a 	mov	r21,zero
 8005bf4:	9f000094 	ori	fp,r19,2
 8005bf8:	d9402d15 	stw	r5,180(sp)
 8005bfc:	00800084 	movi	r2,2
 8005c00:	04001e04 	movi	r16,120
 8005c04:	9007883a 	mov	r3,r18
 8005c08:	003fdc06 	br	8005b7c <__alt_data_end+0xfc005b7c>
 8005c0c:	da002917 	ldw	r8,164(sp)
 8005c10:	df002915 	stw	fp,164(sp)
 8005c14:	9839883a 	mov	fp,r19
 8005c18:	dcc02a03 	ldbu	r19,168(sp)
 8005c1c:	e080080c 	andi	r2,fp,32
 8005c20:	d8c02d17 	ldw	r3,180(sp)
 8005c24:	dcc02785 	stb	r19,158(sp)
 8005c28:	103e801e 	bne	r2,zero,800562c <__alt_data_end+0xfc00562c>
 8005c2c:	e080040c 	andi	r2,fp,16
 8005c30:	10031f26 	beq	r2,zero,80068b0 <___svfprintf_internal_r+0x16c8>
 8005c34:	1c800017 	ldw	r18,0(r3)
 8005c38:	d9402d17 	ldw	r5,180(sp)
 8005c3c:	902bd7fa 	srai	r21,r18,31
 8005c40:	29400104 	addi	r5,r5,4
 8005c44:	d9402d15 	stw	r5,180(sp)
 8005c48:	a805883a 	mov	r2,r21
 8005c4c:	103e7e0e 	bge	r2,zero,8005648 <__alt_data_end+0xfc005648>
 8005c50:	04a5c83a 	sub	r18,zero,r18
 8005c54:	9004c03a 	cmpne	r2,r18,zero
 8005c58:	056bc83a 	sub	r21,zero,r21
 8005c5c:	a8abc83a 	sub	r21,r21,r2
 8005c60:	04c00b44 	movi	r19,45
 8005c64:	dcc02785 	stb	r19,158(sp)
 8005c68:	da403215 	stw	r9,200(sp)
 8005c6c:	00800044 	movi	r2,1
 8005c70:	9546b03a 	or	r3,r18,r21
 8005c74:	003e7806 	br	8005658 <__alt_data_end+0xfc005658>
 8005c78:	9cc01014 	ori	r19,r19,64
 8005c7c:	e005883a 	mov	r2,fp
 8005c80:	e4000007 	ldb	r16,0(fp)
 8005c84:	003daf06 	br	8005344 <__alt_data_end+0xfc005344>
 8005c88:	e4000007 	ldb	r16,0(fp)
 8005c8c:	00801b04 	movi	r2,108
 8005c90:	80837726 	beq	r16,r2,8006a70 <___svfprintf_internal_r+0x1888>
 8005c94:	9cc00414 	ori	r19,r19,16
 8005c98:	e005883a 	mov	r2,fp
 8005c9c:	003da906 	br	8005344 <__alt_data_end+0xfc005344>
 8005ca0:	da002917 	ldw	r8,164(sp)
 8005ca4:	df002915 	stw	fp,164(sp)
 8005ca8:	9839883a 	mov	fp,r19
 8005cac:	dcc02a03 	ldbu	r19,168(sp)
 8005cb0:	e080080c 	andi	r2,fp,32
 8005cb4:	dcc02785 	stb	r19,158(sp)
 8005cb8:	1002f126 	beq	r2,zero,8006880 <___svfprintf_internal_r+0x1698>
 8005cbc:	d9402d17 	ldw	r5,180(sp)
 8005cc0:	d9003017 	ldw	r4,192(sp)
 8005cc4:	28800017 	ldw	r2,0(r5)
 8005cc8:	2007d7fa 	srai	r3,r4,31
 8005ccc:	29400104 	addi	r5,r5,4
 8005cd0:	d9402d15 	stw	r5,180(sp)
 8005cd4:	11000015 	stw	r4,0(r2)
 8005cd8:	10c00115 	stw	r3,4(r2)
 8005cdc:	003d6e06 	br	8005298 <__alt_data_end+0xfc005298>
 8005ce0:	da002917 	ldw	r8,164(sp)
 8005ce4:	df002915 	stw	fp,164(sp)
 8005ce8:	9839883a 	mov	fp,r19
 8005cec:	dcc02a03 	ldbu	r19,168(sp)
 8005cf0:	014200b4 	movhi	r5,2050
 8005cf4:	2977d804 	addi	r5,r5,-8352
 8005cf8:	dcc02785 	stb	r19,158(sp)
 8005cfc:	d9403b15 	stw	r5,236(sp)
 8005d00:	e0c0080c 	andi	r3,fp,32
 8005d04:	d8802d17 	ldw	r2,180(sp)
 8005d08:	18005826 	beq	r3,zero,8005e6c <___svfprintf_internal_r+0xc84>
 8005d0c:	d9402d17 	ldw	r5,180(sp)
 8005d10:	14800017 	ldw	r18,0(r2)
 8005d14:	15400117 	ldw	r21,4(r2)
 8005d18:	29400204 	addi	r5,r5,8
 8005d1c:	d9402d15 	stw	r5,180(sp)
 8005d20:	e080004c 	andi	r2,fp,1
 8005d24:	10020626 	beq	r2,zero,8006540 <___svfprintf_internal_r+0x1358>
 8005d28:	9546b03a 	or	r3,r18,r21
 8005d2c:	1802f326 	beq	r3,zero,80068fc <___svfprintf_internal_r+0x1714>
 8005d30:	00800c04 	movi	r2,48
 8005d34:	d8802705 	stb	r2,156(sp)
 8005d38:	dc002745 	stb	r16,157(sp)
 8005d3c:	e7000094 	ori	fp,fp,2
 8005d40:	00800084 	movi	r2,2
 8005d44:	003f8d06 	br	8005b7c <__alt_data_end+0xfc005b7c>
 8005d48:	d8c02d17 	ldw	r3,180(sp)
 8005d4c:	d9002d17 	ldw	r4,180(sp)
 8005d50:	da002917 	ldw	r8,164(sp)
 8005d54:	18800017 	ldw	r2,0(r3)
 8005d58:	21000104 	addi	r4,r4,4
 8005d5c:	00c00044 	movi	r3,1
 8005d60:	df002915 	stw	fp,164(sp)
 8005d64:	d8c02a15 	stw	r3,168(sp)
 8005d68:	9839883a 	mov	fp,r19
 8005d6c:	d8002785 	stb	zero,158(sp)
 8005d70:	d8801405 	stb	r2,80(sp)
 8005d74:	d9002d15 	stw	r4,180(sp)
 8005d78:	1823883a 	mov	r17,r3
 8005d7c:	d8c01404 	addi	r3,sp,80
 8005d80:	d8003215 	stw	zero,200(sp)
 8005d84:	d8003415 	stw	zero,208(sp)
 8005d88:	d8c03115 	stw	r3,196(sp)
 8005d8c:	0005883a 	mov	r2,zero
 8005d90:	003e5f06 	br	8005710 <__alt_data_end+0xfc005710>
 8005d94:	d8802a07 	ldb	r2,168(sp)
 8005d98:	1002c21e 	bne	r2,zero,80068a4 <___svfprintf_internal_r+0x16bc>
 8005d9c:	00c00804 	movi	r3,32
 8005da0:	d8c02a05 	stb	r3,168(sp)
 8005da4:	e005883a 	mov	r2,fp
 8005da8:	e4000007 	ldb	r16,0(fp)
 8005dac:	003d6506 	br	8005344 <__alt_data_end+0xfc005344>
 8005db0:	9cc00054 	ori	r19,r19,1
 8005db4:	e005883a 	mov	r2,fp
 8005db8:	e4000007 	ldb	r16,0(fp)
 8005dbc:	003d6106 	br	8005344 <__alt_data_end+0xfc005344>
 8005dc0:	d8c02d17 	ldw	r3,180(sp)
 8005dc4:	d9002d17 	ldw	r4,180(sp)
 8005dc8:	da002917 	ldw	r8,164(sp)
 8005dcc:	18c00017 	ldw	r3,0(r3)
 8005dd0:	df002915 	stw	fp,164(sp)
 8005dd4:	d8002785 	stb	zero,158(sp)
 8005dd8:	d8c03115 	stw	r3,196(sp)
 8005ddc:	9839883a 	mov	fp,r19
 8005de0:	24800104 	addi	r18,r4,4
 8005de4:	18043526 	beq	r3,zero,8006ebc <___svfprintf_internal_r+0x1cd4>
 8005de8:	d9003117 	ldw	r4,196(sp)
 8005dec:	4803e016 	blt	r9,zero,8006d70 <___svfprintf_internal_r+0x1b88>
 8005df0:	480d883a 	mov	r6,r9
 8005df4:	000b883a 	mov	r5,zero
 8005df8:	da004015 	stw	r8,256(sp)
 8005dfc:	da403f15 	stw	r9,252(sp)
 8005e00:	800df800 	call	800df80 <memchr>
 8005e04:	da004017 	ldw	r8,256(sp)
 8005e08:	da403f17 	ldw	r9,252(sp)
 8005e0c:	10045f26 	beq	r2,zero,8006f8c <___svfprintf_internal_r+0x1da4>
 8005e10:	d8c03117 	ldw	r3,196(sp)
 8005e14:	10e3c83a 	sub	r17,r2,r3
 8005e18:	4c40010e 	bge	r9,r17,8005e20 <___svfprintf_internal_r+0xc38>
 8005e1c:	4823883a 	mov	r17,r9
 8005e20:	8805883a 	mov	r2,r17
 8005e24:	8803d716 	blt	r17,zero,8006d84 <___svfprintf_internal_r+0x1b9c>
 8005e28:	dcc02783 	ldbu	r19,158(sp)
 8005e2c:	d8802a15 	stw	r2,168(sp)
 8005e30:	dc802d15 	stw	r18,180(sp)
 8005e34:	d8003215 	stw	zero,200(sp)
 8005e38:	d8003415 	stw	zero,208(sp)
 8005e3c:	003e2d06 	br	80056f4 <__alt_data_end+0xfc0056f4>
 8005e40:	da002917 	ldw	r8,164(sp)
 8005e44:	df002915 	stw	fp,164(sp)
 8005e48:	9839883a 	mov	fp,r19
 8005e4c:	dcc02a03 	ldbu	r19,168(sp)
 8005e50:	010200b4 	movhi	r4,2050
 8005e54:	2137dd04 	addi	r4,r4,-8332
 8005e58:	d9003b15 	stw	r4,236(sp)
 8005e5c:	dcc02785 	stb	r19,158(sp)
 8005e60:	e0c0080c 	andi	r3,fp,32
 8005e64:	d8802d17 	ldw	r2,180(sp)
 8005e68:	183fa81e 	bne	r3,zero,8005d0c <__alt_data_end+0xfc005d0c>
 8005e6c:	e0c0040c 	andi	r3,fp,16
 8005e70:	18027126 	beq	r3,zero,8006838 <___svfprintf_internal_r+0x1650>
 8005e74:	d8c02d17 	ldw	r3,180(sp)
 8005e78:	14800017 	ldw	r18,0(r2)
 8005e7c:	002b883a 	mov	r21,zero
 8005e80:	18c00104 	addi	r3,r3,4
 8005e84:	d8c02d15 	stw	r3,180(sp)
 8005e88:	003fa506 	br	8005d20 <__alt_data_end+0xfc005d20>
 8005e8c:	9cc00814 	ori	r19,r19,32
 8005e90:	e005883a 	mov	r2,fp
 8005e94:	e4000007 	ldb	r16,0(fp)
 8005e98:	003d2a06 	br	8005344 <__alt_data_end+0xfc005344>
 8005e9c:	d9002d17 	ldw	r4,180(sp)
 8005ea0:	d9402d17 	ldw	r5,180(sp)
 8005ea4:	21000017 	ldw	r4,0(r4)
 8005ea8:	28c00104 	addi	r3,r5,4
 8005eac:	d9002e15 	stw	r4,184(sp)
 8005eb0:	2002e916 	blt	r4,zero,8006a58 <___svfprintf_internal_r+0x1870>
 8005eb4:	d8c02d15 	stw	r3,180(sp)
 8005eb8:	e005883a 	mov	r2,fp
 8005ebc:	e4000007 	ldb	r16,0(fp)
 8005ec0:	003d2006 	br	8005344 <__alt_data_end+0xfc005344>
 8005ec4:	00c00ac4 	movi	r3,43
 8005ec8:	d8c02a05 	stb	r3,168(sp)
 8005ecc:	e005883a 	mov	r2,fp
 8005ed0:	e4000007 	ldb	r16,0(fp)
 8005ed4:	003d1b06 	br	8005344 <__alt_data_end+0xfc005344>
 8005ed8:	da002917 	ldw	r8,164(sp)
 8005edc:	df002915 	stw	fp,164(sp)
 8005ee0:	9839883a 	mov	fp,r19
 8005ee4:	e080080c 	andi	r2,fp,32
 8005ee8:	103f2d1e 	bne	r2,zero,8005ba0 <__alt_data_end+0xfc005ba0>
 8005eec:	e080040c 	andi	r2,fp,16
 8005ef0:	10027826 	beq	r2,zero,80068d4 <___svfprintf_internal_r+0x16ec>
 8005ef4:	d9402d17 	ldw	r5,180(sp)
 8005ef8:	002b883a 	mov	r21,zero
 8005efc:	00800044 	movi	r2,1
 8005f00:	2c800017 	ldw	r18,0(r5)
 8005f04:	29400104 	addi	r5,r5,4
 8005f08:	d9402d15 	stw	r5,180(sp)
 8005f0c:	9007883a 	mov	r3,r18
 8005f10:	003f1a06 	br	8005b7c <__alt_data_end+0xfc005b7c>
 8005f14:	da002917 	ldw	r8,164(sp)
 8005f18:	df002915 	stw	fp,164(sp)
 8005f1c:	9839883a 	mov	fp,r19
 8005f20:	e080080c 	andi	r2,fp,32
 8005f24:	103f0e1e 	bne	r2,zero,8005b60 <__alt_data_end+0xfc005b60>
 8005f28:	e080040c 	andi	r2,fp,16
 8005f2c:	10024a26 	beq	r2,zero,8006858 <___svfprintf_internal_r+0x1670>
 8005f30:	d8802d17 	ldw	r2,180(sp)
 8005f34:	002b883a 	mov	r21,zero
 8005f38:	14800017 	ldw	r18,0(r2)
 8005f3c:	10800104 	addi	r2,r2,4
 8005f40:	d8802d15 	stw	r2,180(sp)
 8005f44:	9007883a 	mov	r3,r18
 8005f48:	0005883a 	mov	r2,zero
 8005f4c:	003f0b06 	br	8005b7c <__alt_data_end+0xfc005b7c>
 8005f50:	da002917 	ldw	r8,164(sp)
 8005f54:	df002915 	stw	fp,164(sp)
 8005f58:	9839883a 	mov	fp,r19
 8005f5c:	dcc02a03 	ldbu	r19,168(sp)
 8005f60:	dcc02785 	stb	r19,158(sp)
 8005f64:	803d6326 	beq	r16,zero,80054f4 <__alt_data_end+0xfc0054f4>
 8005f68:	00c00044 	movi	r3,1
 8005f6c:	d8c02a15 	stw	r3,168(sp)
 8005f70:	dc001405 	stb	r16,80(sp)
 8005f74:	d8002785 	stb	zero,158(sp)
 8005f78:	003f7f06 	br	8005d78 <__alt_data_end+0xfc005d78>
 8005f7c:	d8c02017 	ldw	r3,128(sp)
 8005f80:	003e2406 	br	8005814 <__alt_data_end+0xfc005814>
 8005f84:	10803fcc 	andi	r2,r2,255
 8005f88:	00c00044 	movi	r3,1
 8005f8c:	10fdba1e 	bne	r2,r3,8005678 <__alt_data_end+0xfc005678>
 8005f90:	a800021e 	bne	r21,zero,8005f9c <___svfprintf_internal_r+0xdb4>
 8005f94:	00800244 	movi	r2,9
 8005f98:	14801d2e 	bgeu	r2,r18,8006010 <___svfprintf_internal_r+0xe28>
 8005f9c:	dc002a15 	stw	r16,168(sp)
 8005fa0:	b823883a 	mov	r17,r23
 8005fa4:	9021883a 	mov	r16,r18
 8005fa8:	da002b15 	stw	r8,172(sp)
 8005fac:	a825883a 	mov	r18,r21
 8005fb0:	482b883a 	mov	r21,r9
 8005fb4:	8009883a 	mov	r4,r16
 8005fb8:	900b883a 	mov	r5,r18
 8005fbc:	01800284 	movi	r6,10
 8005fc0:	000f883a 	mov	r7,zero
 8005fc4:	8016cfc0 	call	8016cfc <__umoddi3>
 8005fc8:	10800c04 	addi	r2,r2,48
 8005fcc:	8c7fffc4 	addi	r17,r17,-1
 8005fd0:	8009883a 	mov	r4,r16
 8005fd4:	900b883a 	mov	r5,r18
 8005fd8:	01800284 	movi	r6,10
 8005fdc:	000f883a 	mov	r7,zero
 8005fe0:	88800005 	stb	r2,0(r17)
 8005fe4:	80166bc0 	call	80166bc <__udivdi3>
 8005fe8:	1021883a 	mov	r16,r2
 8005fec:	10c4b03a 	or	r2,r2,r3
 8005ff0:	1825883a 	mov	r18,r3
 8005ff4:	103fef1e 	bne	r2,zero,8005fb4 <__alt_data_end+0xfc005fb4>
 8005ff8:	dc403115 	stw	r17,196(sp)
 8005ffc:	dc002a17 	ldw	r16,168(sp)
 8006000:	da002b17 	ldw	r8,172(sp)
 8006004:	a813883a 	mov	r9,r21
 8006008:	bc63c83a 	sub	r17,r23,r17
 800600c:	003db406 	br	80056e0 <__alt_data_end+0xfc0056e0>
 8006010:	94800c04 	addi	r18,r18,48
 8006014:	d8c01dc4 	addi	r3,sp,119
 8006018:	dc801dc5 	stb	r18,119(sp)
 800601c:	dc403d17 	ldw	r17,244(sp)
 8006020:	d8c03115 	stw	r3,196(sp)
 8006024:	003dae06 	br	80056e0 <__alt_data_end+0xfc0056e0>
 8006028:	00801944 	movi	r2,101
 800602c:	14008c0e 	bge	r2,r16,8006260 <___svfprintf_internal_r+0x1078>
 8006030:	d9003717 	ldw	r4,220(sp)
 8006034:	d9403817 	ldw	r5,224(sp)
 8006038:	000d883a 	mov	r6,zero
 800603c:	000f883a 	mov	r7,zero
 8006040:	d8c03e15 	stw	r3,248(sp)
 8006044:	da004015 	stw	r8,256(sp)
 8006048:	80188440 	call	8018844 <__eqdf2>
 800604c:	d8c03e17 	ldw	r3,248(sp)
 8006050:	da004017 	ldw	r8,256(sp)
 8006054:	1000fc1e 	bne	r2,zero,8006448 <___svfprintf_internal_r+0x1260>
 8006058:	d8801f17 	ldw	r2,124(sp)
 800605c:	010200b4 	movhi	r4,2050
 8006060:	2137e404 	addi	r4,r4,-8304
 8006064:	18c00044 	addi	r3,r3,1
 8006068:	10800044 	addi	r2,r2,1
 800606c:	41000015 	stw	r4,0(r8)
 8006070:	01000044 	movi	r4,1
 8006074:	41000115 	stw	r4,4(r8)
 8006078:	d8c02015 	stw	r3,128(sp)
 800607c:	d8801f15 	stw	r2,124(sp)
 8006080:	010001c4 	movi	r4,7
 8006084:	20823116 	blt	r4,r2,800694c <___svfprintf_internal_r+0x1764>
 8006088:	42000204 	addi	r8,r8,8
 800608c:	d8802617 	ldw	r2,152(sp)
 8006090:	d9403317 	ldw	r5,204(sp)
 8006094:	11400216 	blt	r2,r5,80060a0 <___svfprintf_internal_r+0xeb8>
 8006098:	e080004c 	andi	r2,fp,1
 800609c:	103e3a26 	beq	r2,zero,8005988 <__alt_data_end+0xfc005988>
 80060a0:	d8803917 	ldw	r2,228(sp)
 80060a4:	d9003517 	ldw	r4,212(sp)
 80060a8:	d9403917 	ldw	r5,228(sp)
 80060ac:	1887883a 	add	r3,r3,r2
 80060b0:	d8801f17 	ldw	r2,124(sp)
 80060b4:	41000015 	stw	r4,0(r8)
 80060b8:	41400115 	stw	r5,4(r8)
 80060bc:	10800044 	addi	r2,r2,1
 80060c0:	d8c02015 	stw	r3,128(sp)
 80060c4:	d8801f15 	stw	r2,124(sp)
 80060c8:	010001c4 	movi	r4,7
 80060cc:	20826c16 	blt	r4,r2,8006a80 <___svfprintf_internal_r+0x1898>
 80060d0:	42000204 	addi	r8,r8,8
 80060d4:	d8803317 	ldw	r2,204(sp)
 80060d8:	143fffc4 	addi	r16,r2,-1
 80060dc:	043e2a0e 	bge	zero,r16,8005988 <__alt_data_end+0xfc005988>
 80060e0:	04400404 	movi	r17,16
 80060e4:	d8801f17 	ldw	r2,124(sp)
 80060e8:	8c00980e 	bge	r17,r16,800634c <___svfprintf_internal_r+0x1164>
 80060ec:	014200b4 	movhi	r5,2050
 80060f0:	2977e484 	addi	r5,r5,-8302
 80060f4:	d9402b15 	stw	r5,172(sp)
 80060f8:	04c001c4 	movi	r19,7
 80060fc:	dc802f17 	ldw	r18,188(sp)
 8006100:	00000306 	br	8006110 <___svfprintf_internal_r+0xf28>
 8006104:	42000204 	addi	r8,r8,8
 8006108:	843ffc04 	addi	r16,r16,-16
 800610c:	8c00920e 	bge	r17,r16,8006358 <___svfprintf_internal_r+0x1170>
 8006110:	18c00404 	addi	r3,r3,16
 8006114:	10800044 	addi	r2,r2,1
 8006118:	45000015 	stw	r20,0(r8)
 800611c:	44400115 	stw	r17,4(r8)
 8006120:	d8c02015 	stw	r3,128(sp)
 8006124:	d8801f15 	stw	r2,124(sp)
 8006128:	98bff60e 	bge	r19,r2,8006104 <__alt_data_end+0xfc006104>
 800612c:	9009883a 	mov	r4,r18
 8006130:	b00b883a 	mov	r5,r22
 8006134:	b80d883a 	mov	r6,r23
 8006138:	80123540 	call	8012354 <__ssprint_r>
 800613c:	103cf31e 	bne	r2,zero,800550c <__alt_data_end+0xfc00550c>
 8006140:	d8c02017 	ldw	r3,128(sp)
 8006144:	d8801f17 	ldw	r2,124(sp)
 8006148:	da000404 	addi	r8,sp,16
 800614c:	003fee06 	br	8006108 <__alt_data_end+0xfc006108>
 8006150:	d9402e17 	ldw	r5,184(sp)
 8006154:	d8802a17 	ldw	r2,168(sp)
 8006158:	28a7c83a 	sub	r19,r5,r2
 800615c:	04fdcb0e 	bge	zero,r19,800588c <__alt_data_end+0xfc00588c>
 8006160:	05400404 	movi	r21,16
 8006164:	d8801f17 	ldw	r2,124(sp)
 8006168:	acc3840e 	bge	r21,r19,8006f7c <___svfprintf_internal_r+0x1d94>
 800616c:	014200b4 	movhi	r5,2050
 8006170:	9809883a 	mov	r4,r19
 8006174:	2977e484 	addi	r5,r5,-8302
 8006178:	dc002c15 	stw	r16,176(sp)
 800617c:	8827883a 	mov	r19,r17
 8006180:	d9402b15 	stw	r5,172(sp)
 8006184:	048001c4 	movi	r18,7
 8006188:	dc002f17 	ldw	r16,188(sp)
 800618c:	2023883a 	mov	r17,r4
 8006190:	00000306 	br	80061a0 <___svfprintf_internal_r+0xfb8>
 8006194:	8c7ffc04 	addi	r17,r17,-16
 8006198:	42000204 	addi	r8,r8,8
 800619c:	ac40110e 	bge	r21,r17,80061e4 <___svfprintf_internal_r+0xffc>
 80061a0:	18c00404 	addi	r3,r3,16
 80061a4:	10800044 	addi	r2,r2,1
 80061a8:	45000015 	stw	r20,0(r8)
 80061ac:	45400115 	stw	r21,4(r8)
 80061b0:	d8c02015 	stw	r3,128(sp)
 80061b4:	d8801f15 	stw	r2,124(sp)
 80061b8:	90bff60e 	bge	r18,r2,8006194 <__alt_data_end+0xfc006194>
 80061bc:	8009883a 	mov	r4,r16
 80061c0:	b00b883a 	mov	r5,r22
 80061c4:	b80d883a 	mov	r6,r23
 80061c8:	80123540 	call	8012354 <__ssprint_r>
 80061cc:	103ccf1e 	bne	r2,zero,800550c <__alt_data_end+0xfc00550c>
 80061d0:	8c7ffc04 	addi	r17,r17,-16
 80061d4:	d8c02017 	ldw	r3,128(sp)
 80061d8:	d8801f17 	ldw	r2,124(sp)
 80061dc:	da000404 	addi	r8,sp,16
 80061e0:	ac7fef16 	blt	r21,r17,80061a0 <__alt_data_end+0xfc0061a0>
 80061e4:	dc002c17 	ldw	r16,176(sp)
 80061e8:	8809883a 	mov	r4,r17
 80061ec:	9823883a 	mov	r17,r19
 80061f0:	2027883a 	mov	r19,r4
 80061f4:	d9002b17 	ldw	r4,172(sp)
 80061f8:	1cc7883a 	add	r3,r3,r19
 80061fc:	10800044 	addi	r2,r2,1
 8006200:	41000015 	stw	r4,0(r8)
 8006204:	44c00115 	stw	r19,4(r8)
 8006208:	d8c02015 	stw	r3,128(sp)
 800620c:	d8801f15 	stw	r2,124(sp)
 8006210:	010001c4 	movi	r4,7
 8006214:	20816b16 	blt	r4,r2,80067c4 <___svfprintf_internal_r+0x15dc>
 8006218:	42000204 	addi	r8,r8,8
 800621c:	003d9b06 	br	800588c <__alt_data_end+0xfc00588c>
 8006220:	d9403b17 	ldw	r5,236(sp)
 8006224:	b807883a 	mov	r3,r23
 8006228:	908003cc 	andi	r2,r18,15
 800622c:	a808973a 	slli	r4,r21,28
 8006230:	2885883a 	add	r2,r5,r2
 8006234:	9024d13a 	srli	r18,r18,4
 8006238:	10800003 	ldbu	r2,0(r2)
 800623c:	a82ad13a 	srli	r21,r21,4
 8006240:	18ffffc4 	addi	r3,r3,-1
 8006244:	24a4b03a 	or	r18,r4,r18
 8006248:	18800005 	stb	r2,0(r3)
 800624c:	9544b03a 	or	r2,r18,r21
 8006250:	103ff51e 	bne	r2,zero,8006228 <__alt_data_end+0xfc006228>
 8006254:	d8c03115 	stw	r3,196(sp)
 8006258:	b8e3c83a 	sub	r17,r23,r3
 800625c:	003d2006 	br	80056e0 <__alt_data_end+0xfc0056e0>
 8006260:	d9403317 	ldw	r5,204(sp)
 8006264:	00800044 	movi	r2,1
 8006268:	18c00044 	addi	r3,r3,1
 800626c:	1141360e 	bge	r2,r5,8006748 <___svfprintf_internal_r+0x1560>
 8006270:	dc001f17 	ldw	r16,124(sp)
 8006274:	d8803117 	ldw	r2,196(sp)
 8006278:	d8c02015 	stw	r3,128(sp)
 800627c:	84000044 	addi	r16,r16,1
 8006280:	40800015 	stw	r2,0(r8)
 8006284:	00800044 	movi	r2,1
 8006288:	40800115 	stw	r2,4(r8)
 800628c:	dc001f15 	stw	r16,124(sp)
 8006290:	008001c4 	movi	r2,7
 8006294:	14013916 	blt	r2,r16,800677c <___svfprintf_internal_r+0x1594>
 8006298:	42000204 	addi	r8,r8,8
 800629c:	d9003917 	ldw	r4,228(sp)
 80062a0:	d9403517 	ldw	r5,212(sp)
 80062a4:	84000044 	addi	r16,r16,1
 80062a8:	1907883a 	add	r3,r3,r4
 80062ac:	41400015 	stw	r5,0(r8)
 80062b0:	41000115 	stw	r4,4(r8)
 80062b4:	d8c02015 	stw	r3,128(sp)
 80062b8:	dc001f15 	stw	r16,124(sp)
 80062bc:	008001c4 	movi	r2,7
 80062c0:	14013716 	blt	r2,r16,80067a0 <___svfprintf_internal_r+0x15b8>
 80062c4:	44400204 	addi	r17,r8,8
 80062c8:	d9003717 	ldw	r4,220(sp)
 80062cc:	d9403817 	ldw	r5,224(sp)
 80062d0:	000d883a 	mov	r6,zero
 80062d4:	000f883a 	mov	r7,zero
 80062d8:	d8c03e15 	stw	r3,248(sp)
 80062dc:	80188440 	call	8018844 <__eqdf2>
 80062e0:	d8c03e17 	ldw	r3,248(sp)
 80062e4:	10009926 	beq	r2,zero,800654c <___svfprintf_internal_r+0x1364>
 80062e8:	d9003317 	ldw	r4,204(sp)
 80062ec:	d9403117 	ldw	r5,196(sp)
 80062f0:	84000044 	addi	r16,r16,1
 80062f4:	20bfffc4 	addi	r2,r4,-1
 80062f8:	1887883a 	add	r3,r3,r2
 80062fc:	29000044 	addi	r4,r5,1
 8006300:	88800115 	stw	r2,4(r17)
 8006304:	89000015 	stw	r4,0(r17)
 8006308:	d8c02015 	stw	r3,128(sp)
 800630c:	dc001f15 	stw	r16,124(sp)
 8006310:	008001c4 	movi	r2,7
 8006314:	1400b716 	blt	r2,r16,80065f4 <___svfprintf_internal_r+0x140c>
 8006318:	8c400204 	addi	r17,r17,8
 800631c:	d9403a17 	ldw	r5,232(sp)
 8006320:	dcc022c4 	addi	r19,sp,139
 8006324:	84000044 	addi	r16,r16,1
 8006328:	28c7883a 	add	r3,r5,r3
 800632c:	8cc00015 	stw	r19,0(r17)
 8006330:	89400115 	stw	r5,4(r17)
 8006334:	d8c02015 	stw	r3,128(sp)
 8006338:	dc001f15 	stw	r16,124(sp)
 800633c:	008001c4 	movi	r2,7
 8006340:	14000e16 	blt	r2,r16,800637c <___svfprintf_internal_r+0x1194>
 8006344:	8a000204 	addi	r8,r17,8
 8006348:	003d8f06 	br	8005988 <__alt_data_end+0xfc005988>
 800634c:	010200b4 	movhi	r4,2050
 8006350:	2137e484 	addi	r4,r4,-8302
 8006354:	d9002b15 	stw	r4,172(sp)
 8006358:	d9002b17 	ldw	r4,172(sp)
 800635c:	1c07883a 	add	r3,r3,r16
 8006360:	44000115 	stw	r16,4(r8)
 8006364:	41000015 	stw	r4,0(r8)
 8006368:	10800044 	addi	r2,r2,1
 800636c:	d8c02015 	stw	r3,128(sp)
 8006370:	d8801f15 	stw	r2,124(sp)
 8006374:	010001c4 	movi	r4,7
 8006378:	20bd820e 	bge	r4,r2,8005984 <__alt_data_end+0xfc005984>
 800637c:	d9002f17 	ldw	r4,188(sp)
 8006380:	b00b883a 	mov	r5,r22
 8006384:	b80d883a 	mov	r6,r23
 8006388:	80123540 	call	8012354 <__ssprint_r>
 800638c:	103c5f1e 	bne	r2,zero,800550c <__alt_data_end+0xfc00550c>
 8006390:	d8c02017 	ldw	r3,128(sp)
 8006394:	da000404 	addi	r8,sp,16
 8006398:	003d7b06 	br	8005988 <__alt_data_end+0xfc005988>
 800639c:	d9002f17 	ldw	r4,188(sp)
 80063a0:	b00b883a 	mov	r5,r22
 80063a4:	b80d883a 	mov	r6,r23
 80063a8:	80123540 	call	8012354 <__ssprint_r>
 80063ac:	103db226 	beq	r2,zero,8005a78 <__alt_data_end+0xfc005a78>
 80063b0:	003c5606 	br	800550c <__alt_data_end+0xfc00550c>
 80063b4:	10803fcc 	andi	r2,r2,255
 80063b8:	1000201e 	bne	r2,zero,800643c <___svfprintf_internal_r+0x1254>
 80063bc:	e080004c 	andi	r2,fp,1
 80063c0:	10001e26 	beq	r2,zero,800643c <___svfprintf_internal_r+0x1254>
 80063c4:	00800c04 	movi	r2,48
 80063c8:	d8c01dc4 	addi	r3,sp,119
 80063cc:	d8801dc5 	stb	r2,119(sp)
 80063d0:	dc403d17 	ldw	r17,244(sp)
 80063d4:	d8c03115 	stw	r3,196(sp)
 80063d8:	003cc106 	br	80056e0 <__alt_data_end+0xfc0056e0>
 80063dc:	d9002f17 	ldw	r4,188(sp)
 80063e0:	b00b883a 	mov	r5,r22
 80063e4:	b80d883a 	mov	r6,r23
 80063e8:	80123540 	call	8012354 <__ssprint_r>
 80063ec:	103c471e 	bne	r2,zero,800550c <__alt_data_end+0xfc00550c>
 80063f0:	d8c02017 	ldw	r3,128(sp)
 80063f4:	da000404 	addi	r8,sp,16
 80063f8:	003d5606 	br	8005954 <__alt_data_end+0xfc005954>
 80063fc:	d9002f17 	ldw	r4,188(sp)
 8006400:	b00b883a 	mov	r5,r22
 8006404:	b80d883a 	mov	r6,r23
 8006408:	80123540 	call	8012354 <__ssprint_r>
 800640c:	103c3f1e 	bne	r2,zero,800550c <__alt_data_end+0xfc00550c>
 8006410:	d8c02017 	ldw	r3,128(sp)
 8006414:	da000404 	addi	r8,sp,16
 8006418:	003d0b06 	br	8005848 <__alt_data_end+0xfc005848>
 800641c:	d9002f17 	ldw	r4,188(sp)
 8006420:	b00b883a 	mov	r5,r22
 8006424:	b80d883a 	mov	r6,r23
 8006428:	80123540 	call	8012354 <__ssprint_r>
 800642c:	103c371e 	bne	r2,zero,800550c <__alt_data_end+0xfc00550c>
 8006430:	d8c02017 	ldw	r3,128(sp)
 8006434:	da000404 	addi	r8,sp,16
 8006438:	003d1106 	br	8005880 <__alt_data_end+0xfc005880>
 800643c:	0023883a 	mov	r17,zero
 8006440:	ddc03115 	stw	r23,196(sp)
 8006444:	003ca606 	br	80056e0 <__alt_data_end+0xfc0056e0>
 8006448:	dc002617 	ldw	r16,152(sp)
 800644c:	0401470e 	bge	zero,r16,800696c <___svfprintf_internal_r+0x1784>
 8006450:	d8803317 	ldw	r2,204(sp)
 8006454:	d9403117 	ldw	r5,196(sp)
 8006458:	d9003417 	ldw	r4,208(sp)
 800645c:	1023883a 	mov	r17,r2
 8006460:	28a1883a 	add	r16,r5,r2
 8006464:	2080010e 	bge	r4,r2,800646c <___svfprintf_internal_r+0x1284>
 8006468:	2023883a 	mov	r17,r4
 800646c:	04400b0e 	bge	zero,r17,800649c <___svfprintf_internal_r+0x12b4>
 8006470:	d8801f17 	ldw	r2,124(sp)
 8006474:	d9403117 	ldw	r5,196(sp)
 8006478:	1c47883a 	add	r3,r3,r17
 800647c:	10800044 	addi	r2,r2,1
 8006480:	41400015 	stw	r5,0(r8)
 8006484:	44400115 	stw	r17,4(r8)
 8006488:	d8c02015 	stw	r3,128(sp)
 800648c:	d8801f15 	stw	r2,124(sp)
 8006490:	010001c4 	movi	r4,7
 8006494:	20825f16 	blt	r4,r2,8006e14 <___svfprintf_internal_r+0x1c2c>
 8006498:	42000204 	addi	r8,r8,8
 800649c:	88025b16 	blt	r17,zero,8006e0c <___svfprintf_internal_r+0x1c24>
 80064a0:	d8803417 	ldw	r2,208(sp)
 80064a4:	1463c83a 	sub	r17,r2,r17
 80064a8:	0440620e 	bge	zero,r17,8006634 <___svfprintf_internal_r+0x144c>
 80064ac:	04c00404 	movi	r19,16
 80064b0:	d8801f17 	ldw	r2,124(sp)
 80064b4:	9c41130e 	bge	r19,r17,8006904 <___svfprintf_internal_r+0x171c>
 80064b8:	014200b4 	movhi	r5,2050
 80064bc:	2977e484 	addi	r5,r5,-8302
 80064c0:	d9402b15 	stw	r5,172(sp)
 80064c4:	054001c4 	movi	r21,7
 80064c8:	dc802f17 	ldw	r18,188(sp)
 80064cc:	00000306 	br	80064dc <___svfprintf_internal_r+0x12f4>
 80064d0:	42000204 	addi	r8,r8,8
 80064d4:	8c7ffc04 	addi	r17,r17,-16
 80064d8:	9c410d0e 	bge	r19,r17,8006910 <___svfprintf_internal_r+0x1728>
 80064dc:	18c00404 	addi	r3,r3,16
 80064e0:	10800044 	addi	r2,r2,1
 80064e4:	45000015 	stw	r20,0(r8)
 80064e8:	44c00115 	stw	r19,4(r8)
 80064ec:	d8c02015 	stw	r3,128(sp)
 80064f0:	d8801f15 	stw	r2,124(sp)
 80064f4:	a8bff60e 	bge	r21,r2,80064d0 <__alt_data_end+0xfc0064d0>
 80064f8:	9009883a 	mov	r4,r18
 80064fc:	b00b883a 	mov	r5,r22
 8006500:	b80d883a 	mov	r6,r23
 8006504:	80123540 	call	8012354 <__ssprint_r>
 8006508:	103c001e 	bne	r2,zero,800550c <__alt_data_end+0xfc00550c>
 800650c:	d8c02017 	ldw	r3,128(sp)
 8006510:	d8801f17 	ldw	r2,124(sp)
 8006514:	da000404 	addi	r8,sp,16
 8006518:	003fee06 	br	80064d4 <__alt_data_end+0xfc0064d4>
 800651c:	d9002f17 	ldw	r4,188(sp)
 8006520:	b00b883a 	mov	r5,r22
 8006524:	b80d883a 	mov	r6,r23
 8006528:	80123540 	call	8012354 <__ssprint_r>
 800652c:	103bf71e 	bne	r2,zero,800550c <__alt_data_end+0xfc00550c>
 8006530:	d8c02017 	ldw	r3,128(sp)
 8006534:	d8802787 	ldb	r2,158(sp)
 8006538:	da000404 	addi	r8,sp,16
 800653c:	003cb506 	br	8005814 <__alt_data_end+0xfc005814>
 8006540:	00800084 	movi	r2,2
 8006544:	9546b03a 	or	r3,r18,r21
 8006548:	003d8c06 	br	8005b7c <__alt_data_end+0xfc005b7c>
 800654c:	d8803317 	ldw	r2,204(sp)
 8006550:	14ffffc4 	addi	r19,r2,-1
 8006554:	04ff710e 	bge	zero,r19,800631c <__alt_data_end+0xfc00631c>
 8006558:	05400404 	movi	r21,16
 800655c:	acc2f80e 	bge	r21,r19,8007140 <___svfprintf_internal_r+0x1f58>
 8006560:	014200b4 	movhi	r5,2050
 8006564:	2977e484 	addi	r5,r5,-8302
 8006568:	d9402b15 	stw	r5,172(sp)
 800656c:	01c001c4 	movi	r7,7
 8006570:	dc802f17 	ldw	r18,188(sp)
 8006574:	00000306 	br	8006584 <___svfprintf_internal_r+0x139c>
 8006578:	9cfffc04 	addi	r19,r19,-16
 800657c:	8c400204 	addi	r17,r17,8
 8006580:	acc0130e 	bge	r21,r19,80065d0 <___svfprintf_internal_r+0x13e8>
 8006584:	18c00404 	addi	r3,r3,16
 8006588:	84000044 	addi	r16,r16,1
 800658c:	8d000015 	stw	r20,0(r17)
 8006590:	8d400115 	stw	r21,4(r17)
 8006594:	d8c02015 	stw	r3,128(sp)
 8006598:	dc001f15 	stw	r16,124(sp)
 800659c:	3c3ff60e 	bge	r7,r16,8006578 <__alt_data_end+0xfc006578>
 80065a0:	9009883a 	mov	r4,r18
 80065a4:	b00b883a 	mov	r5,r22
 80065a8:	b80d883a 	mov	r6,r23
 80065ac:	d9c03e15 	stw	r7,248(sp)
 80065b0:	80123540 	call	8012354 <__ssprint_r>
 80065b4:	d9c03e17 	ldw	r7,248(sp)
 80065b8:	103bd41e 	bne	r2,zero,800550c <__alt_data_end+0xfc00550c>
 80065bc:	9cfffc04 	addi	r19,r19,-16
 80065c0:	d8c02017 	ldw	r3,128(sp)
 80065c4:	dc001f17 	ldw	r16,124(sp)
 80065c8:	dc400404 	addi	r17,sp,16
 80065cc:	acffed16 	blt	r21,r19,8006584 <__alt_data_end+0xfc006584>
 80065d0:	d8802b17 	ldw	r2,172(sp)
 80065d4:	1cc7883a 	add	r3,r3,r19
 80065d8:	84000044 	addi	r16,r16,1
 80065dc:	88800015 	stw	r2,0(r17)
 80065e0:	8cc00115 	stw	r19,4(r17)
 80065e4:	d8c02015 	stw	r3,128(sp)
 80065e8:	dc001f15 	stw	r16,124(sp)
 80065ec:	008001c4 	movi	r2,7
 80065f0:	143f490e 	bge	r2,r16,8006318 <__alt_data_end+0xfc006318>
 80065f4:	d9002f17 	ldw	r4,188(sp)
 80065f8:	b00b883a 	mov	r5,r22
 80065fc:	b80d883a 	mov	r6,r23
 8006600:	80123540 	call	8012354 <__ssprint_r>
 8006604:	103bc11e 	bne	r2,zero,800550c <__alt_data_end+0xfc00550c>
 8006608:	d8c02017 	ldw	r3,128(sp)
 800660c:	dc001f17 	ldw	r16,124(sp)
 8006610:	dc400404 	addi	r17,sp,16
 8006614:	003f4106 	br	800631c <__alt_data_end+0xfc00631c>
 8006618:	d9002f17 	ldw	r4,188(sp)
 800661c:	b00b883a 	mov	r5,r22
 8006620:	b80d883a 	mov	r6,r23
 8006624:	80123540 	call	8012354 <__ssprint_r>
 8006628:	103bb81e 	bne	r2,zero,800550c <__alt_data_end+0xfc00550c>
 800662c:	d8c02017 	ldw	r3,128(sp)
 8006630:	da000404 	addi	r8,sp,16
 8006634:	d9403117 	ldw	r5,196(sp)
 8006638:	d9003417 	ldw	r4,208(sp)
 800663c:	d8802617 	ldw	r2,152(sp)
 8006640:	2923883a 	add	r17,r5,r4
 8006644:	d9403317 	ldw	r5,204(sp)
 8006648:	11400216 	blt	r2,r5,8006654 <___svfprintf_internal_r+0x146c>
 800664c:	e100004c 	andi	r4,fp,1
 8006650:	20000d26 	beq	r4,zero,8006688 <___svfprintf_internal_r+0x14a0>
 8006654:	d9003917 	ldw	r4,228(sp)
 8006658:	d9403517 	ldw	r5,212(sp)
 800665c:	1907883a 	add	r3,r3,r4
 8006660:	d9001f17 	ldw	r4,124(sp)
 8006664:	41400015 	stw	r5,0(r8)
 8006668:	d9403917 	ldw	r5,228(sp)
 800666c:	21000044 	addi	r4,r4,1
 8006670:	d8c02015 	stw	r3,128(sp)
 8006674:	41400115 	stw	r5,4(r8)
 8006678:	d9001f15 	stw	r4,124(sp)
 800667c:	014001c4 	movi	r5,7
 8006680:	2901ec16 	blt	r5,r4,8006e34 <___svfprintf_internal_r+0x1c4c>
 8006684:	42000204 	addi	r8,r8,8
 8006688:	d9003317 	ldw	r4,204(sp)
 800668c:	2085c83a 	sub	r2,r4,r2
 8006690:	8449c83a 	sub	r4,r16,r17
 8006694:	1021883a 	mov	r16,r2
 8006698:	2080010e 	bge	r4,r2,80066a0 <___svfprintf_internal_r+0x14b8>
 800669c:	2021883a 	mov	r16,r4
 80066a0:	04000a0e 	bge	zero,r16,80066cc <___svfprintf_internal_r+0x14e4>
 80066a4:	d9001f17 	ldw	r4,124(sp)
 80066a8:	1c07883a 	add	r3,r3,r16
 80066ac:	44400015 	stw	r17,0(r8)
 80066b0:	21000044 	addi	r4,r4,1
 80066b4:	44000115 	stw	r16,4(r8)
 80066b8:	d8c02015 	stw	r3,128(sp)
 80066bc:	d9001f15 	stw	r4,124(sp)
 80066c0:	014001c4 	movi	r5,7
 80066c4:	2901f216 	blt	r5,r4,8006e90 <___svfprintf_internal_r+0x1ca8>
 80066c8:	42000204 	addi	r8,r8,8
 80066cc:	80020a16 	blt	r16,zero,8006ef8 <___svfprintf_internal_r+0x1d10>
 80066d0:	1421c83a 	sub	r16,r2,r16
 80066d4:	043cac0e 	bge	zero,r16,8005988 <__alt_data_end+0xfc005988>
 80066d8:	04400404 	movi	r17,16
 80066dc:	d8801f17 	ldw	r2,124(sp)
 80066e0:	8c3f1a0e 	bge	r17,r16,800634c <__alt_data_end+0xfc00634c>
 80066e4:	014200b4 	movhi	r5,2050
 80066e8:	2977e484 	addi	r5,r5,-8302
 80066ec:	d9402b15 	stw	r5,172(sp)
 80066f0:	04c001c4 	movi	r19,7
 80066f4:	dc802f17 	ldw	r18,188(sp)
 80066f8:	00000306 	br	8006708 <___svfprintf_internal_r+0x1520>
 80066fc:	42000204 	addi	r8,r8,8
 8006700:	843ffc04 	addi	r16,r16,-16
 8006704:	8c3f140e 	bge	r17,r16,8006358 <__alt_data_end+0xfc006358>
 8006708:	18c00404 	addi	r3,r3,16
 800670c:	10800044 	addi	r2,r2,1
 8006710:	45000015 	stw	r20,0(r8)
 8006714:	44400115 	stw	r17,4(r8)
 8006718:	d8c02015 	stw	r3,128(sp)
 800671c:	d8801f15 	stw	r2,124(sp)
 8006720:	98bff60e 	bge	r19,r2,80066fc <__alt_data_end+0xfc0066fc>
 8006724:	9009883a 	mov	r4,r18
 8006728:	b00b883a 	mov	r5,r22
 800672c:	b80d883a 	mov	r6,r23
 8006730:	80123540 	call	8012354 <__ssprint_r>
 8006734:	103b751e 	bne	r2,zero,800550c <__alt_data_end+0xfc00550c>
 8006738:	d8c02017 	ldw	r3,128(sp)
 800673c:	d8801f17 	ldw	r2,124(sp)
 8006740:	da000404 	addi	r8,sp,16
 8006744:	003fee06 	br	8006700 <__alt_data_end+0xfc006700>
 8006748:	e088703a 	and	r4,fp,r2
 800674c:	203ec81e 	bne	r4,zero,8006270 <__alt_data_end+0xfc006270>
 8006750:	dc001f17 	ldw	r16,124(sp)
 8006754:	d9003117 	ldw	r4,196(sp)
 8006758:	40800115 	stw	r2,4(r8)
 800675c:	84000044 	addi	r16,r16,1
 8006760:	41000015 	stw	r4,0(r8)
 8006764:	d8c02015 	stw	r3,128(sp)
 8006768:	dc001f15 	stw	r16,124(sp)
 800676c:	008001c4 	movi	r2,7
 8006770:	143fa016 	blt	r2,r16,80065f4 <__alt_data_end+0xfc0065f4>
 8006774:	44400204 	addi	r17,r8,8
 8006778:	003ee806 	br	800631c <__alt_data_end+0xfc00631c>
 800677c:	d9002f17 	ldw	r4,188(sp)
 8006780:	b00b883a 	mov	r5,r22
 8006784:	b80d883a 	mov	r6,r23
 8006788:	80123540 	call	8012354 <__ssprint_r>
 800678c:	103b5f1e 	bne	r2,zero,800550c <__alt_data_end+0xfc00550c>
 8006790:	d8c02017 	ldw	r3,128(sp)
 8006794:	dc001f17 	ldw	r16,124(sp)
 8006798:	da000404 	addi	r8,sp,16
 800679c:	003ebf06 	br	800629c <__alt_data_end+0xfc00629c>
 80067a0:	d9002f17 	ldw	r4,188(sp)
 80067a4:	b00b883a 	mov	r5,r22
 80067a8:	b80d883a 	mov	r6,r23
 80067ac:	80123540 	call	8012354 <__ssprint_r>
 80067b0:	103b561e 	bne	r2,zero,800550c <__alt_data_end+0xfc00550c>
 80067b4:	d8c02017 	ldw	r3,128(sp)
 80067b8:	dc001f17 	ldw	r16,124(sp)
 80067bc:	dc400404 	addi	r17,sp,16
 80067c0:	003ec106 	br	80062c8 <__alt_data_end+0xfc0062c8>
 80067c4:	d9002f17 	ldw	r4,188(sp)
 80067c8:	b00b883a 	mov	r5,r22
 80067cc:	b80d883a 	mov	r6,r23
 80067d0:	80123540 	call	8012354 <__ssprint_r>
 80067d4:	103b4d1e 	bne	r2,zero,800550c <__alt_data_end+0xfc00550c>
 80067d8:	d8c02017 	ldw	r3,128(sp)
 80067dc:	da000404 	addi	r8,sp,16
 80067e0:	003c2a06 	br	800588c <__alt_data_end+0xfc00588c>
 80067e4:	da004015 	stw	r8,256(sp)
 80067e8:	da403f15 	stw	r9,252(sp)
 80067ec:	800fc8c0 	call	800fc8c <__fpclassifyd>
 80067f0:	da004017 	ldw	r8,256(sp)
 80067f4:	da403f17 	ldw	r9,252(sp)
 80067f8:	1000a91e 	bne	r2,zero,8006aa0 <___svfprintf_internal_r+0x18b8>
 80067fc:	008011c4 	movi	r2,71
 8006800:	14011016 	blt	r2,r16,8006c44 <___svfprintf_internal_r+0x1a5c>
 8006804:	010200b4 	movhi	r4,2050
 8006808:	2137d604 	addi	r4,r4,-8360
 800680c:	d9003115 	stw	r4,196(sp)
 8006810:	00c000c4 	movi	r3,3
 8006814:	00bfdfc4 	movi	r2,-129
 8006818:	d8c02a15 	stw	r3,168(sp)
 800681c:	e0b8703a 	and	fp,fp,r2
 8006820:	dcc02783 	ldbu	r19,158(sp)
 8006824:	dc802d15 	stw	r18,180(sp)
 8006828:	1823883a 	mov	r17,r3
 800682c:	d8003215 	stw	zero,200(sp)
 8006830:	d8003415 	stw	zero,208(sp)
 8006834:	003baf06 	br	80056f4 <__alt_data_end+0xfc0056f4>
 8006838:	e0c0100c 	andi	r3,fp,64
 800683c:	18012a26 	beq	r3,zero,8006ce8 <___svfprintf_internal_r+0x1b00>
 8006840:	d9002d17 	ldw	r4,180(sp)
 8006844:	1480000b 	ldhu	r18,0(r2)
 8006848:	002b883a 	mov	r21,zero
 800684c:	21000104 	addi	r4,r4,4
 8006850:	d9002d15 	stw	r4,180(sp)
 8006854:	003d3206 	br	8005d20 <__alt_data_end+0xfc005d20>
 8006858:	e080100c 	andi	r2,fp,64
 800685c:	10011326 	beq	r2,zero,8006cac <___svfprintf_internal_r+0x1ac4>
 8006860:	d8c02d17 	ldw	r3,180(sp)
 8006864:	002b883a 	mov	r21,zero
 8006868:	0005883a 	mov	r2,zero
 800686c:	1c80000b 	ldhu	r18,0(r3)
 8006870:	18c00104 	addi	r3,r3,4
 8006874:	d8c02d15 	stw	r3,180(sp)
 8006878:	9007883a 	mov	r3,r18
 800687c:	003cbf06 	br	8005b7c <__alt_data_end+0xfc005b7c>
 8006880:	e080040c 	andi	r2,fp,16
 8006884:	10011e26 	beq	r2,zero,8006d00 <___svfprintf_internal_r+0x1b18>
 8006888:	d9402d17 	ldw	r5,180(sp)
 800688c:	d8c03017 	ldw	r3,192(sp)
 8006890:	28800017 	ldw	r2,0(r5)
 8006894:	29400104 	addi	r5,r5,4
 8006898:	d9402d15 	stw	r5,180(sp)
 800689c:	10c00015 	stw	r3,0(r2)
 80068a0:	003a7d06 	br	8005298 <__alt_data_end+0xfc005298>
 80068a4:	e4000007 	ldb	r16,0(fp)
 80068a8:	e005883a 	mov	r2,fp
 80068ac:	003aa506 	br	8005344 <__alt_data_end+0xfc005344>
 80068b0:	e080100c 	andi	r2,fp,64
 80068b4:	10010526 	beq	r2,zero,8006ccc <___svfprintf_internal_r+0x1ae4>
 80068b8:	1c80000f 	ldh	r18,0(r3)
 80068bc:	d8802d17 	ldw	r2,180(sp)
 80068c0:	902bd7fa 	srai	r21,r18,31
 80068c4:	10800104 	addi	r2,r2,4
 80068c8:	d8802d15 	stw	r2,180(sp)
 80068cc:	a805883a 	mov	r2,r21
 80068d0:	003b5c06 	br	8005644 <__alt_data_end+0xfc005644>
 80068d4:	e080100c 	andi	r2,fp,64
 80068d8:	1000ec26 	beq	r2,zero,8006c8c <___svfprintf_internal_r+0x1aa4>
 80068dc:	d8802d17 	ldw	r2,180(sp)
 80068e0:	002b883a 	mov	r21,zero
 80068e4:	1480000b 	ldhu	r18,0(r2)
 80068e8:	10800104 	addi	r2,r2,4
 80068ec:	d8802d15 	stw	r2,180(sp)
 80068f0:	9007883a 	mov	r3,r18
 80068f4:	00800044 	movi	r2,1
 80068f8:	003ca006 	br	8005b7c <__alt_data_end+0xfc005b7c>
 80068fc:	00800084 	movi	r2,2
 8006900:	003c9e06 	br	8005b7c <__alt_data_end+0xfc005b7c>
 8006904:	010200b4 	movhi	r4,2050
 8006908:	2137e484 	addi	r4,r4,-8302
 800690c:	d9002b15 	stw	r4,172(sp)
 8006910:	d9002b17 	ldw	r4,172(sp)
 8006914:	1c47883a 	add	r3,r3,r17
 8006918:	10800044 	addi	r2,r2,1
 800691c:	41000015 	stw	r4,0(r8)
 8006920:	44400115 	stw	r17,4(r8)
 8006924:	d8c02015 	stw	r3,128(sp)
 8006928:	d8801f15 	stw	r2,124(sp)
 800692c:	010001c4 	movi	r4,7
 8006930:	20bf3916 	blt	r4,r2,8006618 <__alt_data_end+0xfc006618>
 8006934:	42000204 	addi	r8,r8,8
 8006938:	003f3e06 	br	8006634 <__alt_data_end+0xfc006634>
 800693c:	010200b4 	movhi	r4,2050
 8006940:	2137e484 	addi	r4,r4,-8302
 8006944:	d9002b15 	stw	r4,172(sp)
 8006948:	003bf806 	br	800592c <__alt_data_end+0xfc00592c>
 800694c:	d9002f17 	ldw	r4,188(sp)
 8006950:	b00b883a 	mov	r5,r22
 8006954:	b80d883a 	mov	r6,r23
 8006958:	80123540 	call	8012354 <__ssprint_r>
 800695c:	103aeb1e 	bne	r2,zero,800550c <__alt_data_end+0xfc00550c>
 8006960:	d8c02017 	ldw	r3,128(sp)
 8006964:	da000404 	addi	r8,sp,16
 8006968:	003dc806 	br	800608c <__alt_data_end+0xfc00608c>
 800696c:	d8801f17 	ldw	r2,124(sp)
 8006970:	014200b4 	movhi	r5,2050
 8006974:	01000044 	movi	r4,1
 8006978:	18c00044 	addi	r3,r3,1
 800697c:	10800044 	addi	r2,r2,1
 8006980:	2977e404 	addi	r5,r5,-8304
 8006984:	41000115 	stw	r4,4(r8)
 8006988:	41400015 	stw	r5,0(r8)
 800698c:	d8c02015 	stw	r3,128(sp)
 8006990:	d8801f15 	stw	r2,124(sp)
 8006994:	010001c4 	movi	r4,7
 8006998:	2080ae16 	blt	r4,r2,8006c54 <___svfprintf_internal_r+0x1a6c>
 800699c:	42000204 	addi	r8,r8,8
 80069a0:	8000041e 	bne	r16,zero,80069b4 <___svfprintf_internal_r+0x17cc>
 80069a4:	d8803317 	ldw	r2,204(sp)
 80069a8:	1000021e 	bne	r2,zero,80069b4 <___svfprintf_internal_r+0x17cc>
 80069ac:	e080004c 	andi	r2,fp,1
 80069b0:	103bf526 	beq	r2,zero,8005988 <__alt_data_end+0xfc005988>
 80069b4:	d9003917 	ldw	r4,228(sp)
 80069b8:	d8801f17 	ldw	r2,124(sp)
 80069bc:	d9403517 	ldw	r5,212(sp)
 80069c0:	1907883a 	add	r3,r3,r4
 80069c4:	10800044 	addi	r2,r2,1
 80069c8:	41000115 	stw	r4,4(r8)
 80069cc:	41400015 	stw	r5,0(r8)
 80069d0:	d8c02015 	stw	r3,128(sp)
 80069d4:	d8801f15 	stw	r2,124(sp)
 80069d8:	010001c4 	movi	r4,7
 80069dc:	2081ac16 	blt	r4,r2,8007090 <___svfprintf_internal_r+0x1ea8>
 80069e0:	42000204 	addi	r8,r8,8
 80069e4:	0421c83a 	sub	r16,zero,r16
 80069e8:	0400d60e 	bge	zero,r16,8006d44 <___svfprintf_internal_r+0x1b5c>
 80069ec:	04400404 	movi	r17,16
 80069f0:	8c01190e 	bge	r17,r16,8006e58 <___svfprintf_internal_r+0x1c70>
 80069f4:	014200b4 	movhi	r5,2050
 80069f8:	2977e484 	addi	r5,r5,-8302
 80069fc:	d9402b15 	stw	r5,172(sp)
 8006a00:	04c001c4 	movi	r19,7
 8006a04:	dc802f17 	ldw	r18,188(sp)
 8006a08:	00000306 	br	8006a18 <___svfprintf_internal_r+0x1830>
 8006a0c:	42000204 	addi	r8,r8,8
 8006a10:	843ffc04 	addi	r16,r16,-16
 8006a14:	8c01130e 	bge	r17,r16,8006e64 <___svfprintf_internal_r+0x1c7c>
 8006a18:	18c00404 	addi	r3,r3,16
 8006a1c:	10800044 	addi	r2,r2,1
 8006a20:	45000015 	stw	r20,0(r8)
 8006a24:	44400115 	stw	r17,4(r8)
 8006a28:	d8c02015 	stw	r3,128(sp)
 8006a2c:	d8801f15 	stw	r2,124(sp)
 8006a30:	98bff60e 	bge	r19,r2,8006a0c <__alt_data_end+0xfc006a0c>
 8006a34:	9009883a 	mov	r4,r18
 8006a38:	b00b883a 	mov	r5,r22
 8006a3c:	b80d883a 	mov	r6,r23
 8006a40:	80123540 	call	8012354 <__ssprint_r>
 8006a44:	103ab11e 	bne	r2,zero,800550c <__alt_data_end+0xfc00550c>
 8006a48:	d8c02017 	ldw	r3,128(sp)
 8006a4c:	d8801f17 	ldw	r2,124(sp)
 8006a50:	da000404 	addi	r8,sp,16
 8006a54:	003fee06 	br	8006a10 <__alt_data_end+0xfc006a10>
 8006a58:	d8802e17 	ldw	r2,184(sp)
 8006a5c:	d8c02d15 	stw	r3,180(sp)
 8006a60:	0085c83a 	sub	r2,zero,r2
 8006a64:	d8802e15 	stw	r2,184(sp)
 8006a68:	e005883a 	mov	r2,fp
 8006a6c:	003aba06 	br	8005558 <__alt_data_end+0xfc005558>
 8006a70:	e0800044 	addi	r2,fp,1
 8006a74:	9cc00814 	ori	r19,r19,32
 8006a78:	e4000047 	ldb	r16,1(fp)
 8006a7c:	003a3106 	br	8005344 <__alt_data_end+0xfc005344>
 8006a80:	d9002f17 	ldw	r4,188(sp)
 8006a84:	b00b883a 	mov	r5,r22
 8006a88:	b80d883a 	mov	r6,r23
 8006a8c:	80123540 	call	8012354 <__ssprint_r>
 8006a90:	103a9e1e 	bne	r2,zero,800550c <__alt_data_end+0xfc00550c>
 8006a94:	d8c02017 	ldw	r3,128(sp)
 8006a98:	da000404 	addi	r8,sp,16
 8006a9c:	003d8d06 	br	80060d4 <__alt_data_end+0xfc0060d4>
 8006aa0:	04fff7c4 	movi	r19,-33
 8006aa4:	00bfffc4 	movi	r2,-1
 8006aa8:	84e6703a 	and	r19,r16,r19
 8006aac:	48807226 	beq	r9,r2,8006c78 <___svfprintf_internal_r+0x1a90>
 8006ab0:	008011c4 	movi	r2,71
 8006ab4:	98818026 	beq	r19,r2,80070b8 <___svfprintf_internal_r+0x1ed0>
 8006ab8:	d9003817 	ldw	r4,224(sp)
 8006abc:	e0c04014 	ori	r3,fp,256
 8006ac0:	d8c02d15 	stw	r3,180(sp)
 8006ac4:	20017f16 	blt	r4,zero,80070c4 <___svfprintf_internal_r+0x1edc>
 8006ac8:	dc403817 	ldw	r17,224(sp)
 8006acc:	d8002a05 	stb	zero,168(sp)
 8006ad0:	00801984 	movi	r2,102
 8006ad4:	8080ad26 	beq	r16,r2,8006d8c <___svfprintf_internal_r+0x1ba4>
 8006ad8:	00801184 	movi	r2,70
 8006adc:	8080ab26 	beq	r16,r2,8006d8c <___svfprintf_internal_r+0x1ba4>
 8006ae0:	00801144 	movi	r2,69
 8006ae4:	98818426 	beq	r19,r2,80070f8 <___svfprintf_internal_r+0x1f10>
 8006ae8:	482b883a 	mov	r21,r9
 8006aec:	d8802604 	addi	r2,sp,152
 8006af0:	d8800115 	stw	r2,4(sp)
 8006af4:	d9002f17 	ldw	r4,188(sp)
 8006af8:	d8802504 	addi	r2,sp,148
 8006afc:	d9403717 	ldw	r5,220(sp)
 8006b00:	d8800215 	stw	r2,8(sp)
 8006b04:	d8802104 	addi	r2,sp,132
 8006b08:	dd400015 	stw	r21,0(sp)
 8006b0c:	d8800315 	stw	r2,12(sp)
 8006b10:	880d883a 	mov	r6,r17
 8006b14:	01c00084 	movi	r7,2
 8006b18:	da004015 	stw	r8,256(sp)
 8006b1c:	da403f15 	stw	r9,252(sp)
 8006b20:	800b0900 	call	800b090 <_dtoa_r>
 8006b24:	d8803115 	stw	r2,196(sp)
 8006b28:	008019c4 	movi	r2,103
 8006b2c:	da004017 	ldw	r8,256(sp)
 8006b30:	da403f17 	ldw	r9,252(sp)
 8006b34:	80800226 	beq	r16,r2,8006b40 <___svfprintf_internal_r+0x1958>
 8006b38:	008011c4 	movi	r2,71
 8006b3c:	8080a51e 	bne	r16,r2,8006dd4 <___svfprintf_internal_r+0x1bec>
 8006b40:	e080004c 	andi	r2,fp,1
 8006b44:	10017226 	beq	r2,zero,8007110 <___svfprintf_internal_r+0x1f28>
 8006b48:	d8c03117 	ldw	r3,196(sp)
 8006b4c:	1d55883a 	add	r10,r3,r21
 8006b50:	d9003717 	ldw	r4,220(sp)
 8006b54:	880b883a 	mov	r5,r17
 8006b58:	000d883a 	mov	r6,zero
 8006b5c:	000f883a 	mov	r7,zero
 8006b60:	da004015 	stw	r8,256(sp)
 8006b64:	da403f15 	stw	r9,252(sp)
 8006b68:	da803e15 	stw	r10,248(sp)
 8006b6c:	80188440 	call	8018844 <__eqdf2>
 8006b70:	da004017 	ldw	r8,256(sp)
 8006b74:	da403f17 	ldw	r9,252(sp)
 8006b78:	da803e17 	ldw	r10,248(sp)
 8006b7c:	1000fd26 	beq	r2,zero,8006f74 <___svfprintf_internal_r+0x1d8c>
 8006b80:	d8802117 	ldw	r2,132(sp)
 8006b84:	1280062e 	bgeu	r2,r10,8006ba0 <___svfprintf_internal_r+0x19b8>
 8006b88:	01000c04 	movi	r4,48
 8006b8c:	10c00044 	addi	r3,r2,1
 8006b90:	d8c02115 	stw	r3,132(sp)
 8006b94:	11000005 	stb	r4,0(r2)
 8006b98:	d8802117 	ldw	r2,132(sp)
 8006b9c:	12bffb36 	bltu	r2,r10,8006b8c <__alt_data_end+0xfc006b8c>
 8006ba0:	d8c03117 	ldw	r3,196(sp)
 8006ba4:	10c5c83a 	sub	r2,r2,r3
 8006ba8:	d8803315 	stw	r2,204(sp)
 8006bac:	008011c4 	movi	r2,71
 8006bb0:	9880e226 	beq	r19,r2,8006f3c <___svfprintf_internal_r+0x1d54>
 8006bb4:	00801944 	movi	r2,101
 8006bb8:	1401a30e 	bge	r2,r16,8007248 <___svfprintf_internal_r+0x2060>
 8006bbc:	d8c02617 	ldw	r3,152(sp)
 8006bc0:	00801984 	movi	r2,102
 8006bc4:	d8c03415 	stw	r3,208(sp)
 8006bc8:	80815326 	beq	r16,r2,8007118 <___svfprintf_internal_r+0x1f30>
 8006bcc:	d8c03417 	ldw	r3,208(sp)
 8006bd0:	d9003317 	ldw	r4,204(sp)
 8006bd4:	19013f16 	blt	r3,r4,80070d4 <___svfprintf_internal_r+0x1eec>
 8006bd8:	e080004c 	andi	r2,fp,1
 8006bdc:	10014826 	beq	r2,zero,8007100 <___svfprintf_internal_r+0x1f18>
 8006be0:	d8c03417 	ldw	r3,208(sp)
 8006be4:	1c400044 	addi	r17,r3,1
 8006be8:	8839883a 	mov	fp,r17
 8006bec:	88014016 	blt	r17,zero,80070f0 <___svfprintf_internal_r+0x1f08>
 8006bf0:	dd402a07 	ldb	r21,168(sp)
 8006bf4:	a800c61e 	bne	r21,zero,8006f10 <___svfprintf_internal_r+0x1d28>
 8006bf8:	df002a15 	stw	fp,168(sp)
 8006bfc:	dcc02783 	ldbu	r19,158(sp)
 8006c00:	df002d17 	ldw	fp,180(sp)
 8006c04:	d8003215 	stw	zero,200(sp)
 8006c08:	dc802d15 	stw	r18,180(sp)
 8006c0c:	003ab906 	br	80056f4 <__alt_data_end+0xfc0056f4>
 8006c10:	010200b4 	movhi	r4,2050
 8006c14:	2137d404 	addi	r4,r4,-8368
 8006c18:	d9003115 	stw	r4,196(sp)
 8006c1c:	003bbe06 	br	8005b18 <__alt_data_end+0xfc005b18>
 8006c20:	d9002f17 	ldw	r4,188(sp)
 8006c24:	04001004 	movi	r16,64
 8006c28:	800b883a 	mov	r5,r16
 8006c2c:	800390c0 	call	800390c <_malloc_r>
 8006c30:	b0800015 	stw	r2,0(r22)
 8006c34:	b0800415 	stw	r2,16(r22)
 8006c38:	10017c26 	beq	r2,zero,800722c <___svfprintf_internal_r+0x2044>
 8006c3c:	b4000515 	stw	r16,20(r22)
 8006c40:	00398306 	br	8005250 <__alt_data_end+0xfc005250>
 8006c44:	014200b4 	movhi	r5,2050
 8006c48:	2977d704 	addi	r5,r5,-8356
 8006c4c:	d9403115 	stw	r5,196(sp)
 8006c50:	003eef06 	br	8006810 <__alt_data_end+0xfc006810>
 8006c54:	d9002f17 	ldw	r4,188(sp)
 8006c58:	b00b883a 	mov	r5,r22
 8006c5c:	b80d883a 	mov	r6,r23
 8006c60:	80123540 	call	8012354 <__ssprint_r>
 8006c64:	103a291e 	bne	r2,zero,800550c <__alt_data_end+0xfc00550c>
 8006c68:	dc002617 	ldw	r16,152(sp)
 8006c6c:	d8c02017 	ldw	r3,128(sp)
 8006c70:	da000404 	addi	r8,sp,16
 8006c74:	003f4a06 	br	80069a0 <__alt_data_end+0xfc0069a0>
 8006c78:	02400184 	movi	r9,6
 8006c7c:	003f8e06 	br	8006ab8 <__alt_data_end+0xfc006ab8>
 8006c80:	d8c03117 	ldw	r3,196(sp)
 8006c84:	b8e3c83a 	sub	r17,r23,r3
 8006c88:	003a9506 	br	80056e0 <__alt_data_end+0xfc0056e0>
 8006c8c:	d8c02d17 	ldw	r3,180(sp)
 8006c90:	002b883a 	mov	r21,zero
 8006c94:	00800044 	movi	r2,1
 8006c98:	1c800017 	ldw	r18,0(r3)
 8006c9c:	18c00104 	addi	r3,r3,4
 8006ca0:	d8c02d15 	stw	r3,180(sp)
 8006ca4:	9007883a 	mov	r3,r18
 8006ca8:	003bb406 	br	8005b7c <__alt_data_end+0xfc005b7c>
 8006cac:	d9002d17 	ldw	r4,180(sp)
 8006cb0:	002b883a 	mov	r21,zero
 8006cb4:	0005883a 	mov	r2,zero
 8006cb8:	24800017 	ldw	r18,0(r4)
 8006cbc:	21000104 	addi	r4,r4,4
 8006cc0:	d9002d15 	stw	r4,180(sp)
 8006cc4:	9007883a 	mov	r3,r18
 8006cc8:	003bac06 	br	8005b7c <__alt_data_end+0xfc005b7c>
 8006ccc:	1c800017 	ldw	r18,0(r3)
 8006cd0:	d8c02d17 	ldw	r3,180(sp)
 8006cd4:	902bd7fa 	srai	r21,r18,31
 8006cd8:	18c00104 	addi	r3,r3,4
 8006cdc:	d8c02d15 	stw	r3,180(sp)
 8006ce0:	a805883a 	mov	r2,r21
 8006ce4:	003a5706 	br	8005644 <__alt_data_end+0xfc005644>
 8006ce8:	d9402d17 	ldw	r5,180(sp)
 8006cec:	14800017 	ldw	r18,0(r2)
 8006cf0:	002b883a 	mov	r21,zero
 8006cf4:	29400104 	addi	r5,r5,4
 8006cf8:	d9402d15 	stw	r5,180(sp)
 8006cfc:	003c0806 	br	8005d20 <__alt_data_end+0xfc005d20>
 8006d00:	e080100c 	andi	r2,fp,64
 8006d04:	10009426 	beq	r2,zero,8006f58 <___svfprintf_internal_r+0x1d70>
 8006d08:	d9002d17 	ldw	r4,180(sp)
 8006d0c:	d9403017 	ldw	r5,192(sp)
 8006d10:	20800017 	ldw	r2,0(r4)
 8006d14:	21000104 	addi	r4,r4,4
 8006d18:	d9002d15 	stw	r4,180(sp)
 8006d1c:	1140000d 	sth	r5,0(r2)
 8006d20:	00395d06 	br	8005298 <__alt_data_end+0xfc005298>
 8006d24:	d9002f17 	ldw	r4,188(sp)
 8006d28:	b00b883a 	mov	r5,r22
 8006d2c:	b80d883a 	mov	r6,r23
 8006d30:	80123540 	call	8012354 <__ssprint_r>
 8006d34:	1039f51e 	bne	r2,zero,800550c <__alt_data_end+0xfc00550c>
 8006d38:	d8c02017 	ldw	r3,128(sp)
 8006d3c:	d8801f17 	ldw	r2,124(sp)
 8006d40:	da000404 	addi	r8,sp,16
 8006d44:	d9403317 	ldw	r5,204(sp)
 8006d48:	d9003117 	ldw	r4,196(sp)
 8006d4c:	10800044 	addi	r2,r2,1
 8006d50:	28c7883a 	add	r3,r5,r3
 8006d54:	41000015 	stw	r4,0(r8)
 8006d58:	41400115 	stw	r5,4(r8)
 8006d5c:	d8c02015 	stw	r3,128(sp)
 8006d60:	d8801f15 	stw	r2,124(sp)
 8006d64:	010001c4 	movi	r4,7
 8006d68:	20bb060e 	bge	r4,r2,8005984 <__alt_data_end+0xfc005984>
 8006d6c:	003d8306 	br	800637c <__alt_data_end+0xfc00637c>
 8006d70:	da004015 	stw	r8,256(sp)
 8006d74:	80049680 	call	8004968 <strlen>
 8006d78:	1023883a 	mov	r17,r2
 8006d7c:	da004017 	ldw	r8,256(sp)
 8006d80:	883c290e 	bge	r17,zero,8005e28 <__alt_data_end+0xfc005e28>
 8006d84:	0005883a 	mov	r2,zero
 8006d88:	003c2706 	br	8005e28 <__alt_data_end+0xfc005e28>
 8006d8c:	d8802604 	addi	r2,sp,152
 8006d90:	d8800115 	stw	r2,4(sp)
 8006d94:	d9002f17 	ldw	r4,188(sp)
 8006d98:	d8802504 	addi	r2,sp,148
 8006d9c:	d9403717 	ldw	r5,220(sp)
 8006da0:	d8800215 	stw	r2,8(sp)
 8006da4:	d8802104 	addi	r2,sp,132
 8006da8:	da400015 	stw	r9,0(sp)
 8006dac:	d8800315 	stw	r2,12(sp)
 8006db0:	880d883a 	mov	r6,r17
 8006db4:	01c000c4 	movi	r7,3
 8006db8:	da004015 	stw	r8,256(sp)
 8006dbc:	da403f15 	stw	r9,252(sp)
 8006dc0:	800b0900 	call	800b090 <_dtoa_r>
 8006dc4:	da403f17 	ldw	r9,252(sp)
 8006dc8:	da004017 	ldw	r8,256(sp)
 8006dcc:	d8803115 	stw	r2,196(sp)
 8006dd0:	482b883a 	mov	r21,r9
 8006dd4:	d8c03117 	ldw	r3,196(sp)
 8006dd8:	00801184 	movi	r2,70
 8006ddc:	1d55883a 	add	r10,r3,r21
 8006de0:	98bf5b1e 	bne	r19,r2,8006b50 <__alt_data_end+0xfc006b50>
 8006de4:	19000007 	ldb	r4,0(r3)
 8006de8:	00800c04 	movi	r2,48
 8006dec:	2080d826 	beq	r4,r2,8007150 <___svfprintf_internal_r+0x1f68>
 8006df0:	d8c02617 	ldw	r3,152(sp)
 8006df4:	50d5883a 	add	r10,r10,r3
 8006df8:	003f5506 	br	8006b50 <__alt_data_end+0xfc006b50>
 8006dfc:	010200b4 	movhi	r4,2050
 8006e00:	2137e884 	addi	r4,r4,-8286
 8006e04:	d9003615 	stw	r4,216(sp)
 8006e08:	003a7706 	br	80057e8 <__alt_data_end+0xfc0057e8>
 8006e0c:	0023883a 	mov	r17,zero
 8006e10:	003da306 	br	80064a0 <__alt_data_end+0xfc0064a0>
 8006e14:	d9002f17 	ldw	r4,188(sp)
 8006e18:	b00b883a 	mov	r5,r22
 8006e1c:	b80d883a 	mov	r6,r23
 8006e20:	80123540 	call	8012354 <__ssprint_r>
 8006e24:	1039b91e 	bne	r2,zero,800550c <__alt_data_end+0xfc00550c>
 8006e28:	d8c02017 	ldw	r3,128(sp)
 8006e2c:	da000404 	addi	r8,sp,16
 8006e30:	003d9a06 	br	800649c <__alt_data_end+0xfc00649c>
 8006e34:	d9002f17 	ldw	r4,188(sp)
 8006e38:	b00b883a 	mov	r5,r22
 8006e3c:	b80d883a 	mov	r6,r23
 8006e40:	80123540 	call	8012354 <__ssprint_r>
 8006e44:	1039b11e 	bne	r2,zero,800550c <__alt_data_end+0xfc00550c>
 8006e48:	d8802617 	ldw	r2,152(sp)
 8006e4c:	d8c02017 	ldw	r3,128(sp)
 8006e50:	da000404 	addi	r8,sp,16
 8006e54:	003e0c06 	br	8006688 <__alt_data_end+0xfc006688>
 8006e58:	010200b4 	movhi	r4,2050
 8006e5c:	2137e484 	addi	r4,r4,-8302
 8006e60:	d9002b15 	stw	r4,172(sp)
 8006e64:	d9002b17 	ldw	r4,172(sp)
 8006e68:	1c07883a 	add	r3,r3,r16
 8006e6c:	10800044 	addi	r2,r2,1
 8006e70:	41000015 	stw	r4,0(r8)
 8006e74:	44000115 	stw	r16,4(r8)
 8006e78:	d8c02015 	stw	r3,128(sp)
 8006e7c:	d8801f15 	stw	r2,124(sp)
 8006e80:	010001c4 	movi	r4,7
 8006e84:	20bfa716 	blt	r4,r2,8006d24 <__alt_data_end+0xfc006d24>
 8006e88:	42000204 	addi	r8,r8,8
 8006e8c:	003fad06 	br	8006d44 <__alt_data_end+0xfc006d44>
 8006e90:	d9002f17 	ldw	r4,188(sp)
 8006e94:	b00b883a 	mov	r5,r22
 8006e98:	b80d883a 	mov	r6,r23
 8006e9c:	80123540 	call	8012354 <__ssprint_r>
 8006ea0:	10399a1e 	bne	r2,zero,800550c <__alt_data_end+0xfc00550c>
 8006ea4:	d8802617 	ldw	r2,152(sp)
 8006ea8:	d9403317 	ldw	r5,204(sp)
 8006eac:	d8c02017 	ldw	r3,128(sp)
 8006eb0:	da000404 	addi	r8,sp,16
 8006eb4:	2885c83a 	sub	r2,r5,r2
 8006eb8:	003e0406 	br	80066cc <__alt_data_end+0xfc0066cc>
 8006ebc:	00800184 	movi	r2,6
 8006ec0:	1240012e 	bgeu	r2,r9,8006ec8 <___svfprintf_internal_r+0x1ce0>
 8006ec4:	1013883a 	mov	r9,r2
 8006ec8:	4823883a 	mov	r17,r9
 8006ecc:	4805883a 	mov	r2,r9
 8006ed0:	4800b616 	blt	r9,zero,80071ac <___svfprintf_internal_r+0x1fc4>
 8006ed4:	014200b4 	movhi	r5,2050
 8006ed8:	2977e204 	addi	r5,r5,-8312
 8006edc:	d8802a15 	stw	r2,168(sp)
 8006ee0:	dc802d15 	stw	r18,180(sp)
 8006ee4:	d8003215 	stw	zero,200(sp)
 8006ee8:	d8003415 	stw	zero,208(sp)
 8006eec:	d9403115 	stw	r5,196(sp)
 8006ef0:	0005883a 	mov	r2,zero
 8006ef4:	003a0606 	br	8005710 <__alt_data_end+0xfc005710>
 8006ef8:	0021883a 	mov	r16,zero
 8006efc:	003df406 	br	80066d0 <__alt_data_end+0xfc0066d0>
 8006f00:	014200b4 	movhi	r5,2050
 8006f04:	2977e884 	addi	r5,r5,-8286
 8006f08:	d9403615 	stw	r5,216(sp)
 8006f0c:	003ac306 	br	8005a1c <__alt_data_end+0xfc005a1c>
 8006f10:	00800b44 	movi	r2,45
 8006f14:	d8802785 	stb	r2,158(sp)
 8006f18:	df002a15 	stw	fp,168(sp)
 8006f1c:	d8003215 	stw	zero,200(sp)
 8006f20:	df002d17 	ldw	fp,180(sp)
 8006f24:	00800b44 	movi	r2,45
 8006f28:	dc802d15 	stw	r18,180(sp)
 8006f2c:	0039f506 	br	8005704 <__alt_data_end+0xfc005704>
 8006f30:	04c00b44 	movi	r19,45
 8006f34:	dcc02785 	stb	r19,158(sp)
 8006f38:	003af206 	br	8005b04 <__alt_data_end+0xfc005b04>
 8006f3c:	d8c02617 	ldw	r3,152(sp)
 8006f40:	00bfff44 	movi	r2,-3
 8006f44:	18801816 	blt	r3,r2,8006fa8 <___svfprintf_internal_r+0x1dc0>
 8006f48:	48c01716 	blt	r9,r3,8006fa8 <___svfprintf_internal_r+0x1dc0>
 8006f4c:	d8c03415 	stw	r3,208(sp)
 8006f50:	040019c4 	movi	r16,103
 8006f54:	003f1d06 	br	8006bcc <__alt_data_end+0xfc006bcc>
 8006f58:	d8c02d17 	ldw	r3,180(sp)
 8006f5c:	d9003017 	ldw	r4,192(sp)
 8006f60:	18800017 	ldw	r2,0(r3)
 8006f64:	18c00104 	addi	r3,r3,4
 8006f68:	d8c02d15 	stw	r3,180(sp)
 8006f6c:	11000015 	stw	r4,0(r2)
 8006f70:	0038c906 	br	8005298 <__alt_data_end+0xfc005298>
 8006f74:	5005883a 	mov	r2,r10
 8006f78:	003f0906 	br	8006ba0 <__alt_data_end+0xfc006ba0>
 8006f7c:	010200b4 	movhi	r4,2050
 8006f80:	2137e484 	addi	r4,r4,-8302
 8006f84:	d9002b15 	stw	r4,172(sp)
 8006f88:	003c9a06 	br	80061f4 <__alt_data_end+0xfc0061f4>
 8006f8c:	da402a15 	stw	r9,168(sp)
 8006f90:	dcc02783 	ldbu	r19,158(sp)
 8006f94:	4823883a 	mov	r17,r9
 8006f98:	dc802d15 	stw	r18,180(sp)
 8006f9c:	d8003215 	stw	zero,200(sp)
 8006fa0:	d8003415 	stw	zero,208(sp)
 8006fa4:	0039d306 	br	80056f4 <__alt_data_end+0xfc0056f4>
 8006fa8:	843fff84 	addi	r16,r16,-2
 8006fac:	1d7fffc4 	addi	r21,r3,-1
 8006fb0:	dd402615 	stw	r21,152(sp)
 8006fb4:	dc0022c5 	stb	r16,139(sp)
 8006fb8:	a8008f16 	blt	r21,zero,80071f8 <___svfprintf_internal_r+0x2010>
 8006fbc:	00800ac4 	movi	r2,43
 8006fc0:	d8802305 	stb	r2,140(sp)
 8006fc4:	00800244 	movi	r2,9
 8006fc8:	1540710e 	bge	r2,r21,8007190 <___svfprintf_internal_r+0x1fa8>
 8006fcc:	dcc022c4 	addi	r19,sp,139
 8006fd0:	dc002b15 	stw	r16,172(sp)
 8006fd4:	4023883a 	mov	r17,r8
 8006fd8:	9821883a 	mov	r16,r19
 8006fdc:	a809883a 	mov	r4,r21
 8006fe0:	01400284 	movi	r5,10
 8006fe4:	80173d80 	call	80173d8 <__modsi3>
 8006fe8:	10800c04 	addi	r2,r2,48
 8006fec:	843fffc4 	addi	r16,r16,-1
 8006ff0:	a809883a 	mov	r4,r21
 8006ff4:	01400284 	movi	r5,10
 8006ff8:	80800005 	stb	r2,0(r16)
 8006ffc:	80173840 	call	8017384 <__divsi3>
 8007000:	01000244 	movi	r4,9
 8007004:	102b883a 	mov	r21,r2
 8007008:	20bff416 	blt	r4,r2,8006fdc <__alt_data_end+0xfc006fdc>
 800700c:	8811883a 	mov	r8,r17
 8007010:	10800c04 	addi	r2,r2,48
 8007014:	8023883a 	mov	r17,r16
 8007018:	897fffc4 	addi	r5,r17,-1
 800701c:	88bfffc5 	stb	r2,-1(r17)
 8007020:	dc002b17 	ldw	r16,172(sp)
 8007024:	2cc08a2e 	bgeu	r5,r19,8007250 <___svfprintf_internal_r+0x2068>
 8007028:	d9802384 	addi	r6,sp,142
 800702c:	344dc83a 	sub	r6,r6,r17
 8007030:	d9002344 	addi	r4,sp,141
 8007034:	998d883a 	add	r6,r19,r6
 8007038:	00000106 	br	8007040 <___svfprintf_internal_r+0x1e58>
 800703c:	28800003 	ldbu	r2,0(r5)
 8007040:	20800005 	stb	r2,0(r4)
 8007044:	21000044 	addi	r4,r4,1
 8007048:	29400044 	addi	r5,r5,1
 800704c:	21bffb1e 	bne	r4,r6,800703c <__alt_data_end+0xfc00703c>
 8007050:	d8802304 	addi	r2,sp,140
 8007054:	1445c83a 	sub	r2,r2,r17
 8007058:	d9402344 	addi	r5,sp,141
 800705c:	2885883a 	add	r2,r5,r2
 8007060:	14e7c83a 	sub	r19,r2,r19
 8007064:	d8803317 	ldw	r2,204(sp)
 8007068:	d8c03317 	ldw	r3,204(sp)
 800706c:	dcc03a15 	stw	r19,232(sp)
 8007070:	14e3883a 	add	r17,r2,r19
 8007074:	00800044 	movi	r2,1
 8007078:	10c0690e 	bge	r2,r3,8007220 <___svfprintf_internal_r+0x2038>
 800707c:	8c400044 	addi	r17,r17,1
 8007080:	8839883a 	mov	fp,r17
 8007084:	88006416 	blt	r17,zero,8007218 <___svfprintf_internal_r+0x2030>
 8007088:	d8003415 	stw	zero,208(sp)
 800708c:	003ed806 	br	8006bf0 <__alt_data_end+0xfc006bf0>
 8007090:	d9002f17 	ldw	r4,188(sp)
 8007094:	b00b883a 	mov	r5,r22
 8007098:	b80d883a 	mov	r6,r23
 800709c:	80123540 	call	8012354 <__ssprint_r>
 80070a0:	10391a1e 	bne	r2,zero,800550c <__alt_data_end+0xfc00550c>
 80070a4:	dc002617 	ldw	r16,152(sp)
 80070a8:	d8c02017 	ldw	r3,128(sp)
 80070ac:	d8801f17 	ldw	r2,124(sp)
 80070b0:	da000404 	addi	r8,sp,16
 80070b4:	003e4b06 	br	80069e4 <__alt_data_end+0xfc0069e4>
 80070b8:	483e7f1e 	bne	r9,zero,8006ab8 <__alt_data_end+0xfc006ab8>
 80070bc:	8813883a 	mov	r9,r17
 80070c0:	003e7d06 	br	8006ab8 <__alt_data_end+0xfc006ab8>
 80070c4:	00c00b44 	movi	r3,45
 80070c8:	2460003c 	xorhi	r17,r4,32768
 80070cc:	d8c02a05 	stb	r3,168(sp)
 80070d0:	003e7f06 	br	8006ad0 <__alt_data_end+0xfc006ad0>
 80070d4:	d8c03417 	ldw	r3,208(sp)
 80070d8:	00c03e0e 	bge	zero,r3,80071d4 <___svfprintf_internal_r+0x1fec>
 80070dc:	04400044 	movi	r17,1
 80070e0:	d9003317 	ldw	r4,204(sp)
 80070e4:	8923883a 	add	r17,r17,r4
 80070e8:	8839883a 	mov	fp,r17
 80070ec:	883ec00e 	bge	r17,zero,8006bf0 <__alt_data_end+0xfc006bf0>
 80070f0:	0039883a 	mov	fp,zero
 80070f4:	003ebe06 	br	8006bf0 <__alt_data_end+0xfc006bf0>
 80070f8:	4d400044 	addi	r21,r9,1
 80070fc:	003e7b06 	br	8006aec <__alt_data_end+0xfc006aec>
 8007100:	1839883a 	mov	fp,r3
 8007104:	18004e16 	blt	r3,zero,8007240 <___svfprintf_internal_r+0x2058>
 8007108:	dc403417 	ldw	r17,208(sp)
 800710c:	003eb806 	br	8006bf0 <__alt_data_end+0xfc006bf0>
 8007110:	d8802117 	ldw	r2,132(sp)
 8007114:	003ea206 	br	8006ba0 <__alt_data_end+0xfc006ba0>
 8007118:	00c0310e 	bge	zero,r3,80071e0 <___svfprintf_internal_r+0x1ff8>
 800711c:	4800021e 	bne	r9,zero,8007128 <___svfprintf_internal_r+0x1f40>
 8007120:	e080004c 	andi	r2,fp,1
 8007124:	103ff626 	beq	r2,zero,8007100 <__alt_data_end+0xfc007100>
 8007128:	d8c03417 	ldw	r3,208(sp)
 800712c:	4a400044 	addi	r9,r9,1
 8007130:	1a63883a 	add	r17,r3,r9
 8007134:	8839883a 	mov	fp,r17
 8007138:	883ead0e 	bge	r17,zero,8006bf0 <__alt_data_end+0xfc006bf0>
 800713c:	003fec06 	br	80070f0 <__alt_data_end+0xfc0070f0>
 8007140:	010200b4 	movhi	r4,2050
 8007144:	2137e484 	addi	r4,r4,-8302
 8007148:	d9002b15 	stw	r4,172(sp)
 800714c:	003d2006 	br	80065d0 <__alt_data_end+0xfc0065d0>
 8007150:	d9003717 	ldw	r4,220(sp)
 8007154:	880b883a 	mov	r5,r17
 8007158:	000d883a 	mov	r6,zero
 800715c:	000f883a 	mov	r7,zero
 8007160:	da004015 	stw	r8,256(sp)
 8007164:	da403f15 	stw	r9,252(sp)
 8007168:	da803e15 	stw	r10,248(sp)
 800716c:	80188440 	call	8018844 <__eqdf2>
 8007170:	da004017 	ldw	r8,256(sp)
 8007174:	da403f17 	ldw	r9,252(sp)
 8007178:	da803e17 	ldw	r10,248(sp)
 800717c:	103f1c26 	beq	r2,zero,8006df0 <__alt_data_end+0xfc006df0>
 8007180:	00800044 	movi	r2,1
 8007184:	1547c83a 	sub	r3,r2,r21
 8007188:	d8c02615 	stw	r3,152(sp)
 800718c:	003f1906 	br	8006df4 <__alt_data_end+0xfc006df4>
 8007190:	00800c04 	movi	r2,48
 8007194:	a8c00c04 	addi	r3,r21,48
 8007198:	d8802345 	stb	r2,141(sp)
 800719c:	d8c02385 	stb	r3,142(sp)
 80071a0:	d88023c4 	addi	r2,sp,143
 80071a4:	dcc022c4 	addi	r19,sp,139
 80071a8:	003fad06 	br	8007060 <__alt_data_end+0xfc007060>
 80071ac:	0005883a 	mov	r2,zero
 80071b0:	003f4806 	br	8006ed4 <__alt_data_end+0xfc006ed4>
 80071b4:	d9402d17 	ldw	r5,180(sp)
 80071b8:	2a400017 	ldw	r9,0(r5)
 80071bc:	28c00104 	addi	r3,r5,4
 80071c0:	d8c02d15 	stw	r3,180(sp)
 80071c4:	483e2c0e 	bge	r9,zero,8006a78 <__alt_data_end+0xfc006a78>
 80071c8:	027fffc4 	movi	r9,-1
 80071cc:	e4000047 	ldb	r16,1(fp)
 80071d0:	00385c06 	br	8005344 <__alt_data_end+0xfc005344>
 80071d4:	04400084 	movi	r17,2
 80071d8:	88e3c83a 	sub	r17,r17,r3
 80071dc:	003fc006 	br	80070e0 <__alt_data_end+0xfc0070e0>
 80071e0:	4800091e 	bne	r9,zero,8007208 <___svfprintf_internal_r+0x2020>
 80071e4:	e080004c 	andi	r2,fp,1
 80071e8:	1000071e 	bne	r2,zero,8007208 <___svfprintf_internal_r+0x2020>
 80071ec:	07000044 	movi	fp,1
 80071f0:	e023883a 	mov	r17,fp
 80071f4:	003e7e06 	br	8006bf0 <__alt_data_end+0xfc006bf0>
 80071f8:	00800b44 	movi	r2,45
 80071fc:	056bc83a 	sub	r21,zero,r21
 8007200:	d8802305 	stb	r2,140(sp)
 8007204:	003f6f06 	br	8006fc4 <__alt_data_end+0xfc006fc4>
 8007208:	4c400084 	addi	r17,r9,2
 800720c:	8839883a 	mov	fp,r17
 8007210:	883e770e 	bge	r17,zero,8006bf0 <__alt_data_end+0xfc006bf0>
 8007214:	003fb606 	br	80070f0 <__alt_data_end+0xfc0070f0>
 8007218:	0039883a 	mov	fp,zero
 800721c:	003f9a06 	br	8007088 <__alt_data_end+0xfc007088>
 8007220:	e084703a 	and	r2,fp,r2
 8007224:	103f9626 	beq	r2,zero,8007080 <__alt_data_end+0xfc007080>
 8007228:	003f9406 	br	800707c <__alt_data_end+0xfc00707c>
 800722c:	d8c02f17 	ldw	r3,188(sp)
 8007230:	00800304 	movi	r2,12
 8007234:	18800015 	stw	r2,0(r3)
 8007238:	00bfffc4 	movi	r2,-1
 800723c:	0038b706 	br	800551c <__alt_data_end+0xfc00551c>
 8007240:	0039883a 	mov	fp,zero
 8007244:	003fb006 	br	8007108 <__alt_data_end+0xfc007108>
 8007248:	d8c02617 	ldw	r3,152(sp)
 800724c:	003f5706 	br	8006fac <__alt_data_end+0xfc006fac>
 8007250:	d8802344 	addi	r2,sp,141
 8007254:	003f8206 	br	8007060 <__alt_data_end+0xfc007060>

08007258 <___vfprintf_internal_r>:
 8007258:	defeb604 	addi	sp,sp,-1320
 800725c:	dfc14915 	stw	ra,1316(sp)
 8007260:	ddc14715 	stw	r23,1308(sp)
 8007264:	dd814615 	stw	r22,1304(sp)
 8007268:	202f883a 	mov	r23,r4
 800726c:	282d883a 	mov	r22,r5
 8007270:	d9812a15 	stw	r6,1192(sp)
 8007274:	d9c12d15 	stw	r7,1204(sp)
 8007278:	df014815 	stw	fp,1312(sp)
 800727c:	dd414515 	stw	r21,1300(sp)
 8007280:	dd014415 	stw	r20,1296(sp)
 8007284:	dcc14315 	stw	r19,1292(sp)
 8007288:	dc814215 	stw	r18,1288(sp)
 800728c:	dc414115 	stw	r17,1284(sp)
 8007290:	dc014015 	stw	r16,1280(sp)
 8007294:	800db580 	call	800db58 <_localeconv_r>
 8007298:	10800017 	ldw	r2,0(r2)
 800729c:	1009883a 	mov	r4,r2
 80072a0:	d8813515 	stw	r2,1236(sp)
 80072a4:	80049680 	call	8004968 <strlen>
 80072a8:	d8813815 	stw	r2,1248(sp)
 80072ac:	b8000226 	beq	r23,zero,80072b8 <___vfprintf_internal_r+0x60>
 80072b0:	b8800e17 	ldw	r2,56(r23)
 80072b4:	10010526 	beq	r2,zero,80076cc <___vfprintf_internal_r+0x474>
 80072b8:	b0c0030b 	ldhu	r3,12(r22)
 80072bc:	1908000c 	andi	r4,r3,8192
 80072c0:	1805883a 	mov	r2,r3
 80072c4:	2000071e 	bne	r4,zero,80072e4 <___vfprintf_internal_r+0x8c>
 80072c8:	b1001917 	ldw	r4,100(r22)
 80072cc:	18880014 	ori	r2,r3,8192
 80072d0:	00f7ffc4 	movi	r3,-8193
 80072d4:	20c8703a 	and	r4,r4,r3
 80072d8:	b080030d 	sth	r2,12(r22)
 80072dc:	1007883a 	mov	r3,r2
 80072e0:	b1001915 	stw	r4,100(r22)
 80072e4:	1100020c 	andi	r4,r2,8
 80072e8:	2000a826 	beq	r4,zero,800758c <___vfprintf_internal_r+0x334>
 80072ec:	b1000417 	ldw	r4,16(r22)
 80072f0:	2000a626 	beq	r4,zero,800758c <___vfprintf_internal_r+0x334>
 80072f4:	1080068c 	andi	r2,r2,26
 80072f8:	01000284 	movi	r4,10
 80072fc:	1100ac26 	beq	r2,r4,80075b0 <___vfprintf_internal_r+0x358>
 8007300:	d8c10e04 	addi	r3,sp,1080
 8007304:	d9010dc4 	addi	r4,sp,1079
 8007308:	d9400404 	addi	r5,sp,16
 800730c:	050200b4 	movhi	r20,2050
 8007310:	1905c83a 	sub	r2,r3,r4
 8007314:	a537ec84 	addi	r20,r20,-8270
 8007318:	d8c12815 	stw	r3,1184(sp)
 800731c:	d9012915 	stw	r4,1188(sp)
 8007320:	d9411e15 	stw	r5,1144(sp)
 8007324:	d8012015 	stw	zero,1152(sp)
 8007328:	d8011f15 	stw	zero,1148(sp)
 800732c:	d8013315 	stw	zero,1228(sp)
 8007330:	d8013715 	stw	zero,1244(sp)
 8007334:	d8013915 	stw	zero,1252(sp)
 8007338:	d8013b15 	stw	zero,1260(sp)
 800733c:	d8013a15 	stw	zero,1256(sp)
 8007340:	d8012f15 	stw	zero,1212(sp)
 8007344:	2811883a 	mov	r8,r5
 8007348:	d8813c15 	stw	r2,1264(sp)
 800734c:	d8c12a17 	ldw	r3,1192(sp)
 8007350:	18800007 	ldb	r2,0(r3)
 8007354:	10021326 	beq	r2,zero,8007ba4 <___vfprintf_internal_r+0x94c>
 8007358:	00c00944 	movi	r3,37
 800735c:	dc012a17 	ldw	r16,1192(sp)
 8007360:	10c0021e 	bne	r2,r3,800736c <___vfprintf_internal_r+0x114>
 8007364:	00001606 	br	80073c0 <___vfprintf_internal_r+0x168>
 8007368:	10c08526 	beq	r2,r3,8007580 <___vfprintf_internal_r+0x328>
 800736c:	84000044 	addi	r16,r16,1
 8007370:	80800007 	ldb	r2,0(r16)
 8007374:	103ffc1e 	bne	r2,zero,8007368 <__alt_data_end+0xfc007368>
 8007378:	d9012a17 	ldw	r4,1192(sp)
 800737c:	8123c83a 	sub	r17,r16,r4
 8007380:	88000f26 	beq	r17,zero,80073c0 <___vfprintf_internal_r+0x168>
 8007384:	d8812a17 	ldw	r2,1192(sp)
 8007388:	d8c12017 	ldw	r3,1152(sp)
 800738c:	44400115 	stw	r17,4(r8)
 8007390:	40800015 	stw	r2,0(r8)
 8007394:	d8811f17 	ldw	r2,1148(sp)
 8007398:	1c47883a 	add	r3,r3,r17
 800739c:	d8c12015 	stw	r3,1152(sp)
 80073a0:	10800044 	addi	r2,r2,1
 80073a4:	d8811f15 	stw	r2,1148(sp)
 80073a8:	00c001c4 	movi	r3,7
 80073ac:	1880b516 	blt	r3,r2,8007684 <___vfprintf_internal_r+0x42c>
 80073b0:	42000204 	addi	r8,r8,8
 80073b4:	d8c12f17 	ldw	r3,1212(sp)
 80073b8:	1c47883a 	add	r3,r3,r17
 80073bc:	d8c12f15 	stw	r3,1212(sp)
 80073c0:	80800007 	ldb	r2,0(r16)
 80073c4:	1000b626 	beq	r2,zero,80076a0 <___vfprintf_internal_r+0x448>
 80073c8:	80800044 	addi	r2,r16,1
 80073cc:	84000047 	ldb	r16,1(r16)
 80073d0:	0027883a 	mov	r19,zero
 80073d4:	0039883a 	mov	fp,zero
 80073d8:	dcc12b05 	stb	r19,1196(sp)
 80073dc:	d8012785 	stb	zero,1182(sp)
 80073e0:	027fffc4 	movi	r9,-1
 80073e4:	d8012e15 	stw	zero,1208(sp)
 80073e8:	04401604 	movi	r17,88
 80073ec:	04800244 	movi	r18,9
 80073f0:	da012a15 	stw	r8,1192(sp)
 80073f4:	e027883a 	mov	r19,fp
 80073f8:	17000044 	addi	fp,r2,1
 80073fc:	80bff804 	addi	r2,r16,-32
 8007400:	88831236 	bltu	r17,r2,800804c <___vfprintf_internal_r+0xdf4>
 8007404:	100490ba 	slli	r2,r2,2
 8007408:	01020034 	movhi	r4,2048
 800740c:	211d0704 	addi	r4,r4,29724
 8007410:	1105883a 	add	r2,r2,r4
 8007414:	10800017 	ldw	r2,0(r2)
 8007418:	1000683a 	jmp	r2
 800741c:	08007f68 	cmpgeui	zero,at,509
 8007420:	0800804c 	andi	zero,at,513
 8007424:	0800804c 	andi	zero,at,513
 8007428:	08007f84 	addi	zero,at,510
 800742c:	0800804c 	andi	zero,at,513
 8007430:	0800804c 	andi	zero,at,513
 8007434:	0800804c 	andi	zero,at,513
 8007438:	0800804c 	andi	zero,at,513
 800743c:	0800804c 	andi	zero,at,513
 8007440:	0800804c 	andi	zero,at,513
 8007444:	08007f94 	ori	zero,at,510
 8007448:	08007fbc 	xorhi	zero,at,510
 800744c:	0800804c 	andi	zero,at,513
 8007450:	080076d8 	cmpnei	zero,at,475
 8007454:	080076e8 	cmpgeui	zero,at,475
 8007458:	0800804c 	andi	zero,at,513
 800745c:	08007738 	rdprs	zero,at,476
 8007460:	08007748 	cmpgei	zero,at,477
 8007464:	08007748 	cmpgei	zero,at,477
 8007468:	08007748 	cmpgei	zero,at,477
 800746c:	08007748 	cmpgei	zero,at,477
 8007470:	08007748 	cmpgei	zero,at,477
 8007474:	08007748 	cmpgei	zero,at,477
 8007478:	08007748 	cmpgei	zero,at,477
 800747c:	08007748 	cmpgei	zero,at,477
 8007480:	08007748 	cmpgei	zero,at,477
 8007484:	0800804c 	andi	zero,at,513
 8007488:	0800804c 	andi	zero,at,513
 800748c:	0800804c 	andi	zero,at,513
 8007490:	0800804c 	andi	zero,at,513
 8007494:	0800804c 	andi	zero,at,513
 8007498:	0800804c 	andi	zero,at,513
 800749c:	0800804c 	andi	zero,at,513
 80074a0:	0800804c 	andi	zero,at,513
 80074a4:	0800804c 	andi	zero,at,513
 80074a8:	0800804c 	andi	zero,at,513
 80074ac:	0800778c 	andi	zero,at,478
 80074b0:	08007bac 	andhi	zero,at,494
 80074b4:	0800804c 	andi	zero,at,513
 80074b8:	08007bac 	andhi	zero,at,494
 80074bc:	0800804c 	andi	zero,at,513
 80074c0:	0800804c 	andi	zero,at,513
 80074c4:	0800804c 	andi	zero,at,513
 80074c8:	0800804c 	andi	zero,at,513
 80074cc:	08007c54 	ori	zero,at,497
 80074d0:	0800804c 	andi	zero,at,513
 80074d4:	0800804c 	andi	zero,at,513
 80074d8:	08007c64 	muli	zero,at,497
 80074dc:	0800804c 	andi	zero,at,513
 80074e0:	0800804c 	andi	zero,at,513
 80074e4:	0800804c 	andi	zero,at,513
 80074e8:	0800804c 	andi	zero,at,513
 80074ec:	0800804c 	andi	zero,at,513
 80074f0:	08007ca8 	cmpgeui	zero,at,498
 80074f4:	0800804c 	andi	zero,at,513
 80074f8:	0800804c 	andi	zero,at,513
 80074fc:	08007ce0 	cmpeqi	zero,at,499
 8007500:	0800804c 	andi	zero,at,513
 8007504:	0800804c 	andi	zero,at,513
 8007508:	0800804c 	andi	zero,at,513
 800750c:	0800804c 	andi	zero,at,513
 8007510:	0800804c 	andi	zero,at,513
 8007514:	0800804c 	andi	zero,at,513
 8007518:	0800804c 	andi	zero,at,513
 800751c:	0800804c 	andi	zero,at,513
 8007520:	0800804c 	andi	zero,at,513
 8007524:	0800804c 	andi	zero,at,513
 8007528:	08007f1c 	xori	zero,at,508
 800752c:	08007ec8 	cmpgei	zero,at,507
 8007530:	08007bac 	andhi	zero,at,494
 8007534:	08007bac 	andhi	zero,at,494
 8007538:	08007bac 	andhi	zero,at,494
 800753c:	08007f0c 	andi	zero,at,508
 8007540:	08007ec8 	cmpgei	zero,at,507
 8007544:	0800804c 	andi	zero,at,513
 8007548:	0800804c 	andi	zero,at,513
 800754c:	08007de4 	muli	zero,at,503
 8007550:	0800804c 	andi	zero,at,513
 8007554:	08007dfc 	xorhi	zero,at,503
 8007558:	08007e3c 	xorhi	zero,at,504
 800755c:	08007e7c 	xorhi	zero,at,505
 8007560:	08007d48 	cmpgei	zero,at,501
 8007564:	0800804c 	andi	zero,at,513
 8007568:	08007fd0 	cmplti	zero,at,511
 800756c:	0800804c 	andi	zero,at,513
 8007570:	08007d58 	cmpnei	zero,at,501
 8007574:	0800804c 	andi	zero,at,513
 8007578:	0800804c 	andi	zero,at,513
 800757c:	08007d98 	cmpnei	zero,at,502
 8007580:	d9412a17 	ldw	r5,1192(sp)
 8007584:	8163c83a 	sub	r17,r16,r5
 8007588:	003f7d06 	br	8007380 <__alt_data_end+0xfc007380>
 800758c:	b809883a 	mov	r4,r23
 8007590:	b00b883a 	mov	r5,r22
 8007594:	800aba40 	call	800aba4 <__swsetup_r>
 8007598:	10002d1e 	bne	r2,zero,8007650 <___vfprintf_internal_r+0x3f8>
 800759c:	b0c0030b 	ldhu	r3,12(r22)
 80075a0:	01000284 	movi	r4,10
 80075a4:	1805883a 	mov	r2,r3
 80075a8:	1080068c 	andi	r2,r2,26
 80075ac:	113f541e 	bne	r2,r4,8007300 <__alt_data_end+0xfc007300>
 80075b0:	b080038b 	ldhu	r2,14(r22)
 80075b4:	113fffcc 	andi	r4,r2,65535
 80075b8:	2120001c 	xori	r4,r4,32768
 80075bc:	21200004 	addi	r4,r4,-32768
 80075c0:	203f4f16 	blt	r4,zero,8007300 <__alt_data_end+0xfc007300>
 80075c4:	b2c01917 	ldw	r11,100(r22)
 80075c8:	b2800717 	ldw	r10,28(r22)
 80075cc:	b2400917 	ldw	r9,36(r22)
 80075d0:	d9812a17 	ldw	r6,1192(sp)
 80075d4:	d9c12d17 	ldw	r7,1204(sp)
 80075d8:	02010004 	movi	r8,1024
 80075dc:	18ffff4c 	andi	r3,r3,65533
 80075e0:	d881078d 	sth	r2,1054(sp)
 80075e4:	b809883a 	mov	r4,r23
 80075e8:	d8800404 	addi	r2,sp,16
 80075ec:	d9410404 	addi	r5,sp,1040
 80075f0:	d8c1070d 	sth	r3,1052(sp)
 80075f4:	dac11d15 	stw	r11,1140(sp)
 80075f8:	da810b15 	stw	r10,1068(sp)
 80075fc:	da410d15 	stw	r9,1076(sp)
 8007600:	d8810415 	stw	r2,1040(sp)
 8007604:	d8810815 	stw	r2,1056(sp)
 8007608:	da010615 	stw	r8,1048(sp)
 800760c:	da010915 	stw	r8,1060(sp)
 8007610:	d8010a15 	stw	zero,1064(sp)
 8007614:	80072580 	call	8007258 <___vfprintf_internal_r>
 8007618:	1021883a 	mov	r16,r2
 800761c:	10000416 	blt	r2,zero,8007630 <___vfprintf_internal_r+0x3d8>
 8007620:	b809883a 	mov	r4,r23
 8007624:	d9410404 	addi	r5,sp,1040
 8007628:	800c7b80 	call	800c7b8 <_fflush_r>
 800762c:	1007301e 	bne	r2,zero,80092f0 <___vfprintf_internal_r+0x2098>
 8007630:	d881070b 	ldhu	r2,1052(sp)
 8007634:	1080100c 	andi	r2,r2,64
 8007638:	10000326 	beq	r2,zero,8007648 <___vfprintf_internal_r+0x3f0>
 800763c:	b080030b 	ldhu	r2,12(r22)
 8007640:	10801014 	ori	r2,r2,64
 8007644:	b080030d 	sth	r2,12(r22)
 8007648:	8005883a 	mov	r2,r16
 800764c:	00000106 	br	8007654 <___vfprintf_internal_r+0x3fc>
 8007650:	00bfffc4 	movi	r2,-1
 8007654:	dfc14917 	ldw	ra,1316(sp)
 8007658:	df014817 	ldw	fp,1312(sp)
 800765c:	ddc14717 	ldw	r23,1308(sp)
 8007660:	dd814617 	ldw	r22,1304(sp)
 8007664:	dd414517 	ldw	r21,1300(sp)
 8007668:	dd014417 	ldw	r20,1296(sp)
 800766c:	dcc14317 	ldw	r19,1292(sp)
 8007670:	dc814217 	ldw	r18,1288(sp)
 8007674:	dc414117 	ldw	r17,1284(sp)
 8007678:	dc014017 	ldw	r16,1280(sp)
 800767c:	dec14a04 	addi	sp,sp,1320
 8007680:	f800283a 	ret
 8007684:	b809883a 	mov	r4,r23
 8007688:	b00b883a 	mov	r5,r22
 800768c:	d9811e04 	addi	r6,sp,1144
 8007690:	8013a600 	call	8013a60 <__sprint_r>
 8007694:	1000081e 	bne	r2,zero,80076b8 <___vfprintf_internal_r+0x460>
 8007698:	da000404 	addi	r8,sp,16
 800769c:	003f4506 	br	80073b4 <__alt_data_end+0xfc0073b4>
 80076a0:	d8812017 	ldw	r2,1152(sp)
 80076a4:	10000426 	beq	r2,zero,80076b8 <___vfprintf_internal_r+0x460>
 80076a8:	b809883a 	mov	r4,r23
 80076ac:	b00b883a 	mov	r5,r22
 80076b0:	d9811e04 	addi	r6,sp,1144
 80076b4:	8013a600 	call	8013a60 <__sprint_r>
 80076b8:	b080030b 	ldhu	r2,12(r22)
 80076bc:	1080100c 	andi	r2,r2,64
 80076c0:	103fe31e 	bne	r2,zero,8007650 <__alt_data_end+0xfc007650>
 80076c4:	d8812f17 	ldw	r2,1212(sp)
 80076c8:	003fe206 	br	8007654 <__alt_data_end+0xfc007654>
 80076cc:	b809883a 	mov	r4,r23
 80076d0:	800cd740 	call	800cd74 <__sinit>
 80076d4:	003ef806 	br	80072b8 <__alt_data_end+0xfc0072b8>
 80076d8:	e005883a 	mov	r2,fp
 80076dc:	9cc00114 	ori	r19,r19,4
 80076e0:	e4000007 	ldb	r16,0(fp)
 80076e4:	003f4406 	br	80073f8 <__alt_data_end+0xfc0073f8>
 80076e8:	e4000007 	ldb	r16,0(fp)
 80076ec:	01000a84 	movi	r4,42
 80076f0:	e0800044 	addi	r2,fp,1
 80076f4:	8106f626 	beq	r16,r4,80092d0 <___vfprintf_internal_r+0x2078>
 80076f8:	857ff404 	addi	r21,r16,-48
 80076fc:	1039883a 	mov	fp,r2
 8007700:	0013883a 	mov	r9,zero
 8007704:	957f3d36 	bltu	r18,r21,80073fc <__alt_data_end+0xfc0073fc>
 8007708:	0009883a 	mov	r4,zero
 800770c:	01400284 	movi	r5,10
 8007710:	800334c0 	call	800334c <__mulsi3>
 8007714:	e4000007 	ldb	r16,0(fp)
 8007718:	a889883a 	add	r4,r21,r2
 800771c:	e7000044 	addi	fp,fp,1
 8007720:	857ff404 	addi	r21,r16,-48
 8007724:	957ff92e 	bgeu	r18,r21,800770c <__alt_data_end+0xfc00770c>
 8007728:	2013883a 	mov	r9,r4
 800772c:	203f330e 	bge	r4,zero,80073fc <__alt_data_end+0xfc0073fc>
 8007730:	027fffc4 	movi	r9,-1
 8007734:	003f3106 	br	80073fc <__alt_data_end+0xfc0073fc>
 8007738:	9cc02014 	ori	r19,r19,128
 800773c:	e005883a 	mov	r2,fp
 8007740:	e4000007 	ldb	r16,0(fp)
 8007744:	003f2c06 	br	80073f8 <__alt_data_end+0xfc0073f8>
 8007748:	857ff404 	addi	r21,r16,-48
 800774c:	d8012e15 	stw	zero,1208(sp)
 8007750:	e021883a 	mov	r16,fp
 8007754:	0009883a 	mov	r4,zero
 8007758:	da412c15 	stw	r9,1200(sp)
 800775c:	01400284 	movi	r5,10
 8007760:	800334c0 	call	800334c <__mulsi3>
 8007764:	81400007 	ldb	r5,0(r16)
 8007768:	1549883a 	add	r4,r2,r21
 800776c:	e7000044 	addi	fp,fp,1
 8007770:	2d7ff404 	addi	r21,r5,-48
 8007774:	e021883a 	mov	r16,fp
 8007778:	957ff82e 	bgeu	r18,r21,800775c <__alt_data_end+0xfc00775c>
 800777c:	2821883a 	mov	r16,r5
 8007780:	d9012e15 	stw	r4,1208(sp)
 8007784:	da412c17 	ldw	r9,1200(sp)
 8007788:	003f1c06 	br	80073fc <__alt_data_end+0xfc0073fc>
 800778c:	da012a17 	ldw	r8,1192(sp)
 8007790:	df012a15 	stw	fp,1192(sp)
 8007794:	9839883a 	mov	fp,r19
 8007798:	dcc12b03 	ldbu	r19,1196(sp)
 800779c:	e7000414 	ori	fp,fp,16
 80077a0:	e080080c 	andi	r2,fp,32
 80077a4:	dcc12785 	stb	r19,1182(sp)
 80077a8:	d8c12d17 	ldw	r3,1204(sp)
 80077ac:	1001ce26 	beq	r2,zero,8007ee8 <___vfprintf_internal_r+0xc90>
 80077b0:	d9012d17 	ldw	r4,1204(sp)
 80077b4:	18800117 	ldw	r2,4(r3)
 80077b8:	1c800017 	ldw	r18,0(r3)
 80077bc:	21000204 	addi	r4,r4,8
 80077c0:	d9012d15 	stw	r4,1204(sp)
 80077c4:	102b883a 	mov	r21,r2
 80077c8:	10044916 	blt	r2,zero,80088f0 <___vfprintf_internal_r+0x1698>
 80077cc:	dcc12783 	ldbu	r19,1182(sp)
 80077d0:	da413215 	stw	r9,1224(sp)
 80077d4:	00800044 	movi	r2,1
 80077d8:	9546b03a 	or	r3,r18,r21
 80077dc:	48000216 	blt	r9,zero,80077e8 <___vfprintf_internal_r+0x590>
 80077e0:	013fdfc4 	movi	r4,-129
 80077e4:	e138703a 	and	fp,fp,r4
 80077e8:	1802251e 	bne	r3,zero,8008080 <___vfprintf_internal_r+0xe28>
 80077ec:	48031726 	beq	r9,zero,800844c <___vfprintf_internal_r+0x11f4>
 80077f0:	10803fcc 	andi	r2,r2,255
 80077f4:	00c00044 	movi	r3,1
 80077f8:	10c24526 	beq	r2,r3,8008110 <___vfprintf_internal_r+0xeb8>
 80077fc:	00c00084 	movi	r3,2
 8007800:	10c33426 	beq	r2,r3,80084d4 <___vfprintf_internal_r+0x127c>
 8007804:	d8c10e04 	addi	r3,sp,1080
 8007808:	9008d0fa 	srli	r4,r18,3
 800780c:	a80a977a 	slli	r5,r21,29
 8007810:	a82ad0fa 	srli	r21,r21,3
 8007814:	948001cc 	andi	r18,r18,7
 8007818:	90800c04 	addi	r2,r18,48
 800781c:	18ffffc4 	addi	r3,r3,-1
 8007820:	2924b03a 	or	r18,r5,r4
 8007824:	18800005 	stb	r2,0(r3)
 8007828:	9548b03a 	or	r4,r18,r21
 800782c:	203ff61e 	bne	r4,zero,8007808 <__alt_data_end+0xfc007808>
 8007830:	e100004c 	andi	r4,fp,1
 8007834:	d8c13115 	stw	r3,1220(sp)
 8007838:	20039a1e 	bne	r4,zero,80086a4 <___vfprintf_internal_r+0x144c>
 800783c:	d8812817 	ldw	r2,1184(sp)
 8007840:	10e3c83a 	sub	r17,r2,r3
 8007844:	8805883a 	mov	r2,r17
 8007848:	8a40010e 	bge	r17,r9,8007850 <___vfprintf_internal_r+0x5f8>
 800784c:	4805883a 	mov	r2,r9
 8007850:	d8812b15 	stw	r2,1196(sp)
 8007854:	d8013415 	stw	zero,1232(sp)
 8007858:	98803fcc 	andi	r2,r19,255
 800785c:	1080201c 	xori	r2,r2,128
 8007860:	10bfe004 	addi	r2,r2,-128
 8007864:	10000326 	beq	r2,zero,8007874 <___vfprintf_internal_r+0x61c>
 8007868:	d8c12b17 	ldw	r3,1196(sp)
 800786c:	18c00044 	addi	r3,r3,1
 8007870:	d8c12b15 	stw	r3,1196(sp)
 8007874:	e0c0008c 	andi	r3,fp,2
 8007878:	d8c12c15 	stw	r3,1200(sp)
 800787c:	18000326 	beq	r3,zero,800788c <___vfprintf_internal_r+0x634>
 8007880:	d8c12b17 	ldw	r3,1196(sp)
 8007884:	18c00084 	addi	r3,r3,2
 8007888:	d8c12b15 	stw	r3,1196(sp)
 800788c:	e0c0210c 	andi	r3,fp,132
 8007890:	d8c13015 	stw	r3,1216(sp)
 8007894:	1801f81e 	bne	r3,zero,8008078 <___vfprintf_internal_r+0xe20>
 8007898:	d9012e17 	ldw	r4,1208(sp)
 800789c:	d8c12b17 	ldw	r3,1196(sp)
 80078a0:	20ebc83a 	sub	r21,r4,r3
 80078a4:	0541f40e 	bge	zero,r21,8008078 <___vfprintf_internal_r+0xe20>
 80078a8:	02400404 	movi	r9,16
 80078ac:	d8c12017 	ldw	r3,1152(sp)
 80078b0:	d8811f17 	ldw	r2,1148(sp)
 80078b4:	4d45750e 	bge	r9,r21,8008e8c <___vfprintf_internal_r+0x1c34>
 80078b8:	014200b4 	movhi	r5,2050
 80078bc:	2977f084 	addi	r5,r5,-8254
 80078c0:	d9413615 	stw	r5,1240(sp)
 80078c4:	4827883a 	mov	r19,r9
 80078c8:	048001c4 	movi	r18,7
 80078cc:	00000306 	br	80078dc <___vfprintf_internal_r+0x684>
 80078d0:	ad7ffc04 	addi	r21,r21,-16
 80078d4:	42000204 	addi	r8,r8,8
 80078d8:	9d40130e 	bge	r19,r21,8007928 <___vfprintf_internal_r+0x6d0>
 80078dc:	010200b4 	movhi	r4,2050
 80078e0:	18c00404 	addi	r3,r3,16
 80078e4:	10800044 	addi	r2,r2,1
 80078e8:	2137f084 	addi	r4,r4,-8254
 80078ec:	41000015 	stw	r4,0(r8)
 80078f0:	44c00115 	stw	r19,4(r8)
 80078f4:	d8c12015 	stw	r3,1152(sp)
 80078f8:	d8811f15 	stw	r2,1148(sp)
 80078fc:	90bff40e 	bge	r18,r2,80078d0 <__alt_data_end+0xfc0078d0>
 8007900:	b809883a 	mov	r4,r23
 8007904:	b00b883a 	mov	r5,r22
 8007908:	d9811e04 	addi	r6,sp,1144
 800790c:	8013a600 	call	8013a60 <__sprint_r>
 8007910:	103f691e 	bne	r2,zero,80076b8 <__alt_data_end+0xfc0076b8>
 8007914:	ad7ffc04 	addi	r21,r21,-16
 8007918:	d8c12017 	ldw	r3,1152(sp)
 800791c:	d8811f17 	ldw	r2,1148(sp)
 8007920:	da000404 	addi	r8,sp,16
 8007924:	9d7fed16 	blt	r19,r21,80078dc <__alt_data_end+0xfc0078dc>
 8007928:	d9413617 	ldw	r5,1240(sp)
 800792c:	a8c7883a 	add	r3,r21,r3
 8007930:	10800044 	addi	r2,r2,1
 8007934:	41400015 	stw	r5,0(r8)
 8007938:	45400115 	stw	r21,4(r8)
 800793c:	d8c12015 	stw	r3,1152(sp)
 8007940:	d8811f15 	stw	r2,1148(sp)
 8007944:	010001c4 	movi	r4,7
 8007948:	20832b16 	blt	r4,r2,80085f8 <___vfprintf_internal_r+0x13a0>
 800794c:	d8812787 	ldb	r2,1182(sp)
 8007950:	42000204 	addi	r8,r8,8
 8007954:	10000c26 	beq	r2,zero,8007988 <___vfprintf_internal_r+0x730>
 8007958:	d8811f17 	ldw	r2,1148(sp)
 800795c:	d9012784 	addi	r4,sp,1182
 8007960:	18c00044 	addi	r3,r3,1
 8007964:	10800044 	addi	r2,r2,1
 8007968:	41000015 	stw	r4,0(r8)
 800796c:	01000044 	movi	r4,1
 8007970:	41000115 	stw	r4,4(r8)
 8007974:	d8c12015 	stw	r3,1152(sp)
 8007978:	d8811f15 	stw	r2,1148(sp)
 800797c:	010001c4 	movi	r4,7
 8007980:	2082c416 	blt	r4,r2,8008494 <___vfprintf_internal_r+0x123c>
 8007984:	42000204 	addi	r8,r8,8
 8007988:	d8812c17 	ldw	r2,1200(sp)
 800798c:	10000c26 	beq	r2,zero,80079c0 <___vfprintf_internal_r+0x768>
 8007990:	d8811f17 	ldw	r2,1148(sp)
 8007994:	d9012704 	addi	r4,sp,1180
 8007998:	18c00084 	addi	r3,r3,2
 800799c:	10800044 	addi	r2,r2,1
 80079a0:	41000015 	stw	r4,0(r8)
 80079a4:	01000084 	movi	r4,2
 80079a8:	41000115 	stw	r4,4(r8)
 80079ac:	d8c12015 	stw	r3,1152(sp)
 80079b0:	d8811f15 	stw	r2,1148(sp)
 80079b4:	010001c4 	movi	r4,7
 80079b8:	2082be16 	blt	r4,r2,80084b4 <___vfprintf_internal_r+0x125c>
 80079bc:	42000204 	addi	r8,r8,8
 80079c0:	d9013017 	ldw	r4,1216(sp)
 80079c4:	00802004 	movi	r2,128
 80079c8:	20822026 	beq	r4,r2,800824c <___vfprintf_internal_r+0xff4>
 80079cc:	d9413217 	ldw	r5,1224(sp)
 80079d0:	2c67c83a 	sub	r19,r5,r17
 80079d4:	04c0260e 	bge	zero,r19,8007a70 <___vfprintf_internal_r+0x818>
 80079d8:	05400404 	movi	r21,16
 80079dc:	d8811f17 	ldw	r2,1148(sp)
 80079e0:	acc4720e 	bge	r21,r19,8008bac <___vfprintf_internal_r+0x1954>
 80079e4:	014200b4 	movhi	r5,2050
 80079e8:	2977ec84 	addi	r5,r5,-8270
 80079ec:	d9412c15 	stw	r5,1200(sp)
 80079f0:	048001c4 	movi	r18,7
 80079f4:	00000306 	br	8007a04 <___vfprintf_internal_r+0x7ac>
 80079f8:	9cfffc04 	addi	r19,r19,-16
 80079fc:	42000204 	addi	r8,r8,8
 8007a00:	acc0110e 	bge	r21,r19,8007a48 <___vfprintf_internal_r+0x7f0>
 8007a04:	18c00404 	addi	r3,r3,16
 8007a08:	10800044 	addi	r2,r2,1
 8007a0c:	45000015 	stw	r20,0(r8)
 8007a10:	45400115 	stw	r21,4(r8)
 8007a14:	d8c12015 	stw	r3,1152(sp)
 8007a18:	d8811f15 	stw	r2,1148(sp)
 8007a1c:	90bff60e 	bge	r18,r2,80079f8 <__alt_data_end+0xfc0079f8>
 8007a20:	b809883a 	mov	r4,r23
 8007a24:	b00b883a 	mov	r5,r22
 8007a28:	d9811e04 	addi	r6,sp,1144
 8007a2c:	8013a600 	call	8013a60 <__sprint_r>
 8007a30:	103f211e 	bne	r2,zero,80076b8 <__alt_data_end+0xfc0076b8>
 8007a34:	9cfffc04 	addi	r19,r19,-16
 8007a38:	d8c12017 	ldw	r3,1152(sp)
 8007a3c:	d8811f17 	ldw	r2,1148(sp)
 8007a40:	da000404 	addi	r8,sp,16
 8007a44:	acffef16 	blt	r21,r19,8007a04 <__alt_data_end+0xfc007a04>
 8007a48:	d9012c17 	ldw	r4,1200(sp)
 8007a4c:	1cc7883a 	add	r3,r3,r19
 8007a50:	10800044 	addi	r2,r2,1
 8007a54:	41000015 	stw	r4,0(r8)
 8007a58:	44c00115 	stw	r19,4(r8)
 8007a5c:	d8c12015 	stw	r3,1152(sp)
 8007a60:	d8811f15 	stw	r2,1148(sp)
 8007a64:	010001c4 	movi	r4,7
 8007a68:	20828216 	blt	r4,r2,8008474 <___vfprintf_internal_r+0x121c>
 8007a6c:	42000204 	addi	r8,r8,8
 8007a70:	e080400c 	andi	r2,fp,256
 8007a74:	1001ac1e 	bne	r2,zero,8008128 <___vfprintf_internal_r+0xed0>
 8007a78:	d8811f17 	ldw	r2,1148(sp)
 8007a7c:	d9413117 	ldw	r5,1220(sp)
 8007a80:	1c47883a 	add	r3,r3,r17
 8007a84:	10800044 	addi	r2,r2,1
 8007a88:	41400015 	stw	r5,0(r8)
 8007a8c:	44400115 	stw	r17,4(r8)
 8007a90:	d8c12015 	stw	r3,1152(sp)
 8007a94:	d8811f15 	stw	r2,1148(sp)
 8007a98:	010001c4 	movi	r4,7
 8007a9c:	20825d16 	blt	r4,r2,8008414 <___vfprintf_internal_r+0x11bc>
 8007aa0:	42000204 	addi	r8,r8,8
 8007aa4:	e080010c 	andi	r2,fp,4
 8007aa8:	10003126 	beq	r2,zero,8007b70 <___vfprintf_internal_r+0x918>
 8007aac:	d8812e17 	ldw	r2,1208(sp)
 8007ab0:	d9012b17 	ldw	r4,1196(sp)
 8007ab4:	1121c83a 	sub	r16,r2,r4
 8007ab8:	04002d0e 	bge	zero,r16,8007b70 <___vfprintf_internal_r+0x918>
 8007abc:	04400404 	movi	r17,16
 8007ac0:	d8811f17 	ldw	r2,1148(sp)
 8007ac4:	8c05340e 	bge	r17,r16,8008f98 <___vfprintf_internal_r+0x1d40>
 8007ac8:	010200b4 	movhi	r4,2050
 8007acc:	2137f084 	addi	r4,r4,-8254
 8007ad0:	d9013615 	stw	r4,1240(sp)
 8007ad4:	048001c4 	movi	r18,7
 8007ad8:	00000306 	br	8007ae8 <___vfprintf_internal_r+0x890>
 8007adc:	843ffc04 	addi	r16,r16,-16
 8007ae0:	42000204 	addi	r8,r8,8
 8007ae4:	8c00130e 	bge	r17,r16,8007b34 <___vfprintf_internal_r+0x8dc>
 8007ae8:	014200b4 	movhi	r5,2050
 8007aec:	18c00404 	addi	r3,r3,16
 8007af0:	10800044 	addi	r2,r2,1
 8007af4:	2977f084 	addi	r5,r5,-8254
 8007af8:	41400015 	stw	r5,0(r8)
 8007afc:	44400115 	stw	r17,4(r8)
 8007b00:	d8c12015 	stw	r3,1152(sp)
 8007b04:	d8811f15 	stw	r2,1148(sp)
 8007b08:	90bff40e 	bge	r18,r2,8007adc <__alt_data_end+0xfc007adc>
 8007b0c:	b809883a 	mov	r4,r23
 8007b10:	b00b883a 	mov	r5,r22
 8007b14:	d9811e04 	addi	r6,sp,1144
 8007b18:	8013a600 	call	8013a60 <__sprint_r>
 8007b1c:	103ee61e 	bne	r2,zero,80076b8 <__alt_data_end+0xfc0076b8>
 8007b20:	843ffc04 	addi	r16,r16,-16
 8007b24:	d8c12017 	ldw	r3,1152(sp)
 8007b28:	d8811f17 	ldw	r2,1148(sp)
 8007b2c:	da000404 	addi	r8,sp,16
 8007b30:	8c3fed16 	blt	r17,r16,8007ae8 <__alt_data_end+0xfc007ae8>
 8007b34:	d9013617 	ldw	r4,1240(sp)
 8007b38:	1c07883a 	add	r3,r3,r16
 8007b3c:	10800044 	addi	r2,r2,1
 8007b40:	41000015 	stw	r4,0(r8)
 8007b44:	44000115 	stw	r16,4(r8)
 8007b48:	d8c12015 	stw	r3,1152(sp)
 8007b4c:	d8811f15 	stw	r2,1148(sp)
 8007b50:	010001c4 	movi	r4,7
 8007b54:	2080060e 	bge	r4,r2,8007b70 <___vfprintf_internal_r+0x918>
 8007b58:	b809883a 	mov	r4,r23
 8007b5c:	b00b883a 	mov	r5,r22
 8007b60:	d9811e04 	addi	r6,sp,1144
 8007b64:	8013a600 	call	8013a60 <__sprint_r>
 8007b68:	103ed31e 	bne	r2,zero,80076b8 <__alt_data_end+0xfc0076b8>
 8007b6c:	d8c12017 	ldw	r3,1152(sp)
 8007b70:	df012b17 	ldw	fp,1196(sp)
 8007b74:	d9412e17 	ldw	r5,1208(sp)
 8007b78:	e140010e 	bge	fp,r5,8007b80 <___vfprintf_internal_r+0x928>
 8007b7c:	2839883a 	mov	fp,r5
 8007b80:	d8812f17 	ldw	r2,1212(sp)
 8007b84:	1705883a 	add	r2,r2,fp
 8007b88:	d8812f15 	stw	r2,1212(sp)
 8007b8c:	1802291e 	bne	r3,zero,8008434 <___vfprintf_internal_r+0x11dc>
 8007b90:	d8c12a17 	ldw	r3,1192(sp)
 8007b94:	d8011f15 	stw	zero,1148(sp)
 8007b98:	da000404 	addi	r8,sp,16
 8007b9c:	18800007 	ldb	r2,0(r3)
 8007ba0:	103ded1e 	bne	r2,zero,8007358 <__alt_data_end+0xfc007358>
 8007ba4:	dc012a17 	ldw	r16,1192(sp)
 8007ba8:	003e0506 	br	80073c0 <__alt_data_end+0xfc0073c0>
 8007bac:	d9012d17 	ldw	r4,1204(sp)
 8007bb0:	d9412d17 	ldw	r5,1204(sp)
 8007bb4:	da012a17 	ldw	r8,1192(sp)
 8007bb8:	21000017 	ldw	r4,0(r4)
 8007bbc:	29400117 	ldw	r5,4(r5)
 8007bc0:	df012a15 	stw	fp,1192(sp)
 8007bc4:	9839883a 	mov	fp,r19
 8007bc8:	dcc12b03 	ldbu	r19,1196(sp)
 8007bcc:	d9013715 	stw	r4,1244(sp)
 8007bd0:	d9413915 	stw	r5,1252(sp)
 8007bd4:	da013f15 	stw	r8,1276(sp)
 8007bd8:	da413e15 	stw	r9,1272(sp)
 8007bdc:	dcc12785 	stb	r19,1182(sp)
 8007be0:	800fc8c0 	call	800fc8c <__fpclassifyd>
 8007be4:	d8c12d17 	ldw	r3,1204(sp)
 8007be8:	04400044 	movi	r17,1
 8007bec:	da013f17 	ldw	r8,1276(sp)
 8007bf0:	1c800204 	addi	r18,r3,8
 8007bf4:	da413e17 	ldw	r9,1272(sp)
 8007bf8:	d9013717 	ldw	r4,1244(sp)
 8007bfc:	d9413917 	ldw	r5,1252(sp)
 8007c00:	1443451e 	bne	r2,r17,8008918 <___vfprintf_internal_r+0x16c0>
 8007c04:	000d883a 	mov	r6,zero
 8007c08:	000f883a 	mov	r7,zero
 8007c0c:	80189a80 	call	80189a8 <__ledf2>
 8007c10:	da013f17 	ldw	r8,1276(sp)
 8007c14:	1004fe16 	blt	r2,zero,8009010 <___vfprintf_internal_r+0x1db8>
 8007c18:	dcc12783 	ldbu	r19,1182(sp)
 8007c1c:	008011c4 	movi	r2,71
 8007c20:	14045d0e 	bge	r2,r16,8008d98 <___vfprintf_internal_r+0x1b40>
 8007c24:	014200b4 	movhi	r5,2050
 8007c28:	2977d504 	addi	r5,r5,-8364
 8007c2c:	d9413115 	stw	r5,1220(sp)
 8007c30:	00c000c4 	movi	r3,3
 8007c34:	00bfdfc4 	movi	r2,-129
 8007c38:	d8c12b15 	stw	r3,1196(sp)
 8007c3c:	e0b8703a 	and	fp,fp,r2
 8007c40:	dc812d15 	stw	r18,1204(sp)
 8007c44:	1823883a 	mov	r17,r3
 8007c48:	d8013215 	stw	zero,1224(sp)
 8007c4c:	d8013415 	stw	zero,1232(sp)
 8007c50:	003f0106 	br	8007858 <__alt_data_end+0xfc007858>
 8007c54:	9cc00214 	ori	r19,r19,8
 8007c58:	e005883a 	mov	r2,fp
 8007c5c:	e4000007 	ldb	r16,0(fp)
 8007c60:	003de506 	br	80073f8 <__alt_data_end+0xfc0073f8>
 8007c64:	da012a17 	ldw	r8,1192(sp)
 8007c68:	df012a15 	stw	fp,1192(sp)
 8007c6c:	9f000414 	ori	fp,r19,16
 8007c70:	e0c0080c 	andi	r3,fp,32
 8007c74:	d8812d17 	ldw	r2,1204(sp)
 8007c78:	18007626 	beq	r3,zero,8007e54 <___vfprintf_internal_r+0xbfc>
 8007c7c:	d9412d17 	ldw	r5,1204(sp)
 8007c80:	14800017 	ldw	r18,0(r2)
 8007c84:	15400117 	ldw	r21,4(r2)
 8007c88:	29400204 	addi	r5,r5,8
 8007c8c:	d9412d15 	stw	r5,1204(sp)
 8007c90:	0005883a 	mov	r2,zero
 8007c94:	9546b03a 	or	r3,r18,r21
 8007c98:	d8012785 	stb	zero,1182(sp)
 8007c9c:	da413215 	stw	r9,1224(sp)
 8007ca0:	0027883a 	mov	r19,zero
 8007ca4:	003ecd06 	br	80077dc <__alt_data_end+0xfc0077dc>
 8007ca8:	da012a17 	ldw	r8,1192(sp)
 8007cac:	df012a15 	stw	fp,1192(sp)
 8007cb0:	9f000414 	ori	fp,r19,16
 8007cb4:	e0c0080c 	andi	r3,fp,32
 8007cb8:	d8812d17 	ldw	r2,1204(sp)
 8007cbc:	18002c26 	beq	r3,zero,8007d70 <___vfprintf_internal_r+0xb18>
 8007cc0:	d9012d17 	ldw	r4,1204(sp)
 8007cc4:	14800017 	ldw	r18,0(r2)
 8007cc8:	15400117 	ldw	r21,4(r2)
 8007ccc:	21000204 	addi	r4,r4,8
 8007cd0:	d9012d15 	stw	r4,1204(sp)
 8007cd4:	00800044 	movi	r2,1
 8007cd8:	9546b03a 	or	r3,r18,r21
 8007cdc:	003fee06 	br	8007c98 <__alt_data_end+0xfc007c98>
 8007ce0:	da012a17 	ldw	r8,1192(sp)
 8007ce4:	df012a15 	stw	fp,1192(sp)
 8007ce8:	9839883a 	mov	fp,r19
 8007cec:	dcc12b03 	ldbu	r19,1196(sp)
 8007cf0:	014200b4 	movhi	r5,2050
 8007cf4:	2977d804 	addi	r5,r5,-8352
 8007cf8:	dcc12785 	stb	r19,1182(sp)
 8007cfc:	d9413b15 	stw	r5,1260(sp)
 8007d00:	e0c0080c 	andi	r3,fp,32
 8007d04:	d8812d17 	ldw	r2,1204(sp)
 8007d08:	18002e26 	beq	r3,zero,8007dc4 <___vfprintf_internal_r+0xb6c>
 8007d0c:	d9412d17 	ldw	r5,1204(sp)
 8007d10:	14800017 	ldw	r18,0(r2)
 8007d14:	15400117 	ldw	r21,4(r2)
 8007d18:	29400204 	addi	r5,r5,8
 8007d1c:	d9412d15 	stw	r5,1204(sp)
 8007d20:	e080004c 	andi	r2,fp,1
 8007d24:	10025c26 	beq	r2,zero,8008698 <___vfprintf_internal_r+0x1440>
 8007d28:	9546b03a 	or	r3,r18,r21
 8007d2c:	18038f26 	beq	r3,zero,8008b6c <___vfprintf_internal_r+0x1914>
 8007d30:	00800c04 	movi	r2,48
 8007d34:	d8812705 	stb	r2,1180(sp)
 8007d38:	dc012745 	stb	r16,1181(sp)
 8007d3c:	e7000094 	ori	fp,fp,2
 8007d40:	00800084 	movi	r2,2
 8007d44:	003fd406 	br	8007c98 <__alt_data_end+0xfc007c98>
 8007d48:	9cc00814 	ori	r19,r19,32
 8007d4c:	e005883a 	mov	r2,fp
 8007d50:	e4000007 	ldb	r16,0(fp)
 8007d54:	003da806 	br	80073f8 <__alt_data_end+0xfc0073f8>
 8007d58:	da012a17 	ldw	r8,1192(sp)
 8007d5c:	df012a15 	stw	fp,1192(sp)
 8007d60:	9839883a 	mov	fp,r19
 8007d64:	e0c0080c 	andi	r3,fp,32
 8007d68:	d8812d17 	ldw	r2,1204(sp)
 8007d6c:	183fd41e 	bne	r3,zero,8007cc0 <__alt_data_end+0xfc007cc0>
 8007d70:	e0c0040c 	andi	r3,fp,16
 8007d74:	18035f26 	beq	r3,zero,8008af4 <___vfprintf_internal_r+0x189c>
 8007d78:	d9412d17 	ldw	r5,1204(sp)
 8007d7c:	14800017 	ldw	r18,0(r2)
 8007d80:	002b883a 	mov	r21,zero
 8007d84:	29400104 	addi	r5,r5,4
 8007d88:	d9412d15 	stw	r5,1204(sp)
 8007d8c:	00800044 	movi	r2,1
 8007d90:	9007883a 	mov	r3,r18
 8007d94:	003fc006 	br	8007c98 <__alt_data_end+0xfc007c98>
 8007d98:	da012a17 	ldw	r8,1192(sp)
 8007d9c:	df012a15 	stw	fp,1192(sp)
 8007da0:	9839883a 	mov	fp,r19
 8007da4:	dcc12b03 	ldbu	r19,1196(sp)
 8007da8:	010200b4 	movhi	r4,2050
 8007dac:	2137dd04 	addi	r4,r4,-8332
 8007db0:	d9013b15 	stw	r4,1260(sp)
 8007db4:	dcc12785 	stb	r19,1182(sp)
 8007db8:	e0c0080c 	andi	r3,fp,32
 8007dbc:	d8812d17 	ldw	r2,1204(sp)
 8007dc0:	183fd21e 	bne	r3,zero,8007d0c <__alt_data_end+0xfc007d0c>
 8007dc4:	e0c0040c 	andi	r3,fp,16
 8007dc8:	18035426 	beq	r3,zero,8008b1c <___vfprintf_internal_r+0x18c4>
 8007dcc:	d8c12d17 	ldw	r3,1204(sp)
 8007dd0:	14800017 	ldw	r18,0(r2)
 8007dd4:	002b883a 	mov	r21,zero
 8007dd8:	18c00104 	addi	r3,r3,4
 8007ddc:	d8c12d15 	stw	r3,1204(sp)
 8007de0:	003fcf06 	br	8007d20 <__alt_data_end+0xfc007d20>
 8007de4:	e4000007 	ldb	r16,0(fp)
 8007de8:	00801b04 	movi	r2,108
 8007dec:	8083f726 	beq	r16,r2,8008dcc <___vfprintf_internal_r+0x1b74>
 8007df0:	9cc00414 	ori	r19,r19,16
 8007df4:	e005883a 	mov	r2,fp
 8007df8:	003d7f06 	br	80073f8 <__alt_data_end+0xfc0073f8>
 8007dfc:	da012a17 	ldw	r8,1192(sp)
 8007e00:	df012a15 	stw	fp,1192(sp)
 8007e04:	9839883a 	mov	fp,r19
 8007e08:	dcc12b03 	ldbu	r19,1196(sp)
 8007e0c:	e080080c 	andi	r2,fp,32
 8007e10:	dcc12785 	stb	r19,1182(sp)
 8007e14:	10032226 	beq	r2,zero,8008aa0 <___vfprintf_internal_r+0x1848>
 8007e18:	d9412d17 	ldw	r5,1204(sp)
 8007e1c:	d9012f17 	ldw	r4,1212(sp)
 8007e20:	28800017 	ldw	r2,0(r5)
 8007e24:	2007d7fa 	srai	r3,r4,31
 8007e28:	29400104 	addi	r5,r5,4
 8007e2c:	d9412d15 	stw	r5,1204(sp)
 8007e30:	11000015 	stw	r4,0(r2)
 8007e34:	10c00115 	stw	r3,4(r2)
 8007e38:	003d4406 	br	800734c <__alt_data_end+0xfc00734c>
 8007e3c:	da012a17 	ldw	r8,1192(sp)
 8007e40:	df012a15 	stw	fp,1192(sp)
 8007e44:	9839883a 	mov	fp,r19
 8007e48:	e0c0080c 	andi	r3,fp,32
 8007e4c:	d8812d17 	ldw	r2,1204(sp)
 8007e50:	183f8a1e 	bne	r3,zero,8007c7c <__alt_data_end+0xfc007c7c>
 8007e54:	e0c0040c 	andi	r3,fp,16
 8007e58:	18031c26 	beq	r3,zero,8008acc <___vfprintf_internal_r+0x1874>
 8007e5c:	14800017 	ldw	r18,0(r2)
 8007e60:	d8812d17 	ldw	r2,1204(sp)
 8007e64:	002b883a 	mov	r21,zero
 8007e68:	9007883a 	mov	r3,r18
 8007e6c:	10800104 	addi	r2,r2,4
 8007e70:	d8812d15 	stw	r2,1204(sp)
 8007e74:	0005883a 	mov	r2,zero
 8007e78:	003f8706 	br	8007c98 <__alt_data_end+0xfc007c98>
 8007e7c:	d9412d17 	ldw	r5,1204(sp)
 8007e80:	00800c04 	movi	r2,48
 8007e84:	d8812705 	stb	r2,1180(sp)
 8007e88:	2c800017 	ldw	r18,0(r5)
 8007e8c:	00801e04 	movi	r2,120
 8007e90:	d8812745 	stb	r2,1181(sp)
 8007e94:	008200b4 	movhi	r2,2050
 8007e98:	10b7dd04 	addi	r2,r2,-8332
 8007e9c:	29400104 	addi	r5,r5,4
 8007ea0:	da012a17 	ldw	r8,1192(sp)
 8007ea4:	d8813b15 	stw	r2,1260(sp)
 8007ea8:	df012a15 	stw	fp,1192(sp)
 8007eac:	002b883a 	mov	r21,zero
 8007eb0:	9f000094 	ori	fp,r19,2
 8007eb4:	d9412d15 	stw	r5,1204(sp)
 8007eb8:	00800084 	movi	r2,2
 8007ebc:	04001e04 	movi	r16,120
 8007ec0:	9007883a 	mov	r3,r18
 8007ec4:	003f7406 	br	8007c98 <__alt_data_end+0xfc007c98>
 8007ec8:	da012a17 	ldw	r8,1192(sp)
 8007ecc:	df012a15 	stw	fp,1192(sp)
 8007ed0:	9839883a 	mov	fp,r19
 8007ed4:	dcc12b03 	ldbu	r19,1196(sp)
 8007ed8:	e080080c 	andi	r2,fp,32
 8007edc:	d8c12d17 	ldw	r3,1204(sp)
 8007ee0:	dcc12785 	stb	r19,1182(sp)
 8007ee4:	103e321e 	bne	r2,zero,80077b0 <__alt_data_end+0xfc0077b0>
 8007ee8:	e080040c 	andi	r2,fp,16
 8007eec:	10031326 	beq	r2,zero,8008b3c <___vfprintf_internal_r+0x18e4>
 8007ef0:	1c800017 	ldw	r18,0(r3)
 8007ef4:	d9412d17 	ldw	r5,1204(sp)
 8007ef8:	902bd7fa 	srai	r21,r18,31
 8007efc:	29400104 	addi	r5,r5,4
 8007f00:	d9412d15 	stw	r5,1204(sp)
 8007f04:	a805883a 	mov	r2,r21
 8007f08:	003e2f06 	br	80077c8 <__alt_data_end+0xfc0077c8>
 8007f0c:	9cc01014 	ori	r19,r19,64
 8007f10:	e005883a 	mov	r2,fp
 8007f14:	e4000007 	ldb	r16,0(fp)
 8007f18:	003d3706 	br	80073f8 <__alt_data_end+0xfc0073f8>
 8007f1c:	d8c12d17 	ldw	r3,1204(sp)
 8007f20:	d9012d17 	ldw	r4,1204(sp)
 8007f24:	da012a17 	ldw	r8,1192(sp)
 8007f28:	18800017 	ldw	r2,0(r3)
 8007f2c:	21000104 	addi	r4,r4,4
 8007f30:	00c00044 	movi	r3,1
 8007f34:	df012a15 	stw	fp,1192(sp)
 8007f38:	d8c12b15 	stw	r3,1196(sp)
 8007f3c:	9839883a 	mov	fp,r19
 8007f40:	d8012785 	stb	zero,1182(sp)
 8007f44:	d8810405 	stb	r2,1040(sp)
 8007f48:	d9012d15 	stw	r4,1204(sp)
 8007f4c:	1823883a 	mov	r17,r3
 8007f50:	d8c10404 	addi	r3,sp,1040
 8007f54:	d8013215 	stw	zero,1224(sp)
 8007f58:	d8013415 	stw	zero,1232(sp)
 8007f5c:	d8c13115 	stw	r3,1220(sp)
 8007f60:	0005883a 	mov	r2,zero
 8007f64:	003e4306 	br	8007874 <__alt_data_end+0xfc007874>
 8007f68:	d8812b07 	ldb	r2,1196(sp)
 8007f6c:	1002fc1e 	bne	r2,zero,8008b60 <___vfprintf_internal_r+0x1908>
 8007f70:	00c00804 	movi	r3,32
 8007f74:	d8c12b05 	stb	r3,1196(sp)
 8007f78:	e005883a 	mov	r2,fp
 8007f7c:	e4000007 	ldb	r16,0(fp)
 8007f80:	003d1d06 	br	80073f8 <__alt_data_end+0xfc0073f8>
 8007f84:	9cc00054 	ori	r19,r19,1
 8007f88:	e005883a 	mov	r2,fp
 8007f8c:	e4000007 	ldb	r16,0(fp)
 8007f90:	003d1906 	br	80073f8 <__alt_data_end+0xfc0073f8>
 8007f94:	d9012d17 	ldw	r4,1204(sp)
 8007f98:	d9412d17 	ldw	r5,1204(sp)
 8007f9c:	21000017 	ldw	r4,0(r4)
 8007fa0:	28c00104 	addi	r3,r5,4
 8007fa4:	d9012e15 	stw	r4,1208(sp)
 8007fa8:	20038c16 	blt	r4,zero,8008ddc <___vfprintf_internal_r+0x1b84>
 8007fac:	d8c12d15 	stw	r3,1204(sp)
 8007fb0:	e005883a 	mov	r2,fp
 8007fb4:	e4000007 	ldb	r16,0(fp)
 8007fb8:	003d0f06 	br	80073f8 <__alt_data_end+0xfc0073f8>
 8007fbc:	00c00ac4 	movi	r3,43
 8007fc0:	d8c12b05 	stb	r3,1196(sp)
 8007fc4:	e005883a 	mov	r2,fp
 8007fc8:	e4000007 	ldb	r16,0(fp)
 8007fcc:	003d0a06 	br	80073f8 <__alt_data_end+0xfc0073f8>
 8007fd0:	d8c12d17 	ldw	r3,1204(sp)
 8007fd4:	d9012d17 	ldw	r4,1204(sp)
 8007fd8:	da012a17 	ldw	r8,1192(sp)
 8007fdc:	18c00017 	ldw	r3,0(r3)
 8007fe0:	df012a15 	stw	fp,1192(sp)
 8007fe4:	d8012785 	stb	zero,1182(sp)
 8007fe8:	d8c13115 	stw	r3,1220(sp)
 8007fec:	9839883a 	mov	fp,r19
 8007ff0:	24800104 	addi	r18,r4,4
 8007ff4:	1803f726 	beq	r3,zero,8008fd4 <___vfprintf_internal_r+0x1d7c>
 8007ff8:	d9013117 	ldw	r4,1220(sp)
 8007ffc:	48038916 	blt	r9,zero,8008e24 <___vfprintf_internal_r+0x1bcc>
 8008000:	480d883a 	mov	r6,r9
 8008004:	000b883a 	mov	r5,zero
 8008008:	da013f15 	stw	r8,1276(sp)
 800800c:	da413e15 	stw	r9,1272(sp)
 8008010:	800df800 	call	800df80 <memchr>
 8008014:	da013f17 	ldw	r8,1276(sp)
 8008018:	da413e17 	ldw	r9,1272(sp)
 800801c:	10045926 	beq	r2,zero,8009184 <___vfprintf_internal_r+0x1f2c>
 8008020:	d8c13117 	ldw	r3,1220(sp)
 8008024:	10e3c83a 	sub	r17,r2,r3
 8008028:	4c433516 	blt	r9,r17,8008d00 <___vfprintf_internal_r+0x1aa8>
 800802c:	8805883a 	mov	r2,r17
 8008030:	88038116 	blt	r17,zero,8008e38 <___vfprintf_internal_r+0x1be0>
 8008034:	dcc12783 	ldbu	r19,1182(sp)
 8008038:	d8812b15 	stw	r2,1196(sp)
 800803c:	dc812d15 	stw	r18,1204(sp)
 8008040:	d8013215 	stw	zero,1224(sp)
 8008044:	d8013415 	stw	zero,1232(sp)
 8008048:	003e0306 	br	8007858 <__alt_data_end+0xfc007858>
 800804c:	da012a17 	ldw	r8,1192(sp)
 8008050:	df012a15 	stw	fp,1192(sp)
 8008054:	9839883a 	mov	fp,r19
 8008058:	dcc12b03 	ldbu	r19,1196(sp)
 800805c:	dcc12785 	stb	r19,1182(sp)
 8008060:	803d8f26 	beq	r16,zero,80076a0 <__alt_data_end+0xfc0076a0>
 8008064:	00c00044 	movi	r3,1
 8008068:	d8c12b15 	stw	r3,1196(sp)
 800806c:	dc010405 	stb	r16,1040(sp)
 8008070:	d8012785 	stb	zero,1182(sp)
 8008074:	003fb506 	br	8007f4c <__alt_data_end+0xfc007f4c>
 8008078:	d8c12017 	ldw	r3,1152(sp)
 800807c:	003e3506 	br	8007954 <__alt_data_end+0xfc007954>
 8008080:	10803fcc 	andi	r2,r2,255
 8008084:	00c00044 	movi	r3,1
 8008088:	10fddc1e 	bne	r2,r3,80077fc <__alt_data_end+0xfc0077fc>
 800808c:	a800021e 	bne	r21,zero,8008098 <___vfprintf_internal_r+0xe40>
 8008090:	00800244 	movi	r2,9
 8008094:	14801e2e 	bgeu	r2,r18,8008110 <___vfprintf_internal_r+0xeb8>
 8008098:	dc012b15 	stw	r16,1196(sp)
 800809c:	dc410e04 	addi	r17,sp,1080
 80080a0:	9021883a 	mov	r16,r18
 80080a4:	da012c15 	stw	r8,1200(sp)
 80080a8:	a825883a 	mov	r18,r21
 80080ac:	482b883a 	mov	r21,r9
 80080b0:	8009883a 	mov	r4,r16
 80080b4:	900b883a 	mov	r5,r18
 80080b8:	01800284 	movi	r6,10
 80080bc:	000f883a 	mov	r7,zero
 80080c0:	8016cfc0 	call	8016cfc <__umoddi3>
 80080c4:	10800c04 	addi	r2,r2,48
 80080c8:	8c7fffc4 	addi	r17,r17,-1
 80080cc:	8009883a 	mov	r4,r16
 80080d0:	900b883a 	mov	r5,r18
 80080d4:	01800284 	movi	r6,10
 80080d8:	000f883a 	mov	r7,zero
 80080dc:	88800005 	stb	r2,0(r17)
 80080e0:	80166bc0 	call	80166bc <__udivdi3>
 80080e4:	1021883a 	mov	r16,r2
 80080e8:	10c4b03a 	or	r2,r2,r3
 80080ec:	1825883a 	mov	r18,r3
 80080f0:	103fef1e 	bne	r2,zero,80080b0 <__alt_data_end+0xfc0080b0>
 80080f4:	d9012817 	ldw	r4,1184(sp)
 80080f8:	dc413115 	stw	r17,1220(sp)
 80080fc:	dc012b17 	ldw	r16,1196(sp)
 8008100:	da012c17 	ldw	r8,1200(sp)
 8008104:	a813883a 	mov	r9,r21
 8008108:	2463c83a 	sub	r17,r4,r17
 800810c:	003dcd06 	br	8007844 <__alt_data_end+0xfc007844>
 8008110:	94800c04 	addi	r18,r18,48
 8008114:	d8c10dc4 	addi	r3,sp,1079
 8008118:	dc810dc5 	stb	r18,1079(sp)
 800811c:	dc413c17 	ldw	r17,1264(sp)
 8008120:	d8c13115 	stw	r3,1220(sp)
 8008124:	003dc706 	br	8007844 <__alt_data_end+0xfc007844>
 8008128:	00801944 	movi	r2,101
 800812c:	1400720e 	bge	r2,r16,80082f8 <___vfprintf_internal_r+0x10a0>
 8008130:	d9013717 	ldw	r4,1244(sp)
 8008134:	d9413917 	ldw	r5,1252(sp)
 8008138:	000d883a 	mov	r6,zero
 800813c:	000f883a 	mov	r7,zero
 8008140:	d8c13d15 	stw	r3,1268(sp)
 8008144:	da013f15 	stw	r8,1276(sp)
 8008148:	80188440 	call	8018844 <__eqdf2>
 800814c:	d8c13d17 	ldw	r3,1268(sp)
 8008150:	da013f17 	ldw	r8,1276(sp)
 8008154:	1000f41e 	bne	r2,zero,8008528 <___vfprintf_internal_r+0x12d0>
 8008158:	d8811f17 	ldw	r2,1148(sp)
 800815c:	010200b4 	movhi	r4,2050
 8008160:	2137e404 	addi	r4,r4,-8304
 8008164:	18c00044 	addi	r3,r3,1
 8008168:	10800044 	addi	r2,r2,1
 800816c:	41000015 	stw	r4,0(r8)
 8008170:	01000044 	movi	r4,1
 8008174:	41000115 	stw	r4,4(r8)
 8008178:	d8c12015 	stw	r3,1152(sp)
 800817c:	d8811f15 	stw	r2,1148(sp)
 8008180:	010001c4 	movi	r4,7
 8008184:	20828d16 	blt	r4,r2,8008bbc <___vfprintf_internal_r+0x1964>
 8008188:	42000204 	addi	r8,r8,8
 800818c:	d8812617 	ldw	r2,1176(sp)
 8008190:	d9413317 	ldw	r5,1228(sp)
 8008194:	11400216 	blt	r2,r5,80081a0 <___vfprintf_internal_r+0xf48>
 8008198:	e080004c 	andi	r2,fp,1
 800819c:	103e4126 	beq	r2,zero,8007aa4 <__alt_data_end+0xfc007aa4>
 80081a0:	d8813817 	ldw	r2,1248(sp)
 80081a4:	d9013517 	ldw	r4,1236(sp)
 80081a8:	d9413817 	ldw	r5,1248(sp)
 80081ac:	1887883a 	add	r3,r3,r2
 80081b0:	d8811f17 	ldw	r2,1148(sp)
 80081b4:	41000015 	stw	r4,0(r8)
 80081b8:	41400115 	stw	r5,4(r8)
 80081bc:	10800044 	addi	r2,r2,1
 80081c0:	d8c12015 	stw	r3,1152(sp)
 80081c4:	d8811f15 	stw	r2,1148(sp)
 80081c8:	010001c4 	movi	r4,7
 80081cc:	20830916 	blt	r4,r2,8008df4 <___vfprintf_internal_r+0x1b9c>
 80081d0:	42000204 	addi	r8,r8,8
 80081d4:	d8813317 	ldw	r2,1228(sp)
 80081d8:	143fffc4 	addi	r16,r2,-1
 80081dc:	043e310e 	bge	zero,r16,8007aa4 <__alt_data_end+0xfc007aa4>
 80081e0:	04400404 	movi	r17,16
 80081e4:	d8811f17 	ldw	r2,1148(sp)
 80081e8:	8c007e0e 	bge	r17,r16,80083e4 <___vfprintf_internal_r+0x118c>
 80081ec:	014200b4 	movhi	r5,2050
 80081f0:	2977ec84 	addi	r5,r5,-8270
 80081f4:	d9412c15 	stw	r5,1200(sp)
 80081f8:	04c001c4 	movi	r19,7
 80081fc:	00000306 	br	800820c <___vfprintf_internal_r+0xfb4>
 8008200:	42000204 	addi	r8,r8,8
 8008204:	843ffc04 	addi	r16,r16,-16
 8008208:	8c00790e 	bge	r17,r16,80083f0 <___vfprintf_internal_r+0x1198>
 800820c:	18c00404 	addi	r3,r3,16
 8008210:	10800044 	addi	r2,r2,1
 8008214:	45000015 	stw	r20,0(r8)
 8008218:	44400115 	stw	r17,4(r8)
 800821c:	d8c12015 	stw	r3,1152(sp)
 8008220:	d8811f15 	stw	r2,1148(sp)
 8008224:	98bff60e 	bge	r19,r2,8008200 <__alt_data_end+0xfc008200>
 8008228:	b809883a 	mov	r4,r23
 800822c:	b00b883a 	mov	r5,r22
 8008230:	d9811e04 	addi	r6,sp,1144
 8008234:	8013a600 	call	8013a60 <__sprint_r>
 8008238:	103d1f1e 	bne	r2,zero,80076b8 <__alt_data_end+0xfc0076b8>
 800823c:	d8c12017 	ldw	r3,1152(sp)
 8008240:	d8811f17 	ldw	r2,1148(sp)
 8008244:	da000404 	addi	r8,sp,16
 8008248:	003fee06 	br	8008204 <__alt_data_end+0xfc008204>
 800824c:	d9412e17 	ldw	r5,1208(sp)
 8008250:	d8812b17 	ldw	r2,1196(sp)
 8008254:	28a7c83a 	sub	r19,r5,r2
 8008258:	04fddc0e 	bge	zero,r19,80079cc <__alt_data_end+0xfc0079cc>
 800825c:	05400404 	movi	r21,16
 8008260:	d8811f17 	ldw	r2,1148(sp)
 8008264:	acc3870e 	bge	r21,r19,8009084 <___vfprintf_internal_r+0x1e2c>
 8008268:	014200b4 	movhi	r5,2050
 800826c:	2977ec84 	addi	r5,r5,-8270
 8008270:	d9412c15 	stw	r5,1200(sp)
 8008274:	048001c4 	movi	r18,7
 8008278:	00000306 	br	8008288 <___vfprintf_internal_r+0x1030>
 800827c:	9cfffc04 	addi	r19,r19,-16
 8008280:	42000204 	addi	r8,r8,8
 8008284:	acc0110e 	bge	r21,r19,80082cc <___vfprintf_internal_r+0x1074>
 8008288:	18c00404 	addi	r3,r3,16
 800828c:	10800044 	addi	r2,r2,1
 8008290:	45000015 	stw	r20,0(r8)
 8008294:	45400115 	stw	r21,4(r8)
 8008298:	d8c12015 	stw	r3,1152(sp)
 800829c:	d8811f15 	stw	r2,1148(sp)
 80082a0:	90bff60e 	bge	r18,r2,800827c <__alt_data_end+0xfc00827c>
 80082a4:	b809883a 	mov	r4,r23
 80082a8:	b00b883a 	mov	r5,r22
 80082ac:	d9811e04 	addi	r6,sp,1144
 80082b0:	8013a600 	call	8013a60 <__sprint_r>
 80082b4:	103d001e 	bne	r2,zero,80076b8 <__alt_data_end+0xfc0076b8>
 80082b8:	9cfffc04 	addi	r19,r19,-16
 80082bc:	d8c12017 	ldw	r3,1152(sp)
 80082c0:	d8811f17 	ldw	r2,1148(sp)
 80082c4:	da000404 	addi	r8,sp,16
 80082c8:	acffef16 	blt	r21,r19,8008288 <__alt_data_end+0xfc008288>
 80082cc:	d9012c17 	ldw	r4,1200(sp)
 80082d0:	1cc7883a 	add	r3,r3,r19
 80082d4:	10800044 	addi	r2,r2,1
 80082d8:	41000015 	stw	r4,0(r8)
 80082dc:	44c00115 	stw	r19,4(r8)
 80082e0:	d8c12015 	stw	r3,1152(sp)
 80082e4:	d8811f15 	stw	r2,1148(sp)
 80082e8:	010001c4 	movi	r4,7
 80082ec:	20817816 	blt	r4,r2,80088d0 <___vfprintf_internal_r+0x1678>
 80082f0:	42000204 	addi	r8,r8,8
 80082f4:	003db506 	br	80079cc <__alt_data_end+0xfc0079cc>
 80082f8:	d9413317 	ldw	r5,1228(sp)
 80082fc:	00800044 	movi	r2,1
 8008300:	18c00044 	addi	r3,r3,1
 8008304:	11413e0e 	bge	r2,r5,8008800 <___vfprintf_internal_r+0x15a8>
 8008308:	dc011f17 	ldw	r16,1148(sp)
 800830c:	d8813117 	ldw	r2,1220(sp)
 8008310:	d8c12015 	stw	r3,1152(sp)
 8008314:	84000044 	addi	r16,r16,1
 8008318:	40800015 	stw	r2,0(r8)
 800831c:	00800044 	movi	r2,1
 8008320:	40800115 	stw	r2,4(r8)
 8008324:	dc011f15 	stw	r16,1148(sp)
 8008328:	008001c4 	movi	r2,7
 800832c:	14015616 	blt	r2,r16,8008888 <___vfprintf_internal_r+0x1630>
 8008330:	42000204 	addi	r8,r8,8
 8008334:	d9013817 	ldw	r4,1248(sp)
 8008338:	d9413517 	ldw	r5,1236(sp)
 800833c:	84000044 	addi	r16,r16,1
 8008340:	1907883a 	add	r3,r3,r4
 8008344:	41400015 	stw	r5,0(r8)
 8008348:	41000115 	stw	r4,4(r8)
 800834c:	d8c12015 	stw	r3,1152(sp)
 8008350:	dc011f15 	stw	r16,1148(sp)
 8008354:	008001c4 	movi	r2,7
 8008358:	14015416 	blt	r2,r16,80088ac <___vfprintf_internal_r+0x1654>
 800835c:	44400204 	addi	r17,r8,8
 8008360:	d9013717 	ldw	r4,1244(sp)
 8008364:	d9413917 	ldw	r5,1252(sp)
 8008368:	000d883a 	mov	r6,zero
 800836c:	000f883a 	mov	r7,zero
 8008370:	d8c13d15 	stw	r3,1268(sp)
 8008374:	80188440 	call	8018844 <__eqdf2>
 8008378:	d8c13d17 	ldw	r3,1268(sp)
 800837c:	1000a726 	beq	r2,zero,800861c <___vfprintf_internal_r+0x13c4>
 8008380:	d9013317 	ldw	r4,1228(sp)
 8008384:	d9413117 	ldw	r5,1220(sp)
 8008388:	84000044 	addi	r16,r16,1
 800838c:	20bfffc4 	addi	r2,r4,-1
 8008390:	1887883a 	add	r3,r3,r2
 8008394:	29000044 	addi	r4,r5,1
 8008398:	88800115 	stw	r2,4(r17)
 800839c:	89000015 	stw	r4,0(r17)
 80083a0:	d8c12015 	stw	r3,1152(sp)
 80083a4:	dc011f15 	stw	r16,1148(sp)
 80083a8:	008001c4 	movi	r2,7
 80083ac:	14012d16 	blt	r2,r16,8008864 <___vfprintf_internal_r+0x160c>
 80083b0:	8c400204 	addi	r17,r17,8
 80083b4:	d9413a17 	ldw	r5,1256(sp)
 80083b8:	dcc122c4 	addi	r19,sp,1163
 80083bc:	84000044 	addi	r16,r16,1
 80083c0:	28c7883a 	add	r3,r5,r3
 80083c4:	8cc00015 	stw	r19,0(r17)
 80083c8:	89400115 	stw	r5,4(r17)
 80083cc:	d8c12015 	stw	r3,1152(sp)
 80083d0:	dc011f15 	stw	r16,1148(sp)
 80083d4:	008001c4 	movi	r2,7
 80083d8:	14000e16 	blt	r2,r16,8008414 <___vfprintf_internal_r+0x11bc>
 80083dc:	8a000204 	addi	r8,r17,8
 80083e0:	003db006 	br	8007aa4 <__alt_data_end+0xfc007aa4>
 80083e4:	010200b4 	movhi	r4,2050
 80083e8:	2137ec84 	addi	r4,r4,-8270
 80083ec:	d9012c15 	stw	r4,1200(sp)
 80083f0:	d9012c17 	ldw	r4,1200(sp)
 80083f4:	1c07883a 	add	r3,r3,r16
 80083f8:	44000115 	stw	r16,4(r8)
 80083fc:	41000015 	stw	r4,0(r8)
 8008400:	10800044 	addi	r2,r2,1
 8008404:	d8c12015 	stw	r3,1152(sp)
 8008408:	d8811f15 	stw	r2,1148(sp)
 800840c:	010001c4 	movi	r4,7
 8008410:	20bda30e 	bge	r4,r2,8007aa0 <__alt_data_end+0xfc007aa0>
 8008414:	b809883a 	mov	r4,r23
 8008418:	b00b883a 	mov	r5,r22
 800841c:	d9811e04 	addi	r6,sp,1144
 8008420:	8013a600 	call	8013a60 <__sprint_r>
 8008424:	103ca41e 	bne	r2,zero,80076b8 <__alt_data_end+0xfc0076b8>
 8008428:	d8c12017 	ldw	r3,1152(sp)
 800842c:	da000404 	addi	r8,sp,16
 8008430:	003d9c06 	br	8007aa4 <__alt_data_end+0xfc007aa4>
 8008434:	b809883a 	mov	r4,r23
 8008438:	b00b883a 	mov	r5,r22
 800843c:	d9811e04 	addi	r6,sp,1144
 8008440:	8013a600 	call	8013a60 <__sprint_r>
 8008444:	103dd226 	beq	r2,zero,8007b90 <__alt_data_end+0xfc007b90>
 8008448:	003c9b06 	br	80076b8 <__alt_data_end+0xfc0076b8>
 800844c:	10803fcc 	andi	r2,r2,255
 8008450:	1000311e 	bne	r2,zero,8008518 <___vfprintf_internal_r+0x12c0>
 8008454:	e080004c 	andi	r2,fp,1
 8008458:	10002f26 	beq	r2,zero,8008518 <___vfprintf_internal_r+0x12c0>
 800845c:	00800c04 	movi	r2,48
 8008460:	d8c10dc4 	addi	r3,sp,1079
 8008464:	d8810dc5 	stb	r2,1079(sp)
 8008468:	dc413c17 	ldw	r17,1264(sp)
 800846c:	d8c13115 	stw	r3,1220(sp)
 8008470:	003cf406 	br	8007844 <__alt_data_end+0xfc007844>
 8008474:	b809883a 	mov	r4,r23
 8008478:	b00b883a 	mov	r5,r22
 800847c:	d9811e04 	addi	r6,sp,1144
 8008480:	8013a600 	call	8013a60 <__sprint_r>
 8008484:	103c8c1e 	bne	r2,zero,80076b8 <__alt_data_end+0xfc0076b8>
 8008488:	d8c12017 	ldw	r3,1152(sp)
 800848c:	da000404 	addi	r8,sp,16
 8008490:	003d7706 	br	8007a70 <__alt_data_end+0xfc007a70>
 8008494:	b809883a 	mov	r4,r23
 8008498:	b00b883a 	mov	r5,r22
 800849c:	d9811e04 	addi	r6,sp,1144
 80084a0:	8013a600 	call	8013a60 <__sprint_r>
 80084a4:	103c841e 	bne	r2,zero,80076b8 <__alt_data_end+0xfc0076b8>
 80084a8:	d8c12017 	ldw	r3,1152(sp)
 80084ac:	da000404 	addi	r8,sp,16
 80084b0:	003d3506 	br	8007988 <__alt_data_end+0xfc007988>
 80084b4:	b809883a 	mov	r4,r23
 80084b8:	b00b883a 	mov	r5,r22
 80084bc:	d9811e04 	addi	r6,sp,1144
 80084c0:	8013a600 	call	8013a60 <__sprint_r>
 80084c4:	103c7c1e 	bne	r2,zero,80076b8 <__alt_data_end+0xfc0076b8>
 80084c8:	d8c12017 	ldw	r3,1152(sp)
 80084cc:	da000404 	addi	r8,sp,16
 80084d0:	003d3b06 	br	80079c0 <__alt_data_end+0xfc0079c0>
 80084d4:	d9413b17 	ldw	r5,1260(sp)
 80084d8:	d8c10e04 	addi	r3,sp,1080
 80084dc:	908003cc 	andi	r2,r18,15
 80084e0:	a808973a 	slli	r4,r21,28
 80084e4:	2885883a 	add	r2,r5,r2
 80084e8:	9024d13a 	srli	r18,r18,4
 80084ec:	10800003 	ldbu	r2,0(r2)
 80084f0:	a82ad13a 	srli	r21,r21,4
 80084f4:	18ffffc4 	addi	r3,r3,-1
 80084f8:	24a4b03a 	or	r18,r4,r18
 80084fc:	18800005 	stb	r2,0(r3)
 8008500:	9544b03a 	or	r2,r18,r21
 8008504:	103ff51e 	bne	r2,zero,80084dc <__alt_data_end+0xfc0084dc>
 8008508:	d9412817 	ldw	r5,1184(sp)
 800850c:	d8c13115 	stw	r3,1220(sp)
 8008510:	28e3c83a 	sub	r17,r5,r3
 8008514:	003ccb06 	br	8007844 <__alt_data_end+0xfc007844>
 8008518:	d8c10e04 	addi	r3,sp,1080
 800851c:	0023883a 	mov	r17,zero
 8008520:	d8c13115 	stw	r3,1220(sp)
 8008524:	003cc706 	br	8007844 <__alt_data_end+0xfc007844>
 8008528:	dc012617 	ldw	r16,1176(sp)
 800852c:	0401ab0e 	bge	zero,r16,8008bdc <___vfprintf_internal_r+0x1984>
 8008530:	d8813317 	ldw	r2,1228(sp)
 8008534:	d9413117 	ldw	r5,1220(sp)
 8008538:	d9013417 	ldw	r4,1232(sp)
 800853c:	1023883a 	mov	r17,r2
 8008540:	28a1883a 	add	r16,r5,r2
 8008544:	2080010e 	bge	r4,r2,800854c <___vfprintf_internal_r+0x12f4>
 8008548:	2023883a 	mov	r17,r4
 800854c:	04400b0e 	bge	zero,r17,800857c <___vfprintf_internal_r+0x1324>
 8008550:	d8811f17 	ldw	r2,1148(sp)
 8008554:	d9413117 	ldw	r5,1220(sp)
 8008558:	1c47883a 	add	r3,r3,r17
 800855c:	10800044 	addi	r2,r2,1
 8008560:	41400015 	stw	r5,0(r8)
 8008564:	44400115 	stw	r17,4(r8)
 8008568:	d8c12015 	stw	r3,1152(sp)
 800856c:	d8811f15 	stw	r2,1148(sp)
 8008570:	010001c4 	movi	r4,7
 8008574:	20826716 	blt	r4,r2,8008f14 <___vfprintf_internal_r+0x1cbc>
 8008578:	42000204 	addi	r8,r8,8
 800857c:	88026316 	blt	r17,zero,8008f0c <___vfprintf_internal_r+0x1cb4>
 8008580:	d8813417 	ldw	r2,1232(sp)
 8008584:	1463c83a 	sub	r17,r2,r17
 8008588:	0440590e 	bge	zero,r17,80086f0 <___vfprintf_internal_r+0x1498>
 800858c:	04c00404 	movi	r19,16
 8008590:	d8811f17 	ldw	r2,1148(sp)
 8008594:	9c41770e 	bge	r19,r17,8008b74 <___vfprintf_internal_r+0x191c>
 8008598:	014200b4 	movhi	r5,2050
 800859c:	2977ec84 	addi	r5,r5,-8270
 80085a0:	d9412c15 	stw	r5,1200(sp)
 80085a4:	054001c4 	movi	r21,7
 80085a8:	00000306 	br	80085b8 <___vfprintf_internal_r+0x1360>
 80085ac:	42000204 	addi	r8,r8,8
 80085b0:	8c7ffc04 	addi	r17,r17,-16
 80085b4:	9c41720e 	bge	r19,r17,8008b80 <___vfprintf_internal_r+0x1928>
 80085b8:	18c00404 	addi	r3,r3,16
 80085bc:	10800044 	addi	r2,r2,1
 80085c0:	45000015 	stw	r20,0(r8)
 80085c4:	44c00115 	stw	r19,4(r8)
 80085c8:	d8c12015 	stw	r3,1152(sp)
 80085cc:	d8811f15 	stw	r2,1148(sp)
 80085d0:	a8bff60e 	bge	r21,r2,80085ac <__alt_data_end+0xfc0085ac>
 80085d4:	b809883a 	mov	r4,r23
 80085d8:	b00b883a 	mov	r5,r22
 80085dc:	d9811e04 	addi	r6,sp,1144
 80085e0:	8013a600 	call	8013a60 <__sprint_r>
 80085e4:	103c341e 	bne	r2,zero,80076b8 <__alt_data_end+0xfc0076b8>
 80085e8:	d8c12017 	ldw	r3,1152(sp)
 80085ec:	d8811f17 	ldw	r2,1148(sp)
 80085f0:	da000404 	addi	r8,sp,16
 80085f4:	003fee06 	br	80085b0 <__alt_data_end+0xfc0085b0>
 80085f8:	b809883a 	mov	r4,r23
 80085fc:	b00b883a 	mov	r5,r22
 8008600:	d9811e04 	addi	r6,sp,1144
 8008604:	8013a600 	call	8013a60 <__sprint_r>
 8008608:	103c2b1e 	bne	r2,zero,80076b8 <__alt_data_end+0xfc0076b8>
 800860c:	d8c12017 	ldw	r3,1152(sp)
 8008610:	d8812787 	ldb	r2,1182(sp)
 8008614:	da000404 	addi	r8,sp,16
 8008618:	003cce06 	br	8007954 <__alt_data_end+0xfc007954>
 800861c:	d8813317 	ldw	r2,1228(sp)
 8008620:	14ffffc4 	addi	r19,r2,-1
 8008624:	04ff630e 	bge	zero,r19,80083b4 <__alt_data_end+0xfc0083b4>
 8008628:	05400404 	movi	r21,16
 800862c:	acc0810e 	bge	r21,r19,8008834 <___vfprintf_internal_r+0x15dc>
 8008630:	014200b4 	movhi	r5,2050
 8008634:	2977ec84 	addi	r5,r5,-8270
 8008638:	d9412c15 	stw	r5,1200(sp)
 800863c:	01c001c4 	movi	r7,7
 8008640:	00000306 	br	8008650 <___vfprintf_internal_r+0x13f8>
 8008644:	8c400204 	addi	r17,r17,8
 8008648:	9cfffc04 	addi	r19,r19,-16
 800864c:	acc07c0e 	bge	r21,r19,8008840 <___vfprintf_internal_r+0x15e8>
 8008650:	18c00404 	addi	r3,r3,16
 8008654:	84000044 	addi	r16,r16,1
 8008658:	8d000015 	stw	r20,0(r17)
 800865c:	8d400115 	stw	r21,4(r17)
 8008660:	d8c12015 	stw	r3,1152(sp)
 8008664:	dc011f15 	stw	r16,1148(sp)
 8008668:	3c3ff60e 	bge	r7,r16,8008644 <__alt_data_end+0xfc008644>
 800866c:	b809883a 	mov	r4,r23
 8008670:	b00b883a 	mov	r5,r22
 8008674:	d9811e04 	addi	r6,sp,1144
 8008678:	d9c13d15 	stw	r7,1268(sp)
 800867c:	8013a600 	call	8013a60 <__sprint_r>
 8008680:	d9c13d17 	ldw	r7,1268(sp)
 8008684:	103c0c1e 	bne	r2,zero,80076b8 <__alt_data_end+0xfc0076b8>
 8008688:	d8c12017 	ldw	r3,1152(sp)
 800868c:	dc011f17 	ldw	r16,1148(sp)
 8008690:	dc400404 	addi	r17,sp,16
 8008694:	003fec06 	br	8008648 <__alt_data_end+0xfc008648>
 8008698:	00800084 	movi	r2,2
 800869c:	9546b03a 	or	r3,r18,r21
 80086a0:	003d7d06 	br	8007c98 <__alt_data_end+0xfc007c98>
 80086a4:	10803fcc 	andi	r2,r2,255
 80086a8:	1080201c 	xori	r2,r2,128
 80086ac:	10bfe004 	addi	r2,r2,-128
 80086b0:	01000c04 	movi	r4,48
 80086b4:	1101d726 	beq	r2,r4,8008e14 <___vfprintf_internal_r+0x1bbc>
 80086b8:	d9413117 	ldw	r5,1220(sp)
 80086bc:	d8812817 	ldw	r2,1184(sp)
 80086c0:	193fffc5 	stb	r4,-1(r3)
 80086c4:	297fffc4 	addi	r5,r5,-1
 80086c8:	d9413115 	stw	r5,1220(sp)
 80086cc:	1163c83a 	sub	r17,r2,r5
 80086d0:	003c5c06 	br	8007844 <__alt_data_end+0xfc007844>
 80086d4:	b809883a 	mov	r4,r23
 80086d8:	b00b883a 	mov	r5,r22
 80086dc:	d9811e04 	addi	r6,sp,1144
 80086e0:	8013a600 	call	8013a60 <__sprint_r>
 80086e4:	103bf41e 	bne	r2,zero,80076b8 <__alt_data_end+0xfc0076b8>
 80086e8:	d8c12017 	ldw	r3,1152(sp)
 80086ec:	da000404 	addi	r8,sp,16
 80086f0:	d9413117 	ldw	r5,1220(sp)
 80086f4:	d9013417 	ldw	r4,1232(sp)
 80086f8:	d8812617 	ldw	r2,1176(sp)
 80086fc:	2923883a 	add	r17,r5,r4
 8008700:	d9413317 	ldw	r5,1228(sp)
 8008704:	11400216 	blt	r2,r5,8008710 <___vfprintf_internal_r+0x14b8>
 8008708:	e100004c 	andi	r4,fp,1
 800870c:	20000d26 	beq	r4,zero,8008744 <___vfprintf_internal_r+0x14ec>
 8008710:	d9013817 	ldw	r4,1248(sp)
 8008714:	d9413517 	ldw	r5,1236(sp)
 8008718:	1907883a 	add	r3,r3,r4
 800871c:	d9011f17 	ldw	r4,1148(sp)
 8008720:	41400015 	stw	r5,0(r8)
 8008724:	d9413817 	ldw	r5,1248(sp)
 8008728:	21000044 	addi	r4,r4,1
 800872c:	d8c12015 	stw	r3,1152(sp)
 8008730:	41400115 	stw	r5,4(r8)
 8008734:	d9011f15 	stw	r4,1148(sp)
 8008738:	014001c4 	movi	r5,7
 800873c:	2901fd16 	blt	r5,r4,8008f34 <___vfprintf_internal_r+0x1cdc>
 8008740:	42000204 	addi	r8,r8,8
 8008744:	d9013317 	ldw	r4,1228(sp)
 8008748:	2085c83a 	sub	r2,r4,r2
 800874c:	8449c83a 	sub	r4,r16,r17
 8008750:	1021883a 	mov	r16,r2
 8008754:	2080010e 	bge	r4,r2,800875c <___vfprintf_internal_r+0x1504>
 8008758:	2021883a 	mov	r16,r4
 800875c:	04000a0e 	bge	zero,r16,8008788 <___vfprintf_internal_r+0x1530>
 8008760:	d9011f17 	ldw	r4,1148(sp)
 8008764:	1c07883a 	add	r3,r3,r16
 8008768:	44400015 	stw	r17,0(r8)
 800876c:	21000044 	addi	r4,r4,1
 8008770:	44000115 	stw	r16,4(r8)
 8008774:	d8c12015 	stw	r3,1152(sp)
 8008778:	d9011f15 	stw	r4,1148(sp)
 800877c:	014001c4 	movi	r5,7
 8008780:	29020916 	blt	r5,r4,8008fa8 <___vfprintf_internal_r+0x1d50>
 8008784:	42000204 	addi	r8,r8,8
 8008788:	80020116 	blt	r16,zero,8008f90 <___vfprintf_internal_r+0x1d38>
 800878c:	1421c83a 	sub	r16,r2,r16
 8008790:	043cc40e 	bge	zero,r16,8007aa4 <__alt_data_end+0xfc007aa4>
 8008794:	04400404 	movi	r17,16
 8008798:	d8811f17 	ldw	r2,1148(sp)
 800879c:	8c3f110e 	bge	r17,r16,80083e4 <__alt_data_end+0xfc0083e4>
 80087a0:	014200b4 	movhi	r5,2050
 80087a4:	2977ec84 	addi	r5,r5,-8270
 80087a8:	d9412c15 	stw	r5,1200(sp)
 80087ac:	04c001c4 	movi	r19,7
 80087b0:	00000306 	br	80087c0 <___vfprintf_internal_r+0x1568>
 80087b4:	42000204 	addi	r8,r8,8
 80087b8:	843ffc04 	addi	r16,r16,-16
 80087bc:	8c3f0c0e 	bge	r17,r16,80083f0 <__alt_data_end+0xfc0083f0>
 80087c0:	18c00404 	addi	r3,r3,16
 80087c4:	10800044 	addi	r2,r2,1
 80087c8:	45000015 	stw	r20,0(r8)
 80087cc:	44400115 	stw	r17,4(r8)
 80087d0:	d8c12015 	stw	r3,1152(sp)
 80087d4:	d8811f15 	stw	r2,1148(sp)
 80087d8:	98bff60e 	bge	r19,r2,80087b4 <__alt_data_end+0xfc0087b4>
 80087dc:	b809883a 	mov	r4,r23
 80087e0:	b00b883a 	mov	r5,r22
 80087e4:	d9811e04 	addi	r6,sp,1144
 80087e8:	8013a600 	call	8013a60 <__sprint_r>
 80087ec:	103bb21e 	bne	r2,zero,80076b8 <__alt_data_end+0xfc0076b8>
 80087f0:	d8c12017 	ldw	r3,1152(sp)
 80087f4:	d8811f17 	ldw	r2,1148(sp)
 80087f8:	da000404 	addi	r8,sp,16
 80087fc:	003fee06 	br	80087b8 <__alt_data_end+0xfc0087b8>
 8008800:	e088703a 	and	r4,fp,r2
 8008804:	203ec01e 	bne	r4,zero,8008308 <__alt_data_end+0xfc008308>
 8008808:	dc011f17 	ldw	r16,1148(sp)
 800880c:	d9013117 	ldw	r4,1220(sp)
 8008810:	40800115 	stw	r2,4(r8)
 8008814:	84000044 	addi	r16,r16,1
 8008818:	41000015 	stw	r4,0(r8)
 800881c:	d8c12015 	stw	r3,1152(sp)
 8008820:	dc011f15 	stw	r16,1148(sp)
 8008824:	008001c4 	movi	r2,7
 8008828:	14000e16 	blt	r2,r16,8008864 <___vfprintf_internal_r+0x160c>
 800882c:	44400204 	addi	r17,r8,8
 8008830:	003ee006 	br	80083b4 <__alt_data_end+0xfc0083b4>
 8008834:	010200b4 	movhi	r4,2050
 8008838:	2137ec84 	addi	r4,r4,-8270
 800883c:	d9012c15 	stw	r4,1200(sp)
 8008840:	d8812c17 	ldw	r2,1200(sp)
 8008844:	1cc7883a 	add	r3,r3,r19
 8008848:	84000044 	addi	r16,r16,1
 800884c:	88800015 	stw	r2,0(r17)
 8008850:	8cc00115 	stw	r19,4(r17)
 8008854:	d8c12015 	stw	r3,1152(sp)
 8008858:	dc011f15 	stw	r16,1148(sp)
 800885c:	008001c4 	movi	r2,7
 8008860:	143ed30e 	bge	r2,r16,80083b0 <__alt_data_end+0xfc0083b0>
 8008864:	b809883a 	mov	r4,r23
 8008868:	b00b883a 	mov	r5,r22
 800886c:	d9811e04 	addi	r6,sp,1144
 8008870:	8013a600 	call	8013a60 <__sprint_r>
 8008874:	103b901e 	bne	r2,zero,80076b8 <__alt_data_end+0xfc0076b8>
 8008878:	d8c12017 	ldw	r3,1152(sp)
 800887c:	dc011f17 	ldw	r16,1148(sp)
 8008880:	dc400404 	addi	r17,sp,16
 8008884:	003ecb06 	br	80083b4 <__alt_data_end+0xfc0083b4>
 8008888:	b809883a 	mov	r4,r23
 800888c:	b00b883a 	mov	r5,r22
 8008890:	d9811e04 	addi	r6,sp,1144
 8008894:	8013a600 	call	8013a60 <__sprint_r>
 8008898:	103b871e 	bne	r2,zero,80076b8 <__alt_data_end+0xfc0076b8>
 800889c:	d8c12017 	ldw	r3,1152(sp)
 80088a0:	dc011f17 	ldw	r16,1148(sp)
 80088a4:	da000404 	addi	r8,sp,16
 80088a8:	003ea206 	br	8008334 <__alt_data_end+0xfc008334>
 80088ac:	b809883a 	mov	r4,r23
 80088b0:	b00b883a 	mov	r5,r22
 80088b4:	d9811e04 	addi	r6,sp,1144
 80088b8:	8013a600 	call	8013a60 <__sprint_r>
 80088bc:	103b7e1e 	bne	r2,zero,80076b8 <__alt_data_end+0xfc0076b8>
 80088c0:	d8c12017 	ldw	r3,1152(sp)
 80088c4:	dc011f17 	ldw	r16,1148(sp)
 80088c8:	dc400404 	addi	r17,sp,16
 80088cc:	003ea406 	br	8008360 <__alt_data_end+0xfc008360>
 80088d0:	b809883a 	mov	r4,r23
 80088d4:	b00b883a 	mov	r5,r22
 80088d8:	d9811e04 	addi	r6,sp,1144
 80088dc:	8013a600 	call	8013a60 <__sprint_r>
 80088e0:	103b751e 	bne	r2,zero,80076b8 <__alt_data_end+0xfc0076b8>
 80088e4:	d8c12017 	ldw	r3,1152(sp)
 80088e8:	da000404 	addi	r8,sp,16
 80088ec:	003c3706 	br	80079cc <__alt_data_end+0xfc0079cc>
 80088f0:	04a5c83a 	sub	r18,zero,r18
 80088f4:	9004c03a 	cmpne	r2,r18,zero
 80088f8:	056bc83a 	sub	r21,zero,r21
 80088fc:	a8abc83a 	sub	r21,r21,r2
 8008900:	04c00b44 	movi	r19,45
 8008904:	dcc12785 	stb	r19,1182(sp)
 8008908:	da413215 	stw	r9,1224(sp)
 800890c:	00800044 	movi	r2,1
 8008910:	9546b03a 	or	r3,r18,r21
 8008914:	003bb106 	br	80077dc <__alt_data_end+0xfc0077dc>
 8008918:	da013f15 	stw	r8,1276(sp)
 800891c:	da413e15 	stw	r9,1272(sp)
 8008920:	800fc8c0 	call	800fc8c <__fpclassifyd>
 8008924:	da013f17 	ldw	r8,1276(sp)
 8008928:	da413e17 	ldw	r9,1272(sp)
 800892c:	1000e526 	beq	r2,zero,8008cc4 <___vfprintf_internal_r+0x1a6c>
 8008930:	04fff7c4 	movi	r19,-33
 8008934:	00bfffc4 	movi	r2,-1
 8008938:	84e6703a 	and	r19,r16,r19
 800893c:	48822926 	beq	r9,r2,80091e4 <___vfprintf_internal_r+0x1f8c>
 8008940:	008011c4 	movi	r2,71
 8008944:	98821626 	beq	r19,r2,80091a0 <___vfprintf_internal_r+0x1f48>
 8008948:	d9013917 	ldw	r4,1252(sp)
 800894c:	e0c04014 	ori	r3,fp,256
 8008950:	d8c12d15 	stw	r3,1204(sp)
 8008954:	20021f16 	blt	r4,zero,80091d4 <___vfprintf_internal_r+0x1f7c>
 8008958:	dc413917 	ldw	r17,1252(sp)
 800895c:	d8012b05 	stb	zero,1196(sp)
 8008960:	00801984 	movi	r2,102
 8008964:	80814d26 	beq	r16,r2,8008e9c <___vfprintf_internal_r+0x1c44>
 8008968:	00801184 	movi	r2,70
 800896c:	80814b26 	beq	r16,r2,8008e9c <___vfprintf_internal_r+0x1c44>
 8008970:	00801144 	movi	r2,69
 8008974:	98821d26 	beq	r19,r2,80091ec <___vfprintf_internal_r+0x1f94>
 8008978:	482b883a 	mov	r21,r9
 800897c:	d8812604 	addi	r2,sp,1176
 8008980:	d8800115 	stw	r2,4(sp)
 8008984:	d9413717 	ldw	r5,1244(sp)
 8008988:	d8812504 	addi	r2,sp,1172
 800898c:	d8800215 	stw	r2,8(sp)
 8008990:	d8812104 	addi	r2,sp,1156
 8008994:	dd400015 	stw	r21,0(sp)
 8008998:	d8800315 	stw	r2,12(sp)
 800899c:	b809883a 	mov	r4,r23
 80089a0:	880d883a 	mov	r6,r17
 80089a4:	01c00084 	movi	r7,2
 80089a8:	da013f15 	stw	r8,1276(sp)
 80089ac:	da413e15 	stw	r9,1272(sp)
 80089b0:	800b0900 	call	800b090 <_dtoa_r>
 80089b4:	d8813115 	stw	r2,1220(sp)
 80089b8:	008019c4 	movi	r2,103
 80089bc:	da013f17 	ldw	r8,1276(sp)
 80089c0:	da413e17 	ldw	r9,1272(sp)
 80089c4:	80800226 	beq	r16,r2,80089d0 <___vfprintf_internal_r+0x1778>
 80089c8:	008011c4 	movi	r2,71
 80089cc:	8081451e 	bne	r16,r2,8008ee4 <___vfprintf_internal_r+0x1c8c>
 80089d0:	e080004c 	andi	r2,fp,1
 80089d4:	10021e26 	beq	r2,zero,8009250 <___vfprintf_internal_r+0x1ff8>
 80089d8:	d8c13117 	ldw	r3,1220(sp)
 80089dc:	1d55883a 	add	r10,r3,r21
 80089e0:	d9013717 	ldw	r4,1244(sp)
 80089e4:	880b883a 	mov	r5,r17
 80089e8:	000d883a 	mov	r6,zero
 80089ec:	000f883a 	mov	r7,zero
 80089f0:	da013f15 	stw	r8,1276(sp)
 80089f4:	da413e15 	stw	r9,1272(sp)
 80089f8:	da813d15 	stw	r10,1268(sp)
 80089fc:	80188440 	call	8018844 <__eqdf2>
 8008a00:	da013f17 	ldw	r8,1276(sp)
 8008a04:	da413e17 	ldw	r9,1272(sp)
 8008a08:	da813d17 	ldw	r10,1268(sp)
 8008a0c:	1001a126 	beq	r2,zero,8009094 <___vfprintf_internal_r+0x1e3c>
 8008a10:	d8812117 	ldw	r2,1156(sp)
 8008a14:	1280062e 	bgeu	r2,r10,8008a30 <___vfprintf_internal_r+0x17d8>
 8008a18:	01000c04 	movi	r4,48
 8008a1c:	10c00044 	addi	r3,r2,1
 8008a20:	d8c12115 	stw	r3,1156(sp)
 8008a24:	11000005 	stb	r4,0(r2)
 8008a28:	d8812117 	ldw	r2,1156(sp)
 8008a2c:	12bffb36 	bltu	r2,r10,8008a1c <__alt_data_end+0xfc008a1c>
 8008a30:	d8c13117 	ldw	r3,1220(sp)
 8008a34:	10c5c83a 	sub	r2,r2,r3
 8008a38:	d8813315 	stw	r2,1228(sp)
 8008a3c:	008011c4 	movi	r2,71
 8008a40:	98818926 	beq	r19,r2,8009068 <___vfprintf_internal_r+0x1e10>
 8008a44:	00801944 	movi	r2,101
 8008a48:	14023c0e 	bge	r2,r16,800933c <___vfprintf_internal_r+0x20e4>
 8008a4c:	d8c12617 	ldw	r3,1176(sp)
 8008a50:	00801984 	movi	r2,102
 8008a54:	d8c13415 	stw	r3,1232(sp)
 8008a58:	8081ef26 	beq	r16,r2,8009218 <___vfprintf_internal_r+0x1fc0>
 8008a5c:	d8c13417 	ldw	r3,1232(sp)
 8008a60:	d9013317 	ldw	r4,1228(sp)
 8008a64:	1901e316 	blt	r3,r4,80091f4 <___vfprintf_internal_r+0x1f9c>
 8008a68:	e080004c 	andi	r2,fp,1
 8008a6c:	1001f426 	beq	r2,zero,8009240 <___vfprintf_internal_r+0x1fe8>
 8008a70:	d8c13417 	ldw	r3,1232(sp)
 8008a74:	1c400044 	addi	r17,r3,1
 8008a78:	8839883a 	mov	fp,r17
 8008a7c:	8801e416 	blt	r17,zero,8009210 <___vfprintf_internal_r+0x1fb8>
 8008a80:	dd412b07 	ldb	r21,1196(sp)
 8008a84:	a801701e 	bne	r21,zero,8009048 <___vfprintf_internal_r+0x1df0>
 8008a88:	df012b15 	stw	fp,1196(sp)
 8008a8c:	dcc12783 	ldbu	r19,1182(sp)
 8008a90:	df012d17 	ldw	fp,1204(sp)
 8008a94:	d8013215 	stw	zero,1224(sp)
 8008a98:	dc812d15 	stw	r18,1204(sp)
 8008a9c:	003b6e06 	br	8007858 <__alt_data_end+0xfc007858>
 8008aa0:	e080040c 	andi	r2,fp,16
 8008aa4:	1000b51e 	bne	r2,zero,8008d7c <___vfprintf_internal_r+0x1b24>
 8008aa8:	e080100c 	andi	r2,fp,64
 8008aac:	10015b26 	beq	r2,zero,800901c <___vfprintf_internal_r+0x1dc4>
 8008ab0:	d9012d17 	ldw	r4,1204(sp)
 8008ab4:	d9412f17 	ldw	r5,1212(sp)
 8008ab8:	20800017 	ldw	r2,0(r4)
 8008abc:	21000104 	addi	r4,r4,4
 8008ac0:	d9012d15 	stw	r4,1204(sp)
 8008ac4:	1140000d 	sth	r5,0(r2)
 8008ac8:	003a2006 	br	800734c <__alt_data_end+0xfc00734c>
 8008acc:	e0c0100c 	andi	r3,fp,64
 8008ad0:	1800a226 	beq	r3,zero,8008d5c <___vfprintf_internal_r+0x1b04>
 8008ad4:	d8c12d17 	ldw	r3,1204(sp)
 8008ad8:	1480000b 	ldhu	r18,0(r2)
 8008adc:	002b883a 	mov	r21,zero
 8008ae0:	18c00104 	addi	r3,r3,4
 8008ae4:	d8c12d15 	stw	r3,1204(sp)
 8008ae8:	0005883a 	mov	r2,zero
 8008aec:	9007883a 	mov	r3,r18
 8008af0:	003c6906 	br	8007c98 <__alt_data_end+0xfc007c98>
 8008af4:	e0c0100c 	andi	r3,fp,64
 8008af8:	18009026 	beq	r3,zero,8008d3c <___vfprintf_internal_r+0x1ae4>
 8008afc:	1480000b 	ldhu	r18,0(r2)
 8008b00:	d8812d17 	ldw	r2,1204(sp)
 8008b04:	002b883a 	mov	r21,zero
 8008b08:	9007883a 	mov	r3,r18
 8008b0c:	10800104 	addi	r2,r2,4
 8008b10:	d8812d15 	stw	r2,1204(sp)
 8008b14:	00800044 	movi	r2,1
 8008b18:	003c5f06 	br	8007c98 <__alt_data_end+0xfc007c98>
 8008b1c:	e0c0100c 	andi	r3,fp,64
 8008b20:	18008026 	beq	r3,zero,8008d24 <___vfprintf_internal_r+0x1acc>
 8008b24:	d9012d17 	ldw	r4,1204(sp)
 8008b28:	1480000b 	ldhu	r18,0(r2)
 8008b2c:	002b883a 	mov	r21,zero
 8008b30:	21000104 	addi	r4,r4,4
 8008b34:	d9012d15 	stw	r4,1204(sp)
 8008b38:	003c7906 	br	8007d20 <__alt_data_end+0xfc007d20>
 8008b3c:	e080100c 	andi	r2,fp,64
 8008b40:	10007126 	beq	r2,zero,8008d08 <___vfprintf_internal_r+0x1ab0>
 8008b44:	1c80000f 	ldh	r18,0(r3)
 8008b48:	d8812d17 	ldw	r2,1204(sp)
 8008b4c:	902bd7fa 	srai	r21,r18,31
 8008b50:	10800104 	addi	r2,r2,4
 8008b54:	d8812d15 	stw	r2,1204(sp)
 8008b58:	a805883a 	mov	r2,r21
 8008b5c:	003b1a06 	br	80077c8 <__alt_data_end+0xfc0077c8>
 8008b60:	e4000007 	ldb	r16,0(fp)
 8008b64:	e005883a 	mov	r2,fp
 8008b68:	003a2306 	br	80073f8 <__alt_data_end+0xfc0073f8>
 8008b6c:	00800084 	movi	r2,2
 8008b70:	003c4906 	br	8007c98 <__alt_data_end+0xfc007c98>
 8008b74:	010200b4 	movhi	r4,2050
 8008b78:	2137ec84 	addi	r4,r4,-8270
 8008b7c:	d9012c15 	stw	r4,1200(sp)
 8008b80:	d9012c17 	ldw	r4,1200(sp)
 8008b84:	1c47883a 	add	r3,r3,r17
 8008b88:	10800044 	addi	r2,r2,1
 8008b8c:	41000015 	stw	r4,0(r8)
 8008b90:	44400115 	stw	r17,4(r8)
 8008b94:	d8c12015 	stw	r3,1152(sp)
 8008b98:	d8811f15 	stw	r2,1148(sp)
 8008b9c:	010001c4 	movi	r4,7
 8008ba0:	20becc16 	blt	r4,r2,80086d4 <__alt_data_end+0xfc0086d4>
 8008ba4:	42000204 	addi	r8,r8,8
 8008ba8:	003ed106 	br	80086f0 <__alt_data_end+0xfc0086f0>
 8008bac:	010200b4 	movhi	r4,2050
 8008bb0:	2137ec84 	addi	r4,r4,-8270
 8008bb4:	d9012c15 	stw	r4,1200(sp)
 8008bb8:	003ba306 	br	8007a48 <__alt_data_end+0xfc007a48>
 8008bbc:	b809883a 	mov	r4,r23
 8008bc0:	b00b883a 	mov	r5,r22
 8008bc4:	d9811e04 	addi	r6,sp,1144
 8008bc8:	8013a600 	call	8013a60 <__sprint_r>
 8008bcc:	103aba1e 	bne	r2,zero,80076b8 <__alt_data_end+0xfc0076b8>
 8008bd0:	d8c12017 	ldw	r3,1152(sp)
 8008bd4:	da000404 	addi	r8,sp,16
 8008bd8:	003d6c06 	br	800818c <__alt_data_end+0xfc00818c>
 8008bdc:	d8811f17 	ldw	r2,1148(sp)
 8008be0:	014200b4 	movhi	r5,2050
 8008be4:	01000044 	movi	r4,1
 8008be8:	18c00044 	addi	r3,r3,1
 8008bec:	10800044 	addi	r2,r2,1
 8008bf0:	2977e404 	addi	r5,r5,-8304
 8008bf4:	41000115 	stw	r4,4(r8)
 8008bf8:	41400015 	stw	r5,0(r8)
 8008bfc:	d8c12015 	stw	r3,1152(sp)
 8008c00:	d8811f15 	stw	r2,1148(sp)
 8008c04:	010001c4 	movi	r4,7
 8008c08:	20806716 	blt	r4,r2,8008da8 <___vfprintf_internal_r+0x1b50>
 8008c0c:	42000204 	addi	r8,r8,8
 8008c10:	8000041e 	bne	r16,zero,8008c24 <___vfprintf_internal_r+0x19cc>
 8008c14:	d8813317 	ldw	r2,1228(sp)
 8008c18:	1000021e 	bne	r2,zero,8008c24 <___vfprintf_internal_r+0x19cc>
 8008c1c:	e080004c 	andi	r2,fp,1
 8008c20:	103ba026 	beq	r2,zero,8007aa4 <__alt_data_end+0xfc007aa4>
 8008c24:	d9013817 	ldw	r4,1248(sp)
 8008c28:	d8811f17 	ldw	r2,1148(sp)
 8008c2c:	d9413517 	ldw	r5,1236(sp)
 8008c30:	1907883a 	add	r3,r3,r4
 8008c34:	10800044 	addi	r2,r2,1
 8008c38:	41000115 	stw	r4,4(r8)
 8008c3c:	41400015 	stw	r5,0(r8)
 8008c40:	d8c12015 	stw	r3,1152(sp)
 8008c44:	d8811f15 	stw	r2,1148(sp)
 8008c48:	010001c4 	movi	r4,7
 8008c4c:	20815716 	blt	r4,r2,80091ac <___vfprintf_internal_r+0x1f54>
 8008c50:	42000204 	addi	r8,r8,8
 8008c54:	0421c83a 	sub	r16,zero,r16
 8008c58:	0400810e 	bge	zero,r16,8008e60 <___vfprintf_internal_r+0x1c08>
 8008c5c:	04400404 	movi	r17,16
 8008c60:	8c00bd0e 	bge	r17,r16,8008f58 <___vfprintf_internal_r+0x1d00>
 8008c64:	014200b4 	movhi	r5,2050
 8008c68:	2977ec84 	addi	r5,r5,-8270
 8008c6c:	d9412c15 	stw	r5,1200(sp)
 8008c70:	04c001c4 	movi	r19,7
 8008c74:	00000306 	br	8008c84 <___vfprintf_internal_r+0x1a2c>
 8008c78:	42000204 	addi	r8,r8,8
 8008c7c:	843ffc04 	addi	r16,r16,-16
 8008c80:	8c00b80e 	bge	r17,r16,8008f64 <___vfprintf_internal_r+0x1d0c>
 8008c84:	18c00404 	addi	r3,r3,16
 8008c88:	10800044 	addi	r2,r2,1
 8008c8c:	45000015 	stw	r20,0(r8)
 8008c90:	44400115 	stw	r17,4(r8)
 8008c94:	d8c12015 	stw	r3,1152(sp)
 8008c98:	d8811f15 	stw	r2,1148(sp)
 8008c9c:	98bff60e 	bge	r19,r2,8008c78 <__alt_data_end+0xfc008c78>
 8008ca0:	b809883a 	mov	r4,r23
 8008ca4:	b00b883a 	mov	r5,r22
 8008ca8:	d9811e04 	addi	r6,sp,1144
 8008cac:	8013a600 	call	8013a60 <__sprint_r>
 8008cb0:	103a811e 	bne	r2,zero,80076b8 <__alt_data_end+0xfc0076b8>
 8008cb4:	d8c12017 	ldw	r3,1152(sp)
 8008cb8:	d8811f17 	ldw	r2,1148(sp)
 8008cbc:	da000404 	addi	r8,sp,16
 8008cc0:	003fee06 	br	8008c7c <__alt_data_end+0xfc008c7c>
 8008cc4:	008011c4 	movi	r2,71
 8008cc8:	1400db16 	blt	r2,r16,8009038 <___vfprintf_internal_r+0x1de0>
 8008ccc:	010200b4 	movhi	r4,2050
 8008cd0:	2137d604 	addi	r4,r4,-8360
 8008cd4:	d9013115 	stw	r4,1220(sp)
 8008cd8:	00c000c4 	movi	r3,3
 8008cdc:	00bfdfc4 	movi	r2,-129
 8008ce0:	d8c12b15 	stw	r3,1196(sp)
 8008ce4:	e0b8703a 	and	fp,fp,r2
 8008ce8:	dcc12783 	ldbu	r19,1182(sp)
 8008cec:	dc812d15 	stw	r18,1204(sp)
 8008cf0:	1823883a 	mov	r17,r3
 8008cf4:	d8013215 	stw	zero,1224(sp)
 8008cf8:	d8013415 	stw	zero,1232(sp)
 8008cfc:	003ad606 	br	8007858 <__alt_data_end+0xfc007858>
 8008d00:	4823883a 	mov	r17,r9
 8008d04:	003cc906 	br	800802c <__alt_data_end+0xfc00802c>
 8008d08:	1c800017 	ldw	r18,0(r3)
 8008d0c:	d8c12d17 	ldw	r3,1204(sp)
 8008d10:	902bd7fa 	srai	r21,r18,31
 8008d14:	18c00104 	addi	r3,r3,4
 8008d18:	d8c12d15 	stw	r3,1204(sp)
 8008d1c:	a805883a 	mov	r2,r21
 8008d20:	003aa906 	br	80077c8 <__alt_data_end+0xfc0077c8>
 8008d24:	d9412d17 	ldw	r5,1204(sp)
 8008d28:	14800017 	ldw	r18,0(r2)
 8008d2c:	002b883a 	mov	r21,zero
 8008d30:	29400104 	addi	r5,r5,4
 8008d34:	d9412d15 	stw	r5,1204(sp)
 8008d38:	003bf906 	br	8007d20 <__alt_data_end+0xfc007d20>
 8008d3c:	d8c12d17 	ldw	r3,1204(sp)
 8008d40:	14800017 	ldw	r18,0(r2)
 8008d44:	002b883a 	mov	r21,zero
 8008d48:	18c00104 	addi	r3,r3,4
 8008d4c:	d8c12d15 	stw	r3,1204(sp)
 8008d50:	00800044 	movi	r2,1
 8008d54:	9007883a 	mov	r3,r18
 8008d58:	003bcf06 	br	8007c98 <__alt_data_end+0xfc007c98>
 8008d5c:	d9012d17 	ldw	r4,1204(sp)
 8008d60:	14800017 	ldw	r18,0(r2)
 8008d64:	002b883a 	mov	r21,zero
 8008d68:	21000104 	addi	r4,r4,4
 8008d6c:	d9012d15 	stw	r4,1204(sp)
 8008d70:	0005883a 	mov	r2,zero
 8008d74:	9007883a 	mov	r3,r18
 8008d78:	003bc706 	br	8007c98 <__alt_data_end+0xfc007c98>
 8008d7c:	d9412d17 	ldw	r5,1204(sp)
 8008d80:	d8c12f17 	ldw	r3,1212(sp)
 8008d84:	28800017 	ldw	r2,0(r5)
 8008d88:	29400104 	addi	r5,r5,4
 8008d8c:	d9412d15 	stw	r5,1204(sp)
 8008d90:	10c00015 	stw	r3,0(r2)
 8008d94:	00396d06 	br	800734c <__alt_data_end+0xfc00734c>
 8008d98:	010200b4 	movhi	r4,2050
 8008d9c:	2137d404 	addi	r4,r4,-8368
 8008da0:	d9013115 	stw	r4,1220(sp)
 8008da4:	003ba206 	br	8007c30 <__alt_data_end+0xfc007c30>
 8008da8:	b809883a 	mov	r4,r23
 8008dac:	b00b883a 	mov	r5,r22
 8008db0:	d9811e04 	addi	r6,sp,1144
 8008db4:	8013a600 	call	8013a60 <__sprint_r>
 8008db8:	103a3f1e 	bne	r2,zero,80076b8 <__alt_data_end+0xfc0076b8>
 8008dbc:	dc012617 	ldw	r16,1176(sp)
 8008dc0:	d8c12017 	ldw	r3,1152(sp)
 8008dc4:	da000404 	addi	r8,sp,16
 8008dc8:	003f9106 	br	8008c10 <__alt_data_end+0xfc008c10>
 8008dcc:	e0800044 	addi	r2,fp,1
 8008dd0:	9cc00814 	ori	r19,r19,32
 8008dd4:	e4000047 	ldb	r16,1(fp)
 8008dd8:	00398706 	br	80073f8 <__alt_data_end+0xfc0073f8>
 8008ddc:	d8812e17 	ldw	r2,1208(sp)
 8008de0:	d8c12d15 	stw	r3,1204(sp)
 8008de4:	0085c83a 	sub	r2,zero,r2
 8008de8:	d8812e15 	stw	r2,1208(sp)
 8008dec:	e005883a 	mov	r2,fp
 8008df0:	003a3a06 	br	80076dc <__alt_data_end+0xfc0076dc>
 8008df4:	b809883a 	mov	r4,r23
 8008df8:	b00b883a 	mov	r5,r22
 8008dfc:	d9811e04 	addi	r6,sp,1144
 8008e00:	8013a600 	call	8013a60 <__sprint_r>
 8008e04:	103a2c1e 	bne	r2,zero,80076b8 <__alt_data_end+0xfc0076b8>
 8008e08:	d8c12017 	ldw	r3,1152(sp)
 8008e0c:	da000404 	addi	r8,sp,16
 8008e10:	003cf006 	br	80081d4 <__alt_data_end+0xfc0081d4>
 8008e14:	d8c12817 	ldw	r3,1184(sp)
 8008e18:	d9013117 	ldw	r4,1220(sp)
 8008e1c:	1923c83a 	sub	r17,r3,r4
 8008e20:	003a8806 	br	8007844 <__alt_data_end+0xfc007844>
 8008e24:	da013f15 	stw	r8,1276(sp)
 8008e28:	80049680 	call	8004968 <strlen>
 8008e2c:	1023883a 	mov	r17,r2
 8008e30:	da013f17 	ldw	r8,1276(sp)
 8008e34:	883c7f0e 	bge	r17,zero,8008034 <__alt_data_end+0xfc008034>
 8008e38:	0005883a 	mov	r2,zero
 8008e3c:	003c7d06 	br	8008034 <__alt_data_end+0xfc008034>
 8008e40:	b809883a 	mov	r4,r23
 8008e44:	b00b883a 	mov	r5,r22
 8008e48:	d9811e04 	addi	r6,sp,1144
 8008e4c:	8013a600 	call	8013a60 <__sprint_r>
 8008e50:	103a191e 	bne	r2,zero,80076b8 <__alt_data_end+0xfc0076b8>
 8008e54:	d8c12017 	ldw	r3,1152(sp)
 8008e58:	d8811f17 	ldw	r2,1148(sp)
 8008e5c:	da000404 	addi	r8,sp,16
 8008e60:	d9413317 	ldw	r5,1228(sp)
 8008e64:	d9013117 	ldw	r4,1220(sp)
 8008e68:	10800044 	addi	r2,r2,1
 8008e6c:	28c7883a 	add	r3,r5,r3
 8008e70:	41000015 	stw	r4,0(r8)
 8008e74:	41400115 	stw	r5,4(r8)
 8008e78:	d8c12015 	stw	r3,1152(sp)
 8008e7c:	d8811f15 	stw	r2,1148(sp)
 8008e80:	010001c4 	movi	r4,7
 8008e84:	20bb060e 	bge	r4,r2,8007aa0 <__alt_data_end+0xfc007aa0>
 8008e88:	003d6206 	br	8008414 <__alt_data_end+0xfc008414>
 8008e8c:	010200b4 	movhi	r4,2050
 8008e90:	2137f084 	addi	r4,r4,-8254
 8008e94:	d9013615 	stw	r4,1240(sp)
 8008e98:	003aa306 	br	8007928 <__alt_data_end+0xfc007928>
 8008e9c:	d8812604 	addi	r2,sp,1176
 8008ea0:	d8800115 	stw	r2,4(sp)
 8008ea4:	d9413717 	ldw	r5,1244(sp)
 8008ea8:	d8812504 	addi	r2,sp,1172
 8008eac:	d8800215 	stw	r2,8(sp)
 8008eb0:	d8812104 	addi	r2,sp,1156
 8008eb4:	da400015 	stw	r9,0(sp)
 8008eb8:	d8800315 	stw	r2,12(sp)
 8008ebc:	b809883a 	mov	r4,r23
 8008ec0:	880d883a 	mov	r6,r17
 8008ec4:	01c000c4 	movi	r7,3
 8008ec8:	da013f15 	stw	r8,1276(sp)
 8008ecc:	da413e15 	stw	r9,1272(sp)
 8008ed0:	800b0900 	call	800b090 <_dtoa_r>
 8008ed4:	da413e17 	ldw	r9,1272(sp)
 8008ed8:	da013f17 	ldw	r8,1276(sp)
 8008edc:	d8813115 	stw	r2,1220(sp)
 8008ee0:	482b883a 	mov	r21,r9
 8008ee4:	d8c13117 	ldw	r3,1220(sp)
 8008ee8:	00801184 	movi	r2,70
 8008eec:	1d55883a 	add	r10,r3,r21
 8008ef0:	98bebb1e 	bne	r19,r2,80089e0 <__alt_data_end+0xfc0089e0>
 8008ef4:	19000007 	ldb	r4,0(r3)
 8008ef8:	00800c04 	movi	r2,48
 8008efc:	2080dd26 	beq	r4,r2,8009274 <___vfprintf_internal_r+0x201c>
 8008f00:	d8c12617 	ldw	r3,1176(sp)
 8008f04:	50d5883a 	add	r10,r10,r3
 8008f08:	003eb506 	br	80089e0 <__alt_data_end+0xfc0089e0>
 8008f0c:	0023883a 	mov	r17,zero
 8008f10:	003d9b06 	br	8008580 <__alt_data_end+0xfc008580>
 8008f14:	b809883a 	mov	r4,r23
 8008f18:	b00b883a 	mov	r5,r22
 8008f1c:	d9811e04 	addi	r6,sp,1144
 8008f20:	8013a600 	call	8013a60 <__sprint_r>
 8008f24:	1039e41e 	bne	r2,zero,80076b8 <__alt_data_end+0xfc0076b8>
 8008f28:	d8c12017 	ldw	r3,1152(sp)
 8008f2c:	da000404 	addi	r8,sp,16
 8008f30:	003d9206 	br	800857c <__alt_data_end+0xfc00857c>
 8008f34:	b809883a 	mov	r4,r23
 8008f38:	b00b883a 	mov	r5,r22
 8008f3c:	d9811e04 	addi	r6,sp,1144
 8008f40:	8013a600 	call	8013a60 <__sprint_r>
 8008f44:	1039dc1e 	bne	r2,zero,80076b8 <__alt_data_end+0xfc0076b8>
 8008f48:	d8812617 	ldw	r2,1176(sp)
 8008f4c:	d8c12017 	ldw	r3,1152(sp)
 8008f50:	da000404 	addi	r8,sp,16
 8008f54:	003dfb06 	br	8008744 <__alt_data_end+0xfc008744>
 8008f58:	010200b4 	movhi	r4,2050
 8008f5c:	2137ec84 	addi	r4,r4,-8270
 8008f60:	d9012c15 	stw	r4,1200(sp)
 8008f64:	d9012c17 	ldw	r4,1200(sp)
 8008f68:	1c07883a 	add	r3,r3,r16
 8008f6c:	10800044 	addi	r2,r2,1
 8008f70:	41000015 	stw	r4,0(r8)
 8008f74:	44000115 	stw	r16,4(r8)
 8008f78:	d8c12015 	stw	r3,1152(sp)
 8008f7c:	d8811f15 	stw	r2,1148(sp)
 8008f80:	010001c4 	movi	r4,7
 8008f84:	20bfae16 	blt	r4,r2,8008e40 <__alt_data_end+0xfc008e40>
 8008f88:	42000204 	addi	r8,r8,8
 8008f8c:	003fb406 	br	8008e60 <__alt_data_end+0xfc008e60>
 8008f90:	0021883a 	mov	r16,zero
 8008f94:	003dfd06 	br	800878c <__alt_data_end+0xfc00878c>
 8008f98:	014200b4 	movhi	r5,2050
 8008f9c:	2977f084 	addi	r5,r5,-8254
 8008fa0:	d9413615 	stw	r5,1240(sp)
 8008fa4:	003ae306 	br	8007b34 <__alt_data_end+0xfc007b34>
 8008fa8:	b809883a 	mov	r4,r23
 8008fac:	b00b883a 	mov	r5,r22
 8008fb0:	d9811e04 	addi	r6,sp,1144
 8008fb4:	8013a600 	call	8013a60 <__sprint_r>
 8008fb8:	1039bf1e 	bne	r2,zero,80076b8 <__alt_data_end+0xfc0076b8>
 8008fbc:	d8812617 	ldw	r2,1176(sp)
 8008fc0:	d9413317 	ldw	r5,1228(sp)
 8008fc4:	d8c12017 	ldw	r3,1152(sp)
 8008fc8:	da000404 	addi	r8,sp,16
 8008fcc:	2885c83a 	sub	r2,r5,r2
 8008fd0:	003ded06 	br	8008788 <__alt_data_end+0xfc008788>
 8008fd4:	00800184 	movi	r2,6
 8008fd8:	1240012e 	bgeu	r2,r9,8008fe0 <___vfprintf_internal_r+0x1d88>
 8008fdc:	1013883a 	mov	r9,r2
 8008fe0:	4823883a 	mov	r17,r9
 8008fe4:	4805883a 	mov	r2,r9
 8008fe8:	4800b216 	blt	r9,zero,80092b4 <___vfprintf_internal_r+0x205c>
 8008fec:	014200b4 	movhi	r5,2050
 8008ff0:	2977e204 	addi	r5,r5,-8312
 8008ff4:	d8812b15 	stw	r2,1196(sp)
 8008ff8:	dc812d15 	stw	r18,1204(sp)
 8008ffc:	d8013215 	stw	zero,1224(sp)
 8009000:	d8013415 	stw	zero,1232(sp)
 8009004:	d9413115 	stw	r5,1220(sp)
 8009008:	0005883a 	mov	r2,zero
 800900c:	003a1906 	br	8007874 <__alt_data_end+0xfc007874>
 8009010:	04c00b44 	movi	r19,45
 8009014:	dcc12785 	stb	r19,1182(sp)
 8009018:	003b0006 	br	8007c1c <__alt_data_end+0xfc007c1c>
 800901c:	d8c12d17 	ldw	r3,1204(sp)
 8009020:	d9012f17 	ldw	r4,1212(sp)
 8009024:	18800017 	ldw	r2,0(r3)
 8009028:	18c00104 	addi	r3,r3,4
 800902c:	d8c12d15 	stw	r3,1204(sp)
 8009030:	11000015 	stw	r4,0(r2)
 8009034:	0038c506 	br	800734c <__alt_data_end+0xfc00734c>
 8009038:	014200b4 	movhi	r5,2050
 800903c:	2977d704 	addi	r5,r5,-8356
 8009040:	d9413115 	stw	r5,1220(sp)
 8009044:	003f2406 	br	8008cd8 <__alt_data_end+0xfc008cd8>
 8009048:	00800b44 	movi	r2,45
 800904c:	d8812785 	stb	r2,1182(sp)
 8009050:	df012b15 	stw	fp,1196(sp)
 8009054:	d8013215 	stw	zero,1224(sp)
 8009058:	df012d17 	ldw	fp,1204(sp)
 800905c:	00800b44 	movi	r2,45
 8009060:	dc812d15 	stw	r18,1204(sp)
 8009064:	003a0006 	br	8007868 <__alt_data_end+0xfc007868>
 8009068:	d8c12617 	ldw	r3,1176(sp)
 800906c:	00bfff44 	movi	r2,-3
 8009070:	18800a16 	blt	r3,r2,800909c <___vfprintf_internal_r+0x1e44>
 8009074:	48c00916 	blt	r9,r3,800909c <___vfprintf_internal_r+0x1e44>
 8009078:	d8c13415 	stw	r3,1232(sp)
 800907c:	040019c4 	movi	r16,103
 8009080:	003e7606 	br	8008a5c <__alt_data_end+0xfc008a5c>
 8009084:	010200b4 	movhi	r4,2050
 8009088:	2137ec84 	addi	r4,r4,-8270
 800908c:	d9012c15 	stw	r4,1200(sp)
 8009090:	003c8e06 	br	80082cc <__alt_data_end+0xfc0082cc>
 8009094:	5005883a 	mov	r2,r10
 8009098:	003e6506 	br	8008a30 <__alt_data_end+0xfc008a30>
 800909c:	843fff84 	addi	r16,r16,-2
 80090a0:	1d7fffc4 	addi	r21,r3,-1
 80090a4:	dd412615 	stw	r21,1176(sp)
 80090a8:	dc0122c5 	stb	r16,1163(sp)
 80090ac:	a8009216 	blt	r21,zero,80092f8 <___vfprintf_internal_r+0x20a0>
 80090b0:	00800ac4 	movi	r2,43
 80090b4:	d8812305 	stb	r2,1164(sp)
 80090b8:	00800244 	movi	r2,9
 80090bc:	1540660e 	bge	r2,r21,8009258 <___vfprintf_internal_r+0x2000>
 80090c0:	dcc122c4 	addi	r19,sp,1163
 80090c4:	dc012c15 	stw	r16,1200(sp)
 80090c8:	4023883a 	mov	r17,r8
 80090cc:	9821883a 	mov	r16,r19
 80090d0:	a809883a 	mov	r4,r21
 80090d4:	01400284 	movi	r5,10
 80090d8:	80173d80 	call	80173d8 <__modsi3>
 80090dc:	10800c04 	addi	r2,r2,48
 80090e0:	843fffc4 	addi	r16,r16,-1
 80090e4:	a809883a 	mov	r4,r21
 80090e8:	01400284 	movi	r5,10
 80090ec:	80800005 	stb	r2,0(r16)
 80090f0:	80173840 	call	8017384 <__divsi3>
 80090f4:	01000244 	movi	r4,9
 80090f8:	102b883a 	mov	r21,r2
 80090fc:	20bff416 	blt	r4,r2,80090d0 <__alt_data_end+0xfc0090d0>
 8009100:	8811883a 	mov	r8,r17
 8009104:	10800c04 	addi	r2,r2,48
 8009108:	8023883a 	mov	r17,r16
 800910c:	897fffc4 	addi	r5,r17,-1
 8009110:	88bfffc5 	stb	r2,-1(r17)
 8009114:	dc012c17 	ldw	r16,1200(sp)
 8009118:	2cc08a2e 	bgeu	r5,r19,8009344 <___vfprintf_internal_r+0x20ec>
 800911c:	d9812384 	addi	r6,sp,1166
 8009120:	344dc83a 	sub	r6,r6,r17
 8009124:	d9012344 	addi	r4,sp,1165
 8009128:	998d883a 	add	r6,r19,r6
 800912c:	00000106 	br	8009134 <___vfprintf_internal_r+0x1edc>
 8009130:	28800003 	ldbu	r2,0(r5)
 8009134:	20800005 	stb	r2,0(r4)
 8009138:	21000044 	addi	r4,r4,1
 800913c:	29400044 	addi	r5,r5,1
 8009140:	21bffb1e 	bne	r4,r6,8009130 <__alt_data_end+0xfc009130>
 8009144:	d8812304 	addi	r2,sp,1164
 8009148:	1445c83a 	sub	r2,r2,r17
 800914c:	d9412344 	addi	r5,sp,1165
 8009150:	2885883a 	add	r2,r5,r2
 8009154:	14e7c83a 	sub	r19,r2,r19
 8009158:	d8813317 	ldw	r2,1228(sp)
 800915c:	d8c13317 	ldw	r3,1228(sp)
 8009160:	dcc13a15 	stw	r19,1256(sp)
 8009164:	14e3883a 	add	r17,r2,r19
 8009168:	00800044 	movi	r2,1
 800916c:	10c0550e 	bge	r2,r3,80092c4 <___vfprintf_internal_r+0x206c>
 8009170:	8c400044 	addi	r17,r17,1
 8009174:	8839883a 	mov	fp,r17
 8009178:	88005016 	blt	r17,zero,80092bc <___vfprintf_internal_r+0x2064>
 800917c:	d8013415 	stw	zero,1232(sp)
 8009180:	003e3f06 	br	8008a80 <__alt_data_end+0xfc008a80>
 8009184:	da412b15 	stw	r9,1196(sp)
 8009188:	dcc12783 	ldbu	r19,1182(sp)
 800918c:	4823883a 	mov	r17,r9
 8009190:	dc812d15 	stw	r18,1204(sp)
 8009194:	d8013215 	stw	zero,1224(sp)
 8009198:	d8013415 	stw	zero,1232(sp)
 800919c:	0039ae06 	br	8007858 <__alt_data_end+0xfc007858>
 80091a0:	483de91e 	bne	r9,zero,8008948 <__alt_data_end+0xfc008948>
 80091a4:	8813883a 	mov	r9,r17
 80091a8:	003de706 	br	8008948 <__alt_data_end+0xfc008948>
 80091ac:	b809883a 	mov	r4,r23
 80091b0:	b00b883a 	mov	r5,r22
 80091b4:	d9811e04 	addi	r6,sp,1144
 80091b8:	8013a600 	call	8013a60 <__sprint_r>
 80091bc:	10393e1e 	bne	r2,zero,80076b8 <__alt_data_end+0xfc0076b8>
 80091c0:	dc012617 	ldw	r16,1176(sp)
 80091c4:	d8c12017 	ldw	r3,1152(sp)
 80091c8:	d8811f17 	ldw	r2,1148(sp)
 80091cc:	da000404 	addi	r8,sp,16
 80091d0:	003ea006 	br	8008c54 <__alt_data_end+0xfc008c54>
 80091d4:	00c00b44 	movi	r3,45
 80091d8:	2460003c 	xorhi	r17,r4,32768
 80091dc:	d8c12b05 	stb	r3,1196(sp)
 80091e0:	003ddf06 	br	8008960 <__alt_data_end+0xfc008960>
 80091e4:	02400184 	movi	r9,6
 80091e8:	003dd706 	br	8008948 <__alt_data_end+0xfc008948>
 80091ec:	4d400044 	addi	r21,r9,1
 80091f0:	003de206 	br	800897c <__alt_data_end+0xfc00897c>
 80091f4:	d8c13417 	ldw	r3,1232(sp)
 80091f8:	00c0490e 	bge	zero,r3,8009320 <___vfprintf_internal_r+0x20c8>
 80091fc:	04400044 	movi	r17,1
 8009200:	d9013317 	ldw	r4,1228(sp)
 8009204:	8923883a 	add	r17,r17,r4
 8009208:	8839883a 	mov	fp,r17
 800920c:	883e1c0e 	bge	r17,zero,8008a80 <__alt_data_end+0xfc008a80>
 8009210:	0039883a 	mov	fp,zero
 8009214:	003e1a06 	br	8008a80 <__alt_data_end+0xfc008a80>
 8009218:	00c03b0e 	bge	zero,r3,8009308 <___vfprintf_internal_r+0x20b0>
 800921c:	4800021e 	bne	r9,zero,8009228 <___vfprintf_internal_r+0x1fd0>
 8009220:	e080004c 	andi	r2,fp,1
 8009224:	10000626 	beq	r2,zero,8009240 <___vfprintf_internal_r+0x1fe8>
 8009228:	d8c13417 	ldw	r3,1232(sp)
 800922c:	4a400044 	addi	r9,r9,1
 8009230:	1a63883a 	add	r17,r3,r9
 8009234:	8839883a 	mov	fp,r17
 8009238:	883e110e 	bge	r17,zero,8008a80 <__alt_data_end+0xfc008a80>
 800923c:	003ff406 	br	8009210 <__alt_data_end+0xfc009210>
 8009240:	1839883a 	mov	fp,r3
 8009244:	18004116 	blt	r3,zero,800934c <___vfprintf_internal_r+0x20f4>
 8009248:	dc413417 	ldw	r17,1232(sp)
 800924c:	003e0c06 	br	8008a80 <__alt_data_end+0xfc008a80>
 8009250:	d8812117 	ldw	r2,1156(sp)
 8009254:	003df606 	br	8008a30 <__alt_data_end+0xfc008a30>
 8009258:	00800c04 	movi	r2,48
 800925c:	a8c00c04 	addi	r3,r21,48
 8009260:	d8812345 	stb	r2,1165(sp)
 8009264:	d8c12385 	stb	r3,1166(sp)
 8009268:	d88123c4 	addi	r2,sp,1167
 800926c:	dcc122c4 	addi	r19,sp,1163
 8009270:	003fb806 	br	8009154 <__alt_data_end+0xfc009154>
 8009274:	d9013717 	ldw	r4,1244(sp)
 8009278:	880b883a 	mov	r5,r17
 800927c:	000d883a 	mov	r6,zero
 8009280:	000f883a 	mov	r7,zero
 8009284:	da013f15 	stw	r8,1276(sp)
 8009288:	da413e15 	stw	r9,1272(sp)
 800928c:	da813d15 	stw	r10,1268(sp)
 8009290:	80188440 	call	8018844 <__eqdf2>
 8009294:	da013f17 	ldw	r8,1276(sp)
 8009298:	da413e17 	ldw	r9,1272(sp)
 800929c:	da813d17 	ldw	r10,1268(sp)
 80092a0:	103f1726 	beq	r2,zero,8008f00 <__alt_data_end+0xfc008f00>
 80092a4:	00800044 	movi	r2,1
 80092a8:	1547c83a 	sub	r3,r2,r21
 80092ac:	d8c12615 	stw	r3,1176(sp)
 80092b0:	003f1406 	br	8008f04 <__alt_data_end+0xfc008f04>
 80092b4:	0005883a 	mov	r2,zero
 80092b8:	003f4c06 	br	8008fec <__alt_data_end+0xfc008fec>
 80092bc:	0039883a 	mov	fp,zero
 80092c0:	003fae06 	br	800917c <__alt_data_end+0xfc00917c>
 80092c4:	e084703a 	and	r2,fp,r2
 80092c8:	103faa26 	beq	r2,zero,8009174 <__alt_data_end+0xfc009174>
 80092cc:	003fa806 	br	8009170 <__alt_data_end+0xfc009170>
 80092d0:	d9412d17 	ldw	r5,1204(sp)
 80092d4:	2a400017 	ldw	r9,0(r5)
 80092d8:	28c00104 	addi	r3,r5,4
 80092dc:	d8c12d15 	stw	r3,1204(sp)
 80092e0:	483ebc0e 	bge	r9,zero,8008dd4 <__alt_data_end+0xfc008dd4>
 80092e4:	027fffc4 	movi	r9,-1
 80092e8:	e4000047 	ldb	r16,1(fp)
 80092ec:	00384206 	br	80073f8 <__alt_data_end+0xfc0073f8>
 80092f0:	043fffc4 	movi	r16,-1
 80092f4:	0038ce06 	br	8007630 <__alt_data_end+0xfc007630>
 80092f8:	00800b44 	movi	r2,45
 80092fc:	056bc83a 	sub	r21,zero,r21
 8009300:	d8812305 	stb	r2,1164(sp)
 8009304:	003f6c06 	br	80090b8 <__alt_data_end+0xfc0090b8>
 8009308:	4800081e 	bne	r9,zero,800932c <___vfprintf_internal_r+0x20d4>
 800930c:	e080004c 	andi	r2,fp,1
 8009310:	1000061e 	bne	r2,zero,800932c <___vfprintf_internal_r+0x20d4>
 8009314:	07000044 	movi	fp,1
 8009318:	e023883a 	mov	r17,fp
 800931c:	003dd806 	br	8008a80 <__alt_data_end+0xfc008a80>
 8009320:	04400084 	movi	r17,2
 8009324:	88e3c83a 	sub	r17,r17,r3
 8009328:	003fb506 	br	8009200 <__alt_data_end+0xfc009200>
 800932c:	4c400084 	addi	r17,r9,2
 8009330:	8839883a 	mov	fp,r17
 8009334:	883dd20e 	bge	r17,zero,8008a80 <__alt_data_end+0xfc008a80>
 8009338:	003fb506 	br	8009210 <__alt_data_end+0xfc009210>
 800933c:	d8c12617 	ldw	r3,1176(sp)
 8009340:	003f5706 	br	80090a0 <__alt_data_end+0xfc0090a0>
 8009344:	d8812344 	addi	r2,sp,1165
 8009348:	003f8206 	br	8009154 <__alt_data_end+0xfc009154>
 800934c:	0039883a 	mov	fp,zero
 8009350:	003fbd06 	br	8009248 <__alt_data_end+0xfc009248>

08009354 <__vfprintf_internal>:
 8009354:	2007883a 	mov	r3,r4
 8009358:	010200b4 	movhi	r4,2050
 800935c:	21009004 	addi	r4,r4,576
 8009360:	21000017 	ldw	r4,0(r4)
 8009364:	2805883a 	mov	r2,r5
 8009368:	300f883a 	mov	r7,r6
 800936c:	180b883a 	mov	r5,r3
 8009370:	100d883a 	mov	r6,r2
 8009374:	80072581 	jmpi	8007258 <___vfprintf_internal_r>

08009378 <__svfscanf_r>:
 8009378:	deff4b04 	addi	sp,sp,-724
 800937c:	df00b315 	stw	fp,716(sp)
 8009380:	dd80b115 	stw	r22,708(sp)
 8009384:	dc00ab15 	stw	r16,684(sp)
 8009388:	2839883a 	mov	fp,r5
 800938c:	dfc0b415 	stw	ra,720(sp)
 8009390:	ddc0b215 	stw	r23,712(sp)
 8009394:	dd40b015 	stw	r21,704(sp)
 8009398:	dd00af15 	stw	r20,700(sp)
 800939c:	dcc0ae15 	stw	r19,696(sp)
 80093a0:	dc80ad15 	stw	r18,692(sp)
 80093a4:	dc40ac15 	stw	r17,688(sp)
 80093a8:	202d883a 	mov	r22,r4
 80093ac:	3021883a 	mov	r16,r6
 80093b0:	d9c09d15 	stw	r7,628(sp)
 80093b4:	800cd840 	call	800cd84 <__sfp_lock_acquire>
 80093b8:	e080030b 	ldhu	r2,12(fp)
 80093bc:	10c8000c 	andi	r3,r2,8192
 80093c0:	1800061e 	bne	r3,zero,80093dc <__svfscanf_r+0x64>
 80093c4:	e1001917 	ldw	r4,100(fp)
 80093c8:	00f7ffc4 	movi	r3,-8193
 80093cc:	10880014 	ori	r2,r2,8192
 80093d0:	20c6703a 	and	r3,r4,r3
 80093d4:	e080030d 	sth	r2,12(fp)
 80093d8:	e0c01915 	stw	r3,100(fp)
 80093dc:	002b883a 	mov	r21,zero
 80093e0:	044200b4 	movhi	r17,2050
 80093e4:	d800a115 	stw	zero,644(sp)
 80093e8:	d8009f15 	stw	zero,636(sp)
 80093ec:	d800a015 	stw	zero,640(sp)
 80093f0:	8c409304 	addi	r17,r17,588
 80093f4:	a827883a 	mov	r19,r21
 80093f8:	e025883a 	mov	r18,fp
 80093fc:	80800007 	ldb	r2,0(r16)
 8009400:	82400044 	addi	r9,r16,1
 8009404:	da409c15 	stw	r9,624(sp)
 8009408:	d8809b15 	stw	r2,620(sp)
 800940c:	1003f726 	beq	r2,zero,800a3ec <__svfscanf_r+0x1074>
 8009410:	8d400017 	ldw	r21,0(r17)
 8009414:	a887883a 	add	r3,r21,r2
 8009418:	18c00043 	ldbu	r3,1(r3)
 800941c:	18c0020c 	andi	r3,r3,8
 8009420:	18001626 	beq	r3,zero,800947c <__svfscanf_r+0x104>
 8009424:	90800117 	ldw	r2,4(r18)
 8009428:	00800e0e 	bge	zero,r2,8009464 <__svfscanf_r+0xec>
 800942c:	90c00017 	ldw	r3,0(r18)
 8009430:	89000017 	ldw	r4,0(r17)
 8009434:	18800003 	ldbu	r2,0(r3)
 8009438:	2085883a 	add	r2,r4,r2
 800943c:	10800043 	ldbu	r2,1(r2)
 8009440:	1080020c 	andi	r2,r2,8
 8009444:	10000b26 	beq	r2,zero,8009474 <__svfscanf_r+0xfc>
 8009448:	90800117 	ldw	r2,4(r18)
 800944c:	18c00044 	addi	r3,r3,1
 8009450:	90c00015 	stw	r3,0(r18)
 8009454:	10bfffc4 	addi	r2,r2,-1
 8009458:	90800115 	stw	r2,4(r18)
 800945c:	9cc00044 	addi	r19,r19,1
 8009460:	00bff216 	blt	zero,r2,800942c <__alt_data_end+0xfc00942c>
 8009464:	b009883a 	mov	r4,r22
 8009468:	900b883a 	mov	r5,r18
 800946c:	800fae40 	call	800fae4 <__srefill_r>
 8009470:	103fee26 	beq	r2,zero,800942c <__alt_data_end+0xfc00942c>
 8009474:	dc009c17 	ldw	r16,624(sp)
 8009478:	003fe006 	br	80093fc <__alt_data_end+0xfc0093fc>
 800947c:	00c00944 	movi	r3,37
 8009480:	10c08a1e 	bne	r2,r3,80096ac <__svfscanf_r+0x334>
 8009484:	0029883a 	mov	r20,zero
 8009488:	a009883a 	mov	r4,r20
 800948c:	dd009c17 	ldw	r20,624(sp)
 8009490:	85c00043 	ldbu	r23,1(r16)
 8009494:	00c01e04 	movi	r3,120
 8009498:	0021883a 	mov	r16,zero
 800949c:	07001b04 	movi	fp,108
 80094a0:	b8803fcc 	andi	r2,r23,255
 80094a4:	a1800044 	addi	r6,r20,1
 80094a8:	1881ec36 	bltu	r3,r2,8009c5c <__svfscanf_r+0x8e4>
 80094ac:	100490ba 	slli	r2,r2,2
 80094b0:	01420074 	movhi	r5,2049
 80094b4:	29653104 	addi	r5,r5,-27452
 80094b8:	1145883a 	add	r2,r2,r5
 80094bc:	10800017 	ldw	r2,0(r2)
 80094c0:	1000683a 	jmp	r2
 80094c4:	08009cd8 	cmpnei	zero,at,627
 80094c8:	08009c5c 	xori	zero,at,625
 80094cc:	08009c5c 	xori	zero,at,625
 80094d0:	08009c5c 	xori	zero,at,625
 80094d4:	08009c5c 	xori	zero,at,625
 80094d8:	08009c5c 	xori	zero,at,625
 80094dc:	08009c5c 	xori	zero,at,625
 80094e0:	08009c5c 	xori	zero,at,625
 80094e4:	08009c5c 	xori	zero,at,625
 80094e8:	08009c5c 	xori	zero,at,625
 80094ec:	08009c5c 	xori	zero,at,625
 80094f0:	08009c5c 	xori	zero,at,625
 80094f4:	08009c5c 	xori	zero,at,625
 80094f8:	08009c5c 	xori	zero,at,625
 80094fc:	08009c5c 	xori	zero,at,625
 8009500:	08009c5c 	xori	zero,at,625
 8009504:	08009c5c 	xori	zero,at,625
 8009508:	08009c5c 	xori	zero,at,625
 800950c:	08009c5c 	xori	zero,at,625
 8009510:	08009c5c 	xori	zero,at,625
 8009514:	08009c5c 	xori	zero,at,625
 8009518:	08009c5c 	xori	zero,at,625
 800951c:	08009c5c 	xori	zero,at,625
 8009520:	08009c5c 	xori	zero,at,625
 8009524:	08009c5c 	xori	zero,at,625
 8009528:	08009c5c 	xori	zero,at,625
 800952c:	08009c5c 	xori	zero,at,625
 8009530:	08009c5c 	xori	zero,at,625
 8009534:	08009c5c 	xori	zero,at,625
 8009538:	08009c5c 	xori	zero,at,625
 800953c:	08009c5c 	xori	zero,at,625
 8009540:	08009c5c 	xori	zero,at,625
 8009544:	08009c5c 	xori	zero,at,625
 8009548:	08009c5c 	xori	zero,at,625
 800954c:	08009c5c 	xori	zero,at,625
 8009550:	08009c5c 	xori	zero,at,625
 8009554:	08009c5c 	xori	zero,at,625
 8009558:	080096a8 	cmpgeui	zero,at,602
 800955c:	08009c5c 	xori	zero,at,625
 8009560:	08009c5c 	xori	zero,at,625
 8009564:	08009c5c 	xori	zero,at,625
 8009568:	08009c5c 	xori	zero,at,625
 800956c:	08009c44 	addi	zero,at,625
 8009570:	08009c5c 	xori	zero,at,625
 8009574:	08009c5c 	xori	zero,at,625
 8009578:	08009c5c 	xori	zero,at,625
 800957c:	08009c5c 	xori	zero,at,625
 8009580:	08009c5c 	xori	zero,at,625
 8009584:	08009d60 	cmpeqi	zero,at,629
 8009588:	08009d60 	cmpeqi	zero,at,629
 800958c:	08009d60 	cmpeqi	zero,at,629
 8009590:	08009d60 	cmpeqi	zero,at,629
 8009594:	08009d60 	cmpeqi	zero,at,629
 8009598:	08009d60 	cmpeqi	zero,at,629
 800959c:	08009d60 	cmpeqi	zero,at,629
 80095a0:	08009d60 	cmpeqi	zero,at,629
 80095a4:	08009d60 	cmpeqi	zero,at,629
 80095a8:	08009d60 	cmpeqi	zero,at,629
 80095ac:	08009c5c 	xori	zero,at,625
 80095b0:	08009c5c 	xori	zero,at,625
 80095b4:	08009c5c 	xori	zero,at,625
 80095b8:	08009c5c 	xori	zero,at,625
 80095bc:	08009c5c 	xori	zero,at,625
 80095c0:	08009c5c 	xori	zero,at,625
 80095c4:	08009c5c 	xori	zero,at,625
 80095c8:	08009c5c 	xori	zero,at,625
 80095cc:	08009c5c 	xori	zero,at,625
 80095d0:	08009c5c 	xori	zero,at,625
 80095d4:	08009d34 	orhi	zero,at,628
 80095d8:	08009d20 	cmpeqi	zero,at,628
 80095dc:	08009c5c 	xori	zero,at,625
 80095e0:	08009d20 	cmpeqi	zero,at,628
 80095e4:	08009c5c 	xori	zero,at,625
 80095e8:	08009c5c 	xori	zero,at,625
 80095ec:	08009c5c 	xori	zero,at,625
 80095f0:	08009c5c 	xori	zero,at,625
 80095f4:	08009d10 	cmplti	zero,at,628
 80095f8:	08009c5c 	xori	zero,at,625
 80095fc:	08009c5c 	xori	zero,at,625
 8009600:	08009ef8 	rdprs	zero,at,635
 8009604:	08009c5c 	xori	zero,at,625
 8009608:	08009c5c 	xori	zero,at,625
 800960c:	08009c5c 	xori	zero,at,625
 8009610:	08009c5c 	xori	zero,at,625
 8009614:	08009c5c 	xori	zero,at,625
 8009618:	08009c5c 	xori	zero,at,625
 800961c:	08009c5c 	xori	zero,at,625
 8009620:	08009c5c 	xori	zero,at,625
 8009624:	08009ee8 	cmpgeui	zero,at,635
 8009628:	08009c5c 	xori	zero,at,625
 800962c:	08009c5c 	xori	zero,at,625
 8009630:	08009ec4 	addi	zero,at,635
 8009634:	08009c5c 	xori	zero,at,625
 8009638:	08009c5c 	xori	zero,at,625
 800963c:	08009c5c 	xori	zero,at,625
 8009640:	08009c5c 	xori	zero,at,625
 8009644:	08009c5c 	xori	zero,at,625
 8009648:	08009c5c 	xori	zero,at,625
 800964c:	08009c5c 	xori	zero,at,625
 8009650:	08009eac 	andhi	zero,at,634
 8009654:	08009e84 	addi	zero,at,634
 8009658:	08009d20 	cmpeqi	zero,at,628
 800965c:	08009d20 	cmpeqi	zero,at,628
 8009660:	08009d20 	cmpeqi	zero,at,628
 8009664:	08009e74 	orhi	zero,at,633
 8009668:	080096e8 	cmpgeui	zero,at,603
 800966c:	08009c5c 	xori	zero,at,625
 8009670:	08009c5c 	xori	zero,at,625
 8009674:	08009e54 	ori	zero,at,633
 8009678:	08009c5c 	xori	zero,at,625
 800967c:	08009e28 	cmpgeui	zero,at,632
 8009680:	08009e00 	call	8009e0 <__alt_mem_sdram_controller-0x77ff620>
 8009684:	08009dd4 	ori	zero,at,631
 8009688:	08009c5c 	xori	zero,at,625
 800968c:	08009c5c 	xori	zero,at,625
 8009690:	08009dc0 	call	8009dc <__alt_mem_sdram_controller-0x77ff624>
 8009694:	08009c5c 	xori	zero,at,625
 8009698:	08009d98 	cmpnei	zero,at,630
 800969c:	08009c5c 	xori	zero,at,625
 80096a0:	08009c5c 	xori	zero,at,625
 80096a4:	08009ee8 	cmpgeui	zero,at,635
 80096a8:	d9809c15 	stw	r6,624(sp)
 80096ac:	90800117 	ldw	r2,4(r18)
 80096b0:	0084740e 	bge	zero,r2,800a884 <__svfscanf_r+0x150c>
 80096b4:	90800017 	ldw	r2,0(r18)
 80096b8:	da409c17 	ldw	r9,624(sp)
 80096bc:	11000003 	ldbu	r4,0(r2)
 80096c0:	48ffffc3 	ldbu	r3,-1(r9)
 80096c4:	20c3491e 	bne	r4,r3,800a3ec <__svfscanf_r+0x1074>
 80096c8:	90c00117 	ldw	r3,4(r18)
 80096cc:	10800044 	addi	r2,r2,1
 80096d0:	90800015 	stw	r2,0(r18)
 80096d4:	18bfffc4 	addi	r2,r3,-1
 80096d8:	90800115 	stw	r2,4(r18)
 80096dc:	9cc00044 	addi	r19,r19,1
 80096e0:	dc009c17 	ldw	r16,624(sp)
 80096e4:	003f4506 	br	80093fc <__alt_data_end+0xfc0093fc>
 80096e8:	00820074 	movhi	r2,2049
 80096ec:	1085e404 	addi	r2,r2,6032
 80096f0:	2029883a 	mov	r20,r4
 80096f4:	2039883a 	mov	fp,r4
 80096f8:	d9809c15 	stw	r6,624(sp)
 80096fc:	d880a115 	stw	r2,644(sp)
 8009700:	d8009f15 	stw	zero,636(sp)
 8009704:	054000c4 	movi	r21,3
 8009708:	90800117 	ldw	r2,4(r18)
 800970c:	0081660e 	bge	zero,r2,8009ca8 <__svfscanf_r+0x930>
 8009710:	8080100c 	andi	r2,r16,64
 8009714:	10007b26 	beq	r2,zero,8009904 <__svfscanf_r+0x58c>
 8009718:	00800084 	movi	r2,2
 800971c:	a8821e26 	beq	r21,r2,8009f98 <__svfscanf_r+0xc20>
 8009720:	1541fb0e 	bge	r2,r21,8009f10 <__svfscanf_r+0xb98>
 8009724:	008000c4 	movi	r2,3
 8009728:	a8825326 	beq	r21,r2,800a078 <__svfscanf_r+0xd00>
 800972c:	00800104 	movi	r2,4
 8009730:	a882361e 	bne	r21,r2,800a00c <__svfscanf_r+0xc94>
 8009734:	a0bfffc4 	addi	r2,r20,-1
 8009738:	01005704 	movi	r4,348
 800973c:	20831e2e 	bgeu	r4,r2,800a3b8 <__svfscanf_r+0x1040>
 8009740:	a53fa8c4 	addi	r20,r20,-349
 8009744:	dd00a415 	stw	r20,656(sp)
 8009748:	07005744 	movi	fp,349
 800974c:	002b883a 	mov	r21,zero
 8009750:	8401e014 	ori	r16,r16,1920
 8009754:	0029883a 	mov	r20,zero
 8009758:	a805883a 	mov	r2,r21
 800975c:	d800a515 	stw	zero,660(sp)
 8009760:	a02b883a 	mov	r21,r20
 8009764:	d800a315 	stw	zero,652(sp)
 8009768:	8029883a 	mov	r20,r16
 800976c:	d8009e15 	stw	zero,632(sp)
 8009770:	e021883a 	mov	r16,fp
 8009774:	d800a215 	stw	zero,648(sp)
 8009778:	b039883a 	mov	fp,r22
 800977c:	ddc00104 	addi	r23,sp,4
 8009780:	02c01384 	movi	r11,78
 8009784:	00fe1fc4 	movi	r3,-1921
 8009788:	102d883a 	mov	r22,r2
 800978c:	91800017 	ldw	r6,0(r18)
 8009790:	31000003 	ldbu	r4,0(r6)
 8009794:	20bff544 	addi	r2,r4,-43
 8009798:	10803fcc 	andi	r2,r2,255
 800979c:	58807b36 	bltu	r11,r2,800998c <__svfscanf_r+0x614>
 80097a0:	100490ba 	slli	r2,r2,2
 80097a4:	01420074 	movhi	r5,2049
 80097a8:	2965ee04 	addi	r5,r5,-26696
 80097ac:	1145883a 	add	r2,r2,r5
 80097b0:	10800017 	ldw	r2,0(r2)
 80097b4:	1000683a 	jmp	r2
 80097b8:	08009b04 	addi	zero,at,620
 80097bc:	0800998c 	andi	zero,at,614
 80097c0:	08009b04 	addi	zero,at,620
 80097c4:	08009ae8 	cmpgeui	zero,at,619
 80097c8:	0800998c 	andi	zero,at,614
 80097cc:	08009c10 	cmplti	zero,at,624
 80097d0:	08009944 	addi	zero,at,613
 80097d4:	08009944 	addi	zero,at,613
 80097d8:	08009944 	addi	zero,at,613
 80097dc:	08009944 	addi	zero,at,613
 80097e0:	08009944 	addi	zero,at,613
 80097e4:	08009944 	addi	zero,at,613
 80097e8:	08009944 	addi	zero,at,613
 80097ec:	08009944 	addi	zero,at,613
 80097f0:	08009944 	addi	zero,at,613
 80097f4:	0800998c 	andi	zero,at,614
 80097f8:	0800998c 	andi	zero,at,614
 80097fc:	0800998c 	andi	zero,at,614
 8009800:	0800998c 	andi	zero,at,614
 8009804:	0800998c 	andi	zero,at,614
 8009808:	0800998c 	andi	zero,at,614
 800980c:	0800998c 	andi	zero,at,614
 8009810:	08009c00 	call	8009c0 <__alt_mem_sdram_controller-0x77ff640>
 8009814:	0800998c 	andi	zero,at,614
 8009818:	0800998c 	andi	zero,at,614
 800981c:	0800998c 	andi	zero,at,614
 8009820:	08009bb8 	rdprs	zero,at,622
 8009824:	08009b9c 	xori	zero,at,622
 8009828:	0800998c 	andi	zero,at,614
 800982c:	0800998c 	andi	zero,at,614
 8009830:	08009b64 	muli	zero,at,621
 8009834:	0800998c 	andi	zero,at,614
 8009838:	0800998c 	andi	zero,at,614
 800983c:	0800998c 	andi	zero,at,614
 8009840:	0800998c 	andi	zero,at,614
 8009844:	08009b34 	orhi	zero,at,620
 8009848:	0800998c 	andi	zero,at,614
 800984c:	0800998c 	andi	zero,at,614
 8009850:	0800998c 	andi	zero,at,614
 8009854:	0800998c 	andi	zero,at,614
 8009858:	0800998c 	andi	zero,at,614
 800985c:	08009b18 	cmpnei	zero,at,620
 8009860:	0800998c 	andi	zero,at,614
 8009864:	0800998c 	andi	zero,at,614
 8009868:	0800998c 	andi	zero,at,614
 800986c:	0800998c 	andi	zero,at,614
 8009870:	08009acc 	andi	zero,at,619
 8009874:	0800998c 	andi	zero,at,614
 8009878:	0800998c 	andi	zero,at,614
 800987c:	0800998c 	andi	zero,at,614
 8009880:	0800998c 	andi	zero,at,614
 8009884:	0800998c 	andi	zero,at,614
 8009888:	0800998c 	andi	zero,at,614
 800988c:	0800998c 	andi	zero,at,614
 8009890:	08009c00 	call	8009c0 <__alt_mem_sdram_controller-0x77ff640>
 8009894:	0800998c 	andi	zero,at,614
 8009898:	0800998c 	andi	zero,at,614
 800989c:	0800998c 	andi	zero,at,614
 80098a0:	08009bb8 	rdprs	zero,at,622
 80098a4:	08009b9c 	xori	zero,at,622
 80098a8:	0800998c 	andi	zero,at,614
 80098ac:	0800998c 	andi	zero,at,614
 80098b0:	08009b64 	muli	zero,at,621
 80098b4:	0800998c 	andi	zero,at,614
 80098b8:	0800998c 	andi	zero,at,614
 80098bc:	0800998c 	andi	zero,at,614
 80098c0:	0800998c 	andi	zero,at,614
 80098c4:	08009b34 	orhi	zero,at,620
 80098c8:	0800998c 	andi	zero,at,614
 80098cc:	0800998c 	andi	zero,at,614
 80098d0:	0800998c 	andi	zero,at,614
 80098d4:	0800998c 	andi	zero,at,614
 80098d8:	0800998c 	andi	zero,at,614
 80098dc:	08009b18 	cmpnei	zero,at,620
 80098e0:	0800998c 	andi	zero,at,614
 80098e4:	0800998c 	andi	zero,at,614
 80098e8:	0800998c 	andi	zero,at,614
 80098ec:	0800998c 	andi	zero,at,614
 80098f0:	08009acc 	andi	zero,at,619
 80098f4:	b009883a 	mov	r4,r22
 80098f8:	900b883a 	mov	r5,r18
 80098fc:	800fae40 	call	800fae4 <__srefill_r>
 8009900:	1000ed1e 	bne	r2,zero,8009cb8 <__svfscanf_r+0x940>
 8009904:	89000017 	ldw	r4,0(r17)
 8009908:	91400017 	ldw	r5,0(r18)
 800990c:	00000206 	br	8009918 <__svfscanf_r+0x5a0>
 8009910:	29400044 	addi	r5,r5,1
 8009914:	91400015 	stw	r5,0(r18)
 8009918:	28800003 	ldbu	r2,0(r5)
 800991c:	2085883a 	add	r2,r4,r2
 8009920:	10800043 	ldbu	r2,1(r2)
 8009924:	1080020c 	andi	r2,r2,8
 8009928:	103f7b26 	beq	r2,zero,8009718 <__alt_data_end+0xfc009718>
 800992c:	90800117 	ldw	r2,4(r18)
 8009930:	9cc00044 	addi	r19,r19,1
 8009934:	10bfffc4 	addi	r2,r2,-1
 8009938:	90800115 	stw	r2,4(r18)
 800993c:	00bff416 	blt	zero,r2,8009910 <__alt_data_end+0xfc009910>
 8009940:	003fec06 	br	80098f4 <__alt_data_end+0xfc0098f4>
 8009944:	a8803fcc 	andi	r2,r21,255
 8009948:	1080201c 	xori	r2,r2,128
 800994c:	10bfe004 	addi	r2,r2,-128
 8009950:	b085883a 	add	r2,r22,r2
 8009954:	10000d1e 	bne	r2,zero,800998c <__svfscanf_r+0x614>
 8009958:	00bf9fc4 	movi	r2,-385
 800995c:	a0a8703a 	and	r20,r20,r2
 8009960:	b9000005 	stb	r4,0(r23)
 8009964:	bdc00044 	addi	r23,r23,1
 8009968:	90800117 	ldw	r2,4(r18)
 800996c:	843fffc4 	addi	r16,r16,-1
 8009970:	9cc00044 	addi	r19,r19,1
 8009974:	10bfffc4 	addi	r2,r2,-1
 8009978:	90800115 	stw	r2,4(r18)
 800997c:	00827f0e 	bge	zero,r2,800a37c <__svfscanf_r+0x1004>
 8009980:	31800044 	addi	r6,r6,1
 8009984:	91800015 	stw	r6,0(r18)
 8009988:	803f801e 	bne	r16,zero,800978c <__alt_data_end+0xfc00978c>
 800998c:	d8c09e17 	ldw	r3,632(sp)
 8009990:	a021883a 	mov	r16,r20
 8009994:	a829883a 	mov	r20,r21
 8009998:	b02b883a 	mov	r21,r22
 800999c:	e02d883a 	mov	r22,fp
 80099a0:	1802801e 	bne	r3,zero,800a3a4 <__svfscanf_r+0x102c>
 80099a4:	ab3fffc4 	addi	r12,r21,-1
 80099a8:	00800044 	movi	r2,1
 80099ac:	1304392e 	bgeu	r2,r12,800aa94 <__svfscanf_r+0x171c>
 80099b0:	a0803fcc 	andi	r2,r20,255
 80099b4:	1080201c 	xori	r2,r2,128
 80099b8:	10bfe004 	addi	r2,r2,-128
 80099bc:	10ffffc4 	addi	r3,r2,-1
 80099c0:	01000184 	movi	r4,6
 80099c4:	20c01136 	bltu	r4,r3,8009a0c <__svfscanf_r+0x694>
 80099c8:	00c00084 	movi	r3,2
 80099cc:	18827c0e 	bge	r3,r2,800a3c0 <__svfscanf_r+0x1048>
 80099d0:	054000c4 	movi	r21,3
 80099d4:	a039883a 	mov	fp,r20
 80099d8:	9de9c83a 	sub	r20,r19,r23
 80099dc:	15400b26 	beq	r2,r21,8009a0c <__svfscanf_r+0x694>
 80099e0:	bdffffc4 	addi	r23,r23,-1
 80099e4:	b9400007 	ldb	r5,0(r23)
 80099e8:	b009883a 	mov	r4,r22
 80099ec:	900d883a 	mov	r6,r18
 80099f0:	80137c00 	call	80137c0 <_ungetc_r>
 80099f4:	e0bfffc4 	addi	r2,fp,-1
 80099f8:	10c03fcc 	andi	r3,r2,255
 80099fc:	bd13883a 	add	r9,r23,r20
 8009a00:	1039883a 	mov	fp,r2
 8009a04:	a8fff636 	bltu	r21,r3,80099e0 <__alt_data_end+0xfc0099e0>
 8009a08:	4827883a 	mov	r19,r9
 8009a0c:	8080400c 	andi	r2,r16,256
 8009a10:	10001426 	beq	r2,zero,8009a64 <__svfscanf_r+0x6ec>
 8009a14:	8081000c 	andi	r2,r16,1024
 8009a18:	1004131e 	bne	r2,zero,800aa68 <__svfscanf_r+0x16f0>
 8009a1c:	b97fffc7 	ldb	r5,-1(r23)
 8009a20:	00801944 	movi	r2,101
 8009a24:	bd3fffc4 	addi	r20,r23,-1
 8009a28:	9d7fffc4 	addi	r21,r19,-1
 8009a2c:	28800826 	beq	r5,r2,8009a50 <__svfscanf_r+0x6d8>
 8009a30:	00801144 	movi	r2,69
 8009a34:	28800626 	beq	r5,r2,8009a50 <__svfscanf_r+0x6d8>
 8009a38:	b009883a 	mov	r4,r22
 8009a3c:	900d883a 	mov	r6,r18
 8009a40:	80137c00 	call	80137c0 <_ungetc_r>
 8009a44:	b97fff87 	ldb	r5,-2(r23)
 8009a48:	bd3fff84 	addi	r20,r23,-2
 8009a4c:	9d7fff84 	addi	r21,r19,-2
 8009a50:	b009883a 	mov	r4,r22
 8009a54:	900d883a 	mov	r6,r18
 8009a58:	80137c00 	call	80137c0 <_ungetc_r>
 8009a5c:	a827883a 	mov	r19,r21
 8009a60:	a02f883a 	mov	r23,r20
 8009a64:	8080040c 	andi	r2,r16,16
 8009a68:	103e821e 	bne	r2,zero,8009474 <__alt_data_end+0xfc009474>
 8009a6c:	b8000005 	stb	zero,0(r23)
 8009a70:	80c1800c 	andi	r3,r16,1536
 8009a74:	00810004 	movi	r2,1024
 8009a78:	18838b26 	beq	r3,r2,800a8a8 <__svfscanf_r+0x1530>
 8009a7c:	da40a317 	ldw	r9,652(sp)
 8009a80:	4803411e 	bne	r9,zero,800a788 <__svfscanf_r+0x1410>
 8009a84:	b009883a 	mov	r4,r22
 8009a88:	d9400104 	addi	r5,sp,4
 8009a8c:	000d883a 	mov	r6,zero
 8009a90:	80100680 	call	8010068 <_strtod_r>
 8009a94:	1029883a 	mov	r20,r2
 8009a98:	8080004c 	andi	r2,r16,1
 8009a9c:	10030626 	beq	r2,zero,800a6b8 <__svfscanf_r+0x1340>
 8009aa0:	da409d17 	ldw	r9,628(sp)
 8009aa4:	48800017 	ldw	r2,0(r9)
 8009aa8:	4a400104 	addi	r9,r9,4
 8009aac:	da409d15 	stw	r9,628(sp)
 8009ab0:	15000015 	stw	r20,0(r2)
 8009ab4:	10c00115 	stw	r3,4(r2)
 8009ab8:	da40a017 	ldw	r9,640(sp)
 8009abc:	dc009c17 	ldw	r16,624(sp)
 8009ac0:	4a400044 	addi	r9,r9,1
 8009ac4:	da40a015 	stw	r9,640(sp)
 8009ac8:	003e4c06 	br	80093fc <__alt_data_end+0xfc0093fc>
 8009acc:	a8803fcc 	andi	r2,r21,255
 8009ad0:	1080201c 	xori	r2,r2,128
 8009ad4:	10bfe004 	addi	r2,r2,-128
 8009ad8:	014001c4 	movi	r5,7
 8009adc:	117fab1e 	bne	r2,r5,800998c <__alt_data_end+0xfc00998c>
 8009ae0:	05400204 	movi	r21,8
 8009ae4:	003f9e06 	br	8009960 <__alt_data_end+0xfc009960>
 8009ae8:	a080800c 	andi	r2,r20,512
 8009aec:	103fa726 	beq	r2,zero,800998c <__alt_data_end+0xfc00998c>
 8009af0:	027f5fc4 	movi	r9,-641
 8009af4:	a268703a 	and	r20,r20,r9
 8009af8:	da409e17 	ldw	r9,632(sp)
 8009afc:	da40a215 	stw	r9,648(sp)
 8009b00:	003f9706 	br	8009960 <__alt_data_end+0xfc009960>
 8009b04:	a080200c 	andi	r2,r20,128
 8009b08:	103fa026 	beq	r2,zero,800998c <__alt_data_end+0xfc00998c>
 8009b0c:	00bfdfc4 	movi	r2,-129
 8009b10:	a0a8703a 	and	r20,r20,r2
 8009b14:	003f9206 	br	8009960 <__alt_data_end+0xfc009960>
 8009b18:	a9403fcc 	andi	r5,r21,255
 8009b1c:	2940201c 	xori	r5,r5,128
 8009b20:	297fe004 	addi	r5,r5,-128
 8009b24:	00800184 	movi	r2,6
 8009b28:	28bf981e 	bne	r5,r2,800998c <__alt_data_end+0xfc00998c>
 8009b2c:	054001c4 	movi	r21,7
 8009b30:	003f8b06 	br	8009960 <__alt_data_end+0xfc009960>
 8009b34:	b0027e1e 	bne	r22,zero,800a530 <__svfscanf_r+0x11b8>
 8009b38:	da409e17 	ldw	r9,632(sp)
 8009b3c:	4802f226 	beq	r9,zero,800a708 <__svfscanf_r+0x1390>
 8009b40:	a8803fcc 	andi	r2,r21,255
 8009b44:	1080201c 	xori	r2,r2,128
 8009b48:	10bfe004 	addi	r2,r2,-128
 8009b4c:	01400044 	movi	r5,1
 8009b50:	11400226 	beq	r2,r5,8009b5c <__svfscanf_r+0x7e4>
 8009b54:	01400104 	movi	r5,4
 8009b58:	117f8c1e 	bne	r2,r5,800998c <__alt_data_end+0xfc00998c>
 8009b5c:	ad400044 	addi	r21,r21,1
 8009b60:	003f7f06 	br	8009960 <__alt_data_end+0xfc009960>
 8009b64:	a8803fcc 	andi	r2,r21,255
 8009b68:	1080201c 	xori	r2,r2,128
 8009b6c:	10bfe004 	addi	r2,r2,-128
 8009b70:	10026a1e 	bne	r2,zero,800a51c <__svfscanf_r+0x11a4>
 8009b74:	da409e17 	ldw	r9,632(sp)
 8009b78:	4802e91e 	bne	r9,zero,800a720 <__svfscanf_r+0x13a8>
 8009b7c:	a141c00c 	andi	r5,r20,1792
 8009b80:	0081c004 	movi	r2,1792
 8009b84:	2883a026 	beq	r5,r2,800aa08 <__svfscanf_r+0x1690>
 8009b88:	a021883a 	mov	r16,r20
 8009b8c:	a829883a 	mov	r20,r21
 8009b90:	b02b883a 	mov	r21,r22
 8009b94:	e02d883a 	mov	r22,fp
 8009b98:	003f8206 	br	80099a4 <__alt_data_end+0xfc0099a4>
 8009b9c:	a9403fcc 	andi	r5,r21,255
 8009ba0:	2940201c 	xori	r5,r5,128
 8009ba4:	297fe004 	addi	r5,r5,-128
 8009ba8:	00800084 	movi	r2,2
 8009bac:	28bf771e 	bne	r5,r2,800998c <__alt_data_end+0xfc00998c>
 8009bb0:	054000c4 	movi	r21,3
 8009bb4:	003f6a06 	br	8009960 <__alt_data_end+0xfc009960>
 8009bb8:	a081400c 	andi	r2,r20,1280
 8009bbc:	01410004 	movi	r5,1024
 8009bc0:	11400426 	beq	r2,r5,8009bd4 <__svfscanf_r+0x85c>
 8009bc4:	a144703a 	and	r2,r20,r5
 8009bc8:	103f7026 	beq	r2,zero,800998c <__alt_data_end+0xfc00998c>
 8009bcc:	da409e17 	ldw	r9,632(sp)
 8009bd0:	483fed26 	beq	r9,zero,8009b88 <__alt_data_end+0xfc009b88>
 8009bd4:	a080800c 	andi	r2,r20,512
 8009bd8:	1000051e 	bne	r2,zero,8009bf0 <__svfscanf_r+0x878>
 8009bdc:	da409e17 	ldw	r9,632(sp)
 8009be0:	d880a217 	ldw	r2,648(sp)
 8009be4:	ddc0a515 	stw	r23,660(sp)
 8009be8:	4893c83a 	sub	r9,r9,r2
 8009bec:	da40a315 	stw	r9,652(sp)
 8009bf0:	a0e8703a 	and	r20,r20,r3
 8009bf4:	a5006014 	ori	r20,r20,384
 8009bf8:	d8009e15 	stw	zero,632(sp)
 8009bfc:	003f5806 	br	8009960 <__alt_data_end+0xfc009960>
 8009c00:	00800044 	movi	r2,1
 8009c04:	b0bf611e 	bne	r22,r2,800998c <__alt_data_end+0xfc00998c>
 8009c08:	05800084 	movi	r22,2
 8009c0c:	003f5406 	br	8009960 <__alt_data_end+0xfc009960>
 8009c10:	a080400c 	andi	r2,r20,256
 8009c14:	103f4b26 	beq	r2,zero,8009944 <__alt_data_end+0xfc009944>
 8009c18:	da409e17 	ldw	r9,632(sp)
 8009c1c:	00bfdfc4 	movi	r2,-129
 8009c20:	a0a8703a 	and	r20,r20,r2
 8009c24:	4a400044 	addi	r9,r9,1
 8009c28:	da409e15 	stw	r9,632(sp)
 8009c2c:	da40a417 	ldw	r9,656(sp)
 8009c30:	483f4d26 	beq	r9,zero,8009968 <__alt_data_end+0xfc009968>
 8009c34:	4a7fffc4 	addi	r9,r9,-1
 8009c38:	da40a415 	stw	r9,656(sp)
 8009c3c:	84000044 	addi	r16,r16,1
 8009c40:	003f4906 	br	8009968 <__alt_data_end+0xfc009968>
 8009c44:	a5c00043 	ldbu	r23,1(r20)
 8009c48:	3029883a 	mov	r20,r6
 8009c4c:	84000414 	ori	r16,r16,16
 8009c50:	b8803fcc 	andi	r2,r23,255
 8009c54:	a1800044 	addi	r6,r20,1
 8009c58:	18be142e 	bgeu	r3,r2,80094ac <__alt_data_end+0xfc0094ac>
 8009c5c:	bdc03fcc 	andi	r23,r23,255
 8009c60:	bdc0201c 	xori	r23,r23,128
 8009c64:	bdffe004 	addi	r23,r23,-128
 8009c68:	adeb883a 	add	r21,r21,r23
 8009c6c:	a8800043 	ldbu	r2,1(r21)
 8009c70:	d9809c15 	stw	r6,624(sp)
 8009c74:	00c00044 	movi	r3,1
 8009c78:	108000cc 	andi	r2,r2,3
 8009c7c:	2029883a 	mov	r20,r4
 8009c80:	10c30f26 	beq	r2,r3,800a8c0 <__svfscanf_r+0x1548>
 8009c84:	00c20074 	movhi	r3,2049
 8009c88:	90800117 	ldw	r2,4(r18)
 8009c8c:	18c5e404 	addi	r3,r3,6032
 8009c90:	02400284 	movi	r9,10
 8009c94:	d8c0a115 	stw	r3,644(sp)
 8009c98:	da409f15 	stw	r9,636(sp)
 8009c9c:	2039883a 	mov	fp,r4
 8009ca0:	054000c4 	movi	r21,3
 8009ca4:	00be9a16 	blt	zero,r2,8009710 <__alt_data_end+0xfc009710>
 8009ca8:	b009883a 	mov	r4,r22
 8009cac:	900b883a 	mov	r5,r18
 8009cb0:	800fae40 	call	800fae4 <__srefill_r>
 8009cb4:	103e9626 	beq	r2,zero,8009710 <__alt_data_end+0xfc009710>
 8009cb8:	800cd880 	call	800cd88 <__sfp_lock_release>
 8009cbc:	da40a017 	ldw	r9,640(sp)
 8009cc0:	48009126 	beq	r9,zero,8009f08 <__svfscanf_r+0xb90>
 8009cc4:	9080030b 	ldhu	r2,12(r18)
 8009cc8:	1080100c 	andi	r2,r2,64
 8009ccc:	10008e1e 	bne	r2,zero,8009f08 <__svfscanf_r+0xb90>
 8009cd0:	4805883a 	mov	r2,r9
 8009cd4:	00000206 	br	8009ce0 <__svfscanf_r+0x968>
 8009cd8:	800cd880 	call	800cd88 <__sfp_lock_release>
 8009cdc:	00bfffc4 	movi	r2,-1
 8009ce0:	dfc0b417 	ldw	ra,720(sp)
 8009ce4:	df00b317 	ldw	fp,716(sp)
 8009ce8:	ddc0b217 	ldw	r23,712(sp)
 8009cec:	dd80b117 	ldw	r22,708(sp)
 8009cf0:	dd40b017 	ldw	r21,704(sp)
 8009cf4:	dd00af17 	ldw	r20,700(sp)
 8009cf8:	dcc0ae17 	ldw	r19,696(sp)
 8009cfc:	dc80ad17 	ldw	r18,692(sp)
 8009d00:	dc40ac17 	ldw	r17,688(sp)
 8009d04:	dc00ab17 	ldw	r16,684(sp)
 8009d08:	dec0b504 	addi	sp,sp,724
 8009d0c:	f800283a 	ret
 8009d10:	a5c00043 	ldbu	r23,1(r20)
 8009d14:	84000094 	ori	r16,r16,2
 8009d18:	3029883a 	mov	r20,r6
 8009d1c:	003de006 	br	80094a0 <__alt_data_end+0xfc0094a0>
 8009d20:	2029883a 	mov	r20,r4
 8009d24:	d9809c15 	stw	r6,624(sp)
 8009d28:	2039883a 	mov	fp,r4
 8009d2c:	05400104 	movi	r21,4
 8009d30:	003e7506 	br	8009708 <__alt_data_end+0xfc009708>
 8009d34:	2029883a 	mov	r20,r4
 8009d38:	d9809c15 	stw	r6,624(sp)
 8009d3c:	84000054 	ori	r16,r16,1
 8009d40:	00820074 	movhi	r2,2049
 8009d44:	1085e404 	addi	r2,r2,6032
 8009d48:	02400284 	movi	r9,10
 8009d4c:	a039883a 	mov	fp,r20
 8009d50:	d880a115 	stw	r2,644(sp)
 8009d54:	da409f15 	stw	r9,636(sp)
 8009d58:	054000c4 	movi	r21,3
 8009d5c:	003e6a06 	br	8009708 <__alt_data_end+0xfc009708>
 8009d60:	01400284 	movi	r5,10
 8009d64:	d8c0aa15 	stw	r3,680(sp)
 8009d68:	d980a915 	stw	r6,676(sp)
 8009d6c:	bdc03fcc 	andi	r23,r23,255
 8009d70:	800334c0 	call	800334c <__mulsi3>
 8009d74:	bdc0201c 	xori	r23,r23,128
 8009d78:	d980a917 	ldw	r6,676(sp)
 8009d7c:	bdffe004 	addi	r23,r23,-128
 8009d80:	15c5883a 	add	r2,r2,r23
 8009d84:	113ff404 	addi	r4,r2,-48
 8009d88:	a5c00043 	ldbu	r23,1(r20)
 8009d8c:	d8c0aa17 	ldw	r3,680(sp)
 8009d90:	3029883a 	mov	r20,r6
 8009d94:	003dc206 	br	80094a0 <__alt_data_end+0xfc0094a0>
 8009d98:	00820074 	movhi	r2,2049
 8009d9c:	10874c04 	addi	r2,r2,7472
 8009da0:	02400284 	movi	r9,10
 8009da4:	2029883a 	mov	r20,r4
 8009da8:	d9809c15 	stw	r6,624(sp)
 8009dac:	2039883a 	mov	fp,r4
 8009db0:	d880a115 	stw	r2,644(sp)
 8009db4:	da409f15 	stw	r9,636(sp)
 8009db8:	054000c4 	movi	r21,3
 8009dbc:	003e5206 	br	8009708 <__alt_data_end+0xfc009708>
 8009dc0:	2029883a 	mov	r20,r4
 8009dc4:	d9809c15 	stw	r6,624(sp)
 8009dc8:	2039883a 	mov	fp,r4
 8009dcc:	05400084 	movi	r21,2
 8009dd0:	003e4d06 	br	8009708 <__alt_data_end+0xfc009708>
 8009dd4:	2029883a 	mov	r20,r4
 8009dd8:	d9809c15 	stw	r6,624(sp)
 8009ddc:	84008814 	ori	r16,r16,544
 8009de0:	00820074 	movhi	r2,2049
 8009de4:	10874c04 	addi	r2,r2,7472
 8009de8:	02400404 	movi	r9,16
 8009dec:	a039883a 	mov	fp,r20
 8009df0:	d880a115 	stw	r2,644(sp)
 8009df4:	da409f15 	stw	r9,636(sp)
 8009df8:	054000c4 	movi	r21,3
 8009dfc:	003e4206 	br	8009708 <__alt_data_end+0xfc009708>
 8009e00:	2029883a 	mov	r20,r4
 8009e04:	d9809c15 	stw	r6,624(sp)
 8009e08:	00820074 	movhi	r2,2049
 8009e0c:	10874c04 	addi	r2,r2,7472
 8009e10:	02400204 	movi	r9,8
 8009e14:	a039883a 	mov	fp,r20
 8009e18:	d880a115 	stw	r2,644(sp)
 8009e1c:	da409f15 	stw	r9,636(sp)
 8009e20:	054000c4 	movi	r21,3
 8009e24:	003e3806 	br	8009708 <__alt_data_end+0xfc009708>
 8009e28:	8080040c 	andi	r2,r16,16
 8009e2c:	d9809c15 	stw	r6,624(sp)
 8009e30:	103d901e 	bne	r2,zero,8009474 <__alt_data_end+0xfc009474>
 8009e34:	8080010c 	andi	r2,r16,4
 8009e38:	1002a326 	beq	r2,zero,800a8c8 <__svfscanf_r+0x1550>
 8009e3c:	da409d17 	ldw	r9,628(sp)
 8009e40:	48800017 	ldw	r2,0(r9)
 8009e44:	4a400104 	addi	r9,r9,4
 8009e48:	da409d15 	stw	r9,628(sp)
 8009e4c:	14c0000d 	sth	r19,0(r2)
 8009e50:	003d8806 	br	8009474 <__alt_data_end+0xfc009474>
 8009e54:	a5c00043 	ldbu	r23,1(r20)
 8009e58:	b8803fcc 	andi	r2,r23,255
 8009e5c:	1080201c 	xori	r2,r2,128
 8009e60:	10bfe004 	addi	r2,r2,-128
 8009e64:	17028c26 	beq	r2,fp,800a898 <__svfscanf_r+0x1520>
 8009e68:	84000054 	ori	r16,r16,1
 8009e6c:	3029883a 	mov	r20,r6
 8009e70:	003d8b06 	br	80094a0 <__alt_data_end+0xfc0094a0>
 8009e74:	a5c00043 	ldbu	r23,1(r20)
 8009e78:	84000114 	ori	r16,r16,4
 8009e7c:	3029883a 	mov	r20,r6
 8009e80:	003d8706 	br	80094a0 <__alt_data_end+0xfc0094a0>
 8009e84:	02420074 	movhi	r9,2049
 8009e88:	4a45e404 	addi	r9,r9,6032
 8009e8c:	da40a115 	stw	r9,644(sp)
 8009e90:	02400284 	movi	r9,10
 8009e94:	2029883a 	mov	r20,r4
 8009e98:	d9809c15 	stw	r6,624(sp)
 8009e9c:	2039883a 	mov	fp,r4
 8009ea0:	da409f15 	stw	r9,636(sp)
 8009ea4:	054000c4 	movi	r21,3
 8009ea8:	003e1706 	br	8009708 <__alt_data_end+0xfc009708>
 8009eac:	2029883a 	mov	r20,r4
 8009eb0:	d9809c15 	stw	r6,624(sp)
 8009eb4:	84001014 	ori	r16,r16,64
 8009eb8:	2039883a 	mov	fp,r4
 8009ebc:	002b883a 	mov	r21,zero
 8009ec0:	003e1106 	br	8009708 <__alt_data_end+0xfc009708>
 8009ec4:	2029883a 	mov	r20,r4
 8009ec8:	300b883a 	mov	r5,r6
 8009ecc:	d9005884 	addi	r4,sp,354
 8009ed0:	800fd000 	call	800fd00 <__sccl>
 8009ed4:	d8809c15 	stw	r2,624(sp)
 8009ed8:	84001014 	ori	r16,r16,64
 8009edc:	a039883a 	mov	fp,r20
 8009ee0:	05400044 	movi	r21,1
 8009ee4:	003e0806 	br	8009708 <__alt_data_end+0xfc009708>
 8009ee8:	2029883a 	mov	r20,r4
 8009eec:	d9809c15 	stw	r6,624(sp)
 8009ef0:	84008014 	ori	r16,r16,512
 8009ef4:	003fba06 	br	8009de0 <__alt_data_end+0xfc009de0>
 8009ef8:	2029883a 	mov	r20,r4
 8009efc:	d9809c15 	stw	r6,624(sp)
 8009f00:	84000054 	ori	r16,r16,1
 8009f04:	003fc006 	br	8009e08 <__alt_data_end+0xfc009e08>
 8009f08:	00bfffc4 	movi	r2,-1
 8009f0c:	003f7406 	br	8009ce0 <__alt_data_end+0xfc009ce0>
 8009f10:	00800044 	movi	r2,1
 8009f14:	a8803d1e 	bne	r21,r2,800a00c <__svfscanf_r+0xc94>
 8009f18:	a000011e 	bne	r20,zero,8009f20 <__svfscanf_r+0xba8>
 8009f1c:	073fffc4 	movi	fp,-1
 8009f20:	8400040c 	andi	r16,r16,16
 8009f24:	80013426 	beq	r16,zero,800a3f8 <__svfscanf_r+0x1080>
 8009f28:	91000017 	ldw	r4,0(r18)
 8009f2c:	0021883a 	mov	r16,zero
 8009f30:	dd005884 	addi	r20,sp,354
 8009f34:	20800003 	ldbu	r2,0(r4)
 8009f38:	a085883a 	add	r2,r20,r2
 8009f3c:	10800007 	ldb	r2,0(r2)
 8009f40:	10001126 	beq	r2,zero,8009f88 <__svfscanf_r+0xc10>
 8009f44:	90800117 	ldw	r2,4(r18)
 8009f48:	21000044 	addi	r4,r4,1
 8009f4c:	84000044 	addi	r16,r16,1
 8009f50:	10bfffc4 	addi	r2,r2,-1
 8009f54:	90800115 	stw	r2,4(r18)
 8009f58:	91000015 	stw	r4,0(r18)
 8009f5c:	e4000b26 	beq	fp,r16,8009f8c <__svfscanf_r+0xc14>
 8009f60:	00bff416 	blt	zero,r2,8009f34 <__alt_data_end+0xfc009f34>
 8009f64:	b009883a 	mov	r4,r22
 8009f68:	900b883a 	mov	r5,r18
 8009f6c:	800fae40 	call	800fae4 <__srefill_r>
 8009f70:	1000061e 	bne	r2,zero,8009f8c <__svfscanf_r+0xc14>
 8009f74:	91000017 	ldw	r4,0(r18)
 8009f78:	20800003 	ldbu	r2,0(r4)
 8009f7c:	a085883a 	add	r2,r20,r2
 8009f80:	10800007 	ldb	r2,0(r2)
 8009f84:	103fef1e 	bne	r2,zero,8009f44 <__alt_data_end+0xfc009f44>
 8009f88:	80011826 	beq	r16,zero,800a3ec <__svfscanf_r+0x1074>
 8009f8c:	9c27883a 	add	r19,r19,r16
 8009f90:	dc009c17 	ldw	r16,624(sp)
 8009f94:	003d1906 	br	80093fc <__alt_data_end+0xfc0093fc>
 8009f98:	a000011e 	bne	r20,zero,8009fa0 <__svfscanf_r+0xc28>
 8009f9c:	073fffc4 	movi	fp,-1
 8009fa0:	8080004c 	andi	r2,r16,1
 8009fa4:	1001781e 	bne	r2,zero,800a588 <__svfscanf_r+0x1210>
 8009fa8:	8400040c 	andi	r16,r16,16
 8009fac:	80013326 	beq	r16,zero,800a47c <__svfscanf_r+0x1104>
 8009fb0:	89400017 	ldw	r5,0(r17)
 8009fb4:	91000017 	ldw	r4,0(r18)
 8009fb8:	0021883a 	mov	r16,zero
 8009fbc:	20800003 	ldbu	r2,0(r4)
 8009fc0:	2885883a 	add	r2,r5,r2
 8009fc4:	10800043 	ldbu	r2,1(r2)
 8009fc8:	1080020c 	andi	r2,r2,8
 8009fcc:	103fef1e 	bne	r2,zero,8009f8c <__alt_data_end+0xfc009f8c>
 8009fd0:	90800117 	ldw	r2,4(r18)
 8009fd4:	21000044 	addi	r4,r4,1
 8009fd8:	84000044 	addi	r16,r16,1
 8009fdc:	10bfffc4 	addi	r2,r2,-1
 8009fe0:	90800115 	stw	r2,4(r18)
 8009fe4:	91000015 	stw	r4,0(r18)
 8009fe8:	e43fe826 	beq	fp,r16,8009f8c <__alt_data_end+0xfc009f8c>
 8009fec:	00bff316 	blt	zero,r2,8009fbc <__alt_data_end+0xfc009fbc>
 8009ff0:	b009883a 	mov	r4,r22
 8009ff4:	900b883a 	mov	r5,r18
 8009ff8:	800fae40 	call	800fae4 <__srefill_r>
 8009ffc:	103fe31e 	bne	r2,zero,8009f8c <__alt_data_end+0xfc009f8c>
 800a000:	89400017 	ldw	r5,0(r17)
 800a004:	91000017 	ldw	r4,0(r18)
 800a008:	003fec06 	br	8009fbc <__alt_data_end+0xfc009fbc>
 800a00c:	a000011e 	bne	r20,zero,800a014 <__svfscanf_r+0xc9c>
 800a010:	07000044 	movi	fp,1
 800a014:	8080004c 	andi	r2,r16,1
 800a018:	1001771e 	bne	r2,zero,800a5f8 <__svfscanf_r+0x1280>
 800a01c:	8400040c 	andi	r16,r16,16
 800a020:	8001ff26 	beq	r16,zero,800a820 <__svfscanf_r+0x14a8>
 800a024:	0021883a 	mov	r16,zero
 800a028:	00000906 	br	800a050 <__svfscanf_r+0xcd8>
 800a02c:	90c00017 	ldw	r3,0(r18)
 800a030:	b009883a 	mov	r4,r22
 800a034:	900b883a 	mov	r5,r18
 800a038:	1887883a 	add	r3,r3,r2
 800a03c:	90c00015 	stw	r3,0(r18)
 800a040:	80a1883a 	add	r16,r16,r2
 800a044:	e0b9c83a 	sub	fp,fp,r2
 800a048:	800fae40 	call	800fae4 <__srefill_r>
 800a04c:	1001f11e 	bne	r2,zero,800a814 <__svfscanf_r+0x149c>
 800a050:	90800117 	ldw	r2,4(r18)
 800a054:	173ff516 	blt	r2,fp,800a02c <__alt_data_end+0xfc00a02c>
 800a058:	91000017 	ldw	r4,0(r18)
 800a05c:	1705c83a 	sub	r2,r2,fp
 800a060:	e421883a 	add	r16,fp,r16
 800a064:	2707883a 	add	r3,r4,fp
 800a068:	90800115 	stw	r2,4(r18)
 800a06c:	90c00015 	stw	r3,0(r18)
 800a070:	9c27883a 	add	r19,r19,r16
 800a074:	003fc606 	br	8009f90 <__alt_data_end+0xfc009f90>
 800a078:	a0bfffc4 	addi	r2,r20,-1
 800a07c:	01005704 	movi	r4,348
 800a080:	2080cb2e 	bgeu	r4,r2,800a3b0 <__svfscanf_r+0x1038>
 800a084:	a1ffa8c4 	addi	r7,r20,-349
 800a088:	07005744 	movi	fp,349
 800a08c:	85c36014 	ori	r23,r16,3456
 800a090:	0021883a 	mov	r16,zero
 800a094:	9811883a 	mov	r8,r19
 800a098:	8027883a 	mov	r19,r16
 800a09c:	dc009f17 	ldw	r16,636(sp)
 800a0a0:	dd400104 	addi	r21,sp,4
 800a0a4:	00c01344 	movi	r3,77
 800a0a8:	02808004 	movi	r10,512
 800a0ac:	01bf7fc4 	movi	r6,-513
 800a0b0:	053fdfc4 	movi	r20,-129
 800a0b4:	91000017 	ldw	r4,0(r18)
 800a0b8:	21400003 	ldbu	r5,0(r4)
 800a0bc:	28bff544 	addi	r2,r5,-43
 800a0c0:	10803fcc 	andi	r2,r2,255
 800a0c4:	18806336 	bltu	r3,r2,800a254 <__svfscanf_r+0xedc>
 800a0c8:	100490ba 	slli	r2,r2,2
 800a0cc:	02420074 	movhi	r9,2049
 800a0d0:	4a683804 	addi	r9,r9,-24352
 800a0d4:	1245883a 	add	r2,r2,r9
 800a0d8:	10800017 	ldw	r2,0(r2)
 800a0dc:	1000683a 	jmp	r2
 800a0e0:	0800a36c 	andhi	zero,at,653
 800a0e4:	0800a254 	ori	zero,at,649
 800a0e8:	0800a36c 	andhi	zero,at,653
 800a0ec:	0800a254 	ori	zero,at,649
 800a0f0:	0800a254 	ori	zero,at,649
 800a0f4:	0800a2ec 	andhi	zero,at,651
 800a0f8:	0800a2cc 	andi	zero,at,651
 800a0fc:	0800a2cc 	andi	zero,at,651
 800a100:	0800a2cc 	andi	zero,at,651
 800a104:	0800a2cc 	andi	zero,at,651
 800a108:	0800a2cc 	andi	zero,at,651
 800a10c:	0800a2cc 	andi	zero,at,651
 800a110:	0800a2cc 	andi	zero,at,651
 800a114:	0800a2ac 	andhi	zero,at,650
 800a118:	0800a2ac 	andhi	zero,at,650
 800a11c:	0800a254 	ori	zero,at,649
 800a120:	0800a254 	ori	zero,at,649
 800a124:	0800a254 	ori	zero,at,649
 800a128:	0800a254 	ori	zero,at,649
 800a12c:	0800a254 	ori	zero,at,649
 800a130:	0800a254 	ori	zero,at,649
 800a134:	0800a254 	ori	zero,at,649
 800a138:	0800a298 	cmpnei	zero,at,650
 800a13c:	0800a298 	cmpnei	zero,at,650
 800a140:	0800a298 	cmpnei	zero,at,650
 800a144:	0800a298 	cmpnei	zero,at,650
 800a148:	0800a298 	cmpnei	zero,at,650
 800a14c:	0800a298 	cmpnei	zero,at,650
 800a150:	0800a254 	ori	zero,at,649
 800a154:	0800a254 	ori	zero,at,649
 800a158:	0800a254 	ori	zero,at,649
 800a15c:	0800a254 	ori	zero,at,649
 800a160:	0800a254 	ori	zero,at,649
 800a164:	0800a254 	ori	zero,at,649
 800a168:	0800a254 	ori	zero,at,649
 800a16c:	0800a254 	ori	zero,at,649
 800a170:	0800a254 	ori	zero,at,649
 800a174:	0800a254 	ori	zero,at,649
 800a178:	0800a254 	ori	zero,at,649
 800a17c:	0800a254 	ori	zero,at,649
 800a180:	0800a254 	ori	zero,at,649
 800a184:	0800a254 	ori	zero,at,649
 800a188:	0800a254 	ori	zero,at,649
 800a18c:	0800a254 	ori	zero,at,649
 800a190:	0800a254 	ori	zero,at,649
 800a194:	0800a218 	cmpnei	zero,at,648
 800a198:	0800a254 	ori	zero,at,649
 800a19c:	0800a254 	ori	zero,at,649
 800a1a0:	0800a254 	ori	zero,at,649
 800a1a4:	0800a254 	ori	zero,at,649
 800a1a8:	0800a254 	ori	zero,at,649
 800a1ac:	0800a254 	ori	zero,at,649
 800a1b0:	0800a254 	ori	zero,at,649
 800a1b4:	0800a254 	ori	zero,at,649
 800a1b8:	0800a298 	cmpnei	zero,at,650
 800a1bc:	0800a298 	cmpnei	zero,at,650
 800a1c0:	0800a298 	cmpnei	zero,at,650
 800a1c4:	0800a298 	cmpnei	zero,at,650
 800a1c8:	0800a298 	cmpnei	zero,at,650
 800a1cc:	0800a298 	cmpnei	zero,at,650
 800a1d0:	0800a254 	ori	zero,at,649
 800a1d4:	0800a254 	ori	zero,at,649
 800a1d8:	0800a254 	ori	zero,at,649
 800a1dc:	0800a254 	ori	zero,at,649
 800a1e0:	0800a254 	ori	zero,at,649
 800a1e4:	0800a254 	ori	zero,at,649
 800a1e8:	0800a254 	ori	zero,at,649
 800a1ec:	0800a254 	ori	zero,at,649
 800a1f0:	0800a254 	ori	zero,at,649
 800a1f4:	0800a254 	ori	zero,at,649
 800a1f8:	0800a254 	ori	zero,at,649
 800a1fc:	0800a254 	ori	zero,at,649
 800a200:	0800a254 	ori	zero,at,649
 800a204:	0800a254 	ori	zero,at,649
 800a208:	0800a254 	ori	zero,at,649
 800a20c:	0800a254 	ori	zero,at,649
 800a210:	0800a254 	ori	zero,at,649
 800a214:	0800a218 	cmpnei	zero,at,648
 800a218:	b881800c 	andi	r2,r23,1536
 800a21c:	12800d1e 	bne	r2,r10,800a254 <__svfscanf_r+0xedc>
 800a220:	b9ae703a 	and	r23,r23,r6
 800a224:	bdc14014 	ori	r23,r23,1280
 800a228:	04000404 	movi	r16,16
 800a22c:	90800117 	ldw	r2,4(r18)
 800a230:	a9400005 	stb	r5,0(r21)
 800a234:	ad400044 	addi	r21,r21,1
 800a238:	10bfffc4 	addi	r2,r2,-1
 800a23c:	90800115 	stw	r2,4(r18)
 800a240:	00803b0e 	bge	zero,r2,800a330 <__svfscanf_r+0xfb8>
 800a244:	21000044 	addi	r4,r4,1
 800a248:	91000015 	stw	r4,0(r18)
 800a24c:	e73fffc4 	addi	fp,fp,-1
 800a250:	e03f981e 	bne	fp,zero,800a0b4 <__alt_data_end+0xfc00a0b4>
 800a254:	dc009f15 	stw	r16,636(sp)
 800a258:	b880400c 	andi	r2,r23,256
 800a25c:	9821883a 	mov	r16,r19
 800a260:	4027883a 	mov	r19,r8
 800a264:	10000426 	beq	r2,zero,800a278 <__svfscanf_r+0xf00>
 800a268:	d8800104 	addi	r2,sp,4
 800a26c:	15417f36 	bltu	r2,r21,800a86c <__svfscanf_r+0x14f4>
 800a270:	d8c00104 	addi	r3,sp,4
 800a274:	1d405d26 	beq	r3,r21,800a3ec <__svfscanf_r+0x1074>
 800a278:	b880040c 	andi	r2,r23,16
 800a27c:	1000b026 	beq	r2,zero,800a540 <__svfscanf_r+0x11c8>
 800a280:	d8800104 	addi	r2,sp,4
 800a284:	a8abc83a 	sub	r21,r21,r2
 800a288:	ac2b883a 	add	r21,r21,r16
 800a28c:	9d67883a 	add	r19,r19,r21
 800a290:	dc009c17 	ldw	r16,624(sp)
 800a294:	003c5906 	br	80093fc <__alt_data_end+0xfc0093fc>
 800a298:	00800284 	movi	r2,10
 800a29c:	143fed0e 	bge	r2,r16,800a254 <__alt_data_end+0xfc00a254>
 800a2a0:	00bd1fc4 	movi	r2,-2945
 800a2a4:	b8ae703a 	and	r23,r23,r2
 800a2a8:	003fe006 	br	800a22c <__alt_data_end+0xfc00a22c>
 800a2ac:	024200b4 	movhi	r9,2050
 800a2b0:	8421883a 	add	r16,r16,r16
 800a2b4:	4a77f684 	addi	r9,r9,-8230
 800a2b8:	4c05883a 	add	r2,r9,r16
 800a2bc:	1400000f 	ldh	r16,0(r2)
 800a2c0:	00800204 	movi	r2,8
 800a2c4:	143ff616 	blt	r2,r16,800a2a0 <__alt_data_end+0xfc00a2a0>
 800a2c8:	003fe206 	br	800a254 <__alt_data_end+0xfc00a254>
 800a2cc:	024200b4 	movhi	r9,2050
 800a2d0:	8421883a 	add	r16,r16,r16
 800a2d4:	4a77f684 	addi	r9,r9,-8230
 800a2d8:	4c05883a 	add	r2,r9,r16
 800a2dc:	1400000f 	ldh	r16,0(r2)
 800a2e0:	00bd1fc4 	movi	r2,-2945
 800a2e4:	b8ae703a 	and	r23,r23,r2
 800a2e8:	003fd006 	br	800a22c <__alt_data_end+0xfc00a22c>
 800a2ec:	b882000c 	andi	r2,r23,2048
 800a2f0:	103fce26 	beq	r2,zero,800a22c <__alt_data_end+0xfc00a22c>
 800a2f4:	8000021e 	bne	r16,zero,800a300 <__svfscanf_r+0xf88>
 800a2f8:	bdc08014 	ori	r23,r23,512
 800a2fc:	04000204 	movi	r16,8
 800a300:	b881000c 	andi	r2,r23,1024
 800a304:	1000fd1e 	bne	r2,zero,800a6fc <__svfscanf_r+0x1384>
 800a308:	00bf1fc4 	movi	r2,-897
 800a30c:	b8ae703a 	and	r23,r23,r2
 800a310:	38000226 	beq	r7,zero,800a31c <__svfscanf_r+0xfa4>
 800a314:	39ffffc4 	addi	r7,r7,-1
 800a318:	e7000044 	addi	fp,fp,1
 800a31c:	90800117 	ldw	r2,4(r18)
 800a320:	9cc00044 	addi	r19,r19,1
 800a324:	10bfffc4 	addi	r2,r2,-1
 800a328:	90800115 	stw	r2,4(r18)
 800a32c:	00bfc516 	blt	zero,r2,800a244 <__alt_data_end+0xfc00a244>
 800a330:	b009883a 	mov	r4,r22
 800a334:	900b883a 	mov	r5,r18
 800a338:	d8c0aa15 	stw	r3,680(sp)
 800a33c:	d980a915 	stw	r6,676(sp)
 800a340:	d9c0a815 	stw	r7,672(sp)
 800a344:	da00a715 	stw	r8,668(sp)
 800a348:	da80a615 	stw	r10,664(sp)
 800a34c:	800fae40 	call	800fae4 <__srefill_r>
 800a350:	d8c0aa17 	ldw	r3,680(sp)
 800a354:	d980a917 	ldw	r6,676(sp)
 800a358:	d9c0a817 	ldw	r7,672(sp)
 800a35c:	da00a717 	ldw	r8,668(sp)
 800a360:	da80a617 	ldw	r10,664(sp)
 800a364:	103fb926 	beq	r2,zero,800a24c <__alt_data_end+0xfc00a24c>
 800a368:	003fba06 	br	800a254 <__alt_data_end+0xfc00a254>
 800a36c:	b880200c 	andi	r2,r23,128
 800a370:	103fb826 	beq	r2,zero,800a254 <__alt_data_end+0xfc00a254>
 800a374:	bd2e703a 	and	r23,r23,r20
 800a378:	003fac06 	br	800a22c <__alt_data_end+0xfc00a22c>
 800a37c:	e009883a 	mov	r4,fp
 800a380:	900b883a 	mov	r5,r18
 800a384:	d8c0aa15 	stw	r3,680(sp)
 800a388:	dac0a615 	stw	r11,664(sp)
 800a38c:	800fae40 	call	800fae4 <__srefill_r>
 800a390:	d8c0aa17 	ldw	r3,680(sp)
 800a394:	dac0a617 	ldw	r11,664(sp)
 800a398:	103d7c1e 	bne	r2,zero,800998c <__alt_data_end+0xfc00998c>
 800a39c:	803cfb1e 	bne	r16,zero,800978c <__alt_data_end+0xfc00978c>
 800a3a0:	003d7a06 	br	800998c <__alt_data_end+0xfc00998c>
 800a3a4:	00bfbfc4 	movi	r2,-257
 800a3a8:	80a0703a 	and	r16,r16,r2
 800a3ac:	003d7d06 	br	80099a4 <__alt_data_end+0xfc0099a4>
 800a3b0:	000f883a 	mov	r7,zero
 800a3b4:	003f3506 	br	800a08c <__alt_data_end+0xfc00a08c>
 800a3b8:	d800a415 	stw	zero,656(sp)
 800a3bc:	003ce306 	br	800974c <__alt_data_end+0xfc00974c>
 800a3c0:	da400104 	addi	r9,sp,4
 800a3c4:	9039883a 	mov	fp,r18
 800a3c8:	b821883a 	mov	r16,r23
 800a3cc:	4dc0072e 	bgeu	r9,r23,800a3ec <__svfscanf_r+0x1074>
 800a3d0:	843fffc4 	addi	r16,r16,-1
 800a3d4:	81400007 	ldb	r5,0(r16)
 800a3d8:	b009883a 	mov	r4,r22
 800a3dc:	e00d883a 	mov	r6,fp
 800a3e0:	80137c00 	call	80137c0 <_ungetc_r>
 800a3e4:	d8800104 	addi	r2,sp,4
 800a3e8:	80bff91e 	bne	r16,r2,800a3d0 <__alt_data_end+0xfc00a3d0>
 800a3ec:	800cd880 	call	800cd88 <__sfp_lock_release>
 800a3f0:	d880a017 	ldw	r2,640(sp)
 800a3f4:	003e3a06 	br	8009ce0 <__alt_data_end+0xfc009ce0>
 800a3f8:	da409d17 	ldw	r9,628(sp)
 800a3fc:	e0ffffc4 	addi	r3,fp,-1
 800a400:	dd005884 	addi	r20,sp,354
 800a404:	4c000017 	ldw	r16,0(r9)
 800a408:	4dc00104 	addi	r23,r9,4
 800a40c:	800b883a 	mov	r5,r16
 800a410:	80eb883a 	add	r21,r16,r3
 800a414:	00000106 	br	800a41c <__svfscanf_r+0x10a4>
 800a418:	e00b883a 	mov	r5,fp
 800a41c:	90c00017 	ldw	r3,0(r18)
 800a420:	280d883a 	mov	r6,r5
 800a424:	18800003 	ldbu	r2,0(r3)
 800a428:	a085883a 	add	r2,r20,r2
 800a42c:	10800007 	ldb	r2,0(r2)
 800a430:	1000ec26 	beq	r2,zero,800a7e4 <__svfscanf_r+0x146c>
 800a434:	90800117 	ldw	r2,4(r18)
 800a438:	19c00044 	addi	r7,r3,1
 800a43c:	91c00015 	stw	r7,0(r18)
 800a440:	10bfffc4 	addi	r2,r2,-1
 800a444:	90800115 	stw	r2,4(r18)
 800a448:	18800003 	ldbu	r2,0(r3)
 800a44c:	37000044 	addi	fp,r6,1
 800a450:	28800005 	stb	r2,0(r5)
 800a454:	3540ed26 	beq	r6,r21,800a80c <__svfscanf_r+0x1494>
 800a458:	90800117 	ldw	r2,4(r18)
 800a45c:	00bfee16 	blt	zero,r2,800a418 <__alt_data_end+0xfc00a418>
 800a460:	b009883a 	mov	r4,r22
 800a464:	900b883a 	mov	r5,r18
 800a468:	800fae40 	call	800fae4 <__srefill_r>
 800a46c:	103fea26 	beq	r2,zero,800a418 <__alt_data_end+0xfc00a418>
 800a470:	e009883a 	mov	r4,fp
 800a474:	8700dc1e 	bne	r16,fp,800a7e8 <__svfscanf_r+0x1470>
 800a478:	003e0f06 	br	8009cb8 <__alt_data_end+0xfc009cb8>
 800a47c:	da409d17 	ldw	r9,628(sp)
 800a480:	e0ffffc4 	addi	r3,fp,-1
 800a484:	4d000017 	ldw	r20,0(r9)
 800a488:	4c000104 	addi	r16,r9,4
 800a48c:	a0eb883a 	add	r21,r20,r3
 800a490:	a00b883a 	mov	r5,r20
 800a494:	00000106 	br	800a49c <__svfscanf_r+0x1124>
 800a498:	b80b883a 	mov	r5,r23
 800a49c:	90c00017 	ldw	r3,0(r18)
 800a4a0:	89800017 	ldw	r6,0(r17)
 800a4a4:	18800003 	ldbu	r2,0(r3)
 800a4a8:	3085883a 	add	r2,r6,r2
 800a4ac:	10800043 	ldbu	r2,1(r2)
 800a4b0:	1080020c 	andi	r2,r2,8
 800a4b4:	1000eb1e 	bne	r2,zero,800a864 <__svfscanf_r+0x14ec>
 800a4b8:	90800117 	ldw	r2,4(r18)
 800a4bc:	19800044 	addi	r6,r3,1
 800a4c0:	91800015 	stw	r6,0(r18)
 800a4c4:	10bfffc4 	addi	r2,r2,-1
 800a4c8:	90800115 	stw	r2,4(r18)
 800a4cc:	18800003 	ldbu	r2,0(r3)
 800a4d0:	2dc00044 	addi	r23,r5,1
 800a4d4:	b839883a 	mov	fp,r23
 800a4d8:	28800005 	stb	r2,0(r5)
 800a4dc:	2d400626 	beq	r5,r21,800a4f8 <__svfscanf_r+0x1180>
 800a4e0:	90800117 	ldw	r2,4(r18)
 800a4e4:	00bfec16 	blt	zero,r2,800a498 <__alt_data_end+0xfc00a498>
 800a4e8:	b009883a 	mov	r4,r22
 800a4ec:	900b883a 	mov	r5,r18
 800a4f0:	800fae40 	call	800fae4 <__srefill_r>
 800a4f4:	103fe826 	beq	r2,zero,800a498 <__alt_data_end+0xfc00a498>
 800a4f8:	da40a017 	ldw	r9,640(sp)
 800a4fc:	e529c83a 	sub	r20,fp,r20
 800a500:	dc009d15 	stw	r16,628(sp)
 800a504:	4a400044 	addi	r9,r9,1
 800a508:	e0000005 	stb	zero,0(fp)
 800a50c:	9d27883a 	add	r19,r19,r20
 800a510:	da40a015 	stw	r9,640(sp)
 800a514:	dc009c17 	ldw	r16,624(sp)
 800a518:	003bb806 	br	80093fc <__alt_data_end+0xfc0093fc>
 800a51c:	014000c4 	movi	r5,3
 800a520:	117d8e26 	beq	r2,r5,8009b5c <__alt_data_end+0xfc009b5c>
 800a524:	01400144 	movi	r5,5
 800a528:	117d8c26 	beq	r2,r5,8009b5c <__alt_data_end+0xfc009b5c>
 800a52c:	003d1706 	br	800998c <__alt_data_end+0xfc00998c>
 800a530:	00800084 	movi	r2,2
 800a534:	b0bd821e 	bne	r22,r2,8009b40 <__alt_data_end+0xfc009b40>
 800a538:	058000c4 	movi	r22,3
 800a53c:	003d0806 	br	8009960 <__alt_data_end+0xfc009960>
 800a540:	d9c09f17 	ldw	r7,636(sp)
 800a544:	da40a117 	ldw	r9,644(sp)
 800a548:	b009883a 	mov	r4,r22
 800a54c:	d9400104 	addi	r5,sp,4
 800a550:	000d883a 	mov	r6,zero
 800a554:	a8000005 	stb	zero,0(r21)
 800a558:	483ee83a 	callr	r9
 800a55c:	b8c0080c 	andi	r3,r23,32
 800a560:	18008126 	beq	r3,zero,800a768 <__svfscanf_r+0x13f0>
 800a564:	da409d17 	ldw	r9,628(sp)
 800a568:	48c00017 	ldw	r3,0(r9)
 800a56c:	4a400104 	addi	r9,r9,4
 800a570:	da409d15 	stw	r9,628(sp)
 800a574:	18800015 	stw	r2,0(r3)
 800a578:	da40a017 	ldw	r9,640(sp)
 800a57c:	4a400044 	addi	r9,r9,1
 800a580:	da40a015 	stw	r9,640(sp)
 800a584:	003f3e06 	br	800a280 <__alt_data_end+0xfc00a280>
 800a588:	d8c09904 	addi	r3,sp,612
 800a58c:	8400040c 	andi	r16,r16,16
 800a590:	1809883a 	mov	r4,r3
 800a594:	000b883a 	mov	r5,zero
 800a598:	01800204 	movi	r6,8
 800a59c:	d8c09e15 	stw	r3,632(sp)
 800a5a0:	80040b40 	call	80040b4 <memset>
 800a5a4:	80006c1e 	bne	r16,zero,800a758 <__svfscanf_r+0x13e0>
 800a5a8:	da409d17 	ldw	r9,628(sp)
 800a5ac:	4d000017 	ldw	r20,0(r9)
 800a5b0:	4a400104 	addi	r9,r9,4
 800a5b4:	da409d15 	stw	r9,628(sp)
 800a5b8:	002f883a 	mov	r23,zero
 800a5bc:	90800017 	ldw	r2,0(r18)
 800a5c0:	88c00017 	ldw	r3,0(r17)
 800a5c4:	10800003 	ldbu	r2,0(r2)
 800a5c8:	1885883a 	add	r2,r3,r2
 800a5cc:	10800043 	ldbu	r2,1(r2)
 800a5d0:	1080020c 	andi	r2,r2,8
 800a5d4:	1000011e 	bne	r2,zero,800a5dc <__svfscanf_r+0x1264>
 800a5d8:	e000e11e 	bne	fp,zero,800a960 <__svfscanf_r+0x15e8>
 800a5dc:	803ba51e 	bne	r16,zero,8009474 <__alt_data_end+0xfc009474>
 800a5e0:	da40a017 	ldw	r9,640(sp)
 800a5e4:	a0000015 	stw	zero,0(r20)
 800a5e8:	dc009c17 	ldw	r16,624(sp)
 800a5ec:	4a400044 	addi	r9,r9,1
 800a5f0:	da40a015 	stw	r9,640(sp)
 800a5f4:	003b8106 	br	80093fc <__alt_data_end+0xfc0093fc>
 800a5f8:	d8c09904 	addi	r3,sp,612
 800a5fc:	8400040c 	andi	r16,r16,16
 800a600:	1809883a 	mov	r4,r3
 800a604:	000b883a 	mov	r5,zero
 800a608:	01800204 	movi	r6,8
 800a60c:	d8c09e15 	stw	r3,632(sp)
 800a610:	80040b40 	call	80040b4 <memset>
 800a614:	8000521e 	bne	r16,zero,800a760 <__svfscanf_r+0x13e8>
 800a618:	da409d17 	ldw	r9,628(sp)
 800a61c:	4d000017 	ldw	r20,0(r9)
 800a620:	4a400104 	addi	r9,r9,4
 800a624:	da409d15 	stw	r9,628(sp)
 800a628:	002b883a 	mov	r21,zero
 800a62c:	800db340 	call	800db34 <__locale_mb_cur_max>
 800a630:	157da126 	beq	r2,r21,8009cb8 <__alt_data_end+0xfc009cb8>
 800a634:	90c00117 	ldw	r3,4(r18)
 800a638:	90800017 	ldw	r2,0(r18)
 800a63c:	d9000104 	addi	r4,sp,4
 800a640:	18ffffc4 	addi	r3,r3,-1
 800a644:	12400003 	ldbu	r9,0(r2)
 800a648:	90c00115 	stw	r3,4(r18)
 800a64c:	d8c09e17 	ldw	r3,632(sp)
 800a650:	10800044 	addi	r2,r2,1
 800a654:	90800015 	stw	r2,0(r18)
 800a658:	adc00044 	addi	r23,r21,1
 800a65c:	d8c00015 	stw	r3,0(sp)
 800a660:	256b883a 	add	r21,r4,r21
 800a664:	a00b883a 	mov	r5,r20
 800a668:	b009883a 	mov	r4,r22
 800a66c:	d9800104 	addi	r6,sp,4
 800a670:	b80f883a 	mov	r7,r23
 800a674:	aa400005 	stb	r9,0(r21)
 800a678:	800dd440 	call	800dd44 <_mbrtowc_r>
 800a67c:	013fffc4 	movi	r4,-1
 800a680:	113d8d26 	beq	r2,r4,8009cb8 <__alt_data_end+0xfc009cb8>
 800a684:	1000511e 	bne	r2,zero,800a7cc <__svfscanf_r+0x1454>
 800a688:	8000011e 	bne	r16,zero,800a690 <__svfscanf_r+0x1318>
 800a68c:	a0000015 	stw	zero,0(r20)
 800a690:	9de7883a 	add	r19,r19,r23
 800a694:	e73fffc4 	addi	fp,fp,-1
 800a698:	8000501e 	bne	r16,zero,800a7dc <__svfscanf_r+0x1464>
 800a69c:	a5000104 	addi	r20,r20,4
 800a6a0:	002b883a 	mov	r21,zero
 800a6a4:	90800117 	ldw	r2,4(r18)
 800a6a8:	0080240e 	bge	zero,r2,800a73c <__svfscanf_r+0x13c4>
 800a6ac:	e03fdf1e 	bne	fp,zero,800a62c <__alt_data_end+0xfc00a62c>
 800a6b0:	803d0126 	beq	r16,zero,8009ab8 <__alt_data_end+0xfc009ab8>
 800a6b4:	003b6f06 	br	8009474 <__alt_data_end+0xfc009474>
 800a6b8:	8280008c 	andi	r10,r16,2
 800a6bc:	503cf81e 	bne	r10,zero,8009aa0 <__alt_data_end+0xfc009aa0>
 800a6c0:	da409d17 	ldw	r9,628(sp)
 800a6c4:	180b883a 	mov	r5,r3
 800a6c8:	a009883a 	mov	r4,r20
 800a6cc:	4dc00017 	ldw	r23,0(r9)
 800a6d0:	4c000104 	addi	r16,r9,4
 800a6d4:	d8c0aa15 	stw	r3,680(sp)
 800a6d8:	800fc8c0 	call	800fc8c <__fpclassifyd>
 800a6dc:	d8c0aa17 	ldw	r3,680(sp)
 800a6e0:	1000c426 	beq	r2,zero,800a9f4 <__svfscanf_r+0x167c>
 800a6e4:	a009883a 	mov	r4,r20
 800a6e8:	180b883a 	mov	r5,r3
 800a6ec:	8019dc00 	call	8019dc0 <__truncdfsf2>
 800a6f0:	b8800015 	stw	r2,0(r23)
 800a6f4:	dc009d15 	stw	r16,628(sp)
 800a6f8:	003cef06 	br	8009ab8 <__alt_data_end+0xfc009ab8>
 800a6fc:	00be9fc4 	movi	r2,-1409
 800a700:	b8ae703a 	and	r23,r23,r2
 800a704:	003ec906 	br	800a22c <__alt_data_end+0xfc00a22c>
 800a708:	a141c00c 	andi	r5,r20,1792
 800a70c:	0081c004 	movi	r2,1792
 800a710:	28bd0b1e 	bne	r5,r2,8009b40 <__alt_data_end+0xfc009b40>
 800a714:	a0e8703a 	and	r20,r20,r3
 800a718:	05800044 	movi	r22,1
 800a71c:	003c9006 	br	8009960 <__alt_data_end+0xfc009960>
 800a720:	a021883a 	mov	r16,r20
 800a724:	00bfbfc4 	movi	r2,-257
 800a728:	a829883a 	mov	r20,r21
 800a72c:	80a0703a 	and	r16,r16,r2
 800a730:	b02b883a 	mov	r21,r22
 800a734:	e02d883a 	mov	r22,fp
 800a738:	003c9a06 	br	80099a4 <__alt_data_end+0xfc0099a4>
 800a73c:	b009883a 	mov	r4,r22
 800a740:	900b883a 	mov	r5,r18
 800a744:	800fae40 	call	800fae4 <__srefill_r>
 800a748:	103fd826 	beq	r2,zero,800a6ac <__alt_data_end+0xfc00a6ac>
 800a74c:	a83d5a1e 	bne	r21,zero,8009cb8 <__alt_data_end+0xfc009cb8>
 800a750:	803cd926 	beq	r16,zero,8009ab8 <__alt_data_end+0xfc009ab8>
 800a754:	003b4706 	br	8009474 <__alt_data_end+0xfc009474>
 800a758:	dd009b04 	addi	r20,sp,620
 800a75c:	003f9606 	br	800a5b8 <__alt_data_end+0xfc00a5b8>
 800a760:	0029883a 	mov	r20,zero
 800a764:	003fb006 	br	800a628 <__alt_data_end+0xfc00a628>
 800a768:	b8c0010c 	andi	r3,r23,4
 800a76c:	18006826 	beq	r3,zero,800a910 <__svfscanf_r+0x1598>
 800a770:	da409d17 	ldw	r9,628(sp)
 800a774:	48c00017 	ldw	r3,0(r9)
 800a778:	4a400104 	addi	r9,r9,4
 800a77c:	da409d15 	stw	r9,628(sp)
 800a780:	1880000d 	sth	r2,0(r3)
 800a784:	003f7c06 	br	800a578 <__alt_data_end+0xfc00a578>
 800a788:	d8c0a517 	ldw	r3,660(sp)
 800a78c:	000d883a 	mov	r6,zero
 800a790:	b009883a 	mov	r4,r22
 800a794:	19400044 	addi	r5,r3,1
 800a798:	01c00284 	movi	r7,10
 800a79c:	80117900 	call	8011790 <_strtol_r>
 800a7a0:	da40a317 	ldw	r9,652(sp)
 800a7a4:	ddc0a517 	ldw	r23,660(sp)
 800a7a8:	124dc83a 	sub	r6,r2,r9
 800a7ac:	d88055c4 	addi	r2,sp,343
 800a7b0:	b8800136 	bltu	r23,r2,800a7b8 <__svfscanf_r+0x1440>
 800a7b4:	ddc05584 	addi	r23,sp,342
 800a7b8:	014200b4 	movhi	r5,2050
 800a7bc:	2977f504 	addi	r5,r5,-8236
 800a7c0:	b809883a 	mov	r4,r23
 800a7c4:	80047400 	call	8004740 <sprintf>
 800a7c8:	003cae06 	br	8009a84 <__alt_data_end+0xfc009a84>
 800a7cc:	017fff84 	movi	r5,-2
 800a7d0:	117faf1e 	bne	r2,r5,800a690 <__alt_data_end+0xfc00a690>
 800a7d4:	b82b883a 	mov	r21,r23
 800a7d8:	003fb206 	br	800a6a4 <__alt_data_end+0xfc00a6a4>
 800a7dc:	002b883a 	mov	r21,zero
 800a7e0:	003fb006 	br	800a6a4 <__alt_data_end+0xfc00a6a4>
 800a7e4:	2809883a 	mov	r4,r5
 800a7e8:	2421c83a 	sub	r16,r4,r16
 800a7ec:	803eff26 	beq	r16,zero,800a3ec <__alt_data_end+0xfc00a3ec>
 800a7f0:	da40a017 	ldw	r9,640(sp)
 800a7f4:	20000005 	stb	zero,0(r4)
 800a7f8:	ddc09d15 	stw	r23,628(sp)
 800a7fc:	4a400044 	addi	r9,r9,1
 800a800:	da40a015 	stw	r9,640(sp)
 800a804:	9c27883a 	add	r19,r19,r16
 800a808:	003de106 	br	8009f90 <__alt_data_end+0xfc009f90>
 800a80c:	e009883a 	mov	r4,fp
 800a810:	003ff506 	br	800a7e8 <__alt_data_end+0xfc00a7e8>
 800a814:	803d2826 	beq	r16,zero,8009cb8 <__alt_data_end+0xfc009cb8>
 800a818:	9c27883a 	add	r19,r19,r16
 800a81c:	003ddc06 	br	8009f90 <__alt_data_end+0xfc009f90>
 800a820:	da409d17 	ldw	r9,628(sp)
 800a824:	dc800015 	stw	r18,0(sp)
 800a828:	b009883a 	mov	r4,r22
 800a82c:	49400017 	ldw	r5,0(r9)
 800a830:	01800044 	movi	r6,1
 800a834:	e00f883a 	mov	r7,fp
 800a838:	800cdc40 	call	800cdc4 <_fread_r>
 800a83c:	da409d17 	ldw	r9,628(sp)
 800a840:	48c00104 	addi	r3,r9,4
 800a844:	103d1c26 	beq	r2,zero,8009cb8 <__alt_data_end+0xfc009cb8>
 800a848:	da40a017 	ldw	r9,640(sp)
 800a84c:	14e7883a 	add	r19,r2,r19
 800a850:	d8c09d15 	stw	r3,628(sp)
 800a854:	4a400044 	addi	r9,r9,1
 800a858:	da40a015 	stw	r9,640(sp)
 800a85c:	dc009c17 	ldw	r16,624(sp)
 800a860:	003ae606 	br	80093fc <__alt_data_end+0xfc0093fc>
 800a864:	2839883a 	mov	fp,r5
 800a868:	003f2306 	br	800a4f8 <__alt_data_end+0xfc00a4f8>
 800a86c:	a97fffc7 	ldb	r5,-1(r21)
 800a870:	b009883a 	mov	r4,r22
 800a874:	900d883a 	mov	r6,r18
 800a878:	ad7fffc4 	addi	r21,r21,-1
 800a87c:	80137c00 	call	80137c0 <_ungetc_r>
 800a880:	003e7b06 	br	800a270 <__alt_data_end+0xfc00a270>
 800a884:	b009883a 	mov	r4,r22
 800a888:	900b883a 	mov	r5,r18
 800a88c:	800fae40 	call	800fae4 <__srefill_r>
 800a890:	103b8826 	beq	r2,zero,80096b4 <__alt_data_end+0xfc0096b4>
 800a894:	003d0806 	br	8009cb8 <__alt_data_end+0xfc009cb8>
 800a898:	a5c00083 	ldbu	r23,2(r20)
 800a89c:	84000094 	ori	r16,r16,2
 800a8a0:	a5000084 	addi	r20,r20,2
 800a8a4:	003afe06 	br	80094a0 <__alt_data_end+0xfc0094a0>
 800a8a8:	da409e17 	ldw	r9,632(sp)
 800a8ac:	d8c0a217 	ldw	r3,648(sp)
 800a8b0:	48c5c83a 	sub	r2,r9,r3
 800a8b4:	008dc83a 	sub	r6,zero,r2
 800a8b8:	103fbc1e 	bne	r2,zero,800a7ac <__alt_data_end+0xfc00a7ac>
 800a8bc:	003c7106 	br	8009a84 <__alt_data_end+0xfc009a84>
 800a8c0:	80e0b03a 	or	r16,r16,r3
 800a8c4:	003d1e06 	br	8009d40 <__alt_data_end+0xfc009d40>
 800a8c8:	8080004c 	andi	r2,r16,1
 800a8cc:	10000a1e 	bne	r2,zero,800a8f8 <__svfscanf_r+0x1580>
 800a8d0:	8400008c 	andi	r16,r16,2
 800a8d4:	80000826 	beq	r16,zero,800a8f8 <__svfscanf_r+0x1580>
 800a8d8:	da409d17 	ldw	r9,628(sp)
 800a8dc:	9807d7fa 	srai	r3,r19,31
 800a8e0:	48800017 	ldw	r2,0(r9)
 800a8e4:	4a400104 	addi	r9,r9,4
 800a8e8:	da409d15 	stw	r9,628(sp)
 800a8ec:	14c00015 	stw	r19,0(r2)
 800a8f0:	10c00115 	stw	r3,4(r2)
 800a8f4:	003adf06 	br	8009474 <__alt_data_end+0xfc009474>
 800a8f8:	da409d17 	ldw	r9,628(sp)
 800a8fc:	48800017 	ldw	r2,0(r9)
 800a900:	4a400104 	addi	r9,r9,4
 800a904:	da409d15 	stw	r9,628(sp)
 800a908:	14c00015 	stw	r19,0(r2)
 800a90c:	003ad906 	br	8009474 <__alt_data_end+0xfc009474>
 800a910:	b8c0004c 	andi	r3,r23,1
 800a914:	183f131e 	bne	r3,zero,800a564 <__alt_data_end+0xfc00a564>
 800a918:	bdc0008c 	andi	r23,r23,2
 800a91c:	b83f1126 	beq	r23,zero,800a564 <__alt_data_end+0xfc00a564>
 800a920:	da40a117 	ldw	r9,644(sp)
 800a924:	00820074 	movhi	r2,2049
 800a928:	10874c04 	addi	r2,r2,7472
 800a92c:	b009883a 	mov	r4,r22
 800a930:	d9400104 	addi	r5,sp,4
 800a934:	000d883a 	mov	r6,zero
 800a938:	d9c09f17 	ldw	r7,636(sp)
 800a93c:	48806126 	beq	r9,r2,800aac4 <__svfscanf_r+0x174c>
 800a940:	8011a1c0 	call	8011a1c <_strtoll_r>
 800a944:	da409d17 	ldw	r9,628(sp)
 800a948:	49000017 	ldw	r4,0(r9)
 800a94c:	4a400104 	addi	r9,r9,4
 800a950:	da409d15 	stw	r9,628(sp)
 800a954:	20800015 	stw	r2,0(r4)
 800a958:	20c00115 	stw	r3,4(r4)
 800a95c:	003f0606 	br	800a578 <__alt_data_end+0xfc00a578>
 800a960:	800db340 	call	800db34 <__locale_mb_cur_max>
 800a964:	15fcd426 	beq	r2,r23,8009cb8 <__alt_data_end+0xfc009cb8>
 800a968:	90800017 	ldw	r2,0(r18)
 800a96c:	90c00117 	ldw	r3,4(r18)
 800a970:	da409e17 	ldw	r9,632(sp)
 800a974:	12000003 	ldbu	r8,0(r2)
 800a978:	18ffffc4 	addi	r3,r3,-1
 800a97c:	10800044 	addi	r2,r2,1
 800a980:	90c00115 	stw	r3,4(r18)
 800a984:	d9000104 	addi	r4,sp,4
 800a988:	90800015 	stw	r2,0(r18)
 800a98c:	bd400044 	addi	r21,r23,1
 800a990:	da400015 	stw	r9,0(sp)
 800a994:	25ef883a 	add	r23,r4,r23
 800a998:	a00b883a 	mov	r5,r20
 800a99c:	b009883a 	mov	r4,r22
 800a9a0:	d9800104 	addi	r6,sp,4
 800a9a4:	a80f883a 	mov	r7,r21
 800a9a8:	ba000005 	stb	r8,0(r23)
 800a9ac:	800dd440 	call	800dd44 <_mbrtowc_r>
 800a9b0:	00ffffc4 	movi	r3,-1
 800a9b4:	10fcc026 	beq	r2,r3,8009cb8 <__alt_data_end+0xfc009cb8>
 800a9b8:	1000161e 	bne	r2,zero,800aa14 <__svfscanf_r+0x169c>
 800a9bc:	a0000015 	stw	zero,0(r20)
 800a9c0:	0009883a 	mov	r4,zero
 800a9c4:	800da7c0 	call	800da7c <iswspace>
 800a9c8:	10001d26 	beq	r2,zero,800aa40 <__svfscanf_r+0x16c8>
 800a9cc:	a83f0326 	beq	r21,zero,800a5dc <__alt_data_end+0xfc00a5dc>
 800a9d0:	ad7fffc4 	addi	r21,r21,-1
 800a9d4:	d9400104 	addi	r5,sp,4
 800a9d8:	2d45883a 	add	r2,r5,r21
 800a9dc:	11400003 	ldbu	r5,0(r2)
 800a9e0:	b009883a 	mov	r4,r22
 800a9e4:	900d883a 	mov	r6,r18
 800a9e8:	80137c00 	call	80137c0 <_ungetc_r>
 800a9ec:	a83ff81e 	bne	r21,zero,800a9d0 <__alt_data_end+0xfc00a9d0>
 800a9f0:	003efa06 	br	800a5dc <__alt_data_end+0xfc00a5dc>
 800a9f4:	0009883a 	mov	r4,zero
 800a9f8:	800fdc00 	call	800fdc0 <nanf>
 800a9fc:	b8800015 	stw	r2,0(r23)
 800aa00:	dc009d15 	stw	r16,628(sp)
 800aa04:	003c2c06 	br	8009ab8 <__alt_data_end+0xfc009ab8>
 800aa08:	a0e8703a 	and	r20,r20,r3
 800aa0c:	05400044 	movi	r21,1
 800aa10:	003bd306 	br	8009960 <__alt_data_end+0xfc009960>
 800aa14:	013fff84 	movi	r4,-2
 800aa18:	11000f1e 	bne	r2,r4,800aa58 <__svfscanf_r+0x16e0>
 800aa1c:	a82f883a 	mov	r23,r21
 800aa20:	90800117 	ldw	r2,4(r18)
 800aa24:	00bee516 	blt	zero,r2,800a5bc <__alt_data_end+0xfc00a5bc>
 800aa28:	b009883a 	mov	r4,r22
 800aa2c:	900b883a 	mov	r5,r18
 800aa30:	800fae40 	call	800fae4 <__srefill_r>
 800aa34:	103ee126 	beq	r2,zero,800a5bc <__alt_data_end+0xfc00a5bc>
 800aa38:	b83c9f1e 	bne	r23,zero,8009cb8 <__alt_data_end+0xfc009cb8>
 800aa3c:	003ee706 	br	800a5dc <__alt_data_end+0xfc00a5dc>
 800aa40:	9d67883a 	add	r19,r19,r21
 800aa44:	e73fffc4 	addi	fp,fp,-1
 800aa48:	8000051e 	bne	r16,zero,800aa60 <__svfscanf_r+0x16e8>
 800aa4c:	a5000104 	addi	r20,r20,4
 800aa50:	002f883a 	mov	r23,zero
 800aa54:	003ff206 	br	800aa20 <__alt_data_end+0xfc00aa20>
 800aa58:	a1000017 	ldw	r4,0(r20)
 800aa5c:	003fd906 	br	800a9c4 <__alt_data_end+0xfc00a9c4>
 800aa60:	002f883a 	mov	r23,zero
 800aa64:	003fee06 	br	800aa20 <__alt_data_end+0xfc00aa20>
 800aa68:	d8c00104 	addi	r3,sp,4
 800aa6c:	9039883a 	mov	fp,r18
 800aa70:	1dfe5e2e 	bgeu	r3,r23,800a3ec <__alt_data_end+0xfc00a3ec>
 800aa74:	bdffffc4 	addi	r23,r23,-1
 800aa78:	b9400007 	ldb	r5,0(r23)
 800aa7c:	b009883a 	mov	r4,r22
 800aa80:	e00d883a 	mov	r6,fp
 800aa84:	80137c00 	call	80137c0 <_ungetc_r>
 800aa88:	d9000104 	addi	r4,sp,4
 800aa8c:	b93ff91e 	bne	r23,r4,800aa74 <__alt_data_end+0xfc00aa74>
 800aa90:	003e5606 	br	800a3ec <__alt_data_end+0xfc00a3ec>
 800aa94:	d9000104 	addi	r4,sp,4
 800aa98:	9039883a 	mov	fp,r18
 800aa9c:	b821883a 	mov	r16,r23
 800aaa0:	25fe522e 	bgeu	r4,r23,800a3ec <__alt_data_end+0xfc00a3ec>
 800aaa4:	843fffc4 	addi	r16,r16,-1
 800aaa8:	81400007 	ldb	r5,0(r16)
 800aaac:	b009883a 	mov	r4,r22
 800aab0:	e00d883a 	mov	r6,fp
 800aab4:	80137c00 	call	80137c0 <_ungetc_r>
 800aab8:	d9400104 	addi	r5,sp,4
 800aabc:	817ff91e 	bne	r16,r5,800aaa4 <__alt_data_end+0xfc00aaa4>
 800aac0:	003e4a06 	br	800a3ec <__alt_data_end+0xfc00a3ec>
 800aac4:	80120000 	call	8012000 <_strtoull_r>
 800aac8:	003f9e06 	br	800a944 <__alt_data_end+0xfc00a944>

0800aacc <vfscanf>:
 800aacc:	defffb04 	addi	sp,sp,-20
 800aad0:	dc000115 	stw	r16,4(sp)
 800aad4:	040200b4 	movhi	r16,2050
 800aad8:	84009004 	addi	r16,r16,576
 800aadc:	dc800315 	stw	r18,12(sp)
 800aae0:	2025883a 	mov	r18,r4
 800aae4:	81000017 	ldw	r4,0(r16)
 800aae8:	dc400215 	stw	r17,8(sp)
 800aaec:	dfc00415 	stw	ra,16(sp)
 800aaf0:	2823883a 	mov	r17,r5
 800aaf4:	300f883a 	mov	r7,r6
 800aaf8:	20000626 	beq	r4,zero,800ab14 <vfscanf+0x48>
 800aafc:	20800e17 	ldw	r2,56(r4)
 800ab00:	1000041e 	bne	r2,zero,800ab14 <vfscanf+0x48>
 800ab04:	d9800015 	stw	r6,0(sp)
 800ab08:	800cd740 	call	800cd74 <__sinit>
 800ab0c:	81000017 	ldw	r4,0(r16)
 800ab10:	d9c00017 	ldw	r7,0(sp)
 800ab14:	900b883a 	mov	r5,r18
 800ab18:	880d883a 	mov	r6,r17
 800ab1c:	dfc00417 	ldw	ra,16(sp)
 800ab20:	dc800317 	ldw	r18,12(sp)
 800ab24:	dc400217 	ldw	r17,8(sp)
 800ab28:	dc000117 	ldw	r16,4(sp)
 800ab2c:	dec00504 	addi	sp,sp,20
 800ab30:	80093781 	jmpi	8009378 <__svfscanf_r>

0800ab34 <__svfscanf>:
 800ab34:	2007883a 	mov	r3,r4
 800ab38:	010200b4 	movhi	r4,2050
 800ab3c:	21009004 	addi	r4,r4,576
 800ab40:	21000017 	ldw	r4,0(r4)
 800ab44:	2805883a 	mov	r2,r5
 800ab48:	300f883a 	mov	r7,r6
 800ab4c:	180b883a 	mov	r5,r3
 800ab50:	100d883a 	mov	r6,r2
 800ab54:	80093781 	jmpi	8009378 <__svfscanf_r>

0800ab58 <_vfscanf_r>:
 800ab58:	defffb04 	addi	sp,sp,-20
 800ab5c:	dc000315 	stw	r16,12(sp)
 800ab60:	dfc00415 	stw	ra,16(sp)
 800ab64:	2021883a 	mov	r16,r4
 800ab68:	20000926 	beq	r4,zero,800ab90 <_vfscanf_r+0x38>
 800ab6c:	20800e17 	ldw	r2,56(r4)
 800ab70:	1000071e 	bne	r2,zero,800ab90 <_vfscanf_r+0x38>
 800ab74:	d9400015 	stw	r5,0(sp)
 800ab78:	d9800115 	stw	r6,4(sp)
 800ab7c:	d9c00215 	stw	r7,8(sp)
 800ab80:	800cd740 	call	800cd74 <__sinit>
 800ab84:	d9c00217 	ldw	r7,8(sp)
 800ab88:	d9800117 	ldw	r6,4(sp)
 800ab8c:	d9400017 	ldw	r5,0(sp)
 800ab90:	8009883a 	mov	r4,r16
 800ab94:	dfc00417 	ldw	ra,16(sp)
 800ab98:	dc000317 	ldw	r16,12(sp)
 800ab9c:	dec00504 	addi	sp,sp,20
 800aba0:	80093781 	jmpi	8009378 <__svfscanf_r>

0800aba4 <__swsetup_r>:
 800aba4:	008200b4 	movhi	r2,2050
 800aba8:	defffd04 	addi	sp,sp,-12
 800abac:	10809004 	addi	r2,r2,576
 800abb0:	dc400115 	stw	r17,4(sp)
 800abb4:	2023883a 	mov	r17,r4
 800abb8:	11000017 	ldw	r4,0(r2)
 800abbc:	dc000015 	stw	r16,0(sp)
 800abc0:	dfc00215 	stw	ra,8(sp)
 800abc4:	2821883a 	mov	r16,r5
 800abc8:	20000226 	beq	r4,zero,800abd4 <__swsetup_r+0x30>
 800abcc:	20c00e17 	ldw	r3,56(r4)
 800abd0:	18002e26 	beq	r3,zero,800ac8c <__swsetup_r+0xe8>
 800abd4:	8080030b 	ldhu	r2,12(r16)
 800abd8:	10c0020c 	andi	r3,r2,8
 800abdc:	100d883a 	mov	r6,r2
 800abe0:	18000f26 	beq	r3,zero,800ac20 <__swsetup_r+0x7c>
 800abe4:	80c00417 	ldw	r3,16(r16)
 800abe8:	18001526 	beq	r3,zero,800ac40 <__swsetup_r+0x9c>
 800abec:	1100004c 	andi	r4,r2,1
 800abf0:	20001c1e 	bne	r4,zero,800ac64 <__swsetup_r+0xc0>
 800abf4:	1080008c 	andi	r2,r2,2
 800abf8:	1000261e 	bne	r2,zero,800ac94 <__swsetup_r+0xf0>
 800abfc:	80800517 	ldw	r2,20(r16)
 800ac00:	80800215 	stw	r2,8(r16)
 800ac04:	18001c26 	beq	r3,zero,800ac78 <__swsetup_r+0xd4>
 800ac08:	0005883a 	mov	r2,zero
 800ac0c:	dfc00217 	ldw	ra,8(sp)
 800ac10:	dc400117 	ldw	r17,4(sp)
 800ac14:	dc000017 	ldw	r16,0(sp)
 800ac18:	dec00304 	addi	sp,sp,12
 800ac1c:	f800283a 	ret
 800ac20:	3080040c 	andi	r2,r6,16
 800ac24:	10001726 	beq	r2,zero,800ac84 <__swsetup_r+0xe0>
 800ac28:	3080010c 	andi	r2,r6,4
 800ac2c:	10001b1e 	bne	r2,zero,800ac9c <__swsetup_r+0xf8>
 800ac30:	80c00417 	ldw	r3,16(r16)
 800ac34:	30800214 	ori	r2,r6,8
 800ac38:	8080030d 	sth	r2,12(r16)
 800ac3c:	183feb1e 	bne	r3,zero,800abec <__alt_data_end+0xfc00abec>
 800ac40:	1140a00c 	andi	r5,r2,640
 800ac44:	01008004 	movi	r4,512
 800ac48:	293fe826 	beq	r5,r4,800abec <__alt_data_end+0xfc00abec>
 800ac4c:	8809883a 	mov	r4,r17
 800ac50:	800b883a 	mov	r5,r16
 800ac54:	800db8c0 	call	800db8c <__smakebuf_r>
 800ac58:	8080030b 	ldhu	r2,12(r16)
 800ac5c:	80c00417 	ldw	r3,16(r16)
 800ac60:	003fe206 	br	800abec <__alt_data_end+0xfc00abec>
 800ac64:	80800517 	ldw	r2,20(r16)
 800ac68:	80000215 	stw	zero,8(r16)
 800ac6c:	0085c83a 	sub	r2,zero,r2
 800ac70:	80800615 	stw	r2,24(r16)
 800ac74:	183fe41e 	bne	r3,zero,800ac08 <__alt_data_end+0xfc00ac08>
 800ac78:	8080030b 	ldhu	r2,12(r16)
 800ac7c:	1080200c 	andi	r2,r2,128
 800ac80:	103fe226 	beq	r2,zero,800ac0c <__alt_data_end+0xfc00ac0c>
 800ac84:	00bfffc4 	movi	r2,-1
 800ac88:	003fe006 	br	800ac0c <__alt_data_end+0xfc00ac0c>
 800ac8c:	800cd740 	call	800cd74 <__sinit>
 800ac90:	003fd006 	br	800abd4 <__alt_data_end+0xfc00abd4>
 800ac94:	0005883a 	mov	r2,zero
 800ac98:	003fd906 	br	800ac00 <__alt_data_end+0xfc00ac00>
 800ac9c:	81400c17 	ldw	r5,48(r16)
 800aca0:	28000626 	beq	r5,zero,800acbc <__swsetup_r+0x118>
 800aca4:	80801004 	addi	r2,r16,64
 800aca8:	28800326 	beq	r5,r2,800acb8 <__swsetup_r+0x114>
 800acac:	8809883a 	mov	r4,r17
 800acb0:	800d1780 	call	800d178 <_free_r>
 800acb4:	8180030b 	ldhu	r6,12(r16)
 800acb8:	80000c15 	stw	zero,48(r16)
 800acbc:	80c00417 	ldw	r3,16(r16)
 800acc0:	00bff6c4 	movi	r2,-37
 800acc4:	118c703a 	and	r6,r2,r6
 800acc8:	80000115 	stw	zero,4(r16)
 800accc:	80c00015 	stw	r3,0(r16)
 800acd0:	003fd806 	br	800ac34 <__alt_data_end+0xfc00ac34>

0800acd4 <__call_exitprocs>:
 800acd4:	008200b4 	movhi	r2,2050
 800acd8:	10808f04 	addi	r2,r2,572
 800acdc:	10800017 	ldw	r2,0(r2)
 800ace0:	defff404 	addi	sp,sp,-48
 800ace4:	dd800815 	stw	r22,32(sp)
 800ace8:	d8800015 	stw	r2,0(sp)
 800acec:	10805204 	addi	r2,r2,328
 800acf0:	dd000615 	stw	r20,24(sp)
 800acf4:	dc800415 	stw	r18,16(sp)
 800acf8:	dfc00b15 	stw	ra,44(sp)
 800acfc:	df000a15 	stw	fp,40(sp)
 800ad00:	ddc00915 	stw	r23,36(sp)
 800ad04:	dd400715 	stw	r21,28(sp)
 800ad08:	dcc00515 	stw	r19,20(sp)
 800ad0c:	dc400315 	stw	r17,12(sp)
 800ad10:	dc000215 	stw	r16,8(sp)
 800ad14:	2025883a 	mov	r18,r4
 800ad18:	2829883a 	mov	r20,r5
 800ad1c:	d8800115 	stw	r2,4(sp)
 800ad20:	05bfffc4 	movi	r22,-1
 800ad24:	d8800017 	ldw	r2,0(sp)
 800ad28:	14c05217 	ldw	r19,328(r2)
 800ad2c:	98001d26 	beq	r19,zero,800ada4 <__call_exitprocs+0xd0>
 800ad30:	dd400117 	ldw	r21,4(sp)
 800ad34:	98800117 	ldw	r2,4(r19)
 800ad38:	173fffc4 	addi	fp,r2,-1
 800ad3c:	e0000d16 	blt	fp,zero,800ad74 <__call_exitprocs+0xa0>
 800ad40:	14000044 	addi	r16,r2,1
 800ad44:	8421883a 	add	r16,r16,r16
 800ad48:	8421883a 	add	r16,r16,r16
 800ad4c:	84402004 	addi	r17,r16,128
 800ad50:	9c63883a 	add	r17,r19,r17
 800ad54:	9c21883a 	add	r16,r19,r16
 800ad58:	a0001e26 	beq	r20,zero,800add4 <__call_exitprocs+0x100>
 800ad5c:	80804017 	ldw	r2,256(r16)
 800ad60:	15001c26 	beq	r2,r20,800add4 <__call_exitprocs+0x100>
 800ad64:	e73fffc4 	addi	fp,fp,-1
 800ad68:	843fff04 	addi	r16,r16,-4
 800ad6c:	8c7fff04 	addi	r17,r17,-4
 800ad70:	e5bff91e 	bne	fp,r22,800ad58 <__alt_data_end+0xfc00ad58>
 800ad74:	00820034 	movhi	r2,2048
 800ad78:	108e3e04 	addi	r2,r2,14584
 800ad7c:	10000926 	beq	r2,zero,800ada4 <__call_exitprocs+0xd0>
 800ad80:	98800117 	ldw	r2,4(r19)
 800ad84:	1000311e 	bne	r2,zero,800ae4c <__call_exitprocs+0x178>
 800ad88:	98800017 	ldw	r2,0(r19)
 800ad8c:	10003426 	beq	r2,zero,800ae60 <__call_exitprocs+0x18c>
 800ad90:	9809883a 	mov	r4,r19
 800ad94:	a8800015 	stw	r2,0(r21)
 800ad98:	80038f80 	call	80038f8 <free>
 800ad9c:	acc00017 	ldw	r19,0(r21)
 800ada0:	983fe41e 	bne	r19,zero,800ad34 <__alt_data_end+0xfc00ad34>
 800ada4:	dfc00b17 	ldw	ra,44(sp)
 800ada8:	df000a17 	ldw	fp,40(sp)
 800adac:	ddc00917 	ldw	r23,36(sp)
 800adb0:	dd800817 	ldw	r22,32(sp)
 800adb4:	dd400717 	ldw	r21,28(sp)
 800adb8:	dd000617 	ldw	r20,24(sp)
 800adbc:	dcc00517 	ldw	r19,20(sp)
 800adc0:	dc800417 	ldw	r18,16(sp)
 800adc4:	dc400317 	ldw	r17,12(sp)
 800adc8:	dc000217 	ldw	r16,8(sp)
 800adcc:	dec00c04 	addi	sp,sp,48
 800add0:	f800283a 	ret
 800add4:	98800117 	ldw	r2,4(r19)
 800add8:	80c00017 	ldw	r3,0(r16)
 800addc:	10bfffc4 	addi	r2,r2,-1
 800ade0:	17001526 	beq	r2,fp,800ae38 <__call_exitprocs+0x164>
 800ade4:	80000015 	stw	zero,0(r16)
 800ade8:	183fde26 	beq	r3,zero,800ad64 <__alt_data_end+0xfc00ad64>
 800adec:	00800044 	movi	r2,1
 800adf0:	1708983a 	sll	r4,r2,fp
 800adf4:	98806217 	ldw	r2,392(r19)
 800adf8:	9dc00117 	ldw	r23,4(r19)
 800adfc:	2084703a 	and	r2,r4,r2
 800ae00:	1000061e 	bne	r2,zero,800ae1c <__call_exitprocs+0x148>
 800ae04:	183ee83a 	callr	r3
 800ae08:	98800117 	ldw	r2,4(r19)
 800ae0c:	15ffc51e 	bne	r2,r23,800ad24 <__alt_data_end+0xfc00ad24>
 800ae10:	a8800017 	ldw	r2,0(r21)
 800ae14:	14ffd326 	beq	r2,r19,800ad64 <__alt_data_end+0xfc00ad64>
 800ae18:	003fc206 	br	800ad24 <__alt_data_end+0xfc00ad24>
 800ae1c:	98806317 	ldw	r2,396(r19)
 800ae20:	2084703a 	and	r2,r4,r2
 800ae24:	1000061e 	bne	r2,zero,800ae40 <__call_exitprocs+0x16c>
 800ae28:	89400017 	ldw	r5,0(r17)
 800ae2c:	9009883a 	mov	r4,r18
 800ae30:	183ee83a 	callr	r3
 800ae34:	003ff406 	br	800ae08 <__alt_data_end+0xfc00ae08>
 800ae38:	9f000115 	stw	fp,4(r19)
 800ae3c:	003fea06 	br	800ade8 <__alt_data_end+0xfc00ade8>
 800ae40:	89000017 	ldw	r4,0(r17)
 800ae44:	183ee83a 	callr	r3
 800ae48:	003fef06 	br	800ae08 <__alt_data_end+0xfc00ae08>
 800ae4c:	98800017 	ldw	r2,0(r19)
 800ae50:	982b883a 	mov	r21,r19
 800ae54:	1027883a 	mov	r19,r2
 800ae58:	983fb61e 	bne	r19,zero,800ad34 <__alt_data_end+0xfc00ad34>
 800ae5c:	003fd106 	br	800ada4 <__alt_data_end+0xfc00ada4>
 800ae60:	0005883a 	mov	r2,zero
 800ae64:	003ffa06 	br	800ae50 <__alt_data_end+0xfc00ae50>

0800ae68 <quorem>:
 800ae68:	defff204 	addi	sp,sp,-56
 800ae6c:	ddc00b15 	stw	r23,44(sp)
 800ae70:	20800417 	ldw	r2,16(r4)
 800ae74:	2dc00417 	ldw	r23,16(r5)
 800ae78:	dfc00d15 	stw	ra,52(sp)
 800ae7c:	df000c15 	stw	fp,48(sp)
 800ae80:	dd800a15 	stw	r22,40(sp)
 800ae84:	dd400915 	stw	r21,36(sp)
 800ae88:	dd000815 	stw	r20,32(sp)
 800ae8c:	dcc00715 	stw	r19,28(sp)
 800ae90:	dc800615 	stw	r18,24(sp)
 800ae94:	dc400515 	stw	r17,20(sp)
 800ae98:	dc000415 	stw	r16,16(sp)
 800ae9c:	15c07a16 	blt	r2,r23,800b088 <quorem+0x220>
 800aea0:	bdffffc4 	addi	r23,r23,-1
 800aea4:	bde9883a 	add	r20,r23,r23
 800aea8:	28c00504 	addi	r3,r5,20
 800aeac:	a529883a 	add	r20,r20,r20
 800aeb0:	1d39883a 	add	fp,r3,r20
 800aeb4:	24c00504 	addi	r19,r4,20
 800aeb8:	d9400215 	stw	r5,8(sp)
 800aebc:	9d29883a 	add	r20,r19,r20
 800aec0:	e1400017 	ldw	r5,0(fp)
 800aec4:	d9000015 	stw	r4,0(sp)
 800aec8:	a1000017 	ldw	r4,0(r20)
 800aecc:	29400044 	addi	r5,r5,1
 800aed0:	d8c00115 	stw	r3,4(sp)
 800aed4:	dd000315 	stw	r20,12(sp)
 800aed8:	80174340 	call	8017434 <__udivsi3>
 800aedc:	1025883a 	mov	r18,r2
 800aee0:	10003026 	beq	r2,zero,800afa4 <quorem+0x13c>
 800aee4:	dc400117 	ldw	r17,4(sp)
 800aee8:	9829883a 	mov	r20,r19
 800aeec:	002d883a 	mov	r22,zero
 800aef0:	0021883a 	mov	r16,zero
 800aef4:	8d400017 	ldw	r21,0(r17)
 800aef8:	900b883a 	mov	r5,r18
 800aefc:	8c400104 	addi	r17,r17,4
 800af00:	a93fffcc 	andi	r4,r21,65535
 800af04:	800334c0 	call	800334c <__mulsi3>
 800af08:	a808d43a 	srli	r4,r21,16
 800af0c:	900b883a 	mov	r5,r18
 800af10:	b0ad883a 	add	r22,r22,r2
 800af14:	800334c0 	call	800334c <__mulsi3>
 800af18:	a1000017 	ldw	r4,0(r20)
 800af1c:	b00cd43a 	srli	r6,r22,16
 800af20:	b0ffffcc 	andi	r3,r22,65535
 800af24:	217fffcc 	andi	r5,r4,65535
 800af28:	2c21883a 	add	r16,r5,r16
 800af2c:	80c7c83a 	sub	r3,r16,r3
 800af30:	2008d43a 	srli	r4,r4,16
 800af34:	3085883a 	add	r2,r6,r2
 800af38:	1821d43a 	srai	r16,r3,16
 800af3c:	117fffcc 	andi	r5,r2,65535
 800af40:	2149c83a 	sub	r4,r4,r5
 800af44:	2421883a 	add	r16,r4,r16
 800af48:	8008943a 	slli	r4,r16,16
 800af4c:	18ffffcc 	andi	r3,r3,65535
 800af50:	102cd43a 	srli	r22,r2,16
 800af54:	20c8b03a 	or	r4,r4,r3
 800af58:	a1000015 	stw	r4,0(r20)
 800af5c:	8021d43a 	srai	r16,r16,16
 800af60:	a5000104 	addi	r20,r20,4
 800af64:	e47fe32e 	bgeu	fp,r17,800aef4 <__alt_data_end+0xfc00aef4>
 800af68:	d8c00317 	ldw	r3,12(sp)
 800af6c:	18800017 	ldw	r2,0(r3)
 800af70:	10000c1e 	bne	r2,zero,800afa4 <quorem+0x13c>
 800af74:	18bfff04 	addi	r2,r3,-4
 800af78:	9880082e 	bgeu	r19,r2,800af9c <quorem+0x134>
 800af7c:	18ffff17 	ldw	r3,-4(r3)
 800af80:	18000326 	beq	r3,zero,800af90 <quorem+0x128>
 800af84:	00000506 	br	800af9c <quorem+0x134>
 800af88:	10c00017 	ldw	r3,0(r2)
 800af8c:	1800031e 	bne	r3,zero,800af9c <quorem+0x134>
 800af90:	10bfff04 	addi	r2,r2,-4
 800af94:	bdffffc4 	addi	r23,r23,-1
 800af98:	98bffb36 	bltu	r19,r2,800af88 <__alt_data_end+0xfc00af88>
 800af9c:	d8c00017 	ldw	r3,0(sp)
 800afa0:	1dc00415 	stw	r23,16(r3)
 800afa4:	d9000017 	ldw	r4,0(sp)
 800afa8:	d9400217 	ldw	r5,8(sp)
 800afac:	800ecf40 	call	800ecf4 <__mcmp>
 800afb0:	10002816 	blt	r2,zero,800b054 <quorem+0x1ec>
 800afb4:	dc400117 	ldw	r17,4(sp)
 800afb8:	94800044 	addi	r18,r18,1
 800afbc:	980d883a 	mov	r6,r19
 800afc0:	0007883a 	mov	r3,zero
 800afc4:	31000017 	ldw	r4,0(r6)
 800afc8:	89400017 	ldw	r5,0(r17)
 800afcc:	31800104 	addi	r6,r6,4
 800afd0:	20bfffcc 	andi	r2,r4,65535
 800afd4:	10c7883a 	add	r3,r2,r3
 800afd8:	28bfffcc 	andi	r2,r5,65535
 800afdc:	1885c83a 	sub	r2,r3,r2
 800afe0:	280ad43a 	srli	r5,r5,16
 800afe4:	2008d43a 	srli	r4,r4,16
 800afe8:	1007d43a 	srai	r3,r2,16
 800afec:	10bfffcc 	andi	r2,r2,65535
 800aff0:	2149c83a 	sub	r4,r4,r5
 800aff4:	20c9883a 	add	r4,r4,r3
 800aff8:	200a943a 	slli	r5,r4,16
 800affc:	8c400104 	addi	r17,r17,4
 800b000:	2007d43a 	srai	r3,r4,16
 800b004:	2884b03a 	or	r2,r5,r2
 800b008:	30bfff15 	stw	r2,-4(r6)
 800b00c:	e47fed2e 	bgeu	fp,r17,800afc4 <__alt_data_end+0xfc00afc4>
 800b010:	bdc5883a 	add	r2,r23,r23
 800b014:	1085883a 	add	r2,r2,r2
 800b018:	9887883a 	add	r3,r19,r2
 800b01c:	18800017 	ldw	r2,0(r3)
 800b020:	10000c1e 	bne	r2,zero,800b054 <quorem+0x1ec>
 800b024:	18bfff04 	addi	r2,r3,-4
 800b028:	9880082e 	bgeu	r19,r2,800b04c <quorem+0x1e4>
 800b02c:	18ffff17 	ldw	r3,-4(r3)
 800b030:	18000326 	beq	r3,zero,800b040 <quorem+0x1d8>
 800b034:	00000506 	br	800b04c <quorem+0x1e4>
 800b038:	10c00017 	ldw	r3,0(r2)
 800b03c:	1800031e 	bne	r3,zero,800b04c <quorem+0x1e4>
 800b040:	10bfff04 	addi	r2,r2,-4
 800b044:	bdffffc4 	addi	r23,r23,-1
 800b048:	98bffb36 	bltu	r19,r2,800b038 <__alt_data_end+0xfc00b038>
 800b04c:	d8c00017 	ldw	r3,0(sp)
 800b050:	1dc00415 	stw	r23,16(r3)
 800b054:	9005883a 	mov	r2,r18
 800b058:	dfc00d17 	ldw	ra,52(sp)
 800b05c:	df000c17 	ldw	fp,48(sp)
 800b060:	ddc00b17 	ldw	r23,44(sp)
 800b064:	dd800a17 	ldw	r22,40(sp)
 800b068:	dd400917 	ldw	r21,36(sp)
 800b06c:	dd000817 	ldw	r20,32(sp)
 800b070:	dcc00717 	ldw	r19,28(sp)
 800b074:	dc800617 	ldw	r18,24(sp)
 800b078:	dc400517 	ldw	r17,20(sp)
 800b07c:	dc000417 	ldw	r16,16(sp)
 800b080:	dec00e04 	addi	sp,sp,56
 800b084:	f800283a 	ret
 800b088:	0005883a 	mov	r2,zero
 800b08c:	003ff206 	br	800b058 <__alt_data_end+0xfc00b058>

0800b090 <_dtoa_r>:
 800b090:	20801017 	ldw	r2,64(r4)
 800b094:	deffde04 	addi	sp,sp,-136
 800b098:	dd401d15 	stw	r21,116(sp)
 800b09c:	dcc01b15 	stw	r19,108(sp)
 800b0a0:	dc801a15 	stw	r18,104(sp)
 800b0a4:	dc401915 	stw	r17,100(sp)
 800b0a8:	dc001815 	stw	r16,96(sp)
 800b0ac:	dfc02115 	stw	ra,132(sp)
 800b0b0:	df002015 	stw	fp,128(sp)
 800b0b4:	ddc01f15 	stw	r23,124(sp)
 800b0b8:	dd801e15 	stw	r22,120(sp)
 800b0bc:	dd001c15 	stw	r20,112(sp)
 800b0c0:	d9c00315 	stw	r7,12(sp)
 800b0c4:	2021883a 	mov	r16,r4
 800b0c8:	302b883a 	mov	r21,r6
 800b0cc:	2825883a 	mov	r18,r5
 800b0d0:	dc402417 	ldw	r17,144(sp)
 800b0d4:	3027883a 	mov	r19,r6
 800b0d8:	10000826 	beq	r2,zero,800b0fc <_dtoa_r+0x6c>
 800b0dc:	21801117 	ldw	r6,68(r4)
 800b0e0:	00c00044 	movi	r3,1
 800b0e4:	100b883a 	mov	r5,r2
 800b0e8:	1986983a 	sll	r3,r3,r6
 800b0ec:	11800115 	stw	r6,4(r2)
 800b0f0:	10c00215 	stw	r3,8(r2)
 800b0f4:	800e4200 	call	800e420 <_Bfree>
 800b0f8:	80001015 	stw	zero,64(r16)
 800b0fc:	a8002d16 	blt	r21,zero,800b1b4 <_dtoa_r+0x124>
 800b100:	88000015 	stw	zero,0(r17)
 800b104:	a8dffc2c 	andhi	r3,r21,32752
 800b108:	009ffc34 	movhi	r2,32752
 800b10c:	18801b26 	beq	r3,r2,800b17c <_dtoa_r+0xec>
 800b110:	9009883a 	mov	r4,r18
 800b114:	980b883a 	mov	r5,r19
 800b118:	000d883a 	mov	r6,zero
 800b11c:	000f883a 	mov	r7,zero
 800b120:	80188440 	call	8018844 <__eqdf2>
 800b124:	10002a1e 	bne	r2,zero,800b1d0 <_dtoa_r+0x140>
 800b128:	d8c02317 	ldw	r3,140(sp)
 800b12c:	d9002517 	ldw	r4,148(sp)
 800b130:	00800044 	movi	r2,1
 800b134:	18800015 	stw	r2,0(r3)
 800b138:	2001a226 	beq	r4,zero,800b7c4 <_dtoa_r+0x734>
 800b13c:	008200b4 	movhi	r2,2050
 800b140:	10b7e444 	addi	r2,r2,-8303
 800b144:	20800015 	stw	r2,0(r4)
 800b148:	10bfffc4 	addi	r2,r2,-1
 800b14c:	dfc02117 	ldw	ra,132(sp)
 800b150:	df002017 	ldw	fp,128(sp)
 800b154:	ddc01f17 	ldw	r23,124(sp)
 800b158:	dd801e17 	ldw	r22,120(sp)
 800b15c:	dd401d17 	ldw	r21,116(sp)
 800b160:	dd001c17 	ldw	r20,112(sp)
 800b164:	dcc01b17 	ldw	r19,108(sp)
 800b168:	dc801a17 	ldw	r18,104(sp)
 800b16c:	dc401917 	ldw	r17,100(sp)
 800b170:	dc001817 	ldw	r16,96(sp)
 800b174:	dec02204 	addi	sp,sp,136
 800b178:	f800283a 	ret
 800b17c:	d8c02317 	ldw	r3,140(sp)
 800b180:	0089c3c4 	movi	r2,9999
 800b184:	18800015 	stw	r2,0(r3)
 800b188:	90017c26 	beq	r18,zero,800b77c <_dtoa_r+0x6ec>
 800b18c:	008200b4 	movhi	r2,2050
 800b190:	10b8a304 	addi	r2,r2,-7540
 800b194:	d9002517 	ldw	r4,148(sp)
 800b198:	203fec26 	beq	r4,zero,800b14c <__alt_data_end+0xfc00b14c>
 800b19c:	10c000c7 	ldb	r3,3(r2)
 800b1a0:	18017d1e 	bne	r3,zero,800b798 <_dtoa_r+0x708>
 800b1a4:	10c000c4 	addi	r3,r2,3
 800b1a8:	d9802517 	ldw	r6,148(sp)
 800b1ac:	30c00015 	stw	r3,0(r6)
 800b1b0:	003fe606 	br	800b14c <__alt_data_end+0xfc00b14c>
 800b1b4:	04e00034 	movhi	r19,32768
 800b1b8:	9cffffc4 	addi	r19,r19,-1
 800b1bc:	00800044 	movi	r2,1
 800b1c0:	ace6703a 	and	r19,r21,r19
 800b1c4:	88800015 	stw	r2,0(r17)
 800b1c8:	982b883a 	mov	r21,r19
 800b1cc:	003fcd06 	br	800b104 <__alt_data_end+0xfc00b104>
 800b1d0:	d8800204 	addi	r2,sp,8
 800b1d4:	a822d53a 	srli	r17,r21,20
 800b1d8:	d8800015 	stw	r2,0(sp)
 800b1dc:	8009883a 	mov	r4,r16
 800b1e0:	900b883a 	mov	r5,r18
 800b1e4:	980d883a 	mov	r6,r19
 800b1e8:	d9c00104 	addi	r7,sp,4
 800b1ec:	800f0680 	call	800f068 <__d2b>
 800b1f0:	1039883a 	mov	fp,r2
 800b1f4:	88016a1e 	bne	r17,zero,800b7a0 <_dtoa_r+0x710>
 800b1f8:	dd000217 	ldw	r20,8(sp)
 800b1fc:	dc400117 	ldw	r17,4(sp)
 800b200:	00befbc4 	movi	r2,-1041
 800b204:	a463883a 	add	r17,r20,r17
 800b208:	8882ea16 	blt	r17,r2,800bdb4 <_dtoa_r+0xd24>
 800b20c:	00bf0384 	movi	r2,-1010
 800b210:	1445c83a 	sub	r2,r2,r17
 800b214:	89010484 	addi	r4,r17,1042
 800b218:	a8aa983a 	sll	r21,r21,r2
 800b21c:	9108d83a 	srl	r4,r18,r4
 800b220:	a908b03a 	or	r4,r21,r4
 800b224:	8019d1c0 	call	8019d1c <__floatunsidf>
 800b228:	017f8434 	movhi	r5,65040
 800b22c:	01800044 	movi	r6,1
 800b230:	1009883a 	mov	r4,r2
 800b234:	194b883a 	add	r5,r3,r5
 800b238:	8c7fffc4 	addi	r17,r17,-1
 800b23c:	d9800f15 	stw	r6,60(sp)
 800b240:	000d883a 	mov	r6,zero
 800b244:	01cffe34 	movhi	r7,16376
 800b248:	80192f40 	call	80192f4 <__subdf3>
 800b24c:	0198dbf4 	movhi	r6,25455
 800b250:	01cff4f4 	movhi	r7,16339
 800b254:	1009883a 	mov	r4,r2
 800b258:	180b883a 	mov	r5,r3
 800b25c:	3190d844 	addi	r6,r6,17249
 800b260:	39e1e9c4 	addi	r7,r7,-30809
 800b264:	8018a880 	call	8018a88 <__muldf3>
 800b268:	01a2d874 	movhi	r6,35681
 800b26c:	01cff1f4 	movhi	r7,16327
 800b270:	180b883a 	mov	r5,r3
 800b274:	31b22cc4 	addi	r6,r6,-14157
 800b278:	39e28a04 	addi	r7,r7,-30168
 800b27c:	1009883a 	mov	r4,r2
 800b280:	80176280 	call	8017628 <__adddf3>
 800b284:	8809883a 	mov	r4,r17
 800b288:	102d883a 	mov	r22,r2
 800b28c:	182b883a 	mov	r21,r3
 800b290:	8019c4c0 	call	8019c4c <__floatsidf>
 800b294:	019427f4 	movhi	r6,20639
 800b298:	01cff4f4 	movhi	r7,16339
 800b29c:	1009883a 	mov	r4,r2
 800b2a0:	180b883a 	mov	r5,r3
 800b2a4:	319e7ec4 	addi	r6,r6,31227
 800b2a8:	39d104c4 	addi	r7,r7,17427
 800b2ac:	8018a880 	call	8018a88 <__muldf3>
 800b2b0:	b009883a 	mov	r4,r22
 800b2b4:	a80b883a 	mov	r5,r21
 800b2b8:	100d883a 	mov	r6,r2
 800b2bc:	180f883a 	mov	r7,r3
 800b2c0:	80176280 	call	8017628 <__adddf3>
 800b2c4:	1009883a 	mov	r4,r2
 800b2c8:	180b883a 	mov	r5,r3
 800b2cc:	102d883a 	mov	r22,r2
 800b2d0:	182b883a 	mov	r21,r3
 800b2d4:	8019bc40 	call	8019bc4 <__fixdfsi>
 800b2d8:	b009883a 	mov	r4,r22
 800b2dc:	a80b883a 	mov	r5,r21
 800b2e0:	000d883a 	mov	r6,zero
 800b2e4:	000f883a 	mov	r7,zero
 800b2e8:	d8800515 	stw	r2,20(sp)
 800b2ec:	80189a80 	call	80189a8 <__ledf2>
 800b2f0:	10023116 	blt	r2,zero,800bbb8 <_dtoa_r+0xb28>
 800b2f4:	d8c00517 	ldw	r3,20(sp)
 800b2f8:	00800584 	movi	r2,22
 800b2fc:	10c21f36 	bltu	r2,r3,800bb7c <_dtoa_r+0xaec>
 800b300:	180490fa 	slli	r2,r3,3
 800b304:	00c200b4 	movhi	r3,2050
 800b308:	18f8be04 	addi	r3,r3,-7432
 800b30c:	1885883a 	add	r2,r3,r2
 800b310:	11000017 	ldw	r4,0(r2)
 800b314:	11400117 	ldw	r5,4(r2)
 800b318:	900d883a 	mov	r6,r18
 800b31c:	980f883a 	mov	r7,r19
 800b320:	80188c80 	call	80188c8 <__gedf2>
 800b324:	0082a70e 	bge	zero,r2,800bdc4 <_dtoa_r+0xd34>
 800b328:	d9000517 	ldw	r4,20(sp)
 800b32c:	d8000c15 	stw	zero,48(sp)
 800b330:	213fffc4 	addi	r4,r4,-1
 800b334:	d9000515 	stw	r4,20(sp)
 800b338:	a463c83a 	sub	r17,r20,r17
 800b33c:	8dbfffc4 	addi	r22,r17,-1
 800b340:	b0021916 	blt	r22,zero,800bba8 <_dtoa_r+0xb18>
 800b344:	d8000815 	stw	zero,32(sp)
 800b348:	d8800517 	ldw	r2,20(sp)
 800b34c:	10020e16 	blt	r2,zero,800bb88 <_dtoa_r+0xaf8>
 800b350:	b0ad883a 	add	r22,r22,r2
 800b354:	d8800a15 	stw	r2,40(sp)
 800b358:	d8000915 	stw	zero,36(sp)
 800b35c:	d8c00317 	ldw	r3,12(sp)
 800b360:	00800244 	movi	r2,9
 800b364:	10c11a36 	bltu	r2,r3,800b7d0 <_dtoa_r+0x740>
 800b368:	00800144 	movi	r2,5
 800b36c:	10c4fc0e 	bge	r2,r3,800c760 <_dtoa_r+0x16d0>
 800b370:	18ffff04 	addi	r3,r3,-4
 800b374:	d8c00315 	stw	r3,12(sp)
 800b378:	0029883a 	mov	r20,zero
 800b37c:	d9800317 	ldw	r6,12(sp)
 800b380:	008000c4 	movi	r2,3
 800b384:	3083bd26 	beq	r6,r2,800c27c <_dtoa_r+0x11ec>
 800b388:	1183670e 	bge	r2,r6,800c128 <_dtoa_r+0x1098>
 800b38c:	d8c00317 	ldw	r3,12(sp)
 800b390:	00800104 	movi	r2,4
 800b394:	1882e726 	beq	r3,r2,800bf34 <_dtoa_r+0xea4>
 800b398:	00800144 	movi	r2,5
 800b39c:	1884f21e 	bne	r3,r2,800c768 <_dtoa_r+0x16d8>
 800b3a0:	00800044 	movi	r2,1
 800b3a4:	d8800b15 	stw	r2,44(sp)
 800b3a8:	d8c02217 	ldw	r3,136(sp)
 800b3ac:	d9000517 	ldw	r4,20(sp)
 800b3b0:	1907883a 	add	r3,r3,r4
 800b3b4:	19800044 	addi	r6,r3,1
 800b3b8:	d8c00d15 	stw	r3,52(sp)
 800b3bc:	d9800615 	stw	r6,24(sp)
 800b3c0:	0183c30e 	bge	zero,r6,800c2d0 <_dtoa_r+0x1240>
 800b3c4:	d9800617 	ldw	r6,24(sp)
 800b3c8:	3023883a 	mov	r17,r6
 800b3cc:	80001115 	stw	zero,68(r16)
 800b3d0:	008005c4 	movi	r2,23
 800b3d4:	1184f62e 	bgeu	r2,r6,800c7b0 <_dtoa_r+0x1720>
 800b3d8:	00c00044 	movi	r3,1
 800b3dc:	00800104 	movi	r2,4
 800b3e0:	1085883a 	add	r2,r2,r2
 800b3e4:	11000504 	addi	r4,r2,20
 800b3e8:	180b883a 	mov	r5,r3
 800b3ec:	18c00044 	addi	r3,r3,1
 800b3f0:	313ffb2e 	bgeu	r6,r4,800b3e0 <__alt_data_end+0xfc00b3e0>
 800b3f4:	81401115 	stw	r5,68(r16)
 800b3f8:	8009883a 	mov	r4,r16
 800b3fc:	800e3780 	call	800e378 <_Balloc>
 800b400:	d8800715 	stw	r2,28(sp)
 800b404:	80801015 	stw	r2,64(r16)
 800b408:	00800384 	movi	r2,14
 800b40c:	1440fd36 	bltu	r2,r17,800b804 <_dtoa_r+0x774>
 800b410:	a000fc26 	beq	r20,zero,800b804 <_dtoa_r+0x774>
 800b414:	d8800517 	ldw	r2,20(sp)
 800b418:	0083b90e 	bge	zero,r2,800c300 <_dtoa_r+0x1270>
 800b41c:	d8c00517 	ldw	r3,20(sp)
 800b420:	108003cc 	andi	r2,r2,15
 800b424:	100490fa 	slli	r2,r2,3
 800b428:	182fd13a 	srai	r23,r3,4
 800b42c:	00c200b4 	movhi	r3,2050
 800b430:	18f8be04 	addi	r3,r3,-7432
 800b434:	1885883a 	add	r2,r3,r2
 800b438:	b8c0040c 	andi	r3,r23,16
 800b43c:	12c00017 	ldw	r11,0(r2)
 800b440:	12800117 	ldw	r10,4(r2)
 800b444:	18039726 	beq	r3,zero,800c2a4 <_dtoa_r+0x1214>
 800b448:	008200b4 	movhi	r2,2050
 800b44c:	10b8b404 	addi	r2,r2,-7472
 800b450:	11800817 	ldw	r6,32(r2)
 800b454:	11c00917 	ldw	r7,36(r2)
 800b458:	9009883a 	mov	r4,r18
 800b45c:	980b883a 	mov	r5,r19
 800b460:	da801615 	stw	r10,88(sp)
 800b464:	dac01515 	stw	r11,84(sp)
 800b468:	8017ec40 	call	8017ec4 <__divdf3>
 800b46c:	da801617 	ldw	r10,88(sp)
 800b470:	dac01517 	ldw	r11,84(sp)
 800b474:	bdc003cc 	andi	r23,r23,15
 800b478:	044000c4 	movi	r17,3
 800b47c:	d8800e15 	stw	r2,56(sp)
 800b480:	182b883a 	mov	r21,r3
 800b484:	b8001126 	beq	r23,zero,800b4cc <_dtoa_r+0x43c>
 800b488:	050200b4 	movhi	r20,2050
 800b48c:	a538b404 	addi	r20,r20,-7472
 800b490:	5805883a 	mov	r2,r11
 800b494:	5007883a 	mov	r3,r10
 800b498:	b980004c 	andi	r6,r23,1
 800b49c:	1009883a 	mov	r4,r2
 800b4a0:	b82fd07a 	srai	r23,r23,1
 800b4a4:	180b883a 	mov	r5,r3
 800b4a8:	30000426 	beq	r6,zero,800b4bc <_dtoa_r+0x42c>
 800b4ac:	a1800017 	ldw	r6,0(r20)
 800b4b0:	a1c00117 	ldw	r7,4(r20)
 800b4b4:	8c400044 	addi	r17,r17,1
 800b4b8:	8018a880 	call	8018a88 <__muldf3>
 800b4bc:	a5000204 	addi	r20,r20,8
 800b4c0:	b83ff51e 	bne	r23,zero,800b498 <__alt_data_end+0xfc00b498>
 800b4c4:	1017883a 	mov	r11,r2
 800b4c8:	1815883a 	mov	r10,r3
 800b4cc:	d9000e17 	ldw	r4,56(sp)
 800b4d0:	a80b883a 	mov	r5,r21
 800b4d4:	580d883a 	mov	r6,r11
 800b4d8:	500f883a 	mov	r7,r10
 800b4dc:	8017ec40 	call	8017ec4 <__divdf3>
 800b4e0:	1029883a 	mov	r20,r2
 800b4e4:	182b883a 	mov	r21,r3
 800b4e8:	d9800c17 	ldw	r6,48(sp)
 800b4ec:	30000626 	beq	r6,zero,800b508 <_dtoa_r+0x478>
 800b4f0:	a009883a 	mov	r4,r20
 800b4f4:	a80b883a 	mov	r5,r21
 800b4f8:	000d883a 	mov	r6,zero
 800b4fc:	01cffc34 	movhi	r7,16368
 800b500:	80189a80 	call	80189a8 <__ledf2>
 800b504:	10043216 	blt	r2,zero,800c5d0 <_dtoa_r+0x1540>
 800b508:	8809883a 	mov	r4,r17
 800b50c:	8019c4c0 	call	8019c4c <__floatsidf>
 800b510:	1009883a 	mov	r4,r2
 800b514:	180b883a 	mov	r5,r3
 800b518:	a00d883a 	mov	r6,r20
 800b51c:	a80f883a 	mov	r7,r21
 800b520:	8018a880 	call	8018a88 <__muldf3>
 800b524:	000d883a 	mov	r6,zero
 800b528:	1009883a 	mov	r4,r2
 800b52c:	180b883a 	mov	r5,r3
 800b530:	01d00734 	movhi	r7,16412
 800b534:	80176280 	call	8017628 <__adddf3>
 800b538:	1023883a 	mov	r17,r2
 800b53c:	d9800617 	ldw	r6,24(sp)
 800b540:	00bf3034 	movhi	r2,64704
 800b544:	1885883a 	add	r2,r3,r2
 800b548:	d8800e15 	stw	r2,56(sp)
 800b54c:	30032e26 	beq	r6,zero,800c208 <_dtoa_r+0x1178>
 800b550:	d8c00517 	ldw	r3,20(sp)
 800b554:	da800617 	ldw	r10,24(sp)
 800b558:	d8c01215 	stw	r3,72(sp)
 800b55c:	d9000b17 	ldw	r4,44(sp)
 800b560:	2003b026 	beq	r4,zero,800c424 <_dtoa_r+0x1394>
 800b564:	50bfffc4 	addi	r2,r10,-1
 800b568:	100490fa 	slli	r2,r2,3
 800b56c:	00c200b4 	movhi	r3,2050
 800b570:	18f8be04 	addi	r3,r3,-7432
 800b574:	1885883a 	add	r2,r3,r2
 800b578:	11800017 	ldw	r6,0(r2)
 800b57c:	11c00117 	ldw	r7,4(r2)
 800b580:	d8800717 	ldw	r2,28(sp)
 800b584:	0009883a 	mov	r4,zero
 800b588:	014ff834 	movhi	r5,16352
 800b58c:	da801615 	stw	r10,88(sp)
 800b590:	15c00044 	addi	r23,r2,1
 800b594:	8017ec40 	call	8017ec4 <__divdf3>
 800b598:	d9c00e17 	ldw	r7,56(sp)
 800b59c:	880d883a 	mov	r6,r17
 800b5a0:	1009883a 	mov	r4,r2
 800b5a4:	180b883a 	mov	r5,r3
 800b5a8:	80192f40 	call	80192f4 <__subdf3>
 800b5ac:	a80b883a 	mov	r5,r21
 800b5b0:	a009883a 	mov	r4,r20
 800b5b4:	d8c01015 	stw	r3,64(sp)
 800b5b8:	d8800e15 	stw	r2,56(sp)
 800b5bc:	8019bc40 	call	8019bc4 <__fixdfsi>
 800b5c0:	1009883a 	mov	r4,r2
 800b5c4:	d8801715 	stw	r2,92(sp)
 800b5c8:	8019c4c0 	call	8019c4c <__floatsidf>
 800b5cc:	a009883a 	mov	r4,r20
 800b5d0:	a80b883a 	mov	r5,r21
 800b5d4:	100d883a 	mov	r6,r2
 800b5d8:	180f883a 	mov	r7,r3
 800b5dc:	80192f40 	call	80192f4 <__subdf3>
 800b5e0:	da001717 	ldw	r8,92(sp)
 800b5e4:	1829883a 	mov	r20,r3
 800b5e8:	d8c00717 	ldw	r3,28(sp)
 800b5ec:	d9000e17 	ldw	r4,56(sp)
 800b5f0:	d9401017 	ldw	r5,64(sp)
 800b5f4:	42000c04 	addi	r8,r8,48
 800b5f8:	1023883a 	mov	r17,r2
 800b5fc:	1a000005 	stb	r8,0(r3)
 800b600:	880d883a 	mov	r6,r17
 800b604:	a00f883a 	mov	r7,r20
 800b608:	402b883a 	mov	r21,r8
 800b60c:	80188c80 	call	80188c8 <__gedf2>
 800b610:	00844516 	blt	zero,r2,800c728 <_dtoa_r+0x1698>
 800b614:	0009883a 	mov	r4,zero
 800b618:	014ffc34 	movhi	r5,16368
 800b61c:	880d883a 	mov	r6,r17
 800b620:	a00f883a 	mov	r7,r20
 800b624:	80192f40 	call	80192f4 <__subdf3>
 800b628:	d9000e17 	ldw	r4,56(sp)
 800b62c:	d9401017 	ldw	r5,64(sp)
 800b630:	100d883a 	mov	r6,r2
 800b634:	180f883a 	mov	r7,r3
 800b638:	80188c80 	call	80188c8 <__gedf2>
 800b63c:	da801617 	ldw	r10,88(sp)
 800b640:	00843616 	blt	zero,r2,800c71c <_dtoa_r+0x168c>
 800b644:	00800044 	movi	r2,1
 800b648:	12806e0e 	bge	r2,r10,800b804 <_dtoa_r+0x774>
 800b64c:	d9000717 	ldw	r4,28(sp)
 800b650:	dd801315 	stw	r22,76(sp)
 800b654:	dc001115 	stw	r16,68(sp)
 800b658:	2295883a 	add	r10,r4,r10
 800b65c:	dcc01415 	stw	r19,80(sp)
 800b660:	502d883a 	mov	r22,r10
 800b664:	dcc01017 	ldw	r19,64(sp)
 800b668:	b821883a 	mov	r16,r23
 800b66c:	dc801015 	stw	r18,64(sp)
 800b670:	dc800e17 	ldw	r18,56(sp)
 800b674:	00000906 	br	800b69c <_dtoa_r+0x60c>
 800b678:	80192f40 	call	80192f4 <__subdf3>
 800b67c:	1009883a 	mov	r4,r2
 800b680:	180b883a 	mov	r5,r3
 800b684:	900d883a 	mov	r6,r18
 800b688:	980f883a 	mov	r7,r19
 800b68c:	80189a80 	call	80189a8 <__ledf2>
 800b690:	10040e16 	blt	r2,zero,800c6cc <_dtoa_r+0x163c>
 800b694:	b821883a 	mov	r16,r23
 800b698:	bd841026 	beq	r23,r22,800c6dc <_dtoa_r+0x164c>
 800b69c:	9009883a 	mov	r4,r18
 800b6a0:	980b883a 	mov	r5,r19
 800b6a4:	000d883a 	mov	r6,zero
 800b6a8:	01d00934 	movhi	r7,16420
 800b6ac:	8018a880 	call	8018a88 <__muldf3>
 800b6b0:	000d883a 	mov	r6,zero
 800b6b4:	01d00934 	movhi	r7,16420
 800b6b8:	8809883a 	mov	r4,r17
 800b6bc:	a00b883a 	mov	r5,r20
 800b6c0:	1025883a 	mov	r18,r2
 800b6c4:	1827883a 	mov	r19,r3
 800b6c8:	8018a880 	call	8018a88 <__muldf3>
 800b6cc:	180b883a 	mov	r5,r3
 800b6d0:	1009883a 	mov	r4,r2
 800b6d4:	1823883a 	mov	r17,r3
 800b6d8:	1029883a 	mov	r20,r2
 800b6dc:	8019bc40 	call	8019bc4 <__fixdfsi>
 800b6e0:	1009883a 	mov	r4,r2
 800b6e4:	102b883a 	mov	r21,r2
 800b6e8:	8019c4c0 	call	8019c4c <__floatsidf>
 800b6ec:	a009883a 	mov	r4,r20
 800b6f0:	880b883a 	mov	r5,r17
 800b6f4:	100d883a 	mov	r6,r2
 800b6f8:	180f883a 	mov	r7,r3
 800b6fc:	80192f40 	call	80192f4 <__subdf3>
 800b700:	ad400c04 	addi	r21,r21,48
 800b704:	1009883a 	mov	r4,r2
 800b708:	180b883a 	mov	r5,r3
 800b70c:	900d883a 	mov	r6,r18
 800b710:	980f883a 	mov	r7,r19
 800b714:	85400005 	stb	r21,0(r16)
 800b718:	1023883a 	mov	r17,r2
 800b71c:	1829883a 	mov	r20,r3
 800b720:	80189a80 	call	80189a8 <__ledf2>
 800b724:	bdc00044 	addi	r23,r23,1
 800b728:	0009883a 	mov	r4,zero
 800b72c:	014ffc34 	movhi	r5,16368
 800b730:	880d883a 	mov	r6,r17
 800b734:	a00f883a 	mov	r7,r20
 800b738:	103fcf0e 	bge	r2,zero,800b678 <__alt_data_end+0xfc00b678>
 800b73c:	d9801217 	ldw	r6,72(sp)
 800b740:	dc001117 	ldw	r16,68(sp)
 800b744:	d9800515 	stw	r6,20(sp)
 800b748:	8009883a 	mov	r4,r16
 800b74c:	e00b883a 	mov	r5,fp
 800b750:	800e4200 	call	800e420 <_Bfree>
 800b754:	d8c00517 	ldw	r3,20(sp)
 800b758:	d9002317 	ldw	r4,140(sp)
 800b75c:	d9802517 	ldw	r6,148(sp)
 800b760:	b8000005 	stb	zero,0(r23)
 800b764:	18800044 	addi	r2,r3,1
 800b768:	20800015 	stw	r2,0(r4)
 800b76c:	30027226 	beq	r6,zero,800c138 <_dtoa_r+0x10a8>
 800b770:	35c00015 	stw	r23,0(r6)
 800b774:	d8800717 	ldw	r2,28(sp)
 800b778:	003e7406 	br	800b14c <__alt_data_end+0xfc00b14c>
 800b77c:	00800434 	movhi	r2,16
 800b780:	10bfffc4 	addi	r2,r2,-1
 800b784:	a8aa703a 	and	r21,r21,r2
 800b788:	a83e801e 	bne	r21,zero,800b18c <__alt_data_end+0xfc00b18c>
 800b78c:	008200b4 	movhi	r2,2050
 800b790:	10b8a004 	addi	r2,r2,-7552
 800b794:	003e7f06 	br	800b194 <__alt_data_end+0xfc00b194>
 800b798:	10c00204 	addi	r3,r2,8
 800b79c:	003e8206 	br	800b1a8 <__alt_data_end+0xfc00b1a8>
 800b7a0:	01400434 	movhi	r5,16
 800b7a4:	297fffc4 	addi	r5,r5,-1
 800b7a8:	994a703a 	and	r5,r19,r5
 800b7ac:	9009883a 	mov	r4,r18
 800b7b0:	8c7f0044 	addi	r17,r17,-1023
 800b7b4:	294ffc34 	orhi	r5,r5,16368
 800b7b8:	dd000217 	ldw	r20,8(sp)
 800b7bc:	d8000f15 	stw	zero,60(sp)
 800b7c0:	003e9f06 	br	800b240 <__alt_data_end+0xfc00b240>
 800b7c4:	008200b4 	movhi	r2,2050
 800b7c8:	10b7e404 	addi	r2,r2,-8304
 800b7cc:	003e5f06 	br	800b14c <__alt_data_end+0xfc00b14c>
 800b7d0:	80001115 	stw	zero,68(r16)
 800b7d4:	8009883a 	mov	r4,r16
 800b7d8:	000b883a 	mov	r5,zero
 800b7dc:	800e3780 	call	800e378 <_Balloc>
 800b7e0:	01bfffc4 	movi	r6,-1
 800b7e4:	d8800715 	stw	r2,28(sp)
 800b7e8:	80801015 	stw	r2,64(r16)
 800b7ec:	00800044 	movi	r2,1
 800b7f0:	d9800615 	stw	r6,24(sp)
 800b7f4:	d8800b15 	stw	r2,44(sp)
 800b7f8:	d8002215 	stw	zero,136(sp)
 800b7fc:	d9800d15 	stw	r6,52(sp)
 800b800:	d8000315 	stw	zero,12(sp)
 800b804:	d8800117 	ldw	r2,4(sp)
 800b808:	10008e16 	blt	r2,zero,800ba44 <_dtoa_r+0x9b4>
 800b80c:	d9000517 	ldw	r4,20(sp)
 800b810:	00c00384 	movi	r3,14
 800b814:	19008b16 	blt	r3,r4,800ba44 <_dtoa_r+0x9b4>
 800b818:	200490fa 	slli	r2,r4,3
 800b81c:	00c200b4 	movhi	r3,2050
 800b820:	d9802217 	ldw	r6,136(sp)
 800b824:	18f8be04 	addi	r3,r3,-7432
 800b828:	1885883a 	add	r2,r3,r2
 800b82c:	14400017 	ldw	r17,0(r2)
 800b830:	15000117 	ldw	r20,4(r2)
 800b834:	3001c716 	blt	r6,zero,800bf54 <_dtoa_r+0xec4>
 800b838:	880d883a 	mov	r6,r17
 800b83c:	a00f883a 	mov	r7,r20
 800b840:	9009883a 	mov	r4,r18
 800b844:	980b883a 	mov	r5,r19
 800b848:	8017ec40 	call	8017ec4 <__divdf3>
 800b84c:	180b883a 	mov	r5,r3
 800b850:	1009883a 	mov	r4,r2
 800b854:	8019bc40 	call	8019bc4 <__fixdfsi>
 800b858:	1009883a 	mov	r4,r2
 800b85c:	102d883a 	mov	r22,r2
 800b860:	8019c4c0 	call	8019c4c <__floatsidf>
 800b864:	1009883a 	mov	r4,r2
 800b868:	180b883a 	mov	r5,r3
 800b86c:	880d883a 	mov	r6,r17
 800b870:	a00f883a 	mov	r7,r20
 800b874:	8018a880 	call	8018a88 <__muldf3>
 800b878:	9009883a 	mov	r4,r18
 800b87c:	980b883a 	mov	r5,r19
 800b880:	100d883a 	mov	r6,r2
 800b884:	180f883a 	mov	r7,r3
 800b888:	80192f40 	call	80192f4 <__subdf3>
 800b88c:	d9000717 	ldw	r4,28(sp)
 800b890:	d9800617 	ldw	r6,24(sp)
 800b894:	180b883a 	mov	r5,r3
 800b898:	b0c00c04 	addi	r3,r22,48
 800b89c:	20c00005 	stb	r3,0(r4)
 800b8a0:	25c00044 	addi	r23,r4,1
 800b8a4:	01000044 	movi	r4,1
 800b8a8:	1011883a 	mov	r8,r2
 800b8ac:	2807883a 	mov	r3,r5
 800b8b0:	31003d26 	beq	r6,r4,800b9a8 <_dtoa_r+0x918>
 800b8b4:	000d883a 	mov	r6,zero
 800b8b8:	01d00934 	movhi	r7,16420
 800b8bc:	1009883a 	mov	r4,r2
 800b8c0:	8018a880 	call	8018a88 <__muldf3>
 800b8c4:	1009883a 	mov	r4,r2
 800b8c8:	180b883a 	mov	r5,r3
 800b8cc:	000d883a 	mov	r6,zero
 800b8d0:	000f883a 	mov	r7,zero
 800b8d4:	1027883a 	mov	r19,r2
 800b8d8:	182b883a 	mov	r21,r3
 800b8dc:	80188440 	call	8018844 <__eqdf2>
 800b8e0:	103f9926 	beq	r2,zero,800b748 <__alt_data_end+0xfc00b748>
 800b8e4:	d8c00617 	ldw	r3,24(sp)
 800b8e8:	d9000717 	ldw	r4,28(sp)
 800b8ec:	b825883a 	mov	r18,r23
 800b8f0:	18bfffc4 	addi	r2,r3,-1
 800b8f4:	20ad883a 	add	r22,r4,r2
 800b8f8:	dc000315 	stw	r16,12(sp)
 800b8fc:	00000a06 	br	800b928 <_dtoa_r+0x898>
 800b900:	8018a880 	call	8018a88 <__muldf3>
 800b904:	1009883a 	mov	r4,r2
 800b908:	180b883a 	mov	r5,r3
 800b90c:	000d883a 	mov	r6,zero
 800b910:	000f883a 	mov	r7,zero
 800b914:	1027883a 	mov	r19,r2
 800b918:	182b883a 	mov	r21,r3
 800b91c:	b825883a 	mov	r18,r23
 800b920:	80188440 	call	8018844 <__eqdf2>
 800b924:	10022626 	beq	r2,zero,800c1c0 <_dtoa_r+0x1130>
 800b928:	880d883a 	mov	r6,r17
 800b92c:	a00f883a 	mov	r7,r20
 800b930:	9809883a 	mov	r4,r19
 800b934:	a80b883a 	mov	r5,r21
 800b938:	8017ec40 	call	8017ec4 <__divdf3>
 800b93c:	180b883a 	mov	r5,r3
 800b940:	1009883a 	mov	r4,r2
 800b944:	8019bc40 	call	8019bc4 <__fixdfsi>
 800b948:	1009883a 	mov	r4,r2
 800b94c:	1021883a 	mov	r16,r2
 800b950:	8019c4c0 	call	8019c4c <__floatsidf>
 800b954:	1009883a 	mov	r4,r2
 800b958:	180b883a 	mov	r5,r3
 800b95c:	880d883a 	mov	r6,r17
 800b960:	a00f883a 	mov	r7,r20
 800b964:	8018a880 	call	8018a88 <__muldf3>
 800b968:	9809883a 	mov	r4,r19
 800b96c:	a80b883a 	mov	r5,r21
 800b970:	100d883a 	mov	r6,r2
 800b974:	180f883a 	mov	r7,r3
 800b978:	80192f40 	call	80192f4 <__subdf3>
 800b97c:	82000c04 	addi	r8,r16,48
 800b980:	92000005 	stb	r8,0(r18)
 800b984:	1009883a 	mov	r4,r2
 800b988:	180b883a 	mov	r5,r3
 800b98c:	000d883a 	mov	r6,zero
 800b990:	01d00934 	movhi	r7,16420
 800b994:	1011883a 	mov	r8,r2
 800b998:	bdc00044 	addi	r23,r23,1
 800b99c:	95bfd81e 	bne	r18,r22,800b900 <__alt_data_end+0xfc00b900>
 800b9a0:	802d883a 	mov	r22,r16
 800b9a4:	dc000317 	ldw	r16,12(sp)
 800b9a8:	4009883a 	mov	r4,r8
 800b9ac:	180b883a 	mov	r5,r3
 800b9b0:	400d883a 	mov	r6,r8
 800b9b4:	180f883a 	mov	r7,r3
 800b9b8:	80176280 	call	8017628 <__adddf3>
 800b9bc:	8809883a 	mov	r4,r17
 800b9c0:	a00b883a 	mov	r5,r20
 800b9c4:	100d883a 	mov	r6,r2
 800b9c8:	180f883a 	mov	r7,r3
 800b9cc:	1027883a 	mov	r19,r2
 800b9d0:	1825883a 	mov	r18,r3
 800b9d4:	80189a80 	call	80189a8 <__ledf2>
 800b9d8:	10000816 	blt	r2,zero,800b9fc <_dtoa_r+0x96c>
 800b9dc:	8809883a 	mov	r4,r17
 800b9e0:	a00b883a 	mov	r5,r20
 800b9e4:	980d883a 	mov	r6,r19
 800b9e8:	900f883a 	mov	r7,r18
 800b9ec:	80188440 	call	8018844 <__eqdf2>
 800b9f0:	103f551e 	bne	r2,zero,800b748 <__alt_data_end+0xfc00b748>
 800b9f4:	b580004c 	andi	r22,r22,1
 800b9f8:	b03f5326 	beq	r22,zero,800b748 <__alt_data_end+0xfc00b748>
 800b9fc:	bd7fffc3 	ldbu	r21,-1(r23)
 800ba00:	b8bfffc4 	addi	r2,r23,-1
 800ba04:	1007883a 	mov	r3,r2
 800ba08:	01400e44 	movi	r5,57
 800ba0c:	d9800717 	ldw	r6,28(sp)
 800ba10:	00000506 	br	800ba28 <_dtoa_r+0x998>
 800ba14:	18ffffc4 	addi	r3,r3,-1
 800ba18:	30825e26 	beq	r6,r2,800c394 <_dtoa_r+0x1304>
 800ba1c:	1d400003 	ldbu	r21,0(r3)
 800ba20:	102f883a 	mov	r23,r2
 800ba24:	10bfffc4 	addi	r2,r2,-1
 800ba28:	a9003fcc 	andi	r4,r21,255
 800ba2c:	2100201c 	xori	r4,r4,128
 800ba30:	213fe004 	addi	r4,r4,-128
 800ba34:	217ff726 	beq	r4,r5,800ba14 <__alt_data_end+0xfc00ba14>
 800ba38:	aa000044 	addi	r8,r21,1
 800ba3c:	12000005 	stb	r8,0(r2)
 800ba40:	003f4106 	br	800b748 <__alt_data_end+0xfc00b748>
 800ba44:	d8c00b17 	ldw	r3,44(sp)
 800ba48:	18006726 	beq	r3,zero,800bbe8 <_dtoa_r+0xb58>
 800ba4c:	d9000317 	ldw	r4,12(sp)
 800ba50:	00c00044 	movi	r3,1
 800ba54:	19016a0e 	bge	r3,r4,800c000 <_dtoa_r+0xf70>
 800ba58:	d8800617 	ldw	r2,24(sp)
 800ba5c:	d8c00917 	ldw	r3,36(sp)
 800ba60:	157fffc4 	addi	r21,r2,-1
 800ba64:	1d420716 	blt	r3,r21,800c284 <_dtoa_r+0x11f4>
 800ba68:	1d6bc83a 	sub	r21,r3,r21
 800ba6c:	d8800617 	ldw	r2,24(sp)
 800ba70:	1002c716 	blt	r2,zero,800c590 <_dtoa_r+0x1500>
 800ba74:	dd000817 	ldw	r20,32(sp)
 800ba78:	d8800617 	ldw	r2,24(sp)
 800ba7c:	d9800817 	ldw	r6,32(sp)
 800ba80:	8009883a 	mov	r4,r16
 800ba84:	01400044 	movi	r5,1
 800ba88:	308d883a 	add	r6,r6,r2
 800ba8c:	d9800815 	stw	r6,32(sp)
 800ba90:	b0ad883a 	add	r22,r22,r2
 800ba94:	800e7a00 	call	800e7a0 <__i2b>
 800ba98:	1023883a 	mov	r17,r2
 800ba9c:	a0000826 	beq	r20,zero,800bac0 <_dtoa_r+0xa30>
 800baa0:	0580070e 	bge	zero,r22,800bac0 <_dtoa_r+0xa30>
 800baa4:	b005883a 	mov	r2,r22
 800baa8:	a5812016 	blt	r20,r22,800bf2c <_dtoa_r+0xe9c>
 800baac:	d8c00817 	ldw	r3,32(sp)
 800bab0:	a0a9c83a 	sub	r20,r20,r2
 800bab4:	b0adc83a 	sub	r22,r22,r2
 800bab8:	1887c83a 	sub	r3,r3,r2
 800babc:	d8c00815 	stw	r3,32(sp)
 800bac0:	d9000917 	ldw	r4,36(sp)
 800bac4:	0100140e 	bge	zero,r4,800bb18 <_dtoa_r+0xa88>
 800bac8:	d9800b17 	ldw	r6,44(sp)
 800bacc:	3001e526 	beq	r6,zero,800c264 <_dtoa_r+0x11d4>
 800bad0:	05400e0e 	bge	zero,r21,800bb0c <_dtoa_r+0xa7c>
 800bad4:	880b883a 	mov	r5,r17
 800bad8:	8009883a 	mov	r4,r16
 800badc:	a80d883a 	mov	r6,r21
 800bae0:	800ea6c0 	call	800ea6c <__pow5mult>
 800bae4:	e00d883a 	mov	r6,fp
 800bae8:	8009883a 	mov	r4,r16
 800baec:	100b883a 	mov	r5,r2
 800baf0:	1023883a 	mov	r17,r2
 800baf4:	800e7dc0 	call	800e7dc <__multiply>
 800baf8:	102f883a 	mov	r23,r2
 800bafc:	e00b883a 	mov	r5,fp
 800bb00:	8009883a 	mov	r4,r16
 800bb04:	800e4200 	call	800e420 <_Bfree>
 800bb08:	b839883a 	mov	fp,r23
 800bb0c:	d8800917 	ldw	r2,36(sp)
 800bb10:	154dc83a 	sub	r6,r2,r21
 800bb14:	3001281e 	bne	r6,zero,800bfb8 <_dtoa_r+0xf28>
 800bb18:	05c00044 	movi	r23,1
 800bb1c:	8009883a 	mov	r4,r16
 800bb20:	b80b883a 	mov	r5,r23
 800bb24:	800e7a00 	call	800e7a0 <__i2b>
 800bb28:	d8c00a17 	ldw	r3,40(sp)
 800bb2c:	102b883a 	mov	r21,r2
 800bb30:	00c0310e 	bge	zero,r3,800bbf8 <_dtoa_r+0xb68>
 800bb34:	8009883a 	mov	r4,r16
 800bb38:	100b883a 	mov	r5,r2
 800bb3c:	180d883a 	mov	r6,r3
 800bb40:	800ea6c0 	call	800ea6c <__pow5mult>
 800bb44:	d9000317 	ldw	r4,12(sp)
 800bb48:	102b883a 	mov	r21,r2
 800bb4c:	b9011f0e 	bge	r23,r4,800bfcc <_dtoa_r+0xf3c>
 800bb50:	0027883a 	mov	r19,zero
 800bb54:	a8800417 	ldw	r2,16(r21)
 800bb58:	10800104 	addi	r2,r2,4
 800bb5c:	1085883a 	add	r2,r2,r2
 800bb60:	1085883a 	add	r2,r2,r2
 800bb64:	a885883a 	add	r2,r21,r2
 800bb68:	11000017 	ldw	r4,0(r2)
 800bb6c:	800e6880 	call	800e688 <__hi0bits>
 800bb70:	00c00804 	movi	r3,32
 800bb74:	1885c83a 	sub	r2,r3,r2
 800bb78:	00002506 	br	800bc10 <_dtoa_r+0xb80>
 800bb7c:	01800044 	movi	r6,1
 800bb80:	d9800c15 	stw	r6,48(sp)
 800bb84:	003dec06 	br	800b338 <__alt_data_end+0xfc00b338>
 800bb88:	d8c00817 	ldw	r3,32(sp)
 800bb8c:	d9000517 	ldw	r4,20(sp)
 800bb90:	d8000a15 	stw	zero,40(sp)
 800bb94:	1907c83a 	sub	r3,r3,r4
 800bb98:	010dc83a 	sub	r6,zero,r4
 800bb9c:	d8c00815 	stw	r3,32(sp)
 800bba0:	d9800915 	stw	r6,36(sp)
 800bba4:	003ded06 	br	800b35c <__alt_data_end+0xfc00b35c>
 800bba8:	05adc83a 	sub	r22,zero,r22
 800bbac:	dd800815 	stw	r22,32(sp)
 800bbb0:	002d883a 	mov	r22,zero
 800bbb4:	003de406 	br	800b348 <__alt_data_end+0xfc00b348>
 800bbb8:	d9000517 	ldw	r4,20(sp)
 800bbbc:	8019c4c0 	call	8019c4c <__floatsidf>
 800bbc0:	1009883a 	mov	r4,r2
 800bbc4:	180b883a 	mov	r5,r3
 800bbc8:	b00d883a 	mov	r6,r22
 800bbcc:	a80f883a 	mov	r7,r21
 800bbd0:	80188440 	call	8018844 <__eqdf2>
 800bbd4:	103dc726 	beq	r2,zero,800b2f4 <__alt_data_end+0xfc00b2f4>
 800bbd8:	d8800517 	ldw	r2,20(sp)
 800bbdc:	10bfffc4 	addi	r2,r2,-1
 800bbe0:	d8800515 	stw	r2,20(sp)
 800bbe4:	003dc306 	br	800b2f4 <__alt_data_end+0xfc00b2f4>
 800bbe8:	dd400917 	ldw	r21,36(sp)
 800bbec:	dd000817 	ldw	r20,32(sp)
 800bbf0:	0023883a 	mov	r17,zero
 800bbf4:	003fa906 	br	800ba9c <__alt_data_end+0xfc00ba9c>
 800bbf8:	d9800317 	ldw	r6,12(sp)
 800bbfc:	b981670e 	bge	r23,r6,800c19c <_dtoa_r+0x110c>
 800bc00:	0027883a 	mov	r19,zero
 800bc04:	d8c00a17 	ldw	r3,40(sp)
 800bc08:	183fd21e 	bne	r3,zero,800bb54 <__alt_data_end+0xfc00bb54>
 800bc0c:	00800044 	movi	r2,1
 800bc10:	1585883a 	add	r2,r2,r22
 800bc14:	108007cc 	andi	r2,r2,31
 800bc18:	10005f26 	beq	r2,zero,800bd98 <_dtoa_r+0xd08>
 800bc1c:	00c00804 	movi	r3,32
 800bc20:	1887c83a 	sub	r3,r3,r2
 800bc24:	01000104 	movi	r4,4
 800bc28:	20c2dd0e 	bge	r4,r3,800c7a0 <_dtoa_r+0x1710>
 800bc2c:	d9000817 	ldw	r4,32(sp)
 800bc30:	00c00704 	movi	r3,28
 800bc34:	1885c83a 	sub	r2,r3,r2
 800bc38:	2089883a 	add	r4,r4,r2
 800bc3c:	d9000815 	stw	r4,32(sp)
 800bc40:	a0a9883a 	add	r20,r20,r2
 800bc44:	b0ad883a 	add	r22,r22,r2
 800bc48:	d8800817 	ldw	r2,32(sp)
 800bc4c:	0080050e 	bge	zero,r2,800bc64 <_dtoa_r+0xbd4>
 800bc50:	e00b883a 	mov	r5,fp
 800bc54:	8009883a 	mov	r4,r16
 800bc58:	100d883a 	mov	r6,r2
 800bc5c:	800ebac0 	call	800ebac <__lshift>
 800bc60:	1039883a 	mov	fp,r2
 800bc64:	0580050e 	bge	zero,r22,800bc7c <_dtoa_r+0xbec>
 800bc68:	a80b883a 	mov	r5,r21
 800bc6c:	8009883a 	mov	r4,r16
 800bc70:	b00d883a 	mov	r6,r22
 800bc74:	800ebac0 	call	800ebac <__lshift>
 800bc78:	102b883a 	mov	r21,r2
 800bc7c:	d8c00c17 	ldw	r3,48(sp)
 800bc80:	1801161e 	bne	r3,zero,800c0dc <_dtoa_r+0x104c>
 800bc84:	d8c00617 	ldw	r3,24(sp)
 800bc88:	00c12d0e 	bge	zero,r3,800c140 <_dtoa_r+0x10b0>
 800bc8c:	d8c00b17 	ldw	r3,44(sp)
 800bc90:	1800571e 	bne	r3,zero,800bdf0 <_dtoa_r+0xd60>
 800bc94:	dc800717 	ldw	r18,28(sp)
 800bc98:	dcc00617 	ldw	r19,24(sp)
 800bc9c:	9029883a 	mov	r20,r18
 800bca0:	00000206 	br	800bcac <_dtoa_r+0xc1c>
 800bca4:	800e4480 	call	800e448 <__multadd>
 800bca8:	1039883a 	mov	fp,r2
 800bcac:	e009883a 	mov	r4,fp
 800bcb0:	a80b883a 	mov	r5,r21
 800bcb4:	800ae680 	call	800ae68 <quorem>
 800bcb8:	10800c04 	addi	r2,r2,48
 800bcbc:	90800005 	stb	r2,0(r18)
 800bcc0:	94800044 	addi	r18,r18,1
 800bcc4:	9507c83a 	sub	r3,r18,r20
 800bcc8:	8009883a 	mov	r4,r16
 800bccc:	e00b883a 	mov	r5,fp
 800bcd0:	01800284 	movi	r6,10
 800bcd4:	000f883a 	mov	r7,zero
 800bcd8:	1cfff216 	blt	r3,r19,800bca4 <__alt_data_end+0xfc00bca4>
 800bcdc:	1011883a 	mov	r8,r2
 800bce0:	d8800617 	ldw	r2,24(sp)
 800bce4:	00822e0e 	bge	zero,r2,800c5a0 <_dtoa_r+0x1510>
 800bce8:	d9000717 	ldw	r4,28(sp)
 800bcec:	0025883a 	mov	r18,zero
 800bcf0:	20af883a 	add	r23,r4,r2
 800bcf4:	e00b883a 	mov	r5,fp
 800bcf8:	01800044 	movi	r6,1
 800bcfc:	8009883a 	mov	r4,r16
 800bd00:	da001715 	stw	r8,92(sp)
 800bd04:	800ebac0 	call	800ebac <__lshift>
 800bd08:	1009883a 	mov	r4,r2
 800bd0c:	a80b883a 	mov	r5,r21
 800bd10:	1039883a 	mov	fp,r2
 800bd14:	800ecf40 	call	800ecf4 <__mcmp>
 800bd18:	da001717 	ldw	r8,92(sp)
 800bd1c:	00816e0e 	bge	zero,r2,800c2d8 <_dtoa_r+0x1248>
 800bd20:	b93fffc3 	ldbu	r4,-1(r23)
 800bd24:	b8bfffc4 	addi	r2,r23,-1
 800bd28:	1007883a 	mov	r3,r2
 800bd2c:	01800e44 	movi	r6,57
 800bd30:	d9c00717 	ldw	r7,28(sp)
 800bd34:	00000506 	br	800bd4c <_dtoa_r+0xcbc>
 800bd38:	18ffffc4 	addi	r3,r3,-1
 800bd3c:	38811926 	beq	r7,r2,800c1a4 <_dtoa_r+0x1114>
 800bd40:	19000003 	ldbu	r4,0(r3)
 800bd44:	102f883a 	mov	r23,r2
 800bd48:	10bfffc4 	addi	r2,r2,-1
 800bd4c:	21403fcc 	andi	r5,r4,255
 800bd50:	2940201c 	xori	r5,r5,128
 800bd54:	297fe004 	addi	r5,r5,-128
 800bd58:	29bff726 	beq	r5,r6,800bd38 <__alt_data_end+0xfc00bd38>
 800bd5c:	21000044 	addi	r4,r4,1
 800bd60:	11000005 	stb	r4,0(r2)
 800bd64:	8009883a 	mov	r4,r16
 800bd68:	a80b883a 	mov	r5,r21
 800bd6c:	800e4200 	call	800e420 <_Bfree>
 800bd70:	883e7526 	beq	r17,zero,800b748 <__alt_data_end+0xfc00b748>
 800bd74:	90000426 	beq	r18,zero,800bd88 <_dtoa_r+0xcf8>
 800bd78:	94400326 	beq	r18,r17,800bd88 <_dtoa_r+0xcf8>
 800bd7c:	8009883a 	mov	r4,r16
 800bd80:	900b883a 	mov	r5,r18
 800bd84:	800e4200 	call	800e420 <_Bfree>
 800bd88:	8009883a 	mov	r4,r16
 800bd8c:	880b883a 	mov	r5,r17
 800bd90:	800e4200 	call	800e420 <_Bfree>
 800bd94:	003e6c06 	br	800b748 <__alt_data_end+0xfc00b748>
 800bd98:	00800704 	movi	r2,28
 800bd9c:	d9800817 	ldw	r6,32(sp)
 800bda0:	a0a9883a 	add	r20,r20,r2
 800bda4:	b0ad883a 	add	r22,r22,r2
 800bda8:	308d883a 	add	r6,r6,r2
 800bdac:	d9800815 	stw	r6,32(sp)
 800bdb0:	003fa506 	br	800bc48 <__alt_data_end+0xfc00bc48>
 800bdb4:	013efb84 	movi	r4,-1042
 800bdb8:	246bc83a 	sub	r21,r4,r17
 800bdbc:	9548983a 	sll	r4,r18,r21
 800bdc0:	003d1806 	br	800b224 <__alt_data_end+0xfc00b224>
 800bdc4:	d8000c15 	stw	zero,48(sp)
 800bdc8:	003d5b06 	br	800b338 <__alt_data_end+0xfc00b338>
 800bdcc:	880b883a 	mov	r5,r17
 800bdd0:	8009883a 	mov	r4,r16
 800bdd4:	01800284 	movi	r6,10
 800bdd8:	000f883a 	mov	r7,zero
 800bddc:	800e4480 	call	800e448 <__multadd>
 800bde0:	1023883a 	mov	r17,r2
 800bde4:	d8800d17 	ldw	r2,52(sp)
 800bde8:	0082550e 	bge	zero,r2,800c740 <_dtoa_r+0x16b0>
 800bdec:	d8800615 	stw	r2,24(sp)
 800bdf0:	0500050e 	bge	zero,r20,800be08 <_dtoa_r+0xd78>
 800bdf4:	880b883a 	mov	r5,r17
 800bdf8:	8009883a 	mov	r4,r16
 800bdfc:	a00d883a 	mov	r6,r20
 800be00:	800ebac0 	call	800ebac <__lshift>
 800be04:	1023883a 	mov	r17,r2
 800be08:	98016a1e 	bne	r19,zero,800c3b4 <_dtoa_r+0x1324>
 800be0c:	8829883a 	mov	r20,r17
 800be10:	d9000617 	ldw	r4,24(sp)
 800be14:	dcc00717 	ldw	r19,28(sp)
 800be18:	9480004c 	andi	r18,r18,1
 800be1c:	20bfffc4 	addi	r2,r4,-1
 800be20:	9885883a 	add	r2,r19,r2
 800be24:	d8800415 	stw	r2,16(sp)
 800be28:	dc800615 	stw	r18,24(sp)
 800be2c:	e009883a 	mov	r4,fp
 800be30:	a80b883a 	mov	r5,r21
 800be34:	800ae680 	call	800ae68 <quorem>
 800be38:	e009883a 	mov	r4,fp
 800be3c:	880b883a 	mov	r5,r17
 800be40:	102f883a 	mov	r23,r2
 800be44:	800ecf40 	call	800ecf4 <__mcmp>
 800be48:	8009883a 	mov	r4,r16
 800be4c:	a80b883a 	mov	r5,r21
 800be50:	a00d883a 	mov	r6,r20
 800be54:	102d883a 	mov	r22,r2
 800be58:	800ed540 	call	800ed54 <__mdiff>
 800be5c:	1007883a 	mov	r3,r2
 800be60:	10800317 	ldw	r2,12(r2)
 800be64:	bc800c04 	addi	r18,r23,48
 800be68:	1000971e 	bne	r2,zero,800c0c8 <_dtoa_r+0x1038>
 800be6c:	180b883a 	mov	r5,r3
 800be70:	e009883a 	mov	r4,fp
 800be74:	d8c01515 	stw	r3,84(sp)
 800be78:	800ecf40 	call	800ecf4 <__mcmp>
 800be7c:	d8c01517 	ldw	r3,84(sp)
 800be80:	8009883a 	mov	r4,r16
 800be84:	d8801515 	stw	r2,84(sp)
 800be88:	180b883a 	mov	r5,r3
 800be8c:	800e4200 	call	800e420 <_Bfree>
 800be90:	d8801517 	ldw	r2,84(sp)
 800be94:	1000041e 	bne	r2,zero,800bea8 <_dtoa_r+0xe18>
 800be98:	d9800317 	ldw	r6,12(sp)
 800be9c:	3000021e 	bne	r6,zero,800bea8 <_dtoa_r+0xe18>
 800bea0:	d8c00617 	ldw	r3,24(sp)
 800bea4:	18007626 	beq	r3,zero,800c080 <_dtoa_r+0xff0>
 800bea8:	b0005b16 	blt	r22,zero,800c018 <_dtoa_r+0xf88>
 800beac:	b000041e 	bne	r22,zero,800bec0 <_dtoa_r+0xe30>
 800beb0:	d9000317 	ldw	r4,12(sp)
 800beb4:	2000021e 	bne	r4,zero,800bec0 <_dtoa_r+0xe30>
 800beb8:	d8c00617 	ldw	r3,24(sp)
 800bebc:	18005626 	beq	r3,zero,800c018 <_dtoa_r+0xf88>
 800bec0:	00814d16 	blt	zero,r2,800c3f8 <_dtoa_r+0x1368>
 800bec4:	d8c00417 	ldw	r3,16(sp)
 800bec8:	9d800044 	addi	r22,r19,1
 800becc:	9c800005 	stb	r18,0(r19)
 800bed0:	b02f883a 	mov	r23,r22
 800bed4:	98c14c26 	beq	r19,r3,800c408 <_dtoa_r+0x1378>
 800bed8:	e00b883a 	mov	r5,fp
 800bedc:	8009883a 	mov	r4,r16
 800bee0:	01800284 	movi	r6,10
 800bee4:	000f883a 	mov	r7,zero
 800bee8:	800e4480 	call	800e448 <__multadd>
 800beec:	1039883a 	mov	fp,r2
 800bef0:	8d006d26 	beq	r17,r20,800c0a8 <_dtoa_r+0x1018>
 800bef4:	880b883a 	mov	r5,r17
 800bef8:	01800284 	movi	r6,10
 800befc:	000f883a 	mov	r7,zero
 800bf00:	8009883a 	mov	r4,r16
 800bf04:	800e4480 	call	800e448 <__multadd>
 800bf08:	a00b883a 	mov	r5,r20
 800bf0c:	8009883a 	mov	r4,r16
 800bf10:	01800284 	movi	r6,10
 800bf14:	000f883a 	mov	r7,zero
 800bf18:	1023883a 	mov	r17,r2
 800bf1c:	800e4480 	call	800e448 <__multadd>
 800bf20:	1029883a 	mov	r20,r2
 800bf24:	b027883a 	mov	r19,r22
 800bf28:	003fc006 	br	800be2c <__alt_data_end+0xfc00be2c>
 800bf2c:	a005883a 	mov	r2,r20
 800bf30:	003ede06 	br	800baac <__alt_data_end+0xfc00baac>
 800bf34:	01000044 	movi	r4,1
 800bf38:	d9000b15 	stw	r4,44(sp)
 800bf3c:	d9802217 	ldw	r6,136(sp)
 800bf40:	0180dc0e 	bge	zero,r6,800c2b4 <_dtoa_r+0x1224>
 800bf44:	3023883a 	mov	r17,r6
 800bf48:	d9800d15 	stw	r6,52(sp)
 800bf4c:	d9800615 	stw	r6,24(sp)
 800bf50:	003d1e06 	br	800b3cc <__alt_data_end+0xfc00b3cc>
 800bf54:	d8800617 	ldw	r2,24(sp)
 800bf58:	00be3716 	blt	zero,r2,800b838 <__alt_data_end+0xfc00b838>
 800bf5c:	1000be1e 	bne	r2,zero,800c258 <_dtoa_r+0x11c8>
 800bf60:	8809883a 	mov	r4,r17
 800bf64:	a00b883a 	mov	r5,r20
 800bf68:	000d883a 	mov	r6,zero
 800bf6c:	01d00534 	movhi	r7,16404
 800bf70:	8018a880 	call	8018a88 <__muldf3>
 800bf74:	1009883a 	mov	r4,r2
 800bf78:	180b883a 	mov	r5,r3
 800bf7c:	900d883a 	mov	r6,r18
 800bf80:	980f883a 	mov	r7,r19
 800bf84:	80188c80 	call	80188c8 <__gedf2>
 800bf88:	002b883a 	mov	r21,zero
 800bf8c:	0023883a 	mov	r17,zero
 800bf90:	10007a16 	blt	r2,zero,800c17c <_dtoa_r+0x10ec>
 800bf94:	d9002217 	ldw	r4,136(sp)
 800bf98:	ddc00717 	ldw	r23,28(sp)
 800bf9c:	0108303a 	nor	r4,zero,r4
 800bfa0:	d9000515 	stw	r4,20(sp)
 800bfa4:	8009883a 	mov	r4,r16
 800bfa8:	a80b883a 	mov	r5,r21
 800bfac:	800e4200 	call	800e420 <_Bfree>
 800bfb0:	883f751e 	bne	r17,zero,800bd88 <__alt_data_end+0xfc00bd88>
 800bfb4:	003de406 	br	800b748 <__alt_data_end+0xfc00b748>
 800bfb8:	e00b883a 	mov	r5,fp
 800bfbc:	8009883a 	mov	r4,r16
 800bfc0:	800ea6c0 	call	800ea6c <__pow5mult>
 800bfc4:	1039883a 	mov	fp,r2
 800bfc8:	003ed306 	br	800bb18 <__alt_data_end+0xfc00bb18>
 800bfcc:	903ee01e 	bne	r18,zero,800bb50 <__alt_data_end+0xfc00bb50>
 800bfd0:	00800434 	movhi	r2,16
 800bfd4:	10bfffc4 	addi	r2,r2,-1
 800bfd8:	9884703a 	and	r2,r19,r2
 800bfdc:	103f081e 	bne	r2,zero,800bc00 <__alt_data_end+0xfc00bc00>
 800bfe0:	9cdffc2c 	andhi	r19,r19,32752
 800bfe4:	983f0626 	beq	r19,zero,800bc00 <__alt_data_end+0xfc00bc00>
 800bfe8:	d8800817 	ldw	r2,32(sp)
 800bfec:	b5800044 	addi	r22,r22,1
 800bff0:	04c00044 	movi	r19,1
 800bff4:	10800044 	addi	r2,r2,1
 800bff8:	d8800815 	stw	r2,32(sp)
 800bffc:	003f0106 	br	800bc04 <__alt_data_end+0xfc00bc04>
 800c000:	d9800f17 	ldw	r6,60(sp)
 800c004:	30016826 	beq	r6,zero,800c5a8 <_dtoa_r+0x1518>
 800c008:	10810cc4 	addi	r2,r2,1075
 800c00c:	dd400917 	ldw	r21,36(sp)
 800c010:	dd000817 	ldw	r20,32(sp)
 800c014:	003e9906 	br	800ba7c <__alt_data_end+0xfc00ba7c>
 800c018:	9011883a 	mov	r8,r18
 800c01c:	4007883a 	mov	r3,r8
 800c020:	e02d883a 	mov	r22,fp
 800c024:	0080100e 	bge	zero,r2,800c068 <_dtoa_r+0xfd8>
 800c028:	01800044 	movi	r6,1
 800c02c:	8009883a 	mov	r4,r16
 800c030:	e00b883a 	mov	r5,fp
 800c034:	da001515 	stw	r8,84(sp)
 800c038:	da001715 	stw	r8,92(sp)
 800c03c:	800ebac0 	call	800ebac <__lshift>
 800c040:	1009883a 	mov	r4,r2
 800c044:	a80b883a 	mov	r5,r21
 800c048:	102d883a 	mov	r22,r2
 800c04c:	800ecf40 	call	800ecf4 <__mcmp>
 800c050:	d8c01517 	ldw	r3,84(sp)
 800c054:	da001717 	ldw	r8,92(sp)
 800c058:	0081a50e 	bge	zero,r2,800c6f0 <_dtoa_r+0x1660>
 800c05c:	00800e44 	movi	r2,57
 800c060:	40817b26 	beq	r8,r2,800c650 <_dtoa_r+0x15c0>
 800c064:	40c00044 	addi	r3,r8,1
 800c068:	8825883a 	mov	r18,r17
 800c06c:	9dc00044 	addi	r23,r19,1
 800c070:	98c00005 	stb	r3,0(r19)
 800c074:	a023883a 	mov	r17,r20
 800c078:	b039883a 	mov	fp,r22
 800c07c:	003f3906 	br	800bd64 <__alt_data_end+0xfc00bd64>
 800c080:	00800e44 	movi	r2,57
 800c084:	9011883a 	mov	r8,r18
 800c088:	90817226 	beq	r18,r2,800c654 <_dtoa_r+0x15c4>
 800c08c:	0580010e 	bge	zero,r22,800c094 <_dtoa_r+0x1004>
 800c090:	ba000c44 	addi	r8,r23,49
 800c094:	8825883a 	mov	r18,r17
 800c098:	9dc00044 	addi	r23,r19,1
 800c09c:	9a000005 	stb	r8,0(r19)
 800c0a0:	a023883a 	mov	r17,r20
 800c0a4:	003f2f06 	br	800bd64 <__alt_data_end+0xfc00bd64>
 800c0a8:	880b883a 	mov	r5,r17
 800c0ac:	8009883a 	mov	r4,r16
 800c0b0:	01800284 	movi	r6,10
 800c0b4:	000f883a 	mov	r7,zero
 800c0b8:	800e4480 	call	800e448 <__multadd>
 800c0bc:	1023883a 	mov	r17,r2
 800c0c0:	1029883a 	mov	r20,r2
 800c0c4:	003f9706 	br	800bf24 <__alt_data_end+0xfc00bf24>
 800c0c8:	8009883a 	mov	r4,r16
 800c0cc:	180b883a 	mov	r5,r3
 800c0d0:	800e4200 	call	800e420 <_Bfree>
 800c0d4:	00800044 	movi	r2,1
 800c0d8:	003f7306 	br	800bea8 <__alt_data_end+0xfc00bea8>
 800c0dc:	e009883a 	mov	r4,fp
 800c0e0:	a80b883a 	mov	r5,r21
 800c0e4:	800ecf40 	call	800ecf4 <__mcmp>
 800c0e8:	103ee60e 	bge	r2,zero,800bc84 <__alt_data_end+0xfc00bc84>
 800c0ec:	8009883a 	mov	r4,r16
 800c0f0:	e00b883a 	mov	r5,fp
 800c0f4:	01800284 	movi	r6,10
 800c0f8:	000f883a 	mov	r7,zero
 800c0fc:	800e4480 	call	800e448 <__multadd>
 800c100:	d9000517 	ldw	r4,20(sp)
 800c104:	d9800b17 	ldw	r6,44(sp)
 800c108:	1039883a 	mov	fp,r2
 800c10c:	213fffc4 	addi	r4,r4,-1
 800c110:	d9000515 	stw	r4,20(sp)
 800c114:	303f2d1e 	bne	r6,zero,800bdcc <__alt_data_end+0xfc00bdcc>
 800c118:	d9000d17 	ldw	r4,52(sp)
 800c11c:	0101780e 	bge	zero,r4,800c700 <_dtoa_r+0x1670>
 800c120:	d9000615 	stw	r4,24(sp)
 800c124:	003edb06 	br	800bc94 <__alt_data_end+0xfc00bc94>
 800c128:	00800084 	movi	r2,2
 800c12c:	30818e1e 	bne	r6,r2,800c768 <_dtoa_r+0x16d8>
 800c130:	d8000b15 	stw	zero,44(sp)
 800c134:	003f8106 	br	800bf3c <__alt_data_end+0xfc00bf3c>
 800c138:	d8800717 	ldw	r2,28(sp)
 800c13c:	003c0306 	br	800b14c <__alt_data_end+0xfc00b14c>
 800c140:	d9000317 	ldw	r4,12(sp)
 800c144:	00800084 	movi	r2,2
 800c148:	113ed00e 	bge	r2,r4,800bc8c <__alt_data_end+0xfc00bc8c>
 800c14c:	d8c00617 	ldw	r3,24(sp)
 800c150:	183f901e 	bne	r3,zero,800bf94 <__alt_data_end+0xfc00bf94>
 800c154:	a80b883a 	mov	r5,r21
 800c158:	8009883a 	mov	r4,r16
 800c15c:	01800144 	movi	r6,5
 800c160:	000f883a 	mov	r7,zero
 800c164:	800e4480 	call	800e448 <__multadd>
 800c168:	e009883a 	mov	r4,fp
 800c16c:	100b883a 	mov	r5,r2
 800c170:	102b883a 	mov	r21,r2
 800c174:	800ecf40 	call	800ecf4 <__mcmp>
 800c178:	00bf860e 	bge	zero,r2,800bf94 <__alt_data_end+0xfc00bf94>
 800c17c:	d9800717 	ldw	r6,28(sp)
 800c180:	00800c44 	movi	r2,49
 800c184:	30800005 	stb	r2,0(r6)
 800c188:	d8800517 	ldw	r2,20(sp)
 800c18c:	35c00044 	addi	r23,r6,1
 800c190:	10800044 	addi	r2,r2,1
 800c194:	d8800515 	stw	r2,20(sp)
 800c198:	003f8206 	br	800bfa4 <__alt_data_end+0xfc00bfa4>
 800c19c:	903e981e 	bne	r18,zero,800bc00 <__alt_data_end+0xfc00bc00>
 800c1a0:	003f8b06 	br	800bfd0 <__alt_data_end+0xfc00bfd0>
 800c1a4:	d9800517 	ldw	r6,20(sp)
 800c1a8:	d8c00717 	ldw	r3,28(sp)
 800c1ac:	00800c44 	movi	r2,49
 800c1b0:	31800044 	addi	r6,r6,1
 800c1b4:	d9800515 	stw	r6,20(sp)
 800c1b8:	18800005 	stb	r2,0(r3)
 800c1bc:	003ee906 	br	800bd64 <__alt_data_end+0xfc00bd64>
 800c1c0:	dc000317 	ldw	r16,12(sp)
 800c1c4:	003d6006 	br	800b748 <__alt_data_end+0xfc00b748>
 800c1c8:	8809883a 	mov	r4,r17
 800c1cc:	8019c4c0 	call	8019c4c <__floatsidf>
 800c1d0:	a009883a 	mov	r4,r20
 800c1d4:	a80b883a 	mov	r5,r21
 800c1d8:	100d883a 	mov	r6,r2
 800c1dc:	180f883a 	mov	r7,r3
 800c1e0:	8018a880 	call	8018a88 <__muldf3>
 800c1e4:	1009883a 	mov	r4,r2
 800c1e8:	180b883a 	mov	r5,r3
 800c1ec:	000d883a 	mov	r6,zero
 800c1f0:	01d00734 	movhi	r7,16412
 800c1f4:	80176280 	call	8017628 <__adddf3>
 800c1f8:	1023883a 	mov	r17,r2
 800c1fc:	00bf3034 	movhi	r2,64704
 800c200:	1885883a 	add	r2,r3,r2
 800c204:	d8800e15 	stw	r2,56(sp)
 800c208:	a009883a 	mov	r4,r20
 800c20c:	a80b883a 	mov	r5,r21
 800c210:	000d883a 	mov	r6,zero
 800c214:	01d00534 	movhi	r7,16404
 800c218:	80192f40 	call	80192f4 <__subdf3>
 800c21c:	d9c00e17 	ldw	r7,56(sp)
 800c220:	1009883a 	mov	r4,r2
 800c224:	180b883a 	mov	r5,r3
 800c228:	880d883a 	mov	r6,r17
 800c22c:	102b883a 	mov	r21,r2
 800c230:	1829883a 	mov	r20,r3
 800c234:	80188c80 	call	80188c8 <__gedf2>
 800c238:	00807716 	blt	zero,r2,800c418 <_dtoa_r+0x1388>
 800c23c:	d8800e17 	ldw	r2,56(sp)
 800c240:	a809883a 	mov	r4,r21
 800c244:	a00b883a 	mov	r5,r20
 800c248:	11e0003c 	xorhi	r7,r2,32768
 800c24c:	880d883a 	mov	r6,r17
 800c250:	80189a80 	call	80189a8 <__ledf2>
 800c254:	103d6b0e 	bge	r2,zero,800b804 <__alt_data_end+0xfc00b804>
 800c258:	002b883a 	mov	r21,zero
 800c25c:	0023883a 	mov	r17,zero
 800c260:	003f4c06 	br	800bf94 <__alt_data_end+0xfc00bf94>
 800c264:	d9800917 	ldw	r6,36(sp)
 800c268:	e00b883a 	mov	r5,fp
 800c26c:	8009883a 	mov	r4,r16
 800c270:	800ea6c0 	call	800ea6c <__pow5mult>
 800c274:	1039883a 	mov	fp,r2
 800c278:	003e2706 	br	800bb18 <__alt_data_end+0xfc00bb18>
 800c27c:	d8000b15 	stw	zero,44(sp)
 800c280:	003c4906 	br	800b3a8 <__alt_data_end+0xfc00b3a8>
 800c284:	d9000917 	ldw	r4,36(sp)
 800c288:	d9800a17 	ldw	r6,40(sp)
 800c28c:	dd400915 	stw	r21,36(sp)
 800c290:	a905c83a 	sub	r2,r21,r4
 800c294:	308d883a 	add	r6,r6,r2
 800c298:	d9800a15 	stw	r6,40(sp)
 800c29c:	002b883a 	mov	r21,zero
 800c2a0:	003df206 	br	800ba6c <__alt_data_end+0xfc00ba6c>
 800c2a4:	dc800e15 	stw	r18,56(sp)
 800c2a8:	982b883a 	mov	r21,r19
 800c2ac:	04400084 	movi	r17,2
 800c2b0:	003c7406 	br	800b484 <__alt_data_end+0xfc00b484>
 800c2b4:	04400044 	movi	r17,1
 800c2b8:	dc400d15 	stw	r17,52(sp)
 800c2bc:	dc400615 	stw	r17,24(sp)
 800c2c0:	dc402215 	stw	r17,136(sp)
 800c2c4:	80001115 	stw	zero,68(r16)
 800c2c8:	000b883a 	mov	r5,zero
 800c2cc:	003c4a06 	br	800b3f8 <__alt_data_end+0xfc00b3f8>
 800c2d0:	3023883a 	mov	r17,r6
 800c2d4:	003ffb06 	br	800c2c4 <__alt_data_end+0xfc00c2c4>
 800c2d8:	1000021e 	bne	r2,zero,800c2e4 <_dtoa_r+0x1254>
 800c2dc:	4200004c 	andi	r8,r8,1
 800c2e0:	403e8f1e 	bne	r8,zero,800bd20 <__alt_data_end+0xfc00bd20>
 800c2e4:	01000c04 	movi	r4,48
 800c2e8:	00000106 	br	800c2f0 <_dtoa_r+0x1260>
 800c2ec:	102f883a 	mov	r23,r2
 800c2f0:	b8bfffc4 	addi	r2,r23,-1
 800c2f4:	10c00007 	ldb	r3,0(r2)
 800c2f8:	193ffc26 	beq	r3,r4,800c2ec <__alt_data_end+0xfc00c2ec>
 800c2fc:	003e9906 	br	800bd64 <__alt_data_end+0xfc00bd64>
 800c300:	d9000517 	ldw	r4,20(sp)
 800c304:	012fc83a 	sub	r23,zero,r4
 800c308:	b800ad26 	beq	r23,zero,800c5c0 <_dtoa_r+0x1530>
 800c30c:	b88003cc 	andi	r2,r23,15
 800c310:	100490fa 	slli	r2,r2,3
 800c314:	00c200b4 	movhi	r3,2050
 800c318:	18f8be04 	addi	r3,r3,-7432
 800c31c:	1885883a 	add	r2,r3,r2
 800c320:	11800017 	ldw	r6,0(r2)
 800c324:	11c00117 	ldw	r7,4(r2)
 800c328:	b82fd13a 	srai	r23,r23,4
 800c32c:	9009883a 	mov	r4,r18
 800c330:	980b883a 	mov	r5,r19
 800c334:	8018a880 	call	8018a88 <__muldf3>
 800c338:	1029883a 	mov	r20,r2
 800c33c:	182b883a 	mov	r21,r3
 800c340:	b800f426 	beq	r23,zero,800c714 <_dtoa_r+0x1684>
 800c344:	020200b4 	movhi	r8,2050
 800c348:	4238b404 	addi	r8,r8,-7472
 800c34c:	8029883a 	mov	r20,r16
 800c350:	04400084 	movi	r17,2
 800c354:	4021883a 	mov	r16,r8
 800c358:	b980004c 	andi	r6,r23,1
 800c35c:	1009883a 	mov	r4,r2
 800c360:	b82fd07a 	srai	r23,r23,1
 800c364:	180b883a 	mov	r5,r3
 800c368:	30000426 	beq	r6,zero,800c37c <_dtoa_r+0x12ec>
 800c36c:	81800017 	ldw	r6,0(r16)
 800c370:	81c00117 	ldw	r7,4(r16)
 800c374:	8c400044 	addi	r17,r17,1
 800c378:	8018a880 	call	8018a88 <__muldf3>
 800c37c:	84000204 	addi	r16,r16,8
 800c380:	b83ff51e 	bne	r23,zero,800c358 <__alt_data_end+0xfc00c358>
 800c384:	a021883a 	mov	r16,r20
 800c388:	182b883a 	mov	r21,r3
 800c38c:	1029883a 	mov	r20,r2
 800c390:	003c5506 	br	800b4e8 <__alt_data_end+0xfc00b4e8>
 800c394:	d9800517 	ldw	r6,20(sp)
 800c398:	d9000717 	ldw	r4,28(sp)
 800c39c:	00c00c04 	movi	r3,48
 800c3a0:	31800044 	addi	r6,r6,1
 800c3a4:	d9800515 	stw	r6,20(sp)
 800c3a8:	20c00005 	stb	r3,0(r4)
 800c3ac:	02000c44 	movi	r8,49
 800c3b0:	003da206 	br	800ba3c <__alt_data_end+0xfc00ba3c>
 800c3b4:	89400117 	ldw	r5,4(r17)
 800c3b8:	8009883a 	mov	r4,r16
 800c3bc:	800e3780 	call	800e378 <_Balloc>
 800c3c0:	89800417 	ldw	r6,16(r17)
 800c3c4:	11000304 	addi	r4,r2,12
 800c3c8:	89400304 	addi	r5,r17,12
 800c3cc:	31800084 	addi	r6,r6,2
 800c3d0:	318d883a 	add	r6,r6,r6
 800c3d4:	318d883a 	add	r6,r6,r6
 800c3d8:	1027883a 	mov	r19,r2
 800c3dc:	800e0e40 	call	800e0e4 <memcpy>
 800c3e0:	8009883a 	mov	r4,r16
 800c3e4:	980b883a 	mov	r5,r19
 800c3e8:	01800044 	movi	r6,1
 800c3ec:	800ebac0 	call	800ebac <__lshift>
 800c3f0:	1029883a 	mov	r20,r2
 800c3f4:	003e8606 	br	800be10 <__alt_data_end+0xfc00be10>
 800c3f8:	00800e44 	movi	r2,57
 800c3fc:	90809526 	beq	r18,r2,800c654 <_dtoa_r+0x15c4>
 800c400:	92000044 	addi	r8,r18,1
 800c404:	003f2306 	br	800c094 <__alt_data_end+0xfc00c094>
 800c408:	9011883a 	mov	r8,r18
 800c40c:	8825883a 	mov	r18,r17
 800c410:	a023883a 	mov	r17,r20
 800c414:	003e3706 	br	800bcf4 <__alt_data_end+0xfc00bcf4>
 800c418:	002b883a 	mov	r21,zero
 800c41c:	0023883a 	mov	r17,zero
 800c420:	003f5606 	br	800c17c <__alt_data_end+0xfc00c17c>
 800c424:	51bfffc4 	addi	r6,r10,-1
 800c428:	300490fa 	slli	r2,r6,3
 800c42c:	00c200b4 	movhi	r3,2050
 800c430:	18f8be04 	addi	r3,r3,-7432
 800c434:	1885883a 	add	r2,r3,r2
 800c438:	d9c00e17 	ldw	r7,56(sp)
 800c43c:	11000017 	ldw	r4,0(r2)
 800c440:	11400117 	ldw	r5,4(r2)
 800c444:	d8800717 	ldw	r2,28(sp)
 800c448:	d9801015 	stw	r6,64(sp)
 800c44c:	880d883a 	mov	r6,r17
 800c450:	da801615 	stw	r10,88(sp)
 800c454:	15c00044 	addi	r23,r2,1
 800c458:	8018a880 	call	8018a88 <__muldf3>
 800c45c:	a80b883a 	mov	r5,r21
 800c460:	a009883a 	mov	r4,r20
 800c464:	d8c01115 	stw	r3,68(sp)
 800c468:	d8800e15 	stw	r2,56(sp)
 800c46c:	8019bc40 	call	8019bc4 <__fixdfsi>
 800c470:	1009883a 	mov	r4,r2
 800c474:	1023883a 	mov	r17,r2
 800c478:	8019c4c0 	call	8019c4c <__floatsidf>
 800c47c:	a009883a 	mov	r4,r20
 800c480:	a80b883a 	mov	r5,r21
 800c484:	100d883a 	mov	r6,r2
 800c488:	180f883a 	mov	r7,r3
 800c48c:	80192f40 	call	80192f4 <__subdf3>
 800c490:	1813883a 	mov	r9,r3
 800c494:	d8c00717 	ldw	r3,28(sp)
 800c498:	8c400c04 	addi	r17,r17,48
 800c49c:	1011883a 	mov	r8,r2
 800c4a0:	1c400005 	stb	r17,0(r3)
 800c4a4:	da801617 	ldw	r10,88(sp)
 800c4a8:	00800044 	movi	r2,1
 800c4ac:	50802326 	beq	r10,r2,800c53c <_dtoa_r+0x14ac>
 800c4b0:	d8800717 	ldw	r2,28(sp)
 800c4b4:	b82b883a 	mov	r21,r23
 800c4b8:	dc001315 	stw	r16,76(sp)
 800c4bc:	12a9883a 	add	r20,r2,r10
 800c4c0:	4807883a 	mov	r3,r9
 800c4c4:	4005883a 	mov	r2,r8
 800c4c8:	dc801415 	stw	r18,80(sp)
 800c4cc:	000d883a 	mov	r6,zero
 800c4d0:	01d00934 	movhi	r7,16420
 800c4d4:	1009883a 	mov	r4,r2
 800c4d8:	180b883a 	mov	r5,r3
 800c4dc:	8018a880 	call	8018a88 <__muldf3>
 800c4e0:	180b883a 	mov	r5,r3
 800c4e4:	1009883a 	mov	r4,r2
 800c4e8:	1821883a 	mov	r16,r3
 800c4ec:	1025883a 	mov	r18,r2
 800c4f0:	8019bc40 	call	8019bc4 <__fixdfsi>
 800c4f4:	1009883a 	mov	r4,r2
 800c4f8:	1023883a 	mov	r17,r2
 800c4fc:	8019c4c0 	call	8019c4c <__floatsidf>
 800c500:	9009883a 	mov	r4,r18
 800c504:	800b883a 	mov	r5,r16
 800c508:	100d883a 	mov	r6,r2
 800c50c:	180f883a 	mov	r7,r3
 800c510:	8c400c04 	addi	r17,r17,48
 800c514:	80192f40 	call	80192f4 <__subdf3>
 800c518:	ad400044 	addi	r21,r21,1
 800c51c:	ac7fffc5 	stb	r17,-1(r21)
 800c520:	ad3fea1e 	bne	r21,r20,800c4cc <__alt_data_end+0xfc00c4cc>
 800c524:	1813883a 	mov	r9,r3
 800c528:	d8c01017 	ldw	r3,64(sp)
 800c52c:	dc001317 	ldw	r16,76(sp)
 800c530:	dc801417 	ldw	r18,80(sp)
 800c534:	1011883a 	mov	r8,r2
 800c538:	b8ef883a 	add	r23,r23,r3
 800c53c:	d9000e17 	ldw	r4,56(sp)
 800c540:	d9401117 	ldw	r5,68(sp)
 800c544:	000d883a 	mov	r6,zero
 800c548:	01cff834 	movhi	r7,16352
 800c54c:	da001715 	stw	r8,92(sp)
 800c550:	da401515 	stw	r9,84(sp)
 800c554:	80176280 	call	8017628 <__adddf3>
 800c558:	da001717 	ldw	r8,92(sp)
 800c55c:	da401517 	ldw	r9,84(sp)
 800c560:	1009883a 	mov	r4,r2
 800c564:	400d883a 	mov	r6,r8
 800c568:	480f883a 	mov	r7,r9
 800c56c:	180b883a 	mov	r5,r3
 800c570:	80189a80 	call	80189a8 <__ledf2>
 800c574:	da001717 	ldw	r8,92(sp)
 800c578:	da401517 	ldw	r9,84(sp)
 800c57c:	10003b0e 	bge	r2,zero,800c66c <_dtoa_r+0x15dc>
 800c580:	d9001217 	ldw	r4,72(sp)
 800c584:	bd7fffc3 	ldbu	r21,-1(r23)
 800c588:	d9000515 	stw	r4,20(sp)
 800c58c:	003d1c06 	br	800ba00 <__alt_data_end+0xfc00ba00>
 800c590:	d8c00817 	ldw	r3,32(sp)
 800c594:	18a9c83a 	sub	r20,r3,r2
 800c598:	0005883a 	mov	r2,zero
 800c59c:	003d3706 	br	800ba7c <__alt_data_end+0xfc00ba7c>
 800c5a0:	00800044 	movi	r2,1
 800c5a4:	003dd006 	br	800bce8 <__alt_data_end+0xfc00bce8>
 800c5a8:	d8c00217 	ldw	r3,8(sp)
 800c5ac:	00800d84 	movi	r2,54
 800c5b0:	dd400917 	ldw	r21,36(sp)
 800c5b4:	10c5c83a 	sub	r2,r2,r3
 800c5b8:	dd000817 	ldw	r20,32(sp)
 800c5bc:	003d2f06 	br	800ba7c <__alt_data_end+0xfc00ba7c>
 800c5c0:	9029883a 	mov	r20,r18
 800c5c4:	982b883a 	mov	r21,r19
 800c5c8:	04400084 	movi	r17,2
 800c5cc:	003bc606 	br	800b4e8 <__alt_data_end+0xfc00b4e8>
 800c5d0:	d8800617 	ldw	r2,24(sp)
 800c5d4:	103efc26 	beq	r2,zero,800c1c8 <__alt_data_end+0xfc00c1c8>
 800c5d8:	d8c00d17 	ldw	r3,52(sp)
 800c5dc:	00fc890e 	bge	zero,r3,800b804 <__alt_data_end+0xfc00b804>
 800c5e0:	a80b883a 	mov	r5,r21
 800c5e4:	a009883a 	mov	r4,r20
 800c5e8:	000d883a 	mov	r6,zero
 800c5ec:	01d00934 	movhi	r7,16420
 800c5f0:	8018a880 	call	8018a88 <__muldf3>
 800c5f4:	89000044 	addi	r4,r17,1
 800c5f8:	1029883a 	mov	r20,r2
 800c5fc:	182b883a 	mov	r21,r3
 800c600:	8019c4c0 	call	8019c4c <__floatsidf>
 800c604:	a009883a 	mov	r4,r20
 800c608:	a80b883a 	mov	r5,r21
 800c60c:	100d883a 	mov	r6,r2
 800c610:	180f883a 	mov	r7,r3
 800c614:	8018a880 	call	8018a88 <__muldf3>
 800c618:	1009883a 	mov	r4,r2
 800c61c:	180b883a 	mov	r5,r3
 800c620:	000d883a 	mov	r6,zero
 800c624:	01d00734 	movhi	r7,16412
 800c628:	80176280 	call	8017628 <__adddf3>
 800c62c:	d9000517 	ldw	r4,20(sp)
 800c630:	1023883a 	mov	r17,r2
 800c634:	00bf3034 	movhi	r2,64704
 800c638:	213fffc4 	addi	r4,r4,-1
 800c63c:	1885883a 	add	r2,r3,r2
 800c640:	d9001215 	stw	r4,72(sp)
 800c644:	d8800e15 	stw	r2,56(sp)
 800c648:	da800d17 	ldw	r10,52(sp)
 800c64c:	003bc306 	br	800b55c <__alt_data_end+0xfc00b55c>
 800c650:	b039883a 	mov	fp,r22
 800c654:	01000e44 	movi	r4,57
 800c658:	8825883a 	mov	r18,r17
 800c65c:	9dc00044 	addi	r23,r19,1
 800c660:	99000005 	stb	r4,0(r19)
 800c664:	a023883a 	mov	r17,r20
 800c668:	003dae06 	br	800bd24 <__alt_data_end+0xfc00bd24>
 800c66c:	d9800e17 	ldw	r6,56(sp)
 800c670:	d9c01117 	ldw	r7,68(sp)
 800c674:	0009883a 	mov	r4,zero
 800c678:	014ff834 	movhi	r5,16352
 800c67c:	da001715 	stw	r8,92(sp)
 800c680:	da401515 	stw	r9,84(sp)
 800c684:	80192f40 	call	80192f4 <__subdf3>
 800c688:	da001717 	ldw	r8,92(sp)
 800c68c:	da401517 	ldw	r9,84(sp)
 800c690:	1009883a 	mov	r4,r2
 800c694:	180b883a 	mov	r5,r3
 800c698:	400d883a 	mov	r6,r8
 800c69c:	480f883a 	mov	r7,r9
 800c6a0:	80188c80 	call	80188c8 <__gedf2>
 800c6a4:	00bc570e 	bge	zero,r2,800b804 <__alt_data_end+0xfc00b804>
 800c6a8:	01000c04 	movi	r4,48
 800c6ac:	00000106 	br	800c6b4 <_dtoa_r+0x1624>
 800c6b0:	102f883a 	mov	r23,r2
 800c6b4:	b8bfffc4 	addi	r2,r23,-1
 800c6b8:	10c00007 	ldb	r3,0(r2)
 800c6bc:	193ffc26 	beq	r3,r4,800c6b0 <__alt_data_end+0xfc00c6b0>
 800c6c0:	d9801217 	ldw	r6,72(sp)
 800c6c4:	d9800515 	stw	r6,20(sp)
 800c6c8:	003c1f06 	br	800b748 <__alt_data_end+0xfc00b748>
 800c6cc:	d8801217 	ldw	r2,72(sp)
 800c6d0:	dc001117 	ldw	r16,68(sp)
 800c6d4:	d8800515 	stw	r2,20(sp)
 800c6d8:	003cc906 	br	800ba00 <__alt_data_end+0xfc00ba00>
 800c6dc:	dd801317 	ldw	r22,76(sp)
 800c6e0:	dc001117 	ldw	r16,68(sp)
 800c6e4:	dcc01417 	ldw	r19,80(sp)
 800c6e8:	dc801017 	ldw	r18,64(sp)
 800c6ec:	003c4506 	br	800b804 <__alt_data_end+0xfc00b804>
 800c6f0:	103e5d1e 	bne	r2,zero,800c068 <__alt_data_end+0xfc00c068>
 800c6f4:	4080004c 	andi	r2,r8,1
 800c6f8:	103e5b26 	beq	r2,zero,800c068 <__alt_data_end+0xfc00c068>
 800c6fc:	003e5706 	br	800c05c <__alt_data_end+0xfc00c05c>
 800c700:	d8c00317 	ldw	r3,12(sp)
 800c704:	00800084 	movi	r2,2
 800c708:	10c00a16 	blt	r2,r3,800c734 <_dtoa_r+0x16a4>
 800c70c:	d9000d17 	ldw	r4,52(sp)
 800c710:	003e8306 	br	800c120 <__alt_data_end+0xfc00c120>
 800c714:	04400084 	movi	r17,2
 800c718:	003b7306 	br	800b4e8 <__alt_data_end+0xfc00b4e8>
 800c71c:	d9801217 	ldw	r6,72(sp)
 800c720:	d9800515 	stw	r6,20(sp)
 800c724:	003cb606 	br	800ba00 <__alt_data_end+0xfc00ba00>
 800c728:	d9001217 	ldw	r4,72(sp)
 800c72c:	d9000515 	stw	r4,20(sp)
 800c730:	003c0506 	br	800b748 <__alt_data_end+0xfc00b748>
 800c734:	d9800d17 	ldw	r6,52(sp)
 800c738:	d9800615 	stw	r6,24(sp)
 800c73c:	003e8306 	br	800c14c <__alt_data_end+0xfc00c14c>
 800c740:	d9800317 	ldw	r6,12(sp)
 800c744:	00800084 	movi	r2,2
 800c748:	11800216 	blt	r2,r6,800c754 <_dtoa_r+0x16c4>
 800c74c:	d8800d17 	ldw	r2,52(sp)
 800c750:	003da606 	br	800bdec <__alt_data_end+0xfc00bdec>
 800c754:	d8800d17 	ldw	r2,52(sp)
 800c758:	d8800615 	stw	r2,24(sp)
 800c75c:	003e7b06 	br	800c14c <__alt_data_end+0xfc00c14c>
 800c760:	05000044 	movi	r20,1
 800c764:	003b0506 	br	800b37c <__alt_data_end+0xfc00b37c>
 800c768:	8009883a 	mov	r4,r16
 800c76c:	80001115 	stw	zero,68(r16)
 800c770:	000b883a 	mov	r5,zero
 800c774:	800e3780 	call	800e378 <_Balloc>
 800c778:	d8800715 	stw	r2,28(sp)
 800c77c:	d8c00717 	ldw	r3,28(sp)
 800c780:	00bfffc4 	movi	r2,-1
 800c784:	01000044 	movi	r4,1
 800c788:	d8800615 	stw	r2,24(sp)
 800c78c:	80c01015 	stw	r3,64(r16)
 800c790:	d9000b15 	stw	r4,44(sp)
 800c794:	d8002215 	stw	zero,136(sp)
 800c798:	d8800d15 	stw	r2,52(sp)
 800c79c:	003c1906 	br	800b804 <__alt_data_end+0xfc00b804>
 800c7a0:	193d2926 	beq	r3,r4,800bc48 <__alt_data_end+0xfc00bc48>
 800c7a4:	00c00f04 	movi	r3,60
 800c7a8:	1885c83a 	sub	r2,r3,r2
 800c7ac:	003d7b06 	br	800bd9c <__alt_data_end+0xfc00bd9c>
 800c7b0:	000b883a 	mov	r5,zero
 800c7b4:	003b1006 	br	800b3f8 <__alt_data_end+0xfc00b3f8>

0800c7b8 <_fflush_r>:
 800c7b8:	defffb04 	addi	sp,sp,-20
 800c7bc:	dcc00315 	stw	r19,12(sp)
 800c7c0:	dc000015 	stw	r16,0(sp)
 800c7c4:	dfc00415 	stw	ra,16(sp)
 800c7c8:	dc800215 	stw	r18,8(sp)
 800c7cc:	dc400115 	stw	r17,4(sp)
 800c7d0:	2027883a 	mov	r19,r4
 800c7d4:	2821883a 	mov	r16,r5
 800c7d8:	20000226 	beq	r4,zero,800c7e4 <_fflush_r+0x2c>
 800c7dc:	20800e17 	ldw	r2,56(r4)
 800c7e0:	10005326 	beq	r2,zero,800c930 <_fflush_r+0x178>
 800c7e4:	8080030b 	ldhu	r2,12(r16)
 800c7e8:	10ffffcc 	andi	r3,r2,65535
 800c7ec:	18e0001c 	xori	r3,r3,32768
 800c7f0:	18e00004 	addi	r3,r3,-32768
 800c7f4:	18002c26 	beq	r3,zero,800c8a8 <_fflush_r+0xf0>
 800c7f8:	10c0020c 	andi	r3,r2,8
 800c7fc:	1800321e 	bne	r3,zero,800c8c8 <_fflush_r+0x110>
 800c800:	80c00117 	ldw	r3,4(r16)
 800c804:	10820014 	ori	r2,r2,2048
 800c808:	8080030d 	sth	r2,12(r16)
 800c80c:	00c0570e 	bge	zero,r3,800c96c <_fflush_r+0x1b4>
 800c810:	82000a17 	ldw	r8,40(r16)
 800c814:	40002426 	beq	r8,zero,800c8a8 <_fflush_r+0xf0>
 800c818:	9c400017 	ldw	r17,0(r19)
 800c81c:	10c4000c 	andi	r3,r2,4096
 800c820:	98000015 	stw	zero,0(r19)
 800c824:	18004626 	beq	r3,zero,800c940 <_fflush_r+0x188>
 800c828:	81801417 	ldw	r6,80(r16)
 800c82c:	10c0010c 	andi	r3,r2,4
 800c830:	18000626 	beq	r3,zero,800c84c <_fflush_r+0x94>
 800c834:	80c00117 	ldw	r3,4(r16)
 800c838:	80800c17 	ldw	r2,48(r16)
 800c83c:	30cdc83a 	sub	r6,r6,r3
 800c840:	10000226 	beq	r2,zero,800c84c <_fflush_r+0x94>
 800c844:	80800f17 	ldw	r2,60(r16)
 800c848:	308dc83a 	sub	r6,r6,r2
 800c84c:	81400717 	ldw	r5,28(r16)
 800c850:	9809883a 	mov	r4,r19
 800c854:	000f883a 	mov	r7,zero
 800c858:	403ee83a 	callr	r8
 800c85c:	00ffffc4 	movi	r3,-1
 800c860:	10c04526 	beq	r2,r3,800c978 <_fflush_r+0x1c0>
 800c864:	80c0030b 	ldhu	r3,12(r16)
 800c868:	81000417 	ldw	r4,16(r16)
 800c86c:	80000115 	stw	zero,4(r16)
 800c870:	197dffcc 	andi	r5,r3,63487
 800c874:	8140030d 	sth	r5,12(r16)
 800c878:	81000015 	stw	r4,0(r16)
 800c87c:	18c4000c 	andi	r3,r3,4096
 800c880:	18000126 	beq	r3,zero,800c888 <_fflush_r+0xd0>
 800c884:	80801415 	stw	r2,80(r16)
 800c888:	81400c17 	ldw	r5,48(r16)
 800c88c:	9c400015 	stw	r17,0(r19)
 800c890:	28000526 	beq	r5,zero,800c8a8 <_fflush_r+0xf0>
 800c894:	80801004 	addi	r2,r16,64
 800c898:	28800226 	beq	r5,r2,800c8a4 <_fflush_r+0xec>
 800c89c:	9809883a 	mov	r4,r19
 800c8a0:	800d1780 	call	800d178 <_free_r>
 800c8a4:	80000c15 	stw	zero,48(r16)
 800c8a8:	0005883a 	mov	r2,zero
 800c8ac:	dfc00417 	ldw	ra,16(sp)
 800c8b0:	dcc00317 	ldw	r19,12(sp)
 800c8b4:	dc800217 	ldw	r18,8(sp)
 800c8b8:	dc400117 	ldw	r17,4(sp)
 800c8bc:	dc000017 	ldw	r16,0(sp)
 800c8c0:	dec00504 	addi	sp,sp,20
 800c8c4:	f800283a 	ret
 800c8c8:	84800417 	ldw	r18,16(r16)
 800c8cc:	903ff626 	beq	r18,zero,800c8a8 <__alt_data_end+0xfc00c8a8>
 800c8d0:	84400017 	ldw	r17,0(r16)
 800c8d4:	108000cc 	andi	r2,r2,3
 800c8d8:	84800015 	stw	r18,0(r16)
 800c8dc:	8ca3c83a 	sub	r17,r17,r18
 800c8e0:	10001526 	beq	r2,zero,800c938 <_fflush_r+0x180>
 800c8e4:	0005883a 	mov	r2,zero
 800c8e8:	80800215 	stw	r2,8(r16)
 800c8ec:	04400316 	blt	zero,r17,800c8fc <_fflush_r+0x144>
 800c8f0:	003fed06 	br	800c8a8 <__alt_data_end+0xfc00c8a8>
 800c8f4:	90a5883a 	add	r18,r18,r2
 800c8f8:	047feb0e 	bge	zero,r17,800c8a8 <__alt_data_end+0xfc00c8a8>
 800c8fc:	80800917 	ldw	r2,36(r16)
 800c900:	81400717 	ldw	r5,28(r16)
 800c904:	880f883a 	mov	r7,r17
 800c908:	900d883a 	mov	r6,r18
 800c90c:	9809883a 	mov	r4,r19
 800c910:	103ee83a 	callr	r2
 800c914:	88a3c83a 	sub	r17,r17,r2
 800c918:	00bff616 	blt	zero,r2,800c8f4 <__alt_data_end+0xfc00c8f4>
 800c91c:	80c0030b 	ldhu	r3,12(r16)
 800c920:	00bfffc4 	movi	r2,-1
 800c924:	18c01014 	ori	r3,r3,64
 800c928:	80c0030d 	sth	r3,12(r16)
 800c92c:	003fdf06 	br	800c8ac <__alt_data_end+0xfc00c8ac>
 800c930:	800cd740 	call	800cd74 <__sinit>
 800c934:	003fab06 	br	800c7e4 <__alt_data_end+0xfc00c7e4>
 800c938:	80800517 	ldw	r2,20(r16)
 800c93c:	003fea06 	br	800c8e8 <__alt_data_end+0xfc00c8e8>
 800c940:	81400717 	ldw	r5,28(r16)
 800c944:	000d883a 	mov	r6,zero
 800c948:	9809883a 	mov	r4,r19
 800c94c:	01c00044 	movi	r7,1
 800c950:	403ee83a 	callr	r8
 800c954:	100d883a 	mov	r6,r2
 800c958:	00bfffc4 	movi	r2,-1
 800c95c:	30801326 	beq	r6,r2,800c9ac <_fflush_r+0x1f4>
 800c960:	8080030b 	ldhu	r2,12(r16)
 800c964:	82000a17 	ldw	r8,40(r16)
 800c968:	003fb006 	br	800c82c <__alt_data_end+0xfc00c82c>
 800c96c:	80c00f17 	ldw	r3,60(r16)
 800c970:	00ffa716 	blt	zero,r3,800c810 <__alt_data_end+0xfc00c810>
 800c974:	003fcc06 	br	800c8a8 <__alt_data_end+0xfc00c8a8>
 800c978:	98c00017 	ldw	r3,0(r19)
 800c97c:	183fb926 	beq	r3,zero,800c864 <__alt_data_end+0xfc00c864>
 800c980:	01000744 	movi	r4,29
 800c984:	19000226 	beq	r3,r4,800c990 <_fflush_r+0x1d8>
 800c988:	01000584 	movi	r4,22
 800c98c:	1900101e 	bne	r3,r4,800c9d0 <_fflush_r+0x218>
 800c990:	8080030b 	ldhu	r2,12(r16)
 800c994:	80c00417 	ldw	r3,16(r16)
 800c998:	80000115 	stw	zero,4(r16)
 800c99c:	10bdffcc 	andi	r2,r2,63487
 800c9a0:	8080030d 	sth	r2,12(r16)
 800c9a4:	80c00015 	stw	r3,0(r16)
 800c9a8:	003fb706 	br	800c888 <__alt_data_end+0xfc00c888>
 800c9ac:	98800017 	ldw	r2,0(r19)
 800c9b0:	103feb26 	beq	r2,zero,800c960 <__alt_data_end+0xfc00c960>
 800c9b4:	00c00744 	movi	r3,29
 800c9b8:	10c00226 	beq	r2,r3,800c9c4 <_fflush_r+0x20c>
 800c9bc:	00c00584 	movi	r3,22
 800c9c0:	10ffd61e 	bne	r2,r3,800c91c <__alt_data_end+0xfc00c91c>
 800c9c4:	9c400015 	stw	r17,0(r19)
 800c9c8:	0005883a 	mov	r2,zero
 800c9cc:	003fb706 	br	800c8ac <__alt_data_end+0xfc00c8ac>
 800c9d0:	80c0030b 	ldhu	r3,12(r16)
 800c9d4:	18c01014 	ori	r3,r3,64
 800c9d8:	80c0030d 	sth	r3,12(r16)
 800c9dc:	003fb306 	br	800c8ac <__alt_data_end+0xfc00c8ac>

0800c9e0 <fflush>:
 800c9e0:	20000526 	beq	r4,zero,800c9f8 <fflush+0x18>
 800c9e4:	008200b4 	movhi	r2,2050
 800c9e8:	10809004 	addi	r2,r2,576
 800c9ec:	200b883a 	mov	r5,r4
 800c9f0:	11000017 	ldw	r4,0(r2)
 800c9f4:	800c7b81 	jmpi	800c7b8 <_fflush_r>
 800c9f8:	008200b4 	movhi	r2,2050
 800c9fc:	10808f04 	addi	r2,r2,572
 800ca00:	11000017 	ldw	r4,0(r2)
 800ca04:	01420074 	movhi	r5,2049
 800ca08:	2971ee04 	addi	r5,r5,-14408
 800ca0c:	800d9c41 	jmpi	800d9c4 <_fwalk_reent>

0800ca10 <__fp_lock>:
 800ca10:	0005883a 	mov	r2,zero
 800ca14:	f800283a 	ret

0800ca18 <__fp_unlock>:
 800ca18:	0005883a 	mov	r2,zero
 800ca1c:	f800283a 	ret

0800ca20 <_cleanup_r>:
 800ca20:	01420074 	movhi	r5,2049
 800ca24:	2954ae04 	addi	r5,r5,21176
 800ca28:	800d90c1 	jmpi	800d90c <_fwalk>

0800ca2c <__sinit.part.1>:
 800ca2c:	defff604 	addi	sp,sp,-40
 800ca30:	00c20074 	movhi	r3,2049
 800ca34:	dfc00915 	stw	ra,36(sp)
 800ca38:	df000815 	stw	fp,32(sp)
 800ca3c:	ddc00715 	stw	r23,28(sp)
 800ca40:	dd800615 	stw	r22,24(sp)
 800ca44:	dd400515 	stw	r21,20(sp)
 800ca48:	dd000415 	stw	r20,16(sp)
 800ca4c:	dcc00315 	stw	r19,12(sp)
 800ca50:	dc800215 	stw	r18,8(sp)
 800ca54:	dc400115 	stw	r17,4(sp)
 800ca58:	dc000015 	stw	r16,0(sp)
 800ca5c:	18f28804 	addi	r3,r3,-13792
 800ca60:	24000117 	ldw	r16,4(r4)
 800ca64:	20c00f15 	stw	r3,60(r4)
 800ca68:	07000044 	movi	fp,1
 800ca6c:	00c000c4 	movi	r3,3
 800ca70:	2080bb04 	addi	r2,r4,748
 800ca74:	20c0b915 	stw	r3,740(r4)
 800ca78:	27000e15 	stw	fp,56(r4)
 800ca7c:	2080ba15 	stw	r2,744(r4)
 800ca80:	2000b815 	stw	zero,736(r4)
 800ca84:	05c00204 	movi	r23,8
 800ca88:	00800104 	movi	r2,4
 800ca8c:	2025883a 	mov	r18,r4
 800ca90:	b80d883a 	mov	r6,r23
 800ca94:	81001704 	addi	r4,r16,92
 800ca98:	000b883a 	mov	r5,zero
 800ca9c:	80000015 	stw	zero,0(r16)
 800caa0:	80000115 	stw	zero,4(r16)
 800caa4:	80000215 	stw	zero,8(r16)
 800caa8:	8080030d 	sth	r2,12(r16)
 800caac:	80001915 	stw	zero,100(r16)
 800cab0:	8000038d 	sth	zero,14(r16)
 800cab4:	80000415 	stw	zero,16(r16)
 800cab8:	80000515 	stw	zero,20(r16)
 800cabc:	80000615 	stw	zero,24(r16)
 800cac0:	80040b40 	call	80040b4 <memset>
 800cac4:	05820074 	movhi	r22,2049
 800cac8:	94400217 	ldw	r17,8(r18)
 800cacc:	05420074 	movhi	r21,2049
 800cad0:	05020074 	movhi	r20,2049
 800cad4:	04c20074 	movhi	r19,2049
 800cad8:	b5bf7204 	addi	r22,r22,-568
 800cadc:	ad7f8904 	addi	r21,r21,-476
 800cae0:	a53fa804 	addi	r20,r20,-352
 800cae4:	9cffbf04 	addi	r19,r19,-260
 800cae8:	85800815 	stw	r22,32(r16)
 800caec:	85400915 	stw	r21,36(r16)
 800caf0:	85000a15 	stw	r20,40(r16)
 800caf4:	84c00b15 	stw	r19,44(r16)
 800caf8:	84000715 	stw	r16,28(r16)
 800cafc:	00800284 	movi	r2,10
 800cb00:	89001704 	addi	r4,r17,92
 800cb04:	b80d883a 	mov	r6,r23
 800cb08:	000b883a 	mov	r5,zero
 800cb0c:	88000015 	stw	zero,0(r17)
 800cb10:	88000115 	stw	zero,4(r17)
 800cb14:	88000215 	stw	zero,8(r17)
 800cb18:	8880030d 	sth	r2,12(r17)
 800cb1c:	88001915 	stw	zero,100(r17)
 800cb20:	8f00038d 	sth	fp,14(r17)
 800cb24:	88000415 	stw	zero,16(r17)
 800cb28:	88000515 	stw	zero,20(r17)
 800cb2c:	88000615 	stw	zero,24(r17)
 800cb30:	80040b40 	call	80040b4 <memset>
 800cb34:	94000317 	ldw	r16,12(r18)
 800cb38:	00800484 	movi	r2,18
 800cb3c:	8c400715 	stw	r17,28(r17)
 800cb40:	8d800815 	stw	r22,32(r17)
 800cb44:	8d400915 	stw	r21,36(r17)
 800cb48:	8d000a15 	stw	r20,40(r17)
 800cb4c:	8cc00b15 	stw	r19,44(r17)
 800cb50:	8080030d 	sth	r2,12(r16)
 800cb54:	00800084 	movi	r2,2
 800cb58:	80000015 	stw	zero,0(r16)
 800cb5c:	80000115 	stw	zero,4(r16)
 800cb60:	80000215 	stw	zero,8(r16)
 800cb64:	80001915 	stw	zero,100(r16)
 800cb68:	8080038d 	sth	r2,14(r16)
 800cb6c:	80000415 	stw	zero,16(r16)
 800cb70:	80000515 	stw	zero,20(r16)
 800cb74:	80000615 	stw	zero,24(r16)
 800cb78:	81001704 	addi	r4,r16,92
 800cb7c:	000b883a 	mov	r5,zero
 800cb80:	b80d883a 	mov	r6,r23
 800cb84:	80040b40 	call	80040b4 <memset>
 800cb88:	84000715 	stw	r16,28(r16)
 800cb8c:	85800815 	stw	r22,32(r16)
 800cb90:	85400915 	stw	r21,36(r16)
 800cb94:	85000a15 	stw	r20,40(r16)
 800cb98:	84c00b15 	stw	r19,44(r16)
 800cb9c:	dfc00917 	ldw	ra,36(sp)
 800cba0:	df000817 	ldw	fp,32(sp)
 800cba4:	ddc00717 	ldw	r23,28(sp)
 800cba8:	dd800617 	ldw	r22,24(sp)
 800cbac:	dd400517 	ldw	r21,20(sp)
 800cbb0:	dd000417 	ldw	r20,16(sp)
 800cbb4:	dcc00317 	ldw	r19,12(sp)
 800cbb8:	dc800217 	ldw	r18,8(sp)
 800cbbc:	dc400117 	ldw	r17,4(sp)
 800cbc0:	dc000017 	ldw	r16,0(sp)
 800cbc4:	dec00a04 	addi	sp,sp,40
 800cbc8:	f800283a 	ret

0800cbcc <__sfmoreglue>:
 800cbcc:	defffc04 	addi	sp,sp,-16
 800cbd0:	dc800215 	stw	r18,8(sp)
 800cbd4:	2825883a 	mov	r18,r5
 800cbd8:	dc000015 	stw	r16,0(sp)
 800cbdc:	01401a04 	movi	r5,104
 800cbe0:	2021883a 	mov	r16,r4
 800cbe4:	9009883a 	mov	r4,r18
 800cbe8:	dfc00315 	stw	ra,12(sp)
 800cbec:	dc400115 	stw	r17,4(sp)
 800cbf0:	800334c0 	call	800334c <__mulsi3>
 800cbf4:	8009883a 	mov	r4,r16
 800cbf8:	11400304 	addi	r5,r2,12
 800cbfc:	1023883a 	mov	r17,r2
 800cc00:	800390c0 	call	800390c <_malloc_r>
 800cc04:	1021883a 	mov	r16,r2
 800cc08:	10000726 	beq	r2,zero,800cc28 <__sfmoreglue+0x5c>
 800cc0c:	11000304 	addi	r4,r2,12
 800cc10:	10000015 	stw	zero,0(r2)
 800cc14:	14800115 	stw	r18,4(r2)
 800cc18:	11000215 	stw	r4,8(r2)
 800cc1c:	000b883a 	mov	r5,zero
 800cc20:	880d883a 	mov	r6,r17
 800cc24:	80040b40 	call	80040b4 <memset>
 800cc28:	8005883a 	mov	r2,r16
 800cc2c:	dfc00317 	ldw	ra,12(sp)
 800cc30:	dc800217 	ldw	r18,8(sp)
 800cc34:	dc400117 	ldw	r17,4(sp)
 800cc38:	dc000017 	ldw	r16,0(sp)
 800cc3c:	dec00404 	addi	sp,sp,16
 800cc40:	f800283a 	ret

0800cc44 <__sfp>:
 800cc44:	008200b4 	movhi	r2,2050
 800cc48:	defffb04 	addi	sp,sp,-20
 800cc4c:	10808f04 	addi	r2,r2,572
 800cc50:	dc800215 	stw	r18,8(sp)
 800cc54:	14800017 	ldw	r18,0(r2)
 800cc58:	dcc00315 	stw	r19,12(sp)
 800cc5c:	dfc00415 	stw	ra,16(sp)
 800cc60:	90800e17 	ldw	r2,56(r18)
 800cc64:	dc400115 	stw	r17,4(sp)
 800cc68:	dc000015 	stw	r16,0(sp)
 800cc6c:	2027883a 	mov	r19,r4
 800cc70:	1000021e 	bne	r2,zero,800cc7c <__sfp+0x38>
 800cc74:	9009883a 	mov	r4,r18
 800cc78:	800ca2c0 	call	800ca2c <__sinit.part.1>
 800cc7c:	9480b804 	addi	r18,r18,736
 800cc80:	047fffc4 	movi	r17,-1
 800cc84:	91400117 	ldw	r5,4(r18)
 800cc88:	94000217 	ldw	r16,8(r18)
 800cc8c:	297fffc4 	addi	r5,r5,-1
 800cc90:	28000a16 	blt	r5,zero,800ccbc <__sfp+0x78>
 800cc94:	8080030f 	ldh	r2,12(r16)
 800cc98:	10000c26 	beq	r2,zero,800cccc <__sfp+0x88>
 800cc9c:	80c01d04 	addi	r3,r16,116
 800cca0:	00000206 	br	800ccac <__sfp+0x68>
 800cca4:	18bfe60f 	ldh	r2,-104(r3)
 800cca8:	10000826 	beq	r2,zero,800cccc <__sfp+0x88>
 800ccac:	297fffc4 	addi	r5,r5,-1
 800ccb0:	1c3ffd04 	addi	r16,r3,-12
 800ccb4:	18c01a04 	addi	r3,r3,104
 800ccb8:	2c7ffa1e 	bne	r5,r17,800cca4 <__alt_data_end+0xfc00cca4>
 800ccbc:	90800017 	ldw	r2,0(r18)
 800ccc0:	10001d26 	beq	r2,zero,800cd38 <__sfp+0xf4>
 800ccc4:	1025883a 	mov	r18,r2
 800ccc8:	003fee06 	br	800cc84 <__alt_data_end+0xfc00cc84>
 800cccc:	00bfffc4 	movi	r2,-1
 800ccd0:	8080038d 	sth	r2,14(r16)
 800ccd4:	00800044 	movi	r2,1
 800ccd8:	8080030d 	sth	r2,12(r16)
 800ccdc:	80001915 	stw	zero,100(r16)
 800cce0:	80000015 	stw	zero,0(r16)
 800cce4:	80000215 	stw	zero,8(r16)
 800cce8:	80000115 	stw	zero,4(r16)
 800ccec:	80000415 	stw	zero,16(r16)
 800ccf0:	80000515 	stw	zero,20(r16)
 800ccf4:	80000615 	stw	zero,24(r16)
 800ccf8:	81001704 	addi	r4,r16,92
 800ccfc:	000b883a 	mov	r5,zero
 800cd00:	01800204 	movi	r6,8
 800cd04:	80040b40 	call	80040b4 <memset>
 800cd08:	8005883a 	mov	r2,r16
 800cd0c:	80000c15 	stw	zero,48(r16)
 800cd10:	80000d15 	stw	zero,52(r16)
 800cd14:	80001115 	stw	zero,68(r16)
 800cd18:	80001215 	stw	zero,72(r16)
 800cd1c:	dfc00417 	ldw	ra,16(sp)
 800cd20:	dcc00317 	ldw	r19,12(sp)
 800cd24:	dc800217 	ldw	r18,8(sp)
 800cd28:	dc400117 	ldw	r17,4(sp)
 800cd2c:	dc000017 	ldw	r16,0(sp)
 800cd30:	dec00504 	addi	sp,sp,20
 800cd34:	f800283a 	ret
 800cd38:	9809883a 	mov	r4,r19
 800cd3c:	01400104 	movi	r5,4
 800cd40:	800cbcc0 	call	800cbcc <__sfmoreglue>
 800cd44:	90800015 	stw	r2,0(r18)
 800cd48:	103fde1e 	bne	r2,zero,800ccc4 <__alt_data_end+0xfc00ccc4>
 800cd4c:	00800304 	movi	r2,12
 800cd50:	98800015 	stw	r2,0(r19)
 800cd54:	0005883a 	mov	r2,zero
 800cd58:	003ff006 	br	800cd1c <__alt_data_end+0xfc00cd1c>

0800cd5c <_cleanup>:
 800cd5c:	008200b4 	movhi	r2,2050
 800cd60:	10808f04 	addi	r2,r2,572
 800cd64:	11000017 	ldw	r4,0(r2)
 800cd68:	01420074 	movhi	r5,2049
 800cd6c:	2954ae04 	addi	r5,r5,21176
 800cd70:	800d90c1 	jmpi	800d90c <_fwalk>

0800cd74 <__sinit>:
 800cd74:	20800e17 	ldw	r2,56(r4)
 800cd78:	10000126 	beq	r2,zero,800cd80 <__sinit+0xc>
 800cd7c:	f800283a 	ret
 800cd80:	800ca2c1 	jmpi	800ca2c <__sinit.part.1>

0800cd84 <__sfp_lock_acquire>:
 800cd84:	f800283a 	ret

0800cd88 <__sfp_lock_release>:
 800cd88:	f800283a 	ret

0800cd8c <__sinit_lock_acquire>:
 800cd8c:	f800283a 	ret

0800cd90 <__sinit_lock_release>:
 800cd90:	f800283a 	ret

0800cd94 <__fp_lock_all>:
 800cd94:	008200b4 	movhi	r2,2050
 800cd98:	10809004 	addi	r2,r2,576
 800cd9c:	11000017 	ldw	r4,0(r2)
 800cda0:	01420074 	movhi	r5,2049
 800cda4:	29728404 	addi	r5,r5,-13808
 800cda8:	800d90c1 	jmpi	800d90c <_fwalk>

0800cdac <__fp_unlock_all>:
 800cdac:	008200b4 	movhi	r2,2050
 800cdb0:	10809004 	addi	r2,r2,576
 800cdb4:	11000017 	ldw	r4,0(r2)
 800cdb8:	01420074 	movhi	r5,2049
 800cdbc:	29728604 	addi	r5,r5,-13800
 800cdc0:	800d90c1 	jmpi	800d90c <_fwalk>

0800cdc4 <_fread_r>:
 800cdc4:	defff504 	addi	sp,sp,-44
 800cdc8:	dd000515 	stw	r20,20(sp)
 800cdcc:	dc800315 	stw	r18,12(sp)
 800cdd0:	2029883a 	mov	r20,r4
 800cdd4:	2825883a 	mov	r18,r5
 800cdd8:	3809883a 	mov	r4,r7
 800cddc:	300b883a 	mov	r5,r6
 800cde0:	ddc00815 	stw	r23,32(sp)
 800cde4:	dd800715 	stw	r22,28(sp)
 800cde8:	dd400615 	stw	r21,24(sp)
 800cdec:	dc000115 	stw	r16,4(sp)
 800cdf0:	dfc00a15 	stw	ra,40(sp)
 800cdf4:	df000915 	stw	fp,36(sp)
 800cdf8:	dcc00415 	stw	r19,16(sp)
 800cdfc:	dc400215 	stw	r17,8(sp)
 800ce00:	302f883a 	mov	r23,r6
 800ce04:	382b883a 	mov	r21,r7
 800ce08:	800334c0 	call	800334c <__mulsi3>
 800ce0c:	102d883a 	mov	r22,r2
 800ce10:	dc000b17 	ldw	r16,44(sp)
 800ce14:	10003926 	beq	r2,zero,800cefc <_fread_r+0x138>
 800ce18:	a0000226 	beq	r20,zero,800ce24 <_fread_r+0x60>
 800ce1c:	a0800e17 	ldw	r2,56(r20)
 800ce20:	10007326 	beq	r2,zero,800cff0 <_fread_r+0x22c>
 800ce24:	800cd840 	call	800cd84 <__sfp_lock_acquire>
 800ce28:	80c0030b 	ldhu	r3,12(r16)
 800ce2c:	1888000c 	andi	r2,r3,8192
 800ce30:	1000061e 	bne	r2,zero,800ce4c <_fread_r+0x88>
 800ce34:	81001917 	ldw	r4,100(r16)
 800ce38:	00b7ffc4 	movi	r2,-8193
 800ce3c:	18c80014 	ori	r3,r3,8192
 800ce40:	2084703a 	and	r2,r4,r2
 800ce44:	80c0030d 	sth	r3,12(r16)
 800ce48:	80801915 	stw	r2,100(r16)
 800ce4c:	84400117 	ldw	r17,4(r16)
 800ce50:	88003116 	blt	r17,zero,800cf18 <_fread_r+0x154>
 800ce54:	18c0008c 	andi	r3,r3,2
 800ce58:	8805883a 	mov	r2,r17
 800ce5c:	1800331e 	bne	r3,zero,800cf2c <_fread_r+0x168>
 800ce60:	b027883a 	mov	r19,r22
 800ce64:	00000b06 	br	800ce94 <_fread_r+0xd0>
 800ce68:	800e0e40 	call	800e0e4 <memcpy>
 800ce6c:	80800017 	ldw	r2,0(r16)
 800ce70:	9465883a 	add	r18,r18,r17
 800ce74:	9c67c83a 	sub	r19,r19,r17
 800ce78:	1463883a 	add	r17,r2,r17
 800ce7c:	a009883a 	mov	r4,r20
 800ce80:	800b883a 	mov	r5,r16
 800ce84:	84400015 	stw	r17,0(r16)
 800ce88:	800fae40 	call	800fae4 <__srefill_r>
 800ce8c:	10001d1e 	bne	r2,zero,800cf04 <_fread_r+0x140>
 800ce90:	84400117 	ldw	r17,4(r16)
 800ce94:	9009883a 	mov	r4,r18
 800ce98:	880d883a 	mov	r6,r17
 800ce9c:	81400017 	ldw	r5,0(r16)
 800cea0:	8cfff136 	bltu	r17,r19,800ce68 <__alt_data_end+0xfc00ce68>
 800cea4:	980d883a 	mov	r6,r19
 800cea8:	800e0e40 	call	800e0e4 <memcpy>
 800ceac:	80800117 	ldw	r2,4(r16)
 800ceb0:	80c00017 	ldw	r3,0(r16)
 800ceb4:	14c5c83a 	sub	r2,r2,r19
 800ceb8:	1ce7883a 	add	r19,r3,r19
 800cebc:	80800115 	stw	r2,4(r16)
 800cec0:	84c00015 	stw	r19,0(r16)
 800cec4:	800cd880 	call	800cd88 <__sfp_lock_release>
 800cec8:	a805883a 	mov	r2,r21
 800cecc:	dfc00a17 	ldw	ra,40(sp)
 800ced0:	df000917 	ldw	fp,36(sp)
 800ced4:	ddc00817 	ldw	r23,32(sp)
 800ced8:	dd800717 	ldw	r22,28(sp)
 800cedc:	dd400617 	ldw	r21,24(sp)
 800cee0:	dd000517 	ldw	r20,20(sp)
 800cee4:	dcc00417 	ldw	r19,16(sp)
 800cee8:	dc800317 	ldw	r18,12(sp)
 800ceec:	dc400217 	ldw	r17,8(sp)
 800cef0:	dc000117 	ldw	r16,4(sp)
 800cef4:	dec00b04 	addi	sp,sp,44
 800cef8:	f800283a 	ret
 800cefc:	0005883a 	mov	r2,zero
 800cf00:	003ff206 	br	800cecc <__alt_data_end+0xfc00cecc>
 800cf04:	800cd880 	call	800cd88 <__sfp_lock_release>
 800cf08:	b4c9c83a 	sub	r4,r22,r19
 800cf0c:	b80b883a 	mov	r5,r23
 800cf10:	80174340 	call	8017434 <__udivsi3>
 800cf14:	003fed06 	br	800cecc <__alt_data_end+0xfc00cecc>
 800cf18:	80000115 	stw	zero,4(r16)
 800cf1c:	18c0008c 	andi	r3,r3,2
 800cf20:	0005883a 	mov	r2,zero
 800cf24:	0023883a 	mov	r17,zero
 800cf28:	183fcd26 	beq	r3,zero,800ce60 <__alt_data_end+0xfc00ce60>
 800cf2c:	1023883a 	mov	r17,r2
 800cf30:	b080012e 	bgeu	r22,r2,800cf38 <_fread_r+0x174>
 800cf34:	b023883a 	mov	r17,r22
 800cf38:	81400017 	ldw	r5,0(r16)
 800cf3c:	9009883a 	mov	r4,r18
 800cf40:	880d883a 	mov	r6,r17
 800cf44:	800e0e40 	call	800e0e4 <memcpy>
 800cf48:	80800117 	ldw	r2,4(r16)
 800cf4c:	84c00017 	ldw	r19,0(r16)
 800cf50:	81400c17 	ldw	r5,48(r16)
 800cf54:	1445c83a 	sub	r2,r2,r17
 800cf58:	9c67883a 	add	r19,r19,r17
 800cf5c:	84c00015 	stw	r19,0(r16)
 800cf60:	80800115 	stw	r2,4(r16)
 800cf64:	9465883a 	add	r18,r18,r17
 800cf68:	b463c83a 	sub	r17,r22,r17
 800cf6c:	28002726 	beq	r5,zero,800d00c <_fread_r+0x248>
 800cf70:	883fd426 	beq	r17,zero,800cec4 <__alt_data_end+0xfc00cec4>
 800cf74:	80801004 	addi	r2,r16,64
 800cf78:	28800326 	beq	r5,r2,800cf88 <_fread_r+0x1c4>
 800cf7c:	a009883a 	mov	r4,r20
 800cf80:	800d1780 	call	800d178 <_free_r>
 800cf84:	84c00017 	ldw	r19,0(r16)
 800cf88:	80000c15 	stw	zero,48(r16)
 800cf8c:	80c00417 	ldw	r3,16(r16)
 800cf90:	87000517 	ldw	fp,20(r16)
 800cf94:	d8c00015 	stw	r3,0(sp)
 800cf98:	00000106 	br	800cfa0 <_fread_r+0x1dc>
 800cf9c:	883fc926 	beq	r17,zero,800cec4 <__alt_data_end+0xfc00cec4>
 800cfa0:	84800415 	stw	r18,16(r16)
 800cfa4:	84400515 	stw	r17,20(r16)
 800cfa8:	84800015 	stw	r18,0(r16)
 800cfac:	a009883a 	mov	r4,r20
 800cfb0:	800b883a 	mov	r5,r16
 800cfb4:	800fae40 	call	800fae4 <__srefill_r>
 800cfb8:	d8c00017 	ldw	r3,0(sp)
 800cfbc:	81000117 	ldw	r4,4(r16)
 800cfc0:	87000515 	stw	fp,20(r16)
 800cfc4:	80c00415 	stw	r3,16(r16)
 800cfc8:	84c00015 	stw	r19,0(r16)
 800cfcc:	80000115 	stw	zero,4(r16)
 800cfd0:	8923c83a 	sub	r17,r17,r4
 800cfd4:	9125883a 	add	r18,r18,r4
 800cfd8:	103ff026 	beq	r2,zero,800cf9c <__alt_data_end+0xfc00cf9c>
 800cfdc:	800cd880 	call	800cd88 <__sfp_lock_release>
 800cfe0:	b449c83a 	sub	r4,r22,r17
 800cfe4:	b80b883a 	mov	r5,r23
 800cfe8:	80174340 	call	8017434 <__udivsi3>
 800cfec:	003fb706 	br	800cecc <__alt_data_end+0xfc00cecc>
 800cff0:	a009883a 	mov	r4,r20
 800cff4:	800cd740 	call	800cd74 <__sinit>
 800cff8:	800cd840 	call	800cd84 <__sfp_lock_acquire>
 800cffc:	80c0030b 	ldhu	r3,12(r16)
 800d000:	1888000c 	andi	r2,r3,8192
 800d004:	103f911e 	bne	r2,zero,800ce4c <__alt_data_end+0xfc00ce4c>
 800d008:	003f8a06 	br	800ce34 <__alt_data_end+0xfc00ce34>
 800d00c:	883fdf1e 	bne	r17,zero,800cf8c <__alt_data_end+0xfc00cf8c>
 800d010:	003fac06 	br	800cec4 <__alt_data_end+0xfc00cec4>

0800d014 <fread>:
 800d014:	008200b4 	movhi	r2,2050
 800d018:	10809004 	addi	r2,r2,576
 800d01c:	2011883a 	mov	r8,r4
 800d020:	11000017 	ldw	r4,0(r2)
 800d024:	defffe04 	addi	sp,sp,-8
 800d028:	2807883a 	mov	r3,r5
 800d02c:	3005883a 	mov	r2,r6
 800d030:	d9c00015 	stw	r7,0(sp)
 800d034:	400b883a 	mov	r5,r8
 800d038:	180d883a 	mov	r6,r3
 800d03c:	100f883a 	mov	r7,r2
 800d040:	dfc00115 	stw	ra,4(sp)
 800d044:	800cdc40 	call	800cdc4 <_fread_r>
 800d048:	dfc00117 	ldw	ra,4(sp)
 800d04c:	dec00204 	addi	sp,sp,8
 800d050:	f800283a 	ret

0800d054 <_malloc_trim_r>:
 800d054:	defffb04 	addi	sp,sp,-20
 800d058:	dcc00315 	stw	r19,12(sp)
 800d05c:	04c200b4 	movhi	r19,2050
 800d060:	dc800215 	stw	r18,8(sp)
 800d064:	dc400115 	stw	r17,4(sp)
 800d068:	dc000015 	stw	r16,0(sp)
 800d06c:	dfc00415 	stw	ra,16(sp)
 800d070:	2821883a 	mov	r16,r5
 800d074:	9cfa7c04 	addi	r19,r19,-5648
 800d078:	2025883a 	mov	r18,r4
 800d07c:	801a8a40 	call	801a8a4 <__malloc_lock>
 800d080:	98800217 	ldw	r2,8(r19)
 800d084:	14400117 	ldw	r17,4(r2)
 800d088:	00bfff04 	movi	r2,-4
 800d08c:	88a2703a 	and	r17,r17,r2
 800d090:	8c21c83a 	sub	r16,r17,r16
 800d094:	8403fbc4 	addi	r16,r16,4079
 800d098:	8020d33a 	srli	r16,r16,12
 800d09c:	0083ffc4 	movi	r2,4095
 800d0a0:	843fffc4 	addi	r16,r16,-1
 800d0a4:	8020933a 	slli	r16,r16,12
 800d0a8:	1400060e 	bge	r2,r16,800d0c4 <_malloc_trim_r+0x70>
 800d0ac:	9009883a 	mov	r4,r18
 800d0b0:	000b883a 	mov	r5,zero
 800d0b4:	800432c0 	call	800432c <_sbrk_r>
 800d0b8:	98c00217 	ldw	r3,8(r19)
 800d0bc:	1c47883a 	add	r3,r3,r17
 800d0c0:	10c00a26 	beq	r2,r3,800d0ec <_malloc_trim_r+0x98>
 800d0c4:	9009883a 	mov	r4,r18
 800d0c8:	801a8c40 	call	801a8c4 <__malloc_unlock>
 800d0cc:	0005883a 	mov	r2,zero
 800d0d0:	dfc00417 	ldw	ra,16(sp)
 800d0d4:	dcc00317 	ldw	r19,12(sp)
 800d0d8:	dc800217 	ldw	r18,8(sp)
 800d0dc:	dc400117 	ldw	r17,4(sp)
 800d0e0:	dc000017 	ldw	r16,0(sp)
 800d0e4:	dec00504 	addi	sp,sp,20
 800d0e8:	f800283a 	ret
 800d0ec:	9009883a 	mov	r4,r18
 800d0f0:	040bc83a 	sub	r5,zero,r16
 800d0f4:	800432c0 	call	800432c <_sbrk_r>
 800d0f8:	00ffffc4 	movi	r3,-1
 800d0fc:	10c00d26 	beq	r2,r3,800d134 <_malloc_trim_r+0xe0>
 800d100:	00c200b4 	movhi	r3,2050
 800d104:	18ca3104 	addi	r3,r3,10436
 800d108:	18800017 	ldw	r2,0(r3)
 800d10c:	99000217 	ldw	r4,8(r19)
 800d110:	8c23c83a 	sub	r17,r17,r16
 800d114:	8c400054 	ori	r17,r17,1
 800d118:	1421c83a 	sub	r16,r2,r16
 800d11c:	24400115 	stw	r17,4(r4)
 800d120:	9009883a 	mov	r4,r18
 800d124:	1c000015 	stw	r16,0(r3)
 800d128:	801a8c40 	call	801a8c4 <__malloc_unlock>
 800d12c:	00800044 	movi	r2,1
 800d130:	003fe706 	br	800d0d0 <__alt_data_end+0xfc00d0d0>
 800d134:	9009883a 	mov	r4,r18
 800d138:	000b883a 	mov	r5,zero
 800d13c:	800432c0 	call	800432c <_sbrk_r>
 800d140:	99000217 	ldw	r4,8(r19)
 800d144:	014003c4 	movi	r5,15
 800d148:	1107c83a 	sub	r3,r2,r4
 800d14c:	28ffdd0e 	bge	r5,r3,800d0c4 <__alt_data_end+0xfc00d0c4>
 800d150:	014200b4 	movhi	r5,2050
 800d154:	29409104 	addi	r5,r5,580
 800d158:	29400017 	ldw	r5,0(r5)
 800d15c:	18c00054 	ori	r3,r3,1
 800d160:	20c00115 	stw	r3,4(r4)
 800d164:	00c200b4 	movhi	r3,2050
 800d168:	1145c83a 	sub	r2,r2,r5
 800d16c:	18ca3104 	addi	r3,r3,10436
 800d170:	18800015 	stw	r2,0(r3)
 800d174:	003fd306 	br	800d0c4 <__alt_data_end+0xfc00d0c4>

0800d178 <_free_r>:
 800d178:	28004c26 	beq	r5,zero,800d2ac <_free_r+0x134>
 800d17c:	defffd04 	addi	sp,sp,-12
 800d180:	dc400115 	stw	r17,4(sp)
 800d184:	dc000015 	stw	r16,0(sp)
 800d188:	2023883a 	mov	r17,r4
 800d18c:	2821883a 	mov	r16,r5
 800d190:	dfc00215 	stw	ra,8(sp)
 800d194:	801a8a40 	call	801a8a4 <__malloc_lock>
 800d198:	813fff17 	ldw	r4,-4(r16)
 800d19c:	00bfff84 	movi	r2,-2
 800d1a0:	024200b4 	movhi	r9,2050
 800d1a4:	81bffe04 	addi	r6,r16,-8
 800d1a8:	2084703a 	and	r2,r4,r2
 800d1ac:	4a7a7c04 	addi	r9,r9,-5648
 800d1b0:	308b883a 	add	r5,r6,r2
 800d1b4:	2a000117 	ldw	r8,4(r5)
 800d1b8:	49c00217 	ldw	r7,8(r9)
 800d1bc:	00ffff04 	movi	r3,-4
 800d1c0:	40c6703a 	and	r3,r8,r3
 800d1c4:	39405326 	beq	r7,r5,800d314 <_free_r+0x19c>
 800d1c8:	28c00115 	stw	r3,4(r5)
 800d1cc:	2100004c 	andi	r4,r4,1
 800d1d0:	2000091e 	bne	r4,zero,800d1f8 <_free_r+0x80>
 800d1d4:	81fffe17 	ldw	r7,-8(r16)
 800d1d8:	4a000204 	addi	r8,r9,8
 800d1dc:	31cdc83a 	sub	r6,r6,r7
 800d1e0:	31000217 	ldw	r4,8(r6)
 800d1e4:	11c5883a 	add	r2,r2,r7
 800d1e8:	22006126 	beq	r4,r8,800d370 <_free_r+0x1f8>
 800d1ec:	31c00317 	ldw	r7,12(r6)
 800d1f0:	21c00315 	stw	r7,12(r4)
 800d1f4:	39000215 	stw	r4,8(r7)
 800d1f8:	28c9883a 	add	r4,r5,r3
 800d1fc:	21c00117 	ldw	r7,4(r4)
 800d200:	39c0004c 	andi	r7,r7,1
 800d204:	38000d1e 	bne	r7,zero,800d23c <_free_r+0xc4>
 800d208:	29000217 	ldw	r4,8(r5)
 800d20c:	10c5883a 	add	r2,r2,r3
 800d210:	00c200b4 	movhi	r3,2050
 800d214:	18fa7e04 	addi	r3,r3,-5640
 800d218:	20c07526 	beq	r4,r3,800d3f0 <_free_r+0x278>
 800d21c:	29c00317 	ldw	r7,12(r5)
 800d220:	11400054 	ori	r5,r2,1
 800d224:	3087883a 	add	r3,r6,r2
 800d228:	21c00315 	stw	r7,12(r4)
 800d22c:	39000215 	stw	r4,8(r7)
 800d230:	31400115 	stw	r5,4(r6)
 800d234:	18800015 	stw	r2,0(r3)
 800d238:	00000406 	br	800d24c <_free_r+0xd4>
 800d23c:	10c00054 	ori	r3,r2,1
 800d240:	30c00115 	stw	r3,4(r6)
 800d244:	3087883a 	add	r3,r6,r2
 800d248:	18800015 	stw	r2,0(r3)
 800d24c:	00c07fc4 	movi	r3,511
 800d250:	18801736 	bltu	r3,r2,800d2b0 <_free_r+0x138>
 800d254:	1004d0fa 	srli	r2,r2,3
 800d258:	01400044 	movi	r5,1
 800d25c:	49000117 	ldw	r4,4(r9)
 800d260:	1087883a 	add	r3,r2,r2
 800d264:	18c7883a 	add	r3,r3,r3
 800d268:	1005d0ba 	srai	r2,r2,2
 800d26c:	18c7883a 	add	r3,r3,r3
 800d270:	1a47883a 	add	r3,r3,r9
 800d274:	19c00217 	ldw	r7,8(r3)
 800d278:	2884983a 	sll	r2,r5,r2
 800d27c:	30c00315 	stw	r3,12(r6)
 800d280:	31c00215 	stw	r7,8(r6)
 800d284:	1104b03a 	or	r2,r2,r4
 800d288:	19800215 	stw	r6,8(r3)
 800d28c:	48800115 	stw	r2,4(r9)
 800d290:	39800315 	stw	r6,12(r7)
 800d294:	8809883a 	mov	r4,r17
 800d298:	dfc00217 	ldw	ra,8(sp)
 800d29c:	dc400117 	ldw	r17,4(sp)
 800d2a0:	dc000017 	ldw	r16,0(sp)
 800d2a4:	dec00304 	addi	sp,sp,12
 800d2a8:	801a8c41 	jmpi	801a8c4 <__malloc_unlock>
 800d2ac:	f800283a 	ret
 800d2b0:	1006d27a 	srli	r3,r2,9
 800d2b4:	01000104 	movi	r4,4
 800d2b8:	20c04036 	bltu	r4,r3,800d3bc <_free_r+0x244>
 800d2bc:	1006d1ba 	srli	r3,r2,6
 800d2c0:	19400e04 	addi	r5,r3,56
 800d2c4:	2947883a 	add	r3,r5,r5
 800d2c8:	18c7883a 	add	r3,r3,r3
 800d2cc:	18c7883a 	add	r3,r3,r3
 800d2d0:	1a49883a 	add	r4,r3,r9
 800d2d4:	20c00217 	ldw	r3,8(r4)
 800d2d8:	01c200b4 	movhi	r7,2050
 800d2dc:	39fa7c04 	addi	r7,r7,-5648
 800d2e0:	19003b26 	beq	r3,r4,800d3d0 <_free_r+0x258>
 800d2e4:	01ffff04 	movi	r7,-4
 800d2e8:	19400117 	ldw	r5,4(r3)
 800d2ec:	29ca703a 	and	r5,r5,r7
 800d2f0:	1140022e 	bgeu	r2,r5,800d2fc <_free_r+0x184>
 800d2f4:	18c00217 	ldw	r3,8(r3)
 800d2f8:	20fffb1e 	bne	r4,r3,800d2e8 <__alt_data_end+0xfc00d2e8>
 800d2fc:	18800317 	ldw	r2,12(r3)
 800d300:	30800315 	stw	r2,12(r6)
 800d304:	30c00215 	stw	r3,8(r6)
 800d308:	11800215 	stw	r6,8(r2)
 800d30c:	19800315 	stw	r6,12(r3)
 800d310:	003fe006 	br	800d294 <__alt_data_end+0xfc00d294>
 800d314:	2100004c 	andi	r4,r4,1
 800d318:	1885883a 	add	r2,r3,r2
 800d31c:	2000071e 	bne	r4,zero,800d33c <_free_r+0x1c4>
 800d320:	817ffe17 	ldw	r5,-8(r16)
 800d324:	314dc83a 	sub	r6,r6,r5
 800d328:	30c00317 	ldw	r3,12(r6)
 800d32c:	31000217 	ldw	r4,8(r6)
 800d330:	1145883a 	add	r2,r2,r5
 800d334:	20c00315 	stw	r3,12(r4)
 800d338:	19000215 	stw	r4,8(r3)
 800d33c:	10c00054 	ori	r3,r2,1
 800d340:	30c00115 	stw	r3,4(r6)
 800d344:	00c200b4 	movhi	r3,2050
 800d348:	18c09204 	addi	r3,r3,584
 800d34c:	18c00017 	ldw	r3,0(r3)
 800d350:	49800215 	stw	r6,8(r9)
 800d354:	10ffcf36 	bltu	r2,r3,800d294 <__alt_data_end+0xfc00d294>
 800d358:	008200b4 	movhi	r2,2050
 800d35c:	1087e204 	addi	r2,r2,8072
 800d360:	11400017 	ldw	r5,0(r2)
 800d364:	8809883a 	mov	r4,r17
 800d368:	800d0540 	call	800d054 <_malloc_trim_r>
 800d36c:	003fc906 	br	800d294 <__alt_data_end+0xfc00d294>
 800d370:	28c9883a 	add	r4,r5,r3
 800d374:	21000117 	ldw	r4,4(r4)
 800d378:	2100004c 	andi	r4,r4,1
 800d37c:	20000a1e 	bne	r4,zero,800d3a8 <_free_r+0x230>
 800d380:	29000317 	ldw	r4,12(r5)
 800d384:	29400217 	ldw	r5,8(r5)
 800d388:	10c5883a 	add	r2,r2,r3
 800d38c:	10c00054 	ori	r3,r2,1
 800d390:	29000315 	stw	r4,12(r5)
 800d394:	21400215 	stw	r5,8(r4)
 800d398:	30c00115 	stw	r3,4(r6)
 800d39c:	308d883a 	add	r6,r6,r2
 800d3a0:	30800015 	stw	r2,0(r6)
 800d3a4:	003fbb06 	br	800d294 <__alt_data_end+0xfc00d294>
 800d3a8:	10c00054 	ori	r3,r2,1
 800d3ac:	30c00115 	stw	r3,4(r6)
 800d3b0:	308d883a 	add	r6,r6,r2
 800d3b4:	30800015 	stw	r2,0(r6)
 800d3b8:	003fb606 	br	800d294 <__alt_data_end+0xfc00d294>
 800d3bc:	01000504 	movi	r4,20
 800d3c0:	20c01436 	bltu	r4,r3,800d414 <_free_r+0x29c>
 800d3c4:	194016c4 	addi	r5,r3,91
 800d3c8:	2947883a 	add	r3,r5,r5
 800d3cc:	003fbe06 	br	800d2c8 <__alt_data_end+0xfc00d2c8>
 800d3d0:	280bd0ba 	srai	r5,r5,2
 800d3d4:	00800044 	movi	r2,1
 800d3d8:	39000117 	ldw	r4,4(r7)
 800d3dc:	114a983a 	sll	r5,r2,r5
 800d3e0:	1805883a 	mov	r2,r3
 800d3e4:	2908b03a 	or	r4,r5,r4
 800d3e8:	39000115 	stw	r4,4(r7)
 800d3ec:	003fc406 	br	800d300 <__alt_data_end+0xfc00d300>
 800d3f0:	49800515 	stw	r6,20(r9)
 800d3f4:	49800415 	stw	r6,16(r9)
 800d3f8:	10c00054 	ori	r3,r2,1
 800d3fc:	31000315 	stw	r4,12(r6)
 800d400:	31000215 	stw	r4,8(r6)
 800d404:	30c00115 	stw	r3,4(r6)
 800d408:	308d883a 	add	r6,r6,r2
 800d40c:	30800015 	stw	r2,0(r6)
 800d410:	003fa006 	br	800d294 <__alt_data_end+0xfc00d294>
 800d414:	01001504 	movi	r4,84
 800d418:	20c00436 	bltu	r4,r3,800d42c <_free_r+0x2b4>
 800d41c:	1006d33a 	srli	r3,r2,12
 800d420:	19401b84 	addi	r5,r3,110
 800d424:	2947883a 	add	r3,r5,r5
 800d428:	003fa706 	br	800d2c8 <__alt_data_end+0xfc00d2c8>
 800d42c:	01005504 	movi	r4,340
 800d430:	20c00436 	bltu	r4,r3,800d444 <_free_r+0x2cc>
 800d434:	1006d3fa 	srli	r3,r2,15
 800d438:	19401dc4 	addi	r5,r3,119
 800d43c:	2947883a 	add	r3,r5,r5
 800d440:	003fa106 	br	800d2c8 <__alt_data_end+0xfc00d2c8>
 800d444:	01015504 	movi	r4,1364
 800d448:	20c00436 	bltu	r4,r3,800d45c <_free_r+0x2e4>
 800d44c:	1006d4ba 	srli	r3,r2,18
 800d450:	19401f04 	addi	r5,r3,124
 800d454:	2947883a 	add	r3,r5,r5
 800d458:	003f9b06 	br	800d2c8 <__alt_data_end+0xfc00d2c8>
 800d45c:	00c03f04 	movi	r3,252
 800d460:	01401f84 	movi	r5,126
 800d464:	003f9806 	br	800d2c8 <__alt_data_end+0xfc00d2c8>

0800d468 <__sfvwrite_r>:
 800d468:	30800217 	ldw	r2,8(r6)
 800d46c:	10004526 	beq	r2,zero,800d584 <__sfvwrite_r+0x11c>
 800d470:	28c0030b 	ldhu	r3,12(r5)
 800d474:	defff404 	addi	sp,sp,-48
 800d478:	dd400715 	stw	r21,28(sp)
 800d47c:	dcc00515 	stw	r19,20(sp)
 800d480:	dc000215 	stw	r16,8(sp)
 800d484:	dfc00b15 	stw	ra,44(sp)
 800d488:	df000a15 	stw	fp,40(sp)
 800d48c:	ddc00915 	stw	r23,36(sp)
 800d490:	dd800815 	stw	r22,32(sp)
 800d494:	dd000615 	stw	r20,24(sp)
 800d498:	dc800415 	stw	r18,16(sp)
 800d49c:	dc400315 	stw	r17,12(sp)
 800d4a0:	1880020c 	andi	r2,r3,8
 800d4a4:	2821883a 	mov	r16,r5
 800d4a8:	202b883a 	mov	r21,r4
 800d4ac:	3027883a 	mov	r19,r6
 800d4b0:	10002526 	beq	r2,zero,800d548 <__sfvwrite_r+0xe0>
 800d4b4:	28800417 	ldw	r2,16(r5)
 800d4b8:	10002326 	beq	r2,zero,800d548 <__sfvwrite_r+0xe0>
 800d4bc:	1880008c 	andi	r2,r3,2
 800d4c0:	9c400017 	ldw	r17,0(r19)
 800d4c4:	10003126 	beq	r2,zero,800d58c <__sfvwrite_r+0x124>
 800d4c8:	0029883a 	mov	r20,zero
 800d4cc:	0025883a 	mov	r18,zero
 800d4d0:	05810004 	movi	r22,1024
 800d4d4:	a00d883a 	mov	r6,r20
 800d4d8:	a809883a 	mov	r4,r21
 800d4dc:	90002526 	beq	r18,zero,800d574 <__sfvwrite_r+0x10c>
 800d4e0:	900f883a 	mov	r7,r18
 800d4e4:	81400717 	ldw	r5,28(r16)
 800d4e8:	b480012e 	bgeu	r22,r18,800d4f0 <__sfvwrite_r+0x88>
 800d4ec:	01c10004 	movi	r7,1024
 800d4f0:	80800917 	ldw	r2,36(r16)
 800d4f4:	103ee83a 	callr	r2
 800d4f8:	0080510e 	bge	zero,r2,800d640 <__sfvwrite_r+0x1d8>
 800d4fc:	98c00217 	ldw	r3,8(r19)
 800d500:	a0a9883a 	add	r20,r20,r2
 800d504:	90a5c83a 	sub	r18,r18,r2
 800d508:	1885c83a 	sub	r2,r3,r2
 800d50c:	98800215 	stw	r2,8(r19)
 800d510:	103ff01e 	bne	r2,zero,800d4d4 <__alt_data_end+0xfc00d4d4>
 800d514:	0005883a 	mov	r2,zero
 800d518:	dfc00b17 	ldw	ra,44(sp)
 800d51c:	df000a17 	ldw	fp,40(sp)
 800d520:	ddc00917 	ldw	r23,36(sp)
 800d524:	dd800817 	ldw	r22,32(sp)
 800d528:	dd400717 	ldw	r21,28(sp)
 800d52c:	dd000617 	ldw	r20,24(sp)
 800d530:	dcc00517 	ldw	r19,20(sp)
 800d534:	dc800417 	ldw	r18,16(sp)
 800d538:	dc400317 	ldw	r17,12(sp)
 800d53c:	dc000217 	ldw	r16,8(sp)
 800d540:	dec00c04 	addi	sp,sp,48
 800d544:	f800283a 	ret
 800d548:	a809883a 	mov	r4,r21
 800d54c:	800b883a 	mov	r5,r16
 800d550:	800aba40 	call	800aba4 <__swsetup_r>
 800d554:	80c0030b 	ldhu	r3,12(r16)
 800d558:	103fd826 	beq	r2,zero,800d4bc <__alt_data_end+0xfc00d4bc>
 800d55c:	18c01014 	ori	r3,r3,64
 800d560:	80c0030d 	sth	r3,12(r16)
 800d564:	00c00244 	movi	r3,9
 800d568:	00bfffc4 	movi	r2,-1
 800d56c:	a8c00015 	stw	r3,0(r21)
 800d570:	003fe906 	br	800d518 <__alt_data_end+0xfc00d518>
 800d574:	8d000017 	ldw	r20,0(r17)
 800d578:	8c800117 	ldw	r18,4(r17)
 800d57c:	8c400204 	addi	r17,r17,8
 800d580:	003fd406 	br	800d4d4 <__alt_data_end+0xfc00d4d4>
 800d584:	0005883a 	mov	r2,zero
 800d588:	f800283a 	ret
 800d58c:	1880004c 	andi	r2,r3,1
 800d590:	1000301e 	bne	r2,zero,800d654 <__sfvwrite_r+0x1ec>
 800d594:	002f883a 	mov	r23,zero
 800d598:	0025883a 	mov	r18,zero
 800d59c:	90001c26 	beq	r18,zero,800d610 <__sfvwrite_r+0x1a8>
 800d5a0:	1880800c 	andi	r2,r3,512
 800d5a4:	85000217 	ldw	r20,8(r16)
 800d5a8:	10006c26 	beq	r2,zero,800d75c <__sfvwrite_r+0x2f4>
 800d5ac:	a02d883a 	mov	r22,r20
 800d5b0:	95008536 	bltu	r18,r20,800d7c8 <__sfvwrite_r+0x360>
 800d5b4:	1881200c 	andi	r2,r3,1152
 800d5b8:	10009d1e 	bne	r2,zero,800d830 <__sfvwrite_r+0x3c8>
 800d5bc:	81000017 	ldw	r4,0(r16)
 800d5c0:	a039883a 	mov	fp,r20
 800d5c4:	9029883a 	mov	r20,r18
 800d5c8:	b80b883a 	mov	r5,r23
 800d5cc:	b00d883a 	mov	r6,r22
 800d5d0:	800e21c0 	call	800e21c <memmove>
 800d5d4:	80c00217 	ldw	r3,8(r16)
 800d5d8:	81000017 	ldw	r4,0(r16)
 800d5dc:	9005883a 	mov	r2,r18
 800d5e0:	1f39c83a 	sub	fp,r3,fp
 800d5e4:	258f883a 	add	r7,r4,r22
 800d5e8:	87000215 	stw	fp,8(r16)
 800d5ec:	81c00015 	stw	r7,0(r16)
 800d5f0:	98c00217 	ldw	r3,8(r19)
 800d5f4:	b8af883a 	add	r23,r23,r2
 800d5f8:	90a5c83a 	sub	r18,r18,r2
 800d5fc:	1d05c83a 	sub	r2,r3,r20
 800d600:	98800215 	stw	r2,8(r19)
 800d604:	103fc326 	beq	r2,zero,800d514 <__alt_data_end+0xfc00d514>
 800d608:	80c0030b 	ldhu	r3,12(r16)
 800d60c:	903fe41e 	bne	r18,zero,800d5a0 <__alt_data_end+0xfc00d5a0>
 800d610:	8dc00017 	ldw	r23,0(r17)
 800d614:	8c800117 	ldw	r18,4(r17)
 800d618:	8c400204 	addi	r17,r17,8
 800d61c:	003fdf06 	br	800d59c <__alt_data_end+0xfc00d59c>
 800d620:	800f5280 	call	800f528 <_realloc_r>
 800d624:	102d883a 	mov	r22,r2
 800d628:	1000a01e 	bne	r2,zero,800d8ac <__sfvwrite_r+0x444>
 800d62c:	81400417 	ldw	r5,16(r16)
 800d630:	a809883a 	mov	r4,r21
 800d634:	800d1780 	call	800d178 <_free_r>
 800d638:	00800304 	movi	r2,12
 800d63c:	a8800015 	stw	r2,0(r21)
 800d640:	80c0030b 	ldhu	r3,12(r16)
 800d644:	00bfffc4 	movi	r2,-1
 800d648:	18c01014 	ori	r3,r3,64
 800d64c:	80c0030d 	sth	r3,12(r16)
 800d650:	003fb106 	br	800d518 <__alt_data_end+0xfc00d518>
 800d654:	0029883a 	mov	r20,zero
 800d658:	0011883a 	mov	r8,zero
 800d65c:	0039883a 	mov	fp,zero
 800d660:	0025883a 	mov	r18,zero
 800d664:	90001f26 	beq	r18,zero,800d6e4 <__sfvwrite_r+0x27c>
 800d668:	40006826 	beq	r8,zero,800d80c <__sfvwrite_r+0x3a4>
 800d66c:	a02f883a 	mov	r23,r20
 800d670:	9500012e 	bgeu	r18,r20,800d678 <__sfvwrite_r+0x210>
 800d674:	902f883a 	mov	r23,r18
 800d678:	81000017 	ldw	r4,0(r16)
 800d67c:	80800417 	ldw	r2,16(r16)
 800d680:	b82d883a 	mov	r22,r23
 800d684:	81800217 	ldw	r6,8(r16)
 800d688:	81c00517 	ldw	r7,20(r16)
 800d68c:	1100022e 	bgeu	r2,r4,800d698 <__sfvwrite_r+0x230>
 800d690:	31c7883a 	add	r3,r6,r7
 800d694:	1dc01816 	blt	r3,r23,800d6f8 <__sfvwrite_r+0x290>
 800d698:	b9c03f16 	blt	r23,r7,800d798 <__sfvwrite_r+0x330>
 800d69c:	80800917 	ldw	r2,36(r16)
 800d6a0:	81400717 	ldw	r5,28(r16)
 800d6a4:	a809883a 	mov	r4,r21
 800d6a8:	da000115 	stw	r8,4(sp)
 800d6ac:	e00d883a 	mov	r6,fp
 800d6b0:	103ee83a 	callr	r2
 800d6b4:	102d883a 	mov	r22,r2
 800d6b8:	da000117 	ldw	r8,4(sp)
 800d6bc:	00bfe00e 	bge	zero,r2,800d640 <__alt_data_end+0xfc00d640>
 800d6c0:	a5a9c83a 	sub	r20,r20,r22
 800d6c4:	a0001f26 	beq	r20,zero,800d744 <__sfvwrite_r+0x2dc>
 800d6c8:	98800217 	ldw	r2,8(r19)
 800d6cc:	e5b9883a 	add	fp,fp,r22
 800d6d0:	95a5c83a 	sub	r18,r18,r22
 800d6d4:	15adc83a 	sub	r22,r2,r22
 800d6d8:	9d800215 	stw	r22,8(r19)
 800d6dc:	b03f8d26 	beq	r22,zero,800d514 <__alt_data_end+0xfc00d514>
 800d6e0:	903fe11e 	bne	r18,zero,800d668 <__alt_data_end+0xfc00d668>
 800d6e4:	8f000017 	ldw	fp,0(r17)
 800d6e8:	8c800117 	ldw	r18,4(r17)
 800d6ec:	0011883a 	mov	r8,zero
 800d6f0:	8c400204 	addi	r17,r17,8
 800d6f4:	003fdb06 	br	800d664 <__alt_data_end+0xfc00d664>
 800d6f8:	180d883a 	mov	r6,r3
 800d6fc:	e00b883a 	mov	r5,fp
 800d700:	da000115 	stw	r8,4(sp)
 800d704:	d8c00015 	stw	r3,0(sp)
 800d708:	800e21c0 	call	800e21c <memmove>
 800d70c:	d8c00017 	ldw	r3,0(sp)
 800d710:	80800017 	ldw	r2,0(r16)
 800d714:	a809883a 	mov	r4,r21
 800d718:	800b883a 	mov	r5,r16
 800d71c:	10c5883a 	add	r2,r2,r3
 800d720:	80800015 	stw	r2,0(r16)
 800d724:	d8c00015 	stw	r3,0(sp)
 800d728:	800c7b80 	call	800c7b8 <_fflush_r>
 800d72c:	d8c00017 	ldw	r3,0(sp)
 800d730:	da000117 	ldw	r8,4(sp)
 800d734:	103fc21e 	bne	r2,zero,800d640 <__alt_data_end+0xfc00d640>
 800d738:	182d883a 	mov	r22,r3
 800d73c:	a5a9c83a 	sub	r20,r20,r22
 800d740:	a03fe11e 	bne	r20,zero,800d6c8 <__alt_data_end+0xfc00d6c8>
 800d744:	a809883a 	mov	r4,r21
 800d748:	800b883a 	mov	r5,r16
 800d74c:	800c7b80 	call	800c7b8 <_fflush_r>
 800d750:	103fbb1e 	bne	r2,zero,800d640 <__alt_data_end+0xfc00d640>
 800d754:	0011883a 	mov	r8,zero
 800d758:	003fdb06 	br	800d6c8 <__alt_data_end+0xfc00d6c8>
 800d75c:	81000017 	ldw	r4,0(r16)
 800d760:	80800417 	ldw	r2,16(r16)
 800d764:	1100012e 	bgeu	r2,r4,800d76c <__sfvwrite_r+0x304>
 800d768:	a4805a36 	bltu	r20,r18,800d8d4 <__sfvwrite_r+0x46c>
 800d76c:	81c00517 	ldw	r7,20(r16)
 800d770:	91c01a36 	bltu	r18,r7,800d7dc <__sfvwrite_r+0x374>
 800d774:	80800917 	ldw	r2,36(r16)
 800d778:	81400717 	ldw	r5,28(r16)
 800d77c:	a809883a 	mov	r4,r21
 800d780:	b80d883a 	mov	r6,r23
 800d784:	103ee83a 	callr	r2
 800d788:	1029883a 	mov	r20,r2
 800d78c:	00bfac0e 	bge	zero,r2,800d640 <__alt_data_end+0xfc00d640>
 800d790:	a005883a 	mov	r2,r20
 800d794:	003f9606 	br	800d5f0 <__alt_data_end+0xfc00d5f0>
 800d798:	b80d883a 	mov	r6,r23
 800d79c:	e00b883a 	mov	r5,fp
 800d7a0:	da000115 	stw	r8,4(sp)
 800d7a4:	800e21c0 	call	800e21c <memmove>
 800d7a8:	80800217 	ldw	r2,8(r16)
 800d7ac:	80c00017 	ldw	r3,0(r16)
 800d7b0:	da000117 	ldw	r8,4(sp)
 800d7b4:	15c5c83a 	sub	r2,r2,r23
 800d7b8:	1def883a 	add	r23,r3,r23
 800d7bc:	80800215 	stw	r2,8(r16)
 800d7c0:	85c00015 	stw	r23,0(r16)
 800d7c4:	003fbe06 	br	800d6c0 <__alt_data_end+0xfc00d6c0>
 800d7c8:	81000017 	ldw	r4,0(r16)
 800d7cc:	9039883a 	mov	fp,r18
 800d7d0:	9029883a 	mov	r20,r18
 800d7d4:	902d883a 	mov	r22,r18
 800d7d8:	003f7b06 	br	800d5c8 <__alt_data_end+0xfc00d5c8>
 800d7dc:	b80b883a 	mov	r5,r23
 800d7e0:	900d883a 	mov	r6,r18
 800d7e4:	800e21c0 	call	800e21c <memmove>
 800d7e8:	80c00217 	ldw	r3,8(r16)
 800d7ec:	80800017 	ldw	r2,0(r16)
 800d7f0:	9029883a 	mov	r20,r18
 800d7f4:	1c87c83a 	sub	r3,r3,r18
 800d7f8:	1485883a 	add	r2,r2,r18
 800d7fc:	80800015 	stw	r2,0(r16)
 800d800:	80c00215 	stw	r3,8(r16)
 800d804:	9005883a 	mov	r2,r18
 800d808:	003f7906 	br	800d5f0 <__alt_data_end+0xfc00d5f0>
 800d80c:	e009883a 	mov	r4,fp
 800d810:	01400284 	movi	r5,10
 800d814:	900d883a 	mov	r6,r18
 800d818:	800df800 	call	800df80 <memchr>
 800d81c:	10003826 	beq	r2,zero,800d900 <__sfvwrite_r+0x498>
 800d820:	10800044 	addi	r2,r2,1
 800d824:	1729c83a 	sub	r20,r2,fp
 800d828:	02000044 	movi	r8,1
 800d82c:	003f8f06 	br	800d66c <__alt_data_end+0xfc00d66c>
 800d830:	80800517 	ldw	r2,20(r16)
 800d834:	81400417 	ldw	r5,16(r16)
 800d838:	87000017 	ldw	fp,0(r16)
 800d83c:	10a9883a 	add	r20,r2,r2
 800d840:	a085883a 	add	r2,r20,r2
 800d844:	1028d7fa 	srli	r20,r2,31
 800d848:	e179c83a 	sub	fp,fp,r5
 800d84c:	e1000044 	addi	r4,fp,1
 800d850:	a085883a 	add	r2,r20,r2
 800d854:	1029d07a 	srai	r20,r2,1
 800d858:	2485883a 	add	r2,r4,r18
 800d85c:	a00d883a 	mov	r6,r20
 800d860:	a080022e 	bgeu	r20,r2,800d86c <__sfvwrite_r+0x404>
 800d864:	1029883a 	mov	r20,r2
 800d868:	100d883a 	mov	r6,r2
 800d86c:	18c1000c 	andi	r3,r3,1024
 800d870:	a809883a 	mov	r4,r21
 800d874:	183f6a26 	beq	r3,zero,800d620 <__alt_data_end+0xfc00d620>
 800d878:	300b883a 	mov	r5,r6
 800d87c:	800390c0 	call	800390c <_malloc_r>
 800d880:	102d883a 	mov	r22,r2
 800d884:	103f6c26 	beq	r2,zero,800d638 <__alt_data_end+0xfc00d638>
 800d888:	81400417 	ldw	r5,16(r16)
 800d88c:	1009883a 	mov	r4,r2
 800d890:	e00d883a 	mov	r6,fp
 800d894:	800e0e40 	call	800e0e4 <memcpy>
 800d898:	8080030b 	ldhu	r2,12(r16)
 800d89c:	00fedfc4 	movi	r3,-1153
 800d8a0:	10c4703a 	and	r2,r2,r3
 800d8a4:	10802014 	ori	r2,r2,128
 800d8a8:	8080030d 	sth	r2,12(r16)
 800d8ac:	b709883a 	add	r4,r22,fp
 800d8b0:	a707c83a 	sub	r3,r20,fp
 800d8b4:	85800415 	stw	r22,16(r16)
 800d8b8:	85000515 	stw	r20,20(r16)
 800d8bc:	81000015 	stw	r4,0(r16)
 800d8c0:	9039883a 	mov	fp,r18
 800d8c4:	80c00215 	stw	r3,8(r16)
 800d8c8:	9029883a 	mov	r20,r18
 800d8cc:	902d883a 	mov	r22,r18
 800d8d0:	003f3d06 	br	800d5c8 <__alt_data_end+0xfc00d5c8>
 800d8d4:	b80b883a 	mov	r5,r23
 800d8d8:	a00d883a 	mov	r6,r20
 800d8dc:	800e21c0 	call	800e21c <memmove>
 800d8e0:	80800017 	ldw	r2,0(r16)
 800d8e4:	a809883a 	mov	r4,r21
 800d8e8:	800b883a 	mov	r5,r16
 800d8ec:	1505883a 	add	r2,r2,r20
 800d8f0:	80800015 	stw	r2,0(r16)
 800d8f4:	800c7b80 	call	800c7b8 <_fflush_r>
 800d8f8:	103fa526 	beq	r2,zero,800d790 <__alt_data_end+0xfc00d790>
 800d8fc:	003f5006 	br	800d640 <__alt_data_end+0xfc00d640>
 800d900:	95000044 	addi	r20,r18,1
 800d904:	02000044 	movi	r8,1
 800d908:	003f5806 	br	800d66c <__alt_data_end+0xfc00d66c>

0800d90c <_fwalk>:
 800d90c:	defff804 	addi	sp,sp,-32
 800d910:	dd400515 	stw	r21,20(sp)
 800d914:	2540b804 	addi	r21,r4,736
 800d918:	dd800615 	stw	r22,24(sp)
 800d91c:	dd000415 	stw	r20,16(sp)
 800d920:	dfc00715 	stw	ra,28(sp)
 800d924:	dcc00315 	stw	r19,12(sp)
 800d928:	dc800215 	stw	r18,8(sp)
 800d92c:	dc400115 	stw	r17,4(sp)
 800d930:	dc000015 	stw	r16,0(sp)
 800d934:	2829883a 	mov	r20,r5
 800d938:	002d883a 	mov	r22,zero
 800d93c:	800cd840 	call	800cd84 <__sfp_lock_acquire>
 800d940:	a8001426 	beq	r21,zero,800d994 <_fwalk+0x88>
 800d944:	04ffffc4 	movi	r19,-1
 800d948:	ac400117 	ldw	r17,4(r21)
 800d94c:	ac800217 	ldw	r18,8(r21)
 800d950:	8c7fffc4 	addi	r17,r17,-1
 800d954:	88000d16 	blt	r17,zero,800d98c <_fwalk+0x80>
 800d958:	94000304 	addi	r16,r18,12
 800d95c:	94800384 	addi	r18,r18,14
 800d960:	80c0000f 	ldh	r3,0(r16)
 800d964:	8c7fffc4 	addi	r17,r17,-1
 800d968:	813ffd04 	addi	r4,r16,-12
 800d96c:	18000426 	beq	r3,zero,800d980 <_fwalk+0x74>
 800d970:	90c0000f 	ldh	r3,0(r18)
 800d974:	1cc00226 	beq	r3,r19,800d980 <_fwalk+0x74>
 800d978:	a03ee83a 	callr	r20
 800d97c:	b0acb03a 	or	r22,r22,r2
 800d980:	84001a04 	addi	r16,r16,104
 800d984:	94801a04 	addi	r18,r18,104
 800d988:	8cfff51e 	bne	r17,r19,800d960 <__alt_data_end+0xfc00d960>
 800d98c:	ad400017 	ldw	r21,0(r21)
 800d990:	a83fed1e 	bne	r21,zero,800d948 <__alt_data_end+0xfc00d948>
 800d994:	800cd880 	call	800cd88 <__sfp_lock_release>
 800d998:	b005883a 	mov	r2,r22
 800d99c:	dfc00717 	ldw	ra,28(sp)
 800d9a0:	dd800617 	ldw	r22,24(sp)
 800d9a4:	dd400517 	ldw	r21,20(sp)
 800d9a8:	dd000417 	ldw	r20,16(sp)
 800d9ac:	dcc00317 	ldw	r19,12(sp)
 800d9b0:	dc800217 	ldw	r18,8(sp)
 800d9b4:	dc400117 	ldw	r17,4(sp)
 800d9b8:	dc000017 	ldw	r16,0(sp)
 800d9bc:	dec00804 	addi	sp,sp,32
 800d9c0:	f800283a 	ret

0800d9c4 <_fwalk_reent>:
 800d9c4:	defff804 	addi	sp,sp,-32
 800d9c8:	dd400515 	stw	r21,20(sp)
 800d9cc:	2540b804 	addi	r21,r4,736
 800d9d0:	dd800615 	stw	r22,24(sp)
 800d9d4:	dd000415 	stw	r20,16(sp)
 800d9d8:	dcc00315 	stw	r19,12(sp)
 800d9dc:	dfc00715 	stw	ra,28(sp)
 800d9e0:	dc800215 	stw	r18,8(sp)
 800d9e4:	dc400115 	stw	r17,4(sp)
 800d9e8:	dc000015 	stw	r16,0(sp)
 800d9ec:	2027883a 	mov	r19,r4
 800d9f0:	2829883a 	mov	r20,r5
 800d9f4:	002d883a 	mov	r22,zero
 800d9f8:	800cd840 	call	800cd84 <__sfp_lock_acquire>
 800d9fc:	a8001326 	beq	r21,zero,800da4c <_fwalk_reent+0x88>
 800da00:	04bfffc4 	movi	r18,-1
 800da04:	ac400117 	ldw	r17,4(r21)
 800da08:	ac000217 	ldw	r16,8(r21)
 800da0c:	8c7fffc4 	addi	r17,r17,-1
 800da10:	88000c16 	blt	r17,zero,800da44 <_fwalk_reent+0x80>
 800da14:	84000304 	addi	r16,r16,12
 800da18:	80c0000f 	ldh	r3,0(r16)
 800da1c:	8c7fffc4 	addi	r17,r17,-1
 800da20:	817ffd04 	addi	r5,r16,-12
 800da24:	18000526 	beq	r3,zero,800da3c <_fwalk_reent+0x78>
 800da28:	80c0008f 	ldh	r3,2(r16)
 800da2c:	9809883a 	mov	r4,r19
 800da30:	1c800226 	beq	r3,r18,800da3c <_fwalk_reent+0x78>
 800da34:	a03ee83a 	callr	r20
 800da38:	b0acb03a 	or	r22,r22,r2
 800da3c:	84001a04 	addi	r16,r16,104
 800da40:	8cbff51e 	bne	r17,r18,800da18 <__alt_data_end+0xfc00da18>
 800da44:	ad400017 	ldw	r21,0(r21)
 800da48:	a83fee1e 	bne	r21,zero,800da04 <__alt_data_end+0xfc00da04>
 800da4c:	800cd880 	call	800cd88 <__sfp_lock_release>
 800da50:	b005883a 	mov	r2,r22
 800da54:	dfc00717 	ldw	ra,28(sp)
 800da58:	dd800617 	ldw	r22,24(sp)
 800da5c:	dd400517 	ldw	r21,20(sp)
 800da60:	dd000417 	ldw	r20,16(sp)
 800da64:	dcc00317 	ldw	r19,12(sp)
 800da68:	dc800217 	ldw	r18,8(sp)
 800da6c:	dc400117 	ldw	r17,4(sp)
 800da70:	dc000017 	ldw	r16,0(sp)
 800da74:	dec00804 	addi	sp,sp,32
 800da78:	f800283a 	ret

0800da7c <iswspace>:
 800da7c:	00803fc4 	movi	r2,255
 800da80:	11000836 	bltu	r2,r4,800daa4 <iswspace+0x28>
 800da84:	008200b4 	movhi	r2,2050
 800da88:	10809304 	addi	r2,r2,588
 800da8c:	10800017 	ldw	r2,0(r2)
 800da90:	1109883a 	add	r4,r2,r4
 800da94:	20800043 	ldbu	r2,1(r4)
 800da98:	1080020c 	andi	r2,r2,8
 800da9c:	10803fcc 	andi	r2,r2,255
 800daa0:	f800283a 	ret
 800daa4:	0005883a 	mov	r2,zero
 800daa8:	f800283a 	ret

0800daac <_setlocale_r>:
 800daac:	30001b26 	beq	r6,zero,800db1c <_setlocale_r+0x70>
 800dab0:	014200b4 	movhi	r5,2050
 800dab4:	defffe04 	addi	sp,sp,-8
 800dab8:	2978a404 	addi	r5,r5,-7536
 800dabc:	3009883a 	mov	r4,r6
 800dac0:	dc000015 	stw	r16,0(sp)
 800dac4:	dfc00115 	stw	ra,4(sp)
 800dac8:	3021883a 	mov	r16,r6
 800dacc:	80048340 	call	8004834 <strcmp>
 800dad0:	1000061e 	bne	r2,zero,800daec <_setlocale_r+0x40>
 800dad4:	008200b4 	movhi	r2,2050
 800dad8:	10b7d204 	addi	r2,r2,-8376
 800dadc:	dfc00117 	ldw	ra,4(sp)
 800dae0:	dc000017 	ldw	r16,0(sp)
 800dae4:	dec00204 	addi	sp,sp,8
 800dae8:	f800283a 	ret
 800daec:	014200b4 	movhi	r5,2050
 800daf0:	2977d204 	addi	r5,r5,-8376
 800daf4:	8009883a 	mov	r4,r16
 800daf8:	80048340 	call	8004834 <strcmp>
 800dafc:	103ff526 	beq	r2,zero,800dad4 <__alt_data_end+0xfc00dad4>
 800db00:	014200b4 	movhi	r5,2050
 800db04:	2977dc04 	addi	r5,r5,-8336
 800db08:	8009883a 	mov	r4,r16
 800db0c:	80048340 	call	8004834 <strcmp>
 800db10:	103ff026 	beq	r2,zero,800dad4 <__alt_data_end+0xfc00dad4>
 800db14:	0005883a 	mov	r2,zero
 800db18:	003ff006 	br	800dadc <__alt_data_end+0xfc00dadc>
 800db1c:	008200b4 	movhi	r2,2050
 800db20:	10b7d204 	addi	r2,r2,-8376
 800db24:	f800283a 	ret

0800db28 <__locale_charset>:
 800db28:	008200b4 	movhi	r2,2050
 800db2c:	10bb8604 	addi	r2,r2,-4584
 800db30:	f800283a 	ret

0800db34 <__locale_mb_cur_max>:
 800db34:	008200b4 	movhi	r2,2050
 800db38:	10809404 	addi	r2,r2,592
 800db3c:	10800017 	ldw	r2,0(r2)
 800db40:	f800283a 	ret

0800db44 <__locale_msgcharset>:
 800db44:	008200b4 	movhi	r2,2050
 800db48:	10bb7e04 	addi	r2,r2,-4616
 800db4c:	f800283a 	ret

0800db50 <__locale_cjk_lang>:
 800db50:	0005883a 	mov	r2,zero
 800db54:	f800283a 	ret

0800db58 <_localeconv_r>:
 800db58:	008200b4 	movhi	r2,2050
 800db5c:	10bb8e04 	addi	r2,r2,-4552
 800db60:	f800283a 	ret

0800db64 <setlocale>:
 800db64:	00c200b4 	movhi	r3,2050
 800db68:	18c09004 	addi	r3,r3,576
 800db6c:	2005883a 	mov	r2,r4
 800db70:	19000017 	ldw	r4,0(r3)
 800db74:	280d883a 	mov	r6,r5
 800db78:	100b883a 	mov	r5,r2
 800db7c:	800daac1 	jmpi	800daac <_setlocale_r>

0800db80 <localeconv>:
 800db80:	008200b4 	movhi	r2,2050
 800db84:	10bb8e04 	addi	r2,r2,-4552
 800db88:	f800283a 	ret

0800db8c <__smakebuf_r>:
 800db8c:	2880030b 	ldhu	r2,12(r5)
 800db90:	10c0008c 	andi	r3,r2,2
 800db94:	1800401e 	bne	r3,zero,800dc98 <__smakebuf_r+0x10c>
 800db98:	deffec04 	addi	sp,sp,-80
 800db9c:	dc000f15 	stw	r16,60(sp)
 800dba0:	2821883a 	mov	r16,r5
 800dba4:	2940038f 	ldh	r5,14(r5)
 800dba8:	dc401015 	stw	r17,64(sp)
 800dbac:	dfc01315 	stw	ra,76(sp)
 800dbb0:	dcc01215 	stw	r19,72(sp)
 800dbb4:	dc801115 	stw	r18,68(sp)
 800dbb8:	2023883a 	mov	r17,r4
 800dbbc:	28001b16 	blt	r5,zero,800dc2c <__smakebuf_r+0xa0>
 800dbc0:	d80d883a 	mov	r6,sp
 800dbc4:	80154a80 	call	80154a8 <_fstat_r>
 800dbc8:	10001716 	blt	r2,zero,800dc28 <__smakebuf_r+0x9c>
 800dbcc:	d8800117 	ldw	r2,4(sp)
 800dbd0:	00e00014 	movui	r3,32768
 800dbd4:	10bc000c 	andi	r2,r2,61440
 800dbd8:	10c03726 	beq	r2,r3,800dcb8 <__smakebuf_r+0x12c>
 800dbdc:	80c0030b 	ldhu	r3,12(r16)
 800dbe0:	18c20014 	ori	r3,r3,2048
 800dbe4:	80c0030d 	sth	r3,12(r16)
 800dbe8:	00c80004 	movi	r3,8192
 800dbec:	10c03c1e 	bne	r2,r3,800dce0 <__smakebuf_r+0x154>
 800dbf0:	8140038f 	ldh	r5,14(r16)
 800dbf4:	8809883a 	mov	r4,r17
 800dbf8:	80161700 	call	8016170 <_isatty_r>
 800dbfc:	10004e26 	beq	r2,zero,800dd38 <__smakebuf_r+0x1ac>
 800dc00:	8080030b 	ldhu	r2,12(r16)
 800dc04:	04c00044 	movi	r19,1
 800dc08:	80c010c4 	addi	r3,r16,67
 800dc0c:	14c4b03a 	or	r2,r2,r19
 800dc10:	8080030d 	sth	r2,12(r16)
 800dc14:	80c00015 	stw	r3,0(r16)
 800dc18:	80c00415 	stw	r3,16(r16)
 800dc1c:	84c00515 	stw	r19,20(r16)
 800dc20:	04810004 	movi	r18,1024
 800dc24:	00000706 	br	800dc44 <__smakebuf_r+0xb8>
 800dc28:	8080030b 	ldhu	r2,12(r16)
 800dc2c:	10c0200c 	andi	r3,r2,128
 800dc30:	18001f1e 	bne	r3,zero,800dcb0 <__smakebuf_r+0x124>
 800dc34:	04810004 	movi	r18,1024
 800dc38:	10820014 	ori	r2,r2,2048
 800dc3c:	8080030d 	sth	r2,12(r16)
 800dc40:	0027883a 	mov	r19,zero
 800dc44:	8809883a 	mov	r4,r17
 800dc48:	900b883a 	mov	r5,r18
 800dc4c:	800390c0 	call	800390c <_malloc_r>
 800dc50:	10002e26 	beq	r2,zero,800dd0c <__smakebuf_r+0x180>
 800dc54:	80c0030b 	ldhu	r3,12(r16)
 800dc58:	01020074 	movhi	r4,2049
 800dc5c:	21328804 	addi	r4,r4,-13792
 800dc60:	89000f15 	stw	r4,60(r17)
 800dc64:	18c02014 	ori	r3,r3,128
 800dc68:	80c0030d 	sth	r3,12(r16)
 800dc6c:	80800015 	stw	r2,0(r16)
 800dc70:	80800415 	stw	r2,16(r16)
 800dc74:	84800515 	stw	r18,20(r16)
 800dc78:	98001c1e 	bne	r19,zero,800dcec <__smakebuf_r+0x160>
 800dc7c:	dfc01317 	ldw	ra,76(sp)
 800dc80:	dcc01217 	ldw	r19,72(sp)
 800dc84:	dc801117 	ldw	r18,68(sp)
 800dc88:	dc401017 	ldw	r17,64(sp)
 800dc8c:	dc000f17 	ldw	r16,60(sp)
 800dc90:	dec01404 	addi	sp,sp,80
 800dc94:	f800283a 	ret
 800dc98:	288010c4 	addi	r2,r5,67
 800dc9c:	28800015 	stw	r2,0(r5)
 800dca0:	28800415 	stw	r2,16(r5)
 800dca4:	00800044 	movi	r2,1
 800dca8:	28800515 	stw	r2,20(r5)
 800dcac:	f800283a 	ret
 800dcb0:	04801004 	movi	r18,64
 800dcb4:	003fe006 	br	800dc38 <__alt_data_end+0xfc00dc38>
 800dcb8:	81000a17 	ldw	r4,40(r16)
 800dcbc:	00c20074 	movhi	r3,2049
 800dcc0:	18ffa804 	addi	r3,r3,-352
 800dcc4:	20ffc51e 	bne	r4,r3,800dbdc <__alt_data_end+0xfc00dbdc>
 800dcc8:	80c0030b 	ldhu	r3,12(r16)
 800dccc:	01010004 	movi	r4,1024
 800dcd0:	81001315 	stw	r4,76(r16)
 800dcd4:	1906b03a 	or	r3,r3,r4
 800dcd8:	80c0030d 	sth	r3,12(r16)
 800dcdc:	003fc206 	br	800dbe8 <__alt_data_end+0xfc00dbe8>
 800dce0:	0027883a 	mov	r19,zero
 800dce4:	04810004 	movi	r18,1024
 800dce8:	003fd606 	br	800dc44 <__alt_data_end+0xfc00dc44>
 800dcec:	8140038f 	ldh	r5,14(r16)
 800dcf0:	8809883a 	mov	r4,r17
 800dcf4:	80161700 	call	8016170 <_isatty_r>
 800dcf8:	103fe026 	beq	r2,zero,800dc7c <__alt_data_end+0xfc00dc7c>
 800dcfc:	8080030b 	ldhu	r2,12(r16)
 800dd00:	10800054 	ori	r2,r2,1
 800dd04:	8080030d 	sth	r2,12(r16)
 800dd08:	003fdc06 	br	800dc7c <__alt_data_end+0xfc00dc7c>
 800dd0c:	8080030b 	ldhu	r2,12(r16)
 800dd10:	10c0800c 	andi	r3,r2,512
 800dd14:	183fd91e 	bne	r3,zero,800dc7c <__alt_data_end+0xfc00dc7c>
 800dd18:	10800094 	ori	r2,r2,2
 800dd1c:	80c010c4 	addi	r3,r16,67
 800dd20:	8080030d 	sth	r2,12(r16)
 800dd24:	00800044 	movi	r2,1
 800dd28:	80c00015 	stw	r3,0(r16)
 800dd2c:	80c00415 	stw	r3,16(r16)
 800dd30:	80800515 	stw	r2,20(r16)
 800dd34:	003fd106 	br	800dc7c <__alt_data_end+0xfc00dc7c>
 800dd38:	04c00044 	movi	r19,1
 800dd3c:	04810004 	movi	r18,1024
 800dd40:	003fc006 	br	800dc44 <__alt_data_end+0xfc00dc44>

0800dd44 <_mbrtowc_r>:
 800dd44:	defff704 	addi	sp,sp,-36
 800dd48:	008200b4 	movhi	r2,2050
 800dd4c:	dc800715 	stw	r18,28(sp)
 800dd50:	dc400615 	stw	r17,24(sp)
 800dd54:	dc000515 	stw	r16,20(sp)
 800dd58:	10809504 	addi	r2,r2,596
 800dd5c:	dfc00815 	stw	ra,32(sp)
 800dd60:	2021883a 	mov	r16,r4
 800dd64:	dc400917 	ldw	r17,36(sp)
 800dd68:	14800017 	ldw	r18,0(r2)
 800dd6c:	30001626 	beq	r6,zero,800ddc8 <_mbrtowc_r+0x84>
 800dd70:	d9400215 	stw	r5,8(sp)
 800dd74:	d9800315 	stw	r6,12(sp)
 800dd78:	d9c00415 	stw	r7,16(sp)
 800dd7c:	800db280 	call	800db28 <__locale_charset>
 800dd80:	d9400217 	ldw	r5,8(sp)
 800dd84:	d9800317 	ldw	r6,12(sp)
 800dd88:	d9c00417 	ldw	r7,16(sp)
 800dd8c:	d8800015 	stw	r2,0(sp)
 800dd90:	dc400115 	stw	r17,4(sp)
 800dd94:	8009883a 	mov	r4,r16
 800dd98:	903ee83a 	callr	r18
 800dd9c:	00ffffc4 	movi	r3,-1
 800dda0:	10c0031e 	bne	r2,r3,800ddb0 <_mbrtowc_r+0x6c>
 800dda4:	88000015 	stw	zero,0(r17)
 800dda8:	00c02284 	movi	r3,138
 800ddac:	80c00015 	stw	r3,0(r16)
 800ddb0:	dfc00817 	ldw	ra,32(sp)
 800ddb4:	dc800717 	ldw	r18,28(sp)
 800ddb8:	dc400617 	ldw	r17,24(sp)
 800ddbc:	dc000517 	ldw	r16,20(sp)
 800ddc0:	dec00904 	addi	sp,sp,36
 800ddc4:	f800283a 	ret
 800ddc8:	800db280 	call	800db28 <__locale_charset>
 800ddcc:	018200b4 	movhi	r6,2050
 800ddd0:	31b7dc04 	addi	r6,r6,-8336
 800ddd4:	d8800015 	stw	r2,0(sp)
 800ddd8:	dc400115 	stw	r17,4(sp)
 800dddc:	8009883a 	mov	r4,r16
 800dde0:	000b883a 	mov	r5,zero
 800dde4:	01c00044 	movi	r7,1
 800dde8:	903ee83a 	callr	r18
 800ddec:	003feb06 	br	800dd9c <__alt_data_end+0xfc00dd9c>

0800ddf0 <mbrtowc>:
 800ddf0:	defff604 	addi	sp,sp,-40
 800ddf4:	dc400315 	stw	r17,12(sp)
 800ddf8:	dc000215 	stw	r16,8(sp)
 800ddfc:	dfc00915 	stw	ra,36(sp)
 800de00:	dd800815 	stw	r22,32(sp)
 800de04:	dd400715 	stw	r21,28(sp)
 800de08:	dd000615 	stw	r20,24(sp)
 800de0c:	dcc00515 	stw	r19,20(sp)
 800de10:	dc800415 	stw	r18,16(sp)
 800de14:	2821883a 	mov	r16,r5
 800de18:	3823883a 	mov	r17,r7
 800de1c:	28002026 	beq	r5,zero,800dea0 <mbrtowc+0xb0>
 800de20:	048200b4 	movhi	r18,2050
 800de24:	94809004 	addi	r18,r18,576
 800de28:	008200b4 	movhi	r2,2050
 800de2c:	95800017 	ldw	r22,0(r18)
 800de30:	10809504 	addi	r2,r2,596
 800de34:	15400017 	ldw	r21,0(r2)
 800de38:	2029883a 	mov	r20,r4
 800de3c:	3027883a 	mov	r19,r6
 800de40:	800db280 	call	800db28 <__locale_charset>
 800de44:	d8800015 	stw	r2,0(sp)
 800de48:	dc400115 	stw	r17,4(sp)
 800de4c:	b009883a 	mov	r4,r22
 800de50:	a00b883a 	mov	r5,r20
 800de54:	800d883a 	mov	r6,r16
 800de58:	980f883a 	mov	r7,r19
 800de5c:	a83ee83a 	callr	r21
 800de60:	00ffffc4 	movi	r3,-1
 800de64:	10c0041e 	bne	r2,r3,800de78 <mbrtowc+0x88>
 800de68:	90c00017 	ldw	r3,0(r18)
 800de6c:	01002284 	movi	r4,138
 800de70:	88000015 	stw	zero,0(r17)
 800de74:	19000015 	stw	r4,0(r3)
 800de78:	dfc00917 	ldw	ra,36(sp)
 800de7c:	dd800817 	ldw	r22,32(sp)
 800de80:	dd400717 	ldw	r21,28(sp)
 800de84:	dd000617 	ldw	r20,24(sp)
 800de88:	dcc00517 	ldw	r19,20(sp)
 800de8c:	dc800417 	ldw	r18,16(sp)
 800de90:	dc400317 	ldw	r17,12(sp)
 800de94:	dc000217 	ldw	r16,8(sp)
 800de98:	dec00a04 	addi	sp,sp,40
 800de9c:	f800283a 	ret
 800dea0:	048200b4 	movhi	r18,2050
 800dea4:	94809004 	addi	r18,r18,576
 800dea8:	008200b4 	movhi	r2,2050
 800deac:	94c00017 	ldw	r19,0(r18)
 800deb0:	10809504 	addi	r2,r2,596
 800deb4:	14000017 	ldw	r16,0(r2)
 800deb8:	800db280 	call	800db28 <__locale_charset>
 800debc:	018200b4 	movhi	r6,2050
 800dec0:	31b7dc04 	addi	r6,r6,-8336
 800dec4:	d8800015 	stw	r2,0(sp)
 800dec8:	dc400115 	stw	r17,4(sp)
 800decc:	9809883a 	mov	r4,r19
 800ded0:	000b883a 	mov	r5,zero
 800ded4:	01c00044 	movi	r7,1
 800ded8:	803ee83a 	callr	r16
 800dedc:	003fe006 	br	800de60 <__alt_data_end+0xfc00de60>

0800dee0 <__ascii_mbtowc>:
 800dee0:	deffff04 	addi	sp,sp,-4
 800dee4:	28000826 	beq	r5,zero,800df08 <__ascii_mbtowc+0x28>
 800dee8:	30000926 	beq	r6,zero,800df10 <__ascii_mbtowc+0x30>
 800deec:	38000b26 	beq	r7,zero,800df1c <__ascii_mbtowc+0x3c>
 800def0:	30800003 	ldbu	r2,0(r6)
 800def4:	28800015 	stw	r2,0(r5)
 800def8:	30800003 	ldbu	r2,0(r6)
 800defc:	1004c03a 	cmpne	r2,r2,zero
 800df00:	dec00104 	addi	sp,sp,4
 800df04:	f800283a 	ret
 800df08:	d80b883a 	mov	r5,sp
 800df0c:	303ff71e 	bne	r6,zero,800deec <__alt_data_end+0xfc00deec>
 800df10:	0005883a 	mov	r2,zero
 800df14:	dec00104 	addi	sp,sp,4
 800df18:	f800283a 	ret
 800df1c:	00bfff84 	movi	r2,-2
 800df20:	003ff706 	br	800df00 <__alt_data_end+0xfc00df00>

0800df24 <_mbtowc_r>:
 800df24:	008200b4 	movhi	r2,2050
 800df28:	defff804 	addi	sp,sp,-32
 800df2c:	10809504 	addi	r2,r2,596
 800df30:	dfc00715 	stw	ra,28(sp)
 800df34:	dc000615 	stw	r16,24(sp)
 800df38:	14000017 	ldw	r16,0(r2)
 800df3c:	d9000215 	stw	r4,8(sp)
 800df40:	d9400315 	stw	r5,12(sp)
 800df44:	d9800415 	stw	r6,16(sp)
 800df48:	d9c00515 	stw	r7,20(sp)
 800df4c:	800db280 	call	800db28 <__locale_charset>
 800df50:	d8800015 	stw	r2,0(sp)
 800df54:	d8800817 	ldw	r2,32(sp)
 800df58:	d9000217 	ldw	r4,8(sp)
 800df5c:	d9400317 	ldw	r5,12(sp)
 800df60:	d9800417 	ldw	r6,16(sp)
 800df64:	d9c00517 	ldw	r7,20(sp)
 800df68:	d8800115 	stw	r2,4(sp)
 800df6c:	803ee83a 	callr	r16
 800df70:	dfc00717 	ldw	ra,28(sp)
 800df74:	dc000617 	ldw	r16,24(sp)
 800df78:	dec00804 	addi	sp,sp,32
 800df7c:	f800283a 	ret

0800df80 <memchr>:
 800df80:	208000cc 	andi	r2,r4,3
 800df84:	280f883a 	mov	r7,r5
 800df88:	10003526 	beq	r2,zero,800e060 <memchr+0xe0>
 800df8c:	30bfffc4 	addi	r2,r6,-1
 800df90:	30001b26 	beq	r6,zero,800e000 <memchr+0x80>
 800df94:	21800003 	ldbu	r6,0(r4)
 800df98:	28c03fcc 	andi	r3,r5,255
 800df9c:	30c01a26 	beq	r6,r3,800e008 <memchr+0x88>
 800dfa0:	180d883a 	mov	r6,r3
 800dfa4:	00000406 	br	800dfb8 <memchr+0x38>
 800dfa8:	10001526 	beq	r2,zero,800e000 <memchr+0x80>
 800dfac:	20c00003 	ldbu	r3,0(r4)
 800dfb0:	10bfffc4 	addi	r2,r2,-1
 800dfb4:	19801426 	beq	r3,r6,800e008 <memchr+0x88>
 800dfb8:	21000044 	addi	r4,r4,1
 800dfbc:	20c000cc 	andi	r3,r4,3
 800dfc0:	183ff91e 	bne	r3,zero,800dfa8 <__alt_data_end+0xfc00dfa8>
 800dfc4:	024000c4 	movi	r9,3
 800dfc8:	48801136 	bltu	r9,r2,800e010 <memchr+0x90>
 800dfcc:	10000c26 	beq	r2,zero,800e000 <memchr+0x80>
 800dfd0:	20c00003 	ldbu	r3,0(r4)
 800dfd4:	29403fcc 	andi	r5,r5,255
 800dfd8:	19400b26 	beq	r3,r5,800e008 <memchr+0x88>
 800dfdc:	20c00044 	addi	r3,r4,1
 800dfe0:	2085883a 	add	r2,r4,r2
 800dfe4:	39803fcc 	andi	r6,r7,255
 800dfe8:	00000306 	br	800dff8 <memchr+0x78>
 800dfec:	18c00044 	addi	r3,r3,1
 800dff0:	197fffc3 	ldbu	r5,-1(r3)
 800dff4:	29800426 	beq	r5,r6,800e008 <memchr+0x88>
 800dff8:	1809883a 	mov	r4,r3
 800dffc:	18bffb1e 	bne	r3,r2,800dfec <__alt_data_end+0xfc00dfec>
 800e000:	0005883a 	mov	r2,zero
 800e004:	f800283a 	ret
 800e008:	2005883a 	mov	r2,r4
 800e00c:	f800283a 	ret
 800e010:	28c03fcc 	andi	r3,r5,255
 800e014:	1810923a 	slli	r8,r3,8
 800e018:	02ffbff4 	movhi	r11,65279
 800e01c:	02a02074 	movhi	r10,32897
 800e020:	40c6b03a 	or	r3,r8,r3
 800e024:	1810943a 	slli	r8,r3,16
 800e028:	5affbfc4 	addi	r11,r11,-257
 800e02c:	52a02004 	addi	r10,r10,-32640
 800e030:	40d0b03a 	or	r8,r8,r3
 800e034:	20c00017 	ldw	r3,0(r4)
 800e038:	40c6f03a 	xor	r3,r8,r3
 800e03c:	1acd883a 	add	r6,r3,r11
 800e040:	00c6303a 	nor	r3,zero,r3
 800e044:	30c6703a 	and	r3,r6,r3
 800e048:	1a86703a 	and	r3,r3,r10
 800e04c:	183fdf1e 	bne	r3,zero,800dfcc <__alt_data_end+0xfc00dfcc>
 800e050:	10bfff04 	addi	r2,r2,-4
 800e054:	21000104 	addi	r4,r4,4
 800e058:	48bff636 	bltu	r9,r2,800e034 <__alt_data_end+0xfc00e034>
 800e05c:	003fdb06 	br	800dfcc <__alt_data_end+0xfc00dfcc>
 800e060:	3005883a 	mov	r2,r6
 800e064:	003fd706 	br	800dfc4 <__alt_data_end+0xfc00dfc4>

0800e068 <memcmp>:
 800e068:	01c000c4 	movi	r7,3
 800e06c:	3980192e 	bgeu	r7,r6,800e0d4 <memcmp+0x6c>
 800e070:	2144b03a 	or	r2,r4,r5
 800e074:	11c4703a 	and	r2,r2,r7
 800e078:	10000f26 	beq	r2,zero,800e0b8 <memcmp+0x50>
 800e07c:	20800003 	ldbu	r2,0(r4)
 800e080:	28c00003 	ldbu	r3,0(r5)
 800e084:	10c0151e 	bne	r2,r3,800e0dc <memcmp+0x74>
 800e088:	31bfff84 	addi	r6,r6,-2
 800e08c:	01ffffc4 	movi	r7,-1
 800e090:	00000406 	br	800e0a4 <memcmp+0x3c>
 800e094:	20800003 	ldbu	r2,0(r4)
 800e098:	28c00003 	ldbu	r3,0(r5)
 800e09c:	31bfffc4 	addi	r6,r6,-1
 800e0a0:	10c00e1e 	bne	r2,r3,800e0dc <memcmp+0x74>
 800e0a4:	21000044 	addi	r4,r4,1
 800e0a8:	29400044 	addi	r5,r5,1
 800e0ac:	31fff91e 	bne	r6,r7,800e094 <__alt_data_end+0xfc00e094>
 800e0b0:	0005883a 	mov	r2,zero
 800e0b4:	f800283a 	ret
 800e0b8:	20c00017 	ldw	r3,0(r4)
 800e0bc:	28800017 	ldw	r2,0(r5)
 800e0c0:	1880041e 	bne	r3,r2,800e0d4 <memcmp+0x6c>
 800e0c4:	31bfff04 	addi	r6,r6,-4
 800e0c8:	21000104 	addi	r4,r4,4
 800e0cc:	29400104 	addi	r5,r5,4
 800e0d0:	39bff936 	bltu	r7,r6,800e0b8 <__alt_data_end+0xfc00e0b8>
 800e0d4:	303fe91e 	bne	r6,zero,800e07c <__alt_data_end+0xfc00e07c>
 800e0d8:	003ff506 	br	800e0b0 <__alt_data_end+0xfc00e0b0>
 800e0dc:	10c5c83a 	sub	r2,r2,r3
 800e0e0:	f800283a 	ret

0800e0e4 <memcpy>:
 800e0e4:	deffff04 	addi	sp,sp,-4
 800e0e8:	dc000015 	stw	r16,0(sp)
 800e0ec:	00c003c4 	movi	r3,15
 800e0f0:	2005883a 	mov	r2,r4
 800e0f4:	1980432e 	bgeu	r3,r6,800e204 <memcpy+0x120>
 800e0f8:	2146b03a 	or	r3,r4,r5
 800e0fc:	18c000cc 	andi	r3,r3,3
 800e100:	1800421e 	bne	r3,zero,800e20c <memcpy+0x128>
 800e104:	343ffc04 	addi	r16,r6,-16
 800e108:	8020d13a 	srli	r16,r16,4
 800e10c:	28c00104 	addi	r3,r5,4
 800e110:	23400104 	addi	r13,r4,4
 800e114:	801e913a 	slli	r15,r16,4
 800e118:	2b000204 	addi	r12,r5,8
 800e11c:	22c00204 	addi	r11,r4,8
 800e120:	7bc00504 	addi	r15,r15,20
 800e124:	2a800304 	addi	r10,r5,12
 800e128:	22400304 	addi	r9,r4,12
 800e12c:	2bdf883a 	add	r15,r5,r15
 800e130:	2811883a 	mov	r8,r5
 800e134:	200f883a 	mov	r7,r4
 800e138:	41000017 	ldw	r4,0(r8)
 800e13c:	39c00404 	addi	r7,r7,16
 800e140:	18c00404 	addi	r3,r3,16
 800e144:	393ffc15 	stw	r4,-16(r7)
 800e148:	1bbffc17 	ldw	r14,-16(r3)
 800e14c:	6b400404 	addi	r13,r13,16
 800e150:	5ac00404 	addi	r11,r11,16
 800e154:	6bbffc15 	stw	r14,-16(r13)
 800e158:	63800017 	ldw	r14,0(r12)
 800e15c:	4a400404 	addi	r9,r9,16
 800e160:	42000404 	addi	r8,r8,16
 800e164:	5bbffc15 	stw	r14,-16(r11)
 800e168:	53800017 	ldw	r14,0(r10)
 800e16c:	63000404 	addi	r12,r12,16
 800e170:	52800404 	addi	r10,r10,16
 800e174:	4bbffc15 	stw	r14,-16(r9)
 800e178:	1bffef1e 	bne	r3,r15,800e138 <__alt_data_end+0xfc00e138>
 800e17c:	81c00044 	addi	r7,r16,1
 800e180:	380e913a 	slli	r7,r7,4
 800e184:	310003cc 	andi	r4,r6,15
 800e188:	02c000c4 	movi	r11,3
 800e18c:	11c7883a 	add	r3,r2,r7
 800e190:	29cb883a 	add	r5,r5,r7
 800e194:	59001f2e 	bgeu	r11,r4,800e214 <memcpy+0x130>
 800e198:	1813883a 	mov	r9,r3
 800e19c:	2811883a 	mov	r8,r5
 800e1a0:	200f883a 	mov	r7,r4
 800e1a4:	42800017 	ldw	r10,0(r8)
 800e1a8:	4a400104 	addi	r9,r9,4
 800e1ac:	39ffff04 	addi	r7,r7,-4
 800e1b0:	4abfff15 	stw	r10,-4(r9)
 800e1b4:	42000104 	addi	r8,r8,4
 800e1b8:	59fffa36 	bltu	r11,r7,800e1a4 <__alt_data_end+0xfc00e1a4>
 800e1bc:	213fff04 	addi	r4,r4,-4
 800e1c0:	2008d0ba 	srli	r4,r4,2
 800e1c4:	318000cc 	andi	r6,r6,3
 800e1c8:	21000044 	addi	r4,r4,1
 800e1cc:	2109883a 	add	r4,r4,r4
 800e1d0:	2109883a 	add	r4,r4,r4
 800e1d4:	1907883a 	add	r3,r3,r4
 800e1d8:	290b883a 	add	r5,r5,r4
 800e1dc:	30000626 	beq	r6,zero,800e1f8 <memcpy+0x114>
 800e1e0:	198d883a 	add	r6,r3,r6
 800e1e4:	29c00003 	ldbu	r7,0(r5)
 800e1e8:	18c00044 	addi	r3,r3,1
 800e1ec:	29400044 	addi	r5,r5,1
 800e1f0:	19ffffc5 	stb	r7,-1(r3)
 800e1f4:	19bffb1e 	bne	r3,r6,800e1e4 <__alt_data_end+0xfc00e1e4>
 800e1f8:	dc000017 	ldw	r16,0(sp)
 800e1fc:	dec00104 	addi	sp,sp,4
 800e200:	f800283a 	ret
 800e204:	2007883a 	mov	r3,r4
 800e208:	003ff406 	br	800e1dc <__alt_data_end+0xfc00e1dc>
 800e20c:	2007883a 	mov	r3,r4
 800e210:	003ff306 	br	800e1e0 <__alt_data_end+0xfc00e1e0>
 800e214:	200d883a 	mov	r6,r4
 800e218:	003ff006 	br	800e1dc <__alt_data_end+0xfc00e1dc>

0800e21c <memmove>:
 800e21c:	2005883a 	mov	r2,r4
 800e220:	29000b2e 	bgeu	r5,r4,800e250 <memmove+0x34>
 800e224:	298f883a 	add	r7,r5,r6
 800e228:	21c0092e 	bgeu	r4,r7,800e250 <memmove+0x34>
 800e22c:	2187883a 	add	r3,r4,r6
 800e230:	198bc83a 	sub	r5,r3,r6
 800e234:	30004b26 	beq	r6,zero,800e364 <memmove+0x148>
 800e238:	39ffffc4 	addi	r7,r7,-1
 800e23c:	39000003 	ldbu	r4,0(r7)
 800e240:	18ffffc4 	addi	r3,r3,-1
 800e244:	19000005 	stb	r4,0(r3)
 800e248:	197ffb1e 	bne	r3,r5,800e238 <__alt_data_end+0xfc00e238>
 800e24c:	f800283a 	ret
 800e250:	00c003c4 	movi	r3,15
 800e254:	1980412e 	bgeu	r3,r6,800e35c <memmove+0x140>
 800e258:	1146b03a 	or	r3,r2,r5
 800e25c:	18c000cc 	andi	r3,r3,3
 800e260:	1800411e 	bne	r3,zero,800e368 <memmove+0x14c>
 800e264:	33fffc04 	addi	r15,r6,-16
 800e268:	781ed13a 	srli	r15,r15,4
 800e26c:	28c00104 	addi	r3,r5,4
 800e270:	13400104 	addi	r13,r2,4
 800e274:	781c913a 	slli	r14,r15,4
 800e278:	2b000204 	addi	r12,r5,8
 800e27c:	12c00204 	addi	r11,r2,8
 800e280:	73800504 	addi	r14,r14,20
 800e284:	2a800304 	addi	r10,r5,12
 800e288:	12400304 	addi	r9,r2,12
 800e28c:	2b9d883a 	add	r14,r5,r14
 800e290:	2811883a 	mov	r8,r5
 800e294:	100f883a 	mov	r7,r2
 800e298:	41000017 	ldw	r4,0(r8)
 800e29c:	39c00404 	addi	r7,r7,16
 800e2a0:	18c00404 	addi	r3,r3,16
 800e2a4:	393ffc15 	stw	r4,-16(r7)
 800e2a8:	193ffc17 	ldw	r4,-16(r3)
 800e2ac:	6b400404 	addi	r13,r13,16
 800e2b0:	5ac00404 	addi	r11,r11,16
 800e2b4:	693ffc15 	stw	r4,-16(r13)
 800e2b8:	61000017 	ldw	r4,0(r12)
 800e2bc:	4a400404 	addi	r9,r9,16
 800e2c0:	42000404 	addi	r8,r8,16
 800e2c4:	593ffc15 	stw	r4,-16(r11)
 800e2c8:	51000017 	ldw	r4,0(r10)
 800e2cc:	63000404 	addi	r12,r12,16
 800e2d0:	52800404 	addi	r10,r10,16
 800e2d4:	493ffc15 	stw	r4,-16(r9)
 800e2d8:	1bbfef1e 	bne	r3,r14,800e298 <__alt_data_end+0xfc00e298>
 800e2dc:	79000044 	addi	r4,r15,1
 800e2e0:	2008913a 	slli	r4,r4,4
 800e2e4:	328003cc 	andi	r10,r6,15
 800e2e8:	02c000c4 	movi	r11,3
 800e2ec:	1107883a 	add	r3,r2,r4
 800e2f0:	290b883a 	add	r5,r5,r4
 800e2f4:	5a801e2e 	bgeu	r11,r10,800e370 <memmove+0x154>
 800e2f8:	1813883a 	mov	r9,r3
 800e2fc:	2811883a 	mov	r8,r5
 800e300:	500f883a 	mov	r7,r10
 800e304:	41000017 	ldw	r4,0(r8)
 800e308:	4a400104 	addi	r9,r9,4
 800e30c:	39ffff04 	addi	r7,r7,-4
 800e310:	493fff15 	stw	r4,-4(r9)
 800e314:	42000104 	addi	r8,r8,4
 800e318:	59fffa36 	bltu	r11,r7,800e304 <__alt_data_end+0xfc00e304>
 800e31c:	513fff04 	addi	r4,r10,-4
 800e320:	2008d0ba 	srli	r4,r4,2
 800e324:	318000cc 	andi	r6,r6,3
 800e328:	21000044 	addi	r4,r4,1
 800e32c:	2109883a 	add	r4,r4,r4
 800e330:	2109883a 	add	r4,r4,r4
 800e334:	1907883a 	add	r3,r3,r4
 800e338:	290b883a 	add	r5,r5,r4
 800e33c:	30000926 	beq	r6,zero,800e364 <memmove+0x148>
 800e340:	198d883a 	add	r6,r3,r6
 800e344:	29c00003 	ldbu	r7,0(r5)
 800e348:	18c00044 	addi	r3,r3,1
 800e34c:	29400044 	addi	r5,r5,1
 800e350:	19ffffc5 	stb	r7,-1(r3)
 800e354:	19bffb1e 	bne	r3,r6,800e344 <__alt_data_end+0xfc00e344>
 800e358:	f800283a 	ret
 800e35c:	1007883a 	mov	r3,r2
 800e360:	003ff606 	br	800e33c <__alt_data_end+0xfc00e33c>
 800e364:	f800283a 	ret
 800e368:	1007883a 	mov	r3,r2
 800e36c:	003ff406 	br	800e340 <__alt_data_end+0xfc00e340>
 800e370:	500d883a 	mov	r6,r10
 800e374:	003ff106 	br	800e33c <__alt_data_end+0xfc00e33c>

0800e378 <_Balloc>:
 800e378:	20801317 	ldw	r2,76(r4)
 800e37c:	defffc04 	addi	sp,sp,-16
 800e380:	dc400115 	stw	r17,4(sp)
 800e384:	dc000015 	stw	r16,0(sp)
 800e388:	dfc00315 	stw	ra,12(sp)
 800e38c:	dc800215 	stw	r18,8(sp)
 800e390:	2023883a 	mov	r17,r4
 800e394:	2821883a 	mov	r16,r5
 800e398:	10000f26 	beq	r2,zero,800e3d8 <_Balloc+0x60>
 800e39c:	8407883a 	add	r3,r16,r16
 800e3a0:	18c7883a 	add	r3,r3,r3
 800e3a4:	10c7883a 	add	r3,r2,r3
 800e3a8:	18800017 	ldw	r2,0(r3)
 800e3ac:	10001126 	beq	r2,zero,800e3f4 <_Balloc+0x7c>
 800e3b0:	11000017 	ldw	r4,0(r2)
 800e3b4:	19000015 	stw	r4,0(r3)
 800e3b8:	10000415 	stw	zero,16(r2)
 800e3bc:	10000315 	stw	zero,12(r2)
 800e3c0:	dfc00317 	ldw	ra,12(sp)
 800e3c4:	dc800217 	ldw	r18,8(sp)
 800e3c8:	dc400117 	ldw	r17,4(sp)
 800e3cc:	dc000017 	ldw	r16,0(sp)
 800e3d0:	dec00404 	addi	sp,sp,16
 800e3d4:	f800283a 	ret
 800e3d8:	01400104 	movi	r5,4
 800e3dc:	01800844 	movi	r6,33
 800e3e0:	80150e00 	call	80150e0 <_calloc_r>
 800e3e4:	88801315 	stw	r2,76(r17)
 800e3e8:	103fec1e 	bne	r2,zero,800e39c <__alt_data_end+0xfc00e39c>
 800e3ec:	0005883a 	mov	r2,zero
 800e3f0:	003ff306 	br	800e3c0 <__alt_data_end+0xfc00e3c0>
 800e3f4:	01400044 	movi	r5,1
 800e3f8:	2c24983a 	sll	r18,r5,r16
 800e3fc:	8809883a 	mov	r4,r17
 800e400:	91800144 	addi	r6,r18,5
 800e404:	318d883a 	add	r6,r6,r6
 800e408:	318d883a 	add	r6,r6,r6
 800e40c:	80150e00 	call	80150e0 <_calloc_r>
 800e410:	103ff626 	beq	r2,zero,800e3ec <__alt_data_end+0xfc00e3ec>
 800e414:	14000115 	stw	r16,4(r2)
 800e418:	14800215 	stw	r18,8(r2)
 800e41c:	003fe606 	br	800e3b8 <__alt_data_end+0xfc00e3b8>

0800e420 <_Bfree>:
 800e420:	28000826 	beq	r5,zero,800e444 <_Bfree+0x24>
 800e424:	28c00117 	ldw	r3,4(r5)
 800e428:	20801317 	ldw	r2,76(r4)
 800e42c:	18c7883a 	add	r3,r3,r3
 800e430:	18c7883a 	add	r3,r3,r3
 800e434:	10c5883a 	add	r2,r2,r3
 800e438:	10c00017 	ldw	r3,0(r2)
 800e43c:	28c00015 	stw	r3,0(r5)
 800e440:	11400015 	stw	r5,0(r2)
 800e444:	f800283a 	ret

0800e448 <__multadd>:
 800e448:	defff704 	addi	sp,sp,-36
 800e44c:	dc800215 	stw	r18,8(sp)
 800e450:	2c800417 	ldw	r18,16(r5)
 800e454:	ddc00715 	stw	r23,28(sp)
 800e458:	dd800615 	stw	r22,24(sp)
 800e45c:	dd000415 	stw	r20,16(sp)
 800e460:	dcc00315 	stw	r19,12(sp)
 800e464:	dc400115 	stw	r17,4(sp)
 800e468:	dc000015 	stw	r16,0(sp)
 800e46c:	dfc00815 	stw	ra,32(sp)
 800e470:	dd400515 	stw	r21,20(sp)
 800e474:	2827883a 	mov	r19,r5
 800e478:	2029883a 	mov	r20,r4
 800e47c:	3023883a 	mov	r17,r6
 800e480:	3821883a 	mov	r16,r7
 800e484:	2d800504 	addi	r22,r5,20
 800e488:	002f883a 	mov	r23,zero
 800e48c:	b5400017 	ldw	r21,0(r22)
 800e490:	880b883a 	mov	r5,r17
 800e494:	bdc00044 	addi	r23,r23,1
 800e498:	a93fffcc 	andi	r4,r21,65535
 800e49c:	800334c0 	call	800334c <__mulsi3>
 800e4a0:	1421883a 	add	r16,r2,r16
 800e4a4:	a808d43a 	srli	r4,r21,16
 800e4a8:	802ad43a 	srli	r21,r16,16
 800e4ac:	880b883a 	mov	r5,r17
 800e4b0:	800334c0 	call	800334c <__mulsi3>
 800e4b4:	a88f883a 	add	r7,r21,r2
 800e4b8:	3804943a 	slli	r2,r7,16
 800e4bc:	80ffffcc 	andi	r3,r16,65535
 800e4c0:	b5800104 	addi	r22,r22,4
 800e4c4:	10c7883a 	add	r3,r2,r3
 800e4c8:	b0ffff15 	stw	r3,-4(r22)
 800e4cc:	3820d43a 	srli	r16,r7,16
 800e4d0:	bcbfee16 	blt	r23,r18,800e48c <__alt_data_end+0xfc00e48c>
 800e4d4:	80000926 	beq	r16,zero,800e4fc <__multadd+0xb4>
 800e4d8:	98800217 	ldw	r2,8(r19)
 800e4dc:	9080130e 	bge	r18,r2,800e52c <__multadd+0xe4>
 800e4e0:	90800144 	addi	r2,r18,5
 800e4e4:	1085883a 	add	r2,r2,r2
 800e4e8:	1085883a 	add	r2,r2,r2
 800e4ec:	9885883a 	add	r2,r19,r2
 800e4f0:	14000015 	stw	r16,0(r2)
 800e4f4:	94800044 	addi	r18,r18,1
 800e4f8:	9c800415 	stw	r18,16(r19)
 800e4fc:	9805883a 	mov	r2,r19
 800e500:	dfc00817 	ldw	ra,32(sp)
 800e504:	ddc00717 	ldw	r23,28(sp)
 800e508:	dd800617 	ldw	r22,24(sp)
 800e50c:	dd400517 	ldw	r21,20(sp)
 800e510:	dd000417 	ldw	r20,16(sp)
 800e514:	dcc00317 	ldw	r19,12(sp)
 800e518:	dc800217 	ldw	r18,8(sp)
 800e51c:	dc400117 	ldw	r17,4(sp)
 800e520:	dc000017 	ldw	r16,0(sp)
 800e524:	dec00904 	addi	sp,sp,36
 800e528:	f800283a 	ret
 800e52c:	99400117 	ldw	r5,4(r19)
 800e530:	a009883a 	mov	r4,r20
 800e534:	29400044 	addi	r5,r5,1
 800e538:	800e3780 	call	800e378 <_Balloc>
 800e53c:	99800417 	ldw	r6,16(r19)
 800e540:	99400304 	addi	r5,r19,12
 800e544:	11000304 	addi	r4,r2,12
 800e548:	31800084 	addi	r6,r6,2
 800e54c:	318d883a 	add	r6,r6,r6
 800e550:	318d883a 	add	r6,r6,r6
 800e554:	1023883a 	mov	r17,r2
 800e558:	800e0e40 	call	800e0e4 <memcpy>
 800e55c:	99000117 	ldw	r4,4(r19)
 800e560:	a0c01317 	ldw	r3,76(r20)
 800e564:	2109883a 	add	r4,r4,r4
 800e568:	2109883a 	add	r4,r4,r4
 800e56c:	1907883a 	add	r3,r3,r4
 800e570:	18800017 	ldw	r2,0(r3)
 800e574:	98800015 	stw	r2,0(r19)
 800e578:	1cc00015 	stw	r19,0(r3)
 800e57c:	8827883a 	mov	r19,r17
 800e580:	003fd706 	br	800e4e0 <__alt_data_end+0xfc00e4e0>

0800e584 <__s2b>:
 800e584:	defff904 	addi	sp,sp,-28
 800e588:	dc400115 	stw	r17,4(sp)
 800e58c:	dc000015 	stw	r16,0(sp)
 800e590:	2023883a 	mov	r17,r4
 800e594:	2821883a 	mov	r16,r5
 800e598:	39000204 	addi	r4,r7,8
 800e59c:	01400244 	movi	r5,9
 800e5a0:	dcc00315 	stw	r19,12(sp)
 800e5a4:	dc800215 	stw	r18,8(sp)
 800e5a8:	dfc00615 	stw	ra,24(sp)
 800e5ac:	dd400515 	stw	r21,20(sp)
 800e5b0:	dd000415 	stw	r20,16(sp)
 800e5b4:	3825883a 	mov	r18,r7
 800e5b8:	3027883a 	mov	r19,r6
 800e5bc:	80173840 	call	8017384 <__divsi3>
 800e5c0:	00c00044 	movi	r3,1
 800e5c4:	000b883a 	mov	r5,zero
 800e5c8:	1880030e 	bge	r3,r2,800e5d8 <__s2b+0x54>
 800e5cc:	18c7883a 	add	r3,r3,r3
 800e5d0:	29400044 	addi	r5,r5,1
 800e5d4:	18bffd16 	blt	r3,r2,800e5cc <__alt_data_end+0xfc00e5cc>
 800e5d8:	8809883a 	mov	r4,r17
 800e5dc:	800e3780 	call	800e378 <_Balloc>
 800e5e0:	d8c00717 	ldw	r3,28(sp)
 800e5e4:	10c00515 	stw	r3,20(r2)
 800e5e8:	00c00044 	movi	r3,1
 800e5ec:	10c00415 	stw	r3,16(r2)
 800e5f0:	00c00244 	movi	r3,9
 800e5f4:	1cc0210e 	bge	r3,r19,800e67c <__s2b+0xf8>
 800e5f8:	80eb883a 	add	r21,r16,r3
 800e5fc:	a829883a 	mov	r20,r21
 800e600:	84e1883a 	add	r16,r16,r19
 800e604:	a1c00007 	ldb	r7,0(r20)
 800e608:	8809883a 	mov	r4,r17
 800e60c:	a5000044 	addi	r20,r20,1
 800e610:	100b883a 	mov	r5,r2
 800e614:	01800284 	movi	r6,10
 800e618:	39fff404 	addi	r7,r7,-48
 800e61c:	800e4480 	call	800e448 <__multadd>
 800e620:	a43ff81e 	bne	r20,r16,800e604 <__alt_data_end+0xfc00e604>
 800e624:	ace1883a 	add	r16,r21,r19
 800e628:	843ffe04 	addi	r16,r16,-8
 800e62c:	9c800a0e 	bge	r19,r18,800e658 <__s2b+0xd4>
 800e630:	94e5c83a 	sub	r18,r18,r19
 800e634:	84a5883a 	add	r18,r16,r18
 800e638:	81c00007 	ldb	r7,0(r16)
 800e63c:	8809883a 	mov	r4,r17
 800e640:	84000044 	addi	r16,r16,1
 800e644:	100b883a 	mov	r5,r2
 800e648:	01800284 	movi	r6,10
 800e64c:	39fff404 	addi	r7,r7,-48
 800e650:	800e4480 	call	800e448 <__multadd>
 800e654:	84bff81e 	bne	r16,r18,800e638 <__alt_data_end+0xfc00e638>
 800e658:	dfc00617 	ldw	ra,24(sp)
 800e65c:	dd400517 	ldw	r21,20(sp)
 800e660:	dd000417 	ldw	r20,16(sp)
 800e664:	dcc00317 	ldw	r19,12(sp)
 800e668:	dc800217 	ldw	r18,8(sp)
 800e66c:	dc400117 	ldw	r17,4(sp)
 800e670:	dc000017 	ldw	r16,0(sp)
 800e674:	dec00704 	addi	sp,sp,28
 800e678:	f800283a 	ret
 800e67c:	84000284 	addi	r16,r16,10
 800e680:	1827883a 	mov	r19,r3
 800e684:	003fe906 	br	800e62c <__alt_data_end+0xfc00e62c>

0800e688 <__hi0bits>:
 800e688:	20bfffec 	andhi	r2,r4,65535
 800e68c:	1000141e 	bne	r2,zero,800e6e0 <__hi0bits+0x58>
 800e690:	2008943a 	slli	r4,r4,16
 800e694:	00800404 	movi	r2,16
 800e698:	20ffc02c 	andhi	r3,r4,65280
 800e69c:	1800021e 	bne	r3,zero,800e6a8 <__hi0bits+0x20>
 800e6a0:	2008923a 	slli	r4,r4,8
 800e6a4:	10800204 	addi	r2,r2,8
 800e6a8:	20fc002c 	andhi	r3,r4,61440
 800e6ac:	1800021e 	bne	r3,zero,800e6b8 <__hi0bits+0x30>
 800e6b0:	2008913a 	slli	r4,r4,4
 800e6b4:	10800104 	addi	r2,r2,4
 800e6b8:	20f0002c 	andhi	r3,r4,49152
 800e6bc:	1800031e 	bne	r3,zero,800e6cc <__hi0bits+0x44>
 800e6c0:	2109883a 	add	r4,r4,r4
 800e6c4:	10800084 	addi	r2,r2,2
 800e6c8:	2109883a 	add	r4,r4,r4
 800e6cc:	20000316 	blt	r4,zero,800e6dc <__hi0bits+0x54>
 800e6d0:	2110002c 	andhi	r4,r4,16384
 800e6d4:	2000041e 	bne	r4,zero,800e6e8 <__hi0bits+0x60>
 800e6d8:	00800804 	movi	r2,32
 800e6dc:	f800283a 	ret
 800e6e0:	0005883a 	mov	r2,zero
 800e6e4:	003fec06 	br	800e698 <__alt_data_end+0xfc00e698>
 800e6e8:	10800044 	addi	r2,r2,1
 800e6ec:	f800283a 	ret

0800e6f0 <__lo0bits>:
 800e6f0:	20c00017 	ldw	r3,0(r4)
 800e6f4:	188001cc 	andi	r2,r3,7
 800e6f8:	10000826 	beq	r2,zero,800e71c <__lo0bits+0x2c>
 800e6fc:	1880004c 	andi	r2,r3,1
 800e700:	1000211e 	bne	r2,zero,800e788 <__lo0bits+0x98>
 800e704:	1880008c 	andi	r2,r3,2
 800e708:	1000211e 	bne	r2,zero,800e790 <__lo0bits+0xa0>
 800e70c:	1806d0ba 	srli	r3,r3,2
 800e710:	00800084 	movi	r2,2
 800e714:	20c00015 	stw	r3,0(r4)
 800e718:	f800283a 	ret
 800e71c:	18bfffcc 	andi	r2,r3,65535
 800e720:	10001326 	beq	r2,zero,800e770 <__lo0bits+0x80>
 800e724:	0005883a 	mov	r2,zero
 800e728:	19403fcc 	andi	r5,r3,255
 800e72c:	2800021e 	bne	r5,zero,800e738 <__lo0bits+0x48>
 800e730:	1806d23a 	srli	r3,r3,8
 800e734:	10800204 	addi	r2,r2,8
 800e738:	194003cc 	andi	r5,r3,15
 800e73c:	2800021e 	bne	r5,zero,800e748 <__lo0bits+0x58>
 800e740:	1806d13a 	srli	r3,r3,4
 800e744:	10800104 	addi	r2,r2,4
 800e748:	194000cc 	andi	r5,r3,3
 800e74c:	2800021e 	bne	r5,zero,800e758 <__lo0bits+0x68>
 800e750:	1806d0ba 	srli	r3,r3,2
 800e754:	10800084 	addi	r2,r2,2
 800e758:	1940004c 	andi	r5,r3,1
 800e75c:	2800081e 	bne	r5,zero,800e780 <__lo0bits+0x90>
 800e760:	1806d07a 	srli	r3,r3,1
 800e764:	1800051e 	bne	r3,zero,800e77c <__lo0bits+0x8c>
 800e768:	00800804 	movi	r2,32
 800e76c:	f800283a 	ret
 800e770:	1806d43a 	srli	r3,r3,16
 800e774:	00800404 	movi	r2,16
 800e778:	003feb06 	br	800e728 <__alt_data_end+0xfc00e728>
 800e77c:	10800044 	addi	r2,r2,1
 800e780:	20c00015 	stw	r3,0(r4)
 800e784:	f800283a 	ret
 800e788:	0005883a 	mov	r2,zero
 800e78c:	f800283a 	ret
 800e790:	1806d07a 	srli	r3,r3,1
 800e794:	00800044 	movi	r2,1
 800e798:	20c00015 	stw	r3,0(r4)
 800e79c:	f800283a 	ret

0800e7a0 <__i2b>:
 800e7a0:	defffd04 	addi	sp,sp,-12
 800e7a4:	dc000015 	stw	r16,0(sp)
 800e7a8:	04000044 	movi	r16,1
 800e7ac:	dc400115 	stw	r17,4(sp)
 800e7b0:	2823883a 	mov	r17,r5
 800e7b4:	800b883a 	mov	r5,r16
 800e7b8:	dfc00215 	stw	ra,8(sp)
 800e7bc:	800e3780 	call	800e378 <_Balloc>
 800e7c0:	14400515 	stw	r17,20(r2)
 800e7c4:	14000415 	stw	r16,16(r2)
 800e7c8:	dfc00217 	ldw	ra,8(sp)
 800e7cc:	dc400117 	ldw	r17,4(sp)
 800e7d0:	dc000017 	ldw	r16,0(sp)
 800e7d4:	dec00304 	addi	sp,sp,12
 800e7d8:	f800283a 	ret

0800e7dc <__multiply>:
 800e7dc:	deffef04 	addi	sp,sp,-68
 800e7e0:	dc400815 	stw	r17,32(sp)
 800e7e4:	dc000715 	stw	r16,28(sp)
 800e7e8:	2c400417 	ldw	r17,16(r5)
 800e7ec:	34000417 	ldw	r16,16(r6)
 800e7f0:	dd800d15 	stw	r22,52(sp)
 800e7f4:	dc800915 	stw	r18,36(sp)
 800e7f8:	dfc01015 	stw	ra,64(sp)
 800e7fc:	df000f15 	stw	fp,60(sp)
 800e800:	ddc00e15 	stw	r23,56(sp)
 800e804:	dd400c15 	stw	r21,48(sp)
 800e808:	dd000b15 	stw	r20,44(sp)
 800e80c:	dcc00a15 	stw	r19,40(sp)
 800e810:	2825883a 	mov	r18,r5
 800e814:	302d883a 	mov	r22,r6
 800e818:	8c009116 	blt	r17,r16,800ea60 <__multiply+0x284>
 800e81c:	8005883a 	mov	r2,r16
 800e820:	8821883a 	mov	r16,r17
 800e824:	1023883a 	mov	r17,r2
 800e828:	90800217 	ldw	r2,8(r18)
 800e82c:	8447883a 	add	r3,r16,r17
 800e830:	d8c00215 	stw	r3,8(sp)
 800e834:	91400117 	ldw	r5,4(r18)
 800e838:	10c0010e 	bge	r2,r3,800e840 <__multiply+0x64>
 800e83c:	29400044 	addi	r5,r5,1
 800e840:	800e3780 	call	800e378 <_Balloc>
 800e844:	d8c00217 	ldw	r3,8(sp)
 800e848:	d8800615 	stw	r2,24(sp)
 800e84c:	18eb883a 	add	r21,r3,r3
 800e850:	ad6b883a 	add	r21,r21,r21
 800e854:	10c00504 	addi	r3,r2,20
 800e858:	1d6b883a 	add	r21,r3,r21
 800e85c:	d8c00115 	stw	r3,4(sp)
 800e860:	dd400315 	stw	r21,12(sp)
 800e864:	1805883a 	mov	r2,r3
 800e868:	1d40042e 	bgeu	r3,r21,800e87c <__multiply+0xa0>
 800e86c:	d8c00317 	ldw	r3,12(sp)
 800e870:	10000015 	stw	zero,0(r2)
 800e874:	10800104 	addi	r2,r2,4
 800e878:	10fffc36 	bltu	r2,r3,800e86c <__alt_data_end+0xfc00e86c>
 800e87c:	8c63883a 	add	r17,r17,r17
 800e880:	b5800504 	addi	r22,r22,20
 800e884:	8c63883a 	add	r17,r17,r17
 800e888:	94800504 	addi	r18,r18,20
 800e88c:	8421883a 	add	r16,r16,r16
 800e890:	b463883a 	add	r17,r22,r17
 800e894:	8421883a 	add	r16,r16,r16
 800e898:	dd800015 	stw	r22,0(sp)
 800e89c:	dc800415 	stw	r18,16(sp)
 800e8a0:	dc400515 	stw	r17,20(sp)
 800e8a4:	9429883a 	add	r20,r18,r16
 800e8a8:	b4404f2e 	bgeu	r22,r17,800e9e8 <__multiply+0x20c>
 800e8ac:	d8c00017 	ldw	r3,0(sp)
 800e8b0:	1c800017 	ldw	r18,0(r3)
 800e8b4:	943fffcc 	andi	r16,r18,65535
 800e8b8:	80001e26 	beq	r16,zero,800e934 <__multiply+0x158>
 800e8bc:	dd800117 	ldw	r22,4(sp)
 800e8c0:	dd400417 	ldw	r21,16(sp)
 800e8c4:	0025883a 	mov	r18,zero
 800e8c8:	adc00017 	ldw	r23,0(r21)
 800e8cc:	b4c00017 	ldw	r19,0(r22)
 800e8d0:	800b883a 	mov	r5,r16
 800e8d4:	b93fffcc 	andi	r4,r23,65535
 800e8d8:	800334c0 	call	800334c <__mulsi3>
 800e8dc:	9c7fffcc 	andi	r17,r19,65535
 800e8e0:	8885883a 	add	r2,r17,r2
 800e8e4:	b808d43a 	srli	r4,r23,16
 800e8e8:	14a3883a 	add	r17,r2,r18
 800e8ec:	9826d43a 	srli	r19,r19,16
 800e8f0:	8824d43a 	srli	r18,r17,16
 800e8f4:	800b883a 	mov	r5,r16
 800e8f8:	800334c0 	call	800334c <__mulsi3>
 800e8fc:	9885883a 	add	r2,r19,r2
 800e900:	14a7883a 	add	r19,r2,r18
 800e904:	88ffffcc 	andi	r3,r17,65535
 800e908:	9822943a 	slli	r17,r19,16
 800e90c:	ad400104 	addi	r21,r21,4
 800e910:	b005883a 	mov	r2,r22
 800e914:	88c6b03a 	or	r3,r17,r3
 800e918:	b0c00015 	stw	r3,0(r22)
 800e91c:	9824d43a 	srli	r18,r19,16
 800e920:	b5800104 	addi	r22,r22,4
 800e924:	ad3fe836 	bltu	r21,r20,800e8c8 <__alt_data_end+0xfc00e8c8>
 800e928:	d8c00017 	ldw	r3,0(sp)
 800e92c:	14800115 	stw	r18,4(r2)
 800e930:	1c800017 	ldw	r18,0(r3)
 800e934:	9024d43a 	srli	r18,r18,16
 800e938:	90002226 	beq	r18,zero,800e9c4 <__multiply+0x1e8>
 800e93c:	d8c00117 	ldw	r3,4(sp)
 800e940:	dd800417 	ldw	r22,16(sp)
 800e944:	002f883a 	mov	r23,zero
 800e948:	1f000017 	ldw	fp,0(r3)
 800e94c:	1823883a 	mov	r17,r3
 800e950:	182b883a 	mov	r21,r3
 800e954:	e021883a 	mov	r16,fp
 800e958:	00000106 	br	800e960 <__multiply+0x184>
 800e95c:	982b883a 	mov	r21,r19
 800e960:	b100000b 	ldhu	r4,0(r22)
 800e964:	8020d43a 	srli	r16,r16,16
 800e968:	900b883a 	mov	r5,r18
 800e96c:	800334c0 	call	800334c <__mulsi3>
 800e970:	1405883a 	add	r2,r2,r16
 800e974:	15ef883a 	add	r23,r2,r23
 800e978:	b804943a 	slli	r2,r23,16
 800e97c:	e0ffffcc 	andi	r3,fp,65535
 800e980:	8c400104 	addi	r17,r17,4
 800e984:	10c6b03a 	or	r3,r2,r3
 800e988:	88ffff15 	stw	r3,-4(r17)
 800e98c:	b5800104 	addi	r22,r22,4
 800e990:	b13fff17 	ldw	r4,-4(r22)
 800e994:	acc00104 	addi	r19,r21,4
 800e998:	900b883a 	mov	r5,r18
 800e99c:	2008d43a 	srli	r4,r4,16
 800e9a0:	9c000017 	ldw	r16,0(r19)
 800e9a4:	800334c0 	call	800334c <__mulsi3>
 800e9a8:	b806d43a 	srli	r3,r23,16
 800e9ac:	813fffcc 	andi	r4,r16,65535
 800e9b0:	1105883a 	add	r2,r2,r4
 800e9b4:	10f9883a 	add	fp,r2,r3
 800e9b8:	e02ed43a 	srli	r23,fp,16
 800e9bc:	b53fe736 	bltu	r22,r20,800e95c <__alt_data_end+0xfc00e95c>
 800e9c0:	af000115 	stw	fp,4(r21)
 800e9c4:	d8c00017 	ldw	r3,0(sp)
 800e9c8:	d9000517 	ldw	r4,20(sp)
 800e9cc:	18c00104 	addi	r3,r3,4
 800e9d0:	d8c00015 	stw	r3,0(sp)
 800e9d4:	d8c00117 	ldw	r3,4(sp)
 800e9d8:	18c00104 	addi	r3,r3,4
 800e9dc:	d8c00115 	stw	r3,4(sp)
 800e9e0:	d8c00017 	ldw	r3,0(sp)
 800e9e4:	193fb136 	bltu	r3,r4,800e8ac <__alt_data_end+0xfc00e8ac>
 800e9e8:	d8c00217 	ldw	r3,8(sp)
 800e9ec:	00c00c0e 	bge	zero,r3,800ea20 <__multiply+0x244>
 800e9f0:	d8c00317 	ldw	r3,12(sp)
 800e9f4:	18bfff17 	ldw	r2,-4(r3)
 800e9f8:	1d7fff04 	addi	r21,r3,-4
 800e9fc:	10000326 	beq	r2,zero,800ea0c <__multiply+0x230>
 800ea00:	00000706 	br	800ea20 <__multiply+0x244>
 800ea04:	a8800017 	ldw	r2,0(r21)
 800ea08:	1000051e 	bne	r2,zero,800ea20 <__multiply+0x244>
 800ea0c:	d8c00217 	ldw	r3,8(sp)
 800ea10:	ad7fff04 	addi	r21,r21,-4
 800ea14:	18ffffc4 	addi	r3,r3,-1
 800ea18:	d8c00215 	stw	r3,8(sp)
 800ea1c:	183ff91e 	bne	r3,zero,800ea04 <__alt_data_end+0xfc00ea04>
 800ea20:	d8c00617 	ldw	r3,24(sp)
 800ea24:	d9000217 	ldw	r4,8(sp)
 800ea28:	1805883a 	mov	r2,r3
 800ea2c:	19000415 	stw	r4,16(r3)
 800ea30:	dfc01017 	ldw	ra,64(sp)
 800ea34:	df000f17 	ldw	fp,60(sp)
 800ea38:	ddc00e17 	ldw	r23,56(sp)
 800ea3c:	dd800d17 	ldw	r22,52(sp)
 800ea40:	dd400c17 	ldw	r21,48(sp)
 800ea44:	dd000b17 	ldw	r20,44(sp)
 800ea48:	dcc00a17 	ldw	r19,40(sp)
 800ea4c:	dc800917 	ldw	r18,36(sp)
 800ea50:	dc400817 	ldw	r17,32(sp)
 800ea54:	dc000717 	ldw	r16,28(sp)
 800ea58:	dec01104 	addi	sp,sp,68
 800ea5c:	f800283a 	ret
 800ea60:	3025883a 	mov	r18,r6
 800ea64:	282d883a 	mov	r22,r5
 800ea68:	003f6f06 	br	800e828 <__alt_data_end+0xfc00e828>

0800ea6c <__pow5mult>:
 800ea6c:	defffa04 	addi	sp,sp,-24
 800ea70:	dcc00315 	stw	r19,12(sp)
 800ea74:	dc800215 	stw	r18,8(sp)
 800ea78:	dc000015 	stw	r16,0(sp)
 800ea7c:	dfc00515 	stw	ra,20(sp)
 800ea80:	dd000415 	stw	r20,16(sp)
 800ea84:	dc400115 	stw	r17,4(sp)
 800ea88:	308000cc 	andi	r2,r6,3
 800ea8c:	3021883a 	mov	r16,r6
 800ea90:	2027883a 	mov	r19,r4
 800ea94:	2825883a 	mov	r18,r5
 800ea98:	10002e1e 	bne	r2,zero,800eb54 <__pow5mult+0xe8>
 800ea9c:	8021d0ba 	srai	r16,r16,2
 800eaa0:	80001a26 	beq	r16,zero,800eb0c <__pow5mult+0xa0>
 800eaa4:	9c401217 	ldw	r17,72(r19)
 800eaa8:	8800061e 	bne	r17,zero,800eac4 <__pow5mult+0x58>
 800eaac:	00003406 	br	800eb80 <__pow5mult+0x114>
 800eab0:	8021d07a 	srai	r16,r16,1
 800eab4:	80001526 	beq	r16,zero,800eb0c <__pow5mult+0xa0>
 800eab8:	88800017 	ldw	r2,0(r17)
 800eabc:	10001c26 	beq	r2,zero,800eb30 <__pow5mult+0xc4>
 800eac0:	1023883a 	mov	r17,r2
 800eac4:	80c0004c 	andi	r3,r16,1
 800eac8:	183ff926 	beq	r3,zero,800eab0 <__alt_data_end+0xfc00eab0>
 800eacc:	900b883a 	mov	r5,r18
 800ead0:	880d883a 	mov	r6,r17
 800ead4:	9809883a 	mov	r4,r19
 800ead8:	800e7dc0 	call	800e7dc <__multiply>
 800eadc:	90001b26 	beq	r18,zero,800eb4c <__pow5mult+0xe0>
 800eae0:	91c00117 	ldw	r7,4(r18)
 800eae4:	98c01317 	ldw	r3,76(r19)
 800eae8:	8021d07a 	srai	r16,r16,1
 800eaec:	39cf883a 	add	r7,r7,r7
 800eaf0:	39cf883a 	add	r7,r7,r7
 800eaf4:	19c7883a 	add	r3,r3,r7
 800eaf8:	19000017 	ldw	r4,0(r3)
 800eafc:	91000015 	stw	r4,0(r18)
 800eb00:	1c800015 	stw	r18,0(r3)
 800eb04:	1025883a 	mov	r18,r2
 800eb08:	803feb1e 	bne	r16,zero,800eab8 <__alt_data_end+0xfc00eab8>
 800eb0c:	9005883a 	mov	r2,r18
 800eb10:	dfc00517 	ldw	ra,20(sp)
 800eb14:	dd000417 	ldw	r20,16(sp)
 800eb18:	dcc00317 	ldw	r19,12(sp)
 800eb1c:	dc800217 	ldw	r18,8(sp)
 800eb20:	dc400117 	ldw	r17,4(sp)
 800eb24:	dc000017 	ldw	r16,0(sp)
 800eb28:	dec00604 	addi	sp,sp,24
 800eb2c:	f800283a 	ret
 800eb30:	9809883a 	mov	r4,r19
 800eb34:	880b883a 	mov	r5,r17
 800eb38:	880d883a 	mov	r6,r17
 800eb3c:	800e7dc0 	call	800e7dc <__multiply>
 800eb40:	88800015 	stw	r2,0(r17)
 800eb44:	10000015 	stw	zero,0(r2)
 800eb48:	003fdd06 	br	800eac0 <__alt_data_end+0xfc00eac0>
 800eb4c:	1025883a 	mov	r18,r2
 800eb50:	003fd706 	br	800eab0 <__alt_data_end+0xfc00eab0>
 800eb54:	10bfffc4 	addi	r2,r2,-1
 800eb58:	1085883a 	add	r2,r2,r2
 800eb5c:	00c200b4 	movhi	r3,2050
 800eb60:	18f8a704 	addi	r3,r3,-7524
 800eb64:	1085883a 	add	r2,r2,r2
 800eb68:	1885883a 	add	r2,r3,r2
 800eb6c:	11800017 	ldw	r6,0(r2)
 800eb70:	000f883a 	mov	r7,zero
 800eb74:	800e4480 	call	800e448 <__multadd>
 800eb78:	1025883a 	mov	r18,r2
 800eb7c:	003fc706 	br	800ea9c <__alt_data_end+0xfc00ea9c>
 800eb80:	05000044 	movi	r20,1
 800eb84:	9809883a 	mov	r4,r19
 800eb88:	a00b883a 	mov	r5,r20
 800eb8c:	800e3780 	call	800e378 <_Balloc>
 800eb90:	1023883a 	mov	r17,r2
 800eb94:	00809c44 	movi	r2,625
 800eb98:	88800515 	stw	r2,20(r17)
 800eb9c:	8d000415 	stw	r20,16(r17)
 800eba0:	9c401215 	stw	r17,72(r19)
 800eba4:	88000015 	stw	zero,0(r17)
 800eba8:	003fc606 	br	800eac4 <__alt_data_end+0xfc00eac4>

0800ebac <__lshift>:
 800ebac:	defff904 	addi	sp,sp,-28
 800ebb0:	dd000415 	stw	r20,16(sp)
 800ebb4:	dcc00315 	stw	r19,12(sp)
 800ebb8:	3029d17a 	srai	r20,r6,5
 800ebbc:	2cc00417 	ldw	r19,16(r5)
 800ebc0:	28800217 	ldw	r2,8(r5)
 800ebc4:	dd400515 	stw	r21,20(sp)
 800ebc8:	a4e7883a 	add	r19,r20,r19
 800ebcc:	dc800215 	stw	r18,8(sp)
 800ebd0:	dc400115 	stw	r17,4(sp)
 800ebd4:	dc000015 	stw	r16,0(sp)
 800ebd8:	dfc00615 	stw	ra,24(sp)
 800ebdc:	9c000044 	addi	r16,r19,1
 800ebe0:	2823883a 	mov	r17,r5
 800ebe4:	302b883a 	mov	r21,r6
 800ebe8:	2025883a 	mov	r18,r4
 800ebec:	29400117 	ldw	r5,4(r5)
 800ebf0:	1400030e 	bge	r2,r16,800ec00 <__lshift+0x54>
 800ebf4:	1085883a 	add	r2,r2,r2
 800ebf8:	29400044 	addi	r5,r5,1
 800ebfc:	143ffd16 	blt	r2,r16,800ebf4 <__alt_data_end+0xfc00ebf4>
 800ec00:	9009883a 	mov	r4,r18
 800ec04:	800e3780 	call	800e378 <_Balloc>
 800ec08:	11c00504 	addi	r7,r2,20
 800ec0c:	0500090e 	bge	zero,r20,800ec34 <__lshift+0x88>
 800ec10:	3811883a 	mov	r8,r7
 800ec14:	0007883a 	mov	r3,zero
 800ec18:	40000015 	stw	zero,0(r8)
 800ec1c:	18c00044 	addi	r3,r3,1
 800ec20:	42000104 	addi	r8,r8,4
 800ec24:	1d3ffc1e 	bne	r3,r20,800ec18 <__alt_data_end+0xfc00ec18>
 800ec28:	18c7883a 	add	r3,r3,r3
 800ec2c:	18c7883a 	add	r3,r3,r3
 800ec30:	38cf883a 	add	r7,r7,r3
 800ec34:	89000417 	ldw	r4,16(r17)
 800ec38:	88c00504 	addi	r3,r17,20
 800ec3c:	a98007cc 	andi	r6,r21,31
 800ec40:	2109883a 	add	r4,r4,r4
 800ec44:	2109883a 	add	r4,r4,r4
 800ec48:	1909883a 	add	r4,r3,r4
 800ec4c:	30002326 	beq	r6,zero,800ecdc <__lshift+0x130>
 800ec50:	01400804 	movi	r5,32
 800ec54:	298bc83a 	sub	r5,r5,r6
 800ec58:	0013883a 	mov	r9,zero
 800ec5c:	1a000017 	ldw	r8,0(r3)
 800ec60:	3815883a 	mov	r10,r7
 800ec64:	39c00104 	addi	r7,r7,4
 800ec68:	4190983a 	sll	r8,r8,r6
 800ec6c:	18c00104 	addi	r3,r3,4
 800ec70:	4a10b03a 	or	r8,r9,r8
 800ec74:	3a3fff15 	stw	r8,-4(r7)
 800ec78:	1a3fff17 	ldw	r8,-4(r3)
 800ec7c:	4152d83a 	srl	r9,r8,r5
 800ec80:	193ff636 	bltu	r3,r4,800ec5c <__alt_data_end+0xfc00ec5c>
 800ec84:	52400115 	stw	r9,4(r10)
 800ec88:	48000126 	beq	r9,zero,800ec90 <__lshift+0xe4>
 800ec8c:	9c000084 	addi	r16,r19,2
 800ec90:	89000117 	ldw	r4,4(r17)
 800ec94:	90c01317 	ldw	r3,76(r18)
 800ec98:	843fffc4 	addi	r16,r16,-1
 800ec9c:	2109883a 	add	r4,r4,r4
 800eca0:	2109883a 	add	r4,r4,r4
 800eca4:	1907883a 	add	r3,r3,r4
 800eca8:	19000017 	ldw	r4,0(r3)
 800ecac:	14000415 	stw	r16,16(r2)
 800ecb0:	89000015 	stw	r4,0(r17)
 800ecb4:	1c400015 	stw	r17,0(r3)
 800ecb8:	dfc00617 	ldw	ra,24(sp)
 800ecbc:	dd400517 	ldw	r21,20(sp)
 800ecc0:	dd000417 	ldw	r20,16(sp)
 800ecc4:	dcc00317 	ldw	r19,12(sp)
 800ecc8:	dc800217 	ldw	r18,8(sp)
 800eccc:	dc400117 	ldw	r17,4(sp)
 800ecd0:	dc000017 	ldw	r16,0(sp)
 800ecd4:	dec00704 	addi	sp,sp,28
 800ecd8:	f800283a 	ret
 800ecdc:	19400017 	ldw	r5,0(r3)
 800ece0:	39c00104 	addi	r7,r7,4
 800ece4:	18c00104 	addi	r3,r3,4
 800ece8:	397fff15 	stw	r5,-4(r7)
 800ecec:	193ffb36 	bltu	r3,r4,800ecdc <__alt_data_end+0xfc00ecdc>
 800ecf0:	003fe706 	br	800ec90 <__alt_data_end+0xfc00ec90>

0800ecf4 <__mcmp>:
 800ecf4:	20800417 	ldw	r2,16(r4)
 800ecf8:	28c00417 	ldw	r3,16(r5)
 800ecfc:	10c5c83a 	sub	r2,r2,r3
 800ed00:	1000111e 	bne	r2,zero,800ed48 <__mcmp+0x54>
 800ed04:	18c7883a 	add	r3,r3,r3
 800ed08:	18c7883a 	add	r3,r3,r3
 800ed0c:	21000504 	addi	r4,r4,20
 800ed10:	29400504 	addi	r5,r5,20
 800ed14:	20c5883a 	add	r2,r4,r3
 800ed18:	28cb883a 	add	r5,r5,r3
 800ed1c:	00000106 	br	800ed24 <__mcmp+0x30>
 800ed20:	20800a2e 	bgeu	r4,r2,800ed4c <__mcmp+0x58>
 800ed24:	10bfff04 	addi	r2,r2,-4
 800ed28:	297fff04 	addi	r5,r5,-4
 800ed2c:	11800017 	ldw	r6,0(r2)
 800ed30:	28c00017 	ldw	r3,0(r5)
 800ed34:	30fffa26 	beq	r6,r3,800ed20 <__alt_data_end+0xfc00ed20>
 800ed38:	30c00236 	bltu	r6,r3,800ed44 <__mcmp+0x50>
 800ed3c:	00800044 	movi	r2,1
 800ed40:	f800283a 	ret
 800ed44:	00bfffc4 	movi	r2,-1
 800ed48:	f800283a 	ret
 800ed4c:	0005883a 	mov	r2,zero
 800ed50:	f800283a 	ret

0800ed54 <__mdiff>:
 800ed54:	defffb04 	addi	sp,sp,-20
 800ed58:	dc000015 	stw	r16,0(sp)
 800ed5c:	2821883a 	mov	r16,r5
 800ed60:	dcc00315 	stw	r19,12(sp)
 800ed64:	300b883a 	mov	r5,r6
 800ed68:	2027883a 	mov	r19,r4
 800ed6c:	8009883a 	mov	r4,r16
 800ed70:	dc800215 	stw	r18,8(sp)
 800ed74:	dfc00415 	stw	ra,16(sp)
 800ed78:	dc400115 	stw	r17,4(sp)
 800ed7c:	3025883a 	mov	r18,r6
 800ed80:	800ecf40 	call	800ecf4 <__mcmp>
 800ed84:	10005226 	beq	r2,zero,800eed0 <__mdiff+0x17c>
 800ed88:	10004c16 	blt	r2,zero,800eebc <__mdiff+0x168>
 800ed8c:	0023883a 	mov	r17,zero
 800ed90:	81400117 	ldw	r5,4(r16)
 800ed94:	9809883a 	mov	r4,r19
 800ed98:	800e3780 	call	800e378 <_Balloc>
 800ed9c:	83400417 	ldw	r13,16(r16)
 800eda0:	93800417 	ldw	r14,16(r18)
 800eda4:	81000504 	addi	r4,r16,20
 800eda8:	6b59883a 	add	r12,r13,r13
 800edac:	739d883a 	add	r14,r14,r14
 800edb0:	6319883a 	add	r12,r12,r12
 800edb4:	91800504 	addi	r6,r18,20
 800edb8:	739d883a 	add	r14,r14,r14
 800edbc:	14400315 	stw	r17,12(r2)
 800edc0:	2319883a 	add	r12,r4,r12
 800edc4:	339d883a 	add	r14,r6,r14
 800edc8:	12400504 	addi	r9,r2,20
 800edcc:	0007883a 	mov	r3,zero
 800edd0:	22000017 	ldw	r8,0(r4)
 800edd4:	32800017 	ldw	r10,0(r6)
 800edd8:	4ac00104 	addi	r11,r9,4
 800eddc:	41ffffcc 	andi	r7,r8,65535
 800ede0:	38c7883a 	add	r3,r7,r3
 800ede4:	51ffffcc 	andi	r7,r10,65535
 800ede8:	19cfc83a 	sub	r7,r3,r7
 800edec:	4010d43a 	srli	r8,r8,16
 800edf0:	5014d43a 	srli	r10,r10,16
 800edf4:	3807d43a 	srai	r3,r7,16
 800edf8:	39ffffcc 	andi	r7,r7,65535
 800edfc:	4291c83a 	sub	r8,r8,r10
 800ee00:	40c7883a 	add	r3,r8,r3
 800ee04:	1810943a 	slli	r8,r3,16
 800ee08:	31800104 	addi	r6,r6,4
 800ee0c:	21000104 	addi	r4,r4,4
 800ee10:	41ceb03a 	or	r7,r8,r7
 800ee14:	49c00015 	stw	r7,0(r9)
 800ee18:	1807d43a 	srai	r3,r3,16
 800ee1c:	580b883a 	mov	r5,r11
 800ee20:	5813883a 	mov	r9,r11
 800ee24:	33bfea36 	bltu	r6,r14,800edd0 <__alt_data_end+0xfc00edd0>
 800ee28:	2011883a 	mov	r8,r4
 800ee2c:	2300152e 	bgeu	r4,r12,800ee84 <__mdiff+0x130>
 800ee30:	21400017 	ldw	r5,0(r4)
 800ee34:	4a400104 	addi	r9,r9,4
 800ee38:	21000104 	addi	r4,r4,4
 800ee3c:	29ffffcc 	andi	r7,r5,65535
 800ee40:	38c7883a 	add	r3,r7,r3
 800ee44:	280ad43a 	srli	r5,r5,16
 800ee48:	180dd43a 	srai	r6,r3,16
 800ee4c:	19ffffcc 	andi	r7,r3,65535
 800ee50:	3147883a 	add	r3,r6,r5
 800ee54:	180a943a 	slli	r5,r3,16
 800ee58:	1807d43a 	srai	r3,r3,16
 800ee5c:	29ceb03a 	or	r7,r5,r7
 800ee60:	49ffff15 	stw	r7,-4(r9)
 800ee64:	233ff236 	bltu	r4,r12,800ee30 <__alt_data_end+0xfc00ee30>
 800ee68:	0206303a 	nor	r3,zero,r8
 800ee6c:	1b07883a 	add	r3,r3,r12
 800ee70:	1806d0ba 	srli	r3,r3,2
 800ee74:	18c00044 	addi	r3,r3,1
 800ee78:	18c7883a 	add	r3,r3,r3
 800ee7c:	18c7883a 	add	r3,r3,r3
 800ee80:	58cb883a 	add	r5,r11,r3
 800ee84:	28ffff04 	addi	r3,r5,-4
 800ee88:	3800041e 	bne	r7,zero,800ee9c <__mdiff+0x148>
 800ee8c:	18ffff04 	addi	r3,r3,-4
 800ee90:	19000017 	ldw	r4,0(r3)
 800ee94:	6b7fffc4 	addi	r13,r13,-1
 800ee98:	203ffc26 	beq	r4,zero,800ee8c <__alt_data_end+0xfc00ee8c>
 800ee9c:	13400415 	stw	r13,16(r2)
 800eea0:	dfc00417 	ldw	ra,16(sp)
 800eea4:	dcc00317 	ldw	r19,12(sp)
 800eea8:	dc800217 	ldw	r18,8(sp)
 800eeac:	dc400117 	ldw	r17,4(sp)
 800eeb0:	dc000017 	ldw	r16,0(sp)
 800eeb4:	dec00504 	addi	sp,sp,20
 800eeb8:	f800283a 	ret
 800eebc:	8005883a 	mov	r2,r16
 800eec0:	04400044 	movi	r17,1
 800eec4:	9021883a 	mov	r16,r18
 800eec8:	1025883a 	mov	r18,r2
 800eecc:	003fb006 	br	800ed90 <__alt_data_end+0xfc00ed90>
 800eed0:	9809883a 	mov	r4,r19
 800eed4:	000b883a 	mov	r5,zero
 800eed8:	800e3780 	call	800e378 <_Balloc>
 800eedc:	00c00044 	movi	r3,1
 800eee0:	10c00415 	stw	r3,16(r2)
 800eee4:	10000515 	stw	zero,20(r2)
 800eee8:	003fed06 	br	800eea0 <__alt_data_end+0xfc00eea0>

0800eeec <__ulp>:
 800eeec:	295ffc2c 	andhi	r5,r5,32752
 800eef0:	00bf3034 	movhi	r2,64704
 800eef4:	2887883a 	add	r3,r5,r2
 800eef8:	00c0020e 	bge	zero,r3,800ef04 <__ulp+0x18>
 800eefc:	0005883a 	mov	r2,zero
 800ef00:	f800283a 	ret
 800ef04:	00c7c83a 	sub	r3,zero,r3
 800ef08:	180bd53a 	srai	r5,r3,20
 800ef0c:	008004c4 	movi	r2,19
 800ef10:	11400a0e 	bge	r2,r5,800ef3c <__ulp+0x50>
 800ef14:	00800c84 	movi	r2,50
 800ef18:	0007883a 	mov	r3,zero
 800ef1c:	11400516 	blt	r2,r5,800ef34 <__ulp+0x48>
 800ef20:	00800cc4 	movi	r2,51
 800ef24:	114bc83a 	sub	r5,r2,r5
 800ef28:	00800044 	movi	r2,1
 800ef2c:	1144983a 	sll	r2,r2,r5
 800ef30:	f800283a 	ret
 800ef34:	00800044 	movi	r2,1
 800ef38:	f800283a 	ret
 800ef3c:	00800234 	movhi	r2,8
 800ef40:	1147d83a 	sra	r3,r2,r5
 800ef44:	0005883a 	mov	r2,zero
 800ef48:	f800283a 	ret

0800ef4c <__b2d>:
 800ef4c:	defffa04 	addi	sp,sp,-24
 800ef50:	dc000015 	stw	r16,0(sp)
 800ef54:	24000417 	ldw	r16,16(r4)
 800ef58:	dc400115 	stw	r17,4(sp)
 800ef5c:	24400504 	addi	r17,r4,20
 800ef60:	8421883a 	add	r16,r16,r16
 800ef64:	8421883a 	add	r16,r16,r16
 800ef68:	8c21883a 	add	r16,r17,r16
 800ef6c:	dc800215 	stw	r18,8(sp)
 800ef70:	84bfff17 	ldw	r18,-4(r16)
 800ef74:	dd000415 	stw	r20,16(sp)
 800ef78:	dcc00315 	stw	r19,12(sp)
 800ef7c:	9009883a 	mov	r4,r18
 800ef80:	2829883a 	mov	r20,r5
 800ef84:	dfc00515 	stw	ra,20(sp)
 800ef88:	800e6880 	call	800e688 <__hi0bits>
 800ef8c:	00c00804 	movi	r3,32
 800ef90:	1887c83a 	sub	r3,r3,r2
 800ef94:	a0c00015 	stw	r3,0(r20)
 800ef98:	00c00284 	movi	r3,10
 800ef9c:	84ffff04 	addi	r19,r16,-4
 800efa0:	18801216 	blt	r3,r2,800efec <__b2d+0xa0>
 800efa4:	014002c4 	movi	r5,11
 800efa8:	2889c83a 	sub	r4,r5,r2
 800efac:	9106d83a 	srl	r3,r18,r4
 800efb0:	18cffc34 	orhi	r3,r3,16368
 800efb4:	8cc0282e 	bgeu	r17,r19,800f058 <__b2d+0x10c>
 800efb8:	817ffe17 	ldw	r5,-8(r16)
 800efbc:	290ad83a 	srl	r5,r5,r4
 800efc0:	10800544 	addi	r2,r2,21
 800efc4:	9084983a 	sll	r2,r18,r2
 800efc8:	2884b03a 	or	r2,r5,r2
 800efcc:	dfc00517 	ldw	ra,20(sp)
 800efd0:	dd000417 	ldw	r20,16(sp)
 800efd4:	dcc00317 	ldw	r19,12(sp)
 800efd8:	dc800217 	ldw	r18,8(sp)
 800efdc:	dc400117 	ldw	r17,4(sp)
 800efe0:	dc000017 	ldw	r16,0(sp)
 800efe4:	dec00604 	addi	sp,sp,24
 800efe8:	f800283a 	ret
 800efec:	113ffd44 	addi	r4,r2,-11
 800eff0:	8cc00f2e 	bgeu	r17,r19,800f030 <__b2d+0xe4>
 800eff4:	81bffe04 	addi	r6,r16,-8
 800eff8:	817ffe17 	ldw	r5,-8(r16)
 800effc:	20001326 	beq	r4,zero,800f04c <__b2d+0x100>
 800f000:	00c00ac4 	movi	r3,43
 800f004:	1885c83a 	sub	r2,r3,r2
 800f008:	2886d83a 	srl	r3,r5,r2
 800f00c:	9124983a 	sll	r18,r18,r4
 800f010:	90e4b03a 	or	r18,r18,r3
 800f014:	90cffc34 	orhi	r3,r18,16368
 800f018:	8980112e 	bgeu	r17,r6,800f060 <__b2d+0x114>
 800f01c:	81bffd17 	ldw	r6,-12(r16)
 800f020:	308cd83a 	srl	r6,r6,r2
 800f024:	2904983a 	sll	r2,r5,r4
 800f028:	1184b03a 	or	r2,r2,r6
 800f02c:	003fe706 	br	800efcc <__alt_data_end+0xfc00efcc>
 800f030:	20000526 	beq	r4,zero,800f048 <__b2d+0xfc>
 800f034:	9124983a 	sll	r18,r18,r4
 800f038:	000d883a 	mov	r6,zero
 800f03c:	000b883a 	mov	r5,zero
 800f040:	90cffc34 	orhi	r3,r18,16368
 800f044:	003ff706 	br	800f024 <__alt_data_end+0xfc00f024>
 800f048:	000b883a 	mov	r5,zero
 800f04c:	90cffc34 	orhi	r3,r18,16368
 800f050:	2805883a 	mov	r2,r5
 800f054:	003fdd06 	br	800efcc <__alt_data_end+0xfc00efcc>
 800f058:	000b883a 	mov	r5,zero
 800f05c:	003fd806 	br	800efc0 <__alt_data_end+0xfc00efc0>
 800f060:	000d883a 	mov	r6,zero
 800f064:	003fef06 	br	800f024 <__alt_data_end+0xfc00f024>

0800f068 <__d2b>:
 800f068:	defff704 	addi	sp,sp,-36
 800f06c:	dc000215 	stw	r16,8(sp)
 800f070:	3021883a 	mov	r16,r6
 800f074:	dc400315 	stw	r17,12(sp)
 800f078:	8022907a 	slli	r17,r16,1
 800f07c:	dd400715 	stw	r21,28(sp)
 800f080:	282b883a 	mov	r21,r5
 800f084:	01400044 	movi	r5,1
 800f088:	dd000615 	stw	r20,24(sp)
 800f08c:	dcc00515 	stw	r19,20(sp)
 800f090:	dc800415 	stw	r18,16(sp)
 800f094:	dfc00815 	stw	ra,32(sp)
 800f098:	3829883a 	mov	r20,r7
 800f09c:	dc800917 	ldw	r18,36(sp)
 800f0a0:	8822d57a 	srli	r17,r17,21
 800f0a4:	800e3780 	call	800e378 <_Balloc>
 800f0a8:	1027883a 	mov	r19,r2
 800f0ac:	00800434 	movhi	r2,16
 800f0b0:	10bfffc4 	addi	r2,r2,-1
 800f0b4:	808c703a 	and	r6,r16,r2
 800f0b8:	88000126 	beq	r17,zero,800f0c0 <__d2b+0x58>
 800f0bc:	31800434 	orhi	r6,r6,16
 800f0c0:	d9800015 	stw	r6,0(sp)
 800f0c4:	a8001f26 	beq	r21,zero,800f144 <__d2b+0xdc>
 800f0c8:	d9000104 	addi	r4,sp,4
 800f0cc:	dd400115 	stw	r21,4(sp)
 800f0d0:	800e6f00 	call	800e6f0 <__lo0bits>
 800f0d4:	d8c00017 	ldw	r3,0(sp)
 800f0d8:	1000291e 	bne	r2,zero,800f180 <__d2b+0x118>
 800f0dc:	d9000117 	ldw	r4,4(sp)
 800f0e0:	99000515 	stw	r4,20(r19)
 800f0e4:	1820c03a 	cmpne	r16,r3,zero
 800f0e8:	84000044 	addi	r16,r16,1
 800f0ec:	98c00615 	stw	r3,24(r19)
 800f0f0:	9c000415 	stw	r16,16(r19)
 800f0f4:	88001b1e 	bne	r17,zero,800f164 <__d2b+0xfc>
 800f0f8:	800690ba 	slli	r3,r16,2
 800f0fc:	10bef384 	addi	r2,r2,-1074
 800f100:	a0800015 	stw	r2,0(r20)
 800f104:	98c5883a 	add	r2,r19,r3
 800f108:	11000417 	ldw	r4,16(r2)
 800f10c:	8020917a 	slli	r16,r16,5
 800f110:	800e6880 	call	800e688 <__hi0bits>
 800f114:	8085c83a 	sub	r2,r16,r2
 800f118:	90800015 	stw	r2,0(r18)
 800f11c:	9805883a 	mov	r2,r19
 800f120:	dfc00817 	ldw	ra,32(sp)
 800f124:	dd400717 	ldw	r21,28(sp)
 800f128:	dd000617 	ldw	r20,24(sp)
 800f12c:	dcc00517 	ldw	r19,20(sp)
 800f130:	dc800417 	ldw	r18,16(sp)
 800f134:	dc400317 	ldw	r17,12(sp)
 800f138:	dc000217 	ldw	r16,8(sp)
 800f13c:	dec00904 	addi	sp,sp,36
 800f140:	f800283a 	ret
 800f144:	d809883a 	mov	r4,sp
 800f148:	800e6f00 	call	800e6f0 <__lo0bits>
 800f14c:	d8c00017 	ldw	r3,0(sp)
 800f150:	04000044 	movi	r16,1
 800f154:	9c000415 	stw	r16,16(r19)
 800f158:	98c00515 	stw	r3,20(r19)
 800f15c:	10800804 	addi	r2,r2,32
 800f160:	883fe526 	beq	r17,zero,800f0f8 <__alt_data_end+0xfc00f0f8>
 800f164:	8c7ef344 	addi	r17,r17,-1075
 800f168:	88a3883a 	add	r17,r17,r2
 800f16c:	00c00d44 	movi	r3,53
 800f170:	a4400015 	stw	r17,0(r20)
 800f174:	1885c83a 	sub	r2,r3,r2
 800f178:	90800015 	stw	r2,0(r18)
 800f17c:	003fe706 	br	800f11c <__alt_data_end+0xfc00f11c>
 800f180:	01000804 	movi	r4,32
 800f184:	2089c83a 	sub	r4,r4,r2
 800f188:	1908983a 	sll	r4,r3,r4
 800f18c:	d9400117 	ldw	r5,4(sp)
 800f190:	1886d83a 	srl	r3,r3,r2
 800f194:	2148b03a 	or	r4,r4,r5
 800f198:	99000515 	stw	r4,20(r19)
 800f19c:	d8c00015 	stw	r3,0(sp)
 800f1a0:	003fd006 	br	800f0e4 <__alt_data_end+0xfc00f0e4>

0800f1a4 <__ratio>:
 800f1a4:	defff904 	addi	sp,sp,-28
 800f1a8:	dc400315 	stw	r17,12(sp)
 800f1ac:	2823883a 	mov	r17,r5
 800f1b0:	d9400104 	addi	r5,sp,4
 800f1b4:	dfc00615 	stw	ra,24(sp)
 800f1b8:	dcc00515 	stw	r19,20(sp)
 800f1bc:	dc800415 	stw	r18,16(sp)
 800f1c0:	2027883a 	mov	r19,r4
 800f1c4:	dc000215 	stw	r16,8(sp)
 800f1c8:	800ef4c0 	call	800ef4c <__b2d>
 800f1cc:	8809883a 	mov	r4,r17
 800f1d0:	d80b883a 	mov	r5,sp
 800f1d4:	1025883a 	mov	r18,r2
 800f1d8:	1821883a 	mov	r16,r3
 800f1dc:	800ef4c0 	call	800ef4c <__b2d>
 800f1e0:	8a400417 	ldw	r9,16(r17)
 800f1e4:	9a000417 	ldw	r8,16(r19)
 800f1e8:	100d883a 	mov	r6,r2
 800f1ec:	d8800017 	ldw	r2,0(sp)
 800f1f0:	4251c83a 	sub	r8,r8,r9
 800f1f4:	4012917a 	slli	r9,r8,5
 800f1f8:	da000117 	ldw	r8,4(sp)
 800f1fc:	4091c83a 	sub	r8,r8,r2
 800f200:	4251883a 	add	r8,r8,r9
 800f204:	02000d0e 	bge	zero,r8,800f23c <__ratio+0x98>
 800f208:	4010953a 	slli	r8,r8,20
 800f20c:	4421883a 	add	r16,r8,r16
 800f210:	9009883a 	mov	r4,r18
 800f214:	800b883a 	mov	r5,r16
 800f218:	180f883a 	mov	r7,r3
 800f21c:	8017ec40 	call	8017ec4 <__divdf3>
 800f220:	dfc00617 	ldw	ra,24(sp)
 800f224:	dcc00517 	ldw	r19,20(sp)
 800f228:	dc800417 	ldw	r18,16(sp)
 800f22c:	dc400317 	ldw	r17,12(sp)
 800f230:	dc000217 	ldw	r16,8(sp)
 800f234:	dec00704 	addi	sp,sp,28
 800f238:	f800283a 	ret
 800f23c:	4010953a 	slli	r8,r8,20
 800f240:	1a07c83a 	sub	r3,r3,r8
 800f244:	003ff206 	br	800f210 <__alt_data_end+0xfc00f210>

0800f248 <_mprec_log10>:
 800f248:	defffe04 	addi	sp,sp,-8
 800f24c:	dc000015 	stw	r16,0(sp)
 800f250:	dfc00115 	stw	ra,4(sp)
 800f254:	008005c4 	movi	r2,23
 800f258:	2021883a 	mov	r16,r4
 800f25c:	11000d0e 	bge	r2,r4,800f294 <_mprec_log10+0x4c>
 800f260:	0005883a 	mov	r2,zero
 800f264:	00cffc34 	movhi	r3,16368
 800f268:	843fffc4 	addi	r16,r16,-1
 800f26c:	1009883a 	mov	r4,r2
 800f270:	180b883a 	mov	r5,r3
 800f274:	000d883a 	mov	r6,zero
 800f278:	01d00934 	movhi	r7,16420
 800f27c:	8018a880 	call	8018a88 <__muldf3>
 800f280:	803ff91e 	bne	r16,zero,800f268 <__alt_data_end+0xfc00f268>
 800f284:	dfc00117 	ldw	ra,4(sp)
 800f288:	dc000017 	ldw	r16,0(sp)
 800f28c:	dec00204 	addi	sp,sp,8
 800f290:	f800283a 	ret
 800f294:	202090fa 	slli	r16,r4,3
 800f298:	008200b4 	movhi	r2,2050
 800f29c:	10b8be04 	addi	r2,r2,-7432
 800f2a0:	1421883a 	add	r16,r2,r16
 800f2a4:	80800017 	ldw	r2,0(r16)
 800f2a8:	80c00117 	ldw	r3,4(r16)
 800f2ac:	dfc00117 	ldw	ra,4(sp)
 800f2b0:	dc000017 	ldw	r16,0(sp)
 800f2b4:	dec00204 	addi	sp,sp,8
 800f2b8:	f800283a 	ret

0800f2bc <__copybits>:
 800f2bc:	297fffc4 	addi	r5,r5,-1
 800f2c0:	280fd17a 	srai	r7,r5,5
 800f2c4:	30c00417 	ldw	r3,16(r6)
 800f2c8:	30800504 	addi	r2,r6,20
 800f2cc:	39c00044 	addi	r7,r7,1
 800f2d0:	18c7883a 	add	r3,r3,r3
 800f2d4:	39cf883a 	add	r7,r7,r7
 800f2d8:	18c7883a 	add	r3,r3,r3
 800f2dc:	39cf883a 	add	r7,r7,r7
 800f2e0:	10c7883a 	add	r3,r2,r3
 800f2e4:	21cf883a 	add	r7,r4,r7
 800f2e8:	10c00d2e 	bgeu	r2,r3,800f320 <__copybits+0x64>
 800f2ec:	200b883a 	mov	r5,r4
 800f2f0:	12000017 	ldw	r8,0(r2)
 800f2f4:	29400104 	addi	r5,r5,4
 800f2f8:	10800104 	addi	r2,r2,4
 800f2fc:	2a3fff15 	stw	r8,-4(r5)
 800f300:	10fffb36 	bltu	r2,r3,800f2f0 <__alt_data_end+0xfc00f2f0>
 800f304:	1985c83a 	sub	r2,r3,r6
 800f308:	10bffac4 	addi	r2,r2,-21
 800f30c:	1004d0ba 	srli	r2,r2,2
 800f310:	10800044 	addi	r2,r2,1
 800f314:	1085883a 	add	r2,r2,r2
 800f318:	1085883a 	add	r2,r2,r2
 800f31c:	2089883a 	add	r4,r4,r2
 800f320:	21c0032e 	bgeu	r4,r7,800f330 <__copybits+0x74>
 800f324:	20000015 	stw	zero,0(r4)
 800f328:	21000104 	addi	r4,r4,4
 800f32c:	21fffd36 	bltu	r4,r7,800f324 <__alt_data_end+0xfc00f324>
 800f330:	f800283a 	ret

0800f334 <__any_on>:
 800f334:	20c00417 	ldw	r3,16(r4)
 800f338:	2805d17a 	srai	r2,r5,5
 800f33c:	21000504 	addi	r4,r4,20
 800f340:	18800d0e 	bge	r3,r2,800f378 <__any_on+0x44>
 800f344:	18c7883a 	add	r3,r3,r3
 800f348:	18c7883a 	add	r3,r3,r3
 800f34c:	20c7883a 	add	r3,r4,r3
 800f350:	20c0192e 	bgeu	r4,r3,800f3b8 <__any_on+0x84>
 800f354:	18bfff17 	ldw	r2,-4(r3)
 800f358:	18ffff04 	addi	r3,r3,-4
 800f35c:	1000041e 	bne	r2,zero,800f370 <__any_on+0x3c>
 800f360:	20c0142e 	bgeu	r4,r3,800f3b4 <__any_on+0x80>
 800f364:	18ffff04 	addi	r3,r3,-4
 800f368:	19400017 	ldw	r5,0(r3)
 800f36c:	283ffc26 	beq	r5,zero,800f360 <__alt_data_end+0xfc00f360>
 800f370:	00800044 	movi	r2,1
 800f374:	f800283a 	ret
 800f378:	10c00a0e 	bge	r2,r3,800f3a4 <__any_on+0x70>
 800f37c:	1085883a 	add	r2,r2,r2
 800f380:	1085883a 	add	r2,r2,r2
 800f384:	294007cc 	andi	r5,r5,31
 800f388:	2087883a 	add	r3,r4,r2
 800f38c:	283ff026 	beq	r5,zero,800f350 <__alt_data_end+0xfc00f350>
 800f390:	19800017 	ldw	r6,0(r3)
 800f394:	3144d83a 	srl	r2,r6,r5
 800f398:	114a983a 	sll	r5,r2,r5
 800f39c:	29bff41e 	bne	r5,r6,800f370 <__alt_data_end+0xfc00f370>
 800f3a0:	003feb06 	br	800f350 <__alt_data_end+0xfc00f350>
 800f3a4:	1085883a 	add	r2,r2,r2
 800f3a8:	1085883a 	add	r2,r2,r2
 800f3ac:	2087883a 	add	r3,r4,r2
 800f3b0:	003fe706 	br	800f350 <__alt_data_end+0xfc00f350>
 800f3b4:	f800283a 	ret
 800f3b8:	0005883a 	mov	r2,zero
 800f3bc:	f800283a 	ret

0800f3c0 <_putc_r>:
 800f3c0:	defffc04 	addi	sp,sp,-16
 800f3c4:	dc000215 	stw	r16,8(sp)
 800f3c8:	dfc00315 	stw	ra,12(sp)
 800f3cc:	2021883a 	mov	r16,r4
 800f3d0:	20000226 	beq	r4,zero,800f3dc <_putc_r+0x1c>
 800f3d4:	20800e17 	ldw	r2,56(r4)
 800f3d8:	10001b26 	beq	r2,zero,800f448 <_putc_r+0x88>
 800f3dc:	30800217 	ldw	r2,8(r6)
 800f3e0:	10bfffc4 	addi	r2,r2,-1
 800f3e4:	30800215 	stw	r2,8(r6)
 800f3e8:	10000a16 	blt	r2,zero,800f414 <_putc_r+0x54>
 800f3ec:	30800017 	ldw	r2,0(r6)
 800f3f0:	11400005 	stb	r5,0(r2)
 800f3f4:	30800017 	ldw	r2,0(r6)
 800f3f8:	10c00044 	addi	r3,r2,1
 800f3fc:	30c00015 	stw	r3,0(r6)
 800f400:	10800003 	ldbu	r2,0(r2)
 800f404:	dfc00317 	ldw	ra,12(sp)
 800f408:	dc000217 	ldw	r16,8(sp)
 800f40c:	dec00404 	addi	sp,sp,16
 800f410:	f800283a 	ret
 800f414:	30c00617 	ldw	r3,24(r6)
 800f418:	10c00616 	blt	r2,r3,800f434 <_putc_r+0x74>
 800f41c:	30800017 	ldw	r2,0(r6)
 800f420:	00c00284 	movi	r3,10
 800f424:	11400005 	stb	r5,0(r2)
 800f428:	30800017 	ldw	r2,0(r6)
 800f42c:	11400003 	ldbu	r5,0(r2)
 800f430:	28fff11e 	bne	r5,r3,800f3f8 <__alt_data_end+0xfc00f3f8>
 800f434:	8009883a 	mov	r4,r16
 800f438:	dfc00317 	ldw	ra,12(sp)
 800f43c:	dc000217 	ldw	r16,8(sp)
 800f440:	dec00404 	addi	sp,sp,16
 800f444:	8014ec01 	jmpi	8014ec0 <__swbuf_r>
 800f448:	d9400015 	stw	r5,0(sp)
 800f44c:	d9800115 	stw	r6,4(sp)
 800f450:	800cd740 	call	800cd74 <__sinit>
 800f454:	d9800117 	ldw	r6,4(sp)
 800f458:	d9400017 	ldw	r5,0(sp)
 800f45c:	003fdf06 	br	800f3dc <__alt_data_end+0xfc00f3dc>

0800f460 <putc>:
 800f460:	defffc04 	addi	sp,sp,-16
 800f464:	dc400115 	stw	r17,4(sp)
 800f468:	044200b4 	movhi	r17,2050
 800f46c:	8c409004 	addi	r17,r17,576
 800f470:	dc800215 	stw	r18,8(sp)
 800f474:	2025883a 	mov	r18,r4
 800f478:	89000017 	ldw	r4,0(r17)
 800f47c:	dc000015 	stw	r16,0(sp)
 800f480:	dfc00315 	stw	ra,12(sp)
 800f484:	2821883a 	mov	r16,r5
 800f488:	20000226 	beq	r4,zero,800f494 <putc+0x34>
 800f48c:	20c00e17 	ldw	r3,56(r4)
 800f490:	18001a26 	beq	r3,zero,800f4fc <putc+0x9c>
 800f494:	80800217 	ldw	r2,8(r16)
 800f498:	10bfffc4 	addi	r2,r2,-1
 800f49c:	80800215 	stw	r2,8(r16)
 800f4a0:	10000c16 	blt	r2,zero,800f4d4 <putc+0x74>
 800f4a4:	80800017 	ldw	r2,0(r16)
 800f4a8:	14800005 	stb	r18,0(r2)
 800f4ac:	80800017 	ldw	r2,0(r16)
 800f4b0:	10c00044 	addi	r3,r2,1
 800f4b4:	80c00015 	stw	r3,0(r16)
 800f4b8:	10800003 	ldbu	r2,0(r2)
 800f4bc:	dfc00317 	ldw	ra,12(sp)
 800f4c0:	dc800217 	ldw	r18,8(sp)
 800f4c4:	dc400117 	ldw	r17,4(sp)
 800f4c8:	dc000017 	ldw	r16,0(sp)
 800f4cc:	dec00404 	addi	sp,sp,16
 800f4d0:	f800283a 	ret
 800f4d4:	80c00617 	ldw	r3,24(r16)
 800f4d8:	10c00a16 	blt	r2,r3,800f504 <putc+0xa4>
 800f4dc:	80800017 	ldw	r2,0(r16)
 800f4e0:	00c00284 	movi	r3,10
 800f4e4:	14800005 	stb	r18,0(r2)
 800f4e8:	80800017 	ldw	r2,0(r16)
 800f4ec:	11400003 	ldbu	r5,0(r2)
 800f4f0:	28ffef1e 	bne	r5,r3,800f4b0 <__alt_data_end+0xfc00f4b0>
 800f4f4:	89000017 	ldw	r4,0(r17)
 800f4f8:	00000406 	br	800f50c <putc+0xac>
 800f4fc:	800cd740 	call	800cd74 <__sinit>
 800f500:	003fe406 	br	800f494 <__alt_data_end+0xfc00f494>
 800f504:	89000017 	ldw	r4,0(r17)
 800f508:	900b883a 	mov	r5,r18
 800f50c:	800d883a 	mov	r6,r16
 800f510:	dfc00317 	ldw	ra,12(sp)
 800f514:	dc800217 	ldw	r18,8(sp)
 800f518:	dc400117 	ldw	r17,4(sp)
 800f51c:	dc000017 	ldw	r16,0(sp)
 800f520:	dec00404 	addi	sp,sp,16
 800f524:	8014ec01 	jmpi	8014ec0 <__swbuf_r>

0800f528 <_realloc_r>:
 800f528:	defff604 	addi	sp,sp,-40
 800f52c:	dcc00315 	stw	r19,12(sp)
 800f530:	dc400115 	stw	r17,4(sp)
 800f534:	dfc00915 	stw	ra,36(sp)
 800f538:	df000815 	stw	fp,32(sp)
 800f53c:	ddc00715 	stw	r23,28(sp)
 800f540:	dd800615 	stw	r22,24(sp)
 800f544:	dd400515 	stw	r21,20(sp)
 800f548:	dd000415 	stw	r20,16(sp)
 800f54c:	dc800215 	stw	r18,8(sp)
 800f550:	dc000015 	stw	r16,0(sp)
 800f554:	2827883a 	mov	r19,r5
 800f558:	3023883a 	mov	r17,r6
 800f55c:	2800bf26 	beq	r5,zero,800f85c <_realloc_r+0x334>
 800f560:	2025883a 	mov	r18,r4
 800f564:	801a8a40 	call	801a8a4 <__malloc_lock>
 800f568:	98ffff17 	ldw	r3,-4(r19)
 800f56c:	01bfff04 	movi	r6,-4
 800f570:	890002c4 	addi	r4,r17,11
 800f574:	01c00584 	movi	r7,22
 800f578:	9d7ffe04 	addi	r21,r19,-8
 800f57c:	19a0703a 	and	r16,r3,r6
 800f580:	39003f2e 	bgeu	r7,r4,800f680 <_realloc_r+0x158>
 800f584:	053ffe04 	movi	r20,-8
 800f588:	2528703a 	and	r20,r4,r20
 800f58c:	a00f883a 	mov	r7,r20
 800f590:	a0008216 	blt	r20,zero,800f79c <_realloc_r+0x274>
 800f594:	a4408136 	bltu	r20,r17,800f79c <_realloc_r+0x274>
 800f598:	81c03c0e 	bge	r16,r7,800f68c <_realloc_r+0x164>
 800f59c:	070200b4 	movhi	fp,2050
 800f5a0:	e73a7c04 	addi	fp,fp,-5648
 800f5a4:	e1000217 	ldw	r4,8(fp)
 800f5a8:	ac05883a 	add	r2,r21,r16
 800f5ac:	2080bf26 	beq	r4,r2,800f8ac <_realloc_r+0x384>
 800f5b0:	11000117 	ldw	r4,4(r2)
 800f5b4:	023fff84 	movi	r8,-2
 800f5b8:	2210703a 	and	r8,r4,r8
 800f5bc:	1211883a 	add	r8,r2,r8
 800f5c0:	41400117 	ldw	r5,4(r8)
 800f5c4:	2940004c 	andi	r5,r5,1
 800f5c8:	28004a1e 	bne	r5,zero,800f6f4 <_realloc_r+0x1cc>
 800f5cc:	017fff04 	movi	r5,-4
 800f5d0:	2148703a 	and	r4,r4,r5
 800f5d4:	2409883a 	add	r4,r4,r16
 800f5d8:	21c0ad0e 	bge	r4,r7,800f890 <_realloc_r+0x368>
 800f5dc:	18c0004c 	andi	r3,r3,1
 800f5e0:	18007f1e 	bne	r3,zero,800f7e0 <_realloc_r+0x2b8>
 800f5e4:	9dfffe17 	ldw	r23,-8(r19)
 800f5e8:	adefc83a 	sub	r23,r21,r23
 800f5ec:	bd800117 	ldw	r22,4(r23)
 800f5f0:	b14a703a 	and	r5,r22,r5
 800f5f4:	216d883a 	add	r22,r4,r5
 800f5f8:	b1c04516 	blt	r22,r7,800f710 <_realloc_r+0x1e8>
 800f5fc:	10c00317 	ldw	r3,12(r2)
 800f600:	10800217 	ldw	r2,8(r2)
 800f604:	81bfff04 	addi	r6,r16,-4
 800f608:	bc400204 	addi	r17,r23,8
 800f60c:	10c00315 	stw	r3,12(r2)
 800f610:	18800215 	stw	r2,8(r3)
 800f614:	b9400217 	ldw	r5,8(r23)
 800f618:	b8c00317 	ldw	r3,12(r23)
 800f61c:	00800904 	movi	r2,36
 800f620:	28c00315 	stw	r3,12(r5)
 800f624:	19400215 	stw	r5,8(r3)
 800f628:	1180ef36 	bltu	r2,r6,800f9e8 <_realloc_r+0x4c0>
 800f62c:	008004c4 	movi	r2,19
 800f630:	1180da2e 	bgeu	r2,r6,800f99c <_realloc_r+0x474>
 800f634:	98800017 	ldw	r2,0(r19)
 800f638:	b8800215 	stw	r2,8(r23)
 800f63c:	98800117 	ldw	r2,4(r19)
 800f640:	b8800315 	stw	r2,12(r23)
 800f644:	008006c4 	movi	r2,27
 800f648:	1180fc2e 	bgeu	r2,r6,800fa3c <_realloc_r+0x514>
 800f64c:	98800217 	ldw	r2,8(r19)
 800f650:	b8800415 	stw	r2,16(r23)
 800f654:	98800317 	ldw	r2,12(r19)
 800f658:	b8800515 	stw	r2,20(r23)
 800f65c:	00800904 	movi	r2,36
 800f660:	3080421e 	bne	r6,r2,800f76c <_realloc_r+0x244>
 800f664:	98800417 	ldw	r2,16(r19)
 800f668:	9cc00604 	addi	r19,r19,24
 800f66c:	b8c00804 	addi	r3,r23,32
 800f670:	b8800615 	stw	r2,24(r23)
 800f674:	98bfff17 	ldw	r2,-4(r19)
 800f678:	b8800715 	stw	r2,28(r23)
 800f67c:	00003d06 	br	800f774 <_realloc_r+0x24c>
 800f680:	01c00404 	movi	r7,16
 800f684:	3829883a 	mov	r20,r7
 800f688:	003fc206 	br	800f594 <__alt_data_end+0xfc00f594>
 800f68c:	9823883a 	mov	r17,r19
 800f690:	850fc83a 	sub	r7,r16,r20
 800f694:	008003c4 	movi	r2,15
 800f698:	18c0004c 	andi	r3,r3,1
 800f69c:	11c04336 	bltu	r2,r7,800f7ac <_realloc_r+0x284>
 800f6a0:	1c06b03a 	or	r3,r3,r16
 800f6a4:	a8c00115 	stw	r3,4(r21)
 800f6a8:	ac21883a 	add	r16,r21,r16
 800f6ac:	80c00117 	ldw	r3,4(r16)
 800f6b0:	18c00054 	ori	r3,r3,1
 800f6b4:	80c00115 	stw	r3,4(r16)
 800f6b8:	9009883a 	mov	r4,r18
 800f6bc:	801a8c40 	call	801a8c4 <__malloc_unlock>
 800f6c0:	8805883a 	mov	r2,r17
 800f6c4:	dfc00917 	ldw	ra,36(sp)
 800f6c8:	df000817 	ldw	fp,32(sp)
 800f6cc:	ddc00717 	ldw	r23,28(sp)
 800f6d0:	dd800617 	ldw	r22,24(sp)
 800f6d4:	dd400517 	ldw	r21,20(sp)
 800f6d8:	dd000417 	ldw	r20,16(sp)
 800f6dc:	dcc00317 	ldw	r19,12(sp)
 800f6e0:	dc800217 	ldw	r18,8(sp)
 800f6e4:	dc400117 	ldw	r17,4(sp)
 800f6e8:	dc000017 	ldw	r16,0(sp)
 800f6ec:	dec00a04 	addi	sp,sp,40
 800f6f0:	f800283a 	ret
 800f6f4:	18c0004c 	andi	r3,r3,1
 800f6f8:	1800391e 	bne	r3,zero,800f7e0 <_realloc_r+0x2b8>
 800f6fc:	9dfffe17 	ldw	r23,-8(r19)
 800f700:	00bfff04 	movi	r2,-4
 800f704:	adefc83a 	sub	r23,r21,r23
 800f708:	b9400117 	ldw	r5,4(r23)
 800f70c:	288a703a 	and	r5,r5,r2
 800f710:	2c2d883a 	add	r22,r5,r16
 800f714:	b1c03216 	blt	r22,r7,800f7e0 <_realloc_r+0x2b8>
 800f718:	b8800317 	ldw	r2,12(r23)
 800f71c:	b8c00217 	ldw	r3,8(r23)
 800f720:	81bfff04 	addi	r6,r16,-4
 800f724:	01000904 	movi	r4,36
 800f728:	18800315 	stw	r2,12(r3)
 800f72c:	10c00215 	stw	r3,8(r2)
 800f730:	bc400204 	addi	r17,r23,8
 800f734:	2180ac36 	bltu	r4,r6,800f9e8 <_realloc_r+0x4c0>
 800f738:	008004c4 	movi	r2,19
 800f73c:	1180972e 	bgeu	r2,r6,800f99c <_realloc_r+0x474>
 800f740:	98800017 	ldw	r2,0(r19)
 800f744:	b8800215 	stw	r2,8(r23)
 800f748:	98800117 	ldw	r2,4(r19)
 800f74c:	b8800315 	stw	r2,12(r23)
 800f750:	008006c4 	movi	r2,27
 800f754:	1180b92e 	bgeu	r2,r6,800fa3c <_realloc_r+0x514>
 800f758:	98800217 	ldw	r2,8(r19)
 800f75c:	b8800415 	stw	r2,16(r23)
 800f760:	98800317 	ldw	r2,12(r19)
 800f764:	b8800515 	stw	r2,20(r23)
 800f768:	313fbe26 	beq	r6,r4,800f664 <__alt_data_end+0xfc00f664>
 800f76c:	b8c00604 	addi	r3,r23,24
 800f770:	9cc00404 	addi	r19,r19,16
 800f774:	98800017 	ldw	r2,0(r19)
 800f778:	b021883a 	mov	r16,r22
 800f77c:	b82b883a 	mov	r21,r23
 800f780:	18800015 	stw	r2,0(r3)
 800f784:	98800117 	ldw	r2,4(r19)
 800f788:	18800115 	stw	r2,4(r3)
 800f78c:	98800217 	ldw	r2,8(r19)
 800f790:	18800215 	stw	r2,8(r3)
 800f794:	b8c00117 	ldw	r3,4(r23)
 800f798:	003fbd06 	br	800f690 <__alt_data_end+0xfc00f690>
 800f79c:	00800304 	movi	r2,12
 800f7a0:	90800015 	stw	r2,0(r18)
 800f7a4:	0005883a 	mov	r2,zero
 800f7a8:	003fc606 	br	800f6c4 <__alt_data_end+0xfc00f6c4>
 800f7ac:	1d06b03a 	or	r3,r3,r20
 800f7b0:	ad0b883a 	add	r5,r21,r20
 800f7b4:	a8c00115 	stw	r3,4(r21)
 800f7b8:	38800054 	ori	r2,r7,1
 800f7bc:	28800115 	stw	r2,4(r5)
 800f7c0:	29cf883a 	add	r7,r5,r7
 800f7c4:	38800117 	ldw	r2,4(r7)
 800f7c8:	9009883a 	mov	r4,r18
 800f7cc:	29400204 	addi	r5,r5,8
 800f7d0:	10800054 	ori	r2,r2,1
 800f7d4:	38800115 	stw	r2,4(r7)
 800f7d8:	800d1780 	call	800d178 <_free_r>
 800f7dc:	003fb606 	br	800f6b8 <__alt_data_end+0xfc00f6b8>
 800f7e0:	880b883a 	mov	r5,r17
 800f7e4:	9009883a 	mov	r4,r18
 800f7e8:	800390c0 	call	800390c <_malloc_r>
 800f7ec:	1023883a 	mov	r17,r2
 800f7f0:	1000aa26 	beq	r2,zero,800fa9c <_realloc_r+0x574>
 800f7f4:	98ffff17 	ldw	r3,-4(r19)
 800f7f8:	113ffe04 	addi	r4,r2,-8
 800f7fc:	00bfff84 	movi	r2,-2
 800f800:	1884703a 	and	r2,r3,r2
 800f804:	a885883a 	add	r2,r21,r2
 800f808:	20808626 	beq	r4,r2,800fa24 <_realloc_r+0x4fc>
 800f80c:	81bfff04 	addi	r6,r16,-4
 800f810:	00800904 	movi	r2,36
 800f814:	11807036 	bltu	r2,r6,800f9d8 <_realloc_r+0x4b0>
 800f818:	00c004c4 	movi	r3,19
 800f81c:	19805636 	bltu	r3,r6,800f978 <_realloc_r+0x450>
 800f820:	8805883a 	mov	r2,r17
 800f824:	9807883a 	mov	r3,r19
 800f828:	19000017 	ldw	r4,0(r3)
 800f82c:	11000015 	stw	r4,0(r2)
 800f830:	19000117 	ldw	r4,4(r3)
 800f834:	11000115 	stw	r4,4(r2)
 800f838:	18c00217 	ldw	r3,8(r3)
 800f83c:	10c00215 	stw	r3,8(r2)
 800f840:	980b883a 	mov	r5,r19
 800f844:	9009883a 	mov	r4,r18
 800f848:	800d1780 	call	800d178 <_free_r>
 800f84c:	9009883a 	mov	r4,r18
 800f850:	801a8c40 	call	801a8c4 <__malloc_unlock>
 800f854:	8805883a 	mov	r2,r17
 800f858:	003f9a06 	br	800f6c4 <__alt_data_end+0xfc00f6c4>
 800f85c:	300b883a 	mov	r5,r6
 800f860:	dfc00917 	ldw	ra,36(sp)
 800f864:	df000817 	ldw	fp,32(sp)
 800f868:	ddc00717 	ldw	r23,28(sp)
 800f86c:	dd800617 	ldw	r22,24(sp)
 800f870:	dd400517 	ldw	r21,20(sp)
 800f874:	dd000417 	ldw	r20,16(sp)
 800f878:	dcc00317 	ldw	r19,12(sp)
 800f87c:	dc800217 	ldw	r18,8(sp)
 800f880:	dc400117 	ldw	r17,4(sp)
 800f884:	dc000017 	ldw	r16,0(sp)
 800f888:	dec00a04 	addi	sp,sp,40
 800f88c:	800390c1 	jmpi	800390c <_malloc_r>
 800f890:	11400317 	ldw	r5,12(r2)
 800f894:	10800217 	ldw	r2,8(r2)
 800f898:	9823883a 	mov	r17,r19
 800f89c:	2021883a 	mov	r16,r4
 800f8a0:	11400315 	stw	r5,12(r2)
 800f8a4:	28800215 	stw	r2,8(r5)
 800f8a8:	003f7906 	br	800f690 <__alt_data_end+0xfc00f690>
 800f8ac:	21000117 	ldw	r4,4(r4)
 800f8b0:	00bfff04 	movi	r2,-4
 800f8b4:	a1800404 	addi	r6,r20,16
 800f8b8:	2088703a 	and	r4,r4,r2
 800f8bc:	2409883a 	add	r4,r4,r16
 800f8c0:	2180380e 	bge	r4,r6,800f9a4 <_realloc_r+0x47c>
 800f8c4:	18c0004c 	andi	r3,r3,1
 800f8c8:	183fc51e 	bne	r3,zero,800f7e0 <__alt_data_end+0xfc00f7e0>
 800f8cc:	9dfffe17 	ldw	r23,-8(r19)
 800f8d0:	adefc83a 	sub	r23,r21,r23
 800f8d4:	b9400117 	ldw	r5,4(r23)
 800f8d8:	288a703a 	and	r5,r5,r2
 800f8dc:	216d883a 	add	r22,r4,r5
 800f8e0:	b1bf8b16 	blt	r22,r6,800f710 <__alt_data_end+0xfc00f710>
 800f8e4:	b8800317 	ldw	r2,12(r23)
 800f8e8:	b8c00217 	ldw	r3,8(r23)
 800f8ec:	81bfff04 	addi	r6,r16,-4
 800f8f0:	01000904 	movi	r4,36
 800f8f4:	18800315 	stw	r2,12(r3)
 800f8f8:	10c00215 	stw	r3,8(r2)
 800f8fc:	bc400204 	addi	r17,r23,8
 800f900:	21805a36 	bltu	r4,r6,800fa6c <_realloc_r+0x544>
 800f904:	008004c4 	movi	r2,19
 800f908:	1180562e 	bgeu	r2,r6,800fa64 <_realloc_r+0x53c>
 800f90c:	98800017 	ldw	r2,0(r19)
 800f910:	b8800215 	stw	r2,8(r23)
 800f914:	98800117 	ldw	r2,4(r19)
 800f918:	b8800315 	stw	r2,12(r23)
 800f91c:	008006c4 	movi	r2,27
 800f920:	11805636 	bltu	r2,r6,800fa7c <_realloc_r+0x554>
 800f924:	b8800404 	addi	r2,r23,16
 800f928:	9cc00204 	addi	r19,r19,8
 800f92c:	98c00017 	ldw	r3,0(r19)
 800f930:	10c00015 	stw	r3,0(r2)
 800f934:	98c00117 	ldw	r3,4(r19)
 800f938:	10c00115 	stw	r3,4(r2)
 800f93c:	98c00217 	ldw	r3,8(r19)
 800f940:	10c00215 	stw	r3,8(r2)
 800f944:	bd07883a 	add	r3,r23,r20
 800f948:	b505c83a 	sub	r2,r22,r20
 800f94c:	e0c00215 	stw	r3,8(fp)
 800f950:	10800054 	ori	r2,r2,1
 800f954:	18800115 	stw	r2,4(r3)
 800f958:	b8800117 	ldw	r2,4(r23)
 800f95c:	9009883a 	mov	r4,r18
 800f960:	1080004c 	andi	r2,r2,1
 800f964:	a0a8b03a 	or	r20,r20,r2
 800f968:	bd000115 	stw	r20,4(r23)
 800f96c:	801a8c40 	call	801a8c4 <__malloc_unlock>
 800f970:	8805883a 	mov	r2,r17
 800f974:	003f5306 	br	800f6c4 <__alt_data_end+0xfc00f6c4>
 800f978:	98c00017 	ldw	r3,0(r19)
 800f97c:	88c00015 	stw	r3,0(r17)
 800f980:	98c00117 	ldw	r3,4(r19)
 800f984:	88c00115 	stw	r3,4(r17)
 800f988:	00c006c4 	movi	r3,27
 800f98c:	19801d36 	bltu	r3,r6,800fa04 <_realloc_r+0x4dc>
 800f990:	88800204 	addi	r2,r17,8
 800f994:	98c00204 	addi	r3,r19,8
 800f998:	003fa306 	br	800f828 <__alt_data_end+0xfc00f828>
 800f99c:	8807883a 	mov	r3,r17
 800f9a0:	003f7406 	br	800f774 <__alt_data_end+0xfc00f774>
 800f9a4:	ad2b883a 	add	r21,r21,r20
 800f9a8:	2505c83a 	sub	r2,r4,r20
 800f9ac:	e5400215 	stw	r21,8(fp)
 800f9b0:	10800054 	ori	r2,r2,1
 800f9b4:	a8800115 	stw	r2,4(r21)
 800f9b8:	98bfff17 	ldw	r2,-4(r19)
 800f9bc:	9009883a 	mov	r4,r18
 800f9c0:	1080004c 	andi	r2,r2,1
 800f9c4:	a0a8b03a 	or	r20,r20,r2
 800f9c8:	9d3fff15 	stw	r20,-4(r19)
 800f9cc:	801a8c40 	call	801a8c4 <__malloc_unlock>
 800f9d0:	9805883a 	mov	r2,r19
 800f9d4:	003f3b06 	br	800f6c4 <__alt_data_end+0xfc00f6c4>
 800f9d8:	8809883a 	mov	r4,r17
 800f9dc:	980b883a 	mov	r5,r19
 800f9e0:	800e21c0 	call	800e21c <memmove>
 800f9e4:	003f9606 	br	800f840 <__alt_data_end+0xfc00f840>
 800f9e8:	8809883a 	mov	r4,r17
 800f9ec:	980b883a 	mov	r5,r19
 800f9f0:	800e21c0 	call	800e21c <memmove>
 800f9f4:	b8c00117 	ldw	r3,4(r23)
 800f9f8:	b021883a 	mov	r16,r22
 800f9fc:	b82b883a 	mov	r21,r23
 800fa00:	003f2306 	br	800f690 <__alt_data_end+0xfc00f690>
 800fa04:	98c00217 	ldw	r3,8(r19)
 800fa08:	88c00215 	stw	r3,8(r17)
 800fa0c:	98c00317 	ldw	r3,12(r19)
 800fa10:	88c00315 	stw	r3,12(r17)
 800fa14:	30800c26 	beq	r6,r2,800fa48 <_realloc_r+0x520>
 800fa18:	88800404 	addi	r2,r17,16
 800fa1c:	98c00404 	addi	r3,r19,16
 800fa20:	003f8106 	br	800f828 <__alt_data_end+0xfc00f828>
 800fa24:	893fff17 	ldw	r4,-4(r17)
 800fa28:	00bfff04 	movi	r2,-4
 800fa2c:	9823883a 	mov	r17,r19
 800fa30:	2084703a 	and	r2,r4,r2
 800fa34:	80a1883a 	add	r16,r16,r2
 800fa38:	003f1506 	br	800f690 <__alt_data_end+0xfc00f690>
 800fa3c:	b8c00404 	addi	r3,r23,16
 800fa40:	9cc00204 	addi	r19,r19,8
 800fa44:	003f4b06 	br	800f774 <__alt_data_end+0xfc00f774>
 800fa48:	99000417 	ldw	r4,16(r19)
 800fa4c:	88800604 	addi	r2,r17,24
 800fa50:	98c00604 	addi	r3,r19,24
 800fa54:	89000415 	stw	r4,16(r17)
 800fa58:	99000517 	ldw	r4,20(r19)
 800fa5c:	89000515 	stw	r4,20(r17)
 800fa60:	003f7106 	br	800f828 <__alt_data_end+0xfc00f828>
 800fa64:	8805883a 	mov	r2,r17
 800fa68:	003fb006 	br	800f92c <__alt_data_end+0xfc00f92c>
 800fa6c:	8809883a 	mov	r4,r17
 800fa70:	980b883a 	mov	r5,r19
 800fa74:	800e21c0 	call	800e21c <memmove>
 800fa78:	003fb206 	br	800f944 <__alt_data_end+0xfc00f944>
 800fa7c:	98800217 	ldw	r2,8(r19)
 800fa80:	b8800415 	stw	r2,16(r23)
 800fa84:	98800317 	ldw	r2,12(r19)
 800fa88:	b8800515 	stw	r2,20(r23)
 800fa8c:	31000726 	beq	r6,r4,800faac <_realloc_r+0x584>
 800fa90:	b8800604 	addi	r2,r23,24
 800fa94:	9cc00404 	addi	r19,r19,16
 800fa98:	003fa406 	br	800f92c <__alt_data_end+0xfc00f92c>
 800fa9c:	9009883a 	mov	r4,r18
 800faa0:	801a8c40 	call	801a8c4 <__malloc_unlock>
 800faa4:	0005883a 	mov	r2,zero
 800faa8:	003f0606 	br	800f6c4 <__alt_data_end+0xfc00f6c4>
 800faac:	98c00417 	ldw	r3,16(r19)
 800fab0:	9cc00604 	addi	r19,r19,24
 800fab4:	b8800804 	addi	r2,r23,32
 800fab8:	b8c00615 	stw	r3,24(r23)
 800fabc:	98ffff17 	ldw	r3,-4(r19)
 800fac0:	b8c00715 	stw	r3,28(r23)
 800fac4:	003f9906 	br	800f92c <__alt_data_end+0xfc00f92c>

0800fac8 <lflush>:
 800fac8:	2080030b 	ldhu	r2,12(r4)
 800facc:	00c00244 	movi	r3,9
 800fad0:	1080024c 	andi	r2,r2,9
 800fad4:	10c00226 	beq	r2,r3,800fae0 <lflush+0x18>
 800fad8:	0005883a 	mov	r2,zero
 800fadc:	f800283a 	ret
 800fae0:	800c9e01 	jmpi	800c9e0 <fflush>

0800fae4 <__srefill_r>:
 800fae4:	defffd04 	addi	sp,sp,-12
 800fae8:	dc400115 	stw	r17,4(sp)
 800faec:	dc000015 	stw	r16,0(sp)
 800faf0:	dfc00215 	stw	ra,8(sp)
 800faf4:	2023883a 	mov	r17,r4
 800faf8:	2821883a 	mov	r16,r5
 800fafc:	20000226 	beq	r4,zero,800fb08 <__srefill_r+0x24>
 800fb00:	20800e17 	ldw	r2,56(r4)
 800fb04:	10003b26 	beq	r2,zero,800fbf4 <__srefill_r+0x110>
 800fb08:	80c0030b 	ldhu	r3,12(r16)
 800fb0c:	1908000c 	andi	r4,r3,8192
 800fb10:	1805883a 	mov	r2,r3
 800fb14:	2000071e 	bne	r4,zero,800fb34 <__srefill_r+0x50>
 800fb18:	81001917 	ldw	r4,100(r16)
 800fb1c:	18880014 	ori	r2,r3,8192
 800fb20:	00f7ffc4 	movi	r3,-8193
 800fb24:	20c8703a 	and	r4,r4,r3
 800fb28:	8080030d 	sth	r2,12(r16)
 800fb2c:	1007883a 	mov	r3,r2
 800fb30:	81001915 	stw	r4,100(r16)
 800fb34:	80000115 	stw	zero,4(r16)
 800fb38:	1100080c 	andi	r4,r2,32
 800fb3c:	20004d1e 	bne	r4,zero,800fc74 <__srefill_r+0x190>
 800fb40:	1100010c 	andi	r4,r2,4
 800fb44:	20001e26 	beq	r4,zero,800fbc0 <__srefill_r+0xdc>
 800fb48:	81400c17 	ldw	r5,48(r16)
 800fb4c:	28000826 	beq	r5,zero,800fb70 <__srefill_r+0x8c>
 800fb50:	80801004 	addi	r2,r16,64
 800fb54:	28800226 	beq	r5,r2,800fb60 <__srefill_r+0x7c>
 800fb58:	8809883a 	mov	r4,r17
 800fb5c:	800d1780 	call	800d178 <_free_r>
 800fb60:	80800f17 	ldw	r2,60(r16)
 800fb64:	80000c15 	stw	zero,48(r16)
 800fb68:	80800115 	stw	r2,4(r16)
 800fb6c:	10002f1e 	bne	r2,zero,800fc2c <__srefill_r+0x148>
 800fb70:	80800417 	ldw	r2,16(r16)
 800fb74:	10004126 	beq	r2,zero,800fc7c <__srefill_r+0x198>
 800fb78:	8080030b 	ldhu	r2,12(r16)
 800fb7c:	108000cc 	andi	r2,r2,3
 800fb80:	10001e1e 	bne	r2,zero,800fbfc <__srefill_r+0x118>
 800fb84:	81800417 	ldw	r6,16(r16)
 800fb88:	80800817 	ldw	r2,32(r16)
 800fb8c:	81400717 	ldw	r5,28(r16)
 800fb90:	81c00517 	ldw	r7,20(r16)
 800fb94:	81800015 	stw	r6,0(r16)
 800fb98:	8809883a 	mov	r4,r17
 800fb9c:	103ee83a 	callr	r2
 800fba0:	80800115 	stw	r2,4(r16)
 800fba4:	00800d0e 	bge	zero,r2,800fbdc <__srefill_r+0xf8>
 800fba8:	0005883a 	mov	r2,zero
 800fbac:	dfc00217 	ldw	ra,8(sp)
 800fbb0:	dc400117 	ldw	r17,4(sp)
 800fbb4:	dc000017 	ldw	r16,0(sp)
 800fbb8:	dec00304 	addi	sp,sp,12
 800fbbc:	f800283a 	ret
 800fbc0:	1100040c 	andi	r4,r2,16
 800fbc4:	20002726 	beq	r4,zero,800fc64 <__srefill_r+0x180>
 800fbc8:	1080020c 	andi	r2,r2,8
 800fbcc:	10001b1e 	bne	r2,zero,800fc3c <__srefill_r+0x158>
 800fbd0:	18c00114 	ori	r3,r3,4
 800fbd4:	80c0030d 	sth	r3,12(r16)
 800fbd8:	003fe506 	br	800fb70 <__alt_data_end+0xfc00fb70>
 800fbdc:	80c0030b 	ldhu	r3,12(r16)
 800fbe0:	10000d1e 	bne	r2,zero,800fc18 <__srefill_r+0x134>
 800fbe4:	18c00814 	ori	r3,r3,32
 800fbe8:	00bfffc4 	movi	r2,-1
 800fbec:	80c0030d 	sth	r3,12(r16)
 800fbf0:	003fee06 	br	800fbac <__alt_data_end+0xfc00fbac>
 800fbf4:	800cd740 	call	800cd74 <__sinit>
 800fbf8:	003fc306 	br	800fb08 <__alt_data_end+0xfc00fb08>
 800fbfc:	008200b4 	movhi	r2,2050
 800fc00:	10808f04 	addi	r2,r2,572
 800fc04:	11000017 	ldw	r4,0(r2)
 800fc08:	01420074 	movhi	r5,2049
 800fc0c:	297eb204 	addi	r5,r5,-1336
 800fc10:	800d90c0 	call	800d90c <_fwalk>
 800fc14:	003fdb06 	br	800fb84 <__alt_data_end+0xfc00fb84>
 800fc18:	18c01014 	ori	r3,r3,64
 800fc1c:	80000115 	stw	zero,4(r16)
 800fc20:	00bfffc4 	movi	r2,-1
 800fc24:	80c0030d 	sth	r3,12(r16)
 800fc28:	003fe006 	br	800fbac <__alt_data_end+0xfc00fbac>
 800fc2c:	80c00e17 	ldw	r3,56(r16)
 800fc30:	0005883a 	mov	r2,zero
 800fc34:	80c00015 	stw	r3,0(r16)
 800fc38:	003fdc06 	br	800fbac <__alt_data_end+0xfc00fbac>
 800fc3c:	8809883a 	mov	r4,r17
 800fc40:	800b883a 	mov	r5,r16
 800fc44:	800c7b80 	call	800c7b8 <_fflush_r>
 800fc48:	10000a1e 	bne	r2,zero,800fc74 <__srefill_r+0x190>
 800fc4c:	8080030b 	ldhu	r2,12(r16)
 800fc50:	00fffdc4 	movi	r3,-9
 800fc54:	80000215 	stw	zero,8(r16)
 800fc58:	1886703a 	and	r3,r3,r2
 800fc5c:	80000615 	stw	zero,24(r16)
 800fc60:	003fdb06 	br	800fbd0 <__alt_data_end+0xfc00fbd0>
 800fc64:	00800244 	movi	r2,9
 800fc68:	88800015 	stw	r2,0(r17)
 800fc6c:	18c01014 	ori	r3,r3,64
 800fc70:	80c0030d 	sth	r3,12(r16)
 800fc74:	00bfffc4 	movi	r2,-1
 800fc78:	003fcc06 	br	800fbac <__alt_data_end+0xfc00fbac>
 800fc7c:	8809883a 	mov	r4,r17
 800fc80:	800b883a 	mov	r5,r16
 800fc84:	800db8c0 	call	800db8c <__smakebuf_r>
 800fc88:	003fbb06 	br	800fb78 <__alt_data_end+0xfc00fb78>

0800fc8c <__fpclassifyd>:
 800fc8c:	00a00034 	movhi	r2,32768
 800fc90:	10bfffc4 	addi	r2,r2,-1
 800fc94:	2884703a 	and	r2,r5,r2
 800fc98:	10000726 	beq	r2,zero,800fcb8 <__fpclassifyd+0x2c>
 800fc9c:	00fffc34 	movhi	r3,65520
 800fca0:	019ff834 	movhi	r6,32736
 800fca4:	28c7883a 	add	r3,r5,r3
 800fca8:	31bfffc4 	addi	r6,r6,-1
 800fcac:	30c00536 	bltu	r6,r3,800fcc4 <__fpclassifyd+0x38>
 800fcb0:	00800104 	movi	r2,4
 800fcb4:	f800283a 	ret
 800fcb8:	2000021e 	bne	r4,zero,800fcc4 <__fpclassifyd+0x38>
 800fcbc:	00800084 	movi	r2,2
 800fcc0:	f800283a 	ret
 800fcc4:	00dffc34 	movhi	r3,32752
 800fcc8:	019ff834 	movhi	r6,32736
 800fccc:	28cb883a 	add	r5,r5,r3
 800fcd0:	31bfffc4 	addi	r6,r6,-1
 800fcd4:	317ff62e 	bgeu	r6,r5,800fcb0 <__alt_data_end+0xfc00fcb0>
 800fcd8:	01400434 	movhi	r5,16
 800fcdc:	297fffc4 	addi	r5,r5,-1
 800fce0:	28800236 	bltu	r5,r2,800fcec <__fpclassifyd+0x60>
 800fce4:	008000c4 	movi	r2,3
 800fce8:	f800283a 	ret
 800fcec:	10c00226 	beq	r2,r3,800fcf8 <__fpclassifyd+0x6c>
 800fcf0:	0005883a 	mov	r2,zero
 800fcf4:	f800283a 	ret
 800fcf8:	2005003a 	cmpeq	r2,r4,zero
 800fcfc:	f800283a 	ret

0800fd00 <__sccl>:
 800fd00:	2a000003 	ldbu	r8,0(r5)
 800fd04:	00801784 	movi	r2,94
 800fd08:	40802526 	beq	r8,r2,800fda0 <__sccl+0xa0>
 800fd0c:	29400044 	addi	r5,r5,1
 800fd10:	000f883a 	mov	r7,zero
 800fd14:	0013883a 	mov	r9,zero
 800fd18:	2007883a 	mov	r3,r4
 800fd1c:	21804004 	addi	r6,r4,256
 800fd20:	19c00005 	stb	r7,0(r3)
 800fd24:	18c00044 	addi	r3,r3,1
 800fd28:	19bffd1e 	bne	r3,r6,800fd20 <__alt_data_end+0xfc00fd20>
 800fd2c:	40001026 	beq	r8,zero,800fd70 <__sccl+0x70>
 800fd30:	00800044 	movi	r2,1
 800fd34:	124dc83a 	sub	r6,r2,r9
 800fd38:	02801744 	movi	r10,93
 800fd3c:	02400b44 	movi	r9,45
 800fd40:	2205883a 	add	r2,r4,r8
 800fd44:	11800005 	stb	r6,0(r2)
 800fd48:	28800044 	addi	r2,r5,1
 800fd4c:	28c00003 	ldbu	r3,0(r5)
 800fd50:	1a400926 	beq	r3,r9,800fd78 <__sccl+0x78>
 800fd54:	1a800526 	beq	r3,r10,800fd6c <__sccl+0x6c>
 800fd58:	18000326 	beq	r3,zero,800fd68 <__sccl+0x68>
 800fd5c:	1811883a 	mov	r8,r3
 800fd60:	100b883a 	mov	r5,r2
 800fd64:	003ff606 	br	800fd40 <__alt_data_end+0xfc00fd40>
 800fd68:	2805883a 	mov	r2,r5
 800fd6c:	f800283a 	ret
 800fd70:	28bfffc4 	addi	r2,r5,-1
 800fd74:	f800283a 	ret
 800fd78:	11c00003 	ldbu	r7,0(r2)
 800fd7c:	3a800d26 	beq	r7,r10,800fdb4 <__sccl+0xb4>
 800fd80:	3a000c16 	blt	r7,r8,800fdb4 <__sccl+0xb4>
 800fd84:	29400084 	addi	r5,r5,2
 800fd88:	42000044 	addi	r8,r8,1
 800fd8c:	2207883a 	add	r3,r4,r8
 800fd90:	19800005 	stb	r6,0(r3)
 800fd94:	41fffc16 	blt	r8,r7,800fd88 <__alt_data_end+0xfc00fd88>
 800fd98:	10800084 	addi	r2,r2,2
 800fd9c:	003feb06 	br	800fd4c <__alt_data_end+0xfc00fd4c>
 800fda0:	2a000043 	ldbu	r8,1(r5)
 800fda4:	01c00044 	movi	r7,1
 800fda8:	29400084 	addi	r5,r5,2
 800fdac:	02400044 	movi	r9,1
 800fdb0:	003fd906 	br	800fd18 <__alt_data_end+0xfc00fd18>
 800fdb4:	100b883a 	mov	r5,r2
 800fdb8:	4811883a 	mov	r8,r9
 800fdbc:	003fe006 	br	800fd40 <__alt_data_end+0xfc00fd40>

0800fdc0 <nanf>:
 800fdc0:	009ff034 	movhi	r2,32704
 800fdc4:	f800283a 	ret

0800fdc8 <__sread>:
 800fdc8:	defffe04 	addi	sp,sp,-8
 800fdcc:	dc000015 	stw	r16,0(sp)
 800fdd0:	2821883a 	mov	r16,r5
 800fdd4:	2940038f 	ldh	r5,14(r5)
 800fdd8:	dfc00115 	stw	ra,4(sp)
 800fddc:	80162200 	call	8016220 <_read_r>
 800fde0:	10000716 	blt	r2,zero,800fe00 <__sread+0x38>
 800fde4:	80c01417 	ldw	r3,80(r16)
 800fde8:	1887883a 	add	r3,r3,r2
 800fdec:	80c01415 	stw	r3,80(r16)
 800fdf0:	dfc00117 	ldw	ra,4(sp)
 800fdf4:	dc000017 	ldw	r16,0(sp)
 800fdf8:	dec00204 	addi	sp,sp,8
 800fdfc:	f800283a 	ret
 800fe00:	80c0030b 	ldhu	r3,12(r16)
 800fe04:	18fbffcc 	andi	r3,r3,61439
 800fe08:	80c0030d 	sth	r3,12(r16)
 800fe0c:	dfc00117 	ldw	ra,4(sp)
 800fe10:	dc000017 	ldw	r16,0(sp)
 800fe14:	dec00204 	addi	sp,sp,8
 800fe18:	f800283a 	ret

0800fe1c <__seofread>:
 800fe1c:	0005883a 	mov	r2,zero
 800fe20:	f800283a 	ret

0800fe24 <__swrite>:
 800fe24:	2880030b 	ldhu	r2,12(r5)
 800fe28:	defffb04 	addi	sp,sp,-20
 800fe2c:	dcc00315 	stw	r19,12(sp)
 800fe30:	dc800215 	stw	r18,8(sp)
 800fe34:	dc400115 	stw	r17,4(sp)
 800fe38:	dc000015 	stw	r16,0(sp)
 800fe3c:	dfc00415 	stw	ra,16(sp)
 800fe40:	10c0400c 	andi	r3,r2,256
 800fe44:	2821883a 	mov	r16,r5
 800fe48:	2027883a 	mov	r19,r4
 800fe4c:	3025883a 	mov	r18,r6
 800fe50:	3823883a 	mov	r17,r7
 800fe54:	18000526 	beq	r3,zero,800fe6c <__swrite+0x48>
 800fe58:	2940038f 	ldh	r5,14(r5)
 800fe5c:	000d883a 	mov	r6,zero
 800fe60:	01c00084 	movi	r7,2
 800fe64:	80161c40 	call	80161c4 <_lseek_r>
 800fe68:	8080030b 	ldhu	r2,12(r16)
 800fe6c:	8140038f 	ldh	r5,14(r16)
 800fe70:	10bbffcc 	andi	r2,r2,61439
 800fe74:	9809883a 	mov	r4,r19
 800fe78:	900d883a 	mov	r6,r18
 800fe7c:	880f883a 	mov	r7,r17
 800fe80:	8080030d 	sth	r2,12(r16)
 800fe84:	dfc00417 	ldw	ra,16(sp)
 800fe88:	dcc00317 	ldw	r19,12(sp)
 800fe8c:	dc800217 	ldw	r18,8(sp)
 800fe90:	dc400117 	ldw	r17,4(sp)
 800fe94:	dc000017 	ldw	r16,0(sp)
 800fe98:	dec00504 	addi	sp,sp,20
 800fe9c:	80150301 	jmpi	8015030 <_write_r>

0800fea0 <__sseek>:
 800fea0:	defffe04 	addi	sp,sp,-8
 800fea4:	dc000015 	stw	r16,0(sp)
 800fea8:	2821883a 	mov	r16,r5
 800feac:	2940038f 	ldh	r5,14(r5)
 800feb0:	dfc00115 	stw	ra,4(sp)
 800feb4:	80161c40 	call	80161c4 <_lseek_r>
 800feb8:	00ffffc4 	movi	r3,-1
 800febc:	10c00826 	beq	r2,r3,800fee0 <__sseek+0x40>
 800fec0:	80c0030b 	ldhu	r3,12(r16)
 800fec4:	80801415 	stw	r2,80(r16)
 800fec8:	18c40014 	ori	r3,r3,4096
 800fecc:	80c0030d 	sth	r3,12(r16)
 800fed0:	dfc00117 	ldw	ra,4(sp)
 800fed4:	dc000017 	ldw	r16,0(sp)
 800fed8:	dec00204 	addi	sp,sp,8
 800fedc:	f800283a 	ret
 800fee0:	80c0030b 	ldhu	r3,12(r16)
 800fee4:	18fbffcc 	andi	r3,r3,61439
 800fee8:	80c0030d 	sth	r3,12(r16)
 800feec:	dfc00117 	ldw	ra,4(sp)
 800fef0:	dc000017 	ldw	r16,0(sp)
 800fef4:	dec00204 	addi	sp,sp,8
 800fef8:	f800283a 	ret

0800fefc <__sclose>:
 800fefc:	2940038f 	ldh	r5,14(r5)
 800ff00:	801508c1 	jmpi	801508c <_close_r>

0800ff04 <strchr>:
 800ff04:	2ac03fcc 	andi	r11,r5,255
 800ff08:	2815883a 	mov	r10,r5
 800ff0c:	208000cc 	andi	r2,r4,3
 800ff10:	58003726 	beq	r11,zero,800fff0 <strchr+0xec>
 800ff14:	10000b26 	beq	r2,zero,800ff44 <strchr+0x40>
 800ff18:	20800003 	ldbu	r2,0(r4)
 800ff1c:	10003226 	beq	r2,zero,800ffe8 <strchr+0xe4>
 800ff20:	28c03fcc 	andi	r3,r5,255
 800ff24:	5880041e 	bne	r11,r2,800ff38 <strchr+0x34>
 800ff28:	00004d06 	br	8010060 <strchr+0x15c>
 800ff2c:	20800003 	ldbu	r2,0(r4)
 800ff30:	10002d26 	beq	r2,zero,800ffe8 <strchr+0xe4>
 800ff34:	18804a26 	beq	r3,r2,8010060 <strchr+0x15c>
 800ff38:	21000044 	addi	r4,r4,1
 800ff3c:	208000cc 	andi	r2,r4,3
 800ff40:	103ffa1e 	bne	r2,zero,800ff2c <__alt_data_end+0xfc00ff2c>
 800ff44:	29403fcc 	andi	r5,r5,255
 800ff48:	280e923a 	slli	r7,r5,8
 800ff4c:	20800017 	ldw	r2,0(r4)
 800ff50:	01bfbff4 	movhi	r6,65279
 800ff54:	394ab03a 	or	r5,r7,r5
 800ff58:	280e943a 	slli	r7,r5,16
 800ff5c:	31bfbfc4 	addi	r6,r6,-257
 800ff60:	0090303a 	nor	r8,zero,r2
 800ff64:	394eb03a 	or	r7,r7,r5
 800ff68:	1187883a 	add	r3,r2,r6
 800ff6c:	11c4f03a 	xor	r2,r2,r7
 800ff70:	008a303a 	nor	r5,zero,r2
 800ff74:	1185883a 	add	r2,r2,r6
 800ff78:	03202074 	movhi	r12,32897
 800ff7c:	2884703a 	and	r2,r5,r2
 800ff80:	40c6703a 	and	r3,r8,r3
 800ff84:	63202004 	addi	r12,r12,-32640
 800ff88:	10c4b03a 	or	r2,r2,r3
 800ff8c:	1304703a 	and	r2,r2,r12
 800ff90:	10000c1e 	bne	r2,zero,800ffc4 <strchr+0xc0>
 800ff94:	21000104 	addi	r4,r4,4
 800ff98:	20800017 	ldw	r2,0(r4)
 800ff9c:	3886f03a 	xor	r3,r7,r2
 800ffa0:	00d2303a 	nor	r9,zero,r3
 800ffa4:	198b883a 	add	r5,r3,r6
 800ffa8:	0090303a 	nor	r8,zero,r2
 800ffac:	1187883a 	add	r3,r2,r6
 800ffb0:	494a703a 	and	r5,r9,r5
 800ffb4:	40c4703a 	and	r2,r8,r3
 800ffb8:	2884b03a 	or	r2,r5,r2
 800ffbc:	1304703a 	and	r2,r2,r12
 800ffc0:	103ff426 	beq	r2,zero,800ff94 <__alt_data_end+0xfc00ff94>
 800ffc4:	20800003 	ldbu	r2,0(r4)
 800ffc8:	10000726 	beq	r2,zero,800ffe8 <strchr+0xe4>
 800ffcc:	58802426 	beq	r11,r2,8010060 <strchr+0x15c>
 800ffd0:	50c03fcc 	andi	r3,r10,255
 800ffd4:	00000106 	br	800ffdc <strchr+0xd8>
 800ffd8:	18802126 	beq	r3,r2,8010060 <strchr+0x15c>
 800ffdc:	21000044 	addi	r4,r4,1
 800ffe0:	20800003 	ldbu	r2,0(r4)
 800ffe4:	103ffc1e 	bne	r2,zero,800ffd8 <__alt_data_end+0xfc00ffd8>
 800ffe8:	0005883a 	mov	r2,zero
 800ffec:	f800283a 	ret
 800fff0:	10000526 	beq	r2,zero,8010008 <strchr+0x104>
 800fff4:	20800003 	ldbu	r2,0(r4)
 800fff8:	10001926 	beq	r2,zero,8010060 <strchr+0x15c>
 800fffc:	21000044 	addi	r4,r4,1
 8010000:	208000cc 	andi	r2,r4,3
 8010004:	103ffb1e 	bne	r2,zero,800fff4 <__alt_data_end+0xfc00fff4>
 8010008:	20800017 	ldw	r2,0(r4)
 801000c:	01bfbff4 	movhi	r6,65279
 8010010:	31bfbfc4 	addi	r6,r6,-257
 8010014:	0086303a 	nor	r3,zero,r2
 8010018:	01602074 	movhi	r5,32897
 801001c:	1185883a 	add	r2,r2,r6
 8010020:	29602004 	addi	r5,r5,-32640
 8010024:	10c4703a 	and	r2,r2,r3
 8010028:	1144703a 	and	r2,r2,r5
 801002c:	10000a1e 	bne	r2,zero,8010058 <strchr+0x154>
 8010030:	21000104 	addi	r4,r4,4
 8010034:	20800017 	ldw	r2,0(r4)
 8010038:	1187883a 	add	r3,r2,r6
 801003c:	0084303a 	nor	r2,zero,r2
 8010040:	1884703a 	and	r2,r3,r2
 8010044:	1144703a 	and	r2,r2,r5
 8010048:	103ff926 	beq	r2,zero,8010030 <__alt_data_end+0xfc010030>
 801004c:	20800003 	ldbu	r2,0(r4)
 8010050:	10000326 	beq	r2,zero,8010060 <strchr+0x15c>
 8010054:	21000044 	addi	r4,r4,1
 8010058:	20800003 	ldbu	r2,0(r4)
 801005c:	103ffd1e 	bne	r2,zero,8010054 <__alt_data_end+0xfc010054>
 8010060:	2005883a 	mov	r2,r4
 8010064:	f800283a 	ret

08010068 <_strtod_r>:
 8010068:	deffe104 	addi	sp,sp,-124
 801006c:	dcc01815 	stw	r19,96(sp)
 8010070:	dc001515 	stw	r16,84(sp)
 8010074:	dfc01e15 	stw	ra,120(sp)
 8010078:	df001d15 	stw	fp,116(sp)
 801007c:	ddc01c15 	stw	r23,112(sp)
 8010080:	dd801b15 	stw	r22,108(sp)
 8010084:	dd401a15 	stw	r21,104(sp)
 8010088:	dd001915 	stw	r20,100(sp)
 801008c:	dc801715 	stw	r18,92(sp)
 8010090:	dc401615 	stw	r17,88(sp)
 8010094:	d9400615 	stw	r5,24(sp)
 8010098:	2807883a 	mov	r3,r5
 801009c:	1f000003 	ldbu	fp,0(r3)
 80100a0:	01c20074 	movhi	r7,2049
 80100a4:	2021883a 	mov	r16,r4
 80100a8:	d9800c15 	stw	r6,48(sp)
 80100ac:	d8000815 	stw	zero,32(sp)
 80100b0:	d8000715 	stw	zero,28(sp)
 80100b4:	01000b44 	movi	r4,45
 80100b8:	e0803fcc 	andi	r2,fp,255
 80100bc:	39c03604 	addi	r7,r7,216
 80100c0:	2827883a 	mov	r19,r5
 80100c4:	2080c236 	bltu	r4,r2,80103d0 <_strtod_r+0x368>
 80100c8:	100490ba 	slli	r2,r2,2
 80100cc:	11c5883a 	add	r2,r2,r7
 80100d0:	10800017 	ldw	r2,0(r2)
 80100d4:	1000683a 	jmp	r2
 80100d8:	08010198 	cmpnei	zero,at,1030
 80100dc:	080103d0 	cmplti	zero,at,1039
 80100e0:	080103d0 	cmplti	zero,at,1039
 80100e4:	080103d0 	cmplti	zero,at,1039
 80100e8:	080103d0 	cmplti	zero,at,1039
 80100ec:	080103d0 	cmplti	zero,at,1039
 80100f0:	080103d0 	cmplti	zero,at,1039
 80100f4:	080103d0 	cmplti	zero,at,1039
 80100f8:	080103d0 	cmplti	zero,at,1039
 80100fc:	080103bc 	xorhi	zero,at,1038
 8010100:	080103bc 	xorhi	zero,at,1038
 8010104:	080103bc 	xorhi	zero,at,1038
 8010108:	080103bc 	xorhi	zero,at,1038
 801010c:	080103bc 	xorhi	zero,at,1038
 8010110:	080103d0 	cmplti	zero,at,1039
 8010114:	080103d0 	cmplti	zero,at,1039
 8010118:	080103d0 	cmplti	zero,at,1039
 801011c:	080103d0 	cmplti	zero,at,1039
 8010120:	080103d0 	cmplti	zero,at,1039
 8010124:	080103d0 	cmplti	zero,at,1039
 8010128:	080103d0 	cmplti	zero,at,1039
 801012c:	080103d0 	cmplti	zero,at,1039
 8010130:	080103d0 	cmplti	zero,at,1039
 8010134:	080103d0 	cmplti	zero,at,1039
 8010138:	080103d0 	cmplti	zero,at,1039
 801013c:	080103d0 	cmplti	zero,at,1039
 8010140:	080103d0 	cmplti	zero,at,1039
 8010144:	080103d0 	cmplti	zero,at,1039
 8010148:	080103d0 	cmplti	zero,at,1039
 801014c:	080103d0 	cmplti	zero,at,1039
 8010150:	080103d0 	cmplti	zero,at,1039
 8010154:	080103d0 	cmplti	zero,at,1039
 8010158:	080103bc 	xorhi	zero,at,1038
 801015c:	080103d0 	cmplti	zero,at,1039
 8010160:	080103d0 	cmplti	zero,at,1039
 8010164:	080103d0 	cmplti	zero,at,1039
 8010168:	080103d0 	cmplti	zero,at,1039
 801016c:	080103d0 	cmplti	zero,at,1039
 8010170:	080103d0 	cmplti	zero,at,1039
 8010174:	080103d0 	cmplti	zero,at,1039
 8010178:	080103d0 	cmplti	zero,at,1039
 801017c:	080103d0 	cmplti	zero,at,1039
 8010180:	080103d0 	cmplti	zero,at,1039
 8010184:	080101f8 	rdprs	zero,at,1031
 8010188:	080103d0 	cmplti	zero,at,1039
 801018c:	080103b0 	cmpltui	zero,at,1038
 8010190:	00801244 	movi	r2,73
 8010194:	e084ca26 	beq	fp,r2,80114c0 <_strtod_r+0x1458>
 8010198:	d9000c17 	ldw	r4,48(sp)
 801019c:	002b883a 	mov	r21,zero
 80101a0:	0023883a 	mov	r17,zero
 80101a4:	20000626 	beq	r4,zero,80101c0 <_strtod_r+0x158>
 80101a8:	d8001015 	stw	zero,64(sp)
 80101ac:	d8800c17 	ldw	r2,48(sp)
 80101b0:	14c00015 	stw	r19,0(r2)
 80101b4:	d8c01017 	ldw	r3,64(sp)
 80101b8:	18000126 	beq	r3,zero,80101c0 <_strtod_r+0x158>
 80101bc:	8c60003c 	xorhi	r17,r17,32768
 80101c0:	a805883a 	mov	r2,r21
 80101c4:	8807883a 	mov	r3,r17
 80101c8:	dfc01e17 	ldw	ra,120(sp)
 80101cc:	df001d17 	ldw	fp,116(sp)
 80101d0:	ddc01c17 	ldw	r23,112(sp)
 80101d4:	dd801b17 	ldw	r22,108(sp)
 80101d8:	dd401a17 	ldw	r21,104(sp)
 80101dc:	dd001917 	ldw	r20,100(sp)
 80101e0:	dcc01817 	ldw	r19,96(sp)
 80101e4:	dc801717 	ldw	r18,92(sp)
 80101e8:	dc401617 	ldw	r17,88(sp)
 80101ec:	dc001517 	ldw	r16,84(sp)
 80101f0:	dec01f04 	addi	sp,sp,124
 80101f4:	f800283a 	ret
 80101f8:	d8001015 	stw	zero,64(sp)
 80101fc:	1c800044 	addi	r18,r3,1
 8010200:	dc800615 	stw	r18,24(sp)
 8010204:	1f000043 	ldbu	fp,1(r3)
 8010208:	e0803fcc 	andi	r2,fp,255
 801020c:	1080201c 	xori	r2,r2,128
 8010210:	10bfe004 	addi	r2,r2,-128
 8010214:	103fe026 	beq	r2,zero,8010198 <__alt_data_end+0xfc010198>
 8010218:	e1003fcc 	andi	r4,fp,255
 801021c:	2100201c 	xori	r4,r4,128
 8010220:	213fe004 	addi	r4,r4,-128
 8010224:	00800c04 	movi	r2,48
 8010228:	20810c26 	beq	r4,r2,801065c <_strtod_r+0x5f4>
 801022c:	dc800915 	stw	r18,36(sp)
 8010230:	d8000715 	stw	zero,28(sp)
 8010234:	e0bff404 	addi	r2,fp,-48
 8010238:	10803fcc 	andi	r2,r2,255
 801023c:	04400244 	movi	r17,9
 8010240:	8883f436 	bltu	r17,r2,8011214 <_strtod_r+0x11ac>
 8010244:	d9000917 	ldw	r4,36(sp)
 8010248:	0029883a 	mov	r20,zero
 801024c:	0025883a 	mov	r18,zero
 8010250:	25800044 	addi	r22,r4,1
 8010254:	002f883a 	mov	r23,zero
 8010258:	05400204 	movi	r21,8
 801025c:	adc05f16 	blt	r21,r23,80103dc <_strtod_r+0x374>
 8010260:	e7003fcc 	andi	fp,fp,255
 8010264:	9009883a 	mov	r4,r18
 8010268:	01400284 	movi	r5,10
 801026c:	e700201c 	xori	fp,fp,128
 8010270:	800334c0 	call	800334c <__mulsi3>
 8010274:	e73fe004 	addi	fp,fp,-128
 8010278:	1705883a 	add	r2,r2,fp
 801027c:	14bff404 	addi	r18,r2,-48
 8010280:	dd800615 	stw	r22,24(sp)
 8010284:	b7000003 	ldbu	fp,0(r22)
 8010288:	b00f883a 	mov	r7,r22
 801028c:	bdc00044 	addi	r23,r23,1
 8010290:	e0fff404 	addi	r3,fp,-48
 8010294:	18c03fcc 	andi	r3,r3,255
 8010298:	b5800044 	addi	r22,r22,1
 801029c:	88ffef2e 	bgeu	r17,r3,801025c <__alt_data_end+0xfc01025c>
 80102a0:	e7003fcc 	andi	fp,fp,255
 80102a4:	e700201c 	xori	fp,fp,128
 80102a8:	e73fe004 	addi	fp,fp,-128
 80102ac:	8009883a 	mov	r4,r16
 80102b0:	d9c01315 	stw	r7,76(sp)
 80102b4:	800db580 	call	800db58 <_localeconv_r>
 80102b8:	8009883a 	mov	r4,r16
 80102bc:	14400017 	ldw	r17,0(r2)
 80102c0:	800db580 	call	800db58 <_localeconv_r>
 80102c4:	11000017 	ldw	r4,0(r2)
 80102c8:	80049680 	call	8004968 <strlen>
 80102cc:	d9c01317 	ldw	r7,76(sp)
 80102d0:	880b883a 	mov	r5,r17
 80102d4:	100d883a 	mov	r6,r2
 80102d8:	3809883a 	mov	r4,r7
 80102dc:	801627c0 	call	801627c <strncmp>
 80102e0:	1000f126 	beq	r2,zero,80106a8 <_strtod_r+0x640>
 80102e4:	b82d883a 	mov	r22,r23
 80102e8:	000f883a 	mov	r7,zero
 80102ec:	0023883a 	mov	r17,zero
 80102f0:	d8000815 	stw	zero,32(sp)
 80102f4:	00801944 	movi	r2,101
 80102f8:	e0804926 	beq	fp,r2,8010420 <_strtod_r+0x3b8>
 80102fc:	00801144 	movi	r2,69
 8010300:	e0804726 	beq	fp,r2,8010420 <_strtod_r+0x3b8>
 8010304:	002b883a 	mov	r21,zero
 8010308:	b000951e 	bne	r22,zero,8010560 <_strtod_r+0x4f8>
 801030c:	38003e1e 	bne	r7,zero,8010408 <_strtod_r+0x3a0>
 8010310:	d8c00717 	ldw	r3,28(sp)
 8010314:	18003c1e 	bne	r3,zero,8010408 <_strtod_r+0x3a0>
 8010318:	d8c00817 	ldw	r3,32(sp)
 801031c:	183f9e1e 	bne	r3,zero,8010198 <__alt_data_end+0xfc010198>
 8010320:	00801384 	movi	r2,78
 8010324:	e0800526 	beq	fp,r2,801033c <_strtod_r+0x2d4>
 8010328:	173f990e 	bge	r2,fp,8010190 <__alt_data_end+0xfc010190>
 801032c:	00801a44 	movi	r2,105
 8010330:	e0846326 	beq	fp,r2,80114c0 <_strtod_r+0x1458>
 8010334:	00801b84 	movi	r2,110
 8010338:	e0bf971e 	bne	fp,r2,8010198 <__alt_data_end+0xfc010198>
 801033c:	014200b4 	movhi	r5,2050
 8010340:	d9000617 	ldw	r4,24(sp)
 8010344:	2978f304 	addi	r5,r5,-7220
 8010348:	01c00644 	movi	r7,25
 801034c:	00000b06 	br	801037c <_strtod_r+0x314>
 8010350:	21000044 	addi	r4,r4,1
 8010354:	20800003 	ldbu	r2,0(r4)
 8010358:	10ffefc4 	addi	r3,r2,-65
 801035c:	10803fcc 	andi	r2,r2,255
 8010360:	1080201c 	xori	r2,r2,128
 8010364:	18c03fcc 	andi	r3,r3,255
 8010368:	10bfe004 	addi	r2,r2,-128
 801036c:	38c00136 	bltu	r7,r3,8010374 <_strtod_r+0x30c>
 8010370:	10800804 	addi	r2,r2,32
 8010374:	29400044 	addi	r5,r5,1
 8010378:	11bf871e 	bne	r2,r6,8010198 <__alt_data_end+0xfc010198>
 801037c:	29800007 	ldb	r6,0(r5)
 8010380:	303ff31e 	bne	r6,zero,8010350 <__alt_data_end+0xfc010350>
 8010384:	20800044 	addi	r2,r4,1
 8010388:	d8800615 	stw	r2,24(sp)
 801038c:	20c00047 	ldb	r3,1(r4)
 8010390:	00800a04 	movi	r2,40
 8010394:	18849926 	beq	r3,r2,80115fc <_strtod_r+0x1594>
 8010398:	00fffe34 	movhi	r3,65528
 801039c:	d8c00715 	stw	r3,28(sp)
 80103a0:	d8000815 	stw	zero,32(sp)
 80103a4:	dd400817 	ldw	r21,32(sp)
 80103a8:	dc400717 	ldw	r17,28(sp)
 80103ac:	00001806 	br	8010410 <_strtod_r+0x3a8>
 80103b0:	00800044 	movi	r2,1
 80103b4:	d8801015 	stw	r2,64(sp)
 80103b8:	003f9006 	br	80101fc <__alt_data_end+0xfc0101fc>
 80103bc:	18c00044 	addi	r3,r3,1
 80103c0:	d8c00615 	stw	r3,24(sp)
 80103c4:	1f000003 	ldbu	fp,0(r3)
 80103c8:	e0803fcc 	andi	r2,fp,255
 80103cc:	20bf3e2e 	bgeu	r4,r2,80100c8 <__alt_data_end+0xfc0100c8>
 80103d0:	1825883a 	mov	r18,r3
 80103d4:	d8001015 	stw	zero,64(sp)
 80103d8:	003f8f06 	br	8010218 <__alt_data_end+0xfc010218>
 80103dc:	008003c4 	movi	r2,15
 80103e0:	15ffa716 	blt	r2,r23,8010280 <__alt_data_end+0xfc010280>
 80103e4:	a009883a 	mov	r4,r20
 80103e8:	01400284 	movi	r5,10
 80103ec:	800334c0 	call	800334c <__mulsi3>
 80103f0:	e0c03fcc 	andi	r3,fp,255
 80103f4:	18c0201c 	xori	r3,r3,128
 80103f8:	18ffe004 	addi	r3,r3,-128
 80103fc:	10c5883a 	add	r2,r2,r3
 8010400:	153ff404 	addi	r20,r2,-48
 8010404:	003f9e06 	br	8010280 <__alt_data_end+0xfc010280>
 8010408:	002b883a 	mov	r21,zero
 801040c:	0023883a 	mov	r17,zero
 8010410:	d9000c17 	ldw	r4,48(sp)
 8010414:	203f6726 	beq	r4,zero,80101b4 <__alt_data_end+0xfc0101b4>
 8010418:	dcc00617 	ldw	r19,24(sp)
 801041c:	003f6306 	br	80101ac <__alt_data_end+0xfc0101ac>
 8010420:	b0008926 	beq	r22,zero,8010648 <_strtod_r+0x5e0>
 8010424:	dcc00617 	ldw	r19,24(sp)
 8010428:	98800044 	addi	r2,r19,1
 801042c:	d8800615 	stw	r2,24(sp)
 8010430:	98c00047 	ldb	r3,1(r19)
 8010434:	00800ac4 	movi	r2,43
 8010438:	18827026 	beq	r3,r2,8010dfc <_strtod_r+0xd94>
 801043c:	00800b44 	movi	r2,45
 8010440:	18826826 	beq	r3,r2,8010de4 <_strtod_r+0xd7c>
 8010444:	1839883a 	mov	fp,r3
 8010448:	d8000a15 	stw	zero,40(sp)
 801044c:	e13ff404 	addi	r4,fp,-48
 8010450:	01400244 	movi	r5,9
 8010454:	e005883a 	mov	r2,fp
 8010458:	29025036 	bltu	r5,r4,8010d9c <_strtod_r+0xd34>
 801045c:	01000c04 	movi	r4,48
 8010460:	e100081e 	bne	fp,r4,8010484 <_strtod_r+0x41c>
 8010464:	d9400617 	ldw	r5,24(sp)
 8010468:	e007883a 	mov	r3,fp
 801046c:	29400044 	addi	r5,r5,1
 8010470:	d9400615 	stw	r5,24(sp)
 8010474:	28800007 	ldb	r2,0(r5)
 8010478:	29400044 	addi	r5,r5,1
 801047c:	10fffc26 	beq	r2,r3,8010470 <__alt_data_end+0xfc010470>
 8010480:	1039883a 	mov	fp,r2
 8010484:	10bff3c4 	addi	r2,r2,-49
 8010488:	01000204 	movi	r4,8
 801048c:	20bf9d36 	bltu	r4,r2,8010304 <__alt_data_end+0xfc010304>
 8010490:	d8c00617 	ldw	r3,24(sp)
 8010494:	e13ff404 	addi	r4,fp,-48
 8010498:	01400244 	movi	r5,9
 801049c:	1b000044 	addi	r12,r3,1
 80104a0:	db000615 	stw	r12,24(sp)
 80104a4:	d8c00b15 	stw	r3,44(sp)
 80104a8:	18c00043 	ldbu	r3,1(r3)
 80104ac:	18bff404 	addi	r2,r3,-48
 80104b0:	1f003fcc 	andi	fp,r3,255
 80104b4:	e700201c 	xori	fp,fp,128
 80104b8:	10803fcc 	andi	r2,r2,255
 80104bc:	e73fe004 	addi	fp,fp,-128
 80104c0:	28801b36 	bltu	r5,r2,8010530 <_strtod_r+0x4c8>
 80104c4:	d8c00b17 	ldw	r3,44(sp)
 80104c8:	9805883a 	mov	r2,r19
 80104cc:	d9c00d15 	stw	r7,52(sp)
 80104d0:	8027883a 	mov	r19,r16
 80104d4:	1d400084 	addi	r21,r3,2
 80104d8:	e021883a 	mov	r16,fp
 80104dc:	1039883a 	mov	fp,r2
 80104e0:	01400284 	movi	r5,10
 80104e4:	800334c0 	call	800334c <__mulsi3>
 80104e8:	dd400615 	stw	r21,24(sp)
 80104ec:	a9800003 	ldbu	r6,0(r21)
 80104f0:	1405883a 	add	r2,r2,r16
 80104f4:	113ff404 	addi	r4,r2,-48
 80104f8:	317ff404 	addi	r5,r6,-48
 80104fc:	34003fcc 	andi	r16,r6,255
 8010500:	8400201c 	xori	r16,r16,128
 8010504:	29403fcc 	andi	r5,r5,255
 8010508:	00800244 	movi	r2,9
 801050c:	a819883a 	mov	r12,r21
 8010510:	843fe004 	addi	r16,r16,-128
 8010514:	ad400044 	addi	r21,r21,1
 8010518:	117ff12e 	bgeu	r2,r5,80104e0 <__alt_data_end+0xfc0104e0>
 801051c:	d9c00d17 	ldw	r7,52(sp)
 8010520:	e005883a 	mov	r2,fp
 8010524:	8039883a 	mov	fp,r16
 8010528:	9821883a 	mov	r16,r19
 801052c:	1027883a 	mov	r19,r2
 8010530:	d8c00b17 	ldw	r3,44(sp)
 8010534:	00800204 	movi	r2,8
 8010538:	60d9c83a 	sub	r12,r12,r3
 801053c:	13033316 	blt	r2,r12,801120c <_strtod_r+0x11a4>
 8010540:	009387c4 	movi	r2,19999
 8010544:	1100010e 	bge	r2,r4,801054c <_strtod_r+0x4e4>
 8010548:	1009883a 	mov	r4,r2
 801054c:	d8c00a17 	ldw	r3,40(sp)
 8010550:	00c5c83a 	sub	r2,zero,r3
 8010554:	2088f03a 	xor	r4,r4,r2
 8010558:	20eb883a 	add	r21,r4,r3
 801055c:	b03f6b26 	beq	r22,zero,801030c <__alt_data_end+0xfc01030c>
 8010560:	ac63c83a 	sub	r17,r21,r17
 8010564:	dc400e15 	stw	r17,56(sp)
 8010568:	b800011e 	bne	r23,zero,8010570 <_strtod_r+0x508>
 801056c:	b02f883a 	mov	r23,r22
 8010570:	00800404 	movi	r2,16
 8010574:	b023883a 	mov	r17,r22
 8010578:	1580010e 	bge	r2,r22,8010580 <_strtod_r+0x518>
 801057c:	1023883a 	mov	r17,r2
 8010580:	9009883a 	mov	r4,r18
 8010584:	8019d1c0 	call	8019d1c <__floatunsidf>
 8010588:	d8800815 	stw	r2,32(sp)
 801058c:	d8c00715 	stw	r3,28(sp)
 8010590:	00800244 	movi	r2,9
 8010594:	1440150e 	bge	r2,r17,80105ec <_strtod_r+0x584>
 8010598:	88bffdc4 	addi	r2,r17,-9
 801059c:	100490fa 	slli	r2,r2,3
 80105a0:	180b883a 	mov	r5,r3
 80105a4:	00c200b4 	movhi	r3,2050
 80105a8:	18f8be04 	addi	r3,r3,-7432
 80105ac:	1885883a 	add	r2,r3,r2
 80105b0:	d9000817 	ldw	r4,32(sp)
 80105b4:	11800017 	ldw	r6,0(r2)
 80105b8:	11c00117 	ldw	r7,4(r2)
 80105bc:	8018a880 	call	8018a88 <__muldf3>
 80105c0:	a009883a 	mov	r4,r20
 80105c4:	102b883a 	mov	r21,r2
 80105c8:	1827883a 	mov	r19,r3
 80105cc:	8019d1c0 	call	8019d1c <__floatunsidf>
 80105d0:	a809883a 	mov	r4,r21
 80105d4:	980b883a 	mov	r5,r19
 80105d8:	100d883a 	mov	r6,r2
 80105dc:	180f883a 	mov	r7,r3
 80105e0:	80176280 	call	8017628 <__adddf3>
 80105e4:	d8800815 	stw	r2,32(sp)
 80105e8:	d8c00715 	stw	r3,28(sp)
 80105ec:	008003c4 	movi	r2,15
 80105f0:	15805016 	blt	r2,r22,8010734 <_strtod_r+0x6cc>
 80105f4:	d8c00e17 	ldw	r3,56(sp)
 80105f8:	183f6a26 	beq	r3,zero,80103a4 <__alt_data_end+0xfc0103a4>
 80105fc:	d9000e17 	ldw	r4,56(sp)
 8010600:	0103870e 	bge	zero,r4,8011420 <_strtod_r+0x13b8>
 8010604:	00c00584 	movi	r3,22
 8010608:	19030a16 	blt	r3,r4,8011234 <_strtod_r+0x11cc>
 801060c:	202290fa 	slli	r17,r4,3
 8010610:	008200b4 	movhi	r2,2050
 8010614:	10b8be04 	addi	r2,r2,-7432
 8010618:	1445883a 	add	r2,r2,r17
 801061c:	d9800817 	ldw	r6,32(sp)
 8010620:	d9c00717 	ldw	r7,28(sp)
 8010624:	11000017 	ldw	r4,0(r2)
 8010628:	11400117 	ldw	r5,4(r2)
 801062c:	8018a880 	call	8018a88 <__muldf3>
 8010630:	102b883a 	mov	r21,r2
 8010634:	1823883a 	mov	r17,r3
 8010638:	003f7506 	br	8010410 <__alt_data_end+0xfc010410>
 801063c:	00c00044 	movi	r3,1
 8010640:	0023883a 	mov	r17,zero
 8010644:	d8c00815 	stw	r3,32(sp)
 8010648:	3800021e 	bne	r7,zero,8010654 <_strtod_r+0x5ec>
 801064c:	d8c00717 	ldw	r3,28(sp)
 8010650:	183ed126 	beq	r3,zero,8010198 <__alt_data_end+0xfc010198>
 8010654:	002d883a 	mov	r22,zero
 8010658:	003f7206 	br	8010424 <__alt_data_end+0xfc010424>
 801065c:	90800047 	ldb	r2,1(r18)
 8010660:	00c01604 	movi	r3,88
 8010664:	10c22726 	beq	r2,r3,8010f04 <_strtod_r+0xe9c>
 8010668:	00c01e04 	movi	r3,120
 801066c:	10c22526 	beq	r2,r3,8010f04 <_strtod_r+0xe9c>
 8010670:	90800044 	addi	r2,r18,1
 8010674:	1025883a 	mov	r18,r2
 8010678:	d8800615 	stw	r2,24(sp)
 801067c:	10800044 	addi	r2,r2,1
 8010680:	173fffc3 	ldbu	fp,-1(r2)
 8010684:	e0c03fcc 	andi	r3,fp,255
 8010688:	18c0201c 	xori	r3,r3,128
 801068c:	18ffe004 	addi	r3,r3,-128
 8010690:	193ff826 	beq	r3,r4,8010674 <__alt_data_end+0xfc010674>
 8010694:	183f5c26 	beq	r3,zero,8010408 <__alt_data_end+0xfc010408>
 8010698:	00c00044 	movi	r3,1
 801069c:	dc800915 	stw	r18,36(sp)
 80106a0:	d8c00715 	stw	r3,28(sp)
 80106a4:	003ee306 	br	8010234 <__alt_data_end+0xfc010234>
 80106a8:	8009883a 	mov	r4,r16
 80106ac:	800db580 	call	800db58 <_localeconv_r>
 80106b0:	11000017 	ldw	r4,0(r2)
 80106b4:	80049680 	call	8004968 <strlen>
 80106b8:	dd400617 	ldw	r21,24(sp)
 80106bc:	a885883a 	add	r2,r21,r2
 80106c0:	d8800615 	stw	r2,24(sp)
 80106c4:	17000007 	ldb	fp,0(r2)
 80106c8:	b801b71e 	bne	r23,zero,8010da8 <_strtod_r+0xd40>
 80106cc:	01000c04 	movi	r4,48
 80106d0:	e103a51e 	bne	fp,r4,8011568 <_strtod_r+0x1500>
 80106d4:	11000044 	addi	r4,r2,1
 80106d8:	e00b883a 	mov	r5,fp
 80106dc:	d9000615 	stw	r4,24(sp)
 80106e0:	27000007 	ldb	fp,0(r4)
 80106e4:	208fc83a 	sub	r7,r4,r2
 80106e8:	21000044 	addi	r4,r4,1
 80106ec:	e17ffb26 	beq	fp,r5,80106dc <__alt_data_end+0xfc0106dc>
 80106f0:	e0bff3c4 	addi	r2,fp,-49
 80106f4:	01000204 	movi	r4,8
 80106f8:	2081f536 	bltu	r4,r2,8010ed0 <_strtod_r+0xe68>
 80106fc:	d9000617 	ldw	r4,24(sp)
 8010700:	e73ff404 	addi	fp,fp,-48
 8010704:	df000815 	stw	fp,32(sp)
 8010708:	d9000915 	stw	r4,36(sp)
 801070c:	3c400044 	addi	r17,r7,1
 8010710:	202b883a 	mov	r21,r4
 8010714:	05800044 	movi	r22,1
 8010718:	9009883a 	mov	r4,r18
 801071c:	01400284 	movi	r5,10
 8010720:	800334c0 	call	800334c <__mulsi3>
 8010724:	d8c00817 	ldw	r3,32(sp)
 8010728:	000f883a 	mov	r7,zero
 801072c:	18a5883a 	add	r18,r3,r2
 8010730:	0001a806 	br	8010dd4 <_strtod_r+0xd6c>
 8010734:	d9000e17 	ldw	r4,56(sp)
 8010738:	b463c83a 	sub	r17,r22,r17
 801073c:	2463883a 	add	r17,r4,r17
 8010740:	0442680e 	bge	zero,r17,80110e4 <_strtod_r+0x107c>
 8010744:	888003cc 	andi	r2,r17,15
 8010748:	10000b26 	beq	r2,zero,8010778 <_strtod_r+0x710>
 801074c:	100490fa 	slli	r2,r2,3
 8010750:	00c200b4 	movhi	r3,2050
 8010754:	18f8be04 	addi	r3,r3,-7432
 8010758:	1885883a 	add	r2,r3,r2
 801075c:	d9800817 	ldw	r6,32(sp)
 8010760:	d9c00717 	ldw	r7,28(sp)
 8010764:	11000017 	ldw	r4,0(r2)
 8010768:	11400117 	ldw	r5,4(r2)
 801076c:	8018a880 	call	8018a88 <__muldf3>
 8010770:	d8800815 	stw	r2,32(sp)
 8010774:	d8c00715 	stw	r3,28(sp)
 8010778:	04fffc04 	movi	r19,-16
 801077c:	8ce2703a 	and	r17,r17,r19
 8010780:	8801a31e 	bne	r17,zero,8010e10 <_strtod_r+0xda8>
 8010784:	dd400817 	ldw	r21,32(sp)
 8010788:	dc400717 	ldw	r17,28(sp)
 801078c:	d8001215 	stw	zero,72(sp)
 8010790:	d9400917 	ldw	r5,36(sp)
 8010794:	8009883a 	mov	r4,r16
 8010798:	b00f883a 	mov	r7,r22
 801079c:	dc800015 	stw	r18,0(sp)
 80107a0:	b80d883a 	mov	r6,r23
 80107a4:	800e5840 	call	800e584 <__s2b>
 80107a8:	d8800d15 	stw	r2,52(sp)
 80107ac:	d8800e17 	ldw	r2,56(sp)
 80107b0:	d9000d17 	ldw	r4,52(sp)
 80107b4:	dd801217 	ldw	r22,72(sp)
 80107b8:	1007d7fa 	srai	r3,r2,31
 80107bc:	0085c83a 	sub	r2,zero,r2
 80107c0:	21000304 	addi	r4,r4,12
 80107c4:	1886703a 	and	r3,r3,r2
 80107c8:	d9001115 	stw	r4,68(sp)
 80107cc:	d8c00915 	stw	r3,36(sp)
 80107d0:	d8800d17 	ldw	r2,52(sp)
 80107d4:	8009883a 	mov	r4,r16
 80107d8:	0029883a 	mov	r20,zero
 80107dc:	11400117 	ldw	r5,4(r2)
 80107e0:	800e3780 	call	800e378 <_Balloc>
 80107e4:	d8c00d17 	ldw	r3,52(sp)
 80107e8:	d9401117 	ldw	r5,68(sp)
 80107ec:	11000304 	addi	r4,r2,12
 80107f0:	19800417 	ldw	r6,16(r3)
 80107f4:	1027883a 	mov	r19,r2
 80107f8:	31800084 	addi	r6,r6,2
 80107fc:	318d883a 	add	r6,r6,r6
 8010800:	318d883a 	add	r6,r6,r6
 8010804:	800e0e40 	call	800e0e4 <memcpy>
 8010808:	d8800204 	addi	r2,sp,8
 801080c:	8009883a 	mov	r4,r16
 8010810:	a80b883a 	mov	r5,r21
 8010814:	880d883a 	mov	r6,r17
 8010818:	d9c00404 	addi	r7,sp,16
 801081c:	d8800015 	stw	r2,0(sp)
 8010820:	800f0680 	call	800f068 <__d2b>
 8010824:	8009883a 	mov	r4,r16
 8010828:	01400044 	movi	r5,1
 801082c:	d8800515 	stw	r2,20(sp)
 8010830:	800e7a00 	call	800e7a0 <__i2b>
 8010834:	d8c00e17 	ldw	r3,56(sp)
 8010838:	1025883a 	mov	r18,r2
 801083c:	00c0010e 	bge	zero,r3,8010844 <_strtod_r+0x7dc>
 8010840:	1829883a 	mov	r20,r3
 8010844:	d8800417 	ldw	r2,16(sp)
 8010848:	1000dc16 	blt	r2,zero,8010bbc <_strtod_r+0xb54>
 801084c:	d9000917 	ldw	r4,36(sp)
 8010850:	a02f883a 	mov	r23,r20
 8010854:	20b9883a 	add	fp,r4,r2
 8010858:	d9000217 	ldw	r4,8(sp)
 801085c:	1585c83a 	sub	r2,r2,r22
 8010860:	00ff00c4 	movi	r3,-1021
 8010864:	110b883a 	add	r5,r2,r4
 8010868:	28c09e0e 	bge	r5,r3,8010ae4 <_strtod_r+0xa7c>
 801086c:	10810cc4 	addi	r2,r2,1075
 8010870:	e087883a 	add	r3,fp,r2
 8010874:	b885883a 	add	r2,r23,r2
 8010878:	15af883a 	add	r23,r2,r22
 801087c:	1805883a 	mov	r2,r3
 8010880:	e0c0010e 	bge	fp,r3,8010888 <_strtod_r+0x820>
 8010884:	e005883a 	mov	r2,fp
 8010888:	b880010e 	bge	r23,r2,8010890 <_strtod_r+0x828>
 801088c:	b805883a 	mov	r2,r23
 8010890:	0080030e 	bge	zero,r2,80108a0 <_strtod_r+0x838>
 8010894:	1887c83a 	sub	r3,r3,r2
 8010898:	b8afc83a 	sub	r23,r23,r2
 801089c:	e0b9c83a 	sub	fp,fp,r2
 80108a0:	d8800917 	ldw	r2,36(sp)
 80108a4:	10001126 	beq	r2,zero,80108ec <_strtod_r+0x884>
 80108a8:	900b883a 	mov	r5,r18
 80108ac:	100d883a 	mov	r6,r2
 80108b0:	8009883a 	mov	r4,r16
 80108b4:	d8c01415 	stw	r3,80(sp)
 80108b8:	800ea6c0 	call	800ea6c <__pow5mult>
 80108bc:	d9800517 	ldw	r6,20(sp)
 80108c0:	8009883a 	mov	r4,r16
 80108c4:	100b883a 	mov	r5,r2
 80108c8:	1025883a 	mov	r18,r2
 80108cc:	800e7dc0 	call	800e7dc <__multiply>
 80108d0:	d9400517 	ldw	r5,20(sp)
 80108d4:	8009883a 	mov	r4,r16
 80108d8:	d8801315 	stw	r2,76(sp)
 80108dc:	800e4200 	call	800e420 <_Bfree>
 80108e0:	d8801317 	ldw	r2,76(sp)
 80108e4:	d8c01417 	ldw	r3,80(sp)
 80108e8:	d8800515 	stw	r2,20(sp)
 80108ec:	00c0050e 	bge	zero,r3,8010904 <_strtod_r+0x89c>
 80108f0:	d9400517 	ldw	r5,20(sp)
 80108f4:	8009883a 	mov	r4,r16
 80108f8:	180d883a 	mov	r6,r3
 80108fc:	800ebac0 	call	800ebac <__lshift>
 8010900:	d8800515 	stw	r2,20(sp)
 8010904:	a0000526 	beq	r20,zero,801091c <_strtod_r+0x8b4>
 8010908:	980b883a 	mov	r5,r19
 801090c:	8009883a 	mov	r4,r16
 8010910:	a00d883a 	mov	r6,r20
 8010914:	800ea6c0 	call	800ea6c <__pow5mult>
 8010918:	1027883a 	mov	r19,r2
 801091c:	05c0050e 	bge	zero,r23,8010934 <_strtod_r+0x8cc>
 8010920:	980b883a 	mov	r5,r19
 8010924:	8009883a 	mov	r4,r16
 8010928:	b80d883a 	mov	r6,r23
 801092c:	800ebac0 	call	800ebac <__lshift>
 8010930:	1027883a 	mov	r19,r2
 8010934:	0700050e 	bge	zero,fp,801094c <_strtod_r+0x8e4>
 8010938:	900b883a 	mov	r5,r18
 801093c:	8009883a 	mov	r4,r16
 8010940:	e00d883a 	mov	r6,fp
 8010944:	800ebac0 	call	800ebac <__lshift>
 8010948:	1025883a 	mov	r18,r2
 801094c:	d9400517 	ldw	r5,20(sp)
 8010950:	8009883a 	mov	r4,r16
 8010954:	980d883a 	mov	r6,r19
 8010958:	800ed540 	call	800ed54 <__mdiff>
 801095c:	10c00317 	ldw	r3,12(r2)
 8010960:	1009883a 	mov	r4,r2
 8010964:	10000315 	stw	zero,12(r2)
 8010968:	900b883a 	mov	r5,r18
 801096c:	1029883a 	mov	r20,r2
 8010970:	d8c00b15 	stw	r3,44(sp)
 8010974:	800ecf40 	call	800ecf4 <__mcmp>
 8010978:	10017616 	blt	r2,zero,8010f54 <_strtod_r+0xeec>
 801097c:	1001b626 	beq	r2,zero,8011058 <_strtod_r+0xff0>
 8010980:	a009883a 	mov	r4,r20
 8010984:	900b883a 	mov	r5,r18
 8010988:	800f1a40 	call	800f1a4 <__ratio>
 801098c:	1009883a 	mov	r4,r2
 8010990:	180b883a 	mov	r5,r3
 8010994:	000d883a 	mov	r6,zero
 8010998:	01d00034 	movhi	r7,16384
 801099c:	182f883a 	mov	r23,r3
 80109a0:	d8801315 	stw	r2,76(sp)
 80109a4:	80189a80 	call	80189a8 <__ledf2>
 80109a8:	da001317 	ldw	r8,76(sp)
 80109ac:	00805016 	blt	zero,r2,8010af0 <_strtod_r+0xa88>
 80109b0:	d9000b17 	ldw	r4,44(sp)
 80109b4:	20008426 	beq	r4,zero,8010bc8 <_strtod_r+0xb60>
 80109b8:	05cffc34 	movhi	r23,16368
 80109bc:	0039883a 	mov	fp,zero
 80109c0:	d8000f15 	stw	zero,60(sp)
 80109c4:	ddc00a15 	stw	r23,40(sp)
 80109c8:	d8800717 	ldw	r2,28(sp)
 80109cc:	125ffc2c 	andhi	r9,r2,32752
 80109d0:	009ff834 	movhi	r2,32736
 80109d4:	48805626 	beq	r9,r2,8010b30 <_strtod_r+0xac8>
 80109d8:	b0001e26 	beq	r22,zero,8010a54 <_strtod_r+0x9ec>
 80109dc:	0081a834 	movhi	r2,1696
 80109e0:	12401c36 	bltu	r2,r9,8010a54 <_strtod_r+0x9ec>
 80109e4:	d9000f17 	ldw	r4,60(sp)
 80109e8:	d9400a17 	ldw	r5,40(sp)
 80109ec:	01d07834 	movhi	r7,16864
 80109f0:	39ffffc4 	addi	r7,r7,-1
 80109f4:	01bff034 	movhi	r6,65472
 80109f8:	da401315 	stw	r9,76(sp)
 80109fc:	80189a80 	call	80189a8 <__ledf2>
 8010a00:	da401317 	ldw	r9,76(sp)
 8010a04:	00801016 	blt	zero,r2,8010a48 <_strtod_r+0x9e0>
 8010a08:	d9000f17 	ldw	r4,60(sp)
 8010a0c:	d9400a17 	ldw	r5,40(sp)
 8010a10:	80166480 	call	8016648 <__fixunsdfsi>
 8010a14:	da401317 	ldw	r9,76(sp)
 8010a18:	1000dc26 	beq	r2,zero,8010d8c <_strtod_r+0xd24>
 8010a1c:	1009883a 	mov	r4,r2
 8010a20:	8019d1c0 	call	8019d1c <__floatunsidf>
 8010a24:	da401317 	ldw	r9,76(sp)
 8010a28:	d8800f15 	stw	r2,60(sp)
 8010a2c:	d8c00a15 	stw	r3,40(sp)
 8010a30:	d8c00b17 	ldw	r3,44(sp)
 8010a34:	1800d31e 	bne	r3,zero,8010d84 <_strtod_r+0xd1c>
 8010a38:	d9000a17 	ldw	r4,40(sp)
 8010a3c:	2220003c 	xorhi	r8,r4,32768
 8010a40:	df000f17 	ldw	fp,60(sp)
 8010a44:	402f883a 	mov	r23,r8
 8010a48:	0081ac34 	movhi	r2,1712
 8010a4c:	b891883a 	add	r8,r23,r2
 8010a50:	426fc83a 	sub	r23,r8,r9
 8010a54:	a809883a 	mov	r4,r21
 8010a58:	880b883a 	mov	r5,r17
 8010a5c:	da401315 	stw	r9,76(sp)
 8010a60:	800eeec0 	call	800eeec <__ulp>
 8010a64:	b80b883a 	mov	r5,r23
 8010a68:	e009883a 	mov	r4,fp
 8010a6c:	100d883a 	mov	r6,r2
 8010a70:	180f883a 	mov	r7,r3
 8010a74:	8018a880 	call	8018a88 <__muldf3>
 8010a78:	a809883a 	mov	r4,r21
 8010a7c:	880b883a 	mov	r5,r17
 8010a80:	100d883a 	mov	r6,r2
 8010a84:	180f883a 	mov	r7,r3
 8010a88:	80176280 	call	8017628 <__adddf3>
 8010a8c:	da401317 	ldw	r9,76(sp)
 8010a90:	102b883a 	mov	r21,r2
 8010a94:	1823883a 	mov	r17,r3
 8010a98:	d8800815 	stw	r2,32(sp)
 8010a9c:	d8c00715 	stw	r3,28(sp)
 8010aa0:	182f883a 	mov	r23,r3
 8010aa4:	b000021e 	bne	r22,zero,8010ab0 <_strtod_r+0xa48>
 8010aa8:	b89ffc2c 	andhi	r2,r23,32752
 8010aac:	48806e26 	beq	r9,r2,8010c68 <_strtod_r+0xc00>
 8010ab0:	d9400517 	ldw	r5,20(sp)
 8010ab4:	8009883a 	mov	r4,r16
 8010ab8:	800e4200 	call	800e420 <_Bfree>
 8010abc:	8009883a 	mov	r4,r16
 8010ac0:	980b883a 	mov	r5,r19
 8010ac4:	800e4200 	call	800e420 <_Bfree>
 8010ac8:	8009883a 	mov	r4,r16
 8010acc:	900b883a 	mov	r5,r18
 8010ad0:	800e4200 	call	800e420 <_Bfree>
 8010ad4:	8009883a 	mov	r4,r16
 8010ad8:	a00b883a 	mov	r5,r20
 8010adc:	800e4200 	call	800e420 <_Bfree>
 8010ae0:	003f3b06 	br	80107d0 <__alt_data_end+0xfc0107d0>
 8010ae4:	00c00d84 	movi	r3,54
 8010ae8:	1905c83a 	sub	r2,r3,r4
 8010aec:	003f6006 	br	8010870 <__alt_data_end+0xfc010870>
 8010af0:	4009883a 	mov	r4,r8
 8010af4:	b80b883a 	mov	r5,r23
 8010af8:	000d883a 	mov	r6,zero
 8010afc:	01cff834 	movhi	r7,16352
 8010b00:	8018a880 	call	8018a88 <__muldf3>
 8010b04:	d9000b17 	ldw	r4,44(sp)
 8010b08:	d8800f15 	stw	r2,60(sp)
 8010b0c:	d8c00a15 	stw	r3,40(sp)
 8010b10:	2000481e 	bne	r4,zero,8010c34 <_strtod_r+0xbcc>
 8010b14:	1a20003c 	xorhi	r8,r3,32768
 8010b18:	1039883a 	mov	fp,r2
 8010b1c:	d8800717 	ldw	r2,28(sp)
 8010b20:	402f883a 	mov	r23,r8
 8010b24:	125ffc2c 	andhi	r9,r2,32752
 8010b28:	009ff834 	movhi	r2,32736
 8010b2c:	48bfaa1e 	bne	r9,r2,80109d8 <__alt_data_end+0xfc0109d8>
 8010b30:	d8c00717 	ldw	r3,28(sp)
 8010b34:	00bf2c34 	movhi	r2,64688
 8010b38:	d9000817 	ldw	r4,32(sp)
 8010b3c:	1887883a 	add	r3,r3,r2
 8010b40:	180b883a 	mov	r5,r3
 8010b44:	da401315 	stw	r9,76(sp)
 8010b48:	d8c00715 	stw	r3,28(sp)
 8010b4c:	800eeec0 	call	800eeec <__ulp>
 8010b50:	e009883a 	mov	r4,fp
 8010b54:	b80b883a 	mov	r5,r23
 8010b58:	100d883a 	mov	r6,r2
 8010b5c:	180f883a 	mov	r7,r3
 8010b60:	8018a880 	call	8018a88 <__muldf3>
 8010b64:	d9000817 	ldw	r4,32(sp)
 8010b68:	d9400717 	ldw	r5,28(sp)
 8010b6c:	100d883a 	mov	r6,r2
 8010b70:	180f883a 	mov	r7,r3
 8010b74:	80176280 	call	8017628 <__adddf3>
 8010b78:	011f2834 	movhi	r4,31904
 8010b7c:	d8800815 	stw	r2,32(sp)
 8010b80:	213fffc4 	addi	r4,r4,-1
 8010b84:	189ffc2c 	andhi	r2,r3,32752
 8010b88:	da401317 	ldw	r9,76(sp)
 8010b8c:	2080762e 	bgeu	r4,r2,8010d68 <_strtod_r+0xd00>
 8010b90:	009ffc34 	movhi	r2,32752
 8010b94:	10bfffc4 	addi	r2,r2,-1
 8010b98:	88814526 	beq	r17,r2,80110b0 <_strtod_r+0x1048>
 8010b9c:	00dffc34 	movhi	r3,32752
 8010ba0:	18ffffc4 	addi	r3,r3,-1
 8010ba4:	013fffc4 	movi	r4,-1
 8010ba8:	d8c00715 	stw	r3,28(sp)
 8010bac:	d9000815 	stw	r4,32(sp)
 8010bb0:	202b883a 	mov	r21,r4
 8010bb4:	1823883a 	mov	r17,r3
 8010bb8:	003fbd06 	br	8010ab0 <__alt_data_end+0xfc010ab0>
 8010bbc:	a0afc83a 	sub	r23,r20,r2
 8010bc0:	df000917 	ldw	fp,36(sp)
 8010bc4:	003f2406 	br	8010858 <__alt_data_end+0xfc010858>
 8010bc8:	d8800817 	ldw	r2,32(sp)
 8010bcc:	10001b1e 	bne	r2,zero,8010c3c <_strtod_r+0xbd4>
 8010bd0:	d8c00717 	ldw	r3,28(sp)
 8010bd4:	01000434 	movhi	r4,16
 8010bd8:	213fffc4 	addi	r4,r4,-1
 8010bdc:	1904703a 	and	r2,r3,r4
 8010be0:	10001b1e 	bne	r2,zero,8010c50 <_strtod_r+0xbe8>
 8010be4:	4009883a 	mov	r4,r8
 8010be8:	b80b883a 	mov	r5,r23
 8010bec:	000d883a 	mov	r6,zero
 8010bf0:	01cffc34 	movhi	r7,16368
 8010bf4:	da001315 	stw	r8,76(sp)
 8010bf8:	80189a80 	call	80189a8 <__ledf2>
 8010bfc:	da001317 	ldw	r8,76(sp)
 8010c00:	10017c16 	blt	r2,zero,80111f4 <_strtod_r+0x118c>
 8010c04:	4009883a 	mov	r4,r8
 8010c08:	b80b883a 	mov	r5,r23
 8010c0c:	000d883a 	mov	r6,zero
 8010c10:	01cff834 	movhi	r7,16352
 8010c14:	8018a880 	call	8018a88 <__muldf3>
 8010c18:	d8800f15 	stw	r2,60(sp)
 8010c1c:	d8c00a15 	stw	r3,40(sp)
 8010c20:	102f883a 	mov	r23,r2
 8010c24:	1a20003c 	xorhi	r8,r3,32768
 8010c28:	b839883a 	mov	fp,r23
 8010c2c:	402f883a 	mov	r23,r8
 8010c30:	003f6506 	br	80109c8 <__alt_data_end+0xfc0109c8>
 8010c34:	da000a17 	ldw	r8,40(sp)
 8010c38:	003fb706 	br	8010b18 <__alt_data_end+0xfc010b18>
 8010c3c:	d8c00817 	ldw	r3,32(sp)
 8010c40:	00800044 	movi	r2,1
 8010c44:	1880021e 	bne	r3,r2,8010c50 <_strtod_r+0xbe8>
 8010c48:	d9000717 	ldw	r4,28(sp)
 8010c4c:	2000a726 	beq	r4,zero,8010eec <_strtod_r+0xe84>
 8010c50:	008ffc34 	movhi	r2,16368
 8010c54:	0039883a 	mov	fp,zero
 8010c58:	05effc34 	movhi	r23,49136
 8010c5c:	d8000f15 	stw	zero,60(sp)
 8010c60:	d8800a15 	stw	r2,40(sp)
 8010c64:	003f5806 	br	80109c8 <__alt_data_end+0xfc0109c8>
 8010c68:	d9400a17 	ldw	r5,40(sp)
 8010c6c:	d9000f17 	ldw	r4,60(sp)
 8010c70:	8019bc40 	call	8019bc4 <__fixdfsi>
 8010c74:	1009883a 	mov	r4,r2
 8010c78:	8019c4c0 	call	8019c4c <__floatsidf>
 8010c7c:	d9000f17 	ldw	r4,60(sp)
 8010c80:	d9400a17 	ldw	r5,40(sp)
 8010c84:	100d883a 	mov	r6,r2
 8010c88:	180f883a 	mov	r7,r3
 8010c8c:	80192f40 	call	80192f4 <__subdf3>
 8010c90:	1011883a 	mov	r8,r2
 8010c94:	d8800b17 	ldw	r2,44(sp)
 8010c98:	10001f1e 	bne	r2,zero,8010d18 <_strtod_r+0xcb0>
 8010c9c:	d9000817 	ldw	r4,32(sp)
 8010ca0:	20001d1e 	bne	r4,zero,8010d18 <_strtod_r+0xcb0>
 8010ca4:	00800434 	movhi	r2,16
 8010ca8:	10bfffc4 	addi	r2,r2,-1
 8010cac:	b8ae703a 	and	r23,r23,r2
 8010cb0:	b800191e 	bne	r23,zero,8010d18 <_strtod_r+0xcb0>
 8010cb4:	01a52834 	movhi	r6,38048
 8010cb8:	01cff434 	movhi	r7,16336
 8010cbc:	318d6544 	addi	r6,r6,13717
 8010cc0:	39ffffc4 	addi	r7,r7,-1
 8010cc4:	4009883a 	mov	r4,r8
 8010cc8:	180b883a 	mov	r5,r3
 8010ccc:	80189a80 	call	80189a8 <__ledf2>
 8010cd0:	103f770e 	bge	r2,zero,8010ab0 <__alt_data_end+0xfc010ab0>
 8010cd4:	a02d883a 	mov	r22,r20
 8010cd8:	d9400517 	ldw	r5,20(sp)
 8010cdc:	8009883a 	mov	r4,r16
 8010ce0:	800e4200 	call	800e420 <_Bfree>
 8010ce4:	8009883a 	mov	r4,r16
 8010ce8:	980b883a 	mov	r5,r19
 8010cec:	800e4200 	call	800e420 <_Bfree>
 8010cf0:	8009883a 	mov	r4,r16
 8010cf4:	900b883a 	mov	r5,r18
 8010cf8:	800e4200 	call	800e420 <_Bfree>
 8010cfc:	d9400d17 	ldw	r5,52(sp)
 8010d00:	8009883a 	mov	r4,r16
 8010d04:	800e4200 	call	800e420 <_Bfree>
 8010d08:	8009883a 	mov	r4,r16
 8010d0c:	b00b883a 	mov	r5,r22
 8010d10:	800e4200 	call	800e420 <_Bfree>
 8010d14:	003dbe06 	br	8010410 <__alt_data_end+0xfc010410>
 8010d18:	01a52834 	movhi	r6,38048
 8010d1c:	01cff834 	movhi	r7,16352
 8010d20:	4009883a 	mov	r4,r8
 8010d24:	180b883a 	mov	r5,r3
 8010d28:	318d6544 	addi	r6,r6,13717
 8010d2c:	39ffffc4 	addi	r7,r7,-1
 8010d30:	d8c01415 	stw	r3,80(sp)
 8010d34:	da001315 	stw	r8,76(sp)
 8010d38:	80189a80 	call	80189a8 <__ledf2>
 8010d3c:	d8c01417 	ldw	r3,80(sp)
 8010d40:	da001317 	ldw	r8,76(sp)
 8010d44:	103fe316 	blt	r2,zero,8010cd4 <__alt_data_end+0xfc010cd4>
 8010d48:	018d6c34 	movhi	r6,13744
 8010d4c:	31b94d44 	addi	r6,r6,-6859
 8010d50:	4009883a 	mov	r4,r8
 8010d54:	180b883a 	mov	r5,r3
 8010d58:	01cff834 	movhi	r7,16352
 8010d5c:	80188c80 	call	80188c8 <__gedf2>
 8010d60:	00bf530e 	bge	zero,r2,8010ab0 <__alt_data_end+0xfc010ab0>
 8010d64:	003fdb06 	br	8010cd4 <__alt_data_end+0xfc010cd4>
 8010d68:	0080d434 	movhi	r2,848
 8010d6c:	1887883a 	add	r3,r3,r2
 8010d70:	d8c00715 	stw	r3,28(sp)
 8010d74:	182f883a 	mov	r23,r3
 8010d78:	dd400817 	ldw	r21,32(sp)
 8010d7c:	1823883a 	mov	r17,r3
 8010d80:	003f4806 	br	8010aa4 <__alt_data_end+0xfc010aa4>
 8010d84:	da000a17 	ldw	r8,40(sp)
 8010d88:	003f2d06 	br	8010a40 <__alt_data_end+0xfc010a40>
 8010d8c:	008ffc34 	movhi	r2,16368
 8010d90:	d8000f15 	stw	zero,60(sp)
 8010d94:	d8800a15 	stw	r2,40(sp)
 8010d98:	003f2506 	br	8010a30 <__alt_data_end+0xfc010a30>
 8010d9c:	dcc00615 	stw	r19,24(sp)
 8010da0:	002b883a 	mov	r21,zero
 8010da4:	003d5806 	br	8010308 <__alt_data_end+0xfc010308>
 8010da8:	b82d883a 	mov	r22,r23
 8010dac:	000f883a 	mov	r7,zero
 8010db0:	0023883a 	mov	r17,zero
 8010db4:	e1bff404 	addi	r6,fp,-48
 8010db8:	00800244 	movi	r2,9
 8010dbc:	11801136 	bltu	r2,r6,8010e04 <_strtod_r+0xd9c>
 8010dc0:	d9800815 	stw	r6,32(sp)
 8010dc4:	38800044 	addi	r2,r7,1
 8010dc8:	3001341e 	bne	r6,zero,801129c <_strtod_r+0x1234>
 8010dcc:	dd400617 	ldw	r21,24(sp)
 8010dd0:	100f883a 	mov	r7,r2
 8010dd4:	a8800044 	addi	r2,r21,1
 8010dd8:	d8800615 	stw	r2,24(sp)
 8010ddc:	af000047 	ldb	fp,1(r21)
 8010de0:	003ff406 	br	8010db4 <__alt_data_end+0xfc010db4>
 8010de4:	00c00044 	movi	r3,1
 8010de8:	d8c00a15 	stw	r3,40(sp)
 8010dec:	98800084 	addi	r2,r19,2
 8010df0:	d8800615 	stw	r2,24(sp)
 8010df4:	9f000087 	ldb	fp,2(r19)
 8010df8:	003d9406 	br	801044c <__alt_data_end+0xfc01044c>
 8010dfc:	d8000a15 	stw	zero,40(sp)
 8010e00:	003ffa06 	br	8010dec <__alt_data_end+0xfc010dec>
 8010e04:	00c00044 	movi	r3,1
 8010e08:	d8c00815 	stw	r3,32(sp)
 8010e0c:	003d3906 	br	80102f4 <__alt_data_end+0xfc0102f4>
 8010e10:	00804d04 	movi	r2,308
 8010e14:	1440ae16 	blt	r2,r17,80110d0 <_strtod_r+0x1068>
 8010e18:	8827d13a 	srai	r19,r17,4
 8010e1c:	05400044 	movi	r21,1
 8010e20:	044200b4 	movhi	r17,2050
 8010e24:	8c78b404 	addi	r17,r17,-7472
 8010e28:	acc1ea0e 	bge	r21,r19,80115d4 <_strtod_r+0x156c>
 8010e2c:	d8800817 	ldw	r2,32(sp)
 8010e30:	d8c00717 	ldw	r3,28(sp)
 8010e34:	0029883a 	mov	r20,zero
 8010e38:	9980004c 	andi	r6,r19,1
 8010e3c:	30000726 	beq	r6,zero,8010e5c <_strtod_r+0xdf4>
 8010e40:	a00c90fa 	slli	r6,r20,3
 8010e44:	1009883a 	mov	r4,r2
 8010e48:	180b883a 	mov	r5,r3
 8010e4c:	8985883a 	add	r2,r17,r6
 8010e50:	11800017 	ldw	r6,0(r2)
 8010e54:	11c00117 	ldw	r7,4(r2)
 8010e58:	8018a880 	call	8018a88 <__muldf3>
 8010e5c:	9827d07a 	srai	r19,r19,1
 8010e60:	a5000044 	addi	r20,r20,1
 8010e64:	9d7ff41e 	bne	r19,r21,8010e38 <__alt_data_end+0xfc010e38>
 8010e68:	d8800815 	stw	r2,32(sp)
 8010e6c:	d8c00715 	stw	r3,28(sp)
 8010e70:	a02890fa 	slli	r20,r20,3
 8010e74:	d8800717 	ldw	r2,28(sp)
 8010e78:	d9800817 	ldw	r6,32(sp)
 8010e7c:	8d23883a 	add	r17,r17,r20
 8010e80:	89000017 	ldw	r4,0(r17)
 8010e84:	89400117 	ldw	r5,4(r17)
 8010e88:	01ff2c34 	movhi	r7,64688
 8010e8c:	11cf883a 	add	r7,r2,r7
 8010e90:	8018a880 	call	8018a88 <__muldf3>
 8010e94:	d8800815 	stw	r2,32(sp)
 8010e98:	011f2834 	movhi	r4,31904
 8010e9c:	189ffc2c 	andhi	r2,r3,32752
 8010ea0:	20808b36 	bltu	r4,r2,80110d0 <_strtod_r+0x1068>
 8010ea4:	011f2434 	movhi	r4,31888
 8010ea8:	2081b12e 	bgeu	r4,r2,8011570 <_strtod_r+0x1508>
 8010eac:	00dffc34 	movhi	r3,32752
 8010eb0:	18ffffc4 	addi	r3,r3,-1
 8010eb4:	013fffc4 	movi	r4,-1
 8010eb8:	d8c00715 	stw	r3,28(sp)
 8010ebc:	d9000815 	stw	r4,32(sp)
 8010ec0:	202b883a 	mov	r21,r4
 8010ec4:	1823883a 	mov	r17,r3
 8010ec8:	d8001215 	stw	zero,72(sp)
 8010ecc:	003e3006 	br	8010790 <__alt_data_end+0xfc010790>
 8010ed0:	00801944 	movi	r2,101
 8010ed4:	e0bdd926 	beq	fp,r2,801063c <__alt_data_end+0xfc01063c>
 8010ed8:	00c00044 	movi	r3,1
 8010edc:	002d883a 	mov	r22,zero
 8010ee0:	0023883a 	mov	r17,zero
 8010ee4:	d8c00815 	stw	r3,32(sp)
 8010ee8:	003d0406 	br	80102fc <__alt_data_end+0xfc0102fc>
 8010eec:	a02d883a 	mov	r22,r20
 8010ef0:	00800884 	movi	r2,34
 8010ef4:	80800015 	stw	r2,0(r16)
 8010ef8:	002b883a 	mov	r21,zero
 8010efc:	0023883a 	mov	r17,zero
 8010f00:	003f7506 	br	8010cd8 <__alt_data_end+0xfc010cd8>
 8010f04:	d8c01017 	ldw	r3,64(sp)
 8010f08:	04c200b4 	movhi	r19,2050
 8010f0c:	d8800504 	addi	r2,sp,20
 8010f10:	9cfba104 	addi	r19,r19,-4476
 8010f14:	d8800015 	stw	r2,0(sp)
 8010f18:	d8c00115 	stw	r3,4(sp)
 8010f1c:	8009883a 	mov	r4,r16
 8010f20:	d9400604 	addi	r5,sp,24
 8010f24:	980d883a 	mov	r6,r19
 8010f28:	d9c00404 	addi	r7,sp,16
 8010f2c:	80156840 	call	8015684 <__gethex>
 8010f30:	144001cc 	andi	r17,r2,7
 8010f34:	883d3426 	beq	r17,zero,8010408 <__alt_data_end+0xfc010408>
 8010f38:	00c00184 	movi	r3,6
 8010f3c:	88c0fc1e 	bne	r17,r3,8011330 <_strtod_r+0x12c8>
 8010f40:	94800044 	addi	r18,r18,1
 8010f44:	dc800615 	stw	r18,24(sp)
 8010f48:	002b883a 	mov	r21,zero
 8010f4c:	0023883a 	mov	r17,zero
 8010f50:	003d2f06 	br	8010410 <__alt_data_end+0xfc010410>
 8010f54:	df000b17 	ldw	fp,44(sp)
 8010f58:	a02d883a 	mov	r22,r20
 8010f5c:	e0003b1e 	bne	fp,zero,801104c <_strtod_r+0xfe4>
 8010f60:	d9000817 	ldw	r4,32(sp)
 8010f64:	2000391e 	bne	r4,zero,801104c <_strtod_r+0xfe4>
 8010f68:	d8c00717 	ldw	r3,28(sp)
 8010f6c:	00800434 	movhi	r2,16
 8010f70:	10bfffc4 	addi	r2,r2,-1
 8010f74:	1884703a 	and	r2,r3,r2
 8010f78:	1000341e 	bne	r2,zero,801104c <_strtod_r+0xfe4>
 8010f7c:	1f1ffc2c 	andhi	fp,r3,32752
 8010f80:	0081ac34 	movhi	r2,1712
 8010f84:	1700312e 	bgeu	r2,fp,801104c <_strtod_r+0xfe4>
 8010f88:	a0800517 	ldw	r2,20(r20)
 8010f8c:	1000031e 	bne	r2,zero,8010f9c <_strtod_r+0xf34>
 8010f90:	a0800417 	ldw	r2,16(r20)
 8010f94:	00c00044 	movi	r3,1
 8010f98:	18802c0e 	bge	r3,r2,801104c <_strtod_r+0xfe4>
 8010f9c:	8009883a 	mov	r4,r16
 8010fa0:	a00b883a 	mov	r5,r20
 8010fa4:	01800044 	movi	r6,1
 8010fa8:	800ebac0 	call	800ebac <__lshift>
 8010fac:	1009883a 	mov	r4,r2
 8010fb0:	900b883a 	mov	r5,r18
 8010fb4:	102d883a 	mov	r22,r2
 8010fb8:	800ecf40 	call	800ecf4 <__mcmp>
 8010fbc:	0080230e 	bge	zero,r2,801104c <_strtod_r+0xfe4>
 8010fc0:	d8801217 	ldw	r2,72(sp)
 8010fc4:	10017a26 	beq	r2,zero,80115b0 <_strtod_r+0x1548>
 8010fc8:	0081ac34 	movhi	r2,1712
 8010fcc:	17017816 	blt	r2,fp,80115b0 <_strtod_r+0x1548>
 8010fd0:	0080dc34 	movhi	r2,880
 8010fd4:	173fc60e 	bge	r2,fp,8010ef0 <__alt_data_end+0xfc010ef0>
 8010fd8:	a809883a 	mov	r4,r21
 8010fdc:	880b883a 	mov	r5,r17
 8010fe0:	000d883a 	mov	r6,zero
 8010fe4:	01ce5434 	movhi	r7,14672
 8010fe8:	8018a880 	call	8018a88 <__muldf3>
 8010fec:	102b883a 	mov	r21,r2
 8010ff0:	1823883a 	mov	r17,r3
 8010ff4:	183f381e 	bne	r3,zero,8010cd8 <__alt_data_end+0xfc010cd8>
 8010ff8:	103f371e 	bne	r2,zero,8010cd8 <__alt_data_end+0xfc010cd8>
 8010ffc:	00800884 	movi	r2,34
 8011000:	80800015 	stw	r2,0(r16)
 8011004:	003f3406 	br	8010cd8 <__alt_data_end+0xfc010cd8>
 8011008:	d8801217 	ldw	r2,72(sp)
 801100c:	10016f26 	beq	r2,zero,80115cc <_strtod_r+0x1564>
 8011010:	209ffc2c 	andhi	r2,r4,32752
 8011014:	00c1a834 	movhi	r3,1696
 8011018:	18816c36 	bltu	r3,r2,80115cc <_strtod_r+0x1564>
 801101c:	1004d53a 	srli	r2,r2,20
 8011020:	00c01ac4 	movi	r3,107
 8011024:	1887c83a 	sub	r3,r3,r2
 8011028:	00bfffc4 	movi	r2,-1
 801102c:	10c4983a 	sll	r2,r2,r3
 8011030:	d8c00817 	ldw	r3,32(sp)
 8011034:	1880101e 	bne	r3,r2,8011078 <_strtod_r+0x1010>
 8011038:	d9000717 	ldw	r4,28(sp)
 801103c:	00800434 	movhi	r2,16
 8011040:	002b883a 	mov	r21,zero
 8011044:	245ffc2c 	andhi	r17,r4,32752
 8011048:	88a3883a 	add	r17,r17,r2
 801104c:	d8c01217 	ldw	r3,72(sp)
 8011050:	183fe11e 	bne	r3,zero,8010fd8 <__alt_data_end+0xfc010fd8>
 8011054:	003f2006 	br	8010cd8 <__alt_data_end+0xfc010cd8>
 8011058:	df000b17 	ldw	fp,44(sp)
 801105c:	00800434 	movhi	r2,16
 8011060:	a02d883a 	mov	r22,r20
 8011064:	10bfffc4 	addi	r2,r2,-1
 8011068:	e000aa26 	beq	fp,zero,8011314 <_strtod_r+0x12ac>
 801106c:	d9000717 	ldw	r4,28(sp)
 8011070:	2086703a 	and	r3,r4,r2
 8011074:	18bfe426 	beq	r3,r2,8011008 <__alt_data_end+0xfc011008>
 8011078:	d8c00817 	ldw	r3,32(sp)
 801107c:	1880004c 	andi	r2,r3,1
 8011080:	103ff226 	beq	r2,zero,801104c <__alt_data_end+0xfc01104c>
 8011084:	a809883a 	mov	r4,r21
 8011088:	880b883a 	mov	r5,r17
 801108c:	800eeec0 	call	800eeec <__ulp>
 8011090:	a809883a 	mov	r4,r21
 8011094:	880b883a 	mov	r5,r17
 8011098:	100d883a 	mov	r6,r2
 801109c:	180f883a 	mov	r7,r3
 80110a0:	80176280 	call	8017628 <__adddf3>
 80110a4:	102b883a 	mov	r21,r2
 80110a8:	1823883a 	mov	r17,r3
 80110ac:	003fe706 	br	801104c <__alt_data_end+0xfc01104c>
 80110b0:	00bfffc4 	movi	r2,-1
 80110b4:	a8beb91e 	bne	r21,r2,8010b9c <__alt_data_end+0xfc010b9c>
 80110b8:	00800884 	movi	r2,34
 80110bc:	80800015 	stw	r2,0(r16)
 80110c0:	002b883a 	mov	r21,zero
 80110c4:	045ffc34 	movhi	r17,32752
 80110c8:	a02d883a 	mov	r22,r20
 80110cc:	003f0206 	br	8010cd8 <__alt_data_end+0xfc010cd8>
 80110d0:	00800884 	movi	r2,34
 80110d4:	80800015 	stw	r2,0(r16)
 80110d8:	002b883a 	mov	r21,zero
 80110dc:	045ffc34 	movhi	r17,32752
 80110e0:	003ccb06 	br	8010410 <__alt_data_end+0xfc010410>
 80110e4:	883da726 	beq	r17,zero,8010784 <__alt_data_end+0xfc010784>
 80110e8:	0463c83a 	sub	r17,zero,r17
 80110ec:	888003cc 	andi	r2,r17,15
 80110f0:	10000b26 	beq	r2,zero,8011120 <_strtod_r+0x10b8>
 80110f4:	100490fa 	slli	r2,r2,3
 80110f8:	00c200b4 	movhi	r3,2050
 80110fc:	18f8be04 	addi	r3,r3,-7432
 8011100:	1885883a 	add	r2,r3,r2
 8011104:	d9000817 	ldw	r4,32(sp)
 8011108:	d9400717 	ldw	r5,28(sp)
 801110c:	11800017 	ldw	r6,0(r2)
 8011110:	11c00117 	ldw	r7,4(r2)
 8011114:	8017ec40 	call	8017ec4 <__divdf3>
 8011118:	d8800815 	stw	r2,32(sp)
 801111c:	d8c00715 	stw	r3,28(sp)
 8011120:	8823d13a 	srai	r17,r17,4
 8011124:	883d9726 	beq	r17,zero,8010784 <__alt_data_end+0xfc010784>
 8011128:	008007c4 	movi	r2,31
 801112c:	14402c16 	blt	r2,r17,80111e0 <_strtod_r+0x1178>
 8011130:	8880040c 	andi	r2,r17,16
 8011134:	10012e26 	beq	r2,zero,80115f0 <_strtod_r+0x1588>
 8011138:	0441430e 	bge	zero,r17,8011648 <_strtod_r+0x15e0>
 801113c:	00801a84 	movi	r2,106
 8011140:	d8801215 	stw	r2,72(sp)
 8011144:	d8800817 	ldw	r2,32(sp)
 8011148:	d8c00717 	ldw	r3,28(sp)
 801114c:	04c200b4 	movhi	r19,2050
 8011150:	9cf8f404 	addi	r19,r19,-7216
 8011154:	8980004c 	andi	r6,r17,1
 8011158:	30000526 	beq	r6,zero,8011170 <_strtod_r+0x1108>
 801115c:	99800017 	ldw	r6,0(r19)
 8011160:	99c00117 	ldw	r7,4(r19)
 8011164:	1009883a 	mov	r4,r2
 8011168:	180b883a 	mov	r5,r3
 801116c:	8018a880 	call	8018a88 <__muldf3>
 8011170:	8823d07a 	srai	r17,r17,1
 8011174:	9cc00204 	addi	r19,r19,8
 8011178:	047ff616 	blt	zero,r17,8011154 <__alt_data_end+0xfc011154>
 801117c:	d8c00715 	stw	r3,28(sp)
 8011180:	d8c01217 	ldw	r3,72(sp)
 8011184:	d8800815 	stw	r2,32(sp)
 8011188:	18000d26 	beq	r3,zero,80111c0 <_strtod_r+0x1158>
 801118c:	d9000717 	ldw	r4,28(sp)
 8011190:	00801ac4 	movi	r2,107
 8011194:	271ffc2c 	andhi	fp,r4,32752
 8011198:	e006d53a 	srli	r3,fp,20
 801119c:	10c5c83a 	sub	r2,r2,r3
 80111a0:	0080070e 	bge	zero,r2,80111c0 <_strtod_r+0x1158>
 80111a4:	00c007c4 	movi	r3,31
 80111a8:	1881210e 	bge	r3,r2,8011630 <_strtod_r+0x15c8>
 80111ac:	d8000815 	stw	zero,32(sp)
 80111b0:	00c00d04 	movi	r3,52
 80111b4:	1881270e 	bge	r3,r2,8011654 <_strtod_r+0x15ec>
 80111b8:	0080dc34 	movhi	r2,880
 80111bc:	d8800715 	stw	r2,28(sp)
 80111c0:	d9000817 	ldw	r4,32(sp)
 80111c4:	d9400717 	ldw	r5,28(sp)
 80111c8:	000d883a 	mov	r6,zero
 80111cc:	000f883a 	mov	r7,zero
 80111d0:	202b883a 	mov	r21,r4
 80111d4:	2823883a 	mov	r17,r5
 80111d8:	80188440 	call	8018844 <__eqdf2>
 80111dc:	103d6c1e 	bne	r2,zero,8010790 <__alt_data_end+0xfc010790>
 80111e0:	00800884 	movi	r2,34
 80111e4:	80800015 	stw	r2,0(r16)
 80111e8:	002b883a 	mov	r21,zero
 80111ec:	0023883a 	mov	r17,zero
 80111f0:	003c8706 	br	8010410 <__alt_data_end+0xfc010410>
 80111f4:	00cff834 	movhi	r3,16352
 80111f8:	002f883a 	mov	r23,zero
 80111fc:	022ff834 	movhi	r8,49120
 8011200:	d8000f15 	stw	zero,60(sp)
 8011204:	d8c00a15 	stw	r3,40(sp)
 8011208:	003e8706 	br	8010c28 <__alt_data_end+0xfc010c28>
 801120c:	011387c4 	movi	r4,19999
 8011210:	003cce06 	br	801054c <__alt_data_end+0xfc01054c>
 8011214:	e7003fcc 	andi	fp,fp,255
 8011218:	e700201c 	xori	fp,fp,128
 801121c:	e73fe004 	addi	fp,fp,-128
 8011220:	d9c00917 	ldw	r7,36(sp)
 8011224:	0029883a 	mov	r20,zero
 8011228:	0025883a 	mov	r18,zero
 801122c:	002f883a 	mov	r23,zero
 8011230:	003c1e06 	br	80102ac <__alt_data_end+0xfc0102ac>
 8011234:	d9000e17 	ldw	r4,56(sp)
 8011238:	00c00944 	movi	r3,37
 801123c:	1d87c83a 	sub	r3,r3,r22
 8011240:	193d3c16 	blt	r3,r4,8010734 <__alt_data_end+0xfc010734>
 8011244:	15a1c83a 	sub	r16,r2,r22
 8011248:	800690fa 	slli	r3,r16,3
 801124c:	044200b4 	movhi	r17,2050
 8011250:	8c78be04 	addi	r17,r17,-7432
 8011254:	88c7883a 	add	r3,r17,r3
 8011258:	d9800817 	ldw	r6,32(sp)
 801125c:	d9c00717 	ldw	r7,28(sp)
 8011260:	19000017 	ldw	r4,0(r3)
 8011264:	19400117 	ldw	r5,4(r3)
 8011268:	8018a880 	call	8018a88 <__muldf3>
 801126c:	d9000e17 	ldw	r4,56(sp)
 8011270:	180b883a 	mov	r5,r3
 8011274:	240dc83a 	sub	r6,r4,r16
 8011278:	300c90fa 	slli	r6,r6,3
 801127c:	1009883a 	mov	r4,r2
 8011280:	8985883a 	add	r2,r17,r6
 8011284:	11800017 	ldw	r6,0(r2)
 8011288:	11c00117 	ldw	r7,4(r2)
 801128c:	8018a880 	call	8018a88 <__muldf3>
 8011290:	102b883a 	mov	r21,r2
 8011294:	1823883a 	mov	r17,r3
 8011298:	003c5d06 	br	8010410 <__alt_data_end+0xfc010410>
 801129c:	88a3883a 	add	r17,r17,r2
 80112a0:	3800d126 	beq	r7,zero,80115e8 <_strtod_r+0x1580>
 80112a4:	dc000a15 	stw	r16,40(sp)
 80112a8:	3dab883a 	add	r21,r7,r22
 80112ac:	9021883a 	mov	r16,r18
 80112b0:	07000204 	movi	fp,8
 80112b4:	3025883a 	mov	r18,r6
 80112b8:	b5800044 	addi	r22,r22,1
 80112bc:	b0ffffc4 	addi	r3,r22,-1
 80112c0:	e0c00d16 	blt	fp,r3,80112f8 <_strtod_r+0x1290>
 80112c4:	8009883a 	mov	r4,r16
 80112c8:	01400284 	movi	r5,10
 80112cc:	800334c0 	call	800334c <__mulsi3>
 80112d0:	1021883a 	mov	r16,r2
 80112d4:	b57ff81e 	bne	r22,r21,80112b8 <__alt_data_end+0xfc0112b8>
 80112d8:	900d883a 	mov	r6,r18
 80112dc:	8025883a 	mov	r18,r16
 80112e0:	dc000a17 	ldw	r16,40(sp)
 80112e4:	00800204 	movi	r2,8
 80112e8:	ad800044 	addi	r22,r21,1
 80112ec:	15406f16 	blt	r2,r21,80114ac <_strtod_r+0x1444>
 80112f0:	dd400617 	ldw	r21,24(sp)
 80112f4:	003d0806 	br	8010718 <__alt_data_end+0xfc010718>
 80112f8:	00c00404 	movi	r3,16
 80112fc:	1dbff516 	blt	r3,r22,80112d4 <__alt_data_end+0xfc0112d4>
 8011300:	a009883a 	mov	r4,r20
 8011304:	01400284 	movi	r5,10
 8011308:	800334c0 	call	800334c <__mulsi3>
 801130c:	1029883a 	mov	r20,r2
 8011310:	003ff006 	br	80112d4 <__alt_data_end+0xfc0112d4>
 8011314:	d8c00717 	ldw	r3,28(sp)
 8011318:	1884703a 	and	r2,r3,r2
 801131c:	10004f1e 	bne	r2,zero,801145c <_strtod_r+0x13f4>
 8011320:	d9000817 	ldw	r4,32(sp)
 8011324:	20004d1e 	bne	r4,zero,801145c <_strtod_r+0x13f4>
 8011328:	1f1ffc2c 	andhi	fp,r3,32752
 801132c:	003f2406 	br	8010fc0 <__alt_data_end+0xfc010fc0>
 8011330:	d9800517 	ldw	r6,20(sp)
 8011334:	30000826 	beq	r6,zero,8011358 <_strtod_r+0x12f0>
 8011338:	99400017 	ldw	r5,0(r19)
 801133c:	d9000204 	addi	r4,sp,8
 8011340:	d8801315 	stw	r2,76(sp)
 8011344:	800f2bc0 	call	800f2bc <__copybits>
 8011348:	d9400517 	ldw	r5,20(sp)
 801134c:	8009883a 	mov	r4,r16
 8011350:	800e4200 	call	800e420 <_Bfree>
 8011354:	d8801317 	ldw	r2,76(sp)
 8011358:	00c00184 	movi	r3,6
 801135c:	d9000417 	ldw	r4,16(sp)
 8011360:	1c401036 	bltu	r3,r17,80113a4 <_strtod_r+0x133c>
 8011364:	882290ba 	slli	r17,r17,2
 8011368:	00c20074 	movhi	r3,2049
 801136c:	18c4df04 	addi	r3,r3,4988
 8011370:	88e3883a 	add	r17,r17,r3
 8011374:	88c00017 	ldw	r3,0(r17)
 8011378:	1800683a 	jmp	r3
 801137c:	080113bc 	xorhi	zero,at,1102
 8011380:	080113f4 	orhi	zero,at,1103
 8011384:	080113e0 	cmpeqi	zero,at,1103
 8011388:	08011398 	cmpnei	zero,at,1102
 801138c:	080113c8 	cmpgei	zero,at,1103
 8011390:	080113f4 	orhi	zero,at,1103
 8011394:	080113bc 	xorhi	zero,at,1102
 8011398:	00dffc34 	movhi	r3,32752
 801139c:	d8c00715 	stw	r3,28(sp)
 80113a0:	d8000815 	stw	zero,32(sp)
 80113a4:	1080020c 	andi	r2,r2,8
 80113a8:	dd400817 	ldw	r21,32(sp)
 80113ac:	103bfe26 	beq	r2,zero,80103a8 <__alt_data_end+0xfc0103a8>
 80113b0:	d9000717 	ldw	r4,28(sp)
 80113b4:	24600034 	orhi	r17,r4,32768
 80113b8:	003c1506 	br	8010410 <__alt_data_end+0xfc010410>
 80113bc:	d8000715 	stw	zero,28(sp)
 80113c0:	d8000815 	stw	zero,32(sp)
 80113c4:	003ff706 	br	80113a4 <__alt_data_end+0xfc0113a4>
 80113c8:	01200034 	movhi	r4,32768
 80113cc:	213fffc4 	addi	r4,r4,-1
 80113d0:	00ffffc4 	movi	r3,-1
 80113d4:	d9000715 	stw	r4,28(sp)
 80113d8:	d8c00815 	stw	r3,32(sp)
 80113dc:	003ff106 	br	80113a4 <__alt_data_end+0xfc0113a4>
 80113e0:	d9000217 	ldw	r4,8(sp)
 80113e4:	d8c00317 	ldw	r3,12(sp)
 80113e8:	d9000815 	stw	r4,32(sp)
 80113ec:	d8c00715 	stw	r3,28(sp)
 80113f0:	003fec06 	br	80113a4 <__alt_data_end+0xfc0113a4>
 80113f4:	20c10cc4 	addi	r3,r4,1075
 80113f8:	d9000217 	ldw	r4,8(sp)
 80113fc:	d9400317 	ldw	r5,12(sp)
 8011400:	1806953a 	slli	r3,r3,20
 8011404:	d9000815 	stw	r4,32(sp)
 8011408:	013ffc34 	movhi	r4,65520
 801140c:	213fffc4 	addi	r4,r4,-1
 8011410:	2908703a 	and	r4,r5,r4
 8011414:	1908b03a 	or	r4,r3,r4
 8011418:	d9000715 	stw	r4,28(sp)
 801141c:	003fe106 	br	80113a4 <__alt_data_end+0xfc0113a4>
 8011420:	d8c00e17 	ldw	r3,56(sp)
 8011424:	00bffa84 	movi	r2,-22
 8011428:	18bcc216 	blt	r3,r2,8010734 <__alt_data_end+0xfc010734>
 801142c:	182290fa 	slli	r17,r3,3
 8011430:	008200b4 	movhi	r2,2050
 8011434:	10b8be04 	addi	r2,r2,-7432
 8011438:	1445c83a 	sub	r2,r2,r17
 801143c:	d9000817 	ldw	r4,32(sp)
 8011440:	d9400717 	ldw	r5,28(sp)
 8011444:	11800017 	ldw	r6,0(r2)
 8011448:	11c00117 	ldw	r7,4(r2)
 801144c:	8017ec40 	call	8017ec4 <__divdf3>
 8011450:	102b883a 	mov	r21,r2
 8011454:	1823883a 	mov	r17,r3
 8011458:	003bed06 	br	8010410 <__alt_data_end+0xfc010410>
 801145c:	d8c00817 	ldw	r3,32(sp)
 8011460:	1880004c 	andi	r2,r3,1
 8011464:	103ef926 	beq	r2,zero,801104c <__alt_data_end+0xfc01104c>
 8011468:	a809883a 	mov	r4,r21
 801146c:	880b883a 	mov	r5,r17
 8011470:	800eeec0 	call	800eeec <__ulp>
 8011474:	a809883a 	mov	r4,r21
 8011478:	880b883a 	mov	r5,r17
 801147c:	100d883a 	mov	r6,r2
 8011480:	180f883a 	mov	r7,r3
 8011484:	80192f40 	call	80192f4 <__subdf3>
 8011488:	1009883a 	mov	r4,r2
 801148c:	180b883a 	mov	r5,r3
 8011490:	000d883a 	mov	r6,zero
 8011494:	000f883a 	mov	r7,zero
 8011498:	102b883a 	mov	r21,r2
 801149c:	1823883a 	mov	r17,r3
 80114a0:	80188440 	call	8018844 <__eqdf2>
 80114a4:	103e9226 	beq	r2,zero,8010ef0 <__alt_data_end+0xfc010ef0>
 80114a8:	003ee806 	br	801104c <__alt_data_end+0xfc01104c>
 80114ac:	00800404 	movi	r2,16
 80114b0:	1580360e 	bge	r2,r22,801158c <_strtod_r+0x1524>
 80114b4:	dd400617 	ldw	r21,24(sp)
 80114b8:	000f883a 	mov	r7,zero
 80114bc:	003e4506 	br	8010dd4 <__alt_data_end+0xfc010dd4>
 80114c0:	014200b4 	movhi	r5,2050
 80114c4:	d9000617 	ldw	r4,24(sp)
 80114c8:	2978f004 	addi	r5,r5,-7232
 80114cc:	01c00644 	movi	r7,25
 80114d0:	00000b06 	br	8011500 <_strtod_r+0x1498>
 80114d4:	21000044 	addi	r4,r4,1
 80114d8:	20800003 	ldbu	r2,0(r4)
 80114dc:	10ffefc4 	addi	r3,r2,-65
 80114e0:	10803fcc 	andi	r2,r2,255
 80114e4:	1080201c 	xori	r2,r2,128
 80114e8:	18c03fcc 	andi	r3,r3,255
 80114ec:	10bfe004 	addi	r2,r2,-128
 80114f0:	38c00136 	bltu	r7,r3,80114f8 <_strtod_r+0x1490>
 80114f4:	10800804 	addi	r2,r2,32
 80114f8:	29400044 	addi	r5,r5,1
 80114fc:	11bb261e 	bne	r2,r6,8010198 <__alt_data_end+0xfc010198>
 8011500:	29800007 	ldb	r6,0(r5)
 8011504:	303ff31e 	bne	r6,zero,80114d4 <__alt_data_end+0xfc0114d4>
 8011508:	018200b4 	movhi	r6,2050
 801150c:	200b883a 	mov	r5,r4
 8011510:	d9000615 	stw	r4,24(sp)
 8011514:	31b8f104 	addi	r6,r6,-7228
 8011518:	02000644 	movi	r8,25
 801151c:	00000a06 	br	8011548 <_strtod_r+0x14e0>
 8011520:	28800003 	ldbu	r2,0(r5)
 8011524:	10ffefc4 	addi	r3,r2,-65
 8011528:	10803fcc 	andi	r2,r2,255
 801152c:	1080201c 	xori	r2,r2,128
 8011530:	18c03fcc 	andi	r3,r3,255
 8011534:	10bfe004 	addi	r2,r2,-128
 8011538:	40c00136 	bltu	r8,r3,8011540 <_strtod_r+0x14d8>
 801153c:	10800804 	addi	r2,r2,32
 8011540:	31800044 	addi	r6,r6,1
 8011544:	11c0251e 	bne	r2,r7,80115dc <_strtod_r+0x1574>
 8011548:	31c00007 	ldb	r7,0(r6)
 801154c:	29400044 	addi	r5,r5,1
 8011550:	383ff31e 	bne	r7,zero,8011520 <__alt_data_end+0xfc011520>
 8011554:	d9400615 	stw	r5,24(sp)
 8011558:	011ffc34 	movhi	r4,32752
 801155c:	d9000715 	stw	r4,28(sp)
 8011560:	d8000815 	stw	zero,32(sp)
 8011564:	003b8f06 	br	80103a4 <__alt_data_end+0xfc0103a4>
 8011568:	000f883a 	mov	r7,zero
 801156c:	003c6006 	br	80106f0 <__alt_data_end+0xfc0106f0>
 8011570:	0080d434 	movhi	r2,848
 8011574:	1887883a 	add	r3,r3,r2
 8011578:	d8c00715 	stw	r3,28(sp)
 801157c:	dd400817 	ldw	r21,32(sp)
 8011580:	1823883a 	mov	r17,r3
 8011584:	d8001215 	stw	zero,72(sp)
 8011588:	003c8106 	br	8010790 <__alt_data_end+0xfc010790>
 801158c:	a009883a 	mov	r4,r20
 8011590:	01400284 	movi	r5,10
 8011594:	d9801315 	stw	r6,76(sp)
 8011598:	800334c0 	call	800334c <__mulsi3>
 801159c:	d9801317 	ldw	r6,76(sp)
 80115a0:	dd400617 	ldw	r21,24(sp)
 80115a4:	000f883a 	mov	r7,zero
 80115a8:	30a9883a 	add	r20,r6,r2
 80115ac:	003e0906 	br	8010dd4 <__alt_data_end+0xfc010dd4>
 80115b0:	047ffc34 	movhi	r17,65520
 80115b4:	e46f883a 	add	r23,fp,r17
 80115b8:	057fffc4 	movi	r21,-1
 80115bc:	04400434 	movhi	r17,16
 80115c0:	8d63883a 	add	r17,r17,r21
 80115c4:	bc62b03a 	or	r17,r23,r17
 80115c8:	003ea006 	br	801104c <__alt_data_end+0xfc01104c>
 80115cc:	00bfffc4 	movi	r2,-1
 80115d0:	003e9706 	br	8011030 <__alt_data_end+0xfc011030>
 80115d4:	0029883a 	mov	r20,zero
 80115d8:	003e2506 	br	8010e70 <__alt_data_end+0xfc010e70>
 80115dc:	21000044 	addi	r4,r4,1
 80115e0:	d9000615 	stw	r4,24(sp)
 80115e4:	003fdc06 	br	8011558 <__alt_data_end+0xfc011558>
 80115e8:	b02b883a 	mov	r21,r22
 80115ec:	003f3d06 	br	80112e4 <__alt_data_end+0xfc0112e4>
 80115f0:	d8001215 	stw	zero,72(sp)
 80115f4:	047ed316 	blt	zero,r17,8011144 <__alt_data_end+0xfc011144>
 80115f8:	003ef106 	br	80111c0 <__alt_data_end+0xfc0111c0>
 80115fc:	014200b4 	movhi	r5,2050
 8011600:	297b9c04 	addi	r5,r5,-4496
 8011604:	d9000604 	addi	r4,sp,24
 8011608:	d9800204 	addi	r6,sp,8
 801160c:	8015edc0 	call	8015edc <__hexnan>
 8011610:	00c00144 	movi	r3,5
 8011614:	10fb601e 	bne	r2,r3,8010398 <__alt_data_end+0xfc010398>
 8011618:	d8800217 	ldw	r2,8(sp)
 801161c:	d8800815 	stw	r2,32(sp)
 8011620:	d8800317 	ldw	r2,12(sp)
 8011624:	109ffc34 	orhi	r2,r2,32752
 8011628:	d8800715 	stw	r2,28(sp)
 801162c:	003b5d06 	br	80103a4 <__alt_data_end+0xfc0103a4>
 8011630:	00ffffc4 	movi	r3,-1
 8011634:	d9000817 	ldw	r4,32(sp)
 8011638:	1884983a 	sll	r2,r3,r2
 801163c:	1108703a 	and	r4,r2,r4
 8011640:	d9000815 	stw	r4,32(sp)
 8011644:	003ede06 	br	80111c0 <__alt_data_end+0xfc0111c0>
 8011648:	01001a84 	movi	r4,106
 801164c:	d9001215 	stw	r4,72(sp)
 8011650:	003ece06 	br	801118c <__alt_data_end+0xfc01118c>
 8011654:	00ffffc4 	movi	r3,-1
 8011658:	10bff804 	addi	r2,r2,-32
 801165c:	1884983a 	sll	r2,r3,r2
 8011660:	d8c00717 	ldw	r3,28(sp)
 8011664:	10c6703a 	and	r3,r2,r3
 8011668:	d8c00715 	stw	r3,28(sp)
 801166c:	003ed406 	br	80111c0 <__alt_data_end+0xfc0111c0>

08011670 <strtod>:
 8011670:	00c200b4 	movhi	r3,2050
 8011674:	18c09004 	addi	r3,r3,576
 8011678:	2005883a 	mov	r2,r4
 801167c:	19000017 	ldw	r4,0(r3)
 8011680:	280d883a 	mov	r6,r5
 8011684:	100b883a 	mov	r5,r2
 8011688:	80100681 	jmpi	8010068 <_strtod_r>

0801168c <strtof>:
 801168c:	defffb04 	addi	sp,sp,-20
 8011690:	dcc00315 	stw	r19,12(sp)
 8011694:	04c200b4 	movhi	r19,2050
 8011698:	9cc09004 	addi	r19,r19,576
 801169c:	2005883a 	mov	r2,r4
 80116a0:	99000017 	ldw	r4,0(r19)
 80116a4:	280d883a 	mov	r6,r5
 80116a8:	100b883a 	mov	r5,r2
 80116ac:	dfc00415 	stw	ra,16(sp)
 80116b0:	dc800215 	stw	r18,8(sp)
 80116b4:	dc400115 	stw	r17,4(sp)
 80116b8:	dc000015 	stw	r16,0(sp)
 80116bc:	80100680 	call	8010068 <_strtod_r>
 80116c0:	1009883a 	mov	r4,r2
 80116c4:	180b883a 	mov	r5,r3
 80116c8:	1025883a 	mov	r18,r2
 80116cc:	1823883a 	mov	r17,r3
 80116d0:	8019dc00 	call	8019dc0 <__truncdfsf2>
 80116d4:	1009883a 	mov	r4,r2
 80116d8:	000b883a 	mov	r5,zero
 80116dc:	1021883a 	mov	r16,r2
 80116e0:	80174440 	call	8017444 <__eqsf2>
 80116e4:	1000111e 	bne	r2,zero,801172c <strtof+0xa0>
 80116e8:	9009883a 	mov	r4,r18
 80116ec:	880b883a 	mov	r5,r17
 80116f0:	000d883a 	mov	r6,zero
 80116f4:	000f883a 	mov	r7,zero
 80116f8:	80188440 	call	8018844 <__eqdf2>
 80116fc:	10000b26 	beq	r2,zero,801172c <strtof+0xa0>
 8011700:	98800017 	ldw	r2,0(r19)
 8011704:	00c00884 	movi	r3,34
 8011708:	10c00015 	stw	r3,0(r2)
 801170c:	8005883a 	mov	r2,r16
 8011710:	dfc00417 	ldw	ra,16(sp)
 8011714:	dcc00317 	ldw	r19,12(sp)
 8011718:	dc800217 	ldw	r18,8(sp)
 801171c:	dc400117 	ldw	r17,4(sp)
 8011720:	dc000017 	ldw	r16,0(sp)
 8011724:	dec00504 	addi	sp,sp,20
 8011728:	f800283a 	ret
 801172c:	015fe034 	movhi	r5,32640
 8011730:	297fffc4 	addi	r5,r5,-1
 8011734:	8009883a 	mov	r4,r16
 8011738:	80174b80 	call	80174b8 <__gesf2>
 801173c:	0080070e 	bge	zero,r2,801175c <strtof+0xd0>
 8011740:	01dffc34 	movhi	r7,32752
 8011744:	39ffffc4 	addi	r7,r7,-1
 8011748:	9009883a 	mov	r4,r18
 801174c:	880b883a 	mov	r5,r17
 8011750:	01bfffc4 	movi	r6,-1
 8011754:	80188c80 	call	80188c8 <__gedf2>
 8011758:	00bfe90e 	bge	zero,r2,8011700 <__alt_data_end+0xfc011700>
 801175c:	017fe034 	movhi	r5,65408
 8011760:	297fffc4 	addi	r5,r5,-1
 8011764:	8009883a 	mov	r4,r16
 8011768:	80175700 	call	8017570 <__lesf2>
 801176c:	103fe70e 	bge	r2,zero,801170c <__alt_data_end+0xfc01170c>
 8011770:	01fffc34 	movhi	r7,65520
 8011774:	39ffffc4 	addi	r7,r7,-1
 8011778:	9009883a 	mov	r4,r18
 801177c:	880b883a 	mov	r5,r17
 8011780:	01bfffc4 	movi	r6,-1
 8011784:	80189a80 	call	80189a8 <__ledf2>
 8011788:	103fdd0e 	bge	r2,zero,8011700 <__alt_data_end+0xfc011700>
 801178c:	003fdf06 	br	801170c <__alt_data_end+0xfc01170c>

08011790 <_strtol_r>:
 8011790:	008200b4 	movhi	r2,2050
 8011794:	defff204 	addi	sp,sp,-56
 8011798:	10809304 	addi	r2,r2,588
 801179c:	dd400915 	stw	r21,36(sp)
 80117a0:	15400017 	ldw	r21,0(r2)
 80117a4:	ddc00b15 	stw	r23,44(sp)
 80117a8:	dc000415 	stw	r16,16(sp)
 80117ac:	dfc00d15 	stw	ra,52(sp)
 80117b0:	df000c15 	stw	fp,48(sp)
 80117b4:	dd800a15 	stw	r22,40(sp)
 80117b8:	dd000815 	stw	r20,32(sp)
 80117bc:	dcc00715 	stw	r19,28(sp)
 80117c0:	dc800615 	stw	r18,24(sp)
 80117c4:	dc400515 	stw	r17,20(sp)
 80117c8:	d9400215 	stw	r5,8(sp)
 80117cc:	d9000315 	stw	r4,12(sp)
 80117d0:	d9800015 	stw	r6,0(sp)
 80117d4:	382f883a 	mov	r23,r7
 80117d8:	2821883a 	mov	r16,r5
 80117dc:	87000007 	ldb	fp,0(r16)
 80117e0:	8007883a 	mov	r3,r16
 80117e4:	84000044 	addi	r16,r16,1
 80117e8:	af05883a 	add	r2,r21,fp
 80117ec:	10800043 	ldbu	r2,1(r2)
 80117f0:	1080020c 	andi	r2,r2,8
 80117f4:	103ff91e 	bne	r2,zero,80117dc <__alt_data_end+0xfc0117dc>
 80117f8:	00800b44 	movi	r2,45
 80117fc:	e0805c26 	beq	fp,r2,8011970 <_strtol_r+0x1e0>
 8011800:	00800ac4 	movi	r2,43
 8011804:	e0805e26 	beq	fp,r2,8011980 <_strtol_r+0x1f0>
 8011808:	0027883a 	mov	r19,zero
 801180c:	b8000426 	beq	r23,zero,8011820 <_strtol_r+0x90>
 8011810:	00800404 	movi	r2,16
 8011814:	b8805e26 	beq	r23,r2,8011990 <_strtol_r+0x200>
 8011818:	b825883a 	mov	r18,r23
 801181c:	00000406 	br	8011830 <_strtol_r+0xa0>
 8011820:	00800c04 	movi	r2,48
 8011824:	e0806926 	beq	fp,r2,80119cc <_strtol_r+0x23c>
 8011828:	05c00284 	movi	r23,10
 801182c:	b825883a 	mov	r18,r23
 8011830:	04600034 	movhi	r17,32768
 8011834:	8c7fffc4 	addi	r17,r17,-1
 8011838:	9c63883a 	add	r17,r19,r17
 801183c:	8809883a 	mov	r4,r17
 8011840:	900b883a 	mov	r5,r18
 8011844:	801743c0 	call	801743c <__umodsi3>
 8011848:	8809883a 	mov	r4,r17
 801184c:	900b883a 	mov	r5,r18
 8011850:	d8800115 	stw	r2,4(sp)
 8011854:	80174340 	call	8017434 <__udivsi3>
 8011858:	af07883a 	add	r3,r21,fp
 801185c:	18c00043 	ldbu	r3,1(r3)
 8011860:	1029883a 	mov	r20,r2
 8011864:	000d883a 	mov	r6,zero
 8011868:	1940010c 	andi	r5,r3,4
 801186c:	0009883a 	mov	r4,zero
 8011870:	04400044 	movi	r17,1
 8011874:	05bfffc4 	movi	r22,-1
 8011878:	28000f26 	beq	r5,zero,80118b8 <_strtol_r+0x128>
 801187c:	e73ff404 	addi	fp,fp,-48
 8011880:	e5c0130e 	bge	fp,r23,80118d0 <_strtol_r+0x140>
 8011884:	35800626 	beq	r6,r22,80118a0 <_strtol_r+0x110>
 8011888:	a1002b36 	bltu	r20,r4,8011938 <_strtol_r+0x1a8>
 801188c:	25002826 	beq	r4,r20,8011930 <_strtol_r+0x1a0>
 8011890:	900b883a 	mov	r5,r18
 8011894:	800334c0 	call	800334c <__mulsi3>
 8011898:	e089883a 	add	r4,fp,r2
 801189c:	01800044 	movi	r6,1
 80118a0:	87000007 	ldb	fp,0(r16)
 80118a4:	84000044 	addi	r16,r16,1
 80118a8:	af07883a 	add	r3,r21,fp
 80118ac:	18c00043 	ldbu	r3,1(r3)
 80118b0:	1940010c 	andi	r5,r3,4
 80118b4:	283ff11e 	bne	r5,zero,801187c <__alt_data_end+0xfc01187c>
 80118b8:	18c000cc 	andi	r3,r3,3
 80118bc:	18000426 	beq	r3,zero,80118d0 <_strtol_r+0x140>
 80118c0:	1c401f26 	beq	r3,r17,8011940 <_strtol_r+0x1b0>
 80118c4:	00c015c4 	movi	r3,87
 80118c8:	e0f9c83a 	sub	fp,fp,r3
 80118cc:	e5ffed16 	blt	fp,r23,8011884 <__alt_data_end+0xfc011884>
 80118d0:	00bfffc4 	movi	r2,-1
 80118d4:	30801c26 	beq	r6,r2,8011948 <_strtol_r+0x1b8>
 80118d8:	04c5c83a 	sub	r2,zero,r19
 80118dc:	d8c00017 	ldw	r3,0(sp)
 80118e0:	2084f03a 	xor	r2,r4,r2
 80118e4:	14e7883a 	add	r19,r2,r19
 80118e8:	9805883a 	mov	r2,r19
 80118ec:	18000426 	beq	r3,zero,8011900 <_strtol_r+0x170>
 80118f0:	30001d1e 	bne	r6,zero,8011968 <_strtol_r+0x1d8>
 80118f4:	dd400217 	ldw	r21,8(sp)
 80118f8:	d8c00017 	ldw	r3,0(sp)
 80118fc:	1d400015 	stw	r21,0(r3)
 8011900:	dfc00d17 	ldw	ra,52(sp)
 8011904:	df000c17 	ldw	fp,48(sp)
 8011908:	ddc00b17 	ldw	r23,44(sp)
 801190c:	dd800a17 	ldw	r22,40(sp)
 8011910:	dd400917 	ldw	r21,36(sp)
 8011914:	dd000817 	ldw	r20,32(sp)
 8011918:	dcc00717 	ldw	r19,28(sp)
 801191c:	dc800617 	ldw	r18,24(sp)
 8011920:	dc400517 	ldw	r17,20(sp)
 8011924:	dc000417 	ldw	r16,16(sp)
 8011928:	dec00e04 	addi	sp,sp,56
 801192c:	f800283a 	ret
 8011930:	d8c00117 	ldw	r3,4(sp)
 8011934:	1f3fd60e 	bge	r3,fp,8011890 <__alt_data_end+0xfc011890>
 8011938:	01bfffc4 	movi	r6,-1
 801193c:	003fd806 	br	80118a0 <__alt_data_end+0xfc0118a0>
 8011940:	00c00dc4 	movi	r3,55
 8011944:	003fe006 	br	80118c8 <__alt_data_end+0xfc0118c8>
 8011948:	d8c00317 	ldw	r3,12(sp)
 801194c:	00800884 	movi	r2,34
 8011950:	18800015 	stw	r2,0(r3)
 8011954:	d8c00017 	ldw	r3,0(sp)
 8011958:	00a00034 	movhi	r2,32768
 801195c:	10bfffc4 	addi	r2,r2,-1
 8011960:	9885883a 	add	r2,r19,r2
 8011964:	183fe626 	beq	r3,zero,8011900 <__alt_data_end+0xfc011900>
 8011968:	857fffc4 	addi	r21,r16,-1
 801196c:	003fe206 	br	80118f8 <__alt_data_end+0xfc0118f8>
 8011970:	1c000084 	addi	r16,r3,2
 8011974:	1f000047 	ldb	fp,1(r3)
 8011978:	04c00044 	movi	r19,1
 801197c:	003fa306 	br	801180c <__alt_data_end+0xfc01180c>
 8011980:	1c000084 	addi	r16,r3,2
 8011984:	1f000047 	ldb	fp,1(r3)
 8011988:	0027883a 	mov	r19,zero
 801198c:	003f9f06 	br	801180c <__alt_data_end+0xfc01180c>
 8011990:	00800c04 	movi	r2,48
 8011994:	e0bfa01e 	bne	fp,r2,8011818 <__alt_data_end+0xfc011818>
 8011998:	80c00003 	ldbu	r3,0(r16)
 801199c:	00bff7c4 	movi	r2,-33
 80119a0:	1884703a 	and	r2,r3,r2
 80119a4:	10803fcc 	andi	r2,r2,255
 80119a8:	1080201c 	xori	r2,r2,128
 80119ac:	10bfe004 	addi	r2,r2,-128
 80119b0:	00c01604 	movi	r3,88
 80119b4:	10ff981e 	bne	r2,r3,8011818 <__alt_data_end+0xfc011818>
 80119b8:	04800404 	movi	r18,16
 80119bc:	87000047 	ldb	fp,1(r16)
 80119c0:	902f883a 	mov	r23,r18
 80119c4:	84000084 	addi	r16,r16,2
 80119c8:	003f9906 	br	8011830 <__alt_data_end+0xfc011830>
 80119cc:	80c00003 	ldbu	r3,0(r16)
 80119d0:	00bff7c4 	movi	r2,-33
 80119d4:	1884703a 	and	r2,r3,r2
 80119d8:	10803fcc 	andi	r2,r2,255
 80119dc:	1080201c 	xori	r2,r2,128
 80119e0:	10bfe004 	addi	r2,r2,-128
 80119e4:	00c01604 	movi	r3,88
 80119e8:	10fff326 	beq	r2,r3,80119b8 <__alt_data_end+0xfc0119b8>
 80119ec:	05c00204 	movi	r23,8
 80119f0:	b825883a 	mov	r18,r23
 80119f4:	003f8e06 	br	8011830 <__alt_data_end+0xfc011830>

080119f8 <strtol>:
 80119f8:	2007883a 	mov	r3,r4
 80119fc:	010200b4 	movhi	r4,2050
 8011a00:	21009004 	addi	r4,r4,576
 8011a04:	21000017 	ldw	r4,0(r4)
 8011a08:	2805883a 	mov	r2,r5
 8011a0c:	300f883a 	mov	r7,r6
 8011a10:	180b883a 	mov	r5,r3
 8011a14:	100d883a 	mov	r6,r2
 8011a18:	80117901 	jmpi	8011790 <_strtol_r>

08011a1c <_strtoll_r>:
 8011a1c:	008200b4 	movhi	r2,2050
 8011a20:	deffef04 	addi	sp,sp,-68
 8011a24:	10809304 	addi	r2,r2,588
 8011a28:	dd800d15 	stw	r22,52(sp)
 8011a2c:	15800017 	ldw	r22,0(r2)
 8011a30:	df000f15 	stw	fp,60(sp)
 8011a34:	dfc01015 	stw	ra,64(sp)
 8011a38:	ddc00e15 	stw	r23,56(sp)
 8011a3c:	dd400c15 	stw	r21,48(sp)
 8011a40:	dd000b15 	stw	r20,44(sp)
 8011a44:	dcc00a15 	stw	r19,40(sp)
 8011a48:	dc800915 	stw	r18,36(sp)
 8011a4c:	dc400815 	stw	r17,32(sp)
 8011a50:	dc000715 	stw	r16,28(sp)
 8011a54:	d9400415 	stw	r5,16(sp)
 8011a58:	d9000515 	stw	r4,20(sp)
 8011a5c:	d9800215 	stw	r6,8(sp)
 8011a60:	3839883a 	mov	fp,r7
 8011a64:	2811883a 	mov	r8,r5
 8011a68:	42400007 	ldb	r9,0(r8)
 8011a6c:	4007883a 	mov	r3,r8
 8011a70:	42000044 	addi	r8,r8,1
 8011a74:	b245883a 	add	r2,r22,r9
 8011a78:	10800043 	ldbu	r2,1(r2)
 8011a7c:	1080020c 	andi	r2,r2,8
 8011a80:	103ff91e 	bne	r2,zero,8011a68 <__alt_data_end+0xfc011a68>
 8011a84:	00800b44 	movi	r2,45
 8011a88:	4025883a 	mov	r18,r8
 8011a8c:	48807d26 	beq	r9,r2,8011c84 <_strtoll_r+0x268>
 8011a90:	00800ac4 	movi	r2,43
 8011a94:	48808026 	beq	r9,r2,8011c98 <_strtoll_r+0x27c>
 8011a98:	d8000115 	stw	zero,4(sp)
 8011a9c:	e0000a26 	beq	fp,zero,8011ac8 <_strtoll_r+0xac>
 8011aa0:	00800404 	movi	r2,16
 8011aa4:	e0808c26 	beq	fp,r2,8011cd8 <_strtoll_r+0x2bc>
 8011aa8:	e005d7fa 	srai	r2,fp,31
 8011aac:	d8c00117 	ldw	r3,4(sp)
 8011ab0:	e027883a 	mov	r19,fp
 8011ab4:	d8800015 	stw	r2,0(sp)
 8011ab8:	18000a26 	beq	r3,zero,8011ae4 <_strtoll_r+0xc8>
 8011abc:	0023883a 	mov	r17,zero
 8011ac0:	04200034 	movhi	r16,32768
 8011ac4:	00000a06 	br	8011af0 <_strtoll_r+0xd4>
 8011ac8:	00800c04 	movi	r2,48
 8011acc:	48807626 	beq	r9,r2,8011ca8 <_strtoll_r+0x28c>
 8011ad0:	04c00284 	movi	r19,10
 8011ad4:	d8000015 	stw	zero,0(sp)
 8011ad8:	9839883a 	mov	fp,r19
 8011adc:	d8c00117 	ldw	r3,4(sp)
 8011ae0:	183ff61e 	bne	r3,zero,8011abc <__alt_data_end+0xfc011abc>
 8011ae4:	047fffc4 	movi	r17,-1
 8011ae8:	04200034 	movhi	r16,32768
 8011aec:	8461883a 	add	r16,r16,r17
 8011af0:	d9c00017 	ldw	r7,0(sp)
 8011af4:	8809883a 	mov	r4,r17
 8011af8:	800b883a 	mov	r5,r16
 8011afc:	980d883a 	mov	r6,r19
 8011b00:	da400615 	stw	r9,24(sp)
 8011b04:	8016cfc0 	call	8016cfc <__umoddi3>
 8011b08:	d9c00017 	ldw	r7,0(sp)
 8011b0c:	8809883a 	mov	r4,r17
 8011b10:	800b883a 	mov	r5,r16
 8011b14:	980d883a 	mov	r6,r19
 8011b18:	d8800315 	stw	r2,12(sp)
 8011b1c:	80166bc0 	call	80166bc <__udivdi3>
 8011b20:	da400617 	ldw	r9,24(sp)
 8011b24:	1823883a 	mov	r17,r3
 8011b28:	902f883a 	mov	r23,r18
 8011b2c:	b247883a 	add	r3,r22,r9
 8011b30:	19800043 	ldbu	r6,1(r3)
 8011b34:	1021883a 	mov	r16,r2
 8011b38:	000f883a 	mov	r7,zero
 8011b3c:	30c0010c 	andi	r3,r6,4
 8011b40:	0009883a 	mov	r4,zero
 8011b44:	000b883a 	mov	r5,zero
 8011b48:	04800044 	movi	r18,1
 8011b4c:	057fffc4 	movi	r21,-1
 8011b50:	18000d26 	beq	r3,zero,8011b88 <_strtoll_r+0x16c>
 8011b54:	4d3ff404 	addi	r20,r9,-48
 8011b58:	a700110e 	bge	r20,fp,8011ba0 <_strtoll_r+0x184>
 8011b5c:	3d400426 	beq	r7,r21,8011b70 <_strtoll_r+0x154>
 8011b60:	89400236 	bltu	r17,r5,8011b6c <_strtoll_r+0x150>
 8011b64:	2c40291e 	bne	r5,r17,8011c0c <_strtoll_r+0x1f0>
 8011b68:	8100282e 	bgeu	r16,r4,8011c0c <_strtoll_r+0x1f0>
 8011b6c:	01ffffc4 	movi	r7,-1
 8011b70:	ba400007 	ldb	r9,0(r23)
 8011b74:	bdc00044 	addi	r23,r23,1
 8011b78:	b247883a 	add	r3,r22,r9
 8011b7c:	19800043 	ldbu	r6,1(r3)
 8011b80:	30c0010c 	andi	r3,r6,4
 8011b84:	183ff31e 	bne	r3,zero,8011b54 <__alt_data_end+0xfc011b54>
 8011b88:	318000cc 	andi	r6,r6,3
 8011b8c:	30000426 	beq	r6,zero,8011ba0 <_strtoll_r+0x184>
 8011b90:	34802a26 	beq	r6,r18,8011c3c <_strtoll_r+0x220>
 8011b94:	00c015c4 	movi	r3,87
 8011b98:	48e9c83a 	sub	r20,r9,r3
 8011b9c:	a73fef16 	blt	r20,fp,8011b5c <__alt_data_end+0xfc011b5c>
 8011ba0:	00bfffc4 	movi	r2,-1
 8011ba4:	38802b26 	beq	r7,r2,8011c54 <_strtoll_r+0x238>
 8011ba8:	d8800117 	ldw	r2,4(sp)
 8011bac:	0093c83a 	sub	r9,zero,r2
 8011bb0:	2248f03a 	xor	r4,r4,r9
 8011bb4:	2085883a 	add	r2,r4,r2
 8011bb8:	1109803a 	cmpltu	r4,r2,r4
 8011bbc:	2a46f03a 	xor	r3,r5,r9
 8011bc0:	20c7883a 	add	r3,r4,r3
 8011bc4:	d9000217 	ldw	r4,8(sp)
 8011bc8:	20000426 	beq	r4,zero,8011bdc <_strtoll_r+0x1c0>
 8011bcc:	38002b1e 	bne	r7,zero,8011c7c <_strtoll_r+0x260>
 8011bd0:	dd800417 	ldw	r22,16(sp)
 8011bd4:	d9400217 	ldw	r5,8(sp)
 8011bd8:	2d800015 	stw	r22,0(r5)
 8011bdc:	dfc01017 	ldw	ra,64(sp)
 8011be0:	df000f17 	ldw	fp,60(sp)
 8011be4:	ddc00e17 	ldw	r23,56(sp)
 8011be8:	dd800d17 	ldw	r22,52(sp)
 8011bec:	dd400c17 	ldw	r21,48(sp)
 8011bf0:	dd000b17 	ldw	r20,44(sp)
 8011bf4:	dcc00a17 	ldw	r19,40(sp)
 8011bf8:	dc800917 	ldw	r18,36(sp)
 8011bfc:	dc400817 	ldw	r17,32(sp)
 8011c00:	dc000717 	ldw	r16,28(sp)
 8011c04:	dec01104 	addi	sp,sp,68
 8011c08:	f800283a 	ret
 8011c0c:	24000d26 	beq	r4,r16,8011c44 <_strtoll_r+0x228>
 8011c10:	d9c00017 	ldw	r7,0(sp)
 8011c14:	980d883a 	mov	r6,r19
 8011c18:	801653c0 	call	801653c <__muldi3>
 8011c1c:	a00bd7fa 	srai	r5,r20,31
 8011c20:	a085883a 	add	r2,r20,r2
 8011c24:	1513803a 	cmpltu	r9,r2,r20
 8011c28:	28c7883a 	add	r3,r5,r3
 8011c2c:	1009883a 	mov	r4,r2
 8011c30:	48cb883a 	add	r5,r9,r3
 8011c34:	01c00044 	movi	r7,1
 8011c38:	003fcd06 	br	8011b70 <__alt_data_end+0xfc011b70>
 8011c3c:	00c00dc4 	movi	r3,55
 8011c40:	003fd506 	br	8011b98 <__alt_data_end+0xfc011b98>
 8011c44:	2c7ff21e 	bne	r5,r17,8011c10 <__alt_data_end+0xfc011c10>
 8011c48:	d8800317 	ldw	r2,12(sp)
 8011c4c:	153fc716 	blt	r2,r20,8011b6c <__alt_data_end+0xfc011b6c>
 8011c50:	003fef06 	br	8011c10 <__alt_data_end+0xfc011c10>
 8011c54:	d8c00117 	ldw	r3,4(sp)
 8011c58:	1800241e 	bne	r3,zero,8011cec <_strtoll_r+0x2d0>
 8011c5c:	00e00034 	movhi	r3,32768
 8011c60:	3805883a 	mov	r2,r7
 8011c64:	18ffffc4 	addi	r3,r3,-1
 8011c68:	d9400517 	ldw	r5,20(sp)
 8011c6c:	01000884 	movi	r4,34
 8011c70:	29000015 	stw	r4,0(r5)
 8011c74:	d9000217 	ldw	r4,8(sp)
 8011c78:	203fd826 	beq	r4,zero,8011bdc <__alt_data_end+0xfc011bdc>
 8011c7c:	bdbfffc4 	addi	r22,r23,-1
 8011c80:	003fd406 	br	8011bd4 <__alt_data_end+0xfc011bd4>
 8011c84:	00800044 	movi	r2,1
 8011c88:	1c800084 	addi	r18,r3,2
 8011c8c:	1a400047 	ldb	r9,1(r3)
 8011c90:	d8800115 	stw	r2,4(sp)
 8011c94:	003f8106 	br	8011a9c <__alt_data_end+0xfc011a9c>
 8011c98:	1c800084 	addi	r18,r3,2
 8011c9c:	1a400047 	ldb	r9,1(r3)
 8011ca0:	d8000115 	stw	zero,4(sp)
 8011ca4:	003f7d06 	br	8011a9c <__alt_data_end+0xfc011a9c>
 8011ca8:	90c00003 	ldbu	r3,0(r18)
 8011cac:	00bff7c4 	movi	r2,-33
 8011cb0:	1884703a 	and	r2,r3,r2
 8011cb4:	10803fcc 	andi	r2,r2,255
 8011cb8:	1080201c 	xori	r2,r2,128
 8011cbc:	10bfe004 	addi	r2,r2,-128
 8011cc0:	00c01604 	movi	r3,88
 8011cc4:	10c01426 	beq	r2,r3,8011d18 <_strtoll_r+0x2fc>
 8011cc8:	04c00204 	movi	r19,8
 8011ccc:	d8000015 	stw	zero,0(sp)
 8011cd0:	9839883a 	mov	fp,r19
 8011cd4:	003f8106 	br	8011adc <__alt_data_end+0xfc011adc>
 8011cd8:	00800c04 	movi	r2,48
 8011cdc:	48800626 	beq	r9,r2,8011cf8 <_strtoll_r+0x2dc>
 8011ce0:	e027883a 	mov	r19,fp
 8011ce4:	d8000015 	stw	zero,0(sp)
 8011ce8:	003f7c06 	br	8011adc <__alt_data_end+0xfc011adc>
 8011cec:	0005883a 	mov	r2,zero
 8011cf0:	00e00034 	movhi	r3,32768
 8011cf4:	003fdc06 	br	8011c68 <__alt_data_end+0xfc011c68>
 8011cf8:	90c00003 	ldbu	r3,0(r18)
 8011cfc:	00bff7c4 	movi	r2,-33
 8011d00:	1884703a 	and	r2,r3,r2
 8011d04:	10803fcc 	andi	r2,r2,255
 8011d08:	1080201c 	xori	r2,r2,128
 8011d0c:	10bfe004 	addi	r2,r2,-128
 8011d10:	00c01604 	movi	r3,88
 8011d14:	10fff21e 	bne	r2,r3,8011ce0 <__alt_data_end+0xfc011ce0>
 8011d18:	04c00404 	movi	r19,16
 8011d1c:	92400047 	ldb	r9,1(r18)
 8011d20:	d8000015 	stw	zero,0(sp)
 8011d24:	94800084 	addi	r18,r18,2
 8011d28:	9839883a 	mov	fp,r19
 8011d2c:	003f6b06 	br	8011adc <__alt_data_end+0xfc011adc>

08011d30 <_strtoul_r>:
 8011d30:	008200b4 	movhi	r2,2050
 8011d34:	defff204 	addi	sp,sp,-56
 8011d38:	10809304 	addi	r2,r2,588
 8011d3c:	dd800a15 	stw	r22,40(sp)
 8011d40:	15800017 	ldw	r22,0(r2)
 8011d44:	ddc00b15 	stw	r23,44(sp)
 8011d48:	dd000815 	stw	r20,32(sp)
 8011d4c:	dc000415 	stw	r16,16(sp)
 8011d50:	dfc00d15 	stw	ra,52(sp)
 8011d54:	df000c15 	stw	fp,48(sp)
 8011d58:	dd400915 	stw	r21,36(sp)
 8011d5c:	dcc00715 	stw	r19,28(sp)
 8011d60:	dc800615 	stw	r18,24(sp)
 8011d64:	dc400515 	stw	r17,20(sp)
 8011d68:	d9400015 	stw	r5,0(sp)
 8011d6c:	d9000315 	stw	r4,12(sp)
 8011d70:	3029883a 	mov	r20,r6
 8011d74:	382f883a 	mov	r23,r7
 8011d78:	2821883a 	mov	r16,r5
 8011d7c:	87000007 	ldb	fp,0(r16)
 8011d80:	8007883a 	mov	r3,r16
 8011d84:	84000044 	addi	r16,r16,1
 8011d88:	b705883a 	add	r2,r22,fp
 8011d8c:	10800043 	ldbu	r2,1(r2)
 8011d90:	1080020c 	andi	r2,r2,8
 8011d94:	103ff91e 	bne	r2,zero,8011d7c <__alt_data_end+0xfc011d7c>
 8011d98:	00800b44 	movi	r2,45
 8011d9c:	e0805826 	beq	fp,r2,8011f00 <_strtoul_r+0x1d0>
 8011da0:	00800ac4 	movi	r2,43
 8011da4:	e0805b26 	beq	fp,r2,8011f14 <_strtoul_r+0x1e4>
 8011da8:	d8000215 	stw	zero,8(sp)
 8011dac:	b8000d26 	beq	r23,zero,8011de4 <_strtoul_r+0xb4>
 8011db0:	00800404 	movi	r2,16
 8011db4:	b8805b26 	beq	r23,r2,8011f24 <_strtoul_r+0x1f4>
 8011db8:	013fffc4 	movi	r4,-1
 8011dbc:	b80b883a 	mov	r5,r23
 8011dc0:	80174340 	call	8017434 <__udivsi3>
 8011dc4:	013fffc4 	movi	r4,-1
 8011dc8:	b80b883a 	mov	r5,r23
 8011dcc:	1023883a 	mov	r17,r2
 8011dd0:	801743c0 	call	801743c <__umodsi3>
 8011dd4:	d8800115 	stw	r2,4(sp)
 8011dd8:	b825883a 	mov	r18,r23
 8011ddc:	8827883a 	mov	r19,r17
 8011de0:	00000806 	br	8011e04 <_strtoul_r+0xd4>
 8011de4:	00800c04 	movi	r2,48
 8011de8:	e0805626 	beq	fp,r2,8011f44 <_strtoul_r+0x214>
 8011dec:	05c00284 	movi	r23,10
 8011df0:	00c00144 	movi	r3,5
 8011df4:	04c666b4 	movhi	r19,6554
 8011df8:	d8c00115 	stw	r3,4(sp)
 8011dfc:	9ce66644 	addi	r19,r19,-26215
 8011e00:	b825883a 	mov	r18,r23
 8011e04:	b707883a 	add	r3,r22,fp
 8011e08:	18c00043 	ldbu	r3,1(r3)
 8011e0c:	000b883a 	mov	r5,zero
 8011e10:	0009883a 	mov	r4,zero
 8011e14:	1980010c 	andi	r6,r3,4
 8011e18:	04400044 	movi	r17,1
 8011e1c:	057fffc4 	movi	r21,-1
 8011e20:	30000f26 	beq	r6,zero,8011e60 <_strtoul_r+0x130>
 8011e24:	e73ff404 	addi	fp,fp,-48
 8011e28:	e5c0130e 	bge	fp,r23,8011e78 <_strtoul_r+0x148>
 8011e2c:	2d400626 	beq	r5,r21,8011e48 <_strtoul_r+0x118>
 8011e30:	99002836 	bltu	r19,r4,8011ed4 <_strtoul_r+0x1a4>
 8011e34:	24c02526 	beq	r4,r19,8011ecc <_strtoul_r+0x19c>
 8011e38:	900b883a 	mov	r5,r18
 8011e3c:	800334c0 	call	800334c <__mulsi3>
 8011e40:	e089883a 	add	r4,fp,r2
 8011e44:	01400044 	movi	r5,1
 8011e48:	87000007 	ldb	fp,0(r16)
 8011e4c:	84000044 	addi	r16,r16,1
 8011e50:	b707883a 	add	r3,r22,fp
 8011e54:	18c00043 	ldbu	r3,1(r3)
 8011e58:	1980010c 	andi	r6,r3,4
 8011e5c:	303ff11e 	bne	r6,zero,8011e24 <__alt_data_end+0xfc011e24>
 8011e60:	18c000cc 	andi	r3,r3,3
 8011e64:	18000426 	beq	r3,zero,8011e78 <_strtoul_r+0x148>
 8011e68:	1c401c26 	beq	r3,r17,8011edc <_strtoul_r+0x1ac>
 8011e6c:	00c015c4 	movi	r3,87
 8011e70:	e0f9c83a 	sub	fp,fp,r3
 8011e74:	e5ffed16 	blt	fp,r23,8011e2c <__alt_data_end+0xfc011e2c>
 8011e78:	28001c16 	blt	r5,zero,8011eec <_strtoul_r+0x1bc>
 8011e7c:	d8c00217 	ldw	r3,8(sp)
 8011e80:	00c5c83a 	sub	r2,zero,r3
 8011e84:	2084f03a 	xor	r2,r4,r2
 8011e88:	10c5883a 	add	r2,r2,r3
 8011e8c:	a0000326 	beq	r20,zero,8011e9c <_strtoul_r+0x16c>
 8011e90:	28001426 	beq	r5,zero,8011ee4 <_strtoul_r+0x1b4>
 8011e94:	857fffc4 	addi	r21,r16,-1
 8011e98:	a5400015 	stw	r21,0(r20)
 8011e9c:	dfc00d17 	ldw	ra,52(sp)
 8011ea0:	df000c17 	ldw	fp,48(sp)
 8011ea4:	ddc00b17 	ldw	r23,44(sp)
 8011ea8:	dd800a17 	ldw	r22,40(sp)
 8011eac:	dd400917 	ldw	r21,36(sp)
 8011eb0:	dd000817 	ldw	r20,32(sp)
 8011eb4:	dcc00717 	ldw	r19,28(sp)
 8011eb8:	dc800617 	ldw	r18,24(sp)
 8011ebc:	dc400517 	ldw	r17,20(sp)
 8011ec0:	dc000417 	ldw	r16,16(sp)
 8011ec4:	dec00e04 	addi	sp,sp,56
 8011ec8:	f800283a 	ret
 8011ecc:	d8c00117 	ldw	r3,4(sp)
 8011ed0:	1f3fd90e 	bge	r3,fp,8011e38 <__alt_data_end+0xfc011e38>
 8011ed4:	017fffc4 	movi	r5,-1
 8011ed8:	003fdb06 	br	8011e48 <__alt_data_end+0xfc011e48>
 8011edc:	00c00dc4 	movi	r3,55
 8011ee0:	003fe306 	br	8011e70 <__alt_data_end+0xfc011e70>
 8011ee4:	dd400017 	ldw	r21,0(sp)
 8011ee8:	003feb06 	br	8011e98 <__alt_data_end+0xfc011e98>
 8011eec:	d8c00317 	ldw	r3,12(sp)
 8011ef0:	00800884 	movi	r2,34
 8011ef4:	18800015 	stw	r2,0(r3)
 8011ef8:	00bfffc4 	movi	r2,-1
 8011efc:	003fe306 	br	8011e8c <__alt_data_end+0xfc011e8c>
 8011f00:	1c000084 	addi	r16,r3,2
 8011f04:	1f000047 	ldb	fp,1(r3)
 8011f08:	00c00044 	movi	r3,1
 8011f0c:	d8c00215 	stw	r3,8(sp)
 8011f10:	003fa606 	br	8011dac <__alt_data_end+0xfc011dac>
 8011f14:	1c000084 	addi	r16,r3,2
 8011f18:	1f000047 	ldb	fp,1(r3)
 8011f1c:	d8000215 	stw	zero,8(sp)
 8011f20:	003fa206 	br	8011dac <__alt_data_end+0xfc011dac>
 8011f24:	00800c04 	movi	r2,48
 8011f28:	e0801e26 	beq	fp,r2,8011fa4 <_strtoul_r+0x274>
 8011f2c:	04c40034 	movhi	r19,4096
 8011f30:	00c003c4 	movi	r3,15
 8011f34:	9cffffc4 	addi	r19,r19,-1
 8011f38:	d8c00115 	stw	r3,4(sp)
 8011f3c:	b825883a 	mov	r18,r23
 8011f40:	003fb006 	br	8011e04 <__alt_data_end+0xfc011e04>
 8011f44:	80c00003 	ldbu	r3,0(r16)
 8011f48:	00bff7c4 	movi	r2,-33
 8011f4c:	1884703a 	and	r2,r3,r2
 8011f50:	10803fcc 	andi	r2,r2,255
 8011f54:	1080201c 	xori	r2,r2,128
 8011f58:	10bfe004 	addi	r2,r2,-128
 8011f5c:	00c01604 	movi	r3,88
 8011f60:	10c00726 	beq	r2,r3,8011f80 <_strtoul_r+0x250>
 8011f64:	05c00204 	movi	r23,8
 8011f68:	00c001c4 	movi	r3,7
 8011f6c:	04c80034 	movhi	r19,8192
 8011f70:	d8c00115 	stw	r3,4(sp)
 8011f74:	9cffffc4 	addi	r19,r19,-1
 8011f78:	b825883a 	mov	r18,r23
 8011f7c:	003fa106 	br	8011e04 <__alt_data_end+0xfc011e04>
 8011f80:	04800404 	movi	r18,16
 8011f84:	00c003c4 	movi	r3,15
 8011f88:	04440034 	movhi	r17,4096
 8011f8c:	87000047 	ldb	fp,1(r16)
 8011f90:	d8c00115 	stw	r3,4(sp)
 8011f94:	84000084 	addi	r16,r16,2
 8011f98:	8c7fffc4 	addi	r17,r17,-1
 8011f9c:	902f883a 	mov	r23,r18
 8011fa0:	003f8e06 	br	8011ddc <__alt_data_end+0xfc011ddc>
 8011fa4:	80c00003 	ldbu	r3,0(r16)
 8011fa8:	00bff7c4 	movi	r2,-33
 8011fac:	1884703a 	and	r2,r3,r2
 8011fb0:	10803fcc 	andi	r2,r2,255
 8011fb4:	1080201c 	xori	r2,r2,128
 8011fb8:	10bfe004 	addi	r2,r2,-128
 8011fbc:	00c01604 	movi	r3,88
 8011fc0:	10ffef26 	beq	r2,r3,8011f80 <__alt_data_end+0xfc011f80>
 8011fc4:	00c003c4 	movi	r3,15
 8011fc8:	04c40034 	movhi	r19,4096
 8011fcc:	d8c00115 	stw	r3,4(sp)
 8011fd0:	9cffffc4 	addi	r19,r19,-1
 8011fd4:	b825883a 	mov	r18,r23
 8011fd8:	003f8a06 	br	8011e04 <__alt_data_end+0xfc011e04>

08011fdc <strtoul>:
 8011fdc:	2007883a 	mov	r3,r4
 8011fe0:	010200b4 	movhi	r4,2050
 8011fe4:	21009004 	addi	r4,r4,576
 8011fe8:	21000017 	ldw	r4,0(r4)
 8011fec:	2805883a 	mov	r2,r5
 8011ff0:	300f883a 	mov	r7,r6
 8011ff4:	180b883a 	mov	r5,r3
 8011ff8:	100d883a 	mov	r6,r2
 8011ffc:	8011d301 	jmpi	8011d30 <_strtoul_r>

08012000 <_strtoull_r>:
 8012000:	008200b4 	movhi	r2,2050
 8012004:	deffee04 	addi	sp,sp,-72
 8012008:	10809304 	addi	r2,r2,588
 801200c:	ddc00f15 	stw	r23,60(sp)
 8012010:	15c00017 	ldw	r23,0(r2)
 8012014:	df001015 	stw	fp,64(sp)
 8012018:	dfc01115 	stw	ra,68(sp)
 801201c:	dd800e15 	stw	r22,56(sp)
 8012020:	dd400d15 	stw	r21,52(sp)
 8012024:	dd000c15 	stw	r20,48(sp)
 8012028:	dcc00b15 	stw	r19,44(sp)
 801202c:	dc800a15 	stw	r18,40(sp)
 8012030:	dc400915 	stw	r17,36(sp)
 8012034:	dc000815 	stw	r16,32(sp)
 8012038:	d9400215 	stw	r5,8(sp)
 801203c:	d9000515 	stw	r4,20(sp)
 8012040:	d9800115 	stw	r6,4(sp)
 8012044:	3839883a 	mov	fp,r7
 8012048:	2811883a 	mov	r8,r5
 801204c:	42400007 	ldb	r9,0(r8)
 8012050:	4007883a 	mov	r3,r8
 8012054:	42000044 	addi	r8,r8,1
 8012058:	ba45883a 	add	r2,r23,r9
 801205c:	10800043 	ldbu	r2,1(r2)
 8012060:	1080020c 	andi	r2,r2,8
 8012064:	103ff91e 	bne	r2,zero,801204c <__alt_data_end+0xfc01204c>
 8012068:	00800b44 	movi	r2,45
 801206c:	48807826 	beq	r9,r2,8012250 <_strtoull_r+0x250>
 8012070:	00800ac4 	movi	r2,43
 8012074:	48807b26 	beq	r9,r2,8012264 <_strtoull_r+0x264>
 8012078:	d8000415 	stw	zero,16(sp)
 801207c:	e0001726 	beq	fp,zero,80120dc <_strtoull_r+0xdc>
 8012080:	00800404 	movi	r2,16
 8012084:	e0808d26 	beq	fp,r2,80122bc <_strtoull_r+0x2bc>
 8012088:	e027d7fa 	srai	r19,fp,31
 801208c:	013fffc4 	movi	r4,-1
 8012090:	200b883a 	mov	r5,r4
 8012094:	e00d883a 	mov	r6,fp
 8012098:	980f883a 	mov	r7,r19
 801209c:	da000615 	stw	r8,24(sp)
 80120a0:	da400715 	stw	r9,28(sp)
 80120a4:	80166bc0 	call	80166bc <__udivdi3>
 80120a8:	013fffc4 	movi	r4,-1
 80120ac:	200b883a 	mov	r5,r4
 80120b0:	e00d883a 	mov	r6,fp
 80120b4:	980f883a 	mov	r7,r19
 80120b8:	1021883a 	mov	r16,r2
 80120bc:	1823883a 	mov	r17,r3
 80120c0:	8016cfc0 	call	8016cfc <__umoddi3>
 80120c4:	da400717 	ldw	r9,28(sp)
 80120c8:	da000617 	ldw	r8,24(sp)
 80120cc:	d8800315 	stw	r2,12(sp)
 80120d0:	df000015 	stw	fp,0(sp)
 80120d4:	8825883a 	mov	r18,r17
 80120d8:	00000c06 	br	801210c <_strtoull_r+0x10c>
 80120dc:	00800c04 	movi	r2,48
 80120e0:	48806426 	beq	r9,r2,8012274 <_strtoull_r+0x274>
 80120e4:	00800284 	movi	r2,10
 80120e8:	01000144 	movi	r4,5
 80120ec:	042666b4 	movhi	r16,39322
 80120f0:	048666b4 	movhi	r18,6554
 80120f4:	d8800015 	stw	r2,0(sp)
 80120f8:	d9000315 	stw	r4,12(sp)
 80120fc:	84266644 	addi	r16,r16,-26215
 8012100:	94a66644 	addi	r18,r18,-26215
 8012104:	0027883a 	mov	r19,zero
 8012108:	1039883a 	mov	fp,r2
 801210c:	ba45883a 	add	r2,r23,r9
 8012110:	12800043 	ldbu	r10,1(r2)
 8012114:	402d883a 	mov	r22,r8
 8012118:	000d883a 	mov	r6,zero
 801211c:	5080010c 	andi	r2,r10,4
 8012120:	0009883a 	mov	r4,zero
 8012124:	000b883a 	mov	r5,zero
 8012128:	04400044 	movi	r17,1
 801212c:	057fffc4 	movi	r21,-1
 8012130:	10000d26 	beq	r2,zero,8012168 <_strtoull_r+0x168>
 8012134:	4d3ff404 	addi	r20,r9,-48
 8012138:	a700110e 	bge	r20,fp,8012180 <_strtoull_r+0x180>
 801213c:	35400426 	beq	r6,r21,8012150 <_strtoull_r+0x150>
 8012140:	91400236 	bltu	r18,r5,801214c <_strtoull_r+0x14c>
 8012144:	2c80281e 	bne	r5,r18,80121e8 <_strtoull_r+0x1e8>
 8012148:	8100272e 	bgeu	r16,r4,80121e8 <_strtoull_r+0x1e8>
 801214c:	01bfffc4 	movi	r6,-1
 8012150:	b2400007 	ldb	r9,0(r22)
 8012154:	b5800044 	addi	r22,r22,1
 8012158:	ba45883a 	add	r2,r23,r9
 801215c:	12800043 	ldbu	r10,1(r2)
 8012160:	5080010c 	andi	r2,r10,4
 8012164:	103ff31e 	bne	r2,zero,8012134 <__alt_data_end+0xfc012134>
 8012168:	528000cc 	andi	r10,r10,3
 801216c:	50000426 	beq	r10,zero,8012180 <_strtoull_r+0x180>
 8012170:	54402926 	beq	r10,r17,8012218 <_strtoull_r+0x218>
 8012174:	00c015c4 	movi	r3,87
 8012178:	48e9c83a 	sub	r20,r9,r3
 801217c:	a73fef16 	blt	r20,fp,801213c <__alt_data_end+0xfc01213c>
 8012180:	30002d16 	blt	r6,zero,8012238 <_strtoull_r+0x238>
 8012184:	d9c00417 	ldw	r7,16(sp)
 8012188:	01c7c83a 	sub	r3,zero,r7
 801218c:	20c8f03a 	xor	r4,r4,r3
 8012190:	21c5883a 	add	r2,r4,r7
 8012194:	1109803a 	cmpltu	r4,r2,r4
 8012198:	28c6f03a 	xor	r3,r5,r3
 801219c:	20c7883a 	add	r3,r4,r3
 80121a0:	d9000117 	ldw	r4,4(sp)
 80121a4:	20000426 	beq	r4,zero,80121b8 <_strtoull_r+0x1b8>
 80121a8:	30002126 	beq	r6,zero,8012230 <_strtoull_r+0x230>
 80121ac:	b5bfffc4 	addi	r22,r22,-1
 80121b0:	d9c00117 	ldw	r7,4(sp)
 80121b4:	3d800015 	stw	r22,0(r7)
 80121b8:	dfc01117 	ldw	ra,68(sp)
 80121bc:	df001017 	ldw	fp,64(sp)
 80121c0:	ddc00f17 	ldw	r23,60(sp)
 80121c4:	dd800e17 	ldw	r22,56(sp)
 80121c8:	dd400d17 	ldw	r21,52(sp)
 80121cc:	dd000c17 	ldw	r20,48(sp)
 80121d0:	dcc00b17 	ldw	r19,44(sp)
 80121d4:	dc800a17 	ldw	r18,40(sp)
 80121d8:	dc400917 	ldw	r17,36(sp)
 80121dc:	dc000817 	ldw	r16,32(sp)
 80121e0:	dec01204 	addi	sp,sp,72
 80121e4:	f800283a 	ret
 80121e8:	24000d26 	beq	r4,r16,8012220 <_strtoull_r+0x220>
 80121ec:	d9800017 	ldw	r6,0(sp)
 80121f0:	980f883a 	mov	r7,r19
 80121f4:	801653c0 	call	801653c <__muldi3>
 80121f8:	a00bd7fa 	srai	r5,r20,31
 80121fc:	a085883a 	add	r2,r20,r2
 8012200:	1513803a 	cmpltu	r9,r2,r20
 8012204:	28c7883a 	add	r3,r5,r3
 8012208:	1009883a 	mov	r4,r2
 801220c:	48cb883a 	add	r5,r9,r3
 8012210:	01800044 	movi	r6,1
 8012214:	003fce06 	br	8012150 <__alt_data_end+0xfc012150>
 8012218:	00c00dc4 	movi	r3,55
 801221c:	003fd606 	br	8012178 <__alt_data_end+0xfc012178>
 8012220:	2cbff21e 	bne	r5,r18,80121ec <__alt_data_end+0xfc0121ec>
 8012224:	d9c00317 	ldw	r7,12(sp)
 8012228:	3d3fc816 	blt	r7,r20,801214c <__alt_data_end+0xfc01214c>
 801222c:	003fef06 	br	80121ec <__alt_data_end+0xfc0121ec>
 8012230:	dd800217 	ldw	r22,8(sp)
 8012234:	003fde06 	br	80121b0 <__alt_data_end+0xfc0121b0>
 8012238:	d9000517 	ldw	r4,20(sp)
 801223c:	00c00884 	movi	r3,34
 8012240:	00bfffc4 	movi	r2,-1
 8012244:	20c00015 	stw	r3,0(r4)
 8012248:	1007883a 	mov	r3,r2
 801224c:	003fd406 	br	80121a0 <__alt_data_end+0xfc0121a0>
 8012250:	00800044 	movi	r2,1
 8012254:	1a000084 	addi	r8,r3,2
 8012258:	1a400047 	ldb	r9,1(r3)
 801225c:	d8800415 	stw	r2,16(sp)
 8012260:	003f8606 	br	801207c <__alt_data_end+0xfc01207c>
 8012264:	1a000084 	addi	r8,r3,2
 8012268:	1a400047 	ldb	r9,1(r3)
 801226c:	d8000415 	stw	zero,16(sp)
 8012270:	003f8206 	br	801207c <__alt_data_end+0xfc01207c>
 8012274:	40c00003 	ldbu	r3,0(r8)
 8012278:	00bff7c4 	movi	r2,-33
 801227c:	1884703a 	and	r2,r3,r2
 8012280:	10803fcc 	andi	r2,r2,255
 8012284:	1080201c 	xori	r2,r2,128
 8012288:	10bfe004 	addi	r2,r2,-128
 801228c:	00c01604 	movi	r3,88
 8012290:	10c01426 	beq	r2,r3,80122e4 <_strtoull_r+0x2e4>
 8012294:	00800204 	movi	r2,8
 8012298:	010001c4 	movi	r4,7
 801229c:	043fffc4 	movi	r16,-1
 80122a0:	04880034 	movhi	r18,8192
 80122a4:	d8800015 	stw	r2,0(sp)
 80122a8:	d9000315 	stw	r4,12(sp)
 80122ac:	9425883a 	add	r18,r18,r16
 80122b0:	0027883a 	mov	r19,zero
 80122b4:	1039883a 	mov	fp,r2
 80122b8:	003f9406 	br	801210c <__alt_data_end+0xfc01210c>
 80122bc:	00800c04 	movi	r2,48
 80122c0:	48801426 	beq	r9,r2,8012314 <_strtoull_r+0x314>
 80122c4:	04840034 	movhi	r18,4096
 80122c8:	008003c4 	movi	r2,15
 80122cc:	94bfffc4 	addi	r18,r18,-1
 80122d0:	d8800315 	stw	r2,12(sp)
 80122d4:	043fffc4 	movi	r16,-1
 80122d8:	df000015 	stw	fp,0(sp)
 80122dc:	0027883a 	mov	r19,zero
 80122e0:	003f8a06 	br	801210c <__alt_data_end+0xfc01210c>
 80122e4:	01000404 	movi	r4,16
 80122e8:	01c003c4 	movi	r7,15
 80122ec:	043fffc4 	movi	r16,-1
 80122f0:	04440034 	movhi	r17,4096
 80122f4:	42400047 	ldb	r9,1(r8)
 80122f8:	d9000015 	stw	r4,0(sp)
 80122fc:	d9c00315 	stw	r7,12(sp)
 8012300:	42000084 	addi	r8,r8,2
 8012304:	8c23883a 	add	r17,r17,r16
 8012308:	0027883a 	mov	r19,zero
 801230c:	2039883a 	mov	fp,r4
 8012310:	003f7006 	br	80120d4 <__alt_data_end+0xfc0120d4>
 8012314:	40c00003 	ldbu	r3,0(r8)
 8012318:	00bff7c4 	movi	r2,-33
 801231c:	1884703a 	and	r2,r3,r2
 8012320:	10803fcc 	andi	r2,r2,255
 8012324:	1080201c 	xori	r2,r2,128
 8012328:	10bfe004 	addi	r2,r2,-128
 801232c:	00c01604 	movi	r3,88
 8012330:	10ffec26 	beq	r2,r3,80122e4 <__alt_data_end+0xfc0122e4>
 8012334:	01c003c4 	movi	r7,15
 8012338:	043fffc4 	movi	r16,-1
 801233c:	04840034 	movhi	r18,4096
 8012340:	d9c00315 	stw	r7,12(sp)
 8012344:	9425883a 	add	r18,r18,r16
 8012348:	df000015 	stw	fp,0(sp)
 801234c:	0027883a 	mov	r19,zero
 8012350:	003f6e06 	br	801210c <__alt_data_end+0xfc01210c>

08012354 <__ssprint_r>:
 8012354:	30800217 	ldw	r2,8(r6)
 8012358:	defff604 	addi	sp,sp,-40
 801235c:	ddc00715 	stw	r23,28(sp)
 8012360:	dcc00315 	stw	r19,12(sp)
 8012364:	dfc00915 	stw	ra,36(sp)
 8012368:	df000815 	stw	fp,32(sp)
 801236c:	dd800615 	stw	r22,24(sp)
 8012370:	dd400515 	stw	r21,20(sp)
 8012374:	dd000415 	stw	r20,16(sp)
 8012378:	dc800215 	stw	r18,8(sp)
 801237c:	dc400115 	stw	r17,4(sp)
 8012380:	dc000015 	stw	r16,0(sp)
 8012384:	3027883a 	mov	r19,r6
 8012388:	35c00017 	ldw	r23,0(r6)
 801238c:	10005526 	beq	r2,zero,80124e4 <__ssprint_r+0x190>
 8012390:	2029883a 	mov	r20,r4
 8012394:	29000017 	ldw	r4,0(r5)
 8012398:	2821883a 	mov	r16,r5
 801239c:	0039883a 	mov	fp,zero
 80123a0:	0023883a 	mov	r17,zero
 80123a4:	88003926 	beq	r17,zero,801248c <__ssprint_r+0x138>
 80123a8:	84800217 	ldw	r18,8(r16)
 80123ac:	902d883a 	mov	r22,r18
 80123b0:	8c803a36 	bltu	r17,r18,801249c <__ssprint_r+0x148>
 80123b4:	80c0030b 	ldhu	r3,12(r16)
 80123b8:	1881200c 	andi	r2,r3,1152
 80123bc:	10002626 	beq	r2,zero,8012458 <__ssprint_r+0x104>
 80123c0:	80800517 	ldw	r2,20(r16)
 80123c4:	81400417 	ldw	r5,16(r16)
 80123c8:	89c00044 	addi	r7,r17,1
 80123cc:	108d883a 	add	r6,r2,r2
 80123d0:	3085883a 	add	r2,r6,r2
 80123d4:	100cd7fa 	srli	r6,r2,31
 80123d8:	216dc83a 	sub	r22,r4,r5
 80123dc:	3d89883a 	add	r4,r7,r22
 80123e0:	3085883a 	add	r2,r6,r2
 80123e4:	1025d07a 	srai	r18,r2,1
 80123e8:	900d883a 	mov	r6,r18
 80123ec:	9100022e 	bgeu	r18,r4,80123f8 <__ssprint_r+0xa4>
 80123f0:	2025883a 	mov	r18,r4
 80123f4:	200d883a 	mov	r6,r4
 80123f8:	18c1000c 	andi	r3,r3,1024
 80123fc:	a009883a 	mov	r4,r20
 8012400:	18002926 	beq	r3,zero,80124a8 <__ssprint_r+0x154>
 8012404:	300b883a 	mov	r5,r6
 8012408:	800390c0 	call	800390c <_malloc_r>
 801240c:	102b883a 	mov	r21,r2
 8012410:	10002b26 	beq	r2,zero,80124c0 <__ssprint_r+0x16c>
 8012414:	81400417 	ldw	r5,16(r16)
 8012418:	1009883a 	mov	r4,r2
 801241c:	b00d883a 	mov	r6,r22
 8012420:	800e0e40 	call	800e0e4 <memcpy>
 8012424:	8080030b 	ldhu	r2,12(r16)
 8012428:	00fedfc4 	movi	r3,-1153
 801242c:	10c4703a 	and	r2,r2,r3
 8012430:	10802014 	ori	r2,r2,128
 8012434:	8080030d 	sth	r2,12(r16)
 8012438:	ad89883a 	add	r4,r21,r22
 801243c:	95adc83a 	sub	r22,r18,r22
 8012440:	84800515 	stw	r18,20(r16)
 8012444:	85800215 	stw	r22,8(r16)
 8012448:	85400415 	stw	r21,16(r16)
 801244c:	81000015 	stw	r4,0(r16)
 8012450:	8825883a 	mov	r18,r17
 8012454:	882d883a 	mov	r22,r17
 8012458:	e00b883a 	mov	r5,fp
 801245c:	b00d883a 	mov	r6,r22
 8012460:	800e21c0 	call	800e21c <memmove>
 8012464:	80c00217 	ldw	r3,8(r16)
 8012468:	81000017 	ldw	r4,0(r16)
 801246c:	98800217 	ldw	r2,8(r19)
 8012470:	1ca5c83a 	sub	r18,r3,r18
 8012474:	2589883a 	add	r4,r4,r22
 8012478:	84800215 	stw	r18,8(r16)
 801247c:	81000015 	stw	r4,0(r16)
 8012480:	1463c83a 	sub	r17,r2,r17
 8012484:	9c400215 	stw	r17,8(r19)
 8012488:	88001626 	beq	r17,zero,80124e4 <__ssprint_r+0x190>
 801248c:	bf000017 	ldw	fp,0(r23)
 8012490:	bc400117 	ldw	r17,4(r23)
 8012494:	bdc00204 	addi	r23,r23,8
 8012498:	003fc206 	br	80123a4 <__alt_data_end+0xfc0123a4>
 801249c:	8825883a 	mov	r18,r17
 80124a0:	882d883a 	mov	r22,r17
 80124a4:	003fec06 	br	8012458 <__alt_data_end+0xfc012458>
 80124a8:	800f5280 	call	800f528 <_realloc_r>
 80124ac:	102b883a 	mov	r21,r2
 80124b0:	103fe11e 	bne	r2,zero,8012438 <__alt_data_end+0xfc012438>
 80124b4:	81400417 	ldw	r5,16(r16)
 80124b8:	a009883a 	mov	r4,r20
 80124bc:	800d1780 	call	800d178 <_free_r>
 80124c0:	80c0030b 	ldhu	r3,12(r16)
 80124c4:	00800304 	movi	r2,12
 80124c8:	a0800015 	stw	r2,0(r20)
 80124cc:	18c01014 	ori	r3,r3,64
 80124d0:	80c0030d 	sth	r3,12(r16)
 80124d4:	00bfffc4 	movi	r2,-1
 80124d8:	98000215 	stw	zero,8(r19)
 80124dc:	98000115 	stw	zero,4(r19)
 80124e0:	00000206 	br	80124ec <__ssprint_r+0x198>
 80124e4:	98000115 	stw	zero,4(r19)
 80124e8:	0005883a 	mov	r2,zero
 80124ec:	dfc00917 	ldw	ra,36(sp)
 80124f0:	df000817 	ldw	fp,32(sp)
 80124f4:	ddc00717 	ldw	r23,28(sp)
 80124f8:	dd800617 	ldw	r22,24(sp)
 80124fc:	dd400517 	ldw	r21,20(sp)
 8012500:	dd000417 	ldw	r20,16(sp)
 8012504:	dcc00317 	ldw	r19,12(sp)
 8012508:	dc800217 	ldw	r18,8(sp)
 801250c:	dc400117 	ldw	r17,4(sp)
 8012510:	dc000017 	ldw	r16,0(sp)
 8012514:	dec00a04 	addi	sp,sp,40
 8012518:	f800283a 	ret

0801251c <___svfiprintf_internal_r>:
 801251c:	2880030b 	ldhu	r2,12(r5)
 8012520:	deffc804 	addi	sp,sp,-224
 8012524:	dd403315 	stw	r21,204(sp)
 8012528:	dfc03715 	stw	ra,220(sp)
 801252c:	df003615 	stw	fp,216(sp)
 8012530:	ddc03515 	stw	r23,212(sp)
 8012534:	dd803415 	stw	r22,208(sp)
 8012538:	dd003215 	stw	r20,200(sp)
 801253c:	dcc03115 	stw	r19,196(sp)
 8012540:	dc803015 	stw	r18,192(sp)
 8012544:	dc402f15 	stw	r17,188(sp)
 8012548:	dc002e15 	stw	r16,184(sp)
 801254c:	d9402215 	stw	r5,136(sp)
 8012550:	d9002915 	stw	r4,164(sp)
 8012554:	1080200c 	andi	r2,r2,128
 8012558:	d9c02415 	stw	r7,144(sp)
 801255c:	302b883a 	mov	r21,r6
 8012560:	10000226 	beq	r2,zero,801256c <___svfiprintf_internal_r+0x50>
 8012564:	28800417 	ldw	r2,16(r5)
 8012568:	10042526 	beq	r2,zero,8013600 <___svfiprintf_internal_r+0x10e4>
 801256c:	d8801a04 	addi	r2,sp,104
 8012570:	d8c019c4 	addi	r3,sp,103
 8012574:	dc402917 	ldw	r17,164(sp)
 8012578:	04c200b4 	movhi	r19,2050
 801257c:	10c9c83a 	sub	r4,r2,r3
 8012580:	9cf8fe04 	addi	r19,r19,-7176
 8012584:	d8801e15 	stw	r2,120(sp)
 8012588:	d8c01f15 	stw	r3,124(sp)
 801258c:	dec01a15 	stw	sp,104(sp)
 8012590:	d8001c15 	stw	zero,112(sp)
 8012594:	d8001b15 	stw	zero,108(sp)
 8012598:	d8002a15 	stw	zero,168(sp)
 801259c:	d8002615 	stw	zero,152(sp)
 80125a0:	d811883a 	mov	r8,sp
 80125a4:	d9002c15 	stw	r4,176(sp)
 80125a8:	a8800007 	ldb	r2,0(r21)
 80125ac:	1002af26 	beq	r2,zero,801306c <___svfiprintf_internal_r+0xb50>
 80125b0:	01000944 	movi	r4,37
 80125b4:	1102ad26 	beq	r2,r4,801306c <___svfiprintf_internal_r+0xb50>
 80125b8:	a805883a 	mov	r2,r21
 80125bc:	00000106 	br	80125c4 <___svfiprintf_internal_r+0xa8>
 80125c0:	19000326 	beq	r3,r4,80125d0 <___svfiprintf_internal_r+0xb4>
 80125c4:	10800044 	addi	r2,r2,1
 80125c8:	10c00007 	ldb	r3,0(r2)
 80125cc:	183ffc1e 	bne	r3,zero,80125c0 <__alt_data_end+0xfc0125c0>
 80125d0:	1561c83a 	sub	r16,r2,r21
 80125d4:	1025883a 	mov	r18,r2
 80125d8:	80000e26 	beq	r16,zero,8012614 <___svfiprintf_internal_r+0xf8>
 80125dc:	d8c01c17 	ldw	r3,112(sp)
 80125e0:	d8801b17 	ldw	r2,108(sp)
 80125e4:	45400015 	stw	r21,0(r8)
 80125e8:	1c07883a 	add	r3,r3,r16
 80125ec:	10800044 	addi	r2,r2,1
 80125f0:	d8c01c15 	stw	r3,112(sp)
 80125f4:	44000115 	stw	r16,4(r8)
 80125f8:	d8801b15 	stw	r2,108(sp)
 80125fc:	00c001c4 	movi	r3,7
 8012600:	18832616 	blt	r3,r2,801329c <___svfiprintf_internal_r+0xd80>
 8012604:	42000204 	addi	r8,r8,8
 8012608:	d9402617 	ldw	r5,152(sp)
 801260c:	2c0b883a 	add	r5,r5,r16
 8012610:	d9402615 	stw	r5,152(sp)
 8012614:	90800007 	ldb	r2,0(r18)
 8012618:	1002b226 	beq	r2,zero,80130e4 <___svfiprintf_internal_r+0xbc8>
 801261c:	00bfffc4 	movi	r2,-1
 8012620:	95400044 	addi	r21,r18,1
 8012624:	91800047 	ldb	r6,1(r18)
 8012628:	d8001d85 	stb	zero,118(sp)
 801262c:	002d883a 	mov	r22,zero
 8012630:	d8802015 	stw	r2,128(sp)
 8012634:	d8002315 	stw	zero,140(sp)
 8012638:	0021883a 	mov	r16,zero
 801263c:	04801604 	movi	r18,88
 8012640:	05000244 	movi	r20,9
 8012644:	402f883a 	mov	r23,r8
 8012648:	ad400044 	addi	r21,r21,1
 801264c:	30bff804 	addi	r2,r6,-32
 8012650:	9081ae36 	bltu	r18,r2,8012d0c <___svfiprintf_internal_r+0x7f0>
 8012654:	100490ba 	slli	r2,r2,2
 8012658:	00c20074 	movhi	r3,2049
 801265c:	18c99b04 	addi	r3,r3,9836
 8012660:	10c5883a 	add	r2,r2,r3
 8012664:	10800017 	ldw	r2,0(r2)
 8012668:	1000683a 	jmp	r2
 801266c:	0801281c 	xori	zero,at,1184
 8012670:	08012d0c 	andi	zero,at,1204
 8012674:	08012d0c 	andi	zero,at,1204
 8012678:	08012810 	cmplti	zero,at,1184
 801267c:	08012d0c 	andi	zero,at,1204
 8012680:	08012d0c 	andi	zero,at,1204
 8012684:	08012d0c 	andi	zero,at,1204
 8012688:	08012d0c 	andi	zero,at,1204
 801268c:	08012d0c 	andi	zero,at,1204
 8012690:	08012d0c 	andi	zero,at,1204
 8012694:	080127d0 	cmplti	zero,at,1183
 8012698:	08012804 	addi	zero,at,1184
 801269c:	08012d0c 	andi	zero,at,1204
 80126a0:	080127f8 	rdprs	zero,at,1183
 80126a4:	08012d40 	call	8012d4 <__alt_mem_sdram_controller-0x77fed2c>
 80126a8:	08012d0c 	andi	zero,at,1204
 80126ac:	08012d34 	orhi	zero,at,1204
 80126b0:	08012cc8 	cmpgei	zero,at,1203
 80126b4:	08012cc8 	cmpgei	zero,at,1203
 80126b8:	08012cc8 	cmpgei	zero,at,1203
 80126bc:	08012cc8 	cmpgei	zero,at,1203
 80126c0:	08012cc8 	cmpgei	zero,at,1203
 80126c4:	08012cc8 	cmpgei	zero,at,1203
 80126c8:	08012cc8 	cmpgei	zero,at,1203
 80126cc:	08012cc8 	cmpgei	zero,at,1203
 80126d0:	08012cc8 	cmpgei	zero,at,1203
 80126d4:	08012d0c 	andi	zero,at,1204
 80126d8:	08012d0c 	andi	zero,at,1204
 80126dc:	08012d0c 	andi	zero,at,1204
 80126e0:	08012d0c 	andi	zero,at,1204
 80126e4:	08012d0c 	andi	zero,at,1204
 80126e8:	08012d0c 	andi	zero,at,1204
 80126ec:	08012d0c 	andi	zero,at,1204
 80126f0:	08012d0c 	andi	zero,at,1204
 80126f4:	08012d0c 	andi	zero,at,1204
 80126f8:	08012d0c 	andi	zero,at,1204
 80126fc:	08012c5c 	xori	zero,at,1201
 8012700:	08012d0c 	andi	zero,at,1204
 8012704:	08012d0c 	andi	zero,at,1204
 8012708:	08012d0c 	andi	zero,at,1204
 801270c:	08012d0c 	andi	zero,at,1204
 8012710:	08012d0c 	andi	zero,at,1204
 8012714:	08012d0c 	andi	zero,at,1204
 8012718:	08012d0c 	andi	zero,at,1204
 801271c:	08012d0c 	andi	zero,at,1204
 8012720:	08012d0c 	andi	zero,at,1204
 8012724:	08012d0c 	andi	zero,at,1204
 8012728:	08012dcc 	andi	zero,at,1207
 801272c:	08012d0c 	andi	zero,at,1204
 8012730:	08012d0c 	andi	zero,at,1204
 8012734:	08012d0c 	andi	zero,at,1204
 8012738:	08012d0c 	andi	zero,at,1204
 801273c:	08012d0c 	andi	zero,at,1204
 8012740:	08012d88 	cmpgei	zero,at,1206
 8012744:	08012d0c 	andi	zero,at,1204
 8012748:	08012d0c 	andi	zero,at,1204
 801274c:	08012c14 	ori	zero,at,1200
 8012750:	08012d0c 	andi	zero,at,1204
 8012754:	08012d0c 	andi	zero,at,1204
 8012758:	08012d0c 	andi	zero,at,1204
 801275c:	08012d0c 	andi	zero,at,1204
 8012760:	08012d0c 	andi	zero,at,1204
 8012764:	08012d0c 	andi	zero,at,1204
 8012768:	08012d0c 	andi	zero,at,1204
 801276c:	08012d0c 	andi	zero,at,1204
 8012770:	08012d0c 	andi	zero,at,1204
 8012774:	08012d0c 	andi	zero,at,1204
 8012778:	08012adc 	xori	zero,at,1195
 801277c:	08012a80 	call	8012a8 <__alt_mem_sdram_controller-0x77fed58>
 8012780:	08012d0c 	andi	zero,at,1204
 8012784:	08012d0c 	andi	zero,at,1204
 8012788:	08012d0c 	andi	zero,at,1204
 801278c:	08012a74 	orhi	zero,at,1193
 8012790:	08012a80 	call	8012a8 <__alt_mem_sdram_controller-0x77fed58>
 8012794:	08012d0c 	andi	zero,at,1204
 8012798:	08012d0c 	andi	zero,at,1204
 801279c:	08012ac4 	addi	zero,at,1195
 80127a0:	08012d0c 	andi	zero,at,1204
 80127a4:	08012a40 	call	8012a4 <__alt_mem_sdram_controller-0x77fed5c>
 80127a8:	08012a10 	cmplti	zero,at,1192
 80127ac:	080129c8 	cmpgei	zero,at,1191
 80127b0:	080129bc 	xorhi	zero,at,1190
 80127b4:	08012d0c 	andi	zero,at,1204
 80127b8:	08012954 	ori	zero,at,1189
 80127bc:	08012d0c 	andi	zero,at,1204
 80127c0:	08012884 	addi	zero,at,1186
 80127c4:	08012d0c 	andi	zero,at,1204
 80127c8:	08012d0c 	andi	zero,at,1204
 80127cc:	08012838 	rdprs	zero,at,1184
 80127d0:	d9402417 	ldw	r5,144(sp)
 80127d4:	d8c02417 	ldw	r3,144(sp)
 80127d8:	29400017 	ldw	r5,0(r5)
 80127dc:	18800104 	addi	r2,r3,4
 80127e0:	d9402315 	stw	r5,140(sp)
 80127e4:	2802f70e 	bge	r5,zero,80133c4 <___svfiprintf_internal_r+0xea8>
 80127e8:	d9002317 	ldw	r4,140(sp)
 80127ec:	d8802415 	stw	r2,144(sp)
 80127f0:	0109c83a 	sub	r4,zero,r4
 80127f4:	d9002315 	stw	r4,140(sp)
 80127f8:	84000114 	ori	r16,r16,4
 80127fc:	a9800007 	ldb	r6,0(r21)
 8012800:	003f9106 	br	8012648 <__alt_data_end+0xfc012648>
 8012804:	05800ac4 	movi	r22,43
 8012808:	a9800007 	ldb	r6,0(r21)
 801280c:	003f8e06 	br	8012648 <__alt_data_end+0xfc012648>
 8012810:	84000054 	ori	r16,r16,1
 8012814:	a9800007 	ldb	r6,0(r21)
 8012818:	003f8b06 	br	8012648 <__alt_data_end+0xfc012648>
 801281c:	b0803fcc 	andi	r2,r22,255
 8012820:	1080201c 	xori	r2,r2,128
 8012824:	10bfe004 	addi	r2,r2,-128
 8012828:	1003221e 	bne	r2,zero,80134b4 <___svfiprintf_internal_r+0xf98>
 801282c:	05800804 	movi	r22,32
 8012830:	a9800007 	ldb	r6,0(r21)
 8012834:	003f8406 	br	8012648 <__alt_data_end+0xfc012648>
 8012838:	014200b4 	movhi	r5,2050
 801283c:	2977dd04 	addi	r5,r5,-8332
 8012840:	d9402a15 	stw	r5,168(sp)
 8012844:	dd801d85 	stb	r22,118(sp)
 8012848:	80c0080c 	andi	r3,r16,32
 801284c:	b811883a 	mov	r8,r23
 8012850:	d8802417 	ldw	r2,144(sp)
 8012854:	1800f726 	beq	r3,zero,8012c34 <___svfiprintf_internal_r+0x718>
 8012858:	d8c02417 	ldw	r3,144(sp)
 801285c:	14800017 	ldw	r18,0(r2)
 8012860:	15800117 	ldw	r22,4(r2)
 8012864:	18c00204 	addi	r3,r3,8
 8012868:	d8c02415 	stw	r3,144(sp)
 801286c:	8080004c 	andi	r2,r16,1
 8012870:	1002bd26 	beq	r2,zero,8013368 <___svfiprintf_internal_r+0xe4c>
 8012874:	9586b03a 	or	r3,r18,r22
 8012878:	1803081e 	bne	r3,zero,801349c <___svfiprintf_internal_r+0xf80>
 801287c:	00800084 	movi	r2,2
 8012880:	00000b06 	br	80128b0 <___svfiprintf_internal_r+0x394>
 8012884:	80c0080c 	andi	r3,r16,32
 8012888:	b811883a 	mov	r8,r23
 801288c:	d8802417 	ldw	r2,144(sp)
 8012890:	18014226 	beq	r3,zero,8012d9c <___svfiprintf_internal_r+0x880>
 8012894:	d9402417 	ldw	r5,144(sp)
 8012898:	14800017 	ldw	r18,0(r2)
 801289c:	15800117 	ldw	r22,4(r2)
 80128a0:	29400204 	addi	r5,r5,8
 80128a4:	d9402415 	stw	r5,144(sp)
 80128a8:	00800044 	movi	r2,1
 80128ac:	9586b03a 	or	r3,r18,r22
 80128b0:	dd002017 	ldw	r20,128(sp)
 80128b4:	d8001d85 	stb	zero,118(sp)
 80128b8:	002f883a 	mov	r23,zero
 80128bc:	d9002017 	ldw	r4,128(sp)
 80128c0:	20000216 	blt	r4,zero,80128cc <___svfiprintf_internal_r+0x3b0>
 80128c4:	013fdfc4 	movi	r4,-129
 80128c8:	8120703a 	and	r16,r16,r4
 80128cc:	1801e91e 	bne	r3,zero,8013074 <___svfiprintf_internal_r+0xb58>
 80128d0:	d9402017 	ldw	r5,128(sp)
 80128d4:	28025f26 	beq	r5,zero,8013254 <___svfiprintf_internal_r+0xd38>
 80128d8:	10803fcc 	andi	r2,r2,255
 80128dc:	00c00044 	movi	r3,1
 80128e0:	10c2b226 	beq	r2,r3,80133ac <___svfiprintf_internal_r+0xe90>
 80128e4:	00c00084 	movi	r3,2
 80128e8:	10c27c26 	beq	r2,r3,80132dc <___svfiprintf_internal_r+0xdc0>
 80128ec:	d8c01a04 	addi	r3,sp,104
 80128f0:	9008d0fa 	srli	r4,r18,3
 80128f4:	b00a977a 	slli	r5,r22,29
 80128f8:	b02cd0fa 	srli	r22,r22,3
 80128fc:	948001cc 	andi	r18,r18,7
 8012900:	90800c04 	addi	r2,r18,48
 8012904:	18ffffc4 	addi	r3,r3,-1
 8012908:	2924b03a 	or	r18,r5,r4
 801290c:	18800005 	stb	r2,0(r3)
 8012910:	9588b03a 	or	r4,r18,r22
 8012914:	203ff61e 	bne	r4,zero,80128f0 <__alt_data_end+0xfc0128f0>
 8012918:	8100004c 	andi	r4,r16,1
 801291c:	d8c02715 	stw	r3,156(sp)
 8012920:	20029d26 	beq	r4,zero,8013398 <___svfiprintf_internal_r+0xe7c>
 8012924:	10803fcc 	andi	r2,r2,255
 8012928:	1080201c 	xori	r2,r2,128
 801292c:	10bfe004 	addi	r2,r2,-128
 8012930:	01000c04 	movi	r4,48
 8012934:	11031826 	beq	r2,r4,8013598 <___svfiprintf_internal_r+0x107c>
 8012938:	d9402717 	ldw	r5,156(sp)
 801293c:	d8801e17 	ldw	r2,120(sp)
 8012940:	193fffc5 	stb	r4,-1(r3)
 8012944:	297fffc4 	addi	r5,r5,-1
 8012948:	d9402715 	stw	r5,156(sp)
 801294c:	1169c83a 	sub	r20,r2,r5
 8012950:	00024606 	br	801326c <___svfiprintf_internal_r+0xd50>
 8012954:	d9402417 	ldw	r5,144(sp)
 8012958:	d8802417 	ldw	r2,144(sp)
 801295c:	d8001d85 	stb	zero,118(sp)
 8012960:	29400017 	ldw	r5,0(r5)
 8012964:	b811883a 	mov	r8,r23
 8012968:	15800104 	addi	r22,r2,4
 801296c:	d9402715 	stw	r5,156(sp)
 8012970:	28031826 	beq	r5,zero,80135d4 <___svfiprintf_internal_r+0x10b8>
 8012974:	d9002017 	ldw	r4,128(sp)
 8012978:	20030b16 	blt	r4,zero,80135a8 <___svfiprintf_internal_r+0x108c>
 801297c:	d9002717 	ldw	r4,156(sp)
 8012980:	d9802017 	ldw	r6,128(sp)
 8012984:	000b883a 	mov	r5,zero
 8012988:	ddc02d15 	stw	r23,180(sp)
 801298c:	800df800 	call	800df80 <memchr>
 8012990:	da002d17 	ldw	r8,180(sp)
 8012994:	10033926 	beq	r2,zero,801367c <___svfiprintf_internal_r+0x1160>
 8012998:	d8c02717 	ldw	r3,156(sp)
 801299c:	d9002017 	ldw	r4,128(sp)
 80129a0:	10e9c83a 	sub	r20,r2,r3
 80129a4:	2500010e 	bge	r4,r20,80129ac <___svfiprintf_internal_r+0x490>
 80129a8:	2029883a 	mov	r20,r4
 80129ac:	ddc01d83 	ldbu	r23,118(sp)
 80129b0:	dd802415 	stw	r22,144(sp)
 80129b4:	d8002015 	stw	zero,128(sp)
 80129b8:	00022c06 	br	801326c <___svfiprintf_internal_r+0xd50>
 80129bc:	84000814 	ori	r16,r16,32
 80129c0:	a9800007 	ldb	r6,0(r21)
 80129c4:	003f2006 	br	8012648 <__alt_data_end+0xfc012648>
 80129c8:	d8802417 	ldw	r2,144(sp)
 80129cc:	d8c02417 	ldw	r3,144(sp)
 80129d0:	010200b4 	movhi	r4,2050
 80129d4:	14800017 	ldw	r18,0(r2)
 80129d8:	00800c04 	movi	r2,48
 80129dc:	18c00104 	addi	r3,r3,4
 80129e0:	d8801d05 	stb	r2,116(sp)
 80129e4:	2137dd04 	addi	r4,r4,-8332
 80129e8:	00801e04 	movi	r2,120
 80129ec:	d8801d45 	stb	r2,117(sp)
 80129f0:	d8c02415 	stw	r3,144(sp)
 80129f4:	b811883a 	mov	r8,r23
 80129f8:	002d883a 	mov	r22,zero
 80129fc:	84000094 	ori	r16,r16,2
 8012a00:	d9002a15 	stw	r4,168(sp)
 8012a04:	00800084 	movi	r2,2
 8012a08:	9007883a 	mov	r3,r18
 8012a0c:	003fa806 	br	80128b0 <__alt_data_end+0xfc0128b0>
 8012a10:	80c0080c 	andi	r3,r16,32
 8012a14:	b811883a 	mov	r8,r23
 8012a18:	d8802417 	ldw	r2,144(sp)
 8012a1c:	1800f026 	beq	r3,zero,8012de0 <___svfiprintf_internal_r+0x8c4>
 8012a20:	14800017 	ldw	r18,0(r2)
 8012a24:	15800117 	ldw	r22,4(r2)
 8012a28:	d8802417 	ldw	r2,144(sp)
 8012a2c:	9586b03a 	or	r3,r18,r22
 8012a30:	10800204 	addi	r2,r2,8
 8012a34:	d8802415 	stw	r2,144(sp)
 8012a38:	0005883a 	mov	r2,zero
 8012a3c:	003f9c06 	br	80128b0 <__alt_data_end+0xfc0128b0>
 8012a40:	dd801d85 	stb	r22,118(sp)
 8012a44:	8080080c 	andi	r2,r16,32
 8012a48:	b811883a 	mov	r8,r23
 8012a4c:	10028a1e 	bne	r2,zero,8013478 <___svfiprintf_internal_r+0xf5c>
 8012a50:	8080040c 	andi	r2,r16,16
 8012a54:	1002c726 	beq	r2,zero,8013574 <___svfiprintf_internal_r+0x1058>
 8012a58:	d8c02417 	ldw	r3,144(sp)
 8012a5c:	d9002617 	ldw	r4,152(sp)
 8012a60:	18800017 	ldw	r2,0(r3)
 8012a64:	18c00104 	addi	r3,r3,4
 8012a68:	d8c02415 	stw	r3,144(sp)
 8012a6c:	11000015 	stw	r4,0(r2)
 8012a70:	003ecd06 	br	80125a8 <__alt_data_end+0xfc0125a8>
 8012a74:	84001014 	ori	r16,r16,64
 8012a78:	a9800007 	ldb	r6,0(r21)
 8012a7c:	003ef206 	br	8012648 <__alt_data_end+0xfc012648>
 8012a80:	dd801d85 	stb	r22,118(sp)
 8012a84:	8080080c 	andi	r2,r16,32
 8012a88:	b811883a 	mov	r8,r23
 8012a8c:	d8c02417 	ldw	r3,144(sp)
 8012a90:	10007826 	beq	r2,zero,8012c74 <___svfiprintf_internal_r+0x758>
 8012a94:	d9002417 	ldw	r4,144(sp)
 8012a98:	18800117 	ldw	r2,4(r3)
 8012a9c:	1c800017 	ldw	r18,0(r3)
 8012aa0:	21000204 	addi	r4,r4,8
 8012aa4:	d9002415 	stw	r4,144(sp)
 8012aa8:	102d883a 	mov	r22,r2
 8012aac:	10007c16 	blt	r2,zero,8012ca0 <___svfiprintf_internal_r+0x784>
 8012ab0:	ddc01d83 	ldbu	r23,118(sp)
 8012ab4:	dd002017 	ldw	r20,128(sp)
 8012ab8:	00800044 	movi	r2,1
 8012abc:	9586b03a 	or	r3,r18,r22
 8012ac0:	003f7e06 	br	80128bc <__alt_data_end+0xfc0128bc>
 8012ac4:	a9800007 	ldb	r6,0(r21)
 8012ac8:	01001b04 	movi	r4,108
 8012acc:	a805883a 	mov	r2,r21
 8012ad0:	31027a26 	beq	r6,r4,80134bc <___svfiprintf_internal_r+0xfa0>
 8012ad4:	84000414 	ori	r16,r16,16
 8012ad8:	003edb06 	br	8012648 <__alt_data_end+0xfc012648>
 8012adc:	d9402417 	ldw	r5,144(sp)
 8012ae0:	04800044 	movi	r18,1
 8012ae4:	d8c01004 	addi	r3,sp,64
 8012ae8:	28800017 	ldw	r2,0(r5)
 8012aec:	29400104 	addi	r5,r5,4
 8012af0:	b811883a 	mov	r8,r23
 8012af4:	d8001d85 	stb	zero,118(sp)
 8012af8:	d8801005 	stb	r2,64(sp)
 8012afc:	d9402415 	stw	r5,144(sp)
 8012b00:	9029883a 	mov	r20,r18
 8012b04:	d8c02715 	stw	r3,156(sp)
 8012b08:	d8002015 	stw	zero,128(sp)
 8012b0c:	80c0008c 	andi	r3,r16,2
 8012b10:	d8c02115 	stw	r3,132(sp)
 8012b14:	18000126 	beq	r3,zero,8012b1c <___svfiprintf_internal_r+0x600>
 8012b18:	94800084 	addi	r18,r18,2
 8012b1c:	80c0210c 	andi	r3,r16,132
 8012b20:	d8c02515 	stw	r3,148(sp)
 8012b24:	1800ba1e 	bne	r3,zero,8012e10 <___svfiprintf_internal_r+0x8f4>
 8012b28:	d9002317 	ldw	r4,140(sp)
 8012b2c:	24b9c83a 	sub	fp,r4,r18
 8012b30:	0700b70e 	bge	zero,fp,8012e10 <___svfiprintf_internal_r+0x8f4>
 8012b34:	02400404 	movi	r9,16
 8012b38:	d8c01c17 	ldw	r3,112(sp)
 8012b3c:	d8801b17 	ldw	r2,108(sp)
 8012b40:	4f02c00e 	bge	r9,fp,8013644 <___svfiprintf_internal_r+0x1128>
 8012b44:	010200b4 	movhi	r4,2050
 8012b48:	21390204 	addi	r4,r4,-7160
 8012b4c:	d9002815 	stw	r4,160(sp)
 8012b50:	a809883a 	mov	r4,r21
 8012b54:	dc002b15 	stw	r16,172(sp)
 8012b58:	a02b883a 	mov	r21,r20
 8012b5c:	482f883a 	mov	r23,r9
 8012b60:	9029883a 	mov	r20,r18
 8012b64:	058001c4 	movi	r22,7
 8012b68:	e025883a 	mov	r18,fp
 8012b6c:	dc002217 	ldw	r16,136(sp)
 8012b70:	2039883a 	mov	fp,r4
 8012b74:	00000306 	br	8012b84 <___svfiprintf_internal_r+0x668>
 8012b78:	94bffc04 	addi	r18,r18,-16
 8012b7c:	42000204 	addi	r8,r8,8
 8012b80:	bc80130e 	bge	r23,r18,8012bd0 <___svfiprintf_internal_r+0x6b4>
 8012b84:	014200b4 	movhi	r5,2050
 8012b88:	18c00404 	addi	r3,r3,16
 8012b8c:	10800044 	addi	r2,r2,1
 8012b90:	29790204 	addi	r5,r5,-7160
 8012b94:	41400015 	stw	r5,0(r8)
 8012b98:	45c00115 	stw	r23,4(r8)
 8012b9c:	d8c01c15 	stw	r3,112(sp)
 8012ba0:	d8801b15 	stw	r2,108(sp)
 8012ba4:	b0bff40e 	bge	r22,r2,8012b78 <__alt_data_end+0xfc012b78>
 8012ba8:	8809883a 	mov	r4,r17
 8012bac:	800b883a 	mov	r5,r16
 8012bb0:	d9801a04 	addi	r6,sp,104
 8012bb4:	80123540 	call	8012354 <__ssprint_r>
 8012bb8:	1001501e 	bne	r2,zero,80130fc <___svfiprintf_internal_r+0xbe0>
 8012bbc:	94bffc04 	addi	r18,r18,-16
 8012bc0:	d8c01c17 	ldw	r3,112(sp)
 8012bc4:	d8801b17 	ldw	r2,108(sp)
 8012bc8:	d811883a 	mov	r8,sp
 8012bcc:	bcbfed16 	blt	r23,r18,8012b84 <__alt_data_end+0xfc012b84>
 8012bd0:	dc002b17 	ldw	r16,172(sp)
 8012bd4:	e009883a 	mov	r4,fp
 8012bd8:	9039883a 	mov	fp,r18
 8012bdc:	a025883a 	mov	r18,r20
 8012be0:	a829883a 	mov	r20,r21
 8012be4:	202b883a 	mov	r21,r4
 8012be8:	d9002817 	ldw	r4,160(sp)
 8012bec:	e0c7883a 	add	r3,fp,r3
 8012bf0:	10800044 	addi	r2,r2,1
 8012bf4:	41000015 	stw	r4,0(r8)
 8012bf8:	47000115 	stw	fp,4(r8)
 8012bfc:	d8c01c15 	stw	r3,112(sp)
 8012c00:	d8801b15 	stw	r2,108(sp)
 8012c04:	010001c4 	movi	r4,7
 8012c08:	2081da16 	blt	r4,r2,8013374 <___svfiprintf_internal_r+0xe58>
 8012c0c:	42000204 	addi	r8,r8,8
 8012c10:	00008106 	br	8012e18 <___svfiprintf_internal_r+0x8fc>
 8012c14:	010200b4 	movhi	r4,2050
 8012c18:	2137d804 	addi	r4,r4,-8352
 8012c1c:	dd801d85 	stb	r22,118(sp)
 8012c20:	d9002a15 	stw	r4,168(sp)
 8012c24:	80c0080c 	andi	r3,r16,32
 8012c28:	b811883a 	mov	r8,r23
 8012c2c:	d8802417 	ldw	r2,144(sp)
 8012c30:	183f091e 	bne	r3,zero,8012858 <__alt_data_end+0xfc012858>
 8012c34:	80c0040c 	andi	r3,r16,16
 8012c38:	1801f21e 	bne	r3,zero,8013404 <___svfiprintf_internal_r+0xee8>
 8012c3c:	80c0100c 	andi	r3,r16,64
 8012c40:	18024626 	beq	r3,zero,801355c <___svfiprintf_internal_r+0x1040>
 8012c44:	d9402417 	ldw	r5,144(sp)
 8012c48:	1480000b 	ldhu	r18,0(r2)
 8012c4c:	002d883a 	mov	r22,zero
 8012c50:	29400104 	addi	r5,r5,4
 8012c54:	d9402415 	stw	r5,144(sp)
 8012c58:	003f0406 	br	801286c <__alt_data_end+0xfc01286c>
 8012c5c:	84000414 	ori	r16,r16,16
 8012c60:	dd801d85 	stb	r22,118(sp)
 8012c64:	8080080c 	andi	r2,r16,32
 8012c68:	b811883a 	mov	r8,r23
 8012c6c:	d8c02417 	ldw	r3,144(sp)
 8012c70:	103f881e 	bne	r2,zero,8012a94 <__alt_data_end+0xfc012a94>
 8012c74:	8080040c 	andi	r2,r16,16
 8012c78:	1001f81e 	bne	r2,zero,801345c <___svfiprintf_internal_r+0xf40>
 8012c7c:	8080100c 	andi	r2,r16,64
 8012c80:	10021f26 	beq	r2,zero,8013500 <___svfiprintf_internal_r+0xfe4>
 8012c84:	1c80000f 	ldh	r18,0(r3)
 8012c88:	d8802417 	ldw	r2,144(sp)
 8012c8c:	902dd7fa 	srai	r22,r18,31
 8012c90:	10800104 	addi	r2,r2,4
 8012c94:	d8802415 	stw	r2,144(sp)
 8012c98:	b005883a 	mov	r2,r22
 8012c9c:	103f840e 	bge	r2,zero,8012ab0 <__alt_data_end+0xfc012ab0>
 8012ca0:	04a5c83a 	sub	r18,zero,r18
 8012ca4:	9004c03a 	cmpne	r2,r18,zero
 8012ca8:	05adc83a 	sub	r22,zero,r22
 8012cac:	b0adc83a 	sub	r22,r22,r2
 8012cb0:	05c00b44 	movi	r23,45
 8012cb4:	ddc01d85 	stb	r23,118(sp)
 8012cb8:	dd002017 	ldw	r20,128(sp)
 8012cbc:	00800044 	movi	r2,1
 8012cc0:	9586b03a 	or	r3,r18,r22
 8012cc4:	003efd06 	br	80128bc <__alt_data_end+0xfc0128bc>
 8012cc8:	dc002115 	stw	r16,132(sp)
 8012ccc:	d8002315 	stw	zero,140(sp)
 8012cd0:	373ff404 	addi	fp,r6,-48
 8012cd4:	0009883a 	mov	r4,zero
 8012cd8:	a821883a 	mov	r16,r21
 8012cdc:	01400284 	movi	r5,10
 8012ce0:	800334c0 	call	800334c <__mulsi3>
 8012ce4:	81800007 	ldb	r6,0(r16)
 8012ce8:	1709883a 	add	r4,r2,fp
 8012cec:	ad400044 	addi	r21,r21,1
 8012cf0:	373ff404 	addi	fp,r6,-48
 8012cf4:	a821883a 	mov	r16,r21
 8012cf8:	a73ff82e 	bgeu	r20,fp,8012cdc <__alt_data_end+0xfc012cdc>
 8012cfc:	d9002315 	stw	r4,140(sp)
 8012d00:	30bff804 	addi	r2,r6,-32
 8012d04:	dc002117 	ldw	r16,132(sp)
 8012d08:	90be522e 	bgeu	r18,r2,8012654 <__alt_data_end+0xfc012654>
 8012d0c:	dd801d85 	stb	r22,118(sp)
 8012d10:	b811883a 	mov	r8,r23
 8012d14:	3000f326 	beq	r6,zero,80130e4 <___svfiprintf_internal_r+0xbc8>
 8012d18:	04800044 	movi	r18,1
 8012d1c:	d8c01004 	addi	r3,sp,64
 8012d20:	d9801005 	stb	r6,64(sp)
 8012d24:	d8001d85 	stb	zero,118(sp)
 8012d28:	9029883a 	mov	r20,r18
 8012d2c:	d8c02715 	stw	r3,156(sp)
 8012d30:	003f7506 	br	8012b08 <__alt_data_end+0xfc012b08>
 8012d34:	84002014 	ori	r16,r16,128
 8012d38:	a9800007 	ldb	r6,0(r21)
 8012d3c:	003e4206 	br	8012648 <__alt_data_end+0xfc012648>
 8012d40:	a9800007 	ldb	r6,0(r21)
 8012d44:	01400a84 	movi	r5,42
 8012d48:	a8800044 	addi	r2,r21,1
 8012d4c:	31425226 	beq	r6,r5,8013698 <___svfiprintf_internal_r+0x117c>
 8012d50:	373ff404 	addi	fp,r6,-48
 8012d54:	102b883a 	mov	r21,r2
 8012d58:	0009883a 	mov	r4,zero
 8012d5c:	a7024536 	bltu	r20,fp,8013674 <___svfiprintf_internal_r+0x1158>
 8012d60:	01400284 	movi	r5,10
 8012d64:	800334c0 	call	800334c <__mulsi3>
 8012d68:	a9800007 	ldb	r6,0(r21)
 8012d6c:	e089883a 	add	r4,fp,r2
 8012d70:	ad400044 	addi	r21,r21,1
 8012d74:	373ff404 	addi	fp,r6,-48
 8012d78:	a73ff92e 	bgeu	r20,fp,8012d60 <__alt_data_end+0xfc012d60>
 8012d7c:	20021316 	blt	r4,zero,80135cc <___svfiprintf_internal_r+0x10b0>
 8012d80:	d9002015 	stw	r4,128(sp)
 8012d84:	003e3106 	br	801264c <__alt_data_end+0xfc01264c>
 8012d88:	84000414 	ori	r16,r16,16
 8012d8c:	80c0080c 	andi	r3,r16,32
 8012d90:	b811883a 	mov	r8,r23
 8012d94:	d8802417 	ldw	r2,144(sp)
 8012d98:	183ebe1e 	bne	r3,zero,8012894 <__alt_data_end+0xfc012894>
 8012d9c:	80c0040c 	andi	r3,r16,16
 8012da0:	18019e1e 	bne	r3,zero,801341c <___svfiprintf_internal_r+0xf00>
 8012da4:	80c0100c 	andi	r3,r16,64
 8012da8:	1801dc26 	beq	r3,zero,801351c <___svfiprintf_internal_r+0x1000>
 8012dac:	d8c02417 	ldw	r3,144(sp)
 8012db0:	1480000b 	ldhu	r18,0(r2)
 8012db4:	002d883a 	mov	r22,zero
 8012db8:	18c00104 	addi	r3,r3,4
 8012dbc:	d8c02415 	stw	r3,144(sp)
 8012dc0:	00800044 	movi	r2,1
 8012dc4:	9007883a 	mov	r3,r18
 8012dc8:	003eb906 	br	80128b0 <__alt_data_end+0xfc0128b0>
 8012dcc:	84000414 	ori	r16,r16,16
 8012dd0:	80c0080c 	andi	r3,r16,32
 8012dd4:	b811883a 	mov	r8,r23
 8012dd8:	d8802417 	ldw	r2,144(sp)
 8012ddc:	183f101e 	bne	r3,zero,8012a20 <__alt_data_end+0xfc012a20>
 8012de0:	80c0040c 	andi	r3,r16,16
 8012de4:	1801951e 	bne	r3,zero,801343c <___svfiprintf_internal_r+0xf20>
 8012de8:	80c0100c 	andi	r3,r16,64
 8012dec:	1801d326 	beq	r3,zero,801353c <___svfiprintf_internal_r+0x1020>
 8012df0:	d9002417 	ldw	r4,144(sp)
 8012df4:	1480000b 	ldhu	r18,0(r2)
 8012df8:	002d883a 	mov	r22,zero
 8012dfc:	21000104 	addi	r4,r4,4
 8012e00:	d9002415 	stw	r4,144(sp)
 8012e04:	0005883a 	mov	r2,zero
 8012e08:	9007883a 	mov	r3,r18
 8012e0c:	003ea806 	br	80128b0 <__alt_data_end+0xfc0128b0>
 8012e10:	d8c01c17 	ldw	r3,112(sp)
 8012e14:	d8801b17 	ldw	r2,108(sp)
 8012e18:	d9001d87 	ldb	r4,118(sp)
 8012e1c:	20000b26 	beq	r4,zero,8012e4c <___svfiprintf_internal_r+0x930>
 8012e20:	d9001d84 	addi	r4,sp,118
 8012e24:	18c00044 	addi	r3,r3,1
 8012e28:	10800044 	addi	r2,r2,1
 8012e2c:	41000015 	stw	r4,0(r8)
 8012e30:	01000044 	movi	r4,1
 8012e34:	41000115 	stw	r4,4(r8)
 8012e38:	d8c01c15 	stw	r3,112(sp)
 8012e3c:	d8801b15 	stw	r2,108(sp)
 8012e40:	010001c4 	movi	r4,7
 8012e44:	20813616 	blt	r4,r2,8013320 <___svfiprintf_internal_r+0xe04>
 8012e48:	42000204 	addi	r8,r8,8
 8012e4c:	d9402117 	ldw	r5,132(sp)
 8012e50:	28000b26 	beq	r5,zero,8012e80 <___svfiprintf_internal_r+0x964>
 8012e54:	d9001d04 	addi	r4,sp,116
 8012e58:	18c00084 	addi	r3,r3,2
 8012e5c:	10800044 	addi	r2,r2,1
 8012e60:	41000015 	stw	r4,0(r8)
 8012e64:	01000084 	movi	r4,2
 8012e68:	41000115 	stw	r4,4(r8)
 8012e6c:	d8c01c15 	stw	r3,112(sp)
 8012e70:	d8801b15 	stw	r2,108(sp)
 8012e74:	010001c4 	movi	r4,7
 8012e78:	20813216 	blt	r4,r2,8013344 <___svfiprintf_internal_r+0xe28>
 8012e7c:	42000204 	addi	r8,r8,8
 8012e80:	d9402517 	ldw	r5,148(sp)
 8012e84:	01002004 	movi	r4,128
 8012e88:	2900ad26 	beq	r5,r4,8013140 <___svfiprintf_internal_r+0xc24>
 8012e8c:	d9002017 	ldw	r4,128(sp)
 8012e90:	252fc83a 	sub	r23,r4,r20
 8012e94:	05c0330e 	bge	zero,r23,8012f64 <___svfiprintf_internal_r+0xa48>
 8012e98:	01c00404 	movi	r7,16
 8012e9c:	3dc1940e 	bge	r7,r23,80134f0 <___svfiprintf_internal_r+0xfd4>
 8012ea0:	010200b4 	movhi	r4,2050
 8012ea4:	2138fe04 	addi	r4,r4,-7176
 8012ea8:	d9002115 	stw	r4,132(sp)
 8012eac:	a809883a 	mov	r4,r21
 8012eb0:	dc002015 	stw	r16,128(sp)
 8012eb4:	a02b883a 	mov	r21,r20
 8012eb8:	3839883a 	mov	fp,r7
 8012ebc:	9029883a 	mov	r20,r18
 8012ec0:	058001c4 	movi	r22,7
 8012ec4:	b825883a 	mov	r18,r23
 8012ec8:	dc002217 	ldw	r16,136(sp)
 8012ecc:	202f883a 	mov	r23,r4
 8012ed0:	00000306 	br	8012ee0 <___svfiprintf_internal_r+0x9c4>
 8012ed4:	94bffc04 	addi	r18,r18,-16
 8012ed8:	42000204 	addi	r8,r8,8
 8012edc:	e480110e 	bge	fp,r18,8012f24 <___svfiprintf_internal_r+0xa08>
 8012ee0:	18c00404 	addi	r3,r3,16
 8012ee4:	10800044 	addi	r2,r2,1
 8012ee8:	44c00015 	stw	r19,0(r8)
 8012eec:	47000115 	stw	fp,4(r8)
 8012ef0:	d8c01c15 	stw	r3,112(sp)
 8012ef4:	d8801b15 	stw	r2,108(sp)
 8012ef8:	b0bff60e 	bge	r22,r2,8012ed4 <__alt_data_end+0xfc012ed4>
 8012efc:	8809883a 	mov	r4,r17
 8012f00:	800b883a 	mov	r5,r16
 8012f04:	d9801a04 	addi	r6,sp,104
 8012f08:	80123540 	call	8012354 <__ssprint_r>
 8012f0c:	10007b1e 	bne	r2,zero,80130fc <___svfiprintf_internal_r+0xbe0>
 8012f10:	94bffc04 	addi	r18,r18,-16
 8012f14:	d8c01c17 	ldw	r3,112(sp)
 8012f18:	d8801b17 	ldw	r2,108(sp)
 8012f1c:	d811883a 	mov	r8,sp
 8012f20:	e4bfef16 	blt	fp,r18,8012ee0 <__alt_data_end+0xfc012ee0>
 8012f24:	dc002017 	ldw	r16,128(sp)
 8012f28:	b809883a 	mov	r4,r23
 8012f2c:	902f883a 	mov	r23,r18
 8012f30:	a025883a 	mov	r18,r20
 8012f34:	a829883a 	mov	r20,r21
 8012f38:	202b883a 	mov	r21,r4
 8012f3c:	d9402117 	ldw	r5,132(sp)
 8012f40:	1dc7883a 	add	r3,r3,r23
 8012f44:	10800044 	addi	r2,r2,1
 8012f48:	41400015 	stw	r5,0(r8)
 8012f4c:	45c00115 	stw	r23,4(r8)
 8012f50:	d8c01c15 	stw	r3,112(sp)
 8012f54:	d8801b15 	stw	r2,108(sp)
 8012f58:	010001c4 	movi	r4,7
 8012f5c:	2080d616 	blt	r4,r2,80132b8 <___svfiprintf_internal_r+0xd9c>
 8012f60:	42000204 	addi	r8,r8,8
 8012f64:	d9002717 	ldw	r4,156(sp)
 8012f68:	a0c7883a 	add	r3,r20,r3
 8012f6c:	10800044 	addi	r2,r2,1
 8012f70:	41000015 	stw	r4,0(r8)
 8012f74:	45000115 	stw	r20,4(r8)
 8012f78:	d8c01c15 	stw	r3,112(sp)
 8012f7c:	d8801b15 	stw	r2,108(sp)
 8012f80:	010001c4 	movi	r4,7
 8012f84:	2080a516 	blt	r4,r2,801321c <___svfiprintf_internal_r+0xd00>
 8012f88:	42000204 	addi	r8,r8,8
 8012f8c:	8400010c 	andi	r16,r16,4
 8012f90:	80002b26 	beq	r16,zero,8013040 <___svfiprintf_internal_r+0xb24>
 8012f94:	d9402317 	ldw	r5,140(sp)
 8012f98:	2ca1c83a 	sub	r16,r5,r18
 8012f9c:	0400280e 	bge	zero,r16,8013040 <___svfiprintf_internal_r+0xb24>
 8012fa0:	05000404 	movi	r20,16
 8012fa4:	d8801b17 	ldw	r2,108(sp)
 8012fa8:	a401aa0e 	bge	r20,r16,8013654 <___svfiprintf_internal_r+0x1138>
 8012fac:	014200b4 	movhi	r5,2050
 8012fb0:	29790204 	addi	r5,r5,-7160
 8012fb4:	d9402815 	stw	r5,160(sp)
 8012fb8:	058001c4 	movi	r22,7
 8012fbc:	ddc02217 	ldw	r23,136(sp)
 8012fc0:	00000306 	br	8012fd0 <___svfiprintf_internal_r+0xab4>
 8012fc4:	843ffc04 	addi	r16,r16,-16
 8012fc8:	42000204 	addi	r8,r8,8
 8012fcc:	a400130e 	bge	r20,r16,801301c <___svfiprintf_internal_r+0xb00>
 8012fd0:	010200b4 	movhi	r4,2050
 8012fd4:	18c00404 	addi	r3,r3,16
 8012fd8:	10800044 	addi	r2,r2,1
 8012fdc:	21390204 	addi	r4,r4,-7160
 8012fe0:	41000015 	stw	r4,0(r8)
 8012fe4:	45000115 	stw	r20,4(r8)
 8012fe8:	d8c01c15 	stw	r3,112(sp)
 8012fec:	d8801b15 	stw	r2,108(sp)
 8012ff0:	b0bff40e 	bge	r22,r2,8012fc4 <__alt_data_end+0xfc012fc4>
 8012ff4:	8809883a 	mov	r4,r17
 8012ff8:	b80b883a 	mov	r5,r23
 8012ffc:	d9801a04 	addi	r6,sp,104
 8013000:	80123540 	call	8012354 <__ssprint_r>
 8013004:	10003d1e 	bne	r2,zero,80130fc <___svfiprintf_internal_r+0xbe0>
 8013008:	843ffc04 	addi	r16,r16,-16
 801300c:	d8c01c17 	ldw	r3,112(sp)
 8013010:	d8801b17 	ldw	r2,108(sp)
 8013014:	d811883a 	mov	r8,sp
 8013018:	a43fed16 	blt	r20,r16,8012fd0 <__alt_data_end+0xfc012fd0>
 801301c:	d9402817 	ldw	r5,160(sp)
 8013020:	1c07883a 	add	r3,r3,r16
 8013024:	10800044 	addi	r2,r2,1
 8013028:	41400015 	stw	r5,0(r8)
 801302c:	44000115 	stw	r16,4(r8)
 8013030:	d8c01c15 	stw	r3,112(sp)
 8013034:	d8801b15 	stw	r2,108(sp)
 8013038:	010001c4 	movi	r4,7
 801303c:	2080e416 	blt	r4,r2,80133d0 <___svfiprintf_internal_r+0xeb4>
 8013040:	d8802317 	ldw	r2,140(sp)
 8013044:	9080010e 	bge	r18,r2,801304c <___svfiprintf_internal_r+0xb30>
 8013048:	1025883a 	mov	r18,r2
 801304c:	d9002617 	ldw	r4,152(sp)
 8013050:	2489883a 	add	r4,r4,r18
 8013054:	d9002615 	stw	r4,152(sp)
 8013058:	1800781e 	bne	r3,zero,801323c <___svfiprintf_internal_r+0xd20>
 801305c:	a8800007 	ldb	r2,0(r21)
 8013060:	d8001b15 	stw	zero,108(sp)
 8013064:	d811883a 	mov	r8,sp
 8013068:	103d511e 	bne	r2,zero,80125b0 <__alt_data_end+0xfc0125b0>
 801306c:	a825883a 	mov	r18,r21
 8013070:	003d6806 	br	8012614 <__alt_data_end+0xfc012614>
 8013074:	10803fcc 	andi	r2,r2,255
 8013078:	00c00044 	movi	r3,1
 801307c:	10fe191e 	bne	r2,r3,80128e4 <__alt_data_end+0xfc0128e4>
 8013080:	b000c826 	beq	r22,zero,80133a4 <___svfiprintf_internal_r+0xe88>
 8013084:	df001a04 	addi	fp,sp,104
 8013088:	4029883a 	mov	r20,r8
 801308c:	9009883a 	mov	r4,r18
 8013090:	b00b883a 	mov	r5,r22
 8013094:	01800284 	movi	r6,10
 8013098:	000f883a 	mov	r7,zero
 801309c:	8016cfc0 	call	8016cfc <__umoddi3>
 80130a0:	10800c04 	addi	r2,r2,48
 80130a4:	e73fffc4 	addi	fp,fp,-1
 80130a8:	9009883a 	mov	r4,r18
 80130ac:	b00b883a 	mov	r5,r22
 80130b0:	01800284 	movi	r6,10
 80130b4:	000f883a 	mov	r7,zero
 80130b8:	e0800005 	stb	r2,0(fp)
 80130bc:	80166bc0 	call	80166bc <__udivdi3>
 80130c0:	1025883a 	mov	r18,r2
 80130c4:	10c4b03a 	or	r2,r2,r3
 80130c8:	182d883a 	mov	r22,r3
 80130cc:	103fef1e 	bne	r2,zero,801308c <__alt_data_end+0xfc01308c>
 80130d0:	d9001e17 	ldw	r4,120(sp)
 80130d4:	a011883a 	mov	r8,r20
 80130d8:	df002715 	stw	fp,156(sp)
 80130dc:	2729c83a 	sub	r20,r4,fp
 80130e0:	00006206 	br	801326c <___svfiprintf_internal_r+0xd50>
 80130e4:	d8801c17 	ldw	r2,112(sp)
 80130e8:	10000426 	beq	r2,zero,80130fc <___svfiprintf_internal_r+0xbe0>
 80130ec:	d9002917 	ldw	r4,164(sp)
 80130f0:	d9402217 	ldw	r5,136(sp)
 80130f4:	d9801a04 	addi	r6,sp,104
 80130f8:	80123540 	call	8012354 <__ssprint_r>
 80130fc:	d9402217 	ldw	r5,136(sp)
 8013100:	2880030b 	ldhu	r2,12(r5)
 8013104:	1080100c 	andi	r2,r2,64
 8013108:	1000621e 	bne	r2,zero,8013294 <___svfiprintf_internal_r+0xd78>
 801310c:	d8802617 	ldw	r2,152(sp)
 8013110:	dfc03717 	ldw	ra,220(sp)
 8013114:	df003617 	ldw	fp,216(sp)
 8013118:	ddc03517 	ldw	r23,212(sp)
 801311c:	dd803417 	ldw	r22,208(sp)
 8013120:	dd403317 	ldw	r21,204(sp)
 8013124:	dd003217 	ldw	r20,200(sp)
 8013128:	dcc03117 	ldw	r19,196(sp)
 801312c:	dc803017 	ldw	r18,192(sp)
 8013130:	dc402f17 	ldw	r17,188(sp)
 8013134:	dc002e17 	ldw	r16,184(sp)
 8013138:	dec03804 	addi	sp,sp,224
 801313c:	f800283a 	ret
 8013140:	d9002317 	ldw	r4,140(sp)
 8013144:	24afc83a 	sub	r23,r4,r18
 8013148:	05ff500e 	bge	zero,r23,8012e8c <__alt_data_end+0xfc012e8c>
 801314c:	01c00404 	movi	r7,16
 8013150:	3dc1440e 	bge	r7,r23,8013664 <___svfiprintf_internal_r+0x1148>
 8013154:	010200b4 	movhi	r4,2050
 8013158:	2138fe04 	addi	r4,r4,-7176
 801315c:	d9002115 	stw	r4,132(sp)
 8013160:	a809883a 	mov	r4,r21
 8013164:	dc002515 	stw	r16,148(sp)
 8013168:	a02b883a 	mov	r21,r20
 801316c:	3839883a 	mov	fp,r7
 8013170:	9029883a 	mov	r20,r18
 8013174:	058001c4 	movi	r22,7
 8013178:	b825883a 	mov	r18,r23
 801317c:	dc002217 	ldw	r16,136(sp)
 8013180:	202f883a 	mov	r23,r4
 8013184:	00000306 	br	8013194 <___svfiprintf_internal_r+0xc78>
 8013188:	94bffc04 	addi	r18,r18,-16
 801318c:	42000204 	addi	r8,r8,8
 8013190:	e480110e 	bge	fp,r18,80131d8 <___svfiprintf_internal_r+0xcbc>
 8013194:	18c00404 	addi	r3,r3,16
 8013198:	10800044 	addi	r2,r2,1
 801319c:	44c00015 	stw	r19,0(r8)
 80131a0:	47000115 	stw	fp,4(r8)
 80131a4:	d8c01c15 	stw	r3,112(sp)
 80131a8:	d8801b15 	stw	r2,108(sp)
 80131ac:	b0bff60e 	bge	r22,r2,8013188 <__alt_data_end+0xfc013188>
 80131b0:	8809883a 	mov	r4,r17
 80131b4:	800b883a 	mov	r5,r16
 80131b8:	d9801a04 	addi	r6,sp,104
 80131bc:	80123540 	call	8012354 <__ssprint_r>
 80131c0:	103fce1e 	bne	r2,zero,80130fc <__alt_data_end+0xfc0130fc>
 80131c4:	94bffc04 	addi	r18,r18,-16
 80131c8:	d8c01c17 	ldw	r3,112(sp)
 80131cc:	d8801b17 	ldw	r2,108(sp)
 80131d0:	d811883a 	mov	r8,sp
 80131d4:	e4bfef16 	blt	fp,r18,8013194 <__alt_data_end+0xfc013194>
 80131d8:	dc002517 	ldw	r16,148(sp)
 80131dc:	b809883a 	mov	r4,r23
 80131e0:	902f883a 	mov	r23,r18
 80131e4:	a025883a 	mov	r18,r20
 80131e8:	a829883a 	mov	r20,r21
 80131ec:	202b883a 	mov	r21,r4
 80131f0:	d9402117 	ldw	r5,132(sp)
 80131f4:	1dc7883a 	add	r3,r3,r23
 80131f8:	10800044 	addi	r2,r2,1
 80131fc:	41400015 	stw	r5,0(r8)
 8013200:	45c00115 	stw	r23,4(r8)
 8013204:	d8c01c15 	stw	r3,112(sp)
 8013208:	d8801b15 	stw	r2,108(sp)
 801320c:	010001c4 	movi	r4,7
 8013210:	2080ae16 	blt	r4,r2,80134cc <___svfiprintf_internal_r+0xfb0>
 8013214:	42000204 	addi	r8,r8,8
 8013218:	003f1c06 	br	8012e8c <__alt_data_end+0xfc012e8c>
 801321c:	d9402217 	ldw	r5,136(sp)
 8013220:	8809883a 	mov	r4,r17
 8013224:	d9801a04 	addi	r6,sp,104
 8013228:	80123540 	call	8012354 <__ssprint_r>
 801322c:	103fb31e 	bne	r2,zero,80130fc <__alt_data_end+0xfc0130fc>
 8013230:	d8c01c17 	ldw	r3,112(sp)
 8013234:	d811883a 	mov	r8,sp
 8013238:	003f5406 	br	8012f8c <__alt_data_end+0xfc012f8c>
 801323c:	d9402217 	ldw	r5,136(sp)
 8013240:	8809883a 	mov	r4,r17
 8013244:	d9801a04 	addi	r6,sp,104
 8013248:	80123540 	call	8012354 <__ssprint_r>
 801324c:	103f8326 	beq	r2,zero,801305c <__alt_data_end+0xfc01305c>
 8013250:	003faa06 	br	80130fc <__alt_data_end+0xfc0130fc>
 8013254:	10803fcc 	andi	r2,r2,255
 8013258:	1000021e 	bne	r2,zero,8013264 <___svfiprintf_internal_r+0xd48>
 801325c:	8080004c 	andi	r2,r16,1
 8013260:	1000621e 	bne	r2,zero,80133ec <___svfiprintf_internal_r+0xed0>
 8013264:	d8c01a04 	addi	r3,sp,104
 8013268:	d8c02715 	stw	r3,156(sp)
 801326c:	d9002017 	ldw	r4,128(sp)
 8013270:	a025883a 	mov	r18,r20
 8013274:	a100010e 	bge	r20,r4,801327c <___svfiprintf_internal_r+0xd60>
 8013278:	2025883a 	mov	r18,r4
 801327c:	bdc03fcc 	andi	r23,r23,255
 8013280:	bdc0201c 	xori	r23,r23,128
 8013284:	bdffe004 	addi	r23,r23,-128
 8013288:	b83e2026 	beq	r23,zero,8012b0c <__alt_data_end+0xfc012b0c>
 801328c:	94800044 	addi	r18,r18,1
 8013290:	003e1e06 	br	8012b0c <__alt_data_end+0xfc012b0c>
 8013294:	00bfffc4 	movi	r2,-1
 8013298:	003f9d06 	br	8013110 <__alt_data_end+0xfc013110>
 801329c:	d9402217 	ldw	r5,136(sp)
 80132a0:	8809883a 	mov	r4,r17
 80132a4:	d9801a04 	addi	r6,sp,104
 80132a8:	80123540 	call	8012354 <__ssprint_r>
 80132ac:	103f931e 	bne	r2,zero,80130fc <__alt_data_end+0xfc0130fc>
 80132b0:	d811883a 	mov	r8,sp
 80132b4:	003cd406 	br	8012608 <__alt_data_end+0xfc012608>
 80132b8:	d9402217 	ldw	r5,136(sp)
 80132bc:	8809883a 	mov	r4,r17
 80132c0:	d9801a04 	addi	r6,sp,104
 80132c4:	80123540 	call	8012354 <__ssprint_r>
 80132c8:	103f8c1e 	bne	r2,zero,80130fc <__alt_data_end+0xfc0130fc>
 80132cc:	d8c01c17 	ldw	r3,112(sp)
 80132d0:	d8801b17 	ldw	r2,108(sp)
 80132d4:	d811883a 	mov	r8,sp
 80132d8:	003f2206 	br	8012f64 <__alt_data_end+0xfc012f64>
 80132dc:	d9002a17 	ldw	r4,168(sp)
 80132e0:	df001a04 	addi	fp,sp,104
 80132e4:	908003cc 	andi	r2,r18,15
 80132e8:	b006973a 	slli	r3,r22,28
 80132ec:	2085883a 	add	r2,r4,r2
 80132f0:	9024d13a 	srli	r18,r18,4
 80132f4:	10800003 	ldbu	r2,0(r2)
 80132f8:	b02cd13a 	srli	r22,r22,4
 80132fc:	e73fffc4 	addi	fp,fp,-1
 8013300:	1ca4b03a 	or	r18,r3,r18
 8013304:	e0800005 	stb	r2,0(fp)
 8013308:	9584b03a 	or	r2,r18,r22
 801330c:	103ff51e 	bne	r2,zero,80132e4 <__alt_data_end+0xfc0132e4>
 8013310:	d9401e17 	ldw	r5,120(sp)
 8013314:	df002715 	stw	fp,156(sp)
 8013318:	2f29c83a 	sub	r20,r5,fp
 801331c:	003fd306 	br	801326c <__alt_data_end+0xfc01326c>
 8013320:	d9402217 	ldw	r5,136(sp)
 8013324:	8809883a 	mov	r4,r17
 8013328:	d9801a04 	addi	r6,sp,104
 801332c:	80123540 	call	8012354 <__ssprint_r>
 8013330:	103f721e 	bne	r2,zero,80130fc <__alt_data_end+0xfc0130fc>
 8013334:	d8c01c17 	ldw	r3,112(sp)
 8013338:	d8801b17 	ldw	r2,108(sp)
 801333c:	d811883a 	mov	r8,sp
 8013340:	003ec206 	br	8012e4c <__alt_data_end+0xfc012e4c>
 8013344:	d9402217 	ldw	r5,136(sp)
 8013348:	8809883a 	mov	r4,r17
 801334c:	d9801a04 	addi	r6,sp,104
 8013350:	80123540 	call	8012354 <__ssprint_r>
 8013354:	103f691e 	bne	r2,zero,80130fc <__alt_data_end+0xfc0130fc>
 8013358:	d8c01c17 	ldw	r3,112(sp)
 801335c:	d8801b17 	ldw	r2,108(sp)
 8013360:	d811883a 	mov	r8,sp
 8013364:	003ec606 	br	8012e80 <__alt_data_end+0xfc012e80>
 8013368:	00800084 	movi	r2,2
 801336c:	9586b03a 	or	r3,r18,r22
 8013370:	003d4f06 	br	80128b0 <__alt_data_end+0xfc0128b0>
 8013374:	d9402217 	ldw	r5,136(sp)
 8013378:	8809883a 	mov	r4,r17
 801337c:	d9801a04 	addi	r6,sp,104
 8013380:	80123540 	call	8012354 <__ssprint_r>
 8013384:	103f5d1e 	bne	r2,zero,80130fc <__alt_data_end+0xfc0130fc>
 8013388:	d8c01c17 	ldw	r3,112(sp)
 801338c:	d8801b17 	ldw	r2,108(sp)
 8013390:	d811883a 	mov	r8,sp
 8013394:	003ea006 	br	8012e18 <__alt_data_end+0xfc012e18>
 8013398:	d8801e17 	ldw	r2,120(sp)
 801339c:	10e9c83a 	sub	r20,r2,r3
 80133a0:	003fb206 	br	801326c <__alt_data_end+0xfc01326c>
 80133a4:	00800244 	movi	r2,9
 80133a8:	14bf3636 	bltu	r2,r18,8013084 <__alt_data_end+0xfc013084>
 80133ac:	94800c04 	addi	r18,r18,48
 80133b0:	d8c019c4 	addi	r3,sp,103
 80133b4:	dc8019c5 	stb	r18,103(sp)
 80133b8:	dd002c17 	ldw	r20,176(sp)
 80133bc:	d8c02715 	stw	r3,156(sp)
 80133c0:	003faa06 	br	801326c <__alt_data_end+0xfc01326c>
 80133c4:	d8802415 	stw	r2,144(sp)
 80133c8:	a9800007 	ldb	r6,0(r21)
 80133cc:	003c9e06 	br	8012648 <__alt_data_end+0xfc012648>
 80133d0:	d9402217 	ldw	r5,136(sp)
 80133d4:	8809883a 	mov	r4,r17
 80133d8:	d9801a04 	addi	r6,sp,104
 80133dc:	80123540 	call	8012354 <__ssprint_r>
 80133e0:	103f461e 	bne	r2,zero,80130fc <__alt_data_end+0xfc0130fc>
 80133e4:	d8c01c17 	ldw	r3,112(sp)
 80133e8:	003f1506 	br	8013040 <__alt_data_end+0xfc013040>
 80133ec:	00800c04 	movi	r2,48
 80133f0:	d8c019c4 	addi	r3,sp,103
 80133f4:	d88019c5 	stb	r2,103(sp)
 80133f8:	dd002c17 	ldw	r20,176(sp)
 80133fc:	d8c02715 	stw	r3,156(sp)
 8013400:	003f9a06 	br	801326c <__alt_data_end+0xfc01326c>
 8013404:	d9002417 	ldw	r4,144(sp)
 8013408:	14800017 	ldw	r18,0(r2)
 801340c:	002d883a 	mov	r22,zero
 8013410:	21000104 	addi	r4,r4,4
 8013414:	d9002415 	stw	r4,144(sp)
 8013418:	003d1406 	br	801286c <__alt_data_end+0xfc01286c>
 801341c:	14800017 	ldw	r18,0(r2)
 8013420:	d8802417 	ldw	r2,144(sp)
 8013424:	002d883a 	mov	r22,zero
 8013428:	9007883a 	mov	r3,r18
 801342c:	10800104 	addi	r2,r2,4
 8013430:	d8802415 	stw	r2,144(sp)
 8013434:	00800044 	movi	r2,1
 8013438:	003d1d06 	br	80128b0 <__alt_data_end+0xfc0128b0>
 801343c:	d8c02417 	ldw	r3,144(sp)
 8013440:	14800017 	ldw	r18,0(r2)
 8013444:	002d883a 	mov	r22,zero
 8013448:	18c00104 	addi	r3,r3,4
 801344c:	d8c02415 	stw	r3,144(sp)
 8013450:	0005883a 	mov	r2,zero
 8013454:	9007883a 	mov	r3,r18
 8013458:	003d1506 	br	80128b0 <__alt_data_end+0xfc0128b0>
 801345c:	1c800017 	ldw	r18,0(r3)
 8013460:	d9402417 	ldw	r5,144(sp)
 8013464:	902dd7fa 	srai	r22,r18,31
 8013468:	29400104 	addi	r5,r5,4
 801346c:	d9402415 	stw	r5,144(sp)
 8013470:	b005883a 	mov	r2,r22
 8013474:	003d8d06 	br	8012aac <__alt_data_end+0xfc012aac>
 8013478:	d9002417 	ldw	r4,144(sp)
 801347c:	d9402617 	ldw	r5,152(sp)
 8013480:	20800017 	ldw	r2,0(r4)
 8013484:	2807d7fa 	srai	r3,r5,31
 8013488:	21000104 	addi	r4,r4,4
 801348c:	d9002415 	stw	r4,144(sp)
 8013490:	11400015 	stw	r5,0(r2)
 8013494:	10c00115 	stw	r3,4(r2)
 8013498:	003c4306 	br	80125a8 <__alt_data_end+0xfc0125a8>
 801349c:	00800c04 	movi	r2,48
 80134a0:	d8801d05 	stb	r2,116(sp)
 80134a4:	d9801d45 	stb	r6,117(sp)
 80134a8:	84000094 	ori	r16,r16,2
 80134ac:	00800084 	movi	r2,2
 80134b0:	003cff06 	br	80128b0 <__alt_data_end+0xfc0128b0>
 80134b4:	a9800007 	ldb	r6,0(r21)
 80134b8:	003c6306 	br	8012648 <__alt_data_end+0xfc012648>
 80134bc:	ad400044 	addi	r21,r21,1
 80134c0:	84000814 	ori	r16,r16,32
 80134c4:	11800047 	ldb	r6,1(r2)
 80134c8:	003c5f06 	br	8012648 <__alt_data_end+0xfc012648>
 80134cc:	d9402217 	ldw	r5,136(sp)
 80134d0:	8809883a 	mov	r4,r17
 80134d4:	d9801a04 	addi	r6,sp,104
 80134d8:	80123540 	call	8012354 <__ssprint_r>
 80134dc:	103f071e 	bne	r2,zero,80130fc <__alt_data_end+0xfc0130fc>
 80134e0:	d8c01c17 	ldw	r3,112(sp)
 80134e4:	d8801b17 	ldw	r2,108(sp)
 80134e8:	d811883a 	mov	r8,sp
 80134ec:	003e6706 	br	8012e8c <__alt_data_end+0xfc012e8c>
 80134f0:	014200b4 	movhi	r5,2050
 80134f4:	2978fe04 	addi	r5,r5,-7176
 80134f8:	d9402115 	stw	r5,132(sp)
 80134fc:	003e8f06 	br	8012f3c <__alt_data_end+0xfc012f3c>
 8013500:	1c800017 	ldw	r18,0(r3)
 8013504:	d8c02417 	ldw	r3,144(sp)
 8013508:	902dd7fa 	srai	r22,r18,31
 801350c:	18c00104 	addi	r3,r3,4
 8013510:	d8c02415 	stw	r3,144(sp)
 8013514:	b005883a 	mov	r2,r22
 8013518:	003d6406 	br	8012aac <__alt_data_end+0xfc012aac>
 801351c:	d9002417 	ldw	r4,144(sp)
 8013520:	14800017 	ldw	r18,0(r2)
 8013524:	002d883a 	mov	r22,zero
 8013528:	21000104 	addi	r4,r4,4
 801352c:	d9002415 	stw	r4,144(sp)
 8013530:	00800044 	movi	r2,1
 8013534:	9007883a 	mov	r3,r18
 8013538:	003cdd06 	br	80128b0 <__alt_data_end+0xfc0128b0>
 801353c:	d9402417 	ldw	r5,144(sp)
 8013540:	14800017 	ldw	r18,0(r2)
 8013544:	002d883a 	mov	r22,zero
 8013548:	29400104 	addi	r5,r5,4
 801354c:	d9402415 	stw	r5,144(sp)
 8013550:	0005883a 	mov	r2,zero
 8013554:	9007883a 	mov	r3,r18
 8013558:	003cd506 	br	80128b0 <__alt_data_end+0xfc0128b0>
 801355c:	14800017 	ldw	r18,0(r2)
 8013560:	d8802417 	ldw	r2,144(sp)
 8013564:	002d883a 	mov	r22,zero
 8013568:	10800104 	addi	r2,r2,4
 801356c:	d8802415 	stw	r2,144(sp)
 8013570:	003cbe06 	br	801286c <__alt_data_end+0xfc01286c>
 8013574:	8400100c 	andi	r16,r16,64
 8013578:	80002b26 	beq	r16,zero,8013628 <___svfiprintf_internal_r+0x110c>
 801357c:	d9402417 	ldw	r5,144(sp)
 8013580:	d8c02617 	ldw	r3,152(sp)
 8013584:	28800017 	ldw	r2,0(r5)
 8013588:	29400104 	addi	r5,r5,4
 801358c:	d9402415 	stw	r5,144(sp)
 8013590:	10c0000d 	sth	r3,0(r2)
 8013594:	003c0406 	br	80125a8 <__alt_data_end+0xfc0125a8>
 8013598:	d8c01e17 	ldw	r3,120(sp)
 801359c:	d9002717 	ldw	r4,156(sp)
 80135a0:	1929c83a 	sub	r20,r3,r4
 80135a4:	003f3106 	br	801326c <__alt_data_end+0xfc01326c>
 80135a8:	d9002717 	ldw	r4,156(sp)
 80135ac:	ddc02d15 	stw	r23,180(sp)
 80135b0:	80049680 	call	8004968 <strlen>
 80135b4:	1029883a 	mov	r20,r2
 80135b8:	ddc01d83 	ldbu	r23,118(sp)
 80135bc:	dd802415 	stw	r22,144(sp)
 80135c0:	d8002015 	stw	zero,128(sp)
 80135c4:	da002d17 	ldw	r8,180(sp)
 80135c8:	003f2806 	br	801326c <__alt_data_end+0xfc01326c>
 80135cc:	013fffc4 	movi	r4,-1
 80135d0:	003deb06 	br	8012d80 <__alt_data_end+0xfc012d80>
 80135d4:	dd002017 	ldw	r20,128(sp)
 80135d8:	00800184 	movi	r2,6
 80135dc:	1500012e 	bgeu	r2,r20,80135e4 <___svfiprintf_internal_r+0x10c8>
 80135e0:	1029883a 	mov	r20,r2
 80135e4:	a025883a 	mov	r18,r20
 80135e8:	a0002916 	blt	r20,zero,8013690 <___svfiprintf_internal_r+0x1174>
 80135ec:	00c200b4 	movhi	r3,2050
 80135f0:	18f7e204 	addi	r3,r3,-8312
 80135f4:	dd802415 	stw	r22,144(sp)
 80135f8:	d8c02715 	stw	r3,156(sp)
 80135fc:	003d4206 	br	8012b08 <__alt_data_end+0xfc012b08>
 8013600:	04001004 	movi	r16,64
 8013604:	800b883a 	mov	r5,r16
 8013608:	800390c0 	call	800390c <_malloc_r>
 801360c:	d8c02217 	ldw	r3,136(sp)
 8013610:	18800015 	stw	r2,0(r3)
 8013614:	18800415 	stw	r2,16(r3)
 8013618:	10002b26 	beq	r2,zero,80136c8 <___svfiprintf_internal_r+0x11ac>
 801361c:	d9402217 	ldw	r5,136(sp)
 8013620:	2c000515 	stw	r16,20(r5)
 8013624:	003bd106 	br	801256c <__alt_data_end+0xfc01256c>
 8013628:	d9002417 	ldw	r4,144(sp)
 801362c:	d9402617 	ldw	r5,152(sp)
 8013630:	20800017 	ldw	r2,0(r4)
 8013634:	21000104 	addi	r4,r4,4
 8013638:	d9002415 	stw	r4,144(sp)
 801363c:	11400015 	stw	r5,0(r2)
 8013640:	003bd906 	br	80125a8 <__alt_data_end+0xfc0125a8>
 8013644:	014200b4 	movhi	r5,2050
 8013648:	29790204 	addi	r5,r5,-7160
 801364c:	d9402815 	stw	r5,160(sp)
 8013650:	003d6506 	br	8012be8 <__alt_data_end+0xfc012be8>
 8013654:	010200b4 	movhi	r4,2050
 8013658:	21390204 	addi	r4,r4,-7160
 801365c:	d9002815 	stw	r4,160(sp)
 8013660:	003e6e06 	br	801301c <__alt_data_end+0xfc01301c>
 8013664:	014200b4 	movhi	r5,2050
 8013668:	2978fe04 	addi	r5,r5,-7176
 801366c:	d9402115 	stw	r5,132(sp)
 8013670:	003edf06 	br	80131f0 <__alt_data_end+0xfc0131f0>
 8013674:	d8002015 	stw	zero,128(sp)
 8013678:	003bf406 	br	801264c <__alt_data_end+0xfc01264c>
 801367c:	dd002017 	ldw	r20,128(sp)
 8013680:	ddc01d83 	ldbu	r23,118(sp)
 8013684:	dd802415 	stw	r22,144(sp)
 8013688:	d8002015 	stw	zero,128(sp)
 801368c:	003ef706 	br	801326c <__alt_data_end+0xfc01326c>
 8013690:	0025883a 	mov	r18,zero
 8013694:	003fd506 	br	80135ec <__alt_data_end+0xfc0135ec>
 8013698:	d8c02417 	ldw	r3,144(sp)
 801369c:	a809883a 	mov	r4,r21
 80136a0:	102b883a 	mov	r21,r2
 80136a4:	18c00017 	ldw	r3,0(r3)
 80136a8:	d8c02015 	stw	r3,128(sp)
 80136ac:	d8c02417 	ldw	r3,144(sp)
 80136b0:	d8802017 	ldw	r2,128(sp)
 80136b4:	19400104 	addi	r5,r3,4
 80136b8:	d9402415 	stw	r5,144(sp)
 80136bc:	10000716 	blt	r2,zero,80136dc <___svfiprintf_internal_r+0x11c0>
 80136c0:	21800047 	ldb	r6,1(r4)
 80136c4:	003be006 	br	8012648 <__alt_data_end+0xfc012648>
 80136c8:	d9002917 	ldw	r4,164(sp)
 80136cc:	00800304 	movi	r2,12
 80136d0:	20800015 	stw	r2,0(r4)
 80136d4:	00bfffc4 	movi	r2,-1
 80136d8:	003e8d06 	br	8013110 <__alt_data_end+0xfc013110>
 80136dc:	00ffffc4 	movi	r3,-1
 80136e0:	d8c02015 	stw	r3,128(sp)
 80136e4:	21800047 	ldb	r6,1(r4)
 80136e8:	003bd706 	br	8012648 <__alt_data_end+0xfc012648>

080136ec <__submore>:
 80136ec:	defffa04 	addi	sp,sp,-24
 80136f0:	dc000015 	stw	r16,0(sp)
 80136f4:	2821883a 	mov	r16,r5
 80136f8:	29400c17 	ldw	r5,48(r5)
 80136fc:	dfc00515 	stw	ra,20(sp)
 8013700:	dd000415 	stw	r20,16(sp)
 8013704:	dcc00315 	stw	r19,12(sp)
 8013708:	dc800215 	stw	r18,8(sp)
 801370c:	dc400115 	stw	r17,4(sp)
 8013710:	80801004 	addi	r2,r16,64
 8013714:	28801726 	beq	r5,r2,8013774 <__submore+0x88>
 8013718:	84400d17 	ldw	r17,52(r16)
 801371c:	8c67883a 	add	r19,r17,r17
 8013720:	980d883a 	mov	r6,r19
 8013724:	800f5280 	call	800f528 <_realloc_r>
 8013728:	1025883a 	mov	r18,r2
 801372c:	10002226 	beq	r2,zero,80137b8 <__submore+0xcc>
 8013730:	1469883a 	add	r20,r2,r17
 8013734:	a009883a 	mov	r4,r20
 8013738:	100b883a 	mov	r5,r2
 801373c:	880d883a 	mov	r6,r17
 8013740:	800e0e40 	call	800e0e4 <memcpy>
 8013744:	0005883a 	mov	r2,zero
 8013748:	85000015 	stw	r20,0(r16)
 801374c:	84800c15 	stw	r18,48(r16)
 8013750:	84c00d15 	stw	r19,52(r16)
 8013754:	dfc00517 	ldw	ra,20(sp)
 8013758:	dd000417 	ldw	r20,16(sp)
 801375c:	dcc00317 	ldw	r19,12(sp)
 8013760:	dc800217 	ldw	r18,8(sp)
 8013764:	dc400117 	ldw	r17,4(sp)
 8013768:	dc000017 	ldw	r16,0(sp)
 801376c:	dec00604 	addi	sp,sp,24
 8013770:	f800283a 	ret
 8013774:	04410004 	movi	r17,1024
 8013778:	880b883a 	mov	r5,r17
 801377c:	800390c0 	call	800390c <_malloc_r>
 8013780:	1007883a 	mov	r3,r2
 8013784:	10000c26 	beq	r2,zero,80137b8 <__submore+0xcc>
 8013788:	80801083 	ldbu	r2,66(r16)
 801378c:	80c00c15 	stw	r3,48(r16)
 8013790:	84400d15 	stw	r17,52(r16)
 8013794:	1880ffc5 	stb	r2,1023(r3)
 8013798:	81401043 	ldbu	r5,65(r16)
 801379c:	1900ff44 	addi	r4,r3,1021
 80137a0:	0005883a 	mov	r2,zero
 80137a4:	1940ff85 	stb	r5,1022(r3)
 80137a8:	81401003 	ldbu	r5,64(r16)
 80137ac:	1940ff45 	stb	r5,1021(r3)
 80137b0:	81000015 	stw	r4,0(r16)
 80137b4:	003fe706 	br	8013754 <__alt_data_end+0xfc013754>
 80137b8:	00bfffc4 	movi	r2,-1
 80137bc:	003fe506 	br	8013754 <__alt_data_end+0xfc013754>

080137c0 <_ungetc_r>:
 80137c0:	00bfffc4 	movi	r2,-1
 80137c4:	28805e26 	beq	r5,r2,8013940 <_ungetc_r+0x180>
 80137c8:	defffc04 	addi	sp,sp,-16
 80137cc:	dc800215 	stw	r18,8(sp)
 80137d0:	dc400115 	stw	r17,4(sp)
 80137d4:	dc000015 	stw	r16,0(sp)
 80137d8:	dfc00315 	stw	ra,12(sp)
 80137dc:	2025883a 	mov	r18,r4
 80137e0:	3021883a 	mov	r16,r6
 80137e4:	2823883a 	mov	r17,r5
 80137e8:	20000226 	beq	r4,zero,80137f4 <_ungetc_r+0x34>
 80137ec:	20800e17 	ldw	r2,56(r4)
 80137f0:	10002d26 	beq	r2,zero,80138a8 <_ungetc_r+0xe8>
 80137f4:	80c0030b 	ldhu	r3,12(r16)
 80137f8:	1888000c 	andi	r2,r3,8192
 80137fc:	1000051e 	bne	r2,zero,8013814 <_ungetc_r+0x54>
 8013800:	81001917 	ldw	r4,100(r16)
 8013804:	00b7ffc4 	movi	r2,-8193
 8013808:	18c80014 	ori	r3,r3,8192
 801380c:	2084703a 	and	r2,r4,r2
 8013810:	80801915 	stw	r2,100(r16)
 8013814:	00bff7c4 	movi	r2,-33
 8013818:	1884703a 	and	r2,r3,r2
 801381c:	8080030d 	sth	r2,12(r16)
 8013820:	1900010c 	andi	r4,r3,4
 8013824:	2000061e 	bne	r4,zero,8013840 <_ungetc_r+0x80>
 8013828:	1900040c 	andi	r4,r3,16
 801382c:	20001c26 	beq	r4,zero,80138a0 <_ungetc_r+0xe0>
 8013830:	18c0020c 	andi	r3,r3,8
 8013834:	1800321e 	bne	r3,zero,8013900 <_ungetc_r+0x140>
 8013838:	10800114 	ori	r2,r2,4
 801383c:	8080030d 	sth	r2,12(r16)
 8013840:	80800c17 	ldw	r2,48(r16)
 8013844:	8c403fcc 	andi	r17,r17,255
 8013848:	10001926 	beq	r2,zero,80138b0 <_ungetc_r+0xf0>
 801384c:	80c00117 	ldw	r3,4(r16)
 8013850:	80800d17 	ldw	r2,52(r16)
 8013854:	18800e0e 	bge	r3,r2,8013890 <_ungetc_r+0xd0>
 8013858:	80c00017 	ldw	r3,0(r16)
 801385c:	8805883a 	mov	r2,r17
 8013860:	193fffc4 	addi	r4,r3,-1
 8013864:	81000015 	stw	r4,0(r16)
 8013868:	1c7fffc5 	stb	r17,-1(r3)
 801386c:	80c00117 	ldw	r3,4(r16)
 8013870:	18c00044 	addi	r3,r3,1
 8013874:	80c00115 	stw	r3,4(r16)
 8013878:	dfc00317 	ldw	ra,12(sp)
 801387c:	dc800217 	ldw	r18,8(sp)
 8013880:	dc400117 	ldw	r17,4(sp)
 8013884:	dc000017 	ldw	r16,0(sp)
 8013888:	dec00404 	addi	sp,sp,16
 801388c:	f800283a 	ret
 8013890:	9009883a 	mov	r4,r18
 8013894:	800b883a 	mov	r5,r16
 8013898:	80136ec0 	call	80136ec <__submore>
 801389c:	103fee26 	beq	r2,zero,8013858 <__alt_data_end+0xfc013858>
 80138a0:	00bfffc4 	movi	r2,-1
 80138a4:	003ff406 	br	8013878 <__alt_data_end+0xfc013878>
 80138a8:	800cd740 	call	800cd74 <__sinit>
 80138ac:	003fd106 	br	80137f4 <__alt_data_end+0xfc0137f4>
 80138b0:	80800417 	ldw	r2,16(r16)
 80138b4:	80c00017 	ldw	r3,0(r16)
 80138b8:	10000326 	beq	r2,zero,80138c8 <_ungetc_r+0x108>
 80138bc:	10c0022e 	bgeu	r2,r3,80138c8 <_ungetc_r+0x108>
 80138c0:	18bfffc3 	ldbu	r2,-1(r3)
 80138c4:	14401826 	beq	r2,r17,8013928 <_ungetc_r+0x168>
 80138c8:	81400117 	ldw	r5,4(r16)
 80138cc:	80801084 	addi	r2,r16,66
 80138d0:	81001004 	addi	r4,r16,64
 80138d4:	80c00e15 	stw	r3,56(r16)
 80138d8:	80800015 	stw	r2,0(r16)
 80138dc:	00c000c4 	movi	r3,3
 80138e0:	00800044 	movi	r2,1
 80138e4:	80800115 	stw	r2,4(r16)
 80138e8:	81400f15 	stw	r5,60(r16)
 80138ec:	81000c15 	stw	r4,48(r16)
 80138f0:	80c00d15 	stw	r3,52(r16)
 80138f4:	84401085 	stb	r17,66(r16)
 80138f8:	8805883a 	mov	r2,r17
 80138fc:	003fde06 	br	8013878 <__alt_data_end+0xfc013878>
 8013900:	9009883a 	mov	r4,r18
 8013904:	800b883a 	mov	r5,r16
 8013908:	800c7b80 	call	800c7b8 <_fflush_r>
 801390c:	103fe41e 	bne	r2,zero,80138a0 <__alt_data_end+0xfc0138a0>
 8013910:	8080030b 	ldhu	r2,12(r16)
 8013914:	00fffdc4 	movi	r3,-9
 8013918:	80000215 	stw	zero,8(r16)
 801391c:	1884703a 	and	r2,r3,r2
 8013920:	80000615 	stw	zero,24(r16)
 8013924:	003fc406 	br	8013838 <__alt_data_end+0xfc013838>
 8013928:	81000117 	ldw	r4,4(r16)
 801392c:	18ffffc4 	addi	r3,r3,-1
 8013930:	80c00015 	stw	r3,0(r16)
 8013934:	20c00044 	addi	r3,r4,1
 8013938:	80c00115 	stw	r3,4(r16)
 801393c:	003fce06 	br	8013878 <__alt_data_end+0xfc013878>
 8013940:	00bfffc4 	movi	r2,-1
 8013944:	f800283a 	ret

08013948 <ungetc>:
 8013948:	00c200b4 	movhi	r3,2050
 801394c:	18c09004 	addi	r3,r3,576
 8013950:	2005883a 	mov	r2,r4
 8013954:	19000017 	ldw	r4,0(r3)
 8013958:	280d883a 	mov	r6,r5
 801395c:	100b883a 	mov	r5,r2
 8013960:	80137c01 	jmpi	80137c0 <_ungetc_r>

08013964 <__sprint_r.part.0>:
 8013964:	28801917 	ldw	r2,100(r5)
 8013968:	defff604 	addi	sp,sp,-40
 801396c:	dd400515 	stw	r21,20(sp)
 8013970:	dcc00315 	stw	r19,12(sp)
 8013974:	dfc00915 	stw	ra,36(sp)
 8013978:	df000815 	stw	fp,32(sp)
 801397c:	ddc00715 	stw	r23,28(sp)
 8013980:	dd800615 	stw	r22,24(sp)
 8013984:	dd000415 	stw	r20,16(sp)
 8013988:	dc800215 	stw	r18,8(sp)
 801398c:	dc400115 	stw	r17,4(sp)
 8013990:	dc000015 	stw	r16,0(sp)
 8013994:	1088000c 	andi	r2,r2,8192
 8013998:	2827883a 	mov	r19,r5
 801399c:	302b883a 	mov	r21,r6
 80139a0:	10002d26 	beq	r2,zero,8013a58 <__sprint_r.part.0+0xf4>
 80139a4:	30800217 	ldw	r2,8(r6)
 80139a8:	35800017 	ldw	r22,0(r6)
 80139ac:	10002826 	beq	r2,zero,8013a50 <__sprint_r.part.0+0xec>
 80139b0:	2029883a 	mov	r20,r4
 80139b4:	b5c00104 	addi	r23,r22,4
 80139b8:	04bfffc4 	movi	r18,-1
 80139bc:	bc400017 	ldw	r17,0(r23)
 80139c0:	b4000017 	ldw	r16,0(r22)
 80139c4:	0039883a 	mov	fp,zero
 80139c8:	8822d0ba 	srli	r17,r17,2
 80139cc:	04400316 	blt	zero,r17,80139dc <__sprint_r.part.0+0x78>
 80139d0:	00001706 	br	8013a30 <__sprint_r.part.0+0xcc>
 80139d4:	84000104 	addi	r16,r16,4
 80139d8:	8f001526 	beq	r17,fp,8013a30 <__sprint_r.part.0+0xcc>
 80139dc:	81400017 	ldw	r5,0(r16)
 80139e0:	a009883a 	mov	r4,r20
 80139e4:	980d883a 	mov	r6,r19
 80139e8:	80152cc0 	call	80152cc <_fputwc_r>
 80139ec:	e7000044 	addi	fp,fp,1
 80139f0:	14bff81e 	bne	r2,r18,80139d4 <__alt_data_end+0xfc0139d4>
 80139f4:	9005883a 	mov	r2,r18
 80139f8:	a8000215 	stw	zero,8(r21)
 80139fc:	a8000115 	stw	zero,4(r21)
 8013a00:	dfc00917 	ldw	ra,36(sp)
 8013a04:	df000817 	ldw	fp,32(sp)
 8013a08:	ddc00717 	ldw	r23,28(sp)
 8013a0c:	dd800617 	ldw	r22,24(sp)
 8013a10:	dd400517 	ldw	r21,20(sp)
 8013a14:	dd000417 	ldw	r20,16(sp)
 8013a18:	dcc00317 	ldw	r19,12(sp)
 8013a1c:	dc800217 	ldw	r18,8(sp)
 8013a20:	dc400117 	ldw	r17,4(sp)
 8013a24:	dc000017 	ldw	r16,0(sp)
 8013a28:	dec00a04 	addi	sp,sp,40
 8013a2c:	f800283a 	ret
 8013a30:	a8c00217 	ldw	r3,8(r21)
 8013a34:	8c63883a 	add	r17,r17,r17
 8013a38:	8c63883a 	add	r17,r17,r17
 8013a3c:	1c45c83a 	sub	r2,r3,r17
 8013a40:	a8800215 	stw	r2,8(r21)
 8013a44:	b5800204 	addi	r22,r22,8
 8013a48:	bdc00204 	addi	r23,r23,8
 8013a4c:	103fdb1e 	bne	r2,zero,80139bc <__alt_data_end+0xfc0139bc>
 8013a50:	0005883a 	mov	r2,zero
 8013a54:	003fe806 	br	80139f8 <__alt_data_end+0xfc0139f8>
 8013a58:	800d4680 	call	800d468 <__sfvwrite_r>
 8013a5c:	003fe606 	br	80139f8 <__alt_data_end+0xfc0139f8>

08013a60 <__sprint_r>:
 8013a60:	30c00217 	ldw	r3,8(r6)
 8013a64:	18000126 	beq	r3,zero,8013a6c <__sprint_r+0xc>
 8013a68:	80139641 	jmpi	8013964 <__sprint_r.part.0>
 8013a6c:	30000115 	stw	zero,4(r6)
 8013a70:	0005883a 	mov	r2,zero
 8013a74:	f800283a 	ret

08013a78 <___vfiprintf_internal_r>:
 8013a78:	defeca04 	addi	sp,sp,-1240
 8013a7c:	dcc12f15 	stw	r19,1212(sp)
 8013a80:	dfc13515 	stw	ra,1236(sp)
 8013a84:	df013415 	stw	fp,1232(sp)
 8013a88:	ddc13315 	stw	r23,1228(sp)
 8013a8c:	dd813215 	stw	r22,1224(sp)
 8013a90:	dd413115 	stw	r21,1220(sp)
 8013a94:	dd013015 	stw	r20,1216(sp)
 8013a98:	dc812e15 	stw	r18,1208(sp)
 8013a9c:	dc412d15 	stw	r17,1204(sp)
 8013aa0:	dc012c15 	stw	r16,1200(sp)
 8013aa4:	d9012115 	stw	r4,1156(sp)
 8013aa8:	d9412015 	stw	r5,1152(sp)
 8013aac:	d9c12315 	stw	r7,1164(sp)
 8013ab0:	3027883a 	mov	r19,r6
 8013ab4:	20000226 	beq	r4,zero,8013ac0 <___vfiprintf_internal_r+0x48>
 8013ab8:	20800e17 	ldw	r2,56(r4)
 8013abc:	1000f726 	beq	r2,zero,8013e9c <___vfiprintf_internal_r+0x424>
 8013ac0:	d8812017 	ldw	r2,1152(sp)
 8013ac4:	10c0030b 	ldhu	r3,12(r2)
 8013ac8:	1908000c 	andi	r4,r3,8192
 8013acc:	1805883a 	mov	r2,r3
 8013ad0:	2000081e 	bne	r4,zero,8013af4 <___vfiprintf_internal_r+0x7c>
 8013ad4:	d9412017 	ldw	r5,1152(sp)
 8013ad8:	18880014 	ori	r2,r3,8192
 8013adc:	00f7ffc4 	movi	r3,-8193
 8013ae0:	29001917 	ldw	r4,100(r5)
 8013ae4:	2880030d 	sth	r2,12(r5)
 8013ae8:	20c8703a 	and	r4,r4,r3
 8013aec:	29001915 	stw	r4,100(r5)
 8013af0:	1007883a 	mov	r3,r2
 8013af4:	1100020c 	andi	r4,r2,8
 8013af8:	2000a726 	beq	r4,zero,8013d98 <___vfiprintf_internal_r+0x320>
 8013afc:	d9412017 	ldw	r5,1152(sp)
 8013b00:	29000417 	ldw	r4,16(r5)
 8013b04:	2000a426 	beq	r4,zero,8013d98 <___vfiprintf_internal_r+0x320>
 8013b08:	1080068c 	andi	r2,r2,26
 8013b0c:	01000284 	movi	r4,10
 8013b10:	1100ab26 	beq	r2,r4,8013dc0 <___vfiprintf_internal_r+0x348>
 8013b14:	d9010a04 	addi	r4,sp,1064
 8013b18:	d94109c4 	addi	r5,sp,1063
 8013b1c:	070200b4 	movhi	fp,2050
 8013b20:	044200b4 	movhi	r17,2050
 8013b24:	2145c83a 	sub	r2,r4,r5
 8013b28:	e7390a04 	addi	fp,fp,-7128
 8013b2c:	8c790604 	addi	r17,r17,-7144
 8013b30:	d9011e15 	stw	r4,1144(sp)
 8013b34:	d9411f15 	stw	r5,1148(sp)
 8013b38:	dec11a15 	stw	sp,1128(sp)
 8013b3c:	d8011c15 	stw	zero,1136(sp)
 8013b40:	d8011b15 	stw	zero,1132(sp)
 8013b44:	d8012715 	stw	zero,1180(sp)
 8013b48:	d8012515 	stw	zero,1172(sp)
 8013b4c:	d811883a 	mov	r8,sp
 8013b50:	d8812815 	stw	r2,1184(sp)
 8013b54:	982f883a 	mov	r23,r19
 8013b58:	b8800007 	ldb	r2,0(r23)
 8013b5c:	1003b026 	beq	r2,zero,8014a20 <___vfiprintf_internal_r+0xfa8>
 8013b60:	01000944 	movi	r4,37
 8013b64:	1103ae26 	beq	r2,r4,8014a20 <___vfiprintf_internal_r+0xfa8>
 8013b68:	b805883a 	mov	r2,r23
 8013b6c:	00000106 	br	8013b74 <___vfiprintf_internal_r+0xfc>
 8013b70:	19000326 	beq	r3,r4,8013b80 <___vfiprintf_internal_r+0x108>
 8013b74:	10800044 	addi	r2,r2,1
 8013b78:	10c00007 	ldb	r3,0(r2)
 8013b7c:	183ffc1e 	bne	r3,zero,8013b70 <__alt_data_end+0xfc013b70>
 8013b80:	15e1c83a 	sub	r16,r2,r23
 8013b84:	1029883a 	mov	r20,r2
 8013b88:	80001026 	beq	r16,zero,8013bcc <___vfiprintf_internal_r+0x154>
 8013b8c:	d8c11c17 	ldw	r3,1136(sp)
 8013b90:	d8811b17 	ldw	r2,1132(sp)
 8013b94:	45c00015 	stw	r23,0(r8)
 8013b98:	80c7883a 	add	r3,r16,r3
 8013b9c:	10800044 	addi	r2,r2,1
 8013ba0:	44000115 	stw	r16,4(r8)
 8013ba4:	d8c11c15 	stw	r3,1136(sp)
 8013ba8:	d8811b15 	stw	r2,1132(sp)
 8013bac:	010001c4 	movi	r4,7
 8013bb0:	2080740e 	bge	r4,r2,8013d84 <___vfiprintf_internal_r+0x30c>
 8013bb4:	1803a71e 	bne	r3,zero,8014a54 <___vfiprintf_internal_r+0xfdc>
 8013bb8:	d8c12517 	ldw	r3,1172(sp)
 8013bbc:	d8011b15 	stw	zero,1132(sp)
 8013bc0:	d811883a 	mov	r8,sp
 8013bc4:	1c07883a 	add	r3,r3,r16
 8013bc8:	d8c12515 	stw	r3,1172(sp)
 8013bcc:	a0800007 	ldb	r2,0(r20)
 8013bd0:	1002bf26 	beq	r2,zero,80146d0 <___vfiprintf_internal_r+0xc58>
 8013bd4:	a5c00044 	addi	r23,r20,1
 8013bd8:	a1800047 	ldb	r6,1(r20)
 8013bdc:	d8011d85 	stb	zero,1142(sp)
 8013be0:	d8012205 	stb	zero,1160(sp)
 8013be4:	043fffc4 	movi	r16,-1
 8013be8:	d8012415 	stw	zero,1168(sp)
 8013bec:	0025883a 	mov	r18,zero
 8013bf0:	05001604 	movi	r20,88
 8013bf4:	05400244 	movi	r21,9
 8013bf8:	4027883a 	mov	r19,r8
 8013bfc:	bdc00044 	addi	r23,r23,1
 8013c00:	30bff804 	addi	r2,r6,-32
 8013c04:	a0825636 	bltu	r20,r2,8014560 <___vfiprintf_internal_r+0xae8>
 8013c08:	100490ba 	slli	r2,r2,2
 8013c0c:	01020074 	movhi	r4,2049
 8013c10:	210f0804 	addi	r4,r4,15392
 8013c14:	1105883a 	add	r2,r2,r4
 8013c18:	10800017 	ldw	r2,0(r2)
 8013c1c:	1000683a 	jmp	r2
 8013c20:	080144f0 	cmpltui	zero,at,1299
 8013c24:	08014560 	cmpeqi	zero,at,1301
 8013c28:	08014560 	cmpeqi	zero,at,1301
 8013c2c:	08014554 	ori	zero,at,1301
 8013c30:	08014560 	cmpeqi	zero,at,1301
 8013c34:	08014560 	cmpeqi	zero,at,1301
 8013c38:	08014560 	cmpeqi	zero,at,1301
 8013c3c:	08014560 	cmpeqi	zero,at,1301
 8013c40:	08014560 	cmpeqi	zero,at,1301
 8013c44:	08014560 	cmpeqi	zero,at,1301
 8013c48:	080142e0 	cmpeqi	zero,at,1291
 8013c4c:	08014508 	cmpgei	zero,at,1300
 8013c50:	08014560 	cmpeqi	zero,at,1301
 8013c54:	08013eb4 	orhi	zero,at,1274
 8013c58:	08014304 	addi	zero,at,1292
 8013c5c:	08014560 	cmpeqi	zero,at,1301
 8013c60:	08013ec0 	call	8013ec <__alt_mem_sdram_controller-0x77fec14>
 8013c64:	08013ecc 	andi	zero,at,1275
 8013c68:	08013ecc 	andi	zero,at,1275
 8013c6c:	08013ecc 	andi	zero,at,1275
 8013c70:	08013ecc 	andi	zero,at,1275
 8013c74:	08013ecc 	andi	zero,at,1275
 8013c78:	08013ecc 	andi	zero,at,1275
 8013c7c:	08013ecc 	andi	zero,at,1275
 8013c80:	08013ecc 	andi	zero,at,1275
 8013c84:	08013ecc 	andi	zero,at,1275
 8013c88:	08014560 	cmpeqi	zero,at,1301
 8013c8c:	08014560 	cmpeqi	zero,at,1301
 8013c90:	08014560 	cmpeqi	zero,at,1301
 8013c94:	08014560 	cmpeqi	zero,at,1301
 8013c98:	08014560 	cmpeqi	zero,at,1301
 8013c9c:	08014560 	cmpeqi	zero,at,1301
 8013ca0:	08014560 	cmpeqi	zero,at,1301
 8013ca4:	08014560 	cmpeqi	zero,at,1301
 8013ca8:	08014560 	cmpeqi	zero,at,1301
 8013cac:	08014560 	cmpeqi	zero,at,1301
 8013cb0:	08013f0c 	andi	zero,at,1276
 8013cb4:	08014560 	cmpeqi	zero,at,1301
 8013cb8:	08014560 	cmpeqi	zero,at,1301
 8013cbc:	08014560 	cmpeqi	zero,at,1301
 8013cc0:	08014560 	cmpeqi	zero,at,1301
 8013cc4:	08014560 	cmpeqi	zero,at,1301
 8013cc8:	08014560 	cmpeqi	zero,at,1301
 8013ccc:	08014560 	cmpeqi	zero,at,1301
 8013cd0:	08014560 	cmpeqi	zero,at,1301
 8013cd4:	08014560 	cmpeqi	zero,at,1301
 8013cd8:	08014560 	cmpeqi	zero,at,1301
 8013cdc:	080141fc 	xorhi	zero,at,1287
 8013ce0:	08014560 	cmpeqi	zero,at,1301
 8013ce4:	08014560 	cmpeqi	zero,at,1301
 8013ce8:	08014560 	cmpeqi	zero,at,1301
 8013cec:	08014560 	cmpeqi	zero,at,1301
 8013cf0:	08014560 	cmpeqi	zero,at,1301
 8013cf4:	0801423c 	xorhi	zero,at,1288
 8013cf8:	08014560 	cmpeqi	zero,at,1301
 8013cfc:	08014560 	cmpeqi	zero,at,1301
 8013d00:	08014280 	call	801428 <__alt_mem_sdram_controller-0x77febd8>
 8013d04:	08014560 	cmpeqi	zero,at,1301
 8013d08:	08014560 	cmpeqi	zero,at,1301
 8013d0c:	08014560 	cmpeqi	zero,at,1301
 8013d10:	08014560 	cmpeqi	zero,at,1301
 8013d14:	08014560 	cmpeqi	zero,at,1301
 8013d18:	08014560 	cmpeqi	zero,at,1301
 8013d1c:	08014560 	cmpeqi	zero,at,1301
 8013d20:	08014560 	cmpeqi	zero,at,1301
 8013d24:	08014560 	cmpeqi	zero,at,1301
 8013d28:	08014560 	cmpeqi	zero,at,1301
 8013d2c:	080141c8 	cmpgei	zero,at,1287
 8013d30:	08014518 	cmpnei	zero,at,1300
 8013d34:	08014560 	cmpeqi	zero,at,1301
 8013d38:	08014560 	cmpeqi	zero,at,1301
 8013d3c:	08014560 	cmpeqi	zero,at,1301
 8013d40:	08014354 	ori	zero,at,1293
 8013d44:	08014518 	cmpnei	zero,at,1300
 8013d48:	08014560 	cmpeqi	zero,at,1301
 8013d4c:	08014560 	cmpeqi	zero,at,1301
 8013d50:	0801426c 	andhi	zero,at,1289
 8013d54:	08014560 	cmpeqi	zero,at,1301
 8013d58:	080144b8 	rdprs	zero,at,1298
 8013d5c:	08014440 	call	801444 <__alt_mem_sdram_controller-0x77febbc>
 8013d60:	08014474 	orhi	zero,at,1297
 8013d64:	08014360 	cmpeqi	zero,at,1293
 8013d68:	08014560 	cmpeqi	zero,at,1301
 8013d6c:	0801436c 	andhi	zero,at,1293
 8013d70:	08014560 	cmpeqi	zero,at,1301
 8013d74:	080143c8 	cmpgei	zero,at,1295
 8013d78:	08014560 	cmpeqi	zero,at,1301
 8013d7c:	08014560 	cmpeqi	zero,at,1301
 8013d80:	080143fc 	xorhi	zero,at,1295
 8013d84:	42000204 	addi	r8,r8,8
 8013d88:	d8c12517 	ldw	r3,1172(sp)
 8013d8c:	1c07883a 	add	r3,r3,r16
 8013d90:	d8c12515 	stw	r3,1172(sp)
 8013d94:	003f8d06 	br	8013bcc <__alt_data_end+0xfc013bcc>
 8013d98:	d9012117 	ldw	r4,1156(sp)
 8013d9c:	d9412017 	ldw	r5,1152(sp)
 8013da0:	800aba40 	call	800aba4 <__swsetup_r>
 8013da4:	1000301e 	bne	r2,zero,8013e68 <___vfiprintf_internal_r+0x3f0>
 8013da8:	d8812017 	ldw	r2,1152(sp)
 8013dac:	01000284 	movi	r4,10
 8013db0:	10c0030b 	ldhu	r3,12(r2)
 8013db4:	1805883a 	mov	r2,r3
 8013db8:	1080068c 	andi	r2,r2,26
 8013dbc:	113f551e 	bne	r2,r4,8013b14 <__alt_data_end+0xfc013b14>
 8013dc0:	d9012017 	ldw	r4,1152(sp)
 8013dc4:	2080038b 	ldhu	r2,14(r4)
 8013dc8:	113fffcc 	andi	r4,r2,65535
 8013dcc:	2120001c 	xori	r4,r4,32768
 8013dd0:	21200004 	addi	r4,r4,-32768
 8013dd4:	203f4f16 	blt	r4,zero,8013b14 <__alt_data_end+0xfc013b14>
 8013dd8:	d9412017 	ldw	r5,1152(sp)
 8013ddc:	d9012117 	ldw	r4,1156(sp)
 8013de0:	d9c12317 	ldw	r7,1164(sp)
 8013de4:	2b001917 	ldw	r12,100(r5)
 8013de8:	2ac00717 	ldw	r11,28(r5)
 8013dec:	2a800917 	ldw	r10,36(r5)
 8013df0:	02010004 	movi	r8,1024
 8013df4:	18ffff4c 	andi	r3,r3,65533
 8013df8:	da0b883a 	add	r5,sp,r8
 8013dfc:	980d883a 	mov	r6,r19
 8013e00:	d8c1030d 	sth	r3,1036(sp)
 8013e04:	db011915 	stw	r12,1124(sp)
 8013e08:	d881038d 	sth	r2,1038(sp)
 8013e0c:	dac10715 	stw	r11,1052(sp)
 8013e10:	da810915 	stw	r10,1060(sp)
 8013e14:	dec10015 	stw	sp,1024(sp)
 8013e18:	dec10415 	stw	sp,1040(sp)
 8013e1c:	da010215 	stw	r8,1032(sp)
 8013e20:	da010515 	stw	r8,1044(sp)
 8013e24:	d8010615 	stw	zero,1048(sp)
 8013e28:	8013a780 	call	8013a78 <___vfiprintf_internal_r>
 8013e2c:	1021883a 	mov	r16,r2
 8013e30:	10000416 	blt	r2,zero,8013e44 <___vfiprintf_internal_r+0x3cc>
 8013e34:	d9012117 	ldw	r4,1156(sp)
 8013e38:	d9410004 	addi	r5,sp,1024
 8013e3c:	800c7b80 	call	800c7b8 <_fflush_r>
 8013e40:	10040f1e 	bne	r2,zero,8014e80 <___vfiprintf_internal_r+0x1408>
 8013e44:	d881030b 	ldhu	r2,1036(sp)
 8013e48:	1080100c 	andi	r2,r2,64
 8013e4c:	10000426 	beq	r2,zero,8013e60 <___vfiprintf_internal_r+0x3e8>
 8013e50:	d8c12017 	ldw	r3,1152(sp)
 8013e54:	1880030b 	ldhu	r2,12(r3)
 8013e58:	10801014 	ori	r2,r2,64
 8013e5c:	1880030d 	sth	r2,12(r3)
 8013e60:	8005883a 	mov	r2,r16
 8013e64:	00000106 	br	8013e6c <___vfiprintf_internal_r+0x3f4>
 8013e68:	00bfffc4 	movi	r2,-1
 8013e6c:	dfc13517 	ldw	ra,1236(sp)
 8013e70:	df013417 	ldw	fp,1232(sp)
 8013e74:	ddc13317 	ldw	r23,1228(sp)
 8013e78:	dd813217 	ldw	r22,1224(sp)
 8013e7c:	dd413117 	ldw	r21,1220(sp)
 8013e80:	dd013017 	ldw	r20,1216(sp)
 8013e84:	dcc12f17 	ldw	r19,1212(sp)
 8013e88:	dc812e17 	ldw	r18,1208(sp)
 8013e8c:	dc412d17 	ldw	r17,1204(sp)
 8013e90:	dc012c17 	ldw	r16,1200(sp)
 8013e94:	dec13604 	addi	sp,sp,1240
 8013e98:	f800283a 	ret
 8013e9c:	800cd740 	call	800cd74 <__sinit>
 8013ea0:	003f0706 	br	8013ac0 <__alt_data_end+0xfc013ac0>
 8013ea4:	d8c12417 	ldw	r3,1168(sp)
 8013ea8:	d8812315 	stw	r2,1164(sp)
 8013eac:	00c7c83a 	sub	r3,zero,r3
 8013eb0:	d8c12415 	stw	r3,1168(sp)
 8013eb4:	94800114 	ori	r18,r18,4
 8013eb8:	b9800007 	ldb	r6,0(r23)
 8013ebc:	003f4f06 	br	8013bfc <__alt_data_end+0xfc013bfc>
 8013ec0:	94802014 	ori	r18,r18,128
 8013ec4:	b9800007 	ldb	r6,0(r23)
 8013ec8:	003f4c06 	br	8013bfc <__alt_data_end+0xfc013bfc>
 8013ecc:	dc012615 	stw	r16,1176(sp)
 8013ed0:	d8012415 	stw	zero,1168(sp)
 8013ed4:	35bff404 	addi	r22,r6,-48
 8013ed8:	0009883a 	mov	r4,zero
 8013edc:	b821883a 	mov	r16,r23
 8013ee0:	01400284 	movi	r5,10
 8013ee4:	800334c0 	call	800334c <__mulsi3>
 8013ee8:	81800007 	ldb	r6,0(r16)
 8013eec:	1589883a 	add	r4,r2,r22
 8013ef0:	bdc00044 	addi	r23,r23,1
 8013ef4:	35bff404 	addi	r22,r6,-48
 8013ef8:	b821883a 	mov	r16,r23
 8013efc:	adbff82e 	bgeu	r21,r22,8013ee0 <__alt_data_end+0xfc013ee0>
 8013f00:	d9012415 	stw	r4,1168(sp)
 8013f04:	dc012617 	ldw	r16,1176(sp)
 8013f08:	003f3d06 	br	8013c00 <__alt_data_end+0xfc013c00>
 8013f0c:	d8c12203 	ldbu	r3,1160(sp)
 8013f10:	94800414 	ori	r18,r18,16
 8013f14:	9080080c 	andi	r2,r18,32
 8013f18:	d8c11d85 	stb	r3,1142(sp)
 8013f1c:	9811883a 	mov	r8,r19
 8013f20:	d8c12317 	ldw	r3,1164(sp)
 8013f24:	10018226 	beq	r2,zero,8014530 <___vfiprintf_internal_r+0xab8>
 8013f28:	d9012317 	ldw	r4,1164(sp)
 8013f2c:	18800117 	ldw	r2,4(r3)
 8013f30:	1cc00017 	ldw	r19,0(r3)
 8013f34:	21000204 	addi	r4,r4,8
 8013f38:	d9012315 	stw	r4,1164(sp)
 8013f3c:	102b883a 	mov	r21,r2
 8013f40:	10030016 	blt	r2,zero,8014b44 <___vfiprintf_internal_r+0x10cc>
 8013f44:	dd811d83 	ldbu	r22,1142(sp)
 8013f48:	8029883a 	mov	r20,r16
 8013f4c:	00800044 	movi	r2,1
 8013f50:	9d46b03a 	or	r3,r19,r21
 8013f54:	80000216 	blt	r16,zero,8013f60 <___vfiprintf_internal_r+0x4e8>
 8013f58:	013fdfc4 	movi	r4,-129
 8013f5c:	9124703a 	and	r18,r18,r4
 8013f60:	1801b41e 	bne	r3,zero,8014634 <___vfiprintf_internal_r+0xbbc>
 8013f64:	80028126 	beq	r16,zero,801496c <___vfiprintf_internal_r+0xef4>
 8013f68:	10803fcc 	andi	r2,r2,255
 8013f6c:	00c00044 	movi	r3,1
 8013f70:	10c1d126 	beq	r2,r3,80146b8 <___vfiprintf_internal_r+0xc40>
 8013f74:	00c00084 	movi	r3,2
 8013f78:	10c28626 	beq	r2,r3,8014994 <___vfiprintf_internal_r+0xf1c>
 8013f7c:	d8c10a04 	addi	r3,sp,1064
 8013f80:	9808d0fa 	srli	r4,r19,3
 8013f84:	a80a977a 	slli	r5,r21,29
 8013f88:	a82ad0fa 	srli	r21,r21,3
 8013f8c:	9cc001cc 	andi	r19,r19,7
 8013f90:	98800c04 	addi	r2,r19,48
 8013f94:	18ffffc4 	addi	r3,r3,-1
 8013f98:	2926b03a 	or	r19,r5,r4
 8013f9c:	18800005 	stb	r2,0(r3)
 8013fa0:	9d48b03a 	or	r4,r19,r21
 8013fa4:	203ff61e 	bne	r4,zero,8013f80 <__alt_data_end+0xfc013f80>
 8013fa8:	9100004c 	andi	r4,r18,1
 8013fac:	d8c12215 	stw	r3,1160(sp)
 8013fb0:	2002b31e 	bne	r4,zero,8014a80 <___vfiprintf_internal_r+0x1008>
 8013fb4:	d9411e17 	ldw	r5,1144(sp)
 8013fb8:	28e9c83a 	sub	r20,r5,r3
 8013fbc:	a02b883a 	mov	r21,r20
 8013fc0:	a400010e 	bge	r20,r16,8013fc8 <___vfiprintf_internal_r+0x550>
 8013fc4:	802b883a 	mov	r21,r16
 8013fc8:	b5803fcc 	andi	r22,r22,255
 8013fcc:	b580201c 	xori	r22,r22,128
 8013fd0:	b5bfe004 	addi	r22,r22,-128
 8013fd4:	b0000126 	beq	r22,zero,8013fdc <___vfiprintf_internal_r+0x564>
 8013fd8:	ad400044 	addi	r21,r21,1
 8013fdc:	9280008c 	andi	r10,r18,2
 8013fe0:	50000126 	beq	r10,zero,8013fe8 <___vfiprintf_internal_r+0x570>
 8013fe4:	ad400084 	addi	r21,r21,2
 8013fe8:	9580210c 	andi	r22,r18,132
 8013fec:	b001751e 	bne	r22,zero,80145c4 <___vfiprintf_internal_r+0xb4c>
 8013ff0:	d9012417 	ldw	r4,1168(sp)
 8013ff4:	2567c83a 	sub	r19,r4,r21
 8013ff8:	04c1720e 	bge	zero,r19,80145c4 <___vfiprintf_internal_r+0xb4c>
 8013ffc:	01c00404 	movi	r7,16
 8014000:	d8c11c17 	ldw	r3,1136(sp)
 8014004:	3cc36b0e 	bge	r7,r19,8014db4 <___vfiprintf_internal_r+0x133c>
 8014008:	008200b4 	movhi	r2,2050
 801400c:	10b90a04 	addi	r2,r2,-7128
 8014010:	dc012915 	stw	r16,1188(sp)
 8014014:	d9011b17 	ldw	r4,1132(sp)
 8014018:	9821883a 	mov	r16,r19
 801401c:	d8812615 	stw	r2,1176(sp)
 8014020:	030001c4 	movi	r12,7
 8014024:	5027883a 	mov	r19,r10
 8014028:	00000506 	br	8014040 <___vfiprintf_internal_r+0x5c8>
 801402c:	21400084 	addi	r5,r4,2
 8014030:	42000204 	addi	r8,r8,8
 8014034:	1009883a 	mov	r4,r2
 8014038:	843ffc04 	addi	r16,r16,-16
 801403c:	3c000d0e 	bge	r7,r16,8014074 <___vfiprintf_internal_r+0x5fc>
 8014040:	18c00404 	addi	r3,r3,16
 8014044:	20800044 	addi	r2,r4,1
 8014048:	47000015 	stw	fp,0(r8)
 801404c:	41c00115 	stw	r7,4(r8)
 8014050:	d8c11c15 	stw	r3,1136(sp)
 8014054:	d8811b15 	stw	r2,1132(sp)
 8014058:	60bff40e 	bge	r12,r2,801402c <__alt_data_end+0xfc01402c>
 801405c:	18014b1e 	bne	r3,zero,801458c <___vfiprintf_internal_r+0xb14>
 8014060:	843ffc04 	addi	r16,r16,-16
 8014064:	0009883a 	mov	r4,zero
 8014068:	01400044 	movi	r5,1
 801406c:	d811883a 	mov	r8,sp
 8014070:	3c3ff316 	blt	r7,r16,8014040 <__alt_data_end+0xfc014040>
 8014074:	9815883a 	mov	r10,r19
 8014078:	8027883a 	mov	r19,r16
 801407c:	dc012917 	ldw	r16,1188(sp)
 8014080:	d9012617 	ldw	r4,1176(sp)
 8014084:	98c7883a 	add	r3,r19,r3
 8014088:	44c00115 	stw	r19,4(r8)
 801408c:	41000015 	stw	r4,0(r8)
 8014090:	d8c11c15 	stw	r3,1136(sp)
 8014094:	d9411b15 	stw	r5,1132(sp)
 8014098:	008001c4 	movi	r2,7
 801409c:	11425116 	blt	r2,r5,80149e4 <___vfiprintf_internal_r+0xf6c>
 80140a0:	d9011d87 	ldb	r4,1142(sp)
 80140a4:	42000204 	addi	r8,r8,8
 80140a8:	28800044 	addi	r2,r5,1
 80140ac:	20014a1e 	bne	r4,zero,80145d8 <___vfiprintf_internal_r+0xb60>
 80140b0:	50000c26 	beq	r10,zero,80140e4 <___vfiprintf_internal_r+0x66c>
 80140b4:	d9011d04 	addi	r4,sp,1140
 80140b8:	18c00084 	addi	r3,r3,2
 80140bc:	41000015 	stw	r4,0(r8)
 80140c0:	01000084 	movi	r4,2
 80140c4:	41000115 	stw	r4,4(r8)
 80140c8:	d8c11c15 	stw	r3,1136(sp)
 80140cc:	d8811b15 	stw	r2,1132(sp)
 80140d0:	010001c4 	movi	r4,7
 80140d4:	20822016 	blt	r4,r2,8014958 <___vfiprintf_internal_r+0xee0>
 80140d8:	100b883a 	mov	r5,r2
 80140dc:	42000204 	addi	r8,r8,8
 80140e0:	10800044 	addi	r2,r2,1
 80140e4:	01002004 	movi	r4,128
 80140e8:	b101de26 	beq	r22,r4,8014864 <___vfiprintf_internal_r+0xdec>
 80140ec:	8521c83a 	sub	r16,r16,r20
 80140f0:	0400230e 	bge	zero,r16,8014180 <___vfiprintf_internal_r+0x708>
 80140f4:	04c00404 	movi	r19,16
 80140f8:	9c030d0e 	bge	r19,r16,8014d30 <___vfiprintf_internal_r+0x12b8>
 80140fc:	008200b4 	movhi	r2,2050
 8014100:	10b90604 	addi	r2,r2,-7144
 8014104:	d8812615 	stw	r2,1176(sp)
 8014108:	058001c4 	movi	r22,7
 801410c:	00000506 	br	8014124 <___vfiprintf_internal_r+0x6ac>
 8014110:	28800084 	addi	r2,r5,2
 8014114:	42000204 	addi	r8,r8,8
 8014118:	200b883a 	mov	r5,r4
 801411c:	843ffc04 	addi	r16,r16,-16
 8014120:	9c000d0e 	bge	r19,r16,8014158 <___vfiprintf_internal_r+0x6e0>
 8014124:	18c00404 	addi	r3,r3,16
 8014128:	29000044 	addi	r4,r5,1
 801412c:	44400015 	stw	r17,0(r8)
 8014130:	44c00115 	stw	r19,4(r8)
 8014134:	d8c11c15 	stw	r3,1136(sp)
 8014138:	d9011b15 	stw	r4,1132(sp)
 801413c:	b13ff40e 	bge	r22,r4,8014110 <__alt_data_end+0xfc014110>
 8014140:	1801321e 	bne	r3,zero,801460c <___vfiprintf_internal_r+0xb94>
 8014144:	843ffc04 	addi	r16,r16,-16
 8014148:	000b883a 	mov	r5,zero
 801414c:	00800044 	movi	r2,1
 8014150:	d811883a 	mov	r8,sp
 8014154:	9c3ff316 	blt	r19,r16,8014124 <__alt_data_end+0xfc014124>
 8014158:	d9012617 	ldw	r4,1176(sp)
 801415c:	1c07883a 	add	r3,r3,r16
 8014160:	44000115 	stw	r16,4(r8)
 8014164:	41000015 	stw	r4,0(r8)
 8014168:	d8c11c15 	stw	r3,1136(sp)
 801416c:	d8811b15 	stw	r2,1132(sp)
 8014170:	010001c4 	movi	r4,7
 8014174:	20816216 	blt	r4,r2,8014700 <___vfiprintf_internal_r+0xc88>
 8014178:	42000204 	addi	r8,r8,8
 801417c:	10800044 	addi	r2,r2,1
 8014180:	d9012217 	ldw	r4,1160(sp)
 8014184:	1d07883a 	add	r3,r3,r20
 8014188:	45000115 	stw	r20,4(r8)
 801418c:	41000015 	stw	r4,0(r8)
 8014190:	d8c11c15 	stw	r3,1136(sp)
 8014194:	d8811b15 	stw	r2,1132(sp)
 8014198:	010001c4 	movi	r4,7
 801419c:	2081610e 	bge	r4,r2,8014724 <___vfiprintf_internal_r+0xcac>
 80141a0:	1802211e 	bne	r3,zero,8014a28 <___vfiprintf_internal_r+0xfb0>
 80141a4:	d8011b15 	stw	zero,1132(sp)
 80141a8:	9480010c 	andi	r18,r18,4
 80141ac:	9002171e 	bne	r18,zero,8014a0c <___vfiprintf_internal_r+0xf94>
 80141b0:	d9412417 	ldw	r5,1168(sp)
 80141b4:	a9433716 	blt	r21,r5,8014e94 <___vfiprintf_internal_r+0x141c>
 80141b8:	d8812517 	ldw	r2,1172(sp)
 80141bc:	1545883a 	add	r2,r2,r21
 80141c0:	d8812515 	stw	r2,1172(sp)
 80141c4:	00019a06 	br	8014830 <___vfiprintf_internal_r+0xdb8>
 80141c8:	d8c12317 	ldw	r3,1164(sp)
 80141cc:	05400044 	movi	r21,1
 80141d0:	9811883a 	mov	r8,r19
 80141d4:	18800017 	ldw	r2,0(r3)
 80141d8:	18c00104 	addi	r3,r3,4
 80141dc:	d8c12315 	stw	r3,1164(sp)
 80141e0:	d8c10004 	addi	r3,sp,1024
 80141e4:	d8011d85 	stb	zero,1142(sp)
 80141e8:	d8810005 	stb	r2,1024(sp)
 80141ec:	a829883a 	mov	r20,r21
 80141f0:	d8c12215 	stw	r3,1160(sp)
 80141f4:	0021883a 	mov	r16,zero
 80141f8:	003f7806 	br	8013fdc <__alt_data_end+0xfc013fdc>
 80141fc:	94800414 	ori	r18,r18,16
 8014200:	9080080c 	andi	r2,r18,32
 8014204:	9811883a 	mov	r8,r19
 8014208:	10009026 	beq	r2,zero,801444c <___vfiprintf_internal_r+0x9d4>
 801420c:	d8812317 	ldw	r2,1164(sp)
 8014210:	d8c12317 	ldw	r3,1164(sp)
 8014214:	14c00017 	ldw	r19,0(r2)
 8014218:	15400117 	ldw	r21,4(r2)
 801421c:	18c00204 	addi	r3,r3,8
 8014220:	d8c12315 	stw	r3,1164(sp)
 8014224:	0005883a 	mov	r2,zero
 8014228:	9d46b03a 	or	r3,r19,r21
 801422c:	d8011d85 	stb	zero,1142(sp)
 8014230:	8029883a 	mov	r20,r16
 8014234:	002d883a 	mov	r22,zero
 8014238:	003f4606 	br	8013f54 <__alt_data_end+0xfc013f54>
 801423c:	94800414 	ori	r18,r18,16
 8014240:	9080080c 	andi	r2,r18,32
 8014244:	9811883a 	mov	r8,r19
 8014248:	10006226 	beq	r2,zero,80143d4 <___vfiprintf_internal_r+0x95c>
 801424c:	d9012317 	ldw	r4,1164(sp)
 8014250:	00800044 	movi	r2,1
 8014254:	24c00017 	ldw	r19,0(r4)
 8014258:	25400117 	ldw	r21,4(r4)
 801425c:	21000204 	addi	r4,r4,8
 8014260:	d9012315 	stw	r4,1164(sp)
 8014264:	9d46b03a 	or	r3,r19,r21
 8014268:	003ff006 	br	801422c <__alt_data_end+0xfc01422c>
 801426c:	b9800007 	ldb	r6,0(r23)
 8014270:	00801b04 	movi	r2,108
 8014274:	3082b226 	beq	r6,r2,8014d40 <___vfiprintf_internal_r+0x12c8>
 8014278:	94800414 	ori	r18,r18,16
 801427c:	003e5f06 	br	8013bfc <__alt_data_end+0xfc013bfc>
 8014280:	d8c12203 	ldbu	r3,1160(sp)
 8014284:	010200b4 	movhi	r4,2050
 8014288:	2137d804 	addi	r4,r4,-8352
 801428c:	d8c11d85 	stb	r3,1142(sp)
 8014290:	d9012715 	stw	r4,1180(sp)
 8014294:	90c0080c 	andi	r3,r18,32
 8014298:	9811883a 	mov	r8,r19
 801429c:	d8812317 	ldw	r2,1164(sp)
 80142a0:	18005f26 	beq	r3,zero,8014420 <___vfiprintf_internal_r+0x9a8>
 80142a4:	d9012317 	ldw	r4,1164(sp)
 80142a8:	14c00017 	ldw	r19,0(r2)
 80142ac:	15400117 	ldw	r21,4(r2)
 80142b0:	21000204 	addi	r4,r4,8
 80142b4:	d9012315 	stw	r4,1164(sp)
 80142b8:	9080004c 	andi	r2,r18,1
 80142bc:	1001e226 	beq	r2,zero,8014a48 <___vfiprintf_internal_r+0xfd0>
 80142c0:	9d46b03a 	or	r3,r19,r21
 80142c4:	18024e26 	beq	r3,zero,8014c00 <___vfiprintf_internal_r+0x1188>
 80142c8:	00800c04 	movi	r2,48
 80142cc:	d8811d05 	stb	r2,1140(sp)
 80142d0:	d9811d45 	stb	r6,1141(sp)
 80142d4:	94800094 	ori	r18,r18,2
 80142d8:	00800084 	movi	r2,2
 80142dc:	003fd306 	br	801422c <__alt_data_end+0xfc01422c>
 80142e0:	d9012317 	ldw	r4,1164(sp)
 80142e4:	d9412317 	ldw	r5,1164(sp)
 80142e8:	21000017 	ldw	r4,0(r4)
 80142ec:	28800104 	addi	r2,r5,4
 80142f0:	d9012415 	stw	r4,1168(sp)
 80142f4:	203eeb16 	blt	r4,zero,8013ea4 <__alt_data_end+0xfc013ea4>
 80142f8:	d8812315 	stw	r2,1164(sp)
 80142fc:	b9800007 	ldb	r6,0(r23)
 8014300:	003e3e06 	br	8013bfc <__alt_data_end+0xfc013bfc>
 8014304:	b9800007 	ldb	r6,0(r23)
 8014308:	01000a84 	movi	r4,42
 801430c:	b8800044 	addi	r2,r23,1
 8014310:	3102d226 	beq	r6,r4,8014e5c <___vfiprintf_internal_r+0x13e4>
 8014314:	35bff404 	addi	r22,r6,-48
 8014318:	102f883a 	mov	r23,r2
 801431c:	0021883a 	mov	r16,zero
 8014320:	adbe3736 	bltu	r21,r22,8013c00 <__alt_data_end+0xfc013c00>
 8014324:	0009883a 	mov	r4,zero
 8014328:	01400284 	movi	r5,10
 801432c:	800334c0 	call	800334c <__mulsi3>
 8014330:	b9800007 	ldb	r6,0(r23)
 8014334:	b089883a 	add	r4,r22,r2
 8014338:	bdc00044 	addi	r23,r23,1
 801433c:	35bff404 	addi	r22,r6,-48
 8014340:	adbff92e 	bgeu	r21,r22,8014328 <__alt_data_end+0xfc014328>
 8014344:	2021883a 	mov	r16,r4
 8014348:	203e2d0e 	bge	r4,zero,8013c00 <__alt_data_end+0xfc013c00>
 801434c:	043fffc4 	movi	r16,-1
 8014350:	003e2b06 	br	8013c00 <__alt_data_end+0xfc013c00>
 8014354:	94801014 	ori	r18,r18,64
 8014358:	b9800007 	ldb	r6,0(r23)
 801435c:	003e2706 	br	8013bfc <__alt_data_end+0xfc013bfc>
 8014360:	94800814 	ori	r18,r18,32
 8014364:	b9800007 	ldb	r6,0(r23)
 8014368:	003e2406 	br	8013bfc <__alt_data_end+0xfc013bfc>
 801436c:	d9412317 	ldw	r5,1164(sp)
 8014370:	d8812317 	ldw	r2,1164(sp)
 8014374:	d8011d85 	stb	zero,1142(sp)
 8014378:	29400017 	ldw	r5,0(r5)
 801437c:	9811883a 	mov	r8,r19
 8014380:	14c00104 	addi	r19,r2,4
 8014384:	d9412215 	stw	r5,1160(sp)
 8014388:	28029026 	beq	r5,zero,8014dcc <___vfiprintf_internal_r+0x1354>
 801438c:	d9012217 	ldw	r4,1160(sp)
 8014390:	80027616 	blt	r16,zero,8014d6c <___vfiprintf_internal_r+0x12f4>
 8014394:	000b883a 	mov	r5,zero
 8014398:	800d883a 	mov	r6,r16
 801439c:	da012a15 	stw	r8,1192(sp)
 80143a0:	800df800 	call	800df80 <memchr>
 80143a4:	da012a17 	ldw	r8,1192(sp)
 80143a8:	1002a026 	beq	r2,zero,8014e2c <___vfiprintf_internal_r+0x13b4>
 80143ac:	d8c12217 	ldw	r3,1160(sp)
 80143b0:	10e9c83a 	sub	r20,r2,r3
 80143b4:	85023816 	blt	r16,r20,8014c98 <___vfiprintf_internal_r+0x1220>
 80143b8:	dd811d83 	ldbu	r22,1142(sp)
 80143bc:	dcc12315 	stw	r19,1164(sp)
 80143c0:	0021883a 	mov	r16,zero
 80143c4:	003efd06 	br	8013fbc <__alt_data_end+0xfc013fbc>
 80143c8:	9080080c 	andi	r2,r18,32
 80143cc:	9811883a 	mov	r8,r19
 80143d0:	103f9e1e 	bne	r2,zero,801424c <__alt_data_end+0xfc01424c>
 80143d4:	9080040c 	andi	r2,r18,16
 80143d8:	10021726 	beq	r2,zero,8014c38 <___vfiprintf_internal_r+0x11c0>
 80143dc:	d9412317 	ldw	r5,1164(sp)
 80143e0:	002b883a 	mov	r21,zero
 80143e4:	00800044 	movi	r2,1
 80143e8:	2cc00017 	ldw	r19,0(r5)
 80143ec:	29400104 	addi	r5,r5,4
 80143f0:	d9412315 	stw	r5,1164(sp)
 80143f4:	9807883a 	mov	r3,r19
 80143f8:	003f8c06 	br	801422c <__alt_data_end+0xfc01422c>
 80143fc:	d8c12203 	ldbu	r3,1160(sp)
 8014400:	010200b4 	movhi	r4,2050
 8014404:	2137dd04 	addi	r4,r4,-8332
 8014408:	d8c11d85 	stb	r3,1142(sp)
 801440c:	d9012715 	stw	r4,1180(sp)
 8014410:	90c0080c 	andi	r3,r18,32
 8014414:	9811883a 	mov	r8,r19
 8014418:	d8812317 	ldw	r2,1164(sp)
 801441c:	183fa11e 	bne	r3,zero,80142a4 <__alt_data_end+0xfc0142a4>
 8014420:	90c0040c 	andi	r3,r18,16
 8014424:	1801e526 	beq	r3,zero,8014bbc <___vfiprintf_internal_r+0x1144>
 8014428:	d9412317 	ldw	r5,1164(sp)
 801442c:	14c00017 	ldw	r19,0(r2)
 8014430:	002b883a 	mov	r21,zero
 8014434:	29400104 	addi	r5,r5,4
 8014438:	d9412315 	stw	r5,1164(sp)
 801443c:	003f9e06 	br	80142b8 <__alt_data_end+0xfc0142b8>
 8014440:	9080080c 	andi	r2,r18,32
 8014444:	9811883a 	mov	r8,r19
 8014448:	103f701e 	bne	r2,zero,801420c <__alt_data_end+0xfc01420c>
 801444c:	9080040c 	andi	r2,r18,16
 8014450:	1001ef26 	beq	r2,zero,8014c10 <___vfiprintf_internal_r+0x1198>
 8014454:	d9012317 	ldw	r4,1164(sp)
 8014458:	002b883a 	mov	r21,zero
 801445c:	0005883a 	mov	r2,zero
 8014460:	24c00017 	ldw	r19,0(r4)
 8014464:	21000104 	addi	r4,r4,4
 8014468:	d9012315 	stw	r4,1164(sp)
 801446c:	9807883a 	mov	r3,r19
 8014470:	003f6e06 	br	801422c <__alt_data_end+0xfc01422c>
 8014474:	d8c12317 	ldw	r3,1164(sp)
 8014478:	9811883a 	mov	r8,r19
 801447c:	00800c04 	movi	r2,48
 8014480:	1cc00017 	ldw	r19,0(r3)
 8014484:	010200b4 	movhi	r4,2050
 8014488:	18c00104 	addi	r3,r3,4
 801448c:	d8811d05 	stb	r2,1140(sp)
 8014490:	2137dd04 	addi	r4,r4,-8332
 8014494:	00801e04 	movi	r2,120
 8014498:	d8811d45 	stb	r2,1141(sp)
 801449c:	d8c12315 	stw	r3,1164(sp)
 80144a0:	002b883a 	mov	r21,zero
 80144a4:	94800094 	ori	r18,r18,2
 80144a8:	d9012715 	stw	r4,1180(sp)
 80144ac:	00800084 	movi	r2,2
 80144b0:	9807883a 	mov	r3,r19
 80144b4:	003f5d06 	br	801422c <__alt_data_end+0xfc01422c>
 80144b8:	d8c12203 	ldbu	r3,1160(sp)
 80144bc:	9080080c 	andi	r2,r18,32
 80144c0:	9811883a 	mov	r8,r19
 80144c4:	d8c11d85 	stb	r3,1142(sp)
 80144c8:	1001b126 	beq	r2,zero,8014b90 <___vfiprintf_internal_r+0x1118>
 80144cc:	d9012317 	ldw	r4,1164(sp)
 80144d0:	d9412517 	ldw	r5,1172(sp)
 80144d4:	20800017 	ldw	r2,0(r4)
 80144d8:	2807d7fa 	srai	r3,r5,31
 80144dc:	21000104 	addi	r4,r4,4
 80144e0:	d9012315 	stw	r4,1164(sp)
 80144e4:	11400015 	stw	r5,0(r2)
 80144e8:	10c00115 	stw	r3,4(r2)
 80144ec:	003d9a06 	br	8013b58 <__alt_data_end+0xfc013b58>
 80144f0:	d8812207 	ldb	r2,1160(sp)
 80144f4:	1001c41e 	bne	r2,zero,8014c08 <___vfiprintf_internal_r+0x1190>
 80144f8:	00c00804 	movi	r3,32
 80144fc:	d8c12205 	stb	r3,1160(sp)
 8014500:	b9800007 	ldb	r6,0(r23)
 8014504:	003dbd06 	br	8013bfc <__alt_data_end+0xfc013bfc>
 8014508:	00c00ac4 	movi	r3,43
 801450c:	d8c12205 	stb	r3,1160(sp)
 8014510:	b9800007 	ldb	r6,0(r23)
 8014514:	003db906 	br	8013bfc <__alt_data_end+0xfc013bfc>
 8014518:	d8c12203 	ldbu	r3,1160(sp)
 801451c:	9080080c 	andi	r2,r18,32
 8014520:	9811883a 	mov	r8,r19
 8014524:	d8c11d85 	stb	r3,1142(sp)
 8014528:	d8c12317 	ldw	r3,1164(sp)
 801452c:	103e7e1e 	bne	r2,zero,8013f28 <__alt_data_end+0xfc013f28>
 8014530:	9080040c 	andi	r2,r18,16
 8014534:	1001a926 	beq	r2,zero,8014bdc <___vfiprintf_internal_r+0x1164>
 8014538:	1cc00017 	ldw	r19,0(r3)
 801453c:	d9412317 	ldw	r5,1164(sp)
 8014540:	982bd7fa 	srai	r21,r19,31
 8014544:	29400104 	addi	r5,r5,4
 8014548:	d9412315 	stw	r5,1164(sp)
 801454c:	a805883a 	mov	r2,r21
 8014550:	003e7b06 	br	8013f40 <__alt_data_end+0xfc013f40>
 8014554:	94800054 	ori	r18,r18,1
 8014558:	b9800007 	ldb	r6,0(r23)
 801455c:	003da706 	br	8013bfc <__alt_data_end+0xfc013bfc>
 8014560:	d8c12203 	ldbu	r3,1160(sp)
 8014564:	9811883a 	mov	r8,r19
 8014568:	d8c11d85 	stb	r3,1142(sp)
 801456c:	30005826 	beq	r6,zero,80146d0 <___vfiprintf_internal_r+0xc58>
 8014570:	05400044 	movi	r21,1
 8014574:	d8c10004 	addi	r3,sp,1024
 8014578:	d9810005 	stb	r6,1024(sp)
 801457c:	d8011d85 	stb	zero,1142(sp)
 8014580:	a829883a 	mov	r20,r21
 8014584:	d8c12215 	stw	r3,1160(sp)
 8014588:	003f1a06 	br	80141f4 <__alt_data_end+0xfc0141f4>
 801458c:	d9012117 	ldw	r4,1156(sp)
 8014590:	d9412017 	ldw	r5,1152(sp)
 8014594:	d9811a04 	addi	r6,sp,1128
 8014598:	d9c12a15 	stw	r7,1192(sp)
 801459c:	db012b15 	stw	r12,1196(sp)
 80145a0:	80139640 	call	8013964 <__sprint_r.part.0>
 80145a4:	d9c12a17 	ldw	r7,1192(sp)
 80145a8:	db012b17 	ldw	r12,1196(sp)
 80145ac:	10004e1e 	bne	r2,zero,80146e8 <___vfiprintf_internal_r+0xc70>
 80145b0:	d9011b17 	ldw	r4,1132(sp)
 80145b4:	d8c11c17 	ldw	r3,1136(sp)
 80145b8:	d811883a 	mov	r8,sp
 80145bc:	21400044 	addi	r5,r4,1
 80145c0:	003e9d06 	br	8014038 <__alt_data_end+0xfc014038>
 80145c4:	d9411b17 	ldw	r5,1132(sp)
 80145c8:	d8c11c17 	ldw	r3,1136(sp)
 80145cc:	28800044 	addi	r2,r5,1
 80145d0:	d9011d87 	ldb	r4,1142(sp)
 80145d4:	203eb626 	beq	r4,zero,80140b0 <__alt_data_end+0xfc0140b0>
 80145d8:	01000044 	movi	r4,1
 80145dc:	d9411d84 	addi	r5,sp,1142
 80145e0:	1907883a 	add	r3,r3,r4
 80145e4:	41400015 	stw	r5,0(r8)
 80145e8:	41000115 	stw	r4,4(r8)
 80145ec:	d8c11c15 	stw	r3,1136(sp)
 80145f0:	d8811b15 	stw	r2,1132(sp)
 80145f4:	014001c4 	movi	r5,7
 80145f8:	2880ce16 	blt	r5,r2,8014934 <___vfiprintf_internal_r+0xebc>
 80145fc:	100b883a 	mov	r5,r2
 8014600:	42000204 	addi	r8,r8,8
 8014604:	10800044 	addi	r2,r2,1
 8014608:	003ea906 	br	80140b0 <__alt_data_end+0xfc0140b0>
 801460c:	d9012117 	ldw	r4,1156(sp)
 8014610:	d9412017 	ldw	r5,1152(sp)
 8014614:	d9811a04 	addi	r6,sp,1128
 8014618:	80139640 	call	8013964 <__sprint_r.part.0>
 801461c:	1000321e 	bne	r2,zero,80146e8 <___vfiprintf_internal_r+0xc70>
 8014620:	d9411b17 	ldw	r5,1132(sp)
 8014624:	d8c11c17 	ldw	r3,1136(sp)
 8014628:	d811883a 	mov	r8,sp
 801462c:	28800044 	addi	r2,r5,1
 8014630:	003eba06 	br	801411c <__alt_data_end+0xfc01411c>
 8014634:	10803fcc 	andi	r2,r2,255
 8014638:	00c00044 	movi	r3,1
 801463c:	10fe4d1e 	bne	r2,r3,8013f74 <__alt_data_end+0xfc013f74>
 8014640:	a800021e 	bne	r21,zero,801464c <___vfiprintf_internal_r+0xbd4>
 8014644:	00800244 	movi	r2,9
 8014648:	14c01b2e 	bgeu	r2,r19,80146b8 <___vfiprintf_internal_r+0xc40>
 801464c:	dc012215 	stw	r16,1160(sp)
 8014650:	dd010a04 	addi	r20,sp,1064
 8014654:	a821883a 	mov	r16,r21
 8014658:	402b883a 	mov	r21,r8
 801465c:	9809883a 	mov	r4,r19
 8014660:	800b883a 	mov	r5,r16
 8014664:	01800284 	movi	r6,10
 8014668:	000f883a 	mov	r7,zero
 801466c:	8016cfc0 	call	8016cfc <__umoddi3>
 8014670:	10800c04 	addi	r2,r2,48
 8014674:	a53fffc4 	addi	r20,r20,-1
 8014678:	9809883a 	mov	r4,r19
 801467c:	800b883a 	mov	r5,r16
 8014680:	01800284 	movi	r6,10
 8014684:	000f883a 	mov	r7,zero
 8014688:	a0800005 	stb	r2,0(r20)
 801468c:	80166bc0 	call	80166bc <__udivdi3>
 8014690:	1027883a 	mov	r19,r2
 8014694:	10c4b03a 	or	r2,r2,r3
 8014698:	1821883a 	mov	r16,r3
 801469c:	103fef1e 	bne	r2,zero,801465c <__alt_data_end+0xfc01465c>
 80146a0:	d9011e17 	ldw	r4,1144(sp)
 80146a4:	dc012217 	ldw	r16,1160(sp)
 80146a8:	a811883a 	mov	r8,r21
 80146ac:	dd012215 	stw	r20,1160(sp)
 80146b0:	2529c83a 	sub	r20,r4,r20
 80146b4:	003e4106 	br	8013fbc <__alt_data_end+0xfc013fbc>
 80146b8:	9cc00c04 	addi	r19,r19,48
 80146bc:	d8c109c4 	addi	r3,sp,1063
 80146c0:	dcc109c5 	stb	r19,1063(sp)
 80146c4:	dd012817 	ldw	r20,1184(sp)
 80146c8:	d8c12215 	stw	r3,1160(sp)
 80146cc:	003e3b06 	br	8013fbc <__alt_data_end+0xfc013fbc>
 80146d0:	d8811c17 	ldw	r2,1136(sp)
 80146d4:	10000426 	beq	r2,zero,80146e8 <___vfiprintf_internal_r+0xc70>
 80146d8:	d9012117 	ldw	r4,1156(sp)
 80146dc:	d9412017 	ldw	r5,1152(sp)
 80146e0:	d9811a04 	addi	r6,sp,1128
 80146e4:	80139640 	call	8013964 <__sprint_r.part.0>
 80146e8:	d9412017 	ldw	r5,1152(sp)
 80146ec:	2880030b 	ldhu	r2,12(r5)
 80146f0:	1080100c 	andi	r2,r2,64
 80146f4:	103ddc1e 	bne	r2,zero,8013e68 <__alt_data_end+0xfc013e68>
 80146f8:	d8812517 	ldw	r2,1172(sp)
 80146fc:	003ddb06 	br	8013e6c <__alt_data_end+0xfc013e6c>
 8014700:	1801061e 	bne	r3,zero,8014b1c <___vfiprintf_internal_r+0x10a4>
 8014704:	d8c12217 	ldw	r3,1160(sp)
 8014708:	00800044 	movi	r2,1
 801470c:	dd000115 	stw	r20,4(sp)
 8014710:	d8c00015 	stw	r3,0(sp)
 8014714:	dd011c15 	stw	r20,1136(sp)
 8014718:	d8811b15 	stw	r2,1132(sp)
 801471c:	a007883a 	mov	r3,r20
 8014720:	d811883a 	mov	r8,sp
 8014724:	42000204 	addi	r8,r8,8
 8014728:	9480010c 	andi	r18,r18,4
 801472c:	90003426 	beq	r18,zero,8014800 <___vfiprintf_internal_r+0xd88>
 8014730:	d9412417 	ldw	r5,1168(sp)
 8014734:	2d65c83a 	sub	r18,r5,r21
 8014738:	0480310e 	bge	zero,r18,8014800 <___vfiprintf_internal_r+0xd88>
 801473c:	04000404 	movi	r16,16
 8014740:	8481ad0e 	bge	r16,r18,8014df8 <___vfiprintf_internal_r+0x1380>
 8014744:	014200b4 	movhi	r5,2050
 8014748:	29790a04 	addi	r5,r5,-7128
 801474c:	d9011b17 	ldw	r4,1132(sp)
 8014750:	d9412615 	stw	r5,1176(sp)
 8014754:	04c001c4 	movi	r19,7
 8014758:	dd012117 	ldw	r20,1156(sp)
 801475c:	dd812017 	ldw	r22,1152(sp)
 8014760:	00000506 	br	8014778 <___vfiprintf_internal_r+0xd00>
 8014764:	21400084 	addi	r5,r4,2
 8014768:	42000204 	addi	r8,r8,8
 801476c:	1009883a 	mov	r4,r2
 8014770:	94bffc04 	addi	r18,r18,-16
 8014774:	84800d0e 	bge	r16,r18,80147ac <___vfiprintf_internal_r+0xd34>
 8014778:	18c00404 	addi	r3,r3,16
 801477c:	20800044 	addi	r2,r4,1
 8014780:	47000015 	stw	fp,0(r8)
 8014784:	44000115 	stw	r16,4(r8)
 8014788:	d8c11c15 	stw	r3,1136(sp)
 801478c:	d8811b15 	stw	r2,1132(sp)
 8014790:	98bff40e 	bge	r19,r2,8014764 <__alt_data_end+0xfc014764>
 8014794:	1800291e 	bne	r3,zero,801483c <___vfiprintf_internal_r+0xdc4>
 8014798:	94bffc04 	addi	r18,r18,-16
 801479c:	0009883a 	mov	r4,zero
 80147a0:	01400044 	movi	r5,1
 80147a4:	d811883a 	mov	r8,sp
 80147a8:	84bff316 	blt	r16,r18,8014778 <__alt_data_end+0xfc014778>
 80147ac:	d8812617 	ldw	r2,1176(sp)
 80147b0:	1c87883a 	add	r3,r3,r18
 80147b4:	44800115 	stw	r18,4(r8)
 80147b8:	40800015 	stw	r2,0(r8)
 80147bc:	d8c11c15 	stw	r3,1136(sp)
 80147c0:	d9411b15 	stw	r5,1132(sp)
 80147c4:	008001c4 	movi	r2,7
 80147c8:	11400d0e 	bge	r2,r5,8014800 <___vfiprintf_internal_r+0xd88>
 80147cc:	1800061e 	bne	r3,zero,80147e8 <___vfiprintf_internal_r+0xd70>
 80147d0:	d8c12417 	ldw	r3,1168(sp)
 80147d4:	a8c12e16 	blt	r21,r3,8014c90 <___vfiprintf_internal_r+0x1218>
 80147d8:	d9012517 	ldw	r4,1172(sp)
 80147dc:	2549883a 	add	r4,r4,r21
 80147e0:	d9012515 	stw	r4,1172(sp)
 80147e4:	00001206 	br	8014830 <___vfiprintf_internal_r+0xdb8>
 80147e8:	d9012117 	ldw	r4,1156(sp)
 80147ec:	d9412017 	ldw	r5,1152(sp)
 80147f0:	d9811a04 	addi	r6,sp,1128
 80147f4:	80139640 	call	8013964 <__sprint_r.part.0>
 80147f8:	103fbb1e 	bne	r2,zero,80146e8 <__alt_data_end+0xfc0146e8>
 80147fc:	d8c11c17 	ldw	r3,1136(sp)
 8014800:	d8812417 	ldw	r2,1168(sp)
 8014804:	a880010e 	bge	r21,r2,801480c <___vfiprintf_internal_r+0xd94>
 8014808:	102b883a 	mov	r21,r2
 801480c:	d9012517 	ldw	r4,1172(sp)
 8014810:	2549883a 	add	r4,r4,r21
 8014814:	d9012515 	stw	r4,1172(sp)
 8014818:	18000526 	beq	r3,zero,8014830 <___vfiprintf_internal_r+0xdb8>
 801481c:	d9012117 	ldw	r4,1156(sp)
 8014820:	d9412017 	ldw	r5,1152(sp)
 8014824:	d9811a04 	addi	r6,sp,1128
 8014828:	80139640 	call	8013964 <__sprint_r.part.0>
 801482c:	103fae1e 	bne	r2,zero,80146e8 <__alt_data_end+0xfc0146e8>
 8014830:	d8011b15 	stw	zero,1132(sp)
 8014834:	d811883a 	mov	r8,sp
 8014838:	003cc706 	br	8013b58 <__alt_data_end+0xfc013b58>
 801483c:	a009883a 	mov	r4,r20
 8014840:	b00b883a 	mov	r5,r22
 8014844:	d9811a04 	addi	r6,sp,1128
 8014848:	80139640 	call	8013964 <__sprint_r.part.0>
 801484c:	103fa61e 	bne	r2,zero,80146e8 <__alt_data_end+0xfc0146e8>
 8014850:	d9011b17 	ldw	r4,1132(sp)
 8014854:	d8c11c17 	ldw	r3,1136(sp)
 8014858:	d811883a 	mov	r8,sp
 801485c:	21400044 	addi	r5,r4,1
 8014860:	003fc306 	br	8014770 <__alt_data_end+0xfc014770>
 8014864:	d9012417 	ldw	r4,1168(sp)
 8014868:	256dc83a 	sub	r22,r4,r21
 801486c:	05be1f0e 	bge	zero,r22,80140ec <__alt_data_end+0xfc0140ec>
 8014870:	04c00404 	movi	r19,16
 8014874:	9d81720e 	bge	r19,r22,8014e40 <___vfiprintf_internal_r+0x13c8>
 8014878:	008200b4 	movhi	r2,2050
 801487c:	10b90604 	addi	r2,r2,-7144
 8014880:	d8812615 	stw	r2,1176(sp)
 8014884:	028001c4 	movi	r10,7
 8014888:	00000506 	br	80148a0 <___vfiprintf_internal_r+0xe28>
 801488c:	29000084 	addi	r4,r5,2
 8014890:	42000204 	addi	r8,r8,8
 8014894:	100b883a 	mov	r5,r2
 8014898:	b5bffc04 	addi	r22,r22,-16
 801489c:	9d800d0e 	bge	r19,r22,80148d4 <___vfiprintf_internal_r+0xe5c>
 80148a0:	18c00404 	addi	r3,r3,16
 80148a4:	28800044 	addi	r2,r5,1
 80148a8:	44400015 	stw	r17,0(r8)
 80148ac:	44c00115 	stw	r19,4(r8)
 80148b0:	d8c11c15 	stw	r3,1136(sp)
 80148b4:	d8811b15 	stw	r2,1132(sp)
 80148b8:	50bff40e 	bge	r10,r2,801488c <__alt_data_end+0xfc01488c>
 80148bc:	1800111e 	bne	r3,zero,8014904 <___vfiprintf_internal_r+0xe8c>
 80148c0:	b5bffc04 	addi	r22,r22,-16
 80148c4:	000b883a 	mov	r5,zero
 80148c8:	01000044 	movi	r4,1
 80148cc:	d811883a 	mov	r8,sp
 80148d0:	9dbff316 	blt	r19,r22,80148a0 <__alt_data_end+0xfc0148a0>
 80148d4:	d9412617 	ldw	r5,1176(sp)
 80148d8:	1d87883a 	add	r3,r3,r22
 80148dc:	45800115 	stw	r22,4(r8)
 80148e0:	41400015 	stw	r5,0(r8)
 80148e4:	d8c11c15 	stw	r3,1136(sp)
 80148e8:	d9011b15 	stw	r4,1132(sp)
 80148ec:	008001c4 	movi	r2,7
 80148f0:	11008516 	blt	r2,r4,8014b08 <___vfiprintf_internal_r+0x1090>
 80148f4:	42000204 	addi	r8,r8,8
 80148f8:	20800044 	addi	r2,r4,1
 80148fc:	200b883a 	mov	r5,r4
 8014900:	003dfa06 	br	80140ec <__alt_data_end+0xfc0140ec>
 8014904:	d9012117 	ldw	r4,1156(sp)
 8014908:	d9412017 	ldw	r5,1152(sp)
 801490c:	d9811a04 	addi	r6,sp,1128
 8014910:	da812a15 	stw	r10,1192(sp)
 8014914:	80139640 	call	8013964 <__sprint_r.part.0>
 8014918:	da812a17 	ldw	r10,1192(sp)
 801491c:	103f721e 	bne	r2,zero,80146e8 <__alt_data_end+0xfc0146e8>
 8014920:	d9411b17 	ldw	r5,1132(sp)
 8014924:	d8c11c17 	ldw	r3,1136(sp)
 8014928:	d811883a 	mov	r8,sp
 801492c:	29000044 	addi	r4,r5,1
 8014930:	003fd906 	br	8014898 <__alt_data_end+0xfc014898>
 8014934:	1800681e 	bne	r3,zero,8014ad8 <___vfiprintf_internal_r+0x1060>
 8014938:	50004d26 	beq	r10,zero,8014a70 <___vfiprintf_internal_r+0xff8>
 801493c:	d8811d04 	addi	r2,sp,1140
 8014940:	00c00084 	movi	r3,2
 8014944:	d8800015 	stw	r2,0(sp)
 8014948:	d8c00115 	stw	r3,4(sp)
 801494c:	2005883a 	mov	r2,r4
 8014950:	d811883a 	mov	r8,sp
 8014954:	003de006 	br	80140d8 <__alt_data_end+0xfc0140d8>
 8014958:	1800551e 	bne	r3,zero,8014ab0 <___vfiprintf_internal_r+0x1038>
 801495c:	000b883a 	mov	r5,zero
 8014960:	00800044 	movi	r2,1
 8014964:	d811883a 	mov	r8,sp
 8014968:	003dde06 	br	80140e4 <__alt_data_end+0xfc0140e4>
 801496c:	10803fcc 	andi	r2,r2,255
 8014970:	1000191e 	bne	r2,zero,80149d8 <___vfiprintf_internal_r+0xf60>
 8014974:	9080004c 	andi	r2,r18,1
 8014978:	10001726 	beq	r2,zero,80149d8 <___vfiprintf_internal_r+0xf60>
 801497c:	00800c04 	movi	r2,48
 8014980:	d8c109c4 	addi	r3,sp,1063
 8014984:	d88109c5 	stb	r2,1063(sp)
 8014988:	dd012817 	ldw	r20,1184(sp)
 801498c:	d8c12215 	stw	r3,1160(sp)
 8014990:	003d8a06 	br	8013fbc <__alt_data_end+0xfc013fbc>
 8014994:	d9012717 	ldw	r4,1180(sp)
 8014998:	dd010a04 	addi	r20,sp,1064
 801499c:	988003cc 	andi	r2,r19,15
 80149a0:	a806973a 	slli	r3,r21,28
 80149a4:	2085883a 	add	r2,r4,r2
 80149a8:	9826d13a 	srli	r19,r19,4
 80149ac:	10800003 	ldbu	r2,0(r2)
 80149b0:	a82ad13a 	srli	r21,r21,4
 80149b4:	a53fffc4 	addi	r20,r20,-1
 80149b8:	1ce6b03a 	or	r19,r3,r19
 80149bc:	a0800005 	stb	r2,0(r20)
 80149c0:	9d44b03a 	or	r2,r19,r21
 80149c4:	103ff51e 	bne	r2,zero,801499c <__alt_data_end+0xfc01499c>
 80149c8:	d9411e17 	ldw	r5,1144(sp)
 80149cc:	dd012215 	stw	r20,1160(sp)
 80149d0:	2d29c83a 	sub	r20,r5,r20
 80149d4:	003d7906 	br	8013fbc <__alt_data_end+0xfc013fbc>
 80149d8:	d8c10a04 	addi	r3,sp,1064
 80149dc:	d8c12215 	stw	r3,1160(sp)
 80149e0:	003d7606 	br	8013fbc <__alt_data_end+0xfc013fbc>
 80149e4:	18009e1e 	bne	r3,zero,8014c60 <___vfiprintf_internal_r+0x11e8>
 80149e8:	d8811d87 	ldb	r2,1142(sp)
 80149ec:	10005f26 	beq	r2,zero,8014b6c <___vfiprintf_internal_r+0x10f4>
 80149f0:	00c00044 	movi	r3,1
 80149f4:	d9011d84 	addi	r4,sp,1142
 80149f8:	1805883a 	mov	r2,r3
 80149fc:	d9000015 	stw	r4,0(sp)
 8014a00:	d8c00115 	stw	r3,4(sp)
 8014a04:	d811883a 	mov	r8,sp
 8014a08:	003efc06 	br	80145fc <__alt_data_end+0xfc0145fc>
 8014a0c:	d9412417 	ldw	r5,1168(sp)
 8014a10:	d811883a 	mov	r8,sp
 8014a14:	2d65c83a 	sub	r18,r5,r21
 8014a18:	04bf4816 	blt	zero,r18,801473c <__alt_data_end+0xfc01473c>
 8014a1c:	003f6c06 	br	80147d0 <__alt_data_end+0xfc0147d0>
 8014a20:	b829883a 	mov	r20,r23
 8014a24:	003c6906 	br	8013bcc <__alt_data_end+0xfc013bcc>
 8014a28:	d9012117 	ldw	r4,1156(sp)
 8014a2c:	d9412017 	ldw	r5,1152(sp)
 8014a30:	d9811a04 	addi	r6,sp,1128
 8014a34:	80139640 	call	8013964 <__sprint_r.part.0>
 8014a38:	103f2b1e 	bne	r2,zero,80146e8 <__alt_data_end+0xfc0146e8>
 8014a3c:	d8c11c17 	ldw	r3,1136(sp)
 8014a40:	d811883a 	mov	r8,sp
 8014a44:	003f3806 	br	8014728 <__alt_data_end+0xfc014728>
 8014a48:	00800084 	movi	r2,2
 8014a4c:	9d46b03a 	or	r3,r19,r21
 8014a50:	003df606 	br	801422c <__alt_data_end+0xfc01422c>
 8014a54:	d9012117 	ldw	r4,1156(sp)
 8014a58:	d9412017 	ldw	r5,1152(sp)
 8014a5c:	d9811a04 	addi	r6,sp,1128
 8014a60:	80139640 	call	8013964 <__sprint_r.part.0>
 8014a64:	103f201e 	bne	r2,zero,80146e8 <__alt_data_end+0xfc0146e8>
 8014a68:	d811883a 	mov	r8,sp
 8014a6c:	003cc606 	br	8013d88 <__alt_data_end+0xfc013d88>
 8014a70:	000b883a 	mov	r5,zero
 8014a74:	2005883a 	mov	r2,r4
 8014a78:	d811883a 	mov	r8,sp
 8014a7c:	003d9906 	br	80140e4 <__alt_data_end+0xfc0140e4>
 8014a80:	10803fcc 	andi	r2,r2,255
 8014a84:	1080201c 	xori	r2,r2,128
 8014a88:	10bfe004 	addi	r2,r2,-128
 8014a8c:	01000c04 	movi	r4,48
 8014a90:	1100b226 	beq	r2,r4,8014d5c <___vfiprintf_internal_r+0x12e4>
 8014a94:	d9412217 	ldw	r5,1160(sp)
 8014a98:	d8811e17 	ldw	r2,1144(sp)
 8014a9c:	193fffc5 	stb	r4,-1(r3)
 8014aa0:	297fffc4 	addi	r5,r5,-1
 8014aa4:	d9412215 	stw	r5,1160(sp)
 8014aa8:	1169c83a 	sub	r20,r2,r5
 8014aac:	003d4306 	br	8013fbc <__alt_data_end+0xfc013fbc>
 8014ab0:	d9012117 	ldw	r4,1156(sp)
 8014ab4:	d9412017 	ldw	r5,1152(sp)
 8014ab8:	d9811a04 	addi	r6,sp,1128
 8014abc:	80139640 	call	8013964 <__sprint_r.part.0>
 8014ac0:	103f091e 	bne	r2,zero,80146e8 <__alt_data_end+0xfc0146e8>
 8014ac4:	d9411b17 	ldw	r5,1132(sp)
 8014ac8:	d8c11c17 	ldw	r3,1136(sp)
 8014acc:	d811883a 	mov	r8,sp
 8014ad0:	28800044 	addi	r2,r5,1
 8014ad4:	003d8306 	br	80140e4 <__alt_data_end+0xfc0140e4>
 8014ad8:	d9012117 	ldw	r4,1156(sp)
 8014adc:	d9412017 	ldw	r5,1152(sp)
 8014ae0:	d9811a04 	addi	r6,sp,1128
 8014ae4:	da812a15 	stw	r10,1192(sp)
 8014ae8:	80139640 	call	8013964 <__sprint_r.part.0>
 8014aec:	da812a17 	ldw	r10,1192(sp)
 8014af0:	103efd1e 	bne	r2,zero,80146e8 <__alt_data_end+0xfc0146e8>
 8014af4:	d9411b17 	ldw	r5,1132(sp)
 8014af8:	d8c11c17 	ldw	r3,1136(sp)
 8014afc:	d811883a 	mov	r8,sp
 8014b00:	28800044 	addi	r2,r5,1
 8014b04:	003d6a06 	br	80140b0 <__alt_data_end+0xfc0140b0>
 8014b08:	1800a01e 	bne	r3,zero,8014d8c <___vfiprintf_internal_r+0x1314>
 8014b0c:	000b883a 	mov	r5,zero
 8014b10:	00800044 	movi	r2,1
 8014b14:	d811883a 	mov	r8,sp
 8014b18:	003d7406 	br	80140ec <__alt_data_end+0xfc0140ec>
 8014b1c:	d9012117 	ldw	r4,1156(sp)
 8014b20:	d9412017 	ldw	r5,1152(sp)
 8014b24:	d9811a04 	addi	r6,sp,1128
 8014b28:	80139640 	call	8013964 <__sprint_r.part.0>
 8014b2c:	103eee1e 	bne	r2,zero,80146e8 <__alt_data_end+0xfc0146e8>
 8014b30:	d8811b17 	ldw	r2,1132(sp)
 8014b34:	d8c11c17 	ldw	r3,1136(sp)
 8014b38:	d811883a 	mov	r8,sp
 8014b3c:	10800044 	addi	r2,r2,1
 8014b40:	003d8f06 	br	8014180 <__alt_data_end+0xfc014180>
 8014b44:	04e7c83a 	sub	r19,zero,r19
 8014b48:	9804c03a 	cmpne	r2,r19,zero
 8014b4c:	056bc83a 	sub	r21,zero,r21
 8014b50:	a8abc83a 	sub	r21,r21,r2
 8014b54:	05800b44 	movi	r22,45
 8014b58:	dd811d85 	stb	r22,1142(sp)
 8014b5c:	8029883a 	mov	r20,r16
 8014b60:	00800044 	movi	r2,1
 8014b64:	9d46b03a 	or	r3,r19,r21
 8014b68:	003cfa06 	br	8013f54 <__alt_data_end+0xfc013f54>
 8014b6c:	000b883a 	mov	r5,zero
 8014b70:	00800044 	movi	r2,1
 8014b74:	d811883a 	mov	r8,sp
 8014b78:	503d5a26 	beq	r10,zero,80140e4 <__alt_data_end+0xfc0140e4>
 8014b7c:	00c00084 	movi	r3,2
 8014b80:	d9011d04 	addi	r4,sp,1140
 8014b84:	d9000015 	stw	r4,0(sp)
 8014b88:	d8c00115 	stw	r3,4(sp)
 8014b8c:	003d5206 	br	80140d8 <__alt_data_end+0xfc0140d8>
 8014b90:	9080040c 	andi	r2,r18,16
 8014b94:	1000421e 	bne	r2,zero,8014ca0 <___vfiprintf_internal_r+0x1228>
 8014b98:	9480100c 	andi	r18,r18,64
 8014b9c:	90009c26 	beq	r18,zero,8014e10 <___vfiprintf_internal_r+0x1398>
 8014ba0:	d9412317 	ldw	r5,1164(sp)
 8014ba4:	d8c12517 	ldw	r3,1172(sp)
 8014ba8:	28800017 	ldw	r2,0(r5)
 8014bac:	29400104 	addi	r5,r5,4
 8014bb0:	d9412315 	stw	r5,1164(sp)
 8014bb4:	10c0000d 	sth	r3,0(r2)
 8014bb8:	003be706 	br	8013b58 <__alt_data_end+0xfc013b58>
 8014bbc:	90c0100c 	andi	r3,r18,64
 8014bc0:	18003e26 	beq	r3,zero,8014cbc <___vfiprintf_internal_r+0x1244>
 8014bc4:	d8c12317 	ldw	r3,1164(sp)
 8014bc8:	14c0000b 	ldhu	r19,0(r2)
 8014bcc:	002b883a 	mov	r21,zero
 8014bd0:	18c00104 	addi	r3,r3,4
 8014bd4:	d8c12315 	stw	r3,1164(sp)
 8014bd8:	003db706 	br	80142b8 <__alt_data_end+0xfc0142b8>
 8014bdc:	9080100c 	andi	r2,r18,64
 8014be0:	10004c26 	beq	r2,zero,8014d14 <___vfiprintf_internal_r+0x129c>
 8014be4:	1cc0000f 	ldh	r19,0(r3)
 8014be8:	d8812317 	ldw	r2,1164(sp)
 8014bec:	982bd7fa 	srai	r21,r19,31
 8014bf0:	10800104 	addi	r2,r2,4
 8014bf4:	d8812315 	stw	r2,1164(sp)
 8014bf8:	a805883a 	mov	r2,r21
 8014bfc:	003cd006 	br	8013f40 <__alt_data_end+0xfc013f40>
 8014c00:	00800084 	movi	r2,2
 8014c04:	003d8906 	br	801422c <__alt_data_end+0xfc01422c>
 8014c08:	b9800007 	ldb	r6,0(r23)
 8014c0c:	003bfb06 	br	8013bfc <__alt_data_end+0xfc013bfc>
 8014c10:	9080100c 	andi	r2,r18,64
 8014c14:	10003726 	beq	r2,zero,8014cf4 <___vfiprintf_internal_r+0x127c>
 8014c18:	d9412317 	ldw	r5,1164(sp)
 8014c1c:	002b883a 	mov	r21,zero
 8014c20:	0005883a 	mov	r2,zero
 8014c24:	2cc0000b 	ldhu	r19,0(r5)
 8014c28:	29400104 	addi	r5,r5,4
 8014c2c:	d9412315 	stw	r5,1164(sp)
 8014c30:	9807883a 	mov	r3,r19
 8014c34:	003d7d06 	br	801422c <__alt_data_end+0xfc01422c>
 8014c38:	9080100c 	andi	r2,r18,64
 8014c3c:	10002526 	beq	r2,zero,8014cd4 <___vfiprintf_internal_r+0x125c>
 8014c40:	d8812317 	ldw	r2,1164(sp)
 8014c44:	002b883a 	mov	r21,zero
 8014c48:	14c0000b 	ldhu	r19,0(r2)
 8014c4c:	10800104 	addi	r2,r2,4
 8014c50:	d8812315 	stw	r2,1164(sp)
 8014c54:	9807883a 	mov	r3,r19
 8014c58:	00800044 	movi	r2,1
 8014c5c:	003d7306 	br	801422c <__alt_data_end+0xfc01422c>
 8014c60:	d9012117 	ldw	r4,1156(sp)
 8014c64:	d9412017 	ldw	r5,1152(sp)
 8014c68:	d9811a04 	addi	r6,sp,1128
 8014c6c:	da812a15 	stw	r10,1192(sp)
 8014c70:	80139640 	call	8013964 <__sprint_r.part.0>
 8014c74:	da812a17 	ldw	r10,1192(sp)
 8014c78:	103e9b1e 	bne	r2,zero,80146e8 <__alt_data_end+0xfc0146e8>
 8014c7c:	d9411b17 	ldw	r5,1132(sp)
 8014c80:	d8c11c17 	ldw	r3,1136(sp)
 8014c84:	d811883a 	mov	r8,sp
 8014c88:	28800044 	addi	r2,r5,1
 8014c8c:	003e5006 	br	80145d0 <__alt_data_end+0xfc0145d0>
 8014c90:	182b883a 	mov	r21,r3
 8014c94:	003ed006 	br	80147d8 <__alt_data_end+0xfc0147d8>
 8014c98:	8029883a 	mov	r20,r16
 8014c9c:	003dc606 	br	80143b8 <__alt_data_end+0xfc0143b8>
 8014ca0:	d8c12317 	ldw	r3,1164(sp)
 8014ca4:	d9012517 	ldw	r4,1172(sp)
 8014ca8:	18800017 	ldw	r2,0(r3)
 8014cac:	18c00104 	addi	r3,r3,4
 8014cb0:	d8c12315 	stw	r3,1164(sp)
 8014cb4:	11000015 	stw	r4,0(r2)
 8014cb8:	003ba706 	br	8013b58 <__alt_data_end+0xfc013b58>
 8014cbc:	d9012317 	ldw	r4,1164(sp)
 8014cc0:	14c00017 	ldw	r19,0(r2)
 8014cc4:	002b883a 	mov	r21,zero
 8014cc8:	21000104 	addi	r4,r4,4
 8014ccc:	d9012315 	stw	r4,1164(sp)
 8014cd0:	003d7906 	br	80142b8 <__alt_data_end+0xfc0142b8>
 8014cd4:	d8c12317 	ldw	r3,1164(sp)
 8014cd8:	002b883a 	mov	r21,zero
 8014cdc:	00800044 	movi	r2,1
 8014ce0:	1cc00017 	ldw	r19,0(r3)
 8014ce4:	18c00104 	addi	r3,r3,4
 8014ce8:	d8c12315 	stw	r3,1164(sp)
 8014cec:	9807883a 	mov	r3,r19
 8014cf0:	003d4e06 	br	801422c <__alt_data_end+0xfc01422c>
 8014cf4:	d8812317 	ldw	r2,1164(sp)
 8014cf8:	002b883a 	mov	r21,zero
 8014cfc:	14c00017 	ldw	r19,0(r2)
 8014d00:	10800104 	addi	r2,r2,4
 8014d04:	d8812315 	stw	r2,1164(sp)
 8014d08:	9807883a 	mov	r3,r19
 8014d0c:	0005883a 	mov	r2,zero
 8014d10:	003d4606 	br	801422c <__alt_data_end+0xfc01422c>
 8014d14:	1cc00017 	ldw	r19,0(r3)
 8014d18:	d8c12317 	ldw	r3,1164(sp)
 8014d1c:	982bd7fa 	srai	r21,r19,31
 8014d20:	18c00104 	addi	r3,r3,4
 8014d24:	d8c12315 	stw	r3,1164(sp)
 8014d28:	a805883a 	mov	r2,r21
 8014d2c:	003c8406 	br	8013f40 <__alt_data_end+0xfc013f40>
 8014d30:	010200b4 	movhi	r4,2050
 8014d34:	21390604 	addi	r4,r4,-7144
 8014d38:	d9012615 	stw	r4,1176(sp)
 8014d3c:	003d0606 	br	8014158 <__alt_data_end+0xfc014158>
 8014d40:	b9800043 	ldbu	r6,1(r23)
 8014d44:	94800814 	ori	r18,r18,32
 8014d48:	bdc00044 	addi	r23,r23,1
 8014d4c:	31803fcc 	andi	r6,r6,255
 8014d50:	3180201c 	xori	r6,r6,128
 8014d54:	31bfe004 	addi	r6,r6,-128
 8014d58:	003ba806 	br	8013bfc <__alt_data_end+0xfc013bfc>
 8014d5c:	d8811e17 	ldw	r2,1144(sp)
 8014d60:	d8c12217 	ldw	r3,1160(sp)
 8014d64:	10e9c83a 	sub	r20,r2,r3
 8014d68:	003c9406 	br	8013fbc <__alt_data_end+0xfc013fbc>
 8014d6c:	da012a15 	stw	r8,1192(sp)
 8014d70:	80049680 	call	8004968 <strlen>
 8014d74:	1029883a 	mov	r20,r2
 8014d78:	dd811d83 	ldbu	r22,1142(sp)
 8014d7c:	dcc12315 	stw	r19,1164(sp)
 8014d80:	0021883a 	mov	r16,zero
 8014d84:	da012a17 	ldw	r8,1192(sp)
 8014d88:	003c8c06 	br	8013fbc <__alt_data_end+0xfc013fbc>
 8014d8c:	d9012117 	ldw	r4,1156(sp)
 8014d90:	d9412017 	ldw	r5,1152(sp)
 8014d94:	d9811a04 	addi	r6,sp,1128
 8014d98:	80139640 	call	8013964 <__sprint_r.part.0>
 8014d9c:	103e521e 	bne	r2,zero,80146e8 <__alt_data_end+0xfc0146e8>
 8014da0:	d9411b17 	ldw	r5,1132(sp)
 8014da4:	d8c11c17 	ldw	r3,1136(sp)
 8014da8:	d811883a 	mov	r8,sp
 8014dac:	28800044 	addi	r2,r5,1
 8014db0:	003cce06 	br	80140ec <__alt_data_end+0xfc0140ec>
 8014db4:	014200b4 	movhi	r5,2050
 8014db8:	29790a04 	addi	r5,r5,-7128
 8014dbc:	d9412615 	stw	r5,1176(sp)
 8014dc0:	d9411b17 	ldw	r5,1132(sp)
 8014dc4:	29400044 	addi	r5,r5,1
 8014dc8:	003cad06 	br	8014080 <__alt_data_end+0xfc014080>
 8014dcc:	00800184 	movi	r2,6
 8014dd0:	1400012e 	bgeu	r2,r16,8014dd8 <___vfiprintf_internal_r+0x1360>
 8014dd4:	1021883a 	mov	r16,r2
 8014dd8:	8029883a 	mov	r20,r16
 8014ddc:	802b883a 	mov	r21,r16
 8014de0:	80001c16 	blt	r16,zero,8014e54 <___vfiprintf_internal_r+0x13dc>
 8014de4:	00c200b4 	movhi	r3,2050
 8014de8:	18f7e204 	addi	r3,r3,-8312
 8014dec:	dcc12315 	stw	r19,1164(sp)
 8014df0:	d8c12215 	stw	r3,1160(sp)
 8014df4:	003cff06 	br	80141f4 <__alt_data_end+0xfc0141f4>
 8014df8:	d9411b17 	ldw	r5,1132(sp)
 8014dfc:	008200b4 	movhi	r2,2050
 8014e00:	10b90a04 	addi	r2,r2,-7128
 8014e04:	d8812615 	stw	r2,1176(sp)
 8014e08:	29400044 	addi	r5,r5,1
 8014e0c:	003e6706 	br	80147ac <__alt_data_end+0xfc0147ac>
 8014e10:	d9012317 	ldw	r4,1164(sp)
 8014e14:	d9412517 	ldw	r5,1172(sp)
 8014e18:	20800017 	ldw	r2,0(r4)
 8014e1c:	21000104 	addi	r4,r4,4
 8014e20:	d9012315 	stw	r4,1164(sp)
 8014e24:	11400015 	stw	r5,0(r2)
 8014e28:	003b4b06 	br	8013b58 <__alt_data_end+0xfc013b58>
 8014e2c:	8029883a 	mov	r20,r16
 8014e30:	dd811d83 	ldbu	r22,1142(sp)
 8014e34:	dcc12315 	stw	r19,1164(sp)
 8014e38:	0021883a 	mov	r16,zero
 8014e3c:	003c5f06 	br	8013fbc <__alt_data_end+0xfc013fbc>
 8014e40:	010200b4 	movhi	r4,2050
 8014e44:	21390604 	addi	r4,r4,-7144
 8014e48:	d9012615 	stw	r4,1176(sp)
 8014e4c:	1009883a 	mov	r4,r2
 8014e50:	003ea006 	br	80148d4 <__alt_data_end+0xfc0148d4>
 8014e54:	002b883a 	mov	r21,zero
 8014e58:	003fe206 	br	8014de4 <__alt_data_end+0xfc014de4>
 8014e5c:	d9412317 	ldw	r5,1164(sp)
 8014e60:	b807883a 	mov	r3,r23
 8014e64:	102f883a 	mov	r23,r2
 8014e68:	2c000017 	ldw	r16,0(r5)
 8014e6c:	29000104 	addi	r4,r5,4
 8014e70:	d9012315 	stw	r4,1164(sp)
 8014e74:	80000416 	blt	r16,zero,8014e88 <___vfiprintf_internal_r+0x1410>
 8014e78:	19800047 	ldb	r6,1(r3)
 8014e7c:	003b5f06 	br	8013bfc <__alt_data_end+0xfc013bfc>
 8014e80:	043fffc4 	movi	r16,-1
 8014e84:	003bef06 	br	8013e44 <__alt_data_end+0xfc013e44>
 8014e88:	043fffc4 	movi	r16,-1
 8014e8c:	19800047 	ldb	r6,1(r3)
 8014e90:	003b5a06 	br	8013bfc <__alt_data_end+0xfc013bfc>
 8014e94:	282b883a 	mov	r21,r5
 8014e98:	003cc706 	br	80141b8 <__alt_data_end+0xfc0141b8>

08014e9c <__vfiprintf_internal>:
 8014e9c:	2007883a 	mov	r3,r4
 8014ea0:	010200b4 	movhi	r4,2050
 8014ea4:	21009004 	addi	r4,r4,576
 8014ea8:	21000017 	ldw	r4,0(r4)
 8014eac:	2805883a 	mov	r2,r5
 8014eb0:	300f883a 	mov	r7,r6
 8014eb4:	180b883a 	mov	r5,r3
 8014eb8:	100d883a 	mov	r6,r2
 8014ebc:	8013a781 	jmpi	8013a78 <___vfiprintf_internal_r>

08014ec0 <__swbuf_r>:
 8014ec0:	defffc04 	addi	sp,sp,-16
 8014ec4:	dc800215 	stw	r18,8(sp)
 8014ec8:	dc400115 	stw	r17,4(sp)
 8014ecc:	dc000015 	stw	r16,0(sp)
 8014ed0:	dfc00315 	stw	ra,12(sp)
 8014ed4:	2025883a 	mov	r18,r4
 8014ed8:	2823883a 	mov	r17,r5
 8014edc:	3021883a 	mov	r16,r6
 8014ee0:	20000226 	beq	r4,zero,8014eec <__swbuf_r+0x2c>
 8014ee4:	20800e17 	ldw	r2,56(r4)
 8014ee8:	10004126 	beq	r2,zero,8014ff0 <__swbuf_r+0x130>
 8014eec:	80c00617 	ldw	r3,24(r16)
 8014ef0:	8180030b 	ldhu	r6,12(r16)
 8014ef4:	80c00215 	stw	r3,8(r16)
 8014ef8:	30c0020c 	andi	r3,r6,8
 8014efc:	18003526 	beq	r3,zero,8014fd4 <__swbuf_r+0x114>
 8014f00:	80c00417 	ldw	r3,16(r16)
 8014f04:	18003326 	beq	r3,zero,8014fd4 <__swbuf_r+0x114>
 8014f08:	3088000c 	andi	r2,r6,8192
 8014f0c:	8c403fcc 	andi	r17,r17,255
 8014f10:	10001726 	beq	r2,zero,8014f70 <__swbuf_r+0xb0>
 8014f14:	80800017 	ldw	r2,0(r16)
 8014f18:	81000517 	ldw	r4,20(r16)
 8014f1c:	10c7c83a 	sub	r3,r2,r3
 8014f20:	19001d0e 	bge	r3,r4,8014f98 <__swbuf_r+0xd8>
 8014f24:	18c00044 	addi	r3,r3,1
 8014f28:	81400217 	ldw	r5,8(r16)
 8014f2c:	11000044 	addi	r4,r2,1
 8014f30:	81000015 	stw	r4,0(r16)
 8014f34:	297fffc4 	addi	r5,r5,-1
 8014f38:	81400215 	stw	r5,8(r16)
 8014f3c:	14400005 	stb	r17,0(r2)
 8014f40:	80800517 	ldw	r2,20(r16)
 8014f44:	10c01d26 	beq	r2,r3,8014fbc <__swbuf_r+0xfc>
 8014f48:	8080030b 	ldhu	r2,12(r16)
 8014f4c:	1080004c 	andi	r2,r2,1
 8014f50:	1000181e 	bne	r2,zero,8014fb4 <__swbuf_r+0xf4>
 8014f54:	8805883a 	mov	r2,r17
 8014f58:	dfc00317 	ldw	ra,12(sp)
 8014f5c:	dc800217 	ldw	r18,8(sp)
 8014f60:	dc400117 	ldw	r17,4(sp)
 8014f64:	dc000017 	ldw	r16,0(sp)
 8014f68:	dec00404 	addi	sp,sp,16
 8014f6c:	f800283a 	ret
 8014f70:	81001917 	ldw	r4,100(r16)
 8014f74:	00b7ffc4 	movi	r2,-8193
 8014f78:	31880014 	ori	r6,r6,8192
 8014f7c:	2084703a 	and	r2,r4,r2
 8014f80:	80801915 	stw	r2,100(r16)
 8014f84:	80800017 	ldw	r2,0(r16)
 8014f88:	81000517 	ldw	r4,20(r16)
 8014f8c:	8180030d 	sth	r6,12(r16)
 8014f90:	10c7c83a 	sub	r3,r2,r3
 8014f94:	193fe316 	blt	r3,r4,8014f24 <__alt_data_end+0xfc014f24>
 8014f98:	9009883a 	mov	r4,r18
 8014f9c:	800b883a 	mov	r5,r16
 8014fa0:	800c7b80 	call	800c7b8 <_fflush_r>
 8014fa4:	1000091e 	bne	r2,zero,8014fcc <__swbuf_r+0x10c>
 8014fa8:	80800017 	ldw	r2,0(r16)
 8014fac:	00c00044 	movi	r3,1
 8014fb0:	003fdd06 	br	8014f28 <__alt_data_end+0xfc014f28>
 8014fb4:	00800284 	movi	r2,10
 8014fb8:	88bfe61e 	bne	r17,r2,8014f54 <__alt_data_end+0xfc014f54>
 8014fbc:	9009883a 	mov	r4,r18
 8014fc0:	800b883a 	mov	r5,r16
 8014fc4:	800c7b80 	call	800c7b8 <_fflush_r>
 8014fc8:	103fe226 	beq	r2,zero,8014f54 <__alt_data_end+0xfc014f54>
 8014fcc:	00bfffc4 	movi	r2,-1
 8014fd0:	003fe106 	br	8014f58 <__alt_data_end+0xfc014f58>
 8014fd4:	9009883a 	mov	r4,r18
 8014fd8:	800b883a 	mov	r5,r16
 8014fdc:	800aba40 	call	800aba4 <__swsetup_r>
 8014fe0:	1000051e 	bne	r2,zero,8014ff8 <__swbuf_r+0x138>
 8014fe4:	8180030b 	ldhu	r6,12(r16)
 8014fe8:	80c00417 	ldw	r3,16(r16)
 8014fec:	003fc606 	br	8014f08 <__alt_data_end+0xfc014f08>
 8014ff0:	800cd740 	call	800cd74 <__sinit>
 8014ff4:	003fbd06 	br	8014eec <__alt_data_end+0xfc014eec>
 8014ff8:	80c0030b 	ldhu	r3,12(r16)
 8014ffc:	00bfffc4 	movi	r2,-1
 8015000:	18c01014 	ori	r3,r3,64
 8015004:	80c0030d 	sth	r3,12(r16)
 8015008:	00c00244 	movi	r3,9
 801500c:	90c00015 	stw	r3,0(r18)
 8015010:	003fd106 	br	8014f58 <__alt_data_end+0xfc014f58>

08015014 <__swbuf>:
 8015014:	00c200b4 	movhi	r3,2050
 8015018:	18c09004 	addi	r3,r3,576
 801501c:	2005883a 	mov	r2,r4
 8015020:	19000017 	ldw	r4,0(r3)
 8015024:	280d883a 	mov	r6,r5
 8015028:	100b883a 	mov	r5,r2
 801502c:	8014ec01 	jmpi	8014ec0 <__swbuf_r>

08015030 <_write_r>:
 8015030:	defffd04 	addi	sp,sp,-12
 8015034:	dc000015 	stw	r16,0(sp)
 8015038:	040200b4 	movhi	r16,2050
 801503c:	dc400115 	stw	r17,4(sp)
 8015040:	8407e304 	addi	r16,r16,8076
 8015044:	2023883a 	mov	r17,r4
 8015048:	2809883a 	mov	r4,r5
 801504c:	300b883a 	mov	r5,r6
 8015050:	380d883a 	mov	r6,r7
 8015054:	dfc00215 	stw	ra,8(sp)
 8015058:	80000015 	stw	zero,0(r16)
 801505c:	801ae240 	call	801ae24 <write>
 8015060:	00ffffc4 	movi	r3,-1
 8015064:	10c00526 	beq	r2,r3,801507c <_write_r+0x4c>
 8015068:	dfc00217 	ldw	ra,8(sp)
 801506c:	dc400117 	ldw	r17,4(sp)
 8015070:	dc000017 	ldw	r16,0(sp)
 8015074:	dec00304 	addi	sp,sp,12
 8015078:	f800283a 	ret
 801507c:	80c00017 	ldw	r3,0(r16)
 8015080:	183ff926 	beq	r3,zero,8015068 <__alt_data_end+0xfc015068>
 8015084:	88c00015 	stw	r3,0(r17)
 8015088:	003ff706 	br	8015068 <__alt_data_end+0xfc015068>

0801508c <_close_r>:
 801508c:	defffd04 	addi	sp,sp,-12
 8015090:	dc000015 	stw	r16,0(sp)
 8015094:	040200b4 	movhi	r16,2050
 8015098:	dc400115 	stw	r17,4(sp)
 801509c:	8407e304 	addi	r16,r16,8076
 80150a0:	2023883a 	mov	r17,r4
 80150a4:	2809883a 	mov	r4,r5
 80150a8:	dfc00215 	stw	ra,8(sp)
 80150ac:	80000015 	stw	zero,0(r16)
 80150b0:	801a00c0 	call	801a00c <close>
 80150b4:	00ffffc4 	movi	r3,-1
 80150b8:	10c00526 	beq	r2,r3,80150d0 <_close_r+0x44>
 80150bc:	dfc00217 	ldw	ra,8(sp)
 80150c0:	dc400117 	ldw	r17,4(sp)
 80150c4:	dc000017 	ldw	r16,0(sp)
 80150c8:	dec00304 	addi	sp,sp,12
 80150cc:	f800283a 	ret
 80150d0:	80c00017 	ldw	r3,0(r16)
 80150d4:	183ff926 	beq	r3,zero,80150bc <__alt_data_end+0xfc0150bc>
 80150d8:	88c00015 	stw	r3,0(r17)
 80150dc:	003ff706 	br	80150bc <__alt_data_end+0xfc0150bc>

080150e0 <_calloc_r>:
 80150e0:	defffe04 	addi	sp,sp,-8
 80150e4:	dc000015 	stw	r16,0(sp)
 80150e8:	2021883a 	mov	r16,r4
 80150ec:	2809883a 	mov	r4,r5
 80150f0:	300b883a 	mov	r5,r6
 80150f4:	dfc00115 	stw	ra,4(sp)
 80150f8:	800334c0 	call	800334c <__mulsi3>
 80150fc:	8009883a 	mov	r4,r16
 8015100:	100b883a 	mov	r5,r2
 8015104:	800390c0 	call	800390c <_malloc_r>
 8015108:	1021883a 	mov	r16,r2
 801510c:	10002826 	beq	r2,zero,80151b0 <_calloc_r+0xd0>
 8015110:	11bfff17 	ldw	r6,-4(r2)
 8015114:	00bfff04 	movi	r2,-4
 8015118:	00c00904 	movi	r3,36
 801511c:	308c703a 	and	r6,r6,r2
 8015120:	308d883a 	add	r6,r6,r2
 8015124:	19801436 	bltu	r3,r6,8015178 <_calloc_r+0x98>
 8015128:	008004c4 	movi	r2,19
 801512c:	11800936 	bltu	r2,r6,8015154 <_calloc_r+0x74>
 8015130:	8005883a 	mov	r2,r16
 8015134:	10000015 	stw	zero,0(r2)
 8015138:	10000115 	stw	zero,4(r2)
 801513c:	10000215 	stw	zero,8(r2)
 8015140:	8005883a 	mov	r2,r16
 8015144:	dfc00117 	ldw	ra,4(sp)
 8015148:	dc000017 	ldw	r16,0(sp)
 801514c:	dec00204 	addi	sp,sp,8
 8015150:	f800283a 	ret
 8015154:	80000015 	stw	zero,0(r16)
 8015158:	80000115 	stw	zero,4(r16)
 801515c:	008006c4 	movi	r2,27
 8015160:	11800d2e 	bgeu	r2,r6,8015198 <_calloc_r+0xb8>
 8015164:	80000215 	stw	zero,8(r16)
 8015168:	80000315 	stw	zero,12(r16)
 801516c:	30c00c26 	beq	r6,r3,80151a0 <_calloc_r+0xc0>
 8015170:	80800404 	addi	r2,r16,16
 8015174:	003fef06 	br	8015134 <__alt_data_end+0xfc015134>
 8015178:	8009883a 	mov	r4,r16
 801517c:	000b883a 	mov	r5,zero
 8015180:	80040b40 	call	80040b4 <memset>
 8015184:	8005883a 	mov	r2,r16
 8015188:	dfc00117 	ldw	ra,4(sp)
 801518c:	dc000017 	ldw	r16,0(sp)
 8015190:	dec00204 	addi	sp,sp,8
 8015194:	f800283a 	ret
 8015198:	80800204 	addi	r2,r16,8
 801519c:	003fe506 	br	8015134 <__alt_data_end+0xfc015134>
 80151a0:	80000415 	stw	zero,16(r16)
 80151a4:	80800604 	addi	r2,r16,24
 80151a8:	80000515 	stw	zero,20(r16)
 80151ac:	003fe106 	br	8015134 <__alt_data_end+0xfc015134>
 80151b0:	0005883a 	mov	r2,zero
 80151b4:	003fe306 	br	8015144 <__alt_data_end+0xfc015144>

080151b8 <_fclose_r>:
 80151b8:	28003226 	beq	r5,zero,8015284 <_fclose_r+0xcc>
 80151bc:	defffc04 	addi	sp,sp,-16
 80151c0:	dc400115 	stw	r17,4(sp)
 80151c4:	2023883a 	mov	r17,r4
 80151c8:	dc000015 	stw	r16,0(sp)
 80151cc:	dfc00315 	stw	ra,12(sp)
 80151d0:	dc800215 	stw	r18,8(sp)
 80151d4:	2821883a 	mov	r16,r5
 80151d8:	800cd840 	call	800cd84 <__sfp_lock_acquire>
 80151dc:	88000226 	beq	r17,zero,80151e8 <_fclose_r+0x30>
 80151e0:	88800e17 	ldw	r2,56(r17)
 80151e4:	10002926 	beq	r2,zero,801528c <_fclose_r+0xd4>
 80151e8:	8080030f 	ldh	r2,12(r16)
 80151ec:	10002226 	beq	r2,zero,8015278 <_fclose_r+0xc0>
 80151f0:	8809883a 	mov	r4,r17
 80151f4:	800b883a 	mov	r5,r16
 80151f8:	800c7b80 	call	800c7b8 <_fflush_r>
 80151fc:	1025883a 	mov	r18,r2
 8015200:	80800b17 	ldw	r2,44(r16)
 8015204:	10000426 	beq	r2,zero,8015218 <_fclose_r+0x60>
 8015208:	81400717 	ldw	r5,28(r16)
 801520c:	8809883a 	mov	r4,r17
 8015210:	103ee83a 	callr	r2
 8015214:	10002616 	blt	r2,zero,80152b0 <_fclose_r+0xf8>
 8015218:	8080030b 	ldhu	r2,12(r16)
 801521c:	1080200c 	andi	r2,r2,128
 8015220:	10001f1e 	bne	r2,zero,80152a0 <_fclose_r+0xe8>
 8015224:	81400c17 	ldw	r5,48(r16)
 8015228:	28000526 	beq	r5,zero,8015240 <_fclose_r+0x88>
 801522c:	80801004 	addi	r2,r16,64
 8015230:	28800226 	beq	r5,r2,801523c <_fclose_r+0x84>
 8015234:	8809883a 	mov	r4,r17
 8015238:	800d1780 	call	800d178 <_free_r>
 801523c:	80000c15 	stw	zero,48(r16)
 8015240:	81401117 	ldw	r5,68(r16)
 8015244:	28000326 	beq	r5,zero,8015254 <_fclose_r+0x9c>
 8015248:	8809883a 	mov	r4,r17
 801524c:	800d1780 	call	800d178 <_free_r>
 8015250:	80001115 	stw	zero,68(r16)
 8015254:	8000030d 	sth	zero,12(r16)
 8015258:	800cd880 	call	800cd88 <__sfp_lock_release>
 801525c:	9005883a 	mov	r2,r18
 8015260:	dfc00317 	ldw	ra,12(sp)
 8015264:	dc800217 	ldw	r18,8(sp)
 8015268:	dc400117 	ldw	r17,4(sp)
 801526c:	dc000017 	ldw	r16,0(sp)
 8015270:	dec00404 	addi	sp,sp,16
 8015274:	f800283a 	ret
 8015278:	800cd880 	call	800cd88 <__sfp_lock_release>
 801527c:	0005883a 	mov	r2,zero
 8015280:	003ff706 	br	8015260 <__alt_data_end+0xfc015260>
 8015284:	0005883a 	mov	r2,zero
 8015288:	f800283a 	ret
 801528c:	8809883a 	mov	r4,r17
 8015290:	800cd740 	call	800cd74 <__sinit>
 8015294:	8080030f 	ldh	r2,12(r16)
 8015298:	103fd51e 	bne	r2,zero,80151f0 <__alt_data_end+0xfc0151f0>
 801529c:	003ff606 	br	8015278 <__alt_data_end+0xfc015278>
 80152a0:	81400417 	ldw	r5,16(r16)
 80152a4:	8809883a 	mov	r4,r17
 80152a8:	800d1780 	call	800d178 <_free_r>
 80152ac:	003fdd06 	br	8015224 <__alt_data_end+0xfc015224>
 80152b0:	04bfffc4 	movi	r18,-1
 80152b4:	003fd806 	br	8015218 <__alt_data_end+0xfc015218>

080152b8 <fclose>:
 80152b8:	008200b4 	movhi	r2,2050
 80152bc:	10809004 	addi	r2,r2,576
 80152c0:	200b883a 	mov	r5,r4
 80152c4:	11000017 	ldw	r4,0(r2)
 80152c8:	80151b81 	jmpi	80151b8 <_fclose_r>

080152cc <_fputwc_r>:
 80152cc:	3080030b 	ldhu	r2,12(r6)
 80152d0:	defff804 	addi	sp,sp,-32
 80152d4:	dcc00415 	stw	r19,16(sp)
 80152d8:	dc800315 	stw	r18,12(sp)
 80152dc:	dc000115 	stw	r16,4(sp)
 80152e0:	dfc00715 	stw	ra,28(sp)
 80152e4:	dd400615 	stw	r21,24(sp)
 80152e8:	dd000515 	stw	r20,20(sp)
 80152ec:	dc400215 	stw	r17,8(sp)
 80152f0:	10c8000c 	andi	r3,r2,8192
 80152f4:	3021883a 	mov	r16,r6
 80152f8:	2027883a 	mov	r19,r4
 80152fc:	2825883a 	mov	r18,r5
 8015300:	1800051e 	bne	r3,zero,8015318 <_fputwc_r+0x4c>
 8015304:	30c01917 	ldw	r3,100(r6)
 8015308:	10880014 	ori	r2,r2,8192
 801530c:	3080030d 	sth	r2,12(r6)
 8015310:	18880014 	ori	r2,r3,8192
 8015314:	30801915 	stw	r2,100(r6)
 8015318:	800db340 	call	800db34 <__locale_mb_cur_max>
 801531c:	00c00044 	movi	r3,1
 8015320:	10c03e26 	beq	r2,r3,801541c <_fputwc_r+0x150>
 8015324:	9809883a 	mov	r4,r19
 8015328:	d80b883a 	mov	r5,sp
 801532c:	900d883a 	mov	r6,r18
 8015330:	81c01704 	addi	r7,r16,92
 8015334:	801633c0 	call	801633c <_wcrtomb_r>
 8015338:	1029883a 	mov	r20,r2
 801533c:	00bfffc4 	movi	r2,-1
 8015340:	a0802026 	beq	r20,r2,80153c4 <_fputwc_r+0xf8>
 8015344:	d9400003 	ldbu	r5,0(sp)
 8015348:	a0001c26 	beq	r20,zero,80153bc <_fputwc_r+0xf0>
 801534c:	0023883a 	mov	r17,zero
 8015350:	05400284 	movi	r21,10
 8015354:	00000906 	br	801537c <_fputwc_r+0xb0>
 8015358:	80800017 	ldw	r2,0(r16)
 801535c:	11400005 	stb	r5,0(r2)
 8015360:	80c00017 	ldw	r3,0(r16)
 8015364:	18c00044 	addi	r3,r3,1
 8015368:	80c00015 	stw	r3,0(r16)
 801536c:	8c400044 	addi	r17,r17,1
 8015370:	dc45883a 	add	r2,sp,r17
 8015374:	8d00112e 	bgeu	r17,r20,80153bc <_fputwc_r+0xf0>
 8015378:	11400003 	ldbu	r5,0(r2)
 801537c:	80c00217 	ldw	r3,8(r16)
 8015380:	18ffffc4 	addi	r3,r3,-1
 8015384:	80c00215 	stw	r3,8(r16)
 8015388:	183ff30e 	bge	r3,zero,8015358 <__alt_data_end+0xfc015358>
 801538c:	80800617 	ldw	r2,24(r16)
 8015390:	18801916 	blt	r3,r2,80153f8 <_fputwc_r+0x12c>
 8015394:	80800017 	ldw	r2,0(r16)
 8015398:	11400005 	stb	r5,0(r2)
 801539c:	80800017 	ldw	r2,0(r16)
 80153a0:	10c00003 	ldbu	r3,0(r2)
 80153a4:	10800044 	addi	r2,r2,1
 80153a8:	1d402326 	beq	r3,r21,8015438 <_fputwc_r+0x16c>
 80153ac:	80800015 	stw	r2,0(r16)
 80153b0:	8c400044 	addi	r17,r17,1
 80153b4:	dc45883a 	add	r2,sp,r17
 80153b8:	8d3fef36 	bltu	r17,r20,8015378 <__alt_data_end+0xfc015378>
 80153bc:	9005883a 	mov	r2,r18
 80153c0:	00000406 	br	80153d4 <_fputwc_r+0x108>
 80153c4:	80c0030b 	ldhu	r3,12(r16)
 80153c8:	a005883a 	mov	r2,r20
 80153cc:	18c01014 	ori	r3,r3,64
 80153d0:	80c0030d 	sth	r3,12(r16)
 80153d4:	dfc00717 	ldw	ra,28(sp)
 80153d8:	dd400617 	ldw	r21,24(sp)
 80153dc:	dd000517 	ldw	r20,20(sp)
 80153e0:	dcc00417 	ldw	r19,16(sp)
 80153e4:	dc800317 	ldw	r18,12(sp)
 80153e8:	dc400217 	ldw	r17,8(sp)
 80153ec:	dc000117 	ldw	r16,4(sp)
 80153f0:	dec00804 	addi	sp,sp,32
 80153f4:	f800283a 	ret
 80153f8:	9809883a 	mov	r4,r19
 80153fc:	29403fcc 	andi	r5,r5,255
 8015400:	800d883a 	mov	r6,r16
 8015404:	8014ec00 	call	8014ec0 <__swbuf_r>
 8015408:	10bfffe0 	cmpeqi	r2,r2,-1
 801540c:	10803fcc 	andi	r2,r2,255
 8015410:	103fd626 	beq	r2,zero,801536c <__alt_data_end+0xfc01536c>
 8015414:	00bfffc4 	movi	r2,-1
 8015418:	003fee06 	br	80153d4 <__alt_data_end+0xfc0153d4>
 801541c:	90ffffc4 	addi	r3,r18,-1
 8015420:	01003f84 	movi	r4,254
 8015424:	20ffbf36 	bltu	r4,r3,8015324 <__alt_data_end+0xfc015324>
 8015428:	900b883a 	mov	r5,r18
 801542c:	dc800005 	stb	r18,0(sp)
 8015430:	1029883a 	mov	r20,r2
 8015434:	003fc506 	br	801534c <__alt_data_end+0xfc01534c>
 8015438:	9809883a 	mov	r4,r19
 801543c:	a80b883a 	mov	r5,r21
 8015440:	800d883a 	mov	r6,r16
 8015444:	8014ec00 	call	8014ec0 <__swbuf_r>
 8015448:	10bfffe0 	cmpeqi	r2,r2,-1
 801544c:	003fef06 	br	801540c <__alt_data_end+0xfc01540c>

08015450 <fputwc>:
 8015450:	defffc04 	addi	sp,sp,-16
 8015454:	dc000115 	stw	r16,4(sp)
 8015458:	040200b4 	movhi	r16,2050
 801545c:	84009004 	addi	r16,r16,576
 8015460:	dc400215 	stw	r17,8(sp)
 8015464:	2023883a 	mov	r17,r4
 8015468:	81000017 	ldw	r4,0(r16)
 801546c:	dfc00315 	stw	ra,12(sp)
 8015470:	280d883a 	mov	r6,r5
 8015474:	20000626 	beq	r4,zero,8015490 <fputwc+0x40>
 8015478:	20800e17 	ldw	r2,56(r4)
 801547c:	1000041e 	bne	r2,zero,8015490 <fputwc+0x40>
 8015480:	d9400015 	stw	r5,0(sp)
 8015484:	800cd740 	call	800cd74 <__sinit>
 8015488:	81000017 	ldw	r4,0(r16)
 801548c:	d9800017 	ldw	r6,0(sp)
 8015490:	880b883a 	mov	r5,r17
 8015494:	dfc00317 	ldw	ra,12(sp)
 8015498:	dc400217 	ldw	r17,8(sp)
 801549c:	dc000117 	ldw	r16,4(sp)
 80154a0:	dec00404 	addi	sp,sp,16
 80154a4:	80152cc1 	jmpi	80152cc <_fputwc_r>

080154a8 <_fstat_r>:
 80154a8:	defffd04 	addi	sp,sp,-12
 80154ac:	dc000015 	stw	r16,0(sp)
 80154b0:	040200b4 	movhi	r16,2050
 80154b4:	dc400115 	stw	r17,4(sp)
 80154b8:	8407e304 	addi	r16,r16,8076
 80154bc:	2023883a 	mov	r17,r4
 80154c0:	2809883a 	mov	r4,r5
 80154c4:	300b883a 	mov	r5,r6
 80154c8:	dfc00215 	stw	ra,8(sp)
 80154cc:	80000015 	stw	zero,0(r16)
 80154d0:	801a2c80 	call	801a2c8 <fstat>
 80154d4:	00ffffc4 	movi	r3,-1
 80154d8:	10c00526 	beq	r2,r3,80154f0 <_fstat_r+0x48>
 80154dc:	dfc00217 	ldw	ra,8(sp)
 80154e0:	dc400117 	ldw	r17,4(sp)
 80154e4:	dc000017 	ldw	r16,0(sp)
 80154e8:	dec00304 	addi	sp,sp,12
 80154ec:	f800283a 	ret
 80154f0:	80c00017 	ldw	r3,0(r16)
 80154f4:	183ff926 	beq	r3,zero,80154dc <__alt_data_end+0xfc0154dc>
 80154f8:	88c00015 	stw	r3,0(r17)
 80154fc:	003ff706 	br	80154dc <__alt_data_end+0xfc0154dc>

08015500 <rshift>:
 8015500:	2807d17a 	srai	r3,r5,5
 8015504:	20800417 	ldw	r2,16(r4)
 8015508:	22400504 	addi	r9,r4,20
 801550c:	1880250e 	bge	r3,r2,80155a4 <rshift+0xa4>
 8015510:	1085883a 	add	r2,r2,r2
 8015514:	18c7883a 	add	r3,r3,r3
 8015518:	1085883a 	add	r2,r2,r2
 801551c:	18c7883a 	add	r3,r3,r3
 8015520:	294007cc 	andi	r5,r5,31
 8015524:	4885883a 	add	r2,r9,r2
 8015528:	48c7883a 	add	r3,r9,r3
 801552c:	28002026 	beq	r5,zero,80155b0 <rshift+0xb0>
 8015530:	19800017 	ldw	r6,0(r3)
 8015534:	02c00804 	movi	r11,32
 8015538:	19c00104 	addi	r7,r3,4
 801553c:	5957c83a 	sub	r11,r11,r5
 8015540:	3150d83a 	srl	r8,r6,r5
 8015544:	38802c2e 	bgeu	r7,r2,80155f8 <rshift+0xf8>
 8015548:	4815883a 	mov	r10,r9
 801554c:	39800017 	ldw	r6,0(r7)
 8015550:	52800104 	addi	r10,r10,4
 8015554:	39c00104 	addi	r7,r7,4
 8015558:	32cc983a 	sll	r6,r6,r11
 801555c:	418cb03a 	or	r6,r8,r6
 8015560:	51bfff15 	stw	r6,-4(r10)
 8015564:	39bfff17 	ldw	r6,-4(r7)
 8015568:	3150d83a 	srl	r8,r6,r5
 801556c:	38bff736 	bltu	r7,r2,801554c <__alt_data_end+0xfc01554c>
 8015570:	10c7c83a 	sub	r3,r2,r3
 8015574:	18fffec4 	addi	r3,r3,-5
 8015578:	1806d0ba 	srli	r3,r3,2
 801557c:	18c00044 	addi	r3,r3,1
 8015580:	18c7883a 	add	r3,r3,r3
 8015584:	18c7883a 	add	r3,r3,r3
 8015588:	48c7883a 	add	r3,r9,r3
 801558c:	1a000015 	stw	r8,0(r3)
 8015590:	40000126 	beq	r8,zero,8015598 <rshift+0x98>
 8015594:	18c00104 	addi	r3,r3,4
 8015598:	1a45c83a 	sub	r2,r3,r9
 801559c:	1005d0ba 	srai	r2,r2,2
 80155a0:	00001206 	br	80155ec <rshift+0xec>
 80155a4:	20000415 	stw	zero,16(r4)
 80155a8:	20000515 	stw	zero,20(r4)
 80155ac:	f800283a 	ret
 80155b0:	18bffc2e 	bgeu	r3,r2,80155a4 <__alt_data_end+0xfc0155a4>
 80155b4:	180d883a 	mov	r6,r3
 80155b8:	480b883a 	mov	r5,r9
 80155bc:	31c00017 	ldw	r7,0(r6)
 80155c0:	29400104 	addi	r5,r5,4
 80155c4:	31800104 	addi	r6,r6,4
 80155c8:	29ffff15 	stw	r7,-4(r5)
 80155cc:	30bffb36 	bltu	r6,r2,80155bc <__alt_data_end+0xfc0155bc>
 80155d0:	00c6303a 	nor	r3,zero,r3
 80155d4:	1885883a 	add	r2,r3,r2
 80155d8:	1004d0ba 	srli	r2,r2,2
 80155dc:	10800044 	addi	r2,r2,1
 80155e0:	1085883a 	add	r2,r2,r2
 80155e4:	1085883a 	add	r2,r2,r2
 80155e8:	1005d0ba 	srai	r2,r2,2
 80155ec:	20800415 	stw	r2,16(r4)
 80155f0:	103fed26 	beq	r2,zero,80155a8 <__alt_data_end+0xfc0155a8>
 80155f4:	f800283a 	ret
 80155f8:	4807883a 	mov	r3,r9
 80155fc:	003fe306 	br	801558c <__alt_data_end+0xfc01558c>

08015600 <__hexdig_init>:
 8015600:	014200b4 	movhi	r5,2050
 8015604:	00c200b4 	movhi	r3,2050
 8015608:	29791244 	addi	r5,r5,-7095
 801560c:	18ca3b04 	addi	r3,r3,10476
 8015610:	01000404 	movi	r4,16
 8015614:	00800c04 	movi	r2,48
 8015618:	10c5883a 	add	r2,r2,r3
 801561c:	11000005 	stb	r4,0(r2)
 8015620:	28800003 	ldbu	r2,0(r5)
 8015624:	21000044 	addi	r4,r4,1
 8015628:	29400044 	addi	r5,r5,1
 801562c:	103ffa1e 	bne	r2,zero,8015618 <__alt_data_end+0xfc015618>
 8015630:	014200b4 	movhi	r5,2050
 8015634:	29791044 	addi	r5,r5,-7103
 8015638:	01000684 	movi	r4,26
 801563c:	00801844 	movi	r2,97
 8015640:	10c5883a 	add	r2,r2,r3
 8015644:	11000005 	stb	r4,0(r2)
 8015648:	28800003 	ldbu	r2,0(r5)
 801564c:	21000044 	addi	r4,r4,1
 8015650:	29400044 	addi	r5,r5,1
 8015654:	103ffa1e 	bne	r2,zero,8015640 <__alt_data_end+0xfc015640>
 8015658:	014200b4 	movhi	r5,2050
 801565c:	29790e44 	addi	r5,r5,-7111
 8015660:	01000684 	movi	r4,26
 8015664:	00801044 	movi	r2,65
 8015668:	10c5883a 	add	r2,r2,r3
 801566c:	11000005 	stb	r4,0(r2)
 8015670:	28800003 	ldbu	r2,0(r5)
 8015674:	21000044 	addi	r4,r4,1
 8015678:	29400044 	addi	r5,r5,1
 801567c:	103ffa1e 	bne	r2,zero,8015668 <__alt_data_end+0xfc015668>
 8015680:	f800283a 	ret

08015684 <__gethex>:
 8015684:	deffea04 	addi	sp,sp,-88
 8015688:	dfc01515 	stw	ra,84(sp)
 801568c:	dd401115 	stw	r21,68(sp)
 8015690:	dd001015 	stw	r20,64(sp)
 8015694:	dcc00f15 	stw	r19,60(sp)
 8015698:	dc800e15 	stw	r18,56(sp)
 801569c:	d9000215 	stw	r4,8(sp)
 80156a0:	2829883a 	mov	r20,r5
 80156a4:	d9800115 	stw	r6,4(sp)
 80156a8:	d9c00415 	stw	r7,16(sp)
 80156ac:	df001415 	stw	fp,80(sp)
 80156b0:	ddc01315 	stw	r23,76(sp)
 80156b4:	dd801215 	stw	r22,72(sp)
 80156b8:	dc400d15 	stw	r17,52(sp)
 80156bc:	dc000c15 	stw	r16,48(sp)
 80156c0:	800db580 	call	800db58 <_localeconv_r>
 80156c4:	14800017 	ldw	r18,0(r2)
 80156c8:	054200b4 	movhi	r21,2050
 80156cc:	ad4a3b04 	addi	r21,r21,10476
 80156d0:	9009883a 	mov	r4,r18
 80156d4:	80049680 	call	8004968 <strlen>
 80156d8:	1027883a 	mov	r19,r2
 80156dc:	94c7883a 	add	r3,r18,r19
 80156e0:	18ffffc3 	ldbu	r3,-1(r3)
 80156e4:	a8800c03 	ldbu	r2,48(r21)
 80156e8:	d8c00305 	stb	r3,12(sp)
 80156ec:	1000dc26 	beq	r2,zero,8015a60 <__gethex+0x3dc>
 80156f0:	a1c00017 	ldw	r7,0(r20)
 80156f4:	00800c04 	movi	r2,48
 80156f8:	38c00083 	ldbu	r3,2(r7)
 80156fc:	1881511e 	bne	r3,r2,8015c44 <__gethex+0x5c0>
 8015700:	013fff84 	movi	r4,-2
 8015704:	388000c4 	addi	r2,r7,3
 8015708:	21c9c83a 	sub	r4,r4,r7
 801570c:	180b883a 	mov	r5,r3
 8015710:	20b9883a 	add	fp,r4,r2
 8015714:	102f883a 	mov	r23,r2
 8015718:	10800044 	addi	r2,r2,1
 801571c:	10ffffc3 	ldbu	r3,-1(r2)
 8015720:	197ffb26 	beq	r3,r5,8015710 <__alt_data_end+0xfc015710>
 8015724:	a8c7883a 	add	r3,r21,r3
 8015728:	18800003 	ldbu	r2,0(r3)
 801572c:	058200b4 	movhi	r22,2050
 8015730:	b58a3b04 	addi	r22,r22,10476
 8015734:	1000cc26 	beq	r2,zero,8015a68 <__gethex+0x3e4>
 8015738:	b8800003 	ldbu	r2,0(r23)
 801573c:	d8000015 	stw	zero,0(sp)
 8015740:	0021883a 	mov	r16,zero
 8015744:	b085883a 	add	r2,r22,r2
 8015748:	10800003 	ldbu	r2,0(r2)
 801574c:	b823883a 	mov	r17,r23
 8015750:	10000526 	beq	r2,zero,8015768 <__gethex+0xe4>
 8015754:	8c400044 	addi	r17,r17,1
 8015758:	88800003 	ldbu	r2,0(r17)
 801575c:	a885883a 	add	r2,r21,r2
 8015760:	10800003 	ldbu	r2,0(r2)
 8015764:	103ffb1e 	bne	r2,zero,8015754 <__alt_data_end+0xfc015754>
 8015768:	8809883a 	mov	r4,r17
 801576c:	900b883a 	mov	r5,r18
 8015770:	980d883a 	mov	r6,r19
 8015774:	801627c0 	call	801627c <strncmp>
 8015778:	10007b26 	beq	r2,zero,8015968 <__gethex+0x2e4>
 801577c:	88800003 	ldbu	r2,0(r17)
 8015780:	80000426 	beq	r16,zero,8015794 <__gethex+0x110>
 8015784:	8c21c83a 	sub	r16,r17,r16
 8015788:	8421883a 	add	r16,r16,r16
 801578c:	8421883a 	add	r16,r16,r16
 8015790:	0421c83a 	sub	r16,zero,r16
 8015794:	10803fcc 	andi	r2,r2,255
 8015798:	01001404 	movi	r4,80
 801579c:	11007e26 	beq	r2,r4,8015998 <__gethex+0x314>
 80157a0:	01001c04 	movi	r4,112
 80157a4:	11007c26 	beq	r2,r4,8015998 <__gethex+0x314>
 80157a8:	882d883a 	mov	r22,r17
 80157ac:	d8c00017 	ldw	r3,0(sp)
 80157b0:	a4400015 	stw	r17,0(r20)
 80157b4:	18000e26 	beq	r3,zero,80157f0 <__gethex+0x16c>
 80157b8:	e000b91e 	bne	fp,zero,8015aa0 <__gethex+0x41c>
 80157bc:	00800184 	movi	r2,6
 80157c0:	dfc01517 	ldw	ra,84(sp)
 80157c4:	df001417 	ldw	fp,80(sp)
 80157c8:	ddc01317 	ldw	r23,76(sp)
 80157cc:	dd801217 	ldw	r22,72(sp)
 80157d0:	dd401117 	ldw	r21,68(sp)
 80157d4:	dd001017 	ldw	r20,64(sp)
 80157d8:	dcc00f17 	ldw	r19,60(sp)
 80157dc:	dc800e17 	ldw	r18,56(sp)
 80157e0:	dc400d17 	ldw	r17,52(sp)
 80157e4:	dc000c17 	ldw	r16,48(sp)
 80157e8:	dec01604 	addi	sp,sp,88
 80157ec:	f800283a 	ret
 80157f0:	b5c5c83a 	sub	r2,r22,r23
 80157f4:	10bfffc4 	addi	r2,r2,-1
 80157f8:	00c001c4 	movi	r3,7
 80157fc:	000b883a 	mov	r5,zero
 8015800:	1880030e 	bge	r3,r2,8015810 <__gethex+0x18c>
 8015804:	1005d07a 	srai	r2,r2,1
 8015808:	29400044 	addi	r5,r5,1
 801580c:	18bffd16 	blt	r3,r2,8015804 <__alt_data_end+0xfc015804>
 8015810:	d9000217 	ldw	r4,8(sp)
 8015814:	800e3780 	call	800e378 <_Balloc>
 8015818:	10c00504 	addi	r3,r2,20
 801581c:	d8c00015 	stw	r3,0(sp)
 8015820:	1029883a 	mov	r20,r2
 8015824:	bd816a2e 	bgeu	r23,r22,8015dd0 <__gethex+0x74c>
 8015828:	dc400303 	ldbu	r17,12(sp)
 801582c:	03400044 	movi	r13,1
 8015830:	1815883a 	mov	r10,r3
 8015834:	0013883a 	mov	r9,zero
 8015838:	0039883a 	mov	fp,zero
 801583c:	6cdbc83a 	sub	r13,r13,r19
 8015840:	02c00804 	movi	r11,32
 8015844:	b0bfffc3 	ldbu	r2,-1(r22)
 8015848:	b3bfffc4 	addi	r14,r22,-1
 801584c:	14403026 	beq	r2,r17,8015910 <__gethex+0x28c>
 8015850:	e2c04826 	beq	fp,r11,8015974 <__gethex+0x2f0>
 8015854:	e009883a 	mov	r4,fp
 8015858:	e7000104 	addi	fp,fp,4
 801585c:	b0bfffc3 	ldbu	r2,-1(r22)
 8015860:	702d883a 	mov	r22,r14
 8015864:	a885883a 	add	r2,r21,r2
 8015868:	10c00003 	ldbu	r3,0(r2)
 801586c:	18c003cc 	andi	r3,r3,15
 8015870:	1906983a 	sll	r3,r3,r4
 8015874:	48d2b03a 	or	r9,r9,r3
 8015878:	bdbff236 	bltu	r23,r22,8015844 <__alt_data_end+0xfc015844>
 801587c:	d8c00017 	ldw	r3,0(sp)
 8015880:	50800104 	addi	r2,r10,4
 8015884:	52400015 	stw	r9,0(r10)
 8015888:	10c5c83a 	sub	r2,r2,r3
 801588c:	1005d0ba 	srai	r2,r2,2
 8015890:	4809883a 	mov	r4,r9
 8015894:	a0800415 	stw	r2,16(r20)
 8015898:	1022917a 	slli	r17,r2,5
 801589c:	800e6880 	call	800e688 <__hi0bits>
 80158a0:	d8c00117 	ldw	r3,4(sp)
 80158a4:	8885c83a 	sub	r2,r17,r2
 80158a8:	1c800017 	ldw	r18,0(r3)
 80158ac:	9080be16 	blt	r18,r2,8015ba8 <__gethex+0x524>
 80158b0:	1480d916 	blt	r2,r18,8015c18 <__gethex+0x594>
 80158b4:	0027883a 	mov	r19,zero
 80158b8:	d8c00117 	ldw	r3,4(sp)
 80158bc:	18800217 	ldw	r2,8(r3)
 80158c0:	14008616 	blt	r2,r16,8015adc <__gethex+0x458>
 80158c4:	d8c00117 	ldw	r3,4(sp)
 80158c8:	18800117 	ldw	r2,4(r3)
 80158cc:	8080a30e 	bge	r16,r2,8015b5c <__gethex+0x4d8>
 80158d0:	1421c83a 	sub	r16,r2,r16
 80158d4:	8480e216 	blt	r16,r18,8015c60 <__gethex+0x5dc>
 80158d8:	18c00317 	ldw	r3,12(r3)
 80158dc:	01000084 	movi	r4,2
 80158e0:	19014926 	beq	r3,r4,8015e08 <__gethex+0x784>
 80158e4:	010000c4 	movi	r4,3
 80158e8:	19012526 	beq	r3,r4,8015d80 <__gethex+0x6fc>
 80158ec:	01000044 	movi	r4,1
 80158f0:	19013c26 	beq	r3,r4,8015de4 <__gethex+0x760>
 80158f4:	d9000217 	ldw	r4,8(sp)
 80158f8:	a00b883a 	mov	r5,r20
 80158fc:	800e4200 	call	800e420 <_Bfree>
 8015900:	d8801617 	ldw	r2,88(sp)
 8015904:	10000015 	stw	zero,0(r2)
 8015908:	00801404 	movi	r2,80
 801590c:	003fac06 	br	80157c0 <__alt_data_end+0xfc0157c0>
 8015910:	7347883a 	add	r3,r14,r13
 8015914:	1dffce36 	bltu	r3,r23,8015850 <__alt_data_end+0xfc015850>
 8015918:	1809883a 	mov	r4,r3
 801591c:	900b883a 	mov	r5,r18
 8015920:	980d883a 	mov	r6,r19
 8015924:	d8c00715 	stw	r3,28(sp)
 8015928:	da400815 	stw	r9,32(sp)
 801592c:	da800915 	stw	r10,36(sp)
 8015930:	dac00b15 	stw	r11,44(sp)
 8015934:	db400a15 	stw	r13,40(sp)
 8015938:	db800615 	stw	r14,24(sp)
 801593c:	801627c0 	call	801627c <strncmp>
 8015940:	d8c00717 	ldw	r3,28(sp)
 8015944:	da400817 	ldw	r9,32(sp)
 8015948:	da800917 	ldw	r10,36(sp)
 801594c:	dac00b17 	ldw	r11,44(sp)
 8015950:	db400a17 	ldw	r13,40(sp)
 8015954:	db800617 	ldw	r14,24(sp)
 8015958:	103fbd1e 	bne	r2,zero,8015850 <__alt_data_end+0xfc015850>
 801595c:	182d883a 	mov	r22,r3
 8015960:	bdbfb836 	bltu	r23,r22,8015844 <__alt_data_end+0xfc015844>
 8015964:	003fc506 	br	801587c <__alt_data_end+0xfc01587c>
 8015968:	8000d826 	beq	r16,zero,8015ccc <__gethex+0x648>
 801596c:	88800003 	ldbu	r2,0(r17)
 8015970:	003f8406 	br	8015784 <__alt_data_end+0xfc015784>
 8015974:	07000104 	movi	fp,4
 8015978:	52400015 	stw	r9,0(r10)
 801597c:	0009883a 	mov	r4,zero
 8015980:	5715883a 	add	r10,r10,fp
 8015984:	0013883a 	mov	r9,zero
 8015988:	003fb406 	br	801585c <__alt_data_end+0xfc01585c>
 801598c:	00c00044 	movi	r3,1
 8015990:	0021883a 	mov	r16,zero
 8015994:	d8c00015 	stw	r3,0(sp)
 8015998:	88800043 	ldbu	r2,1(r17)
 801599c:	01400ac4 	movi	r5,43
 80159a0:	11003fcc 	andi	r4,r2,255
 80159a4:	21407e26 	beq	r4,r5,8015ba0 <__gethex+0x51c>
 80159a8:	01400b44 	movi	r5,45
 80159ac:	21405226 	beq	r4,r5,8015af8 <__gethex+0x474>
 80159b0:	8ac00044 	addi	r11,r17,1
 80159b4:	d8000515 	stw	zero,20(sp)
 80159b8:	10803fcc 	andi	r2,r2,255
 80159bc:	a885883a 	add	r2,r21,r2
 80159c0:	11000003 	ldbu	r4,0(r2)
 80159c4:	00c00604 	movi	r3,24
 80159c8:	20bfffc4 	addi	r2,r4,-1
 80159cc:	10803fcc 	andi	r2,r2,255
 80159d0:	18bf7536 	bltu	r3,r2,80157a8 <__alt_data_end+0xfc0157a8>
 80159d4:	58800043 	ldbu	r2,1(r11)
 80159d8:	014200b4 	movhi	r5,2050
 80159dc:	294a3b04 	addi	r5,r5,10476
 80159e0:	2885883a 	add	r2,r5,r2
 80159e4:	12800003 	ldbu	r10,0(r2)
 80159e8:	21003fcc 	andi	r4,r4,255
 80159ec:	213ffc04 	addi	r4,r4,-16
 80159f0:	50bfffc4 	addi	r2,r10,-1
 80159f4:	10803fcc 	andi	r2,r2,255
 80159f8:	5ac00044 	addi	r11,r11,1
 80159fc:	55803fcc 	andi	r22,r10,255
 8015a00:	18800f36 	bltu	r3,r2,8015a40 <__gethex+0x3bc>
 8015a04:	5ac00044 	addi	r11,r11,1
 8015a08:	01400284 	movi	r5,10
 8015a0c:	dac00b15 	stw	r11,44(sp)
 8015a10:	800334c0 	call	800334c <__mulsi3>
 8015a14:	dac00b17 	ldw	r11,44(sp)
 8015a18:	1585883a 	add	r2,r2,r22
 8015a1c:	113ffc04 	addi	r4,r2,-16
 8015a20:	5a800003 	ldbu	r10,0(r11)
 8015a24:	00800604 	movi	r2,24
 8015a28:	aa95883a 	add	r10,r21,r10
 8015a2c:	51400003 	ldbu	r5,0(r10)
 8015a30:	2abfffc4 	addi	r10,r5,-1
 8015a34:	52803fcc 	andi	r10,r10,255
 8015a38:	2d803fcc 	andi	r22,r5,255
 8015a3c:	12bff12e 	bgeu	r2,r10,8015a04 <__alt_data_end+0xfc015a04>
 8015a40:	d8c00517 	ldw	r3,20(sp)
 8015a44:	882d883a 	mov	r22,r17
 8015a48:	5823883a 	mov	r17,r11
 8015a4c:	00c5c83a 	sub	r2,zero,r3
 8015a50:	2084f03a 	xor	r2,r4,r2
 8015a54:	10c5883a 	add	r2,r2,r3
 8015a58:	80a1883a 	add	r16,r16,r2
 8015a5c:	003f5306 	br	80157ac <__alt_data_end+0xfc0157ac>
 8015a60:	80156000 	call	8015600 <__hexdig_init>
 8015a64:	003f2206 	br	80156f0 <__alt_data_end+0xfc0156f0>
 8015a68:	b809883a 	mov	r4,r23
 8015a6c:	900b883a 	mov	r5,r18
 8015a70:	980d883a 	mov	r6,r19
 8015a74:	801627c0 	call	801627c <strncmp>
 8015a78:	10002426 	beq	r2,zero,8015b0c <__gethex+0x488>
 8015a7c:	b8800003 	ldbu	r2,0(r23)
 8015a80:	b823883a 	mov	r17,r23
 8015a84:	10803fcc 	andi	r2,r2,255
 8015a88:	01001404 	movi	r4,80
 8015a8c:	113fbf26 	beq	r2,r4,801598c <__alt_data_end+0xfc01598c>
 8015a90:	01001c04 	movi	r4,112
 8015a94:	113fbd26 	beq	r2,r4,801598c <__alt_data_end+0xfc01598c>
 8015a98:	a4400015 	stw	r17,0(r20)
 8015a9c:	e03f4726 	beq	fp,zero,80157bc <__alt_data_end+0xfc0157bc>
 8015aa0:	0005883a 	mov	r2,zero
 8015aa4:	003f4606 	br	80157c0 <__alt_data_end+0xfc0157c0>
 8015aa8:	2ce7883a 	add	r19,r5,r19
 8015aac:	993fff17 	ldw	r4,-4(r19)
 8015ab0:	800e6880 	call	800e688 <__hi0bits>
 8015ab4:	00c00804 	movi	r3,32
 8015ab8:	1c63c83a 	sub	r17,r3,r17
 8015abc:	1440ac0e 	bge	r2,r17,8015d70 <__gethex+0x6ec>
 8015ac0:	a009883a 	mov	r4,r20
 8015ac4:	01400044 	movi	r5,1
 8015ac8:	80155000 	call	8015500 <rshift>
 8015acc:	d8c00117 	ldw	r3,4(sp)
 8015ad0:	84000044 	addi	r16,r16,1
 8015ad4:	18800217 	ldw	r2,8(r3)
 8015ad8:	1400a50e 	bge	r2,r16,8015d70 <__gethex+0x6ec>
 8015adc:	d9000217 	ldw	r4,8(sp)
 8015ae0:	a00b883a 	mov	r5,r20
 8015ae4:	800e4200 	call	800e420 <_Bfree>
 8015ae8:	d9001617 	ldw	r4,88(sp)
 8015aec:	008028c4 	movi	r2,163
 8015af0:	20000015 	stw	zero,0(r4)
 8015af4:	003f3206 	br	80157c0 <__alt_data_end+0xfc0157c0>
 8015af8:	00c00044 	movi	r3,1
 8015afc:	d8c00515 	stw	r3,20(sp)
 8015b00:	88800083 	ldbu	r2,2(r17)
 8015b04:	8ac00084 	addi	r11,r17,2
 8015b08:	003fab06 	br	80159b8 <__alt_data_end+0xfc0159b8>
 8015b0c:	bce3883a 	add	r17,r23,r19
 8015b10:	89000003 	ldbu	r4,0(r17)
 8015b14:	21403fcc 	andi	r5,r4,255
 8015b18:	b145883a 	add	r2,r22,r5
 8015b1c:	10800003 	ldbu	r2,0(r2)
 8015b20:	10004d26 	beq	r2,zero,8015c58 <__gethex+0x5d4>
 8015b24:	01000c04 	movi	r4,48
 8015b28:	882f883a 	mov	r23,r17
 8015b2c:	2900061e 	bne	r5,r4,8015b48 <__gethex+0x4c4>
 8015b30:	2809883a 	mov	r4,r5
 8015b34:	bdc00044 	addi	r23,r23,1
 8015b38:	b8800003 	ldbu	r2,0(r23)
 8015b3c:	113ffd26 	beq	r2,r4,8015b34 <__alt_data_end+0xfc015b34>
 8015b40:	a885883a 	add	r2,r21,r2
 8015b44:	10800003 	ldbu	r2,0(r2)
 8015b48:	1007003a 	cmpeq	r3,r2,zero
 8015b4c:	d8c00015 	stw	r3,0(sp)
 8015b50:	8821883a 	mov	r16,r17
 8015b54:	07000044 	movi	fp,1
 8015b58:	003efc06 	br	801574c <__alt_data_end+0xfc01574c>
 8015b5c:	04400044 	movi	r17,1
 8015b60:	98000926 	beq	r19,zero,8015b88 <__gethex+0x504>
 8015b64:	d8c00117 	ldw	r3,4(sp)
 8015b68:	18800317 	ldw	r2,12(r3)
 8015b6c:	00c00084 	movi	r3,2
 8015b70:	10c06426 	beq	r2,r3,8015d04 <__gethex+0x680>
 8015b74:	00c000c4 	movi	r3,3
 8015b78:	10c06626 	beq	r2,r3,8015d14 <__gethex+0x690>
 8015b7c:	00c00044 	movi	r3,1
 8015b80:	10c08b26 	beq	r2,r3,8015db0 <__gethex+0x72c>
 8015b84:	8c400414 	ori	r17,r17,16
 8015b88:	d9001617 	ldw	r4,88(sp)
 8015b8c:	d8c00417 	ldw	r3,16(sp)
 8015b90:	8805883a 	mov	r2,r17
 8015b94:	25000015 	stw	r20,0(r4)
 8015b98:	1c000015 	stw	r16,0(r3)
 8015b9c:	003f0806 	br	80157c0 <__alt_data_end+0xfc0157c0>
 8015ba0:	d8000515 	stw	zero,20(sp)
 8015ba4:	003fd606 	br	8015b00 <__alt_data_end+0xfc015b00>
 8015ba8:	14a3c83a 	sub	r17,r2,r18
 8015bac:	a009883a 	mov	r4,r20
 8015bb0:	880b883a 	mov	r5,r17
 8015bb4:	800f3340 	call	800f334 <__any_on>
 8015bb8:	10002526 	beq	r2,zero,8015c50 <__gethex+0x5cc>
 8015bbc:	897fffc4 	addi	r5,r17,-1
 8015bc0:	2807d17a 	srai	r3,r5,5
 8015bc4:	d8800017 	ldw	r2,0(sp)
 8015bc8:	290007cc 	andi	r4,r5,31
 8015bcc:	18c7883a 	add	r3,r3,r3
 8015bd0:	18c7883a 	add	r3,r3,r3
 8015bd4:	04c00044 	movi	r19,1
 8015bd8:	10c7883a 	add	r3,r2,r3
 8015bdc:	9908983a 	sll	r4,r19,r4
 8015be0:	18c00017 	ldw	r3,0(r3)
 8015be4:	20c6703a 	and	r3,r4,r3
 8015be8:	18000626 	beq	r3,zero,8015c04 <__gethex+0x580>
 8015bec:	99407b0e 	bge	r19,r5,8015ddc <__gethex+0x758>
 8015bf0:	a009883a 	mov	r4,r20
 8015bf4:	897fff84 	addi	r5,r17,-2
 8015bf8:	800f3340 	call	800f334 <__any_on>
 8015bfc:	10007726 	beq	r2,zero,8015ddc <__gethex+0x758>
 8015c00:	04c000c4 	movi	r19,3
 8015c04:	a009883a 	mov	r4,r20
 8015c08:	880b883a 	mov	r5,r17
 8015c0c:	80155000 	call	8015500 <rshift>
 8015c10:	8461883a 	add	r16,r16,r17
 8015c14:	003f2806 	br	80158b8 <__alt_data_end+0xfc0158b8>
 8015c18:	d9000217 	ldw	r4,8(sp)
 8015c1c:	90a3c83a 	sub	r17,r18,r2
 8015c20:	a00b883a 	mov	r5,r20
 8015c24:	880d883a 	mov	r6,r17
 8015c28:	800ebac0 	call	800ebac <__lshift>
 8015c2c:	10c00504 	addi	r3,r2,20
 8015c30:	1029883a 	mov	r20,r2
 8015c34:	8461c83a 	sub	r16,r16,r17
 8015c38:	d8c00015 	stw	r3,0(sp)
 8015c3c:	0027883a 	mov	r19,zero
 8015c40:	003f1d06 	br	80158b8 <__alt_data_end+0xfc0158b8>
 8015c44:	3dc00084 	addi	r23,r7,2
 8015c48:	0039883a 	mov	fp,zero
 8015c4c:	003eb506 	br	8015724 <__alt_data_end+0xfc015724>
 8015c50:	0027883a 	mov	r19,zero
 8015c54:	003feb06 	br	8015c04 <__alt_data_end+0xfc015c04>
 8015c58:	2005883a 	mov	r2,r4
 8015c5c:	003f8906 	br	8015a84 <__alt_data_end+0xfc015a84>
 8015c60:	847fffc4 	addi	r17,r16,-1
 8015c64:	9800441e 	bne	r19,zero,8015d78 <__gethex+0x6f4>
 8015c68:	0440040e 	bge	zero,r17,8015c7c <__gethex+0x5f8>
 8015c6c:	a009883a 	mov	r4,r20
 8015c70:	880b883a 	mov	r5,r17
 8015c74:	800f3340 	call	800f334 <__any_on>
 8015c78:	1027883a 	mov	r19,r2
 8015c7c:	8805d17a 	srai	r2,r17,5
 8015c80:	d8c00017 	ldw	r3,0(sp)
 8015c84:	8c4007cc 	andi	r17,r17,31
 8015c88:	1085883a 	add	r2,r2,r2
 8015c8c:	1085883a 	add	r2,r2,r2
 8015c90:	1885883a 	add	r2,r3,r2
 8015c94:	00c00044 	movi	r3,1
 8015c98:	1c62983a 	sll	r17,r3,r17
 8015c9c:	10800017 	ldw	r2,0(r2)
 8015ca0:	8884703a 	and	r2,r17,r2
 8015ca4:	10000126 	beq	r2,zero,8015cac <__gethex+0x628>
 8015ca8:	9cc00094 	ori	r19,r19,2
 8015cac:	800b883a 	mov	r5,r16
 8015cb0:	a009883a 	mov	r4,r20
 8015cb4:	80155000 	call	8015500 <rshift>
 8015cb8:	d8c00117 	ldw	r3,4(sp)
 8015cbc:	9425c83a 	sub	r18,r18,r16
 8015cc0:	04400084 	movi	r17,2
 8015cc4:	1c000117 	ldw	r16,4(r3)
 8015cc8:	003fa506 	br	8015b60 <__alt_data_end+0xfc015b60>
 8015ccc:	8ce1883a 	add	r16,r17,r19
 8015cd0:	80800003 	ldbu	r2,0(r16)
 8015cd4:	8023883a 	mov	r17,r16
 8015cd8:	10c03fcc 	andi	r3,r2,255
 8015cdc:	a8c7883a 	add	r3,r21,r3
 8015ce0:	18c00003 	ldbu	r3,0(r3)
 8015ce4:	183ea726 	beq	r3,zero,8015784 <__alt_data_end+0xfc015784>
 8015ce8:	8c400044 	addi	r17,r17,1
 8015cec:	88800003 	ldbu	r2,0(r17)
 8015cf0:	11003fcc 	andi	r4,r2,255
 8015cf4:	a909883a 	add	r4,r21,r4
 8015cf8:	21000003 	ldbu	r4,0(r4)
 8015cfc:	203ffa1e 	bne	r4,zero,8015ce8 <__alt_data_end+0xfc015ce8>
 8015d00:	003ea006 	br	8015784 <__alt_data_end+0xfc015784>
 8015d04:	d9001717 	ldw	r4,92(sp)
 8015d08:	00800044 	movi	r2,1
 8015d0c:	1109c83a 	sub	r4,r2,r4
 8015d10:	d9001715 	stw	r4,92(sp)
 8015d14:	d8801717 	ldw	r2,92(sp)
 8015d18:	103f9a26 	beq	r2,zero,8015b84 <__alt_data_end+0xfc015b84>
 8015d1c:	a5800417 	ldw	r22,16(r20)
 8015d20:	d8800017 	ldw	r2,0(sp)
 8015d24:	013fffc4 	movi	r4,-1
 8015d28:	b5a7883a 	add	r19,r22,r22
 8015d2c:	9ce7883a 	add	r19,r19,r19
 8015d30:	14cb883a 	add	r5,r2,r19
 8015d34:	00000306 	br	8015d44 <__gethex+0x6c0>
 8015d38:	10000015 	stw	zero,0(r2)
 8015d3c:	10800104 	addi	r2,r2,4
 8015d40:	1140342e 	bgeu	r2,r5,8015e14 <__gethex+0x790>
 8015d44:	10c00017 	ldw	r3,0(r2)
 8015d48:	193ffb26 	beq	r3,r4,8015d38 <__alt_data_end+0xfc015d38>
 8015d4c:	d9400017 	ldw	r5,0(sp)
 8015d50:	18c00044 	addi	r3,r3,1
 8015d54:	10c00015 	stw	r3,0(r2)
 8015d58:	00800084 	movi	r2,2
 8015d5c:	88803a26 	beq	r17,r2,8015e48 <__gethex+0x7c4>
 8015d60:	a0800417 	ldw	r2,16(r20)
 8015d64:	b0bf5616 	blt	r22,r2,8015ac0 <__alt_data_end+0xfc015ac0>
 8015d68:	944007cc 	andi	r17,r18,31
 8015d6c:	883f4e1e 	bne	r17,zero,8015aa8 <__alt_data_end+0xfc015aa8>
 8015d70:	04400844 	movi	r17,33
 8015d74:	003f8406 	br	8015b88 <__alt_data_end+0xfc015b88>
 8015d78:	04c00044 	movi	r19,1
 8015d7c:	003fbf06 	br	8015c7c <__alt_data_end+0xfc015c7c>
 8015d80:	d8c01717 	ldw	r3,92(sp)
 8015d84:	183edb26 	beq	r3,zero,80158f4 <__alt_data_end+0xfc0158f4>
 8015d88:	d8c00417 	ldw	r3,16(sp)
 8015d8c:	d9001617 	ldw	r4,88(sp)
 8015d90:	18800015 	stw	r2,0(r3)
 8015d94:	d8c00017 	ldw	r3,0(sp)
 8015d98:	00800044 	movi	r2,1
 8015d9c:	a0800415 	stw	r2,16(r20)
 8015da0:	18800015 	stw	r2,0(r3)
 8015da4:	25000015 	stw	r20,0(r4)
 8015da8:	00801884 	movi	r2,98
 8015dac:	003e8406 	br	80157c0 <__alt_data_end+0xfc0157c0>
 8015db0:	9880008c 	andi	r2,r19,2
 8015db4:	103f7326 	beq	r2,zero,8015b84 <__alt_data_end+0xfc015b84>
 8015db8:	d8c00017 	ldw	r3,0(sp)
 8015dbc:	18800017 	ldw	r2,0(r3)
 8015dc0:	9884b03a 	or	r2,r19,r2
 8015dc4:	1080004c 	andi	r2,r2,1
 8015dc8:	103fd41e 	bne	r2,zero,8015d1c <__alt_data_end+0xfc015d1c>
 8015dcc:	003f6d06 	br	8015b84 <__alt_data_end+0xfc015b84>
 8015dd0:	da800017 	ldw	r10,0(sp)
 8015dd4:	0013883a 	mov	r9,zero
 8015dd8:	003ea806 	br	801587c <__alt_data_end+0xfc01587c>
 8015ddc:	04c00084 	movi	r19,2
 8015de0:	003f8806 	br	8015c04 <__alt_data_end+0xfc015c04>
 8015de4:	84bec31e 	bne	r16,r18,80158f4 <__alt_data_end+0xfc0158f4>
 8015de8:	1cbfe70e 	bge	r3,r18,8015d88 <__alt_data_end+0xfc015d88>
 8015dec:	a009883a 	mov	r4,r20
 8015df0:	917fffc4 	addi	r5,r18,-1
 8015df4:	800f3340 	call	800f334 <__any_on>
 8015df8:	103ebe26 	beq	r2,zero,80158f4 <__alt_data_end+0xfc0158f4>
 8015dfc:	d8c00117 	ldw	r3,4(sp)
 8015e00:	18800117 	ldw	r2,4(r3)
 8015e04:	003fe006 	br	8015d88 <__alt_data_end+0xfc015d88>
 8015e08:	d9001717 	ldw	r4,92(sp)
 8015e0c:	203fde26 	beq	r4,zero,8015d88 <__alt_data_end+0xfc015d88>
 8015e10:	003eb806 	br	80158f4 <__alt_data_end+0xfc0158f4>
 8015e14:	a0800217 	ldw	r2,8(r20)
 8015e18:	b080110e 	bge	r22,r2,8015e60 <__gethex+0x7dc>
 8015e1c:	d9400017 	ldw	r5,0(sp)
 8015e20:	b009883a 	mov	r4,r22
 8015e24:	20c00144 	addi	r3,r4,5
 8015e28:	18c7883a 	add	r3,r3,r3
 8015e2c:	21000044 	addi	r4,r4,1
 8015e30:	18c7883a 	add	r3,r3,r3
 8015e34:	a1000415 	stw	r4,16(r20)
 8015e38:	a0c7883a 	add	r3,r20,r3
 8015e3c:	00800044 	movi	r2,1
 8015e40:	18800015 	stw	r2,0(r3)
 8015e44:	003fc406 	br	8015d58 <__alt_data_end+0xfc015d58>
 8015e48:	d8c00117 	ldw	r3,4(sp)
 8015e4c:	18800017 	ldw	r2,0(r3)
 8015e50:	10bfffc4 	addi	r2,r2,-1
 8015e54:	14801526 	beq	r2,r18,8015eac <__gethex+0x828>
 8015e58:	04400884 	movi	r17,34
 8015e5c:	003f4a06 	br	8015b88 <__alt_data_end+0xfc015b88>
 8015e60:	a1400117 	ldw	r5,4(r20)
 8015e64:	d9000217 	ldw	r4,8(sp)
 8015e68:	29400044 	addi	r5,r5,1
 8015e6c:	800e3780 	call	800e378 <_Balloc>
 8015e70:	a1800417 	ldw	r6,16(r20)
 8015e74:	a1400304 	addi	r5,r20,12
 8015e78:	11000304 	addi	r4,r2,12
 8015e7c:	31800084 	addi	r6,r6,2
 8015e80:	318d883a 	add	r6,r6,r6
 8015e84:	318d883a 	add	r6,r6,r6
 8015e88:	102b883a 	mov	r21,r2
 8015e8c:	800e0e40 	call	800e0e4 <memcpy>
 8015e90:	d9000217 	ldw	r4,8(sp)
 8015e94:	a00b883a 	mov	r5,r20
 8015e98:	a829883a 	mov	r20,r21
 8015e9c:	800e4200 	call	800e420 <_Bfree>
 8015ea0:	a9000417 	ldw	r4,16(r21)
 8015ea4:	a9400504 	addi	r5,r21,20
 8015ea8:	003fde06 	br	8015e24 <__alt_data_end+0xfc015e24>
 8015eac:	9005d17a 	srai	r2,r18,5
 8015eb0:	944007cc 	andi	r17,r18,31
 8015eb4:	00c00044 	movi	r3,1
 8015eb8:	1085883a 	add	r2,r2,r2
 8015ebc:	1085883a 	add	r2,r2,r2
 8015ec0:	2885883a 	add	r2,r5,r2
 8015ec4:	1c62983a 	sll	r17,r3,r17
 8015ec8:	10800017 	ldw	r2,0(r2)
 8015ecc:	8884703a 	and	r2,r17,r2
 8015ed0:	1023003a 	cmpeq	r17,r2,zero
 8015ed4:	8c400844 	addi	r17,r17,33
 8015ed8:	003f2b06 	br	8015b88 <__alt_data_end+0xfc015b88>

08015edc <__hexnan>:
 8015edc:	defff504 	addi	sp,sp,-44
 8015ee0:	dc000315 	stw	r16,12(sp)
 8015ee4:	040200b4 	movhi	r16,2050
 8015ee8:	840a3b04 	addi	r16,r16,10476
 8015eec:	80800c03 	ldbu	r2,48(r16)
 8015ef0:	dfc00a15 	stw	ra,40(sp)
 8015ef4:	dd800915 	stw	r22,36(sp)
 8015ef8:	dd400815 	stw	r21,32(sp)
 8015efc:	dd000715 	stw	r20,28(sp)
 8015f00:	dcc00615 	stw	r19,24(sp)
 8015f04:	dc800515 	stw	r18,20(sp)
 8015f08:	dc400415 	stw	r17,16(sp)
 8015f0c:	10006c26 	beq	r2,zero,80160c0 <__hexnan+0x1e4>
 8015f10:	2cc00017 	ldw	r19,0(r5)
 8015f14:	981dd17a 	srai	r14,r19,5
 8015f18:	9cc007cc 	andi	r19,r19,31
 8015f1c:	739d883a 	add	r14,r14,r14
 8015f20:	739d883a 	add	r14,r14,r14
 8015f24:	339d883a 	add	r14,r6,r14
 8015f28:	98000126 	beq	r19,zero,8015f30 <__hexnan+0x54>
 8015f2c:	73800104 	addi	r14,r14,4
 8015f30:	22000017 	ldw	r8,0(r4)
 8015f34:	72ffff04 	addi	r11,r14,-4
 8015f38:	703fff15 	stw	zero,-4(r14)
 8015f3c:	581b883a 	mov	r13,r11
 8015f40:	580f883a 	mov	r7,r11
 8015f44:	000b883a 	mov	r5,zero
 8015f48:	001f883a 	mov	r15,zero
 8015f4c:	0019883a 	mov	r12,zero
 8015f50:	04800204 	movi	r18,8
 8015f54:	04400804 	movi	r17,32
 8015f58:	050001c4 	movi	r20,7
 8015f5c:	42000044 	addi	r8,r8,1
 8015f60:	40c00003 	ldbu	r3,0(r8)
 8015f64:	18001d26 	beq	r3,zero,8015fdc <__hexnan+0x100>
 8015f68:	80c5883a 	add	r2,r16,r3
 8015f6c:	10800003 	ldbu	r2,0(r2)
 8015f70:	12403fcc 	andi	r9,r2,255
 8015f74:	4800301e 	bne	r9,zero,8016038 <__hexnan+0x15c>
 8015f78:	88c04436 	bltu	r17,r3,801608c <__hexnan+0x1b0>
 8015f7c:	7b3ff70e 	bge	r15,r12,8015f5c <__alt_data_end+0xfc015f5c>
 8015f80:	3b40112e 	bgeu	r7,r13,8015fc8 <__hexnan+0xec>
 8015f84:	a1401016 	blt	r20,r5,8015fc8 <__hexnan+0xec>
 8015f88:	914bc83a 	sub	r5,r18,r5
 8015f8c:	294b883a 	add	r5,r5,r5
 8015f90:	3a800017 	ldw	r10,0(r7)
 8015f94:	294b883a 	add	r5,r5,r5
 8015f98:	896dc83a 	sub	r22,r17,r5
 8015f9c:	38c00104 	addi	r3,r7,4
 8015fa0:	3805883a 	mov	r2,r7
 8015fa4:	1d400017 	ldw	r21,0(r3)
 8015fa8:	10800104 	addi	r2,r2,4
 8015fac:	18c00104 	addi	r3,r3,4
 8015fb0:	ad92983a 	sll	r9,r21,r22
 8015fb4:	5252b03a 	or	r9,r10,r9
 8015fb8:	a954d83a 	srl	r10,r21,r5
 8015fbc:	127fff15 	stw	r9,-4(r2)
 8015fc0:	1abfff15 	stw	r10,-4(r3)
 8015fc4:	137ff736 	bltu	r2,r13,8015fa4 <__alt_data_end+0xfc015fa4>
 8015fc8:	31c02a36 	bltu	r6,r7,8016074 <__hexnan+0x198>
 8015fcc:	42000044 	addi	r8,r8,1
 8015fd0:	40c00003 	ldbu	r3,0(r8)
 8015fd4:	01400204 	movi	r5,8
 8015fd8:	183fe31e 	bne	r3,zero,8015f68 <__alt_data_end+0xfc015f68>
 8015fdc:	3805883a 	mov	r2,r7
 8015fe0:	60002c26 	beq	r12,zero,8016094 <__hexnan+0x1b8>
 8015fe4:	3b40022e 	bgeu	r7,r13,8015ff0 <__hexnan+0x114>
 8015fe8:	00c001c4 	movi	r3,7
 8015fec:	19404e0e 	bge	r3,r5,8016128 <__hexnan+0x24c>
 8015ff0:	31c03b2e 	bgeu	r6,r7,80160e0 <__hexnan+0x204>
 8015ff4:	3005883a 	mov	r2,r6
 8015ff8:	38c00017 	ldw	r3,0(r7)
 8015ffc:	10800104 	addi	r2,r2,4
 8016000:	39c00104 	addi	r7,r7,4
 8016004:	10ffff15 	stw	r3,-4(r2)
 8016008:	59fffb2e 	bgeu	r11,r7,8015ff8 <__alt_data_end+0xfc015ff8>
 801600c:	10000015 	stw	zero,0(r2)
 8016010:	10800104 	addi	r2,r2,4
 8016014:	58bffd2e 	bgeu	r11,r2,801600c <__alt_data_end+0xfc01600c>
 8016018:	70bfff17 	ldw	r2,-4(r14)
 801601c:	1000041e 	bne	r2,zero,8016030 <__hexnan+0x154>
 8016020:	32c03826 	beq	r6,r11,8016104 <__hexnan+0x228>
 8016024:	5affff04 	addi	r11,r11,-4
 8016028:	58800017 	ldw	r2,0(r11)
 801602c:	103ffc26 	beq	r2,zero,8016020 <__alt_data_end+0xfc016020>
 8016030:	00800144 	movi	r2,5
 8016034:	00001806 	br	8016098 <__hexnan+0x1bc>
 8016038:	29400044 	addi	r5,r5,1
 801603c:	63000044 	addi	r12,r12,1
 8016040:	91400616 	blt	r18,r5,801605c <__hexnan+0x180>
 8016044:	38c00017 	ldw	r3,0(r7)
 8016048:	1806913a 	slli	r3,r3,4
 801604c:	108003cc 	andi	r2,r2,15
 8016050:	1884b03a 	or	r2,r3,r2
 8016054:	38800015 	stw	r2,0(r7)
 8016058:	003fc006 	br	8015f5c <__alt_data_end+0xfc015f5c>
 801605c:	31ffbf2e 	bgeu	r6,r7,8015f5c <__alt_data_end+0xfc015f5c>
 8016060:	383fff15 	stw	zero,-4(r7)
 8016064:	0007883a 	mov	r3,zero
 8016068:	39ffff04 	addi	r7,r7,-4
 801606c:	01400044 	movi	r5,1
 8016070:	003ff606 	br	801604c <__alt_data_end+0xfc01604c>
 8016074:	3b7fff04 	addi	r13,r7,-4
 8016078:	383fff15 	stw	zero,-4(r7)
 801607c:	601f883a 	mov	r15,r12
 8016080:	680f883a 	mov	r7,r13
 8016084:	000b883a 	mov	r5,zero
 8016088:	003fb406 	br	8015f5c <__alt_data_end+0xfc015f5c>
 801608c:	00800a44 	movi	r2,41
 8016090:	18802026 	beq	r3,r2,8016114 <__hexnan+0x238>
 8016094:	00800104 	movi	r2,4
 8016098:	dfc00a17 	ldw	ra,40(sp)
 801609c:	dd800917 	ldw	r22,36(sp)
 80160a0:	dd400817 	ldw	r21,32(sp)
 80160a4:	dd000717 	ldw	r20,28(sp)
 80160a8:	dcc00617 	ldw	r19,24(sp)
 80160ac:	dc800517 	ldw	r18,20(sp)
 80160b0:	dc400417 	ldw	r17,16(sp)
 80160b4:	dc000317 	ldw	r16,12(sp)
 80160b8:	dec00b04 	addi	sp,sp,44
 80160bc:	f800283a 	ret
 80160c0:	d9000015 	stw	r4,0(sp)
 80160c4:	d9400115 	stw	r5,4(sp)
 80160c8:	d9800215 	stw	r6,8(sp)
 80160cc:	80156000 	call	8015600 <__hexdig_init>
 80160d0:	d9800217 	ldw	r6,8(sp)
 80160d4:	d9400117 	ldw	r5,4(sp)
 80160d8:	d9000017 	ldw	r4,0(sp)
 80160dc:	003f8c06 	br	8015f10 <__alt_data_end+0xfc015f10>
 80160e0:	983fcd26 	beq	r19,zero,8016018 <__alt_data_end+0xfc016018>
 80160e4:	00c00804 	movi	r3,32
 80160e8:	1ce7c83a 	sub	r19,r3,r19
 80160ec:	00ffffc4 	movi	r3,-1
 80160f0:	70bfff17 	ldw	r2,-4(r14)
 80160f4:	1cc6d83a 	srl	r3,r3,r19
 80160f8:	1884703a 	and	r2,r3,r2
 80160fc:	70bfff15 	stw	r2,-4(r14)
 8016100:	003fc606 	br	801601c <__alt_data_end+0xfc01601c>
 8016104:	00800044 	movi	r2,1
 8016108:	58800015 	stw	r2,0(r11)
 801610c:	00800144 	movi	r2,5
 8016110:	003fe106 	br	8016098 <__alt_data_end+0xfc016098>
 8016114:	42000044 	addi	r8,r8,1
 8016118:	22000015 	stw	r8,0(r4)
 801611c:	3805883a 	mov	r2,r7
 8016120:	603fb01e 	bne	r12,zero,8015fe4 <__alt_data_end+0xfc015fe4>
 8016124:	003fdb06 	br	8016094 <__alt_data_end+0xfc016094>
 8016128:	02400204 	movi	r9,8
 801612c:	4953c83a 	sub	r9,r9,r5
 8016130:	4a53883a 	add	r9,r9,r9
 8016134:	3a000017 	ldw	r8,0(r7)
 8016138:	4a53883a 	add	r9,r9,r9
 801613c:	02800804 	movi	r10,32
 8016140:	5255c83a 	sub	r10,r10,r9
 8016144:	38c00104 	addi	r3,r7,4
 8016148:	19400017 	ldw	r5,0(r3)
 801614c:	10800104 	addi	r2,r2,4
 8016150:	18c00104 	addi	r3,r3,4
 8016154:	2a88983a 	sll	r4,r5,r10
 8016158:	4108b03a 	or	r4,r8,r4
 801615c:	2a50d83a 	srl	r8,r5,r9
 8016160:	113fff15 	stw	r4,-4(r2)
 8016164:	1a3fff15 	stw	r8,-4(r3)
 8016168:	137ff736 	bltu	r2,r13,8016148 <__alt_data_end+0xfc016148>
 801616c:	003fa006 	br	8015ff0 <__alt_data_end+0xfc015ff0>

08016170 <_isatty_r>:
 8016170:	defffd04 	addi	sp,sp,-12
 8016174:	dc000015 	stw	r16,0(sp)
 8016178:	040200b4 	movhi	r16,2050
 801617c:	dc400115 	stw	r17,4(sp)
 8016180:	8407e304 	addi	r16,r16,8076
 8016184:	2023883a 	mov	r17,r4
 8016188:	2809883a 	mov	r4,r5
 801618c:	dfc00215 	stw	ra,8(sp)
 8016190:	80000015 	stw	zero,0(r16)
 8016194:	801a3f00 	call	801a3f0 <isatty>
 8016198:	00ffffc4 	movi	r3,-1
 801619c:	10c00526 	beq	r2,r3,80161b4 <_isatty_r+0x44>
 80161a0:	dfc00217 	ldw	ra,8(sp)
 80161a4:	dc400117 	ldw	r17,4(sp)
 80161a8:	dc000017 	ldw	r16,0(sp)
 80161ac:	dec00304 	addi	sp,sp,12
 80161b0:	f800283a 	ret
 80161b4:	80c00017 	ldw	r3,0(r16)
 80161b8:	183ff926 	beq	r3,zero,80161a0 <__alt_data_end+0xfc0161a0>
 80161bc:	88c00015 	stw	r3,0(r17)
 80161c0:	003ff706 	br	80161a0 <__alt_data_end+0xfc0161a0>

080161c4 <_lseek_r>:
 80161c4:	defffd04 	addi	sp,sp,-12
 80161c8:	dc000015 	stw	r16,0(sp)
 80161cc:	040200b4 	movhi	r16,2050
 80161d0:	dc400115 	stw	r17,4(sp)
 80161d4:	8407e304 	addi	r16,r16,8076
 80161d8:	2023883a 	mov	r17,r4
 80161dc:	2809883a 	mov	r4,r5
 80161e0:	300b883a 	mov	r5,r6
 80161e4:	380d883a 	mov	r6,r7
 80161e8:	dfc00215 	stw	ra,8(sp)
 80161ec:	80000015 	stw	zero,0(r16)
 80161f0:	801a7500 	call	801a750 <lseek>
 80161f4:	00ffffc4 	movi	r3,-1
 80161f8:	10c00526 	beq	r2,r3,8016210 <_lseek_r+0x4c>
 80161fc:	dfc00217 	ldw	ra,8(sp)
 8016200:	dc400117 	ldw	r17,4(sp)
 8016204:	dc000017 	ldw	r16,0(sp)
 8016208:	dec00304 	addi	sp,sp,12
 801620c:	f800283a 	ret
 8016210:	80c00017 	ldw	r3,0(r16)
 8016214:	183ff926 	beq	r3,zero,80161fc <__alt_data_end+0xfc0161fc>
 8016218:	88c00015 	stw	r3,0(r17)
 801621c:	003ff706 	br	80161fc <__alt_data_end+0xfc0161fc>

08016220 <_read_r>:
 8016220:	defffd04 	addi	sp,sp,-12
 8016224:	dc000015 	stw	r16,0(sp)
 8016228:	040200b4 	movhi	r16,2050
 801622c:	dc400115 	stw	r17,4(sp)
 8016230:	8407e304 	addi	r16,r16,8076
 8016234:	2023883a 	mov	r17,r4
 8016238:	2809883a 	mov	r4,r5
 801623c:	300b883a 	mov	r5,r6
 8016240:	380d883a 	mov	r6,r7
 8016244:	dfc00215 	stw	ra,8(sp)
 8016248:	80000015 	stw	zero,0(r16)
 801624c:	801aba00 	call	801aba0 <read>
 8016250:	00ffffc4 	movi	r3,-1
 8016254:	10c00526 	beq	r2,r3,801626c <_read_r+0x4c>
 8016258:	dfc00217 	ldw	ra,8(sp)
 801625c:	dc400117 	ldw	r17,4(sp)
 8016260:	dc000017 	ldw	r16,0(sp)
 8016264:	dec00304 	addi	sp,sp,12
 8016268:	f800283a 	ret
 801626c:	80c00017 	ldw	r3,0(r16)
 8016270:	183ff926 	beq	r3,zero,8016258 <__alt_data_end+0xfc016258>
 8016274:	88c00015 	stw	r3,0(r17)
 8016278:	003ff706 	br	8016258 <__alt_data_end+0xfc016258>

0801627c <strncmp>:
 801627c:	30002126 	beq	r6,zero,8016304 <strncmp+0x88>
 8016280:	2144b03a 	or	r2,r4,r5
 8016284:	108000cc 	andi	r2,r2,3
 8016288:	1000241e 	bne	r2,zero,801631c <strncmp+0xa0>
 801628c:	024000c4 	movi	r9,3
 8016290:	4980222e 	bgeu	r9,r6,801631c <strncmp+0xa0>
 8016294:	20800017 	ldw	r2,0(r4)
 8016298:	28c00017 	ldw	r3,0(r5)
 801629c:	10c01f1e 	bne	r2,r3,801631c <strncmp+0xa0>
 80162a0:	31bfff04 	addi	r6,r6,-4
 80162a4:	30001726 	beq	r6,zero,8016304 <strncmp+0x88>
 80162a8:	02ffbff4 	movhi	r11,65279
 80162ac:	5affbfc4 	addi	r11,r11,-257
 80162b0:	0086303a 	nor	r3,zero,r2
 80162b4:	02a02074 	movhi	r10,32897
 80162b8:	12c5883a 	add	r2,r2,r11
 80162bc:	52a02004 	addi	r10,r10,-32640
 80162c0:	10c4703a 	and	r2,r2,r3
 80162c4:	1284703a 	and	r2,r2,r10
 80162c8:	10000226 	beq	r2,zero,80162d4 <strncmp+0x58>
 80162cc:	00000d06 	br	8016304 <strncmp+0x88>
 80162d0:	10000c1e 	bne	r2,zero,8016304 <strncmp+0x88>
 80162d4:	21000104 	addi	r4,r4,4
 80162d8:	29400104 	addi	r5,r5,4
 80162dc:	49800f2e 	bgeu	r9,r6,801631c <strncmp+0xa0>
 80162e0:	20c00017 	ldw	r3,0(r4)
 80162e4:	29c00017 	ldw	r7,0(r5)
 80162e8:	1ad1883a 	add	r8,r3,r11
 80162ec:	00c4303a 	nor	r2,zero,r3
 80162f0:	4084703a 	and	r2,r8,r2
 80162f4:	1284703a 	and	r2,r2,r10
 80162f8:	19c0081e 	bne	r3,r7,801631c <strncmp+0xa0>
 80162fc:	31bfff04 	addi	r6,r6,-4
 8016300:	303ff31e 	bne	r6,zero,80162d0 <__alt_data_end+0xfc0162d0>
 8016304:	0005883a 	mov	r2,zero
 8016308:	f800283a 	ret
 801630c:	303ffd26 	beq	r6,zero,8016304 <__alt_data_end+0xfc016304>
 8016310:	103ffc26 	beq	r2,zero,8016304 <__alt_data_end+0xfc016304>
 8016314:	21000044 	addi	r4,r4,1
 8016318:	29400044 	addi	r5,r5,1
 801631c:	20800007 	ldb	r2,0(r4)
 8016320:	28c00007 	ldb	r3,0(r5)
 8016324:	31bfffc4 	addi	r6,r6,-1
 8016328:	10fff826 	beq	r2,r3,801630c <__alt_data_end+0xfc01630c>
 801632c:	20800003 	ldbu	r2,0(r4)
 8016330:	28c00003 	ldbu	r3,0(r5)
 8016334:	10c5c83a 	sub	r2,r2,r3
 8016338:	f800283a 	ret

0801633c <_wcrtomb_r>:
 801633c:	defff604 	addi	sp,sp,-40
 8016340:	008200b4 	movhi	r2,2050
 8016344:	dc800815 	stw	r18,32(sp)
 8016348:	dc400715 	stw	r17,28(sp)
 801634c:	dc000615 	stw	r16,24(sp)
 8016350:	10809604 	addi	r2,r2,600
 8016354:	dfc00915 	stw	ra,36(sp)
 8016358:	2021883a 	mov	r16,r4
 801635c:	3823883a 	mov	r17,r7
 8016360:	14800017 	ldw	r18,0(r2)
 8016364:	28001426 	beq	r5,zero,80163b8 <_wcrtomb_r+0x7c>
 8016368:	d9400415 	stw	r5,16(sp)
 801636c:	d9800515 	stw	r6,20(sp)
 8016370:	800db280 	call	800db28 <__locale_charset>
 8016374:	d9400417 	ldw	r5,16(sp)
 8016378:	d9800517 	ldw	r6,20(sp)
 801637c:	8009883a 	mov	r4,r16
 8016380:	dc400015 	stw	r17,0(sp)
 8016384:	100f883a 	mov	r7,r2
 8016388:	903ee83a 	callr	r18
 801638c:	00ffffc4 	movi	r3,-1
 8016390:	10c0031e 	bne	r2,r3,80163a0 <_wcrtomb_r+0x64>
 8016394:	88000015 	stw	zero,0(r17)
 8016398:	00c02284 	movi	r3,138
 801639c:	80c00015 	stw	r3,0(r16)
 80163a0:	dfc00917 	ldw	ra,36(sp)
 80163a4:	dc800817 	ldw	r18,32(sp)
 80163a8:	dc400717 	ldw	r17,28(sp)
 80163ac:	dc000617 	ldw	r16,24(sp)
 80163b0:	dec00a04 	addi	sp,sp,40
 80163b4:	f800283a 	ret
 80163b8:	800db280 	call	800db28 <__locale_charset>
 80163bc:	8009883a 	mov	r4,r16
 80163c0:	dc400015 	stw	r17,0(sp)
 80163c4:	d9400104 	addi	r5,sp,4
 80163c8:	000d883a 	mov	r6,zero
 80163cc:	100f883a 	mov	r7,r2
 80163d0:	903ee83a 	callr	r18
 80163d4:	003fed06 	br	801638c <__alt_data_end+0xfc01638c>

080163d8 <wcrtomb>:
 80163d8:	defff504 	addi	sp,sp,-44
 80163dc:	dc400515 	stw	r17,20(sp)
 80163e0:	dc000415 	stw	r16,16(sp)
 80163e4:	dfc00a15 	stw	ra,40(sp)
 80163e8:	dd400915 	stw	r21,36(sp)
 80163ec:	dd000815 	stw	r20,32(sp)
 80163f0:	dcc00715 	stw	r19,28(sp)
 80163f4:	dc800615 	stw	r18,24(sp)
 80163f8:	2021883a 	mov	r16,r4
 80163fc:	3023883a 	mov	r17,r6
 8016400:	20001d26 	beq	r4,zero,8016478 <wcrtomb+0xa0>
 8016404:	048200b4 	movhi	r18,2050
 8016408:	94809004 	addi	r18,r18,576
 801640c:	008200b4 	movhi	r2,2050
 8016410:	95400017 	ldw	r21,0(r18)
 8016414:	10809604 	addi	r2,r2,600
 8016418:	15000017 	ldw	r20,0(r2)
 801641c:	2827883a 	mov	r19,r5
 8016420:	800db280 	call	800db28 <__locale_charset>
 8016424:	a809883a 	mov	r4,r21
 8016428:	dc400015 	stw	r17,0(sp)
 801642c:	800b883a 	mov	r5,r16
 8016430:	980d883a 	mov	r6,r19
 8016434:	100f883a 	mov	r7,r2
 8016438:	a03ee83a 	callr	r20
 801643c:	00ffffc4 	movi	r3,-1
 8016440:	10c0041e 	bne	r2,r3,8016454 <wcrtomb+0x7c>
 8016444:	90c00017 	ldw	r3,0(r18)
 8016448:	01002284 	movi	r4,138
 801644c:	88000015 	stw	zero,0(r17)
 8016450:	19000015 	stw	r4,0(r3)
 8016454:	dfc00a17 	ldw	ra,40(sp)
 8016458:	dd400917 	ldw	r21,36(sp)
 801645c:	dd000817 	ldw	r20,32(sp)
 8016460:	dcc00717 	ldw	r19,28(sp)
 8016464:	dc800617 	ldw	r18,24(sp)
 8016468:	dc400517 	ldw	r17,20(sp)
 801646c:	dc000417 	ldw	r16,16(sp)
 8016470:	dec00b04 	addi	sp,sp,44
 8016474:	f800283a 	ret
 8016478:	048200b4 	movhi	r18,2050
 801647c:	94809004 	addi	r18,r18,576
 8016480:	008200b4 	movhi	r2,2050
 8016484:	94c00017 	ldw	r19,0(r18)
 8016488:	10809604 	addi	r2,r2,600
 801648c:	14000017 	ldw	r16,0(r2)
 8016490:	800db280 	call	800db28 <__locale_charset>
 8016494:	9809883a 	mov	r4,r19
 8016498:	dc400015 	stw	r17,0(sp)
 801649c:	d9400104 	addi	r5,sp,4
 80164a0:	000d883a 	mov	r6,zero
 80164a4:	100f883a 	mov	r7,r2
 80164a8:	803ee83a 	callr	r16
 80164ac:	003fe306 	br	801643c <__alt_data_end+0xfc01643c>

080164b0 <__ascii_wctomb>:
 80164b0:	28000526 	beq	r5,zero,80164c8 <__ascii_wctomb+0x18>
 80164b4:	00803fc4 	movi	r2,255
 80164b8:	11800536 	bltu	r2,r6,80164d0 <__ascii_wctomb+0x20>
 80164bc:	29800005 	stb	r6,0(r5)
 80164c0:	00800044 	movi	r2,1
 80164c4:	f800283a 	ret
 80164c8:	0005883a 	mov	r2,zero
 80164cc:	f800283a 	ret
 80164d0:	00802284 	movi	r2,138
 80164d4:	20800015 	stw	r2,0(r4)
 80164d8:	00bfffc4 	movi	r2,-1
 80164dc:	f800283a 	ret

080164e0 <_wctomb_r>:
 80164e0:	008200b4 	movhi	r2,2050
 80164e4:	defff904 	addi	sp,sp,-28
 80164e8:	10809604 	addi	r2,r2,600
 80164ec:	dfc00615 	stw	ra,24(sp)
 80164f0:	dc400515 	stw	r17,20(sp)
 80164f4:	dc000415 	stw	r16,16(sp)
 80164f8:	3823883a 	mov	r17,r7
 80164fc:	14000017 	ldw	r16,0(r2)
 8016500:	d9000115 	stw	r4,4(sp)
 8016504:	d9400215 	stw	r5,8(sp)
 8016508:	d9800315 	stw	r6,12(sp)
 801650c:	800db280 	call	800db28 <__locale_charset>
 8016510:	d9000117 	ldw	r4,4(sp)
 8016514:	d9400217 	ldw	r5,8(sp)
 8016518:	d9800317 	ldw	r6,12(sp)
 801651c:	dc400015 	stw	r17,0(sp)
 8016520:	100f883a 	mov	r7,r2
 8016524:	803ee83a 	callr	r16
 8016528:	dfc00617 	ldw	ra,24(sp)
 801652c:	dc400517 	ldw	r17,20(sp)
 8016530:	dc000417 	ldw	r16,16(sp)
 8016534:	dec00704 	addi	sp,sp,28
 8016538:	f800283a 	ret

0801653c <__muldi3>:
 801653c:	defff604 	addi	sp,sp,-40
 8016540:	dd800615 	stw	r22,24(sp)
 8016544:	dd400515 	stw	r21,20(sp)
 8016548:	25bfffcc 	andi	r22,r4,65535
 801654c:	357fffcc 	andi	r21,r6,65535
 8016550:	dc400115 	stw	r17,4(sp)
 8016554:	2022d43a 	srli	r17,r4,16
 8016558:	dcc00315 	stw	r19,12(sp)
 801655c:	dc800215 	stw	r18,8(sp)
 8016560:	2027883a 	mov	r19,r4
 8016564:	2825883a 	mov	r18,r5
 8016568:	a809883a 	mov	r4,r21
 801656c:	b00b883a 	mov	r5,r22
 8016570:	dfc00915 	stw	ra,36(sp)
 8016574:	df000815 	stw	fp,32(sp)
 8016578:	ddc00715 	stw	r23,28(sp)
 801657c:	3839883a 	mov	fp,r7
 8016580:	302ed43a 	srli	r23,r6,16
 8016584:	dd000415 	stw	r20,16(sp)
 8016588:	dc000015 	stw	r16,0(sp)
 801658c:	3029883a 	mov	r20,r6
 8016590:	800334c0 	call	800334c <__mulsi3>
 8016594:	a809883a 	mov	r4,r21
 8016598:	880b883a 	mov	r5,r17
 801659c:	1021883a 	mov	r16,r2
 80165a0:	800334c0 	call	800334c <__mulsi3>
 80165a4:	880b883a 	mov	r5,r17
 80165a8:	b809883a 	mov	r4,r23
 80165ac:	102b883a 	mov	r21,r2
 80165b0:	800334c0 	call	800334c <__mulsi3>
 80165b4:	b809883a 	mov	r4,r23
 80165b8:	b00b883a 	mov	r5,r22
 80165bc:	1023883a 	mov	r17,r2
 80165c0:	800334c0 	call	800334c <__mulsi3>
 80165c4:	8012d43a 	srli	r9,r16,16
 80165c8:	a885883a 	add	r2,r21,r2
 80165cc:	1251883a 	add	r8,r2,r9
 80165d0:	4540022e 	bgeu	r8,r21,80165dc <__muldi3+0xa0>
 80165d4:	00800074 	movhi	r2,1
 80165d8:	88a3883a 	add	r17,r17,r2
 80165dc:	4006d43a 	srli	r3,r8,16
 80165e0:	4010943a 	slli	r8,r8,16
 80165e4:	9809883a 	mov	r4,r19
 80165e8:	e00b883a 	mov	r5,fp
 80165ec:	843fffcc 	andi	r16,r16,65535
 80165f0:	88e3883a 	add	r17,r17,r3
 80165f4:	4421883a 	add	r16,r8,r16
 80165f8:	800334c0 	call	800334c <__mulsi3>
 80165fc:	a009883a 	mov	r4,r20
 8016600:	900b883a 	mov	r5,r18
 8016604:	1027883a 	mov	r19,r2
 8016608:	800334c0 	call	800334c <__mulsi3>
 801660c:	9885883a 	add	r2,r19,r2
 8016610:	1447883a 	add	r3,r2,r17
 8016614:	8005883a 	mov	r2,r16
 8016618:	dfc00917 	ldw	ra,36(sp)
 801661c:	df000817 	ldw	fp,32(sp)
 8016620:	ddc00717 	ldw	r23,28(sp)
 8016624:	dd800617 	ldw	r22,24(sp)
 8016628:	dd400517 	ldw	r21,20(sp)
 801662c:	dd000417 	ldw	r20,16(sp)
 8016630:	dcc00317 	ldw	r19,12(sp)
 8016634:	dc800217 	ldw	r18,8(sp)
 8016638:	dc400117 	ldw	r17,4(sp)
 801663c:	dc000017 	ldw	r16,0(sp)
 8016640:	dec00a04 	addi	sp,sp,40
 8016644:	f800283a 	ret

08016648 <__fixunsdfsi>:
 8016648:	defffd04 	addi	sp,sp,-12
 801664c:	000d883a 	mov	r6,zero
 8016650:	01d07834 	movhi	r7,16864
 8016654:	dc400115 	stw	r17,4(sp)
 8016658:	dc000015 	stw	r16,0(sp)
 801665c:	dfc00215 	stw	ra,8(sp)
 8016660:	2023883a 	mov	r17,r4
 8016664:	2821883a 	mov	r16,r5
 8016668:	80188c80 	call	80188c8 <__gedf2>
 801666c:	1000080e 	bge	r2,zero,8016690 <__fixunsdfsi+0x48>
 8016670:	8809883a 	mov	r4,r17
 8016674:	800b883a 	mov	r5,r16
 8016678:	8019bc40 	call	8019bc4 <__fixdfsi>
 801667c:	dfc00217 	ldw	ra,8(sp)
 8016680:	dc400117 	ldw	r17,4(sp)
 8016684:	dc000017 	ldw	r16,0(sp)
 8016688:	dec00304 	addi	sp,sp,12
 801668c:	f800283a 	ret
 8016690:	000d883a 	mov	r6,zero
 8016694:	01d07834 	movhi	r7,16864
 8016698:	8809883a 	mov	r4,r17
 801669c:	800b883a 	mov	r5,r16
 80166a0:	80192f40 	call	80192f4 <__subdf3>
 80166a4:	180b883a 	mov	r5,r3
 80166a8:	1009883a 	mov	r4,r2
 80166ac:	8019bc40 	call	8019bc4 <__fixdfsi>
 80166b0:	00e00034 	movhi	r3,32768
 80166b4:	10c5883a 	add	r2,r2,r3
 80166b8:	003ff006 	br	801667c <__alt_data_end+0xfc01667c>

080166bc <__udivdi3>:
 80166bc:	defff504 	addi	sp,sp,-44
 80166c0:	dcc00415 	stw	r19,16(sp)
 80166c4:	dc000115 	stw	r16,4(sp)
 80166c8:	dfc00a15 	stw	ra,40(sp)
 80166cc:	df000915 	stw	fp,36(sp)
 80166d0:	ddc00815 	stw	r23,32(sp)
 80166d4:	dd800715 	stw	r22,28(sp)
 80166d8:	dd400615 	stw	r21,24(sp)
 80166dc:	dd000515 	stw	r20,20(sp)
 80166e0:	dc800315 	stw	r18,12(sp)
 80166e4:	dc400215 	stw	r17,8(sp)
 80166e8:	2027883a 	mov	r19,r4
 80166ec:	2821883a 	mov	r16,r5
 80166f0:	3800471e 	bne	r7,zero,8016810 <__udivdi3+0x154>
 80166f4:	3025883a 	mov	r18,r6
 80166f8:	2023883a 	mov	r17,r4
 80166fc:	2980592e 	bgeu	r5,r6,8016864 <__udivdi3+0x1a8>
 8016700:	00bfffd4 	movui	r2,65535
 8016704:	2829883a 	mov	r20,r5
 8016708:	1180b236 	bltu	r2,r6,80169d4 <__udivdi3+0x318>
 801670c:	00803fc4 	movi	r2,255
 8016710:	1181622e 	bgeu	r2,r6,8016c9c <__udivdi3+0x5e0>
 8016714:	00800204 	movi	r2,8
 8016718:	1007883a 	mov	r3,r2
 801671c:	3084d83a 	srl	r2,r6,r2
 8016720:	010200b4 	movhi	r4,2050
 8016724:	21391504 	addi	r4,r4,-7084
 8016728:	2085883a 	add	r2,r4,r2
 801672c:	11000003 	ldbu	r4,0(r2)
 8016730:	20c9883a 	add	r4,r4,r3
 8016734:	00c00804 	movi	r3,32
 8016738:	1907c83a 	sub	r3,r3,r4
 801673c:	18000526 	beq	r3,zero,8016754 <__udivdi3+0x98>
 8016740:	80e0983a 	sll	r16,r16,r3
 8016744:	9908d83a 	srl	r4,r19,r4
 8016748:	30e4983a 	sll	r18,r6,r3
 801674c:	98e2983a 	sll	r17,r19,r3
 8016750:	8128b03a 	or	r20,r16,r4
 8016754:	902ad43a 	srli	r21,r18,16
 8016758:	a009883a 	mov	r4,r20
 801675c:	95bfffcc 	andi	r22,r18,65535
 8016760:	a80b883a 	mov	r5,r21
 8016764:	801743c0 	call	801743c <__umodsi3>
 8016768:	a009883a 	mov	r4,r20
 801676c:	a80b883a 	mov	r5,r21
 8016770:	102f883a 	mov	r23,r2
 8016774:	80174340 	call	8017434 <__udivsi3>
 8016778:	1009883a 	mov	r4,r2
 801677c:	b00b883a 	mov	r5,r22
 8016780:	1021883a 	mov	r16,r2
 8016784:	800334c0 	call	800334c <__mulsi3>
 8016788:	b82e943a 	slli	r23,r23,16
 801678c:	8808d43a 	srli	r4,r17,16
 8016790:	b906b03a 	or	r3,r23,r4
 8016794:	1880052e 	bgeu	r3,r2,80167ac <__udivdi3+0xf0>
 8016798:	1c87883a 	add	r3,r3,r18
 801679c:	813fffc4 	addi	r4,r16,-1
 80167a0:	1c800136 	bltu	r3,r18,80167a8 <__udivdi3+0xec>
 80167a4:	18815236 	bltu	r3,r2,8016cf0 <__udivdi3+0x634>
 80167a8:	2021883a 	mov	r16,r4
 80167ac:	18a7c83a 	sub	r19,r3,r2
 80167b0:	9809883a 	mov	r4,r19
 80167b4:	a80b883a 	mov	r5,r21
 80167b8:	801743c0 	call	801743c <__umodsi3>
 80167bc:	1029883a 	mov	r20,r2
 80167c0:	9809883a 	mov	r4,r19
 80167c4:	a80b883a 	mov	r5,r21
 80167c8:	a028943a 	slli	r20,r20,16
 80167cc:	80174340 	call	8017434 <__udivsi3>
 80167d0:	1009883a 	mov	r4,r2
 80167d4:	b00b883a 	mov	r5,r22
 80167d8:	8c7fffcc 	andi	r17,r17,65535
 80167dc:	1027883a 	mov	r19,r2
 80167e0:	a462b03a 	or	r17,r20,r17
 80167e4:	800334c0 	call	800334c <__mulsi3>
 80167e8:	8880052e 	bgeu	r17,r2,8016800 <__udivdi3+0x144>
 80167ec:	8ca3883a 	add	r17,r17,r18
 80167f0:	98ffffc4 	addi	r3,r19,-1
 80167f4:	8c811036 	bltu	r17,r18,8016c38 <__udivdi3+0x57c>
 80167f8:	88810f2e 	bgeu	r17,r2,8016c38 <__udivdi3+0x57c>
 80167fc:	9cffff84 	addi	r19,r19,-2
 8016800:	8020943a 	slli	r16,r16,16
 8016804:	0007883a 	mov	r3,zero
 8016808:	9c04b03a 	or	r2,r19,r16
 801680c:	00006006 	br	8016990 <__udivdi3+0x2d4>
 8016810:	29c05d36 	bltu	r5,r7,8016988 <__udivdi3+0x2cc>
 8016814:	00bfffd4 	movui	r2,65535
 8016818:	11c0692e 	bgeu	r2,r7,80169c0 <__udivdi3+0x304>
 801681c:	00804034 	movhi	r2,256
 8016820:	10bfffc4 	addi	r2,r2,-1
 8016824:	11c10e2e 	bgeu	r2,r7,8016c60 <__udivdi3+0x5a4>
 8016828:	01400604 	movi	r5,24
 801682c:	2811883a 	mov	r8,r5
 8016830:	394ad83a 	srl	r5,r7,r5
 8016834:	008200b4 	movhi	r2,2050
 8016838:	10b91504 	addi	r2,r2,-7084
 801683c:	114b883a 	add	r5,r2,r5
 8016840:	29400003 	ldbu	r5,0(r5)
 8016844:	00c00804 	movi	r3,32
 8016848:	2a0b883a 	add	r5,r5,r8
 801684c:	196fc83a 	sub	r23,r3,r5
 8016850:	b8006b1e 	bne	r23,zero,8016a00 <__udivdi3+0x344>
 8016854:	3c011436 	bltu	r7,r16,8016ca8 <__udivdi3+0x5ec>
 8016858:	9985403a 	cmpgeu	r2,r19,r6
 801685c:	0007883a 	mov	r3,zero
 8016860:	00004b06 	br	8016990 <__udivdi3+0x2d4>
 8016864:	3000041e 	bne	r6,zero,8016878 <__udivdi3+0x1bc>
 8016868:	01000044 	movi	r4,1
 801686c:	000b883a 	mov	r5,zero
 8016870:	80174340 	call	8017434 <__udivsi3>
 8016874:	1025883a 	mov	r18,r2
 8016878:	00bfffd4 	movui	r2,65535
 801687c:	14805b2e 	bgeu	r2,r18,80169ec <__udivdi3+0x330>
 8016880:	00804034 	movhi	r2,256
 8016884:	10bfffc4 	addi	r2,r2,-1
 8016888:	1480fe2e 	bgeu	r2,r18,8016c84 <__udivdi3+0x5c8>
 801688c:	00800604 	movi	r2,24
 8016890:	1007883a 	mov	r3,r2
 8016894:	9084d83a 	srl	r2,r18,r2
 8016898:	010200b4 	movhi	r4,2050
 801689c:	21391504 	addi	r4,r4,-7084
 80168a0:	2085883a 	add	r2,r4,r2
 80168a4:	11800003 	ldbu	r6,0(r2)
 80168a8:	01c00804 	movi	r7,32
 80168ac:	30c7883a 	add	r3,r6,r3
 80168b0:	38cfc83a 	sub	r7,r7,r3
 80168b4:	3800a71e 	bne	r7,zero,8016b54 <__udivdi3+0x498>
 80168b8:	9028d43a 	srli	r20,r18,16
 80168bc:	84a1c83a 	sub	r16,r16,r18
 80168c0:	957fffcc 	andi	r21,r18,65535
 80168c4:	00c00044 	movi	r3,1
 80168c8:	8009883a 	mov	r4,r16
 80168cc:	a00b883a 	mov	r5,r20
 80168d0:	d8c00015 	stw	r3,0(sp)
 80168d4:	801743c0 	call	801743c <__umodsi3>
 80168d8:	8009883a 	mov	r4,r16
 80168dc:	a00b883a 	mov	r5,r20
 80168e0:	102d883a 	mov	r22,r2
 80168e4:	80174340 	call	8017434 <__udivsi3>
 80168e8:	1009883a 	mov	r4,r2
 80168ec:	a80b883a 	mov	r5,r21
 80168f0:	1021883a 	mov	r16,r2
 80168f4:	800334c0 	call	800334c <__mulsi3>
 80168f8:	b02c943a 	slli	r22,r22,16
 80168fc:	880ed43a 	srli	r7,r17,16
 8016900:	d8c00017 	ldw	r3,0(sp)
 8016904:	b1ccb03a 	or	r6,r22,r7
 8016908:	3080052e 	bgeu	r6,r2,8016920 <__udivdi3+0x264>
 801690c:	348d883a 	add	r6,r6,r18
 8016910:	813fffc4 	addi	r4,r16,-1
 8016914:	34800136 	bltu	r6,r18,801691c <__udivdi3+0x260>
 8016918:	3080f236 	bltu	r6,r2,8016ce4 <__udivdi3+0x628>
 801691c:	2021883a 	mov	r16,r4
 8016920:	30a7c83a 	sub	r19,r6,r2
 8016924:	9809883a 	mov	r4,r19
 8016928:	a00b883a 	mov	r5,r20
 801692c:	d8c00015 	stw	r3,0(sp)
 8016930:	801743c0 	call	801743c <__umodsi3>
 8016934:	102d883a 	mov	r22,r2
 8016938:	9809883a 	mov	r4,r19
 801693c:	a00b883a 	mov	r5,r20
 8016940:	b02c943a 	slli	r22,r22,16
 8016944:	80174340 	call	8017434 <__udivsi3>
 8016948:	1009883a 	mov	r4,r2
 801694c:	a80b883a 	mov	r5,r21
 8016950:	8c7fffcc 	andi	r17,r17,65535
 8016954:	1027883a 	mov	r19,r2
 8016958:	b462b03a 	or	r17,r22,r17
 801695c:	800334c0 	call	800334c <__mulsi3>
 8016960:	d8c00017 	ldw	r3,0(sp)
 8016964:	8880052e 	bgeu	r17,r2,801697c <__udivdi3+0x2c0>
 8016968:	8ca3883a 	add	r17,r17,r18
 801696c:	993fffc4 	addi	r4,r19,-1
 8016970:	8c80af36 	bltu	r17,r18,8016c30 <__udivdi3+0x574>
 8016974:	8880ae2e 	bgeu	r17,r2,8016c30 <__udivdi3+0x574>
 8016978:	9cffff84 	addi	r19,r19,-2
 801697c:	8020943a 	slli	r16,r16,16
 8016980:	9c04b03a 	or	r2,r19,r16
 8016984:	00000206 	br	8016990 <__udivdi3+0x2d4>
 8016988:	0007883a 	mov	r3,zero
 801698c:	0005883a 	mov	r2,zero
 8016990:	dfc00a17 	ldw	ra,40(sp)
 8016994:	df000917 	ldw	fp,36(sp)
 8016998:	ddc00817 	ldw	r23,32(sp)
 801699c:	dd800717 	ldw	r22,28(sp)
 80169a0:	dd400617 	ldw	r21,24(sp)
 80169a4:	dd000517 	ldw	r20,20(sp)
 80169a8:	dcc00417 	ldw	r19,16(sp)
 80169ac:	dc800317 	ldw	r18,12(sp)
 80169b0:	dc400217 	ldw	r17,8(sp)
 80169b4:	dc000117 	ldw	r16,4(sp)
 80169b8:	dec00b04 	addi	sp,sp,44
 80169bc:	f800283a 	ret
 80169c0:	00803fc4 	movi	r2,255
 80169c4:	11c0a92e 	bgeu	r2,r7,8016c6c <__udivdi3+0x5b0>
 80169c8:	01400204 	movi	r5,8
 80169cc:	2811883a 	mov	r8,r5
 80169d0:	003f9706 	br	8016830 <__alt_data_end+0xfc016830>
 80169d4:	00804034 	movhi	r2,256
 80169d8:	10bfffc4 	addi	r2,r2,-1
 80169dc:	1180a62e 	bgeu	r2,r6,8016c78 <__udivdi3+0x5bc>
 80169e0:	00800604 	movi	r2,24
 80169e4:	1007883a 	mov	r3,r2
 80169e8:	003f4c06 	br	801671c <__alt_data_end+0xfc01671c>
 80169ec:	00803fc4 	movi	r2,255
 80169f0:	1480a72e 	bgeu	r2,r18,8016c90 <__udivdi3+0x5d4>
 80169f4:	00800204 	movi	r2,8
 80169f8:	1007883a 	mov	r3,r2
 80169fc:	003fa506 	br	8016894 <__alt_data_end+0xfc016894>
 8016a00:	3178d83a 	srl	fp,r6,r5
 8016a04:	3dce983a 	sll	r7,r7,r23
 8016a08:	8168d83a 	srl	r20,r16,r5
 8016a0c:	9950d83a 	srl	r8,r19,r5
 8016a10:	3f38b03a 	or	fp,r7,fp
 8016a14:	e024d43a 	srli	r18,fp,16
 8016a18:	85e0983a 	sll	r16,r16,r23
 8016a1c:	a009883a 	mov	r4,r20
 8016a20:	900b883a 	mov	r5,r18
 8016a24:	8220b03a 	or	r16,r16,r8
 8016a28:	35ea983a 	sll	r21,r6,r23
 8016a2c:	801743c0 	call	801743c <__umodsi3>
 8016a30:	a009883a 	mov	r4,r20
 8016a34:	900b883a 	mov	r5,r18
 8016a38:	1023883a 	mov	r17,r2
 8016a3c:	e5bfffcc 	andi	r22,fp,65535
 8016a40:	80174340 	call	8017434 <__udivsi3>
 8016a44:	1009883a 	mov	r4,r2
 8016a48:	b00b883a 	mov	r5,r22
 8016a4c:	1029883a 	mov	r20,r2
 8016a50:	800334c0 	call	800334c <__mulsi3>
 8016a54:	8806943a 	slli	r3,r17,16
 8016a58:	8014d43a 	srli	r10,r16,16
 8016a5c:	1a92b03a 	or	r9,r3,r10
 8016a60:	4880042e 	bgeu	r9,r2,8016a74 <__udivdi3+0x3b8>
 8016a64:	4f13883a 	add	r9,r9,fp
 8016a68:	a0ffffc4 	addi	r3,r20,-1
 8016a6c:	4f00952e 	bgeu	r9,fp,8016cc4 <__udivdi3+0x608>
 8016a70:	1829883a 	mov	r20,r3
 8016a74:	48a3c83a 	sub	r17,r9,r2
 8016a78:	8809883a 	mov	r4,r17
 8016a7c:	900b883a 	mov	r5,r18
 8016a80:	801743c0 	call	801743c <__umodsi3>
 8016a84:	8809883a 	mov	r4,r17
 8016a88:	900b883a 	mov	r5,r18
 8016a8c:	d8800015 	stw	r2,0(sp)
 8016a90:	80174340 	call	8017434 <__udivsi3>
 8016a94:	1009883a 	mov	r4,r2
 8016a98:	b00b883a 	mov	r5,r22
 8016a9c:	1023883a 	mov	r17,r2
 8016aa0:	800334c0 	call	800334c <__mulsi3>
 8016aa4:	d8c00017 	ldw	r3,0(sp)
 8016aa8:	823fffcc 	andi	r8,r16,65535
 8016aac:	1806943a 	slli	r3,r3,16
 8016ab0:	1a20b03a 	or	r16,r3,r8
 8016ab4:	8080042e 	bgeu	r16,r2,8016ac8 <__udivdi3+0x40c>
 8016ab8:	8721883a 	add	r16,r16,fp
 8016abc:	88ffffc4 	addi	r3,r17,-1
 8016ac0:	87007c2e 	bgeu	r16,fp,8016cb4 <__udivdi3+0x5f8>
 8016ac4:	1823883a 	mov	r17,r3
 8016ac8:	a028943a 	slli	r20,r20,16
 8016acc:	acbfffcc 	andi	r18,r21,65535
 8016ad0:	900b883a 	mov	r5,r18
 8016ad4:	8d28b03a 	or	r20,r17,r20
 8016ad8:	a022d43a 	srli	r17,r20,16
 8016adc:	a5bfffcc 	andi	r22,r20,65535
 8016ae0:	b009883a 	mov	r4,r22
 8016ae4:	a82ad43a 	srli	r21,r21,16
 8016ae8:	80a1c83a 	sub	r16,r16,r2
 8016aec:	800334c0 	call	800334c <__mulsi3>
 8016af0:	8809883a 	mov	r4,r17
 8016af4:	900b883a 	mov	r5,r18
 8016af8:	1039883a 	mov	fp,r2
 8016afc:	800334c0 	call	800334c <__mulsi3>
 8016b00:	8809883a 	mov	r4,r17
 8016b04:	a80b883a 	mov	r5,r21
 8016b08:	1025883a 	mov	r18,r2
 8016b0c:	800334c0 	call	800334c <__mulsi3>
 8016b10:	b009883a 	mov	r4,r22
 8016b14:	a80b883a 	mov	r5,r21
 8016b18:	1023883a 	mov	r17,r2
 8016b1c:	800334c0 	call	800334c <__mulsi3>
 8016b20:	e006d43a 	srli	r3,fp,16
 8016b24:	9085883a 	add	r2,r18,r2
 8016b28:	10c7883a 	add	r3,r2,r3
 8016b2c:	1c80022e 	bgeu	r3,r18,8016b38 <__udivdi3+0x47c>
 8016b30:	00800074 	movhi	r2,1
 8016b34:	88a3883a 	add	r17,r17,r2
 8016b38:	1808d43a 	srli	r4,r3,16
 8016b3c:	8909883a 	add	r4,r17,r4
 8016b40:	81004436 	bltu	r16,r4,8016c54 <__udivdi3+0x598>
 8016b44:	81003e26 	beq	r16,r4,8016c40 <__udivdi3+0x584>
 8016b48:	a005883a 	mov	r2,r20
 8016b4c:	0007883a 	mov	r3,zero
 8016b50:	003f8f06 	br	8016990 <__alt_data_end+0xfc016990>
 8016b54:	91e4983a 	sll	r18,r18,r7
 8016b58:	80eed83a 	srl	r23,r16,r3
 8016b5c:	81cc983a 	sll	r6,r16,r7
 8016b60:	9028d43a 	srli	r20,r18,16
 8016b64:	98c6d83a 	srl	r3,r19,r3
 8016b68:	b809883a 	mov	r4,r23
 8016b6c:	a00b883a 	mov	r5,r20
 8016b70:	30ecb03a 	or	r22,r6,r3
 8016b74:	99e2983a 	sll	r17,r19,r7
 8016b78:	801743c0 	call	801743c <__umodsi3>
 8016b7c:	b809883a 	mov	r4,r23
 8016b80:	a00b883a 	mov	r5,r20
 8016b84:	1021883a 	mov	r16,r2
 8016b88:	957fffcc 	andi	r21,r18,65535
 8016b8c:	80174340 	call	8017434 <__udivsi3>
 8016b90:	a80b883a 	mov	r5,r21
 8016b94:	1009883a 	mov	r4,r2
 8016b98:	102f883a 	mov	r23,r2
 8016b9c:	800334c0 	call	800334c <__mulsi3>
 8016ba0:	8020943a 	slli	r16,r16,16
 8016ba4:	b00ad43a 	srli	r5,r22,16
 8016ba8:	814cb03a 	or	r6,r16,r5
 8016bac:	3080062e 	bgeu	r6,r2,8016bc8 <__udivdi3+0x50c>
 8016bb0:	348d883a 	add	r6,r6,r18
 8016bb4:	b8ffffc4 	addi	r3,r23,-1
 8016bb8:	34804836 	bltu	r6,r18,8016cdc <__udivdi3+0x620>
 8016bbc:	3080472e 	bgeu	r6,r2,8016cdc <__udivdi3+0x620>
 8016bc0:	bdffff84 	addi	r23,r23,-2
 8016bc4:	348d883a 	add	r6,r6,r18
 8016bc8:	30a7c83a 	sub	r19,r6,r2
 8016bcc:	9809883a 	mov	r4,r19
 8016bd0:	a00b883a 	mov	r5,r20
 8016bd4:	801743c0 	call	801743c <__umodsi3>
 8016bd8:	9809883a 	mov	r4,r19
 8016bdc:	a00b883a 	mov	r5,r20
 8016be0:	1039883a 	mov	fp,r2
 8016be4:	80174340 	call	8017434 <__udivsi3>
 8016be8:	1009883a 	mov	r4,r2
 8016bec:	a80b883a 	mov	r5,r21
 8016bf0:	e038943a 	slli	fp,fp,16
 8016bf4:	1027883a 	mov	r19,r2
 8016bf8:	800334c0 	call	800334c <__mulsi3>
 8016bfc:	b1bfffcc 	andi	r6,r22,65535
 8016c00:	e18cb03a 	or	r6,fp,r6
 8016c04:	3080062e 	bgeu	r6,r2,8016c20 <__udivdi3+0x564>
 8016c08:	348d883a 	add	r6,r6,r18
 8016c0c:	98ffffc4 	addi	r3,r19,-1
 8016c10:	34803036 	bltu	r6,r18,8016cd4 <__udivdi3+0x618>
 8016c14:	30802f2e 	bgeu	r6,r2,8016cd4 <__udivdi3+0x618>
 8016c18:	9cffff84 	addi	r19,r19,-2
 8016c1c:	348d883a 	add	r6,r6,r18
 8016c20:	b82e943a 	slli	r23,r23,16
 8016c24:	30a1c83a 	sub	r16,r6,r2
 8016c28:	9dc6b03a 	or	r3,r19,r23
 8016c2c:	003f2606 	br	80168c8 <__alt_data_end+0xfc0168c8>
 8016c30:	2027883a 	mov	r19,r4
 8016c34:	003f5106 	br	801697c <__alt_data_end+0xfc01697c>
 8016c38:	1827883a 	mov	r19,r3
 8016c3c:	003ef006 	br	8016800 <__alt_data_end+0xfc016800>
 8016c40:	1808943a 	slli	r4,r3,16
 8016c44:	9dc6983a 	sll	r3,r19,r23
 8016c48:	e73fffcc 	andi	fp,fp,65535
 8016c4c:	2709883a 	add	r4,r4,fp
 8016c50:	193fbd2e 	bgeu	r3,r4,8016b48 <__alt_data_end+0xfc016b48>
 8016c54:	a0bfffc4 	addi	r2,r20,-1
 8016c58:	0007883a 	mov	r3,zero
 8016c5c:	003f4c06 	br	8016990 <__alt_data_end+0xfc016990>
 8016c60:	01400404 	movi	r5,16
 8016c64:	2811883a 	mov	r8,r5
 8016c68:	003ef106 	br	8016830 <__alt_data_end+0xfc016830>
 8016c6c:	000b883a 	mov	r5,zero
 8016c70:	0011883a 	mov	r8,zero
 8016c74:	003eee06 	br	8016830 <__alt_data_end+0xfc016830>
 8016c78:	00800404 	movi	r2,16
 8016c7c:	1007883a 	mov	r3,r2
 8016c80:	003ea606 	br	801671c <__alt_data_end+0xfc01671c>
 8016c84:	00800404 	movi	r2,16
 8016c88:	1007883a 	mov	r3,r2
 8016c8c:	003f0106 	br	8016894 <__alt_data_end+0xfc016894>
 8016c90:	0005883a 	mov	r2,zero
 8016c94:	0007883a 	mov	r3,zero
 8016c98:	003efe06 	br	8016894 <__alt_data_end+0xfc016894>
 8016c9c:	0005883a 	mov	r2,zero
 8016ca0:	0007883a 	mov	r3,zero
 8016ca4:	003e9d06 	br	801671c <__alt_data_end+0xfc01671c>
 8016ca8:	0007883a 	mov	r3,zero
 8016cac:	00800044 	movi	r2,1
 8016cb0:	003f3706 	br	8016990 <__alt_data_end+0xfc016990>
 8016cb4:	80bf832e 	bgeu	r16,r2,8016ac4 <__alt_data_end+0xfc016ac4>
 8016cb8:	8c7fff84 	addi	r17,r17,-2
 8016cbc:	8721883a 	add	r16,r16,fp
 8016cc0:	003f8106 	br	8016ac8 <__alt_data_end+0xfc016ac8>
 8016cc4:	48bf6a2e 	bgeu	r9,r2,8016a70 <__alt_data_end+0xfc016a70>
 8016cc8:	a53fff84 	addi	r20,r20,-2
 8016ccc:	4f13883a 	add	r9,r9,fp
 8016cd0:	003f6806 	br	8016a74 <__alt_data_end+0xfc016a74>
 8016cd4:	1827883a 	mov	r19,r3
 8016cd8:	003fd106 	br	8016c20 <__alt_data_end+0xfc016c20>
 8016cdc:	182f883a 	mov	r23,r3
 8016ce0:	003fb906 	br	8016bc8 <__alt_data_end+0xfc016bc8>
 8016ce4:	843fff84 	addi	r16,r16,-2
 8016ce8:	348d883a 	add	r6,r6,r18
 8016cec:	003f0c06 	br	8016920 <__alt_data_end+0xfc016920>
 8016cf0:	843fff84 	addi	r16,r16,-2
 8016cf4:	1c87883a 	add	r3,r3,r18
 8016cf8:	003eac06 	br	80167ac <__alt_data_end+0xfc0167ac>

08016cfc <__umoddi3>:
 8016cfc:	defff404 	addi	sp,sp,-48
 8016d00:	dd800815 	stw	r22,32(sp)
 8016d04:	dc400315 	stw	r17,12(sp)
 8016d08:	dc000215 	stw	r16,8(sp)
 8016d0c:	dfc00b15 	stw	ra,44(sp)
 8016d10:	df000a15 	stw	fp,40(sp)
 8016d14:	ddc00915 	stw	r23,36(sp)
 8016d18:	dd400715 	stw	r21,28(sp)
 8016d1c:	dd000615 	stw	r20,24(sp)
 8016d20:	dcc00515 	stw	r19,20(sp)
 8016d24:	dc800415 	stw	r18,16(sp)
 8016d28:	2021883a 	mov	r16,r4
 8016d2c:	2823883a 	mov	r17,r5
 8016d30:	282d883a 	mov	r22,r5
 8016d34:	38003c1e 	bne	r7,zero,8016e28 <__umoddi3+0x12c>
 8016d38:	3027883a 	mov	r19,r6
 8016d3c:	2029883a 	mov	r20,r4
 8016d40:	2980522e 	bgeu	r5,r6,8016e8c <__umoddi3+0x190>
 8016d44:	00bfffd4 	movui	r2,65535
 8016d48:	1180a436 	bltu	r2,r6,8016fdc <__umoddi3+0x2e0>
 8016d4c:	00803fc4 	movi	r2,255
 8016d50:	11815e2e 	bgeu	r2,r6,80172cc <__umoddi3+0x5d0>
 8016d54:	01400204 	movi	r5,8
 8016d58:	2805883a 	mov	r2,r5
 8016d5c:	314ad83a 	srl	r5,r6,r5
 8016d60:	00c200b4 	movhi	r3,2050
 8016d64:	18f91504 	addi	r3,r3,-7084
 8016d68:	194b883a 	add	r5,r3,r5
 8016d6c:	29000003 	ldbu	r4,0(r5)
 8016d70:	2089883a 	add	r4,r4,r2
 8016d74:	00800804 	movi	r2,32
 8016d78:	1105c83a 	sub	r2,r2,r4
 8016d7c:	10010c26 	beq	r2,zero,80171b0 <__umoddi3+0x4b4>
 8016d80:	88a2983a 	sll	r17,r17,r2
 8016d84:	8108d83a 	srl	r4,r16,r4
 8016d88:	30a6983a 	sll	r19,r6,r2
 8016d8c:	80a8983a 	sll	r20,r16,r2
 8016d90:	1025883a 	mov	r18,r2
 8016d94:	892cb03a 	or	r22,r17,r4
 8016d98:	9822d43a 	srli	r17,r19,16
 8016d9c:	b009883a 	mov	r4,r22
 8016da0:	9d7fffcc 	andi	r21,r19,65535
 8016da4:	880b883a 	mov	r5,r17
 8016da8:	801743c0 	call	801743c <__umodsi3>
 8016dac:	b009883a 	mov	r4,r22
 8016db0:	880b883a 	mov	r5,r17
 8016db4:	102f883a 	mov	r23,r2
 8016db8:	80174340 	call	8017434 <__udivsi3>
 8016dbc:	1009883a 	mov	r4,r2
 8016dc0:	a80b883a 	mov	r5,r21
 8016dc4:	800334c0 	call	800334c <__mulsi3>
 8016dc8:	b82e943a 	slli	r23,r23,16
 8016dcc:	a008d43a 	srli	r4,r20,16
 8016dd0:	b906b03a 	or	r3,r23,r4
 8016dd4:	1880042e 	bgeu	r3,r2,8016de8 <__umoddi3+0xec>
 8016dd8:	1cc7883a 	add	r3,r3,r19
 8016ddc:	1cc00236 	bltu	r3,r19,8016de8 <__umoddi3+0xec>
 8016de0:	1880012e 	bgeu	r3,r2,8016de8 <__umoddi3+0xec>
 8016de4:	1cc7883a 	add	r3,r3,r19
 8016de8:	18a1c83a 	sub	r16,r3,r2
 8016dec:	8009883a 	mov	r4,r16
 8016df0:	880b883a 	mov	r5,r17
 8016df4:	801743c0 	call	801743c <__umodsi3>
 8016df8:	8009883a 	mov	r4,r16
 8016dfc:	880b883a 	mov	r5,r17
 8016e00:	102d883a 	mov	r22,r2
 8016e04:	80174340 	call	8017434 <__udivsi3>
 8016e08:	1009883a 	mov	r4,r2
 8016e0c:	a80b883a 	mov	r5,r21
 8016e10:	b02c943a 	slli	r22,r22,16
 8016e14:	800334c0 	call	800334c <__mulsi3>
 8016e18:	a13fffcc 	andi	r4,r20,65535
 8016e1c:	b106b03a 	or	r3,r22,r4
 8016e20:	1880572e 	bgeu	r3,r2,8016f80 <__umoddi3+0x284>
 8016e24:	00005206 	br	8016f70 <__umoddi3+0x274>
 8016e28:	29c05936 	bltu	r5,r7,8016f90 <__umoddi3+0x294>
 8016e2c:	00bfffd4 	movui	r2,65535
 8016e30:	11c0652e 	bgeu	r2,r7,8016fc8 <__umoddi3+0x2cc>
 8016e34:	00804034 	movhi	r2,256
 8016e38:	10bfffc4 	addi	r2,r2,-1
 8016e3c:	11c1172e 	bgeu	r2,r7,801729c <__umoddi3+0x5a0>
 8016e40:	01400604 	movi	r5,24
 8016e44:	282b883a 	mov	r21,r5
 8016e48:	394ad83a 	srl	r5,r7,r5
 8016e4c:	00c200b4 	movhi	r3,2050
 8016e50:	18f91504 	addi	r3,r3,-7084
 8016e54:	194b883a 	add	r5,r3,r5
 8016e58:	28800003 	ldbu	r2,0(r5)
 8016e5c:	00c00804 	movi	r3,32
 8016e60:	156b883a 	add	r21,r2,r21
 8016e64:	1d69c83a 	sub	r20,r3,r21
 8016e68:	a000671e 	bne	r20,zero,8017008 <__umoddi3+0x30c>
 8016e6c:	3c400136 	bltu	r7,r17,8016e74 <__umoddi3+0x178>
 8016e70:	81812336 	bltu	r16,r6,8017300 <__umoddi3+0x604>
 8016e74:	8185c83a 	sub	r2,r16,r6
 8016e78:	89e3c83a 	sub	r17,r17,r7
 8016e7c:	8087803a 	cmpltu	r3,r16,r2
 8016e80:	88edc83a 	sub	r22,r17,r3
 8016e84:	b007883a 	mov	r3,r22
 8016e88:	00004306 	br	8016f98 <__umoddi3+0x29c>
 8016e8c:	3000041e 	bne	r6,zero,8016ea0 <__umoddi3+0x1a4>
 8016e90:	01000044 	movi	r4,1
 8016e94:	000b883a 	mov	r5,zero
 8016e98:	80174340 	call	8017434 <__udivsi3>
 8016e9c:	1027883a 	mov	r19,r2
 8016ea0:	00bfffd4 	movui	r2,65535
 8016ea4:	14c0532e 	bgeu	r2,r19,8016ff4 <__umoddi3+0x2f8>
 8016ea8:	00804034 	movhi	r2,256
 8016eac:	10bfffc4 	addi	r2,r2,-1
 8016eb0:	14c1032e 	bgeu	r2,r19,80172c0 <__umoddi3+0x5c4>
 8016eb4:	00800604 	movi	r2,24
 8016eb8:	1007883a 	mov	r3,r2
 8016ebc:	9884d83a 	srl	r2,r19,r2
 8016ec0:	010200b4 	movhi	r4,2050
 8016ec4:	21391504 	addi	r4,r4,-7084
 8016ec8:	2085883a 	add	r2,r4,r2
 8016ecc:	11000003 	ldbu	r4,0(r2)
 8016ed0:	00800804 	movi	r2,32
 8016ed4:	20c7883a 	add	r3,r4,r3
 8016ed8:	10c5c83a 	sub	r2,r2,r3
 8016edc:	1000b61e 	bne	r2,zero,80171b8 <__umoddi3+0x4bc>
 8016ee0:	982ad43a 	srli	r21,r19,16
 8016ee4:	8ce3c83a 	sub	r17,r17,r19
 8016ee8:	9dbfffcc 	andi	r22,r19,65535
 8016eec:	0025883a 	mov	r18,zero
 8016ef0:	8809883a 	mov	r4,r17
 8016ef4:	a80b883a 	mov	r5,r21
 8016ef8:	801743c0 	call	801743c <__umodsi3>
 8016efc:	8809883a 	mov	r4,r17
 8016f00:	a80b883a 	mov	r5,r21
 8016f04:	102f883a 	mov	r23,r2
 8016f08:	80174340 	call	8017434 <__udivsi3>
 8016f0c:	1009883a 	mov	r4,r2
 8016f10:	b00b883a 	mov	r5,r22
 8016f14:	800334c0 	call	800334c <__mulsi3>
 8016f18:	b82e943a 	slli	r23,r23,16
 8016f1c:	a008d43a 	srli	r4,r20,16
 8016f20:	b906b03a 	or	r3,r23,r4
 8016f24:	1880032e 	bgeu	r3,r2,8016f34 <__umoddi3+0x238>
 8016f28:	1cc7883a 	add	r3,r3,r19
 8016f2c:	1cc00136 	bltu	r3,r19,8016f34 <__umoddi3+0x238>
 8016f30:	1880f136 	bltu	r3,r2,80172f8 <__umoddi3+0x5fc>
 8016f34:	18a1c83a 	sub	r16,r3,r2
 8016f38:	8009883a 	mov	r4,r16
 8016f3c:	a80b883a 	mov	r5,r21
 8016f40:	801743c0 	call	801743c <__umodsi3>
 8016f44:	8009883a 	mov	r4,r16
 8016f48:	a80b883a 	mov	r5,r21
 8016f4c:	1023883a 	mov	r17,r2
 8016f50:	80174340 	call	8017434 <__udivsi3>
 8016f54:	1009883a 	mov	r4,r2
 8016f58:	b00b883a 	mov	r5,r22
 8016f5c:	8822943a 	slli	r17,r17,16
 8016f60:	800334c0 	call	800334c <__mulsi3>
 8016f64:	a13fffcc 	andi	r4,r20,65535
 8016f68:	8906b03a 	or	r3,r17,r4
 8016f6c:	1880042e 	bgeu	r3,r2,8016f80 <__umoddi3+0x284>
 8016f70:	1cc7883a 	add	r3,r3,r19
 8016f74:	1cc00236 	bltu	r3,r19,8016f80 <__umoddi3+0x284>
 8016f78:	1880012e 	bgeu	r3,r2,8016f80 <__umoddi3+0x284>
 8016f7c:	1cc7883a 	add	r3,r3,r19
 8016f80:	1887c83a 	sub	r3,r3,r2
 8016f84:	1c84d83a 	srl	r2,r3,r18
 8016f88:	0007883a 	mov	r3,zero
 8016f8c:	00000206 	br	8016f98 <__umoddi3+0x29c>
 8016f90:	2005883a 	mov	r2,r4
 8016f94:	2807883a 	mov	r3,r5
 8016f98:	dfc00b17 	ldw	ra,44(sp)
 8016f9c:	df000a17 	ldw	fp,40(sp)
 8016fa0:	ddc00917 	ldw	r23,36(sp)
 8016fa4:	dd800817 	ldw	r22,32(sp)
 8016fa8:	dd400717 	ldw	r21,28(sp)
 8016fac:	dd000617 	ldw	r20,24(sp)
 8016fb0:	dcc00517 	ldw	r19,20(sp)
 8016fb4:	dc800417 	ldw	r18,16(sp)
 8016fb8:	dc400317 	ldw	r17,12(sp)
 8016fbc:	dc000217 	ldw	r16,8(sp)
 8016fc0:	dec00c04 	addi	sp,sp,48
 8016fc4:	f800283a 	ret
 8016fc8:	00803fc4 	movi	r2,255
 8016fcc:	11c0b02e 	bgeu	r2,r7,8017290 <__umoddi3+0x594>
 8016fd0:	01400204 	movi	r5,8
 8016fd4:	282b883a 	mov	r21,r5
 8016fd8:	003f9b06 	br	8016e48 <__alt_data_end+0xfc016e48>
 8016fdc:	00804034 	movhi	r2,256
 8016fe0:	10bfffc4 	addi	r2,r2,-1
 8016fe4:	1180b02e 	bgeu	r2,r6,80172a8 <__umoddi3+0x5ac>
 8016fe8:	01400604 	movi	r5,24
 8016fec:	2805883a 	mov	r2,r5
 8016ff0:	003f5a06 	br	8016d5c <__alt_data_end+0xfc016d5c>
 8016ff4:	00803fc4 	movi	r2,255
 8016ff8:	14c0ae2e 	bgeu	r2,r19,80172b4 <__umoddi3+0x5b8>
 8016ffc:	00800204 	movi	r2,8
 8017000:	1007883a 	mov	r3,r2
 8017004:	003fad06 	br	8016ebc <__alt_data_end+0xfc016ebc>
 8017008:	3d0a983a 	sll	r5,r7,r20
 801700c:	356cd83a 	srl	r22,r6,r21
 8017010:	8d78d83a 	srl	fp,r17,r21
 8017014:	8d10983a 	sll	r8,r17,r20
 8017018:	2dacb03a 	or	r22,r5,r22
 801701c:	b02ed43a 	srli	r23,r22,16
 8017020:	8564d83a 	srl	r18,r16,r21
 8017024:	e009883a 	mov	r4,fp
 8017028:	b80b883a 	mov	r5,r23
 801702c:	44a4b03a 	or	r18,r8,r18
 8017030:	3526983a 	sll	r19,r6,r20
 8017034:	801743c0 	call	801743c <__umodsi3>
 8017038:	e009883a 	mov	r4,fp
 801703c:	b80b883a 	mov	r5,r23
 8017040:	b47fffcc 	andi	r17,r22,65535
 8017044:	d8800015 	stw	r2,0(sp)
 8017048:	80174340 	call	8017434 <__udivsi3>
 801704c:	1009883a 	mov	r4,r2
 8017050:	880b883a 	mov	r5,r17
 8017054:	1039883a 	mov	fp,r2
 8017058:	800334c0 	call	800334c <__mulsi3>
 801705c:	d9800017 	ldw	r6,0(sp)
 8017060:	9008d43a 	srli	r4,r18,16
 8017064:	8520983a 	sll	r16,r16,r20
 8017068:	300c943a 	slli	r6,r6,16
 801706c:	3106b03a 	or	r3,r6,r4
 8017070:	1880042e 	bgeu	r3,r2,8017084 <__umoddi3+0x388>
 8017074:	1d87883a 	add	r3,r3,r22
 8017078:	e13fffc4 	addi	r4,fp,-1
 801707c:	1d809a2e 	bgeu	r3,r22,80172e8 <__umoddi3+0x5ec>
 8017080:	2039883a 	mov	fp,r4
 8017084:	1887c83a 	sub	r3,r3,r2
 8017088:	1809883a 	mov	r4,r3
 801708c:	b80b883a 	mov	r5,r23
 8017090:	d8c00115 	stw	r3,4(sp)
 8017094:	801743c0 	call	801743c <__umodsi3>
 8017098:	d8c00117 	ldw	r3,4(sp)
 801709c:	b80b883a 	mov	r5,r23
 80170a0:	d8800015 	stw	r2,0(sp)
 80170a4:	1809883a 	mov	r4,r3
 80170a8:	80174340 	call	8017434 <__udivsi3>
 80170ac:	880b883a 	mov	r5,r17
 80170b0:	1009883a 	mov	r4,r2
 80170b4:	102f883a 	mov	r23,r2
 80170b8:	800334c0 	call	800334c <__mulsi3>
 80170bc:	d9800017 	ldw	r6,0(sp)
 80170c0:	947fffcc 	andi	r17,r18,65535
 80170c4:	300c943a 	slli	r6,r6,16
 80170c8:	3464b03a 	or	r18,r6,r17
 80170cc:	9080042e 	bgeu	r18,r2,80170e0 <__umoddi3+0x3e4>
 80170d0:	95a5883a 	add	r18,r18,r22
 80170d4:	b8ffffc4 	addi	r3,r23,-1
 80170d8:	95807f2e 	bgeu	r18,r22,80172d8 <__umoddi3+0x5dc>
 80170dc:	182f883a 	mov	r23,r3
 80170e0:	e038943a 	slli	fp,fp,16
 80170e4:	980cd43a 	srli	r6,r19,16
 80170e8:	98ffffcc 	andi	r3,r19,65535
 80170ec:	bf38b03a 	or	fp,r23,fp
 80170f0:	e02ed43a 	srli	r23,fp,16
 80170f4:	e73fffcc 	andi	fp,fp,65535
 80170f8:	180b883a 	mov	r5,r3
 80170fc:	e009883a 	mov	r4,fp
 8017100:	d9800015 	stw	r6,0(sp)
 8017104:	d8c00115 	stw	r3,4(sp)
 8017108:	90a5c83a 	sub	r18,r18,r2
 801710c:	800334c0 	call	800334c <__mulsi3>
 8017110:	d8c00117 	ldw	r3,4(sp)
 8017114:	b809883a 	mov	r4,r23
 8017118:	1023883a 	mov	r17,r2
 801711c:	180b883a 	mov	r5,r3
 8017120:	800334c0 	call	800334c <__mulsi3>
 8017124:	d9800017 	ldw	r6,0(sp)
 8017128:	b809883a 	mov	r4,r23
 801712c:	d8800115 	stw	r2,4(sp)
 8017130:	300b883a 	mov	r5,r6
 8017134:	302f883a 	mov	r23,r6
 8017138:	800334c0 	call	800334c <__mulsi3>
 801713c:	e009883a 	mov	r4,fp
 8017140:	b80b883a 	mov	r5,r23
 8017144:	d8800015 	stw	r2,0(sp)
 8017148:	800334c0 	call	800334c <__mulsi3>
 801714c:	d8c00117 	ldw	r3,4(sp)
 8017150:	880cd43a 	srli	r6,r17,16
 8017154:	d9c00017 	ldw	r7,0(sp)
 8017158:	1885883a 	add	r2,r3,r2
 801715c:	118d883a 	add	r6,r2,r6
 8017160:	30c0022e 	bgeu	r6,r3,801716c <__umoddi3+0x470>
 8017164:	00800074 	movhi	r2,1
 8017168:	388f883a 	add	r7,r7,r2
 801716c:	3006d43a 	srli	r3,r6,16
 8017170:	300c943a 	slli	r6,r6,16
 8017174:	8c7fffcc 	andi	r17,r17,65535
 8017178:	38c7883a 	add	r3,r7,r3
 801717c:	3463883a 	add	r17,r6,r17
 8017180:	90c03d36 	bltu	r18,r3,8017278 <__umoddi3+0x57c>
 8017184:	90c06026 	beq	r18,r3,8017308 <__umoddi3+0x60c>
 8017188:	90c9c83a 	sub	r4,r18,r3
 801718c:	880f883a 	mov	r7,r17
 8017190:	81cfc83a 	sub	r7,r16,r7
 8017194:	81c7803a 	cmpltu	r3,r16,r7
 8017198:	20c7c83a 	sub	r3,r4,r3
 801719c:	1d44983a 	sll	r2,r3,r21
 80171a0:	3d0ed83a 	srl	r7,r7,r20
 80171a4:	1d06d83a 	srl	r3,r3,r20
 80171a8:	11c4b03a 	or	r2,r2,r7
 80171ac:	003f7a06 	br	8016f98 <__alt_data_end+0xfc016f98>
 80171b0:	0025883a 	mov	r18,zero
 80171b4:	003ef806 	br	8016d98 <__alt_data_end+0xfc016d98>
 80171b8:	98a6983a 	sll	r19,r19,r2
 80171bc:	88e8d83a 	srl	r20,r17,r3
 80171c0:	80c6d83a 	srl	r3,r16,r3
 80171c4:	982ad43a 	srli	r21,r19,16
 80171c8:	88a2983a 	sll	r17,r17,r2
 80171cc:	a009883a 	mov	r4,r20
 80171d0:	a80b883a 	mov	r5,r21
 80171d4:	88eeb03a 	or	r23,r17,r3
 80171d8:	1025883a 	mov	r18,r2
 80171dc:	801743c0 	call	801743c <__umodsi3>
 80171e0:	a009883a 	mov	r4,r20
 80171e4:	a80b883a 	mov	r5,r21
 80171e8:	1023883a 	mov	r17,r2
 80171ec:	9dbfffcc 	andi	r22,r19,65535
 80171f0:	80174340 	call	8017434 <__udivsi3>
 80171f4:	1009883a 	mov	r4,r2
 80171f8:	b00b883a 	mov	r5,r22
 80171fc:	800334c0 	call	800334c <__mulsi3>
 8017200:	8822943a 	slli	r17,r17,16
 8017204:	b808d43a 	srli	r4,r23,16
 8017208:	84a8983a 	sll	r20,r16,r18
 801720c:	8906b03a 	or	r3,r17,r4
 8017210:	1880042e 	bgeu	r3,r2,8017224 <__umoddi3+0x528>
 8017214:	1cc7883a 	add	r3,r3,r19
 8017218:	1cc00236 	bltu	r3,r19,8017224 <__umoddi3+0x528>
 801721c:	1880012e 	bgeu	r3,r2,8017224 <__umoddi3+0x528>
 8017220:	1cc7883a 	add	r3,r3,r19
 8017224:	18a1c83a 	sub	r16,r3,r2
 8017228:	8009883a 	mov	r4,r16
 801722c:	a80b883a 	mov	r5,r21
 8017230:	801743c0 	call	801743c <__umodsi3>
 8017234:	8009883a 	mov	r4,r16
 8017238:	a80b883a 	mov	r5,r21
 801723c:	1039883a 	mov	fp,r2
 8017240:	80174340 	call	8017434 <__udivsi3>
 8017244:	1009883a 	mov	r4,r2
 8017248:	b00b883a 	mov	r5,r22
 801724c:	800334c0 	call	800334c <__mulsi3>
 8017250:	e006943a 	slli	r3,fp,16
 8017254:	b93fffcc 	andi	r4,r23,65535
 8017258:	1906b03a 	or	r3,r3,r4
 801725c:	1880042e 	bgeu	r3,r2,8017270 <__umoddi3+0x574>
 8017260:	1cc7883a 	add	r3,r3,r19
 8017264:	1cc00236 	bltu	r3,r19,8017270 <__umoddi3+0x574>
 8017268:	1880012e 	bgeu	r3,r2,8017270 <__umoddi3+0x574>
 801726c:	1cc7883a 	add	r3,r3,r19
 8017270:	18a3c83a 	sub	r17,r3,r2
 8017274:	003f1e06 	br	8016ef0 <__alt_data_end+0xfc016ef0>
 8017278:	8ccfc83a 	sub	r7,r17,r19
 801727c:	1d89c83a 	sub	r4,r3,r22
 8017280:	89e3803a 	cmpltu	r17,r17,r7
 8017284:	2463c83a 	sub	r17,r4,r17
 8017288:	9449c83a 	sub	r4,r18,r17
 801728c:	003fc006 	br	8017190 <__alt_data_end+0xfc017190>
 8017290:	000b883a 	mov	r5,zero
 8017294:	002b883a 	mov	r21,zero
 8017298:	003eeb06 	br	8016e48 <__alt_data_end+0xfc016e48>
 801729c:	01400404 	movi	r5,16
 80172a0:	282b883a 	mov	r21,r5
 80172a4:	003ee806 	br	8016e48 <__alt_data_end+0xfc016e48>
 80172a8:	01400404 	movi	r5,16
 80172ac:	2805883a 	mov	r2,r5
 80172b0:	003eaa06 	br	8016d5c <__alt_data_end+0xfc016d5c>
 80172b4:	0005883a 	mov	r2,zero
 80172b8:	0007883a 	mov	r3,zero
 80172bc:	003eff06 	br	8016ebc <__alt_data_end+0xfc016ebc>
 80172c0:	00800404 	movi	r2,16
 80172c4:	1007883a 	mov	r3,r2
 80172c8:	003efc06 	br	8016ebc <__alt_data_end+0xfc016ebc>
 80172cc:	000b883a 	mov	r5,zero
 80172d0:	0005883a 	mov	r2,zero
 80172d4:	003ea106 	br	8016d5c <__alt_data_end+0xfc016d5c>
 80172d8:	90bf802e 	bgeu	r18,r2,80170dc <__alt_data_end+0xfc0170dc>
 80172dc:	bdffff84 	addi	r23,r23,-2
 80172e0:	95a5883a 	add	r18,r18,r22
 80172e4:	003f7e06 	br	80170e0 <__alt_data_end+0xfc0170e0>
 80172e8:	18bf652e 	bgeu	r3,r2,8017080 <__alt_data_end+0xfc017080>
 80172ec:	e73fff84 	addi	fp,fp,-2
 80172f0:	1d87883a 	add	r3,r3,r22
 80172f4:	003f6306 	br	8017084 <__alt_data_end+0xfc017084>
 80172f8:	1cc7883a 	add	r3,r3,r19
 80172fc:	003f0d06 	br	8016f34 <__alt_data_end+0xfc016f34>
 8017300:	8005883a 	mov	r2,r16
 8017304:	003edf06 	br	8016e84 <__alt_data_end+0xfc016e84>
 8017308:	847fdb36 	bltu	r16,r17,8017278 <__alt_data_end+0xfc017278>
 801730c:	880f883a 	mov	r7,r17
 8017310:	0009883a 	mov	r4,zero
 8017314:	003f9e06 	br	8017190 <__alt_data_end+0xfc017190>

08017318 <udivmodsi4>:
 8017318:	2900182e 	bgeu	r5,r4,801737c <udivmodsi4+0x64>
 801731c:	28001716 	blt	r5,zero,801737c <udivmodsi4+0x64>
 8017320:	00800804 	movi	r2,32
 8017324:	00c00044 	movi	r3,1
 8017328:	00000206 	br	8017334 <udivmodsi4+0x1c>
 801732c:	10001126 	beq	r2,zero,8017374 <udivmodsi4+0x5c>
 8017330:	28000516 	blt	r5,zero,8017348 <udivmodsi4+0x30>
 8017334:	294b883a 	add	r5,r5,r5
 8017338:	10bfffc4 	addi	r2,r2,-1
 801733c:	18c7883a 	add	r3,r3,r3
 8017340:	293ffa36 	bltu	r5,r4,801732c <__alt_data_end+0xfc01732c>
 8017344:	18000b26 	beq	r3,zero,8017374 <udivmodsi4+0x5c>
 8017348:	0005883a 	mov	r2,zero
 801734c:	21400236 	bltu	r4,r5,8017358 <udivmodsi4+0x40>
 8017350:	2149c83a 	sub	r4,r4,r5
 8017354:	10c4b03a 	or	r2,r2,r3
 8017358:	1806d07a 	srli	r3,r3,1
 801735c:	280ad07a 	srli	r5,r5,1
 8017360:	183ffa1e 	bne	r3,zero,801734c <__alt_data_end+0xfc01734c>
 8017364:	3000011e 	bne	r6,zero,801736c <udivmodsi4+0x54>
 8017368:	f800283a 	ret
 801736c:	2005883a 	mov	r2,r4
 8017370:	f800283a 	ret
 8017374:	0005883a 	mov	r2,zero
 8017378:	003ffa06 	br	8017364 <__alt_data_end+0xfc017364>
 801737c:	00c00044 	movi	r3,1
 8017380:	003ff106 	br	8017348 <__alt_data_end+0xfc017348>

08017384 <__divsi3>:
 8017384:	defffe04 	addi	sp,sp,-8
 8017388:	dfc00115 	stw	ra,4(sp)
 801738c:	dc000015 	stw	r16,0(sp)
 8017390:	20000b16 	blt	r4,zero,80173c0 <__divsi3+0x3c>
 8017394:	0021883a 	mov	r16,zero
 8017398:	28000c16 	blt	r5,zero,80173cc <__divsi3+0x48>
 801739c:	000d883a 	mov	r6,zero
 80173a0:	80173180 	call	8017318 <udivmodsi4>
 80173a4:	0407c83a 	sub	r3,zero,r16
 80173a8:	1884f03a 	xor	r2,r3,r2
 80173ac:	1405883a 	add	r2,r2,r16
 80173b0:	dfc00117 	ldw	ra,4(sp)
 80173b4:	dc000017 	ldw	r16,0(sp)
 80173b8:	dec00204 	addi	sp,sp,8
 80173bc:	f800283a 	ret
 80173c0:	0109c83a 	sub	r4,zero,r4
 80173c4:	04000044 	movi	r16,1
 80173c8:	283ff40e 	bge	r5,zero,801739c <__alt_data_end+0xfc01739c>
 80173cc:	014bc83a 	sub	r5,zero,r5
 80173d0:	8400005c 	xori	r16,r16,1
 80173d4:	003ff106 	br	801739c <__alt_data_end+0xfc01739c>

080173d8 <__modsi3>:
 80173d8:	defffd04 	addi	sp,sp,-12
 80173dc:	dfc00215 	stw	ra,8(sp)
 80173e0:	dc400115 	stw	r17,4(sp)
 80173e4:	dc000015 	stw	r16,0(sp)
 80173e8:	20000c16 	blt	r4,zero,801741c <__modsi3+0x44>
 80173ec:	0023883a 	mov	r17,zero
 80173f0:	0021883a 	mov	r16,zero
 80173f4:	28000d16 	blt	r5,zero,801742c <__modsi3+0x54>
 80173f8:	01800044 	movi	r6,1
 80173fc:	80173180 	call	8017318 <udivmodsi4>
 8017400:	1404f03a 	xor	r2,r2,r16
 8017404:	8885883a 	add	r2,r17,r2
 8017408:	dfc00217 	ldw	ra,8(sp)
 801740c:	dc400117 	ldw	r17,4(sp)
 8017410:	dc000017 	ldw	r16,0(sp)
 8017414:	dec00304 	addi	sp,sp,12
 8017418:	f800283a 	ret
 801741c:	0109c83a 	sub	r4,zero,r4
 8017420:	04400044 	movi	r17,1
 8017424:	043fffc4 	movi	r16,-1
 8017428:	283ff30e 	bge	r5,zero,80173f8 <__alt_data_end+0xfc0173f8>
 801742c:	014bc83a 	sub	r5,zero,r5
 8017430:	003ff106 	br	80173f8 <__alt_data_end+0xfc0173f8>

08017434 <__udivsi3>:
 8017434:	000d883a 	mov	r6,zero
 8017438:	80173181 	jmpi	8017318 <udivmodsi4>

0801743c <__umodsi3>:
 801743c:	01800044 	movi	r6,1
 8017440:	80173181 	jmpi	8017318 <udivmodsi4>

08017444 <__eqsf2>:
 8017444:	2006d5fa 	srli	r3,r4,23
 8017448:	280cd5fa 	srli	r6,r5,23
 801744c:	01c02034 	movhi	r7,128
 8017450:	39ffffc4 	addi	r7,r7,-1
 8017454:	18c03fcc 	andi	r3,r3,255
 8017458:	02003fc4 	movi	r8,255
 801745c:	3904703a 	and	r2,r7,r4
 8017460:	31803fcc 	andi	r6,r6,255
 8017464:	394e703a 	and	r7,r7,r5
 8017468:	2008d7fa 	srli	r4,r4,31
 801746c:	280ad7fa 	srli	r5,r5,31
 8017470:	1a000c26 	beq	r3,r8,80174a4 <__eqsf2+0x60>
 8017474:	02003fc4 	movi	r8,255
 8017478:	32000326 	beq	r6,r8,8017488 <__eqsf2+0x44>
 801747c:	19800426 	beq	r3,r6,8017490 <__eqsf2+0x4c>
 8017480:	00800044 	movi	r2,1
 8017484:	f800283a 	ret
 8017488:	383ffd1e 	bne	r7,zero,8017480 <__alt_data_end+0xfc017480>
 801748c:	19bffc1e 	bne	r3,r6,8017480 <__alt_data_end+0xfc017480>
 8017490:	11fffb1e 	bne	r2,r7,8017480 <__alt_data_end+0xfc017480>
 8017494:	21400626 	beq	r4,r5,80174b0 <__eqsf2+0x6c>
 8017498:	183ff91e 	bne	r3,zero,8017480 <__alt_data_end+0xfc017480>
 801749c:	1004c03a 	cmpne	r2,r2,zero
 80174a0:	f800283a 	ret
 80174a4:	103ff326 	beq	r2,zero,8017474 <__alt_data_end+0xfc017474>
 80174a8:	00800044 	movi	r2,1
 80174ac:	f800283a 	ret
 80174b0:	0005883a 	mov	r2,zero
 80174b4:	f800283a 	ret

080174b8 <__gesf2>:
 80174b8:	2004d5fa 	srli	r2,r4,23
 80174bc:	2806d5fa 	srli	r3,r5,23
 80174c0:	01802034 	movhi	r6,128
 80174c4:	31bfffc4 	addi	r6,r6,-1
 80174c8:	10803fcc 	andi	r2,r2,255
 80174cc:	01c03fc4 	movi	r7,255
 80174d0:	3110703a 	and	r8,r6,r4
 80174d4:	18c03fcc 	andi	r3,r3,255
 80174d8:	314c703a 	and	r6,r6,r5
 80174dc:	2008d7fa 	srli	r4,r4,31
 80174e0:	280ad7fa 	srli	r5,r5,31
 80174e4:	11c00926 	beq	r2,r7,801750c <__gesf2+0x54>
 80174e8:	19c01226 	beq	r3,r7,8017534 <__gesf2+0x7c>
 80174ec:	1000091e 	bne	r2,zero,8017514 <__gesf2+0x5c>
 80174f0:	4013003a 	cmpeq	r9,r8,zero
 80174f4:	480f883a 	mov	r7,r9
 80174f8:	1800091e 	bne	r3,zero,8017520 <__gesf2+0x68>
 80174fc:	3000081e 	bne	r6,zero,8017520 <__gesf2+0x68>
 8017500:	48001026 	beq	r9,zero,8017544 <__gesf2+0x8c>
 8017504:	0005883a 	mov	r2,zero
 8017508:	f800283a 	ret
 801750c:	4000161e 	bne	r8,zero,8017568 <__gesf2+0xb0>
 8017510:	18800826 	beq	r3,r2,8017534 <__gesf2+0x7c>
 8017514:	1800091e 	bne	r3,zero,801753c <__gesf2+0x84>
 8017518:	000f883a 	mov	r7,zero
 801751c:	30000926 	beq	r6,zero,8017544 <__gesf2+0x8c>
 8017520:	29403fcc 	andi	r5,r5,255
 8017524:	38000626 	beq	r7,zero,8017540 <__gesf2+0x88>
 8017528:	2800071e 	bne	r5,zero,8017548 <__gesf2+0x90>
 801752c:	00bfffc4 	movi	r2,-1
 8017530:	f800283a 	ret
 8017534:	30000c1e 	bne	r6,zero,8017568 <__gesf2+0xb0>
 8017538:	103fed26 	beq	r2,zero,80174f0 <__alt_data_end+0xfc0174f0>
 801753c:	29403fcc 	andi	r5,r5,255
 8017540:	21400326 	beq	r4,r5,8017550 <__gesf2+0x98>
 8017544:	203ff91e 	bne	r4,zero,801752c <__alt_data_end+0xfc01752c>
 8017548:	00800044 	movi	r2,1
 801754c:	f800283a 	ret
 8017550:	18bffc16 	blt	r3,r2,8017544 <__alt_data_end+0xfc017544>
 8017554:	10c00216 	blt	r2,r3,8017560 <__gesf2+0xa8>
 8017558:	323ffa36 	bltu	r6,r8,8017544 <__alt_data_end+0xfc017544>
 801755c:	41bfe92e 	bgeu	r8,r6,8017504 <__alt_data_end+0xfc017504>
 8017560:	203ff226 	beq	r4,zero,801752c <__alt_data_end+0xfc01752c>
 8017564:	003ff806 	br	8017548 <__alt_data_end+0xfc017548>
 8017568:	00bfff84 	movi	r2,-2
 801756c:	f800283a 	ret

08017570 <__lesf2>:
 8017570:	2004d5fa 	srli	r2,r4,23
 8017574:	280cd5fa 	srli	r6,r5,23
 8017578:	00c02034 	movhi	r3,128
 801757c:	18ffffc4 	addi	r3,r3,-1
 8017580:	10803fcc 	andi	r2,r2,255
 8017584:	01c03fc4 	movi	r7,255
 8017588:	1910703a 	and	r8,r3,r4
 801758c:	31803fcc 	andi	r6,r6,255
 8017590:	1946703a 	and	r3,r3,r5
 8017594:	2008d7fa 	srli	r4,r4,31
 8017598:	280ad7fa 	srli	r5,r5,31
 801759c:	11c00a26 	beq	r2,r7,80175c8 <__lesf2+0x58>
 80175a0:	31c01526 	beq	r6,r7,80175f8 <__lesf2+0x88>
 80175a4:	10000a1e 	bne	r2,zero,80175d0 <__lesf2+0x60>
 80175a8:	4013003a 	cmpeq	r9,r8,zero
 80175ac:	480f883a 	mov	r7,r9
 80175b0:	30000d26 	beq	r6,zero,80175e8 <__lesf2+0x78>
 80175b4:	29403fcc 	andi	r5,r5,255
 80175b8:	38001426 	beq	r7,zero,801760c <__lesf2+0x9c>
 80175bc:	2800081e 	bne	r5,zero,80175e0 <__lesf2+0x70>
 80175c0:	00bfffc4 	movi	r2,-1
 80175c4:	f800283a 	ret
 80175c8:	40000c1e 	bne	r8,zero,80175fc <__lesf2+0x8c>
 80175cc:	30800a26 	beq	r6,r2,80175f8 <__lesf2+0x88>
 80175d0:	30000d1e 	bne	r6,zero,8017608 <__lesf2+0x98>
 80175d4:	000f883a 	mov	r7,zero
 80175d8:	183ff61e 	bne	r3,zero,80175b4 <__alt_data_end+0xfc0175b4>
 80175dc:	203ff81e 	bne	r4,zero,80175c0 <__alt_data_end+0xfc0175c0>
 80175e0:	00800044 	movi	r2,1
 80175e4:	f800283a 	ret
 80175e8:	183ff21e 	bne	r3,zero,80175b4 <__alt_data_end+0xfc0175b4>
 80175ec:	483ffb26 	beq	r9,zero,80175dc <__alt_data_end+0xfc0175dc>
 80175f0:	0005883a 	mov	r2,zero
 80175f4:	f800283a 	ret
 80175f8:	18000226 	beq	r3,zero,8017604 <__lesf2+0x94>
 80175fc:	00800084 	movi	r2,2
 8017600:	f800283a 	ret
 8017604:	103fe826 	beq	r2,zero,80175a8 <__alt_data_end+0xfc0175a8>
 8017608:	29403fcc 	andi	r5,r5,255
 801760c:	217ff31e 	bne	r4,r5,80175dc <__alt_data_end+0xfc0175dc>
 8017610:	30bff216 	blt	r6,r2,80175dc <__alt_data_end+0xfc0175dc>
 8017614:	11800216 	blt	r2,r6,8017620 <__lesf2+0xb0>
 8017618:	1a3ff036 	bltu	r3,r8,80175dc <__alt_data_end+0xfc0175dc>
 801761c:	40fff42e 	bgeu	r8,r3,80175f0 <__alt_data_end+0xfc0175f0>
 8017620:	203fe726 	beq	r4,zero,80175c0 <__alt_data_end+0xfc0175c0>
 8017624:	003fee06 	br	80175e0 <__alt_data_end+0xfc0175e0>

08017628 <__adddf3>:
 8017628:	02000434 	movhi	r8,16
 801762c:	423fffc4 	addi	r8,r8,-1
 8017630:	defffb04 	addi	sp,sp,-20
 8017634:	2a12703a 	and	r9,r5,r8
 8017638:	2806d7fa 	srli	r3,r5,31
 801763c:	3a10703a 	and	r8,r7,r8
 8017640:	3804d53a 	srli	r2,r7,20
 8017644:	3014d77a 	srli	r10,r6,29
 8017648:	dc000015 	stw	r16,0(sp)
 801764c:	481290fa 	slli	r9,r9,3
 8017650:	2820d53a 	srli	r16,r5,20
 8017654:	401090fa 	slli	r8,r8,3
 8017658:	200ad77a 	srli	r5,r4,29
 801765c:	380ed7fa 	srli	r7,r7,31
 8017660:	dc800215 	stw	r18,8(sp)
 8017664:	dc400115 	stw	r17,4(sp)
 8017668:	dfc00415 	stw	ra,16(sp)
 801766c:	dcc00315 	stw	r19,12(sp)
 8017670:	1c803fcc 	andi	r18,r3,255
 8017674:	8401ffcc 	andi	r16,r16,2047
 8017678:	494ab03a 	or	r5,r9,r5
 801767c:	202290fa 	slli	r17,r4,3
 8017680:	1081ffcc 	andi	r2,r2,2047
 8017684:	4290b03a 	or	r8,r8,r10
 8017688:	300c90fa 	slli	r6,r6,3
 801768c:	91c07026 	beq	r18,r7,8017850 <__adddf3+0x228>
 8017690:	8087c83a 	sub	r3,r16,r2
 8017694:	00c0b30e 	bge	zero,r3,8017964 <__adddf3+0x33c>
 8017698:	10002a1e 	bne	r2,zero,8017744 <__adddf3+0x11c>
 801769c:	4184b03a 	or	r2,r8,r6
 80176a0:	1000991e 	bne	r2,zero,8017908 <__adddf3+0x2e0>
 80176a4:	888001cc 	andi	r2,r17,7
 80176a8:	10005b26 	beq	r2,zero,8017818 <__adddf3+0x1f0>
 80176ac:	88c003cc 	andi	r3,r17,15
 80176b0:	00800104 	movi	r2,4
 80176b4:	18805826 	beq	r3,r2,8017818 <__adddf3+0x1f0>
 80176b8:	89800104 	addi	r6,r17,4
 80176bc:	3463803a 	cmpltu	r17,r6,r17
 80176c0:	2c4b883a 	add	r5,r5,r17
 80176c4:	2880202c 	andhi	r2,r5,128
 80176c8:	9007883a 	mov	r3,r18
 80176cc:	3023883a 	mov	r17,r6
 80176d0:	10005426 	beq	r2,zero,8017824 <__adddf3+0x1fc>
 80176d4:	84000044 	addi	r16,r16,1
 80176d8:	0081ffc4 	movi	r2,2047
 80176dc:	8080c126 	beq	r16,r2,80179e4 <__adddf3+0x3bc>
 80176e0:	013fe034 	movhi	r4,65408
 80176e4:	213fffc4 	addi	r4,r4,-1
 80176e8:	290a703a 	and	r5,r5,r4
 80176ec:	2804977a 	slli	r2,r5,29
 80176f0:	280a927a 	slli	r5,r5,9
 80176f4:	8822d0fa 	srli	r17,r17,3
 80176f8:	8401ffcc 	andi	r16,r16,2047
 80176fc:	2808d33a 	srli	r4,r5,12
 8017700:	1444b03a 	or	r2,r2,r17
 8017704:	8401ffcc 	andi	r16,r16,2047
 8017708:	800a953a 	slli	r5,r16,20
 801770c:	18c03fcc 	andi	r3,r3,255
 8017710:	04000434 	movhi	r16,16
 8017714:	180697fa 	slli	r3,r3,31
 8017718:	843fffc4 	addi	r16,r16,-1
 801771c:	2420703a 	and	r16,r4,r16
 8017720:	8160b03a 	or	r16,r16,r5
 8017724:	80c6b03a 	or	r3,r16,r3
 8017728:	dfc00417 	ldw	ra,16(sp)
 801772c:	dcc00317 	ldw	r19,12(sp)
 8017730:	dc800217 	ldw	r18,8(sp)
 8017734:	dc400117 	ldw	r17,4(sp)
 8017738:	dc000017 	ldw	r16,0(sp)
 801773c:	dec00504 	addi	sp,sp,20
 8017740:	f800283a 	ret
 8017744:	0081ffc4 	movi	r2,2047
 8017748:	80bfd626 	beq	r16,r2,80176a4 <__alt_data_end+0xfc0176a4>
 801774c:	42002034 	orhi	r8,r8,128
 8017750:	00800e04 	movi	r2,56
 8017754:	10c0a616 	blt	r2,r3,80179f0 <__adddf3+0x3c8>
 8017758:	008007c4 	movi	r2,31
 801775c:	10c0c916 	blt	r2,r3,8017a84 <__adddf3+0x45c>
 8017760:	00800804 	movi	r2,32
 8017764:	10c5c83a 	sub	r2,r2,r3
 8017768:	408e983a 	sll	r7,r8,r2
 801776c:	30c8d83a 	srl	r4,r6,r3
 8017770:	3084983a 	sll	r2,r6,r2
 8017774:	40c6d83a 	srl	r3,r8,r3
 8017778:	390cb03a 	or	r6,r7,r4
 801777c:	1004c03a 	cmpne	r2,r2,zero
 8017780:	308cb03a 	or	r6,r6,r2
 8017784:	898dc83a 	sub	r6,r17,r6
 8017788:	89a3803a 	cmpltu	r17,r17,r6
 801778c:	28cbc83a 	sub	r5,r5,r3
 8017790:	2c4bc83a 	sub	r5,r5,r17
 8017794:	3023883a 	mov	r17,r6
 8017798:	2880202c 	andhi	r2,r5,128
 801779c:	10006d26 	beq	r2,zero,8017954 <__adddf3+0x32c>
 80177a0:	04c02034 	movhi	r19,128
 80177a4:	9cffffc4 	addi	r19,r19,-1
 80177a8:	2ce6703a 	and	r19,r5,r19
 80177ac:	98007e26 	beq	r19,zero,80179a8 <__adddf3+0x380>
 80177b0:	9809883a 	mov	r4,r19
 80177b4:	8019f580 	call	8019f58 <__clzsi2>
 80177b8:	10fffe04 	addi	r3,r2,-8
 80177bc:	010007c4 	movi	r4,31
 80177c0:	20c07f16 	blt	r4,r3,80179c0 <__adddf3+0x398>
 80177c4:	01400a04 	movi	r5,40
 80177c8:	2885c83a 	sub	r2,r5,r2
 80177cc:	888ad83a 	srl	r5,r17,r2
 80177d0:	98e6983a 	sll	r19,r19,r3
 80177d4:	88e2983a 	sll	r17,r17,r3
 80177d8:	2ce6b03a 	or	r19,r5,r19
 80177dc:	1c007c16 	blt	r3,r16,80179d0 <__adddf3+0x3a8>
 80177e0:	1c21c83a 	sub	r16,r3,r16
 80177e4:	81400044 	addi	r5,r16,1
 80177e8:	00c007c4 	movi	r3,31
 80177ec:	19409816 	blt	r3,r5,8017a50 <__adddf3+0x428>
 80177f0:	1c21c83a 	sub	r16,r3,r16
 80177f4:	8c08983a 	sll	r4,r17,r16
 80177f8:	8946d83a 	srl	r3,r17,r5
 80177fc:	9c20983a 	sll	r16,r19,r16
 8017800:	2008c03a 	cmpne	r4,r4,zero
 8017804:	994ad83a 	srl	r5,r19,r5
 8017808:	1c06b03a 	or	r3,r3,r16
 801780c:	1922b03a 	or	r17,r3,r4
 8017810:	0021883a 	mov	r16,zero
 8017814:	003fa306 	br	80176a4 <__alt_data_end+0xfc0176a4>
 8017818:	2880202c 	andhi	r2,r5,128
 801781c:	9007883a 	mov	r3,r18
 8017820:	103fac1e 	bne	r2,zero,80176d4 <__alt_data_end+0xfc0176d4>
 8017824:	2804977a 	slli	r2,r5,29
 8017828:	8822d0fa 	srli	r17,r17,3
 801782c:	0101ffc4 	movi	r4,2047
 8017830:	280ad0fa 	srli	r5,r5,3
 8017834:	1444b03a 	or	r2,r2,r17
 8017838:	81002c26 	beq	r16,r4,80178ec <__adddf3+0x2c4>
 801783c:	8120703a 	and	r16,r16,r4
 8017840:	01000434 	movhi	r4,16
 8017844:	213fffc4 	addi	r4,r4,-1
 8017848:	2908703a 	and	r4,r5,r4
 801784c:	003fad06 	br	8017704 <__alt_data_end+0xfc017704>
 8017850:	8089c83a 	sub	r4,r16,r2
 8017854:	01006a0e 	bge	zero,r4,8017a00 <__adddf3+0x3d8>
 8017858:	10003326 	beq	r2,zero,8017928 <__adddf3+0x300>
 801785c:	0081ffc4 	movi	r2,2047
 8017860:	80bf9026 	beq	r16,r2,80176a4 <__alt_data_end+0xfc0176a4>
 8017864:	42002034 	orhi	r8,r8,128
 8017868:	00800e04 	movi	r2,56
 801786c:	1100b116 	blt	r2,r4,8017b34 <__adddf3+0x50c>
 8017870:	008007c4 	movi	r2,31
 8017874:	1100e216 	blt	r2,r4,8017c00 <__adddf3+0x5d8>
 8017878:	00800804 	movi	r2,32
 801787c:	1105c83a 	sub	r2,r2,r4
 8017880:	4092983a 	sll	r9,r8,r2
 8017884:	310ed83a 	srl	r7,r6,r4
 8017888:	3084983a 	sll	r2,r6,r2
 801788c:	4110d83a 	srl	r8,r8,r4
 8017890:	49ccb03a 	or	r6,r9,r7
 8017894:	1004c03a 	cmpne	r2,r2,zero
 8017898:	308cb03a 	or	r6,r6,r2
 801789c:	344d883a 	add	r6,r6,r17
 80178a0:	3463803a 	cmpltu	r17,r6,r17
 80178a4:	414b883a 	add	r5,r8,r5
 80178a8:	2c4b883a 	add	r5,r5,r17
 80178ac:	3023883a 	mov	r17,r6
 80178b0:	2880202c 	andhi	r2,r5,128
 80178b4:	10002726 	beq	r2,zero,8017954 <__adddf3+0x32c>
 80178b8:	84000044 	addi	r16,r16,1
 80178bc:	0081ffc4 	movi	r2,2047
 80178c0:	8080ae26 	beq	r16,r2,8017b7c <__adddf3+0x554>
 80178c4:	00bfe034 	movhi	r2,65408
 80178c8:	10bfffc4 	addi	r2,r2,-1
 80178cc:	288a703a 	and	r5,r5,r2
 80178d0:	880cd07a 	srli	r6,r17,1
 80178d4:	280897fa 	slli	r4,r5,31
 80178d8:	88c0004c 	andi	r3,r17,1
 80178dc:	30e2b03a 	or	r17,r6,r3
 80178e0:	280ad07a 	srli	r5,r5,1
 80178e4:	8922b03a 	or	r17,r17,r4
 80178e8:	003f6e06 	br	80176a4 <__alt_data_end+0xfc0176a4>
 80178ec:	1148b03a 	or	r4,r2,r5
 80178f0:	20003c26 	beq	r4,zero,80179e4 <__adddf3+0x3bc>
 80178f4:	29000234 	orhi	r4,r5,8
 80178f8:	01400434 	movhi	r5,16
 80178fc:	297fffc4 	addi	r5,r5,-1
 8017900:	2148703a 	and	r4,r4,r5
 8017904:	003f7f06 	br	8017704 <__alt_data_end+0xfc017704>
 8017908:	18ffffc4 	addi	r3,r3,-1
 801790c:	18004d1e 	bne	r3,zero,8017a44 <__adddf3+0x41c>
 8017910:	898dc83a 	sub	r6,r17,r6
 8017914:	89a3803a 	cmpltu	r17,r17,r6
 8017918:	2a0bc83a 	sub	r5,r5,r8
 801791c:	2c4bc83a 	sub	r5,r5,r17
 8017920:	3023883a 	mov	r17,r6
 8017924:	003f9c06 	br	8017798 <__alt_data_end+0xfc017798>
 8017928:	4184b03a 	or	r2,r8,r6
 801792c:	103f5d26 	beq	r2,zero,80176a4 <__alt_data_end+0xfc0176a4>
 8017930:	213fffc4 	addi	r4,r4,-1
 8017934:	203fd926 	beq	r4,zero,801789c <__alt_data_end+0xfc01789c>
 8017938:	0081ffc4 	movi	r2,2047
 801793c:	80bfca1e 	bne	r16,r2,8017868 <__alt_data_end+0xfc017868>
 8017940:	003f5806 	br	80176a4 <__alt_data_end+0xfc0176a4>
 8017944:	10c8b03a 	or	r4,r2,r3
 8017948:	20008b26 	beq	r4,zero,8017b78 <__adddf3+0x550>
 801794c:	100b883a 	mov	r5,r2
 8017950:	1823883a 	mov	r17,r3
 8017954:	888001cc 	andi	r2,r17,7
 8017958:	103f541e 	bne	r2,zero,80176ac <__alt_data_end+0xfc0176ac>
 801795c:	9007883a 	mov	r3,r18
 8017960:	003fb006 	br	8017824 <__alt_data_end+0xfc017824>
 8017964:	1800531e 	bne	r3,zero,8017ab4 <__adddf3+0x48c>
 8017968:	80800044 	addi	r2,r16,1
 801796c:	1081ffcc 	andi	r2,r2,2047
 8017970:	00c00044 	movi	r3,1
 8017974:	1880990e 	bge	r3,r2,8017bdc <__adddf3+0x5b4>
 8017978:	8985c83a 	sub	r2,r17,r6
 801797c:	8887803a 	cmpltu	r3,r17,r2
 8017980:	2a27c83a 	sub	r19,r5,r8
 8017984:	98e7c83a 	sub	r19,r19,r3
 8017988:	98c0202c 	andhi	r3,r19,128
 801798c:	18006226 	beq	r3,zero,8017b18 <__adddf3+0x4f0>
 8017990:	3463c83a 	sub	r17,r6,r17
 8017994:	4151c83a 	sub	r8,r8,r5
 8017998:	344d803a 	cmpltu	r6,r6,r17
 801799c:	41a7c83a 	sub	r19,r8,r6
 80179a0:	3825883a 	mov	r18,r7
 80179a4:	983f821e 	bne	r19,zero,80177b0 <__alt_data_end+0xfc0177b0>
 80179a8:	8809883a 	mov	r4,r17
 80179ac:	8019f580 	call	8019f58 <__clzsi2>
 80179b0:	10800804 	addi	r2,r2,32
 80179b4:	10fffe04 	addi	r3,r2,-8
 80179b8:	010007c4 	movi	r4,31
 80179bc:	20ff810e 	bge	r4,r3,80177c4 <__alt_data_end+0xfc0177c4>
 80179c0:	14fff604 	addi	r19,r2,-40
 80179c4:	8ce6983a 	sll	r19,r17,r19
 80179c8:	0023883a 	mov	r17,zero
 80179cc:	1c3f840e 	bge	r3,r16,80177e0 <__alt_data_end+0xfc0177e0>
 80179d0:	017fe034 	movhi	r5,65408
 80179d4:	297fffc4 	addi	r5,r5,-1
 80179d8:	80e1c83a 	sub	r16,r16,r3
 80179dc:	994a703a 	and	r5,r19,r5
 80179e0:	003f3006 	br	80176a4 <__alt_data_end+0xfc0176a4>
 80179e4:	0009883a 	mov	r4,zero
 80179e8:	0005883a 	mov	r2,zero
 80179ec:	003f4506 	br	8017704 <__alt_data_end+0xfc017704>
 80179f0:	418cb03a 	or	r6,r8,r6
 80179f4:	300cc03a 	cmpne	r6,r6,zero
 80179f8:	0007883a 	mov	r3,zero
 80179fc:	003f6106 	br	8017784 <__alt_data_end+0xfc017784>
 8017a00:	2000921e 	bne	r4,zero,8017c4c <__adddf3+0x624>
 8017a04:	80800044 	addi	r2,r16,1
 8017a08:	11c1ffcc 	andi	r7,r2,2047
 8017a0c:	01000044 	movi	r4,1
 8017a10:	21c0610e 	bge	r4,r7,8017b98 <__adddf3+0x570>
 8017a14:	0101ffc4 	movi	r4,2047
 8017a18:	1100a326 	beq	r2,r4,8017ca8 <__adddf3+0x680>
 8017a1c:	344d883a 	add	r6,r6,r17
 8017a20:	3463803a 	cmpltu	r17,r6,r17
 8017a24:	414b883a 	add	r5,r8,r5
 8017a28:	2c4b883a 	add	r5,r5,r17
 8017a2c:	282297fa 	slli	r17,r5,31
 8017a30:	300cd07a 	srli	r6,r6,1
 8017a34:	280ad07a 	srli	r5,r5,1
 8017a38:	1021883a 	mov	r16,r2
 8017a3c:	89a2b03a 	or	r17,r17,r6
 8017a40:	003f1806 	br	80176a4 <__alt_data_end+0xfc0176a4>
 8017a44:	0081ffc4 	movi	r2,2047
 8017a48:	80bf411e 	bne	r16,r2,8017750 <__alt_data_end+0xfc017750>
 8017a4c:	003f1506 	br	80176a4 <__alt_data_end+0xfc0176a4>
 8017a50:	80bff844 	addi	r2,r16,-31
 8017a54:	00c00804 	movi	r3,32
 8017a58:	9884d83a 	srl	r2,r19,r2
 8017a5c:	28c04a26 	beq	r5,r3,8017b88 <__adddf3+0x560>
 8017a60:	00c00fc4 	movi	r3,63
 8017a64:	1c21c83a 	sub	r16,r3,r16
 8017a68:	9c26983a 	sll	r19,r19,r16
 8017a6c:	9c62b03a 	or	r17,r19,r17
 8017a70:	8822c03a 	cmpne	r17,r17,zero
 8017a74:	88a2b03a 	or	r17,r17,r2
 8017a78:	000b883a 	mov	r5,zero
 8017a7c:	0021883a 	mov	r16,zero
 8017a80:	003fb406 	br	8017954 <__alt_data_end+0xfc017954>
 8017a84:	18bff804 	addi	r2,r3,-32
 8017a88:	01000804 	movi	r4,32
 8017a8c:	4084d83a 	srl	r2,r8,r2
 8017a90:	19003f26 	beq	r3,r4,8017b90 <__adddf3+0x568>
 8017a94:	01001004 	movi	r4,64
 8017a98:	20c7c83a 	sub	r3,r4,r3
 8017a9c:	40d0983a 	sll	r8,r8,r3
 8017aa0:	418cb03a 	or	r6,r8,r6
 8017aa4:	300cc03a 	cmpne	r6,r6,zero
 8017aa8:	308cb03a 	or	r6,r6,r2
 8017aac:	0007883a 	mov	r3,zero
 8017ab0:	003f3406 	br	8017784 <__alt_data_end+0xfc017784>
 8017ab4:	80002326 	beq	r16,zero,8017b44 <__adddf3+0x51c>
 8017ab8:	0101ffc4 	movi	r4,2047
 8017abc:	11005e26 	beq	r2,r4,8017c38 <__adddf3+0x610>
 8017ac0:	00c7c83a 	sub	r3,zero,r3
 8017ac4:	29402034 	orhi	r5,r5,128
 8017ac8:	01000e04 	movi	r4,56
 8017acc:	20c07216 	blt	r4,r3,8017c98 <__adddf3+0x670>
 8017ad0:	010007c4 	movi	r4,31
 8017ad4:	20c0ce16 	blt	r4,r3,8017e10 <__adddf3+0x7e8>
 8017ad8:	01000804 	movi	r4,32
 8017adc:	20c9c83a 	sub	r4,r4,r3
 8017ae0:	2914983a 	sll	r10,r5,r4
 8017ae4:	88d2d83a 	srl	r9,r17,r3
 8017ae8:	8908983a 	sll	r4,r17,r4
 8017aec:	28c6d83a 	srl	r3,r5,r3
 8017af0:	5262b03a 	or	r17,r10,r9
 8017af4:	2008c03a 	cmpne	r4,r4,zero
 8017af8:	8922b03a 	or	r17,r17,r4
 8017afc:	3463c83a 	sub	r17,r6,r17
 8017b00:	40c7c83a 	sub	r3,r8,r3
 8017b04:	344d803a 	cmpltu	r6,r6,r17
 8017b08:	198bc83a 	sub	r5,r3,r6
 8017b0c:	1021883a 	mov	r16,r2
 8017b10:	3825883a 	mov	r18,r7
 8017b14:	003f2006 	br	8017798 <__alt_data_end+0xfc017798>
 8017b18:	9886b03a 	or	r3,r19,r2
 8017b1c:	1800141e 	bne	r3,zero,8017b70 <__adddf3+0x548>
 8017b20:	0007883a 	mov	r3,zero
 8017b24:	000b883a 	mov	r5,zero
 8017b28:	0023883a 	mov	r17,zero
 8017b2c:	0021883a 	mov	r16,zero
 8017b30:	003f3c06 	br	8017824 <__alt_data_end+0xfc017824>
 8017b34:	418cb03a 	or	r6,r8,r6
 8017b38:	300cc03a 	cmpne	r6,r6,zero
 8017b3c:	0011883a 	mov	r8,zero
 8017b40:	003f5606 	br	801789c <__alt_data_end+0xfc01789c>
 8017b44:	2c48b03a 	or	r4,r5,r17
 8017b48:	20003b26 	beq	r4,zero,8017c38 <__adddf3+0x610>
 8017b4c:	00c6303a 	nor	r3,zero,r3
 8017b50:	1800371e 	bne	r3,zero,8017c30 <__adddf3+0x608>
 8017b54:	3463c83a 	sub	r17,r6,r17
 8017b58:	414bc83a 	sub	r5,r8,r5
 8017b5c:	344d803a 	cmpltu	r6,r6,r17
 8017b60:	298bc83a 	sub	r5,r5,r6
 8017b64:	1021883a 	mov	r16,r2
 8017b68:	3825883a 	mov	r18,r7
 8017b6c:	003f0a06 	br	8017798 <__alt_data_end+0xfc017798>
 8017b70:	1023883a 	mov	r17,r2
 8017b74:	003f0d06 	br	80177ac <__alt_data_end+0xfc0177ac>
 8017b78:	0007883a 	mov	r3,zero
 8017b7c:	000b883a 	mov	r5,zero
 8017b80:	0023883a 	mov	r17,zero
 8017b84:	003f2706 	br	8017824 <__alt_data_end+0xfc017824>
 8017b88:	0027883a 	mov	r19,zero
 8017b8c:	003fb706 	br	8017a6c <__alt_data_end+0xfc017a6c>
 8017b90:	0011883a 	mov	r8,zero
 8017b94:	003fc206 	br	8017aa0 <__alt_data_end+0xfc017aa0>
 8017b98:	2c44b03a 	or	r2,r5,r17
 8017b9c:	8000871e 	bne	r16,zero,8017dbc <__adddf3+0x794>
 8017ba0:	1000b126 	beq	r2,zero,8017e68 <__adddf3+0x840>
 8017ba4:	4184b03a 	or	r2,r8,r6
 8017ba8:	103ebe26 	beq	r2,zero,80176a4 <__alt_data_end+0xfc0176a4>
 8017bac:	3445883a 	add	r2,r6,r17
 8017bb0:	1463803a 	cmpltu	r17,r2,r17
 8017bb4:	414b883a 	add	r5,r8,r5
 8017bb8:	2c4b883a 	add	r5,r5,r17
 8017bbc:	28c0202c 	andhi	r3,r5,128
 8017bc0:	1023883a 	mov	r17,r2
 8017bc4:	183f6326 	beq	r3,zero,8017954 <__alt_data_end+0xfc017954>
 8017bc8:	00bfe034 	movhi	r2,65408
 8017bcc:	10bfffc4 	addi	r2,r2,-1
 8017bd0:	2021883a 	mov	r16,r4
 8017bd4:	288a703a 	and	r5,r5,r2
 8017bd8:	003eb206 	br	80176a4 <__alt_data_end+0xfc0176a4>
 8017bdc:	2c44b03a 	or	r2,r5,r17
 8017be0:	8000251e 	bne	r16,zero,8017c78 <__adddf3+0x650>
 8017be4:	10004b1e 	bne	r2,zero,8017d14 <__adddf3+0x6ec>
 8017be8:	4184b03a 	or	r2,r8,r6
 8017bec:	103fe226 	beq	r2,zero,8017b78 <__alt_data_end+0xfc017b78>
 8017bf0:	400b883a 	mov	r5,r8
 8017bf4:	3023883a 	mov	r17,r6
 8017bf8:	3825883a 	mov	r18,r7
 8017bfc:	003ea906 	br	80176a4 <__alt_data_end+0xfc0176a4>
 8017c00:	20bff804 	addi	r2,r4,-32
 8017c04:	01c00804 	movi	r7,32
 8017c08:	4084d83a 	srl	r2,r8,r2
 8017c0c:	21c07e26 	beq	r4,r7,8017e08 <__adddf3+0x7e0>
 8017c10:	01c01004 	movi	r7,64
 8017c14:	3909c83a 	sub	r4,r7,r4
 8017c18:	4110983a 	sll	r8,r8,r4
 8017c1c:	418cb03a 	or	r6,r8,r6
 8017c20:	300cc03a 	cmpne	r6,r6,zero
 8017c24:	308cb03a 	or	r6,r6,r2
 8017c28:	0011883a 	mov	r8,zero
 8017c2c:	003f1b06 	br	801789c <__alt_data_end+0xfc01789c>
 8017c30:	0101ffc4 	movi	r4,2047
 8017c34:	113fa41e 	bne	r2,r4,8017ac8 <__alt_data_end+0xfc017ac8>
 8017c38:	400b883a 	mov	r5,r8
 8017c3c:	3023883a 	mov	r17,r6
 8017c40:	1021883a 	mov	r16,r2
 8017c44:	3825883a 	mov	r18,r7
 8017c48:	003e9606 	br	80176a4 <__alt_data_end+0xfc0176a4>
 8017c4c:	80001a1e 	bne	r16,zero,8017cb8 <__adddf3+0x690>
 8017c50:	2c4eb03a 	or	r7,r5,r17
 8017c54:	38005526 	beq	r7,zero,8017dac <__adddf3+0x784>
 8017c58:	0108303a 	nor	r4,zero,r4
 8017c5c:	2000511e 	bne	r4,zero,8017da4 <__adddf3+0x77c>
 8017c60:	89a3883a 	add	r17,r17,r6
 8017c64:	414b883a 	add	r5,r8,r5
 8017c68:	898d803a 	cmpltu	r6,r17,r6
 8017c6c:	298b883a 	add	r5,r5,r6
 8017c70:	1021883a 	mov	r16,r2
 8017c74:	003f0e06 	br	80178b0 <__alt_data_end+0xfc0178b0>
 8017c78:	1000341e 	bne	r2,zero,8017d4c <__adddf3+0x724>
 8017c7c:	4184b03a 	or	r2,r8,r6
 8017c80:	10006f26 	beq	r2,zero,8017e40 <__adddf3+0x818>
 8017c84:	400b883a 	mov	r5,r8
 8017c88:	3023883a 	mov	r17,r6
 8017c8c:	3825883a 	mov	r18,r7
 8017c90:	0401ffc4 	movi	r16,2047
 8017c94:	003e8306 	br	80176a4 <__alt_data_end+0xfc0176a4>
 8017c98:	2c62b03a 	or	r17,r5,r17
 8017c9c:	8822c03a 	cmpne	r17,r17,zero
 8017ca0:	0007883a 	mov	r3,zero
 8017ca4:	003f9506 	br	8017afc <__alt_data_end+0xfc017afc>
 8017ca8:	1021883a 	mov	r16,r2
 8017cac:	000b883a 	mov	r5,zero
 8017cb0:	0023883a 	mov	r17,zero
 8017cb4:	003edb06 	br	8017824 <__alt_data_end+0xfc017824>
 8017cb8:	01c1ffc4 	movi	r7,2047
 8017cbc:	11c03b26 	beq	r2,r7,8017dac <__adddf3+0x784>
 8017cc0:	0109c83a 	sub	r4,zero,r4
 8017cc4:	29402034 	orhi	r5,r5,128
 8017cc8:	01c00e04 	movi	r7,56
 8017ccc:	39006216 	blt	r7,r4,8017e58 <__adddf3+0x830>
 8017cd0:	01c007c4 	movi	r7,31
 8017cd4:	39006b16 	blt	r7,r4,8017e84 <__adddf3+0x85c>
 8017cd8:	01c00804 	movi	r7,32
 8017cdc:	390fc83a 	sub	r7,r7,r4
 8017ce0:	29d4983a 	sll	r10,r5,r7
 8017ce4:	8912d83a 	srl	r9,r17,r4
 8017ce8:	89ce983a 	sll	r7,r17,r7
 8017cec:	2908d83a 	srl	r4,r5,r4
 8017cf0:	5262b03a 	or	r17,r10,r9
 8017cf4:	380ac03a 	cmpne	r5,r7,zero
 8017cf8:	8962b03a 	or	r17,r17,r5
 8017cfc:	89a3883a 	add	r17,r17,r6
 8017d00:	2211883a 	add	r8,r4,r8
 8017d04:	898d803a 	cmpltu	r6,r17,r6
 8017d08:	418b883a 	add	r5,r8,r6
 8017d0c:	1021883a 	mov	r16,r2
 8017d10:	003ee706 	br	80178b0 <__alt_data_end+0xfc0178b0>
 8017d14:	4184b03a 	or	r2,r8,r6
 8017d18:	103e6226 	beq	r2,zero,80176a4 <__alt_data_end+0xfc0176a4>
 8017d1c:	8987c83a 	sub	r3,r17,r6
 8017d20:	88c9803a 	cmpltu	r4,r17,r3
 8017d24:	2a05c83a 	sub	r2,r5,r8
 8017d28:	1105c83a 	sub	r2,r2,r4
 8017d2c:	1100202c 	andhi	r4,r2,128
 8017d30:	203f0426 	beq	r4,zero,8017944 <__alt_data_end+0xfc017944>
 8017d34:	3463c83a 	sub	r17,r6,r17
 8017d38:	414bc83a 	sub	r5,r8,r5
 8017d3c:	344d803a 	cmpltu	r6,r6,r17
 8017d40:	298bc83a 	sub	r5,r5,r6
 8017d44:	3825883a 	mov	r18,r7
 8017d48:	003e5606 	br	80176a4 <__alt_data_end+0xfc0176a4>
 8017d4c:	4184b03a 	or	r2,r8,r6
 8017d50:	10002b26 	beq	r2,zero,8017e00 <__adddf3+0x7d8>
 8017d54:	2804d0fa 	srli	r2,r5,3
 8017d58:	8822d0fa 	srli	r17,r17,3
 8017d5c:	280a977a 	slli	r5,r5,29
 8017d60:	10c0022c 	andhi	r3,r2,8
 8017d64:	2c62b03a 	or	r17,r5,r17
 8017d68:	18000826 	beq	r3,zero,8017d8c <__adddf3+0x764>
 8017d6c:	4008d0fa 	srli	r4,r8,3
 8017d70:	20c0022c 	andhi	r3,r4,8
 8017d74:	1800051e 	bne	r3,zero,8017d8c <__adddf3+0x764>
 8017d78:	300cd0fa 	srli	r6,r6,3
 8017d7c:	4010977a 	slli	r8,r8,29
 8017d80:	2005883a 	mov	r2,r4
 8017d84:	3825883a 	mov	r18,r7
 8017d88:	41a2b03a 	or	r17,r8,r6
 8017d8c:	880ad77a 	srli	r5,r17,29
 8017d90:	100490fa 	slli	r2,r2,3
 8017d94:	882290fa 	slli	r17,r17,3
 8017d98:	0401ffc4 	movi	r16,2047
 8017d9c:	288ab03a 	or	r5,r5,r2
 8017da0:	003e4006 	br	80176a4 <__alt_data_end+0xfc0176a4>
 8017da4:	01c1ffc4 	movi	r7,2047
 8017da8:	11ffc71e 	bne	r2,r7,8017cc8 <__alt_data_end+0xfc017cc8>
 8017dac:	400b883a 	mov	r5,r8
 8017db0:	3023883a 	mov	r17,r6
 8017db4:	1021883a 	mov	r16,r2
 8017db8:	003e3a06 	br	80176a4 <__alt_data_end+0xfc0176a4>
 8017dbc:	10002d26 	beq	r2,zero,8017e74 <__adddf3+0x84c>
 8017dc0:	4184b03a 	or	r2,r8,r6
 8017dc4:	10000e26 	beq	r2,zero,8017e00 <__adddf3+0x7d8>
 8017dc8:	2804d0fa 	srli	r2,r5,3
 8017dcc:	8822d0fa 	srli	r17,r17,3
 8017dd0:	280a977a 	slli	r5,r5,29
 8017dd4:	10c0022c 	andhi	r3,r2,8
 8017dd8:	2c62b03a 	or	r17,r5,r17
 8017ddc:	183feb26 	beq	r3,zero,8017d8c <__alt_data_end+0xfc017d8c>
 8017de0:	4008d0fa 	srli	r4,r8,3
 8017de4:	20c0022c 	andhi	r3,r4,8
 8017de8:	183fe81e 	bne	r3,zero,8017d8c <__alt_data_end+0xfc017d8c>
 8017dec:	300cd0fa 	srli	r6,r6,3
 8017df0:	4010977a 	slli	r8,r8,29
 8017df4:	2005883a 	mov	r2,r4
 8017df8:	41a2b03a 	or	r17,r8,r6
 8017dfc:	003fe306 	br	8017d8c <__alt_data_end+0xfc017d8c>
 8017e00:	0401ffc4 	movi	r16,2047
 8017e04:	003e2706 	br	80176a4 <__alt_data_end+0xfc0176a4>
 8017e08:	0011883a 	mov	r8,zero
 8017e0c:	003f8306 	br	8017c1c <__alt_data_end+0xfc017c1c>
 8017e10:	193ff804 	addi	r4,r3,-32
 8017e14:	02400804 	movi	r9,32
 8017e18:	2908d83a 	srl	r4,r5,r4
 8017e1c:	1a402526 	beq	r3,r9,8017eb4 <__adddf3+0x88c>
 8017e20:	02401004 	movi	r9,64
 8017e24:	48c7c83a 	sub	r3,r9,r3
 8017e28:	28ca983a 	sll	r5,r5,r3
 8017e2c:	2c62b03a 	or	r17,r5,r17
 8017e30:	8822c03a 	cmpne	r17,r17,zero
 8017e34:	8922b03a 	or	r17,r17,r4
 8017e38:	0007883a 	mov	r3,zero
 8017e3c:	003f2f06 	br	8017afc <__alt_data_end+0xfc017afc>
 8017e40:	01402034 	movhi	r5,128
 8017e44:	0007883a 	mov	r3,zero
 8017e48:	297fffc4 	addi	r5,r5,-1
 8017e4c:	047ffe04 	movi	r17,-8
 8017e50:	0401ffc4 	movi	r16,2047
 8017e54:	003e7306 	br	8017824 <__alt_data_end+0xfc017824>
 8017e58:	2c62b03a 	or	r17,r5,r17
 8017e5c:	8822c03a 	cmpne	r17,r17,zero
 8017e60:	0009883a 	mov	r4,zero
 8017e64:	003fa506 	br	8017cfc <__alt_data_end+0xfc017cfc>
 8017e68:	400b883a 	mov	r5,r8
 8017e6c:	3023883a 	mov	r17,r6
 8017e70:	003e0c06 	br	80176a4 <__alt_data_end+0xfc0176a4>
 8017e74:	400b883a 	mov	r5,r8
 8017e78:	3023883a 	mov	r17,r6
 8017e7c:	0401ffc4 	movi	r16,2047
 8017e80:	003e0806 	br	80176a4 <__alt_data_end+0xfc0176a4>
 8017e84:	21fff804 	addi	r7,r4,-32
 8017e88:	02400804 	movi	r9,32
 8017e8c:	29ced83a 	srl	r7,r5,r7
 8017e90:	22400a26 	beq	r4,r9,8017ebc <__adddf3+0x894>
 8017e94:	02401004 	movi	r9,64
 8017e98:	4909c83a 	sub	r4,r9,r4
 8017e9c:	290a983a 	sll	r5,r5,r4
 8017ea0:	2c62b03a 	or	r17,r5,r17
 8017ea4:	8822c03a 	cmpne	r17,r17,zero
 8017ea8:	89e2b03a 	or	r17,r17,r7
 8017eac:	0009883a 	mov	r4,zero
 8017eb0:	003f9206 	br	8017cfc <__alt_data_end+0xfc017cfc>
 8017eb4:	000b883a 	mov	r5,zero
 8017eb8:	003fdc06 	br	8017e2c <__alt_data_end+0xfc017e2c>
 8017ebc:	000b883a 	mov	r5,zero
 8017ec0:	003ff706 	br	8017ea0 <__alt_data_end+0xfc017ea0>

08017ec4 <__divdf3>:
 8017ec4:	defff004 	addi	sp,sp,-64
 8017ec8:	dc800815 	stw	r18,32(sp)
 8017ecc:	2824d53a 	srli	r18,r5,20
 8017ed0:	dd800c15 	stw	r22,48(sp)
 8017ed4:	282cd7fa 	srli	r22,r5,31
 8017ed8:	dc000615 	stw	r16,24(sp)
 8017edc:	04000434 	movhi	r16,16
 8017ee0:	df000e15 	stw	fp,56(sp)
 8017ee4:	dd000a15 	stw	r20,40(sp)
 8017ee8:	dcc00915 	stw	r19,36(sp)
 8017eec:	dc400715 	stw	r17,28(sp)
 8017ef0:	843fffc4 	addi	r16,r16,-1
 8017ef4:	dfc00f15 	stw	ra,60(sp)
 8017ef8:	ddc00d15 	stw	r23,52(sp)
 8017efc:	dd400b15 	stw	r21,44(sp)
 8017f00:	9481ffcc 	andi	r18,r18,2047
 8017f04:	2029883a 	mov	r20,r4
 8017f08:	2027883a 	mov	r19,r4
 8017f0c:	2c22703a 	and	r17,r5,r16
 8017f10:	b7003fcc 	andi	fp,r22,255
 8017f14:	90005e26 	beq	r18,zero,8018090 <__divdf3+0x1cc>
 8017f18:	0081ffc4 	movi	r2,2047
 8017f1c:	90803526 	beq	r18,r2,8017ff4 <__divdf3+0x130>
 8017f20:	8c000434 	orhi	r16,r17,16
 8017f24:	2004d77a 	srli	r2,r4,29
 8017f28:	802090fa 	slli	r16,r16,3
 8017f2c:	202690fa 	slli	r19,r4,3
 8017f30:	94bf0044 	addi	r18,r18,-1023
 8017f34:	80a2b03a 	or	r17,r16,r2
 8017f38:	0029883a 	mov	r20,zero
 8017f3c:	0011883a 	mov	r8,zero
 8017f40:	380ad53a 	srli	r5,r7,20
 8017f44:	382ed7fa 	srli	r23,r7,31
 8017f48:	04000434 	movhi	r16,16
 8017f4c:	843fffc4 	addi	r16,r16,-1
 8017f50:	2941ffcc 	andi	r5,r5,2047
 8017f54:	302b883a 	mov	r21,r6
 8017f58:	3c20703a 	and	r16,r7,r16
 8017f5c:	ba403fcc 	andi	r9,r23,255
 8017f60:	28006726 	beq	r5,zero,8018100 <__divdf3+0x23c>
 8017f64:	0081ffc4 	movi	r2,2047
 8017f68:	28805f26 	beq	r5,r2,80180e8 <__divdf3+0x224>
 8017f6c:	84000434 	orhi	r16,r16,16
 8017f70:	3004d77a 	srli	r2,r6,29
 8017f74:	802090fa 	slli	r16,r16,3
 8017f78:	302a90fa 	slli	r21,r6,3
 8017f7c:	297f0044 	addi	r5,r5,-1023
 8017f80:	80a0b03a 	or	r16,r16,r2
 8017f84:	000f883a 	mov	r7,zero
 8017f88:	3d06b03a 	or	r3,r7,r20
 8017f8c:	180690ba 	slli	r3,r3,2
 8017f90:	00820074 	movhi	r2,2049
 8017f94:	109fed04 	addi	r2,r2,32692
 8017f98:	1885883a 	add	r2,r3,r2
 8017f9c:	10800017 	ldw	r2,0(r2)
 8017fa0:	b5c8f03a 	xor	r4,r22,r23
 8017fa4:	200d883a 	mov	r6,r4
 8017fa8:	25003fcc 	andi	r20,r4,255
 8017fac:	9165c83a 	sub	r18,r18,r5
 8017fb0:	1000683a 	jmp	r2
 8017fb4:	080181fc 	xorhi	zero,at,1543
 8017fb8:	0801802c 	andhi	zero,at,1536
 8017fbc:	080181c0 	call	80181c <__alt_mem_sdram_controller-0x77fe7e4>
 8017fc0:	08018010 	cmplti	zero,at,1536
 8017fc4:	080181c0 	call	80181c <__alt_mem_sdram_controller-0x77fe7e4>
 8017fc8:	08018194 	ori	zero,at,1542
 8017fcc:	080181c0 	call	80181c <__alt_mem_sdram_controller-0x77fe7e4>
 8017fd0:	08018010 	cmplti	zero,at,1536
 8017fd4:	0801802c 	andhi	zero,at,1536
 8017fd8:	0801802c 	andhi	zero,at,1536
 8017fdc:	08018194 	ori	zero,at,1542
 8017fe0:	08018010 	cmplti	zero,at,1536
 8017fe4:	08018020 	cmpeqi	zero,at,1536
 8017fe8:	08018020 	cmpeqi	zero,at,1536
 8017fec:	08018020 	cmpeqi	zero,at,1536
 8017ff0:	080181d0 	cmplti	zero,at,1543
 8017ff4:	8904b03a 	or	r2,r17,r4
 8017ff8:	1000631e 	bne	r2,zero,8018188 <__divdf3+0x2c4>
 8017ffc:	05000204 	movi	r20,8
 8018000:	0023883a 	mov	r17,zero
 8018004:	0027883a 	mov	r19,zero
 8018008:	02000084 	movi	r8,2
 801800c:	003fcc06 	br	8017f40 <__alt_data_end+0xfc017f40>
 8018010:	8023883a 	mov	r17,r16
 8018014:	a827883a 	mov	r19,r21
 8018018:	4839883a 	mov	fp,r9
 801801c:	3811883a 	mov	r8,r7
 8018020:	00800084 	movi	r2,2
 8018024:	4081531e 	bne	r8,r2,8018574 <__divdf3+0x6b0>
 8018028:	e029883a 	mov	r20,fp
 801802c:	a180004c 	andi	r6,r20,1
 8018030:	0201ffc4 	movi	r8,2047
 8018034:	000b883a 	mov	r5,zero
 8018038:	0027883a 	mov	r19,zero
 801803c:	4010953a 	slli	r8,r8,20
 8018040:	30c03fcc 	andi	r3,r6,255
 8018044:	04000434 	movhi	r16,16
 8018048:	180697fa 	slli	r3,r3,31
 801804c:	843fffc4 	addi	r16,r16,-1
 8018050:	2c20703a 	and	r16,r5,r16
 8018054:	8220b03a 	or	r16,r16,r8
 8018058:	80c6b03a 	or	r3,r16,r3
 801805c:	9805883a 	mov	r2,r19
 8018060:	dfc00f17 	ldw	ra,60(sp)
 8018064:	df000e17 	ldw	fp,56(sp)
 8018068:	ddc00d17 	ldw	r23,52(sp)
 801806c:	dd800c17 	ldw	r22,48(sp)
 8018070:	dd400b17 	ldw	r21,44(sp)
 8018074:	dd000a17 	ldw	r20,40(sp)
 8018078:	dcc00917 	ldw	r19,36(sp)
 801807c:	dc800817 	ldw	r18,32(sp)
 8018080:	dc400717 	ldw	r17,28(sp)
 8018084:	dc000617 	ldw	r16,24(sp)
 8018088:	dec01004 	addi	sp,sp,64
 801808c:	f800283a 	ret
 8018090:	8904b03a 	or	r2,r17,r4
 8018094:	10003726 	beq	r2,zero,8018174 <__divdf3+0x2b0>
 8018098:	88014d26 	beq	r17,zero,80185d0 <__divdf3+0x70c>
 801809c:	8809883a 	mov	r4,r17
 80180a0:	d9800215 	stw	r6,8(sp)
 80180a4:	d9c00515 	stw	r7,20(sp)
 80180a8:	8019f580 	call	8019f58 <__clzsi2>
 80180ac:	d9800217 	ldw	r6,8(sp)
 80180b0:	d9c00517 	ldw	r7,20(sp)
 80180b4:	1007883a 	mov	r3,r2
 80180b8:	01000a04 	movi	r4,40
 80180bc:	1cfffe04 	addi	r19,r3,-8
 80180c0:	20c9c83a 	sub	r4,r4,r3
 80180c4:	8cca983a 	sll	r5,r17,r19
 80180c8:	a108d83a 	srl	r4,r20,r4
 80180cc:	a4e6983a 	sll	r19,r20,r19
 80180d0:	2162b03a 	or	r17,r4,r5
 80180d4:	04bf0344 	movi	r18,-1011
 80180d8:	90e5c83a 	sub	r18,r18,r3
 80180dc:	0029883a 	mov	r20,zero
 80180e0:	0011883a 	mov	r8,zero
 80180e4:	003f9606 	br	8017f40 <__alt_data_end+0xfc017f40>
 80180e8:	8184b03a 	or	r2,r16,r6
 80180ec:	10001f1e 	bne	r2,zero,801816c <__divdf3+0x2a8>
 80180f0:	0021883a 	mov	r16,zero
 80180f4:	002b883a 	mov	r21,zero
 80180f8:	01c00084 	movi	r7,2
 80180fc:	003fa206 	br	8017f88 <__alt_data_end+0xfc017f88>
 8018100:	8184b03a 	or	r2,r16,r6
 8018104:	10001526 	beq	r2,zero,801815c <__divdf3+0x298>
 8018108:	80013d26 	beq	r16,zero,8018600 <__divdf3+0x73c>
 801810c:	8009883a 	mov	r4,r16
 8018110:	d9800215 	stw	r6,8(sp)
 8018114:	da000315 	stw	r8,12(sp)
 8018118:	da400415 	stw	r9,16(sp)
 801811c:	8019f580 	call	8019f58 <__clzsi2>
 8018120:	d9800217 	ldw	r6,8(sp)
 8018124:	da000317 	ldw	r8,12(sp)
 8018128:	da400417 	ldw	r9,16(sp)
 801812c:	1007883a 	mov	r3,r2
 8018130:	01000a04 	movi	r4,40
 8018134:	1d7ffe04 	addi	r21,r3,-8
 8018138:	20c9c83a 	sub	r4,r4,r3
 801813c:	8560983a 	sll	r16,r16,r21
 8018140:	3108d83a 	srl	r4,r6,r4
 8018144:	356a983a 	sll	r21,r6,r21
 8018148:	2420b03a 	or	r16,r4,r16
 801814c:	017f0344 	movi	r5,-1011
 8018150:	28cbc83a 	sub	r5,r5,r3
 8018154:	000f883a 	mov	r7,zero
 8018158:	003f8b06 	br	8017f88 <__alt_data_end+0xfc017f88>
 801815c:	0021883a 	mov	r16,zero
 8018160:	002b883a 	mov	r21,zero
 8018164:	01c00044 	movi	r7,1
 8018168:	003f8706 	br	8017f88 <__alt_data_end+0xfc017f88>
 801816c:	01c000c4 	movi	r7,3
 8018170:	003f8506 	br	8017f88 <__alt_data_end+0xfc017f88>
 8018174:	05000104 	movi	r20,4
 8018178:	0023883a 	mov	r17,zero
 801817c:	0027883a 	mov	r19,zero
 8018180:	02000044 	movi	r8,1
 8018184:	003f6e06 	br	8017f40 <__alt_data_end+0xfc017f40>
 8018188:	05000304 	movi	r20,12
 801818c:	020000c4 	movi	r8,3
 8018190:	003f6b06 	br	8017f40 <__alt_data_end+0xfc017f40>
 8018194:	01400434 	movhi	r5,16
 8018198:	000d883a 	mov	r6,zero
 801819c:	297fffc4 	addi	r5,r5,-1
 80181a0:	04ffffc4 	movi	r19,-1
 80181a4:	0201ffc4 	movi	r8,2047
 80181a8:	003fa406 	br	801803c <__alt_data_end+0xfc01803c>
 80181ac:	043f0084 	movi	r16,-1022
 80181b0:	84a1c83a 	sub	r16,r16,r18
 80181b4:	00800e04 	movi	r2,56
 80181b8:	14014d0e 	bge	r2,r16,80186f0 <__divdf3+0x82c>
 80181bc:	a180004c 	andi	r6,r20,1
 80181c0:	0011883a 	mov	r8,zero
 80181c4:	000b883a 	mov	r5,zero
 80181c8:	0027883a 	mov	r19,zero
 80181cc:	003f9b06 	br	801803c <__alt_data_end+0xfc01803c>
 80181d0:	8880022c 	andhi	r2,r17,8
 80181d4:	1000f026 	beq	r2,zero,8018598 <__divdf3+0x6d4>
 80181d8:	8080022c 	andhi	r2,r16,8
 80181dc:	1000ee1e 	bne	r2,zero,8018598 <__divdf3+0x6d4>
 80181e0:	00800434 	movhi	r2,16
 80181e4:	81400234 	orhi	r5,r16,8
 80181e8:	10bfffc4 	addi	r2,r2,-1
 80181ec:	b80d883a 	mov	r6,r23
 80181f0:	288a703a 	and	r5,r5,r2
 80181f4:	a827883a 	mov	r19,r21
 80181f8:	003fea06 	br	80181a4 <__alt_data_end+0xfc0181a4>
 80181fc:	84411c36 	bltu	r16,r17,8018670 <__divdf3+0x7ac>
 8018200:	8c011a26 	beq	r17,r16,801866c <__divdf3+0x7a8>
 8018204:	94bfffc4 	addi	r18,r18,-1
 8018208:	dcc00015 	stw	r19,0(sp)
 801820c:	8811883a 	mov	r8,r17
 8018210:	002d883a 	mov	r22,zero
 8018214:	a80cd63a 	srli	r6,r21,24
 8018218:	8020923a 	slli	r16,r16,8
 801821c:	a82a923a 	slli	r21,r21,8
 8018220:	4009883a 	mov	r4,r8
 8018224:	342eb03a 	or	r23,r6,r16
 8018228:	dd400115 	stw	r21,4(sp)
 801822c:	b82ad43a 	srli	r21,r23,16
 8018230:	da000315 	stw	r8,12(sp)
 8018234:	bcffffcc 	andi	r19,r23,65535
 8018238:	a80b883a 	mov	r5,r21
 801823c:	80174340 	call	8017434 <__udivsi3>
 8018240:	1009883a 	mov	r4,r2
 8018244:	980b883a 	mov	r5,r19
 8018248:	1023883a 	mov	r17,r2
 801824c:	800334c0 	call	800334c <__mulsi3>
 8018250:	da000317 	ldw	r8,12(sp)
 8018254:	a80b883a 	mov	r5,r21
 8018258:	1039883a 	mov	fp,r2
 801825c:	4009883a 	mov	r4,r8
 8018260:	801743c0 	call	801743c <__umodsi3>
 8018264:	d8c00017 	ldw	r3,0(sp)
 8018268:	1004943a 	slli	r2,r2,16
 801826c:	1810d43a 	srli	r8,r3,16
 8018270:	120eb03a 	or	r7,r2,r8
 8018274:	3f00062e 	bgeu	r7,fp,8018290 <__divdf3+0x3cc>
 8018278:	3dcf883a 	add	r7,r7,r23
 801827c:	88bfffc4 	addi	r2,r17,-1
 8018280:	3dc10a36 	bltu	r7,r23,80186ac <__divdf3+0x7e8>
 8018284:	3f01092e 	bgeu	r7,fp,80186ac <__divdf3+0x7e8>
 8018288:	8c7fff84 	addi	r17,r17,-2
 801828c:	3dcf883a 	add	r7,r7,r23
 8018290:	3f39c83a 	sub	fp,r7,fp
 8018294:	e009883a 	mov	r4,fp
 8018298:	a80b883a 	mov	r5,r21
 801829c:	80174340 	call	8017434 <__udivsi3>
 80182a0:	1009883a 	mov	r4,r2
 80182a4:	980b883a 	mov	r5,r19
 80182a8:	1021883a 	mov	r16,r2
 80182ac:	800334c0 	call	800334c <__mulsi3>
 80182b0:	e009883a 	mov	r4,fp
 80182b4:	a80b883a 	mov	r5,r21
 80182b8:	d8800315 	stw	r2,12(sp)
 80182bc:	801743c0 	call	801743c <__umodsi3>
 80182c0:	d9000017 	ldw	r4,0(sp)
 80182c4:	1004943a 	slli	r2,r2,16
 80182c8:	da000317 	ldw	r8,12(sp)
 80182cc:	20ffffcc 	andi	r3,r4,65535
 80182d0:	10ceb03a 	or	r7,r2,r3
 80182d4:	3a00062e 	bgeu	r7,r8,80182f0 <__divdf3+0x42c>
 80182d8:	3dcf883a 	add	r7,r7,r23
 80182dc:	80bfffc4 	addi	r2,r16,-1
 80182e0:	3dc0f036 	bltu	r7,r23,80186a4 <__divdf3+0x7e0>
 80182e4:	3a00ef2e 	bgeu	r7,r8,80186a4 <__divdf3+0x7e0>
 80182e8:	843fff84 	addi	r16,r16,-2
 80182ec:	3dcf883a 	add	r7,r7,r23
 80182f0:	d8c00117 	ldw	r3,4(sp)
 80182f4:	8822943a 	slli	r17,r17,16
 80182f8:	3a0fc83a 	sub	r7,r7,r8
 80182fc:	1806d43a 	srli	r3,r3,16
 8018300:	8462b03a 	or	r17,r16,r17
 8018304:	8affffcc 	andi	r11,r17,65535
 8018308:	d8c00015 	stw	r3,0(sp)
 801830c:	d8c00117 	ldw	r3,4(sp)
 8018310:	8820d43a 	srli	r16,r17,16
 8018314:	5809883a 	mov	r4,r11
 8018318:	1f3fffcc 	andi	fp,r3,65535
 801831c:	e00b883a 	mov	r5,fp
 8018320:	d9c00515 	stw	r7,20(sp)
 8018324:	dac00215 	stw	r11,8(sp)
 8018328:	800334c0 	call	800334c <__mulsi3>
 801832c:	8009883a 	mov	r4,r16
 8018330:	e00b883a 	mov	r5,fp
 8018334:	d8800415 	stw	r2,16(sp)
 8018338:	800334c0 	call	800334c <__mulsi3>
 801833c:	d9400017 	ldw	r5,0(sp)
 8018340:	8009883a 	mov	r4,r16
 8018344:	d8800315 	stw	r2,12(sp)
 8018348:	800334c0 	call	800334c <__mulsi3>
 801834c:	dac00217 	ldw	r11,8(sp)
 8018350:	d9400017 	ldw	r5,0(sp)
 8018354:	d8800215 	stw	r2,8(sp)
 8018358:	5809883a 	mov	r4,r11
 801835c:	800334c0 	call	800334c <__mulsi3>
 8018360:	da400417 	ldw	r9,16(sp)
 8018364:	da800317 	ldw	r10,12(sp)
 8018368:	d9c00517 	ldw	r7,20(sp)
 801836c:	480ad43a 	srli	r5,r9,16
 8018370:	5085883a 	add	r2,r10,r2
 8018374:	db000217 	ldw	r12,8(sp)
 8018378:	1151883a 	add	r8,r2,r5
 801837c:	4280022e 	bgeu	r8,r10,8018388 <__divdf3+0x4c4>
 8018380:	00800074 	movhi	r2,1
 8018384:	6099883a 	add	r12,r12,r2
 8018388:	400ad43a 	srli	r5,r8,16
 801838c:	4010943a 	slli	r8,r8,16
 8018390:	4c3fffcc 	andi	r16,r9,65535
 8018394:	6149883a 	add	r4,r12,r5
 8018398:	4411883a 	add	r8,r8,r16
 801839c:	3900a736 	bltu	r7,r4,801863c <__divdf3+0x778>
 80183a0:	3900c426 	beq	r7,r4,80186b4 <__divdf3+0x7f0>
 80183a4:	3909c83a 	sub	r4,r7,r4
 80183a8:	b221c83a 	sub	r16,r22,r8
 80183ac:	b42d803a 	cmpltu	r22,r22,r16
 80183b0:	25adc83a 	sub	r22,r4,r22
 80183b4:	b5c0c626 	beq	r22,r23,80186d0 <__divdf3+0x80c>
 80183b8:	b009883a 	mov	r4,r22
 80183bc:	a80b883a 	mov	r5,r21
 80183c0:	80174340 	call	8017434 <__udivsi3>
 80183c4:	1009883a 	mov	r4,r2
 80183c8:	980b883a 	mov	r5,r19
 80183cc:	d8800315 	stw	r2,12(sp)
 80183d0:	800334c0 	call	800334c <__mulsi3>
 80183d4:	a80b883a 	mov	r5,r21
 80183d8:	b009883a 	mov	r4,r22
 80183dc:	d8800415 	stw	r2,16(sp)
 80183e0:	801743c0 	call	801743c <__umodsi3>
 80183e4:	1004943a 	slli	r2,r2,16
 80183e8:	800ed43a 	srli	r7,r16,16
 80183ec:	da400417 	ldw	r9,16(sp)
 80183f0:	da000317 	ldw	r8,12(sp)
 80183f4:	11cab03a 	or	r5,r2,r7
 80183f8:	2a40062e 	bgeu	r5,r9,8018414 <__divdf3+0x550>
 80183fc:	2dcb883a 	add	r5,r5,r23
 8018400:	40bfffc4 	addi	r2,r8,-1
 8018404:	2dc0b436 	bltu	r5,r23,80186d8 <__divdf3+0x814>
 8018408:	2a40b32e 	bgeu	r5,r9,80186d8 <__divdf3+0x814>
 801840c:	423fff84 	addi	r8,r8,-2
 8018410:	2dcb883a 	add	r5,r5,r23
 8018414:	2a6dc83a 	sub	r22,r5,r9
 8018418:	b009883a 	mov	r4,r22
 801841c:	a80b883a 	mov	r5,r21
 8018420:	da000315 	stw	r8,12(sp)
 8018424:	80174340 	call	8017434 <__udivsi3>
 8018428:	980b883a 	mov	r5,r19
 801842c:	1009883a 	mov	r4,r2
 8018430:	d8800415 	stw	r2,16(sp)
 8018434:	800334c0 	call	800334c <__mulsi3>
 8018438:	b009883a 	mov	r4,r22
 801843c:	a80b883a 	mov	r5,r21
 8018440:	1027883a 	mov	r19,r2
 8018444:	801743c0 	call	801743c <__umodsi3>
 8018448:	1004943a 	slli	r2,r2,16
 801844c:	843fffcc 	andi	r16,r16,65535
 8018450:	da000317 	ldw	r8,12(sp)
 8018454:	140eb03a 	or	r7,r2,r16
 8018458:	da400417 	ldw	r9,16(sp)
 801845c:	3cc0062e 	bgeu	r7,r19,8018478 <__divdf3+0x5b4>
 8018460:	3dcf883a 	add	r7,r7,r23
 8018464:	48bfffc4 	addi	r2,r9,-1
 8018468:	3dc09d36 	bltu	r7,r23,80186e0 <__divdf3+0x81c>
 801846c:	3cc09c2e 	bgeu	r7,r19,80186e0 <__divdf3+0x81c>
 8018470:	4a7fff84 	addi	r9,r9,-2
 8018474:	3dcf883a 	add	r7,r7,r23
 8018478:	4010943a 	slli	r8,r8,16
 801847c:	3cebc83a 	sub	r21,r7,r19
 8018480:	e00b883a 	mov	r5,fp
 8018484:	4a26b03a 	or	r19,r9,r8
 8018488:	99ffffcc 	andi	r7,r19,65535
 801848c:	9820d43a 	srli	r16,r19,16
 8018490:	3809883a 	mov	r4,r7
 8018494:	d9c00515 	stw	r7,20(sp)
 8018498:	800334c0 	call	800334c <__mulsi3>
 801849c:	8009883a 	mov	r4,r16
 80184a0:	e00b883a 	mov	r5,fp
 80184a4:	102d883a 	mov	r22,r2
 80184a8:	800334c0 	call	800334c <__mulsi3>
 80184ac:	d9400017 	ldw	r5,0(sp)
 80184b0:	8009883a 	mov	r4,r16
 80184b4:	1039883a 	mov	fp,r2
 80184b8:	800334c0 	call	800334c <__mulsi3>
 80184bc:	d9c00517 	ldw	r7,20(sp)
 80184c0:	d9400017 	ldw	r5,0(sp)
 80184c4:	1021883a 	mov	r16,r2
 80184c8:	3809883a 	mov	r4,r7
 80184cc:	800334c0 	call	800334c <__mulsi3>
 80184d0:	b008d43a 	srli	r4,r22,16
 80184d4:	e085883a 	add	r2,fp,r2
 80184d8:	1109883a 	add	r4,r2,r4
 80184dc:	2700022e 	bgeu	r4,fp,80184e8 <__divdf3+0x624>
 80184e0:	00800074 	movhi	r2,1
 80184e4:	80a1883a 	add	r16,r16,r2
 80184e8:	200ad43a 	srli	r5,r4,16
 80184ec:	2008943a 	slli	r4,r4,16
 80184f0:	b5bfffcc 	andi	r22,r22,65535
 80184f4:	8145883a 	add	r2,r16,r5
 80184f8:	2589883a 	add	r4,r4,r22
 80184fc:	a8802c36 	bltu	r21,r2,80185b0 <__divdf3+0x6ec>
 8018500:	a880a426 	beq	r21,r2,8018794 <__divdf3+0x8d0>
 8018504:	9cc00054 	ori	r19,r19,1
 8018508:	9200ffc4 	addi	r8,r18,1023
 801850c:	023f270e 	bge	zero,r8,80181ac <__alt_data_end+0xfc0181ac>
 8018510:	988001cc 	andi	r2,r19,7
 8018514:	10000726 	beq	r2,zero,8018534 <__divdf3+0x670>
 8018518:	990003cc 	andi	r4,r19,15
 801851c:	00800104 	movi	r2,4
 8018520:	20800426 	beq	r4,r2,8018534 <__divdf3+0x670>
 8018524:	9885883a 	add	r2,r19,r2
 8018528:	14e7803a 	cmpltu	r19,r2,r19
 801852c:	8ce3883a 	add	r17,r17,r19
 8018530:	1027883a 	mov	r19,r2
 8018534:	8880402c 	andhi	r2,r17,256
 8018538:	10000426 	beq	r2,zero,801854c <__divdf3+0x688>
 801853c:	00bfc034 	movhi	r2,65280
 8018540:	10bfffc4 	addi	r2,r2,-1
 8018544:	92010004 	addi	r8,r18,1024
 8018548:	88a2703a 	and	r17,r17,r2
 801854c:	0081ff84 	movi	r2,2046
 8018550:	123eb616 	blt	r2,r8,801802c <__alt_data_end+0xfc01802c>
 8018554:	9826d0fa 	srli	r19,r19,3
 8018558:	8804977a 	slli	r2,r17,29
 801855c:	8820927a 	slli	r16,r17,9
 8018560:	4201ffcc 	andi	r8,r8,2047
 8018564:	14e6b03a 	or	r19,r2,r19
 8018568:	800ad33a 	srli	r5,r16,12
 801856c:	a180004c 	andi	r6,r20,1
 8018570:	003eb206 	br	801803c <__alt_data_end+0xfc01803c>
 8018574:	008000c4 	movi	r2,3
 8018578:	4080ac26 	beq	r8,r2,801882c <__divdf3+0x968>
 801857c:	00800044 	movi	r2,1
 8018580:	4080591e 	bne	r8,r2,80186e8 <__divdf3+0x824>
 8018584:	e00d883a 	mov	r6,fp
 8018588:	0011883a 	mov	r8,zero
 801858c:	000b883a 	mov	r5,zero
 8018590:	0027883a 	mov	r19,zero
 8018594:	003ea906 	br	801803c <__alt_data_end+0xfc01803c>
 8018598:	00800434 	movhi	r2,16
 801859c:	89400234 	orhi	r5,r17,8
 80185a0:	10bfffc4 	addi	r2,r2,-1
 80185a4:	b00d883a 	mov	r6,r22
 80185a8:	288a703a 	and	r5,r5,r2
 80185ac:	003efd06 	br	80181a4 <__alt_data_end+0xfc0181a4>
 80185b0:	adcf883a 	add	r7,r21,r23
 80185b4:	997fffc4 	addi	r5,r19,-1
 80185b8:	3dc0412e 	bgeu	r7,r23,80186c0 <__divdf3+0x7fc>
 80185bc:	2827883a 	mov	r19,r5
 80185c0:	38bfd01e 	bne	r7,r2,8018504 <__alt_data_end+0xfc018504>
 80185c4:	d8c00117 	ldw	r3,4(sp)
 80185c8:	193fce1e 	bne	r3,r4,8018504 <__alt_data_end+0xfc018504>
 80185cc:	003fce06 	br	8018508 <__alt_data_end+0xfc018508>
 80185d0:	d9800215 	stw	r6,8(sp)
 80185d4:	d9c00515 	stw	r7,20(sp)
 80185d8:	8019f580 	call	8019f58 <__clzsi2>
 80185dc:	10c00804 	addi	r3,r2,32
 80185e0:	010009c4 	movi	r4,39
 80185e4:	d9800217 	ldw	r6,8(sp)
 80185e8:	d9c00517 	ldw	r7,20(sp)
 80185ec:	20feb20e 	bge	r4,r3,80180b8 <__alt_data_end+0xfc0180b8>
 80185f0:	117ffe04 	addi	r5,r2,-8
 80185f4:	a162983a 	sll	r17,r20,r5
 80185f8:	0027883a 	mov	r19,zero
 80185fc:	003eb506 	br	80180d4 <__alt_data_end+0xfc0180d4>
 8018600:	3009883a 	mov	r4,r6
 8018604:	d9800215 	stw	r6,8(sp)
 8018608:	da000315 	stw	r8,12(sp)
 801860c:	da400415 	stw	r9,16(sp)
 8018610:	8019f580 	call	8019f58 <__clzsi2>
 8018614:	10c00804 	addi	r3,r2,32
 8018618:	010009c4 	movi	r4,39
 801861c:	d9800217 	ldw	r6,8(sp)
 8018620:	da000317 	ldw	r8,12(sp)
 8018624:	da400417 	ldw	r9,16(sp)
 8018628:	20fec10e 	bge	r4,r3,8018130 <__alt_data_end+0xfc018130>
 801862c:	10bffe04 	addi	r2,r2,-8
 8018630:	a8a0983a 	sll	r16,r21,r2
 8018634:	002b883a 	mov	r21,zero
 8018638:	003ec406 	br	801814c <__alt_data_end+0xfc01814c>
 801863c:	d8c00117 	ldw	r3,4(sp)
 8018640:	b0ed883a 	add	r22,r22,r3
 8018644:	b0c5803a 	cmpltu	r2,r22,r3
 8018648:	15c5883a 	add	r2,r2,r23
 801864c:	11cf883a 	add	r7,r2,r7
 8018650:	88bfffc4 	addi	r2,r17,-1
 8018654:	b9c00d2e 	bgeu	r23,r7,801868c <__divdf3+0x7c8>
 8018658:	39003f36 	bltu	r7,r4,8018758 <__divdf3+0x894>
 801865c:	21c06a26 	beq	r4,r7,8018808 <__divdf3+0x944>
 8018660:	3909c83a 	sub	r4,r7,r4
 8018664:	1023883a 	mov	r17,r2
 8018668:	003f4f06 	br	80183a8 <__alt_data_end+0xfc0183a8>
 801866c:	9d7ee536 	bltu	r19,r21,8018204 <__alt_data_end+0xfc018204>
 8018670:	982ed07a 	srli	r23,r19,1
 8018674:	880497fa 	slli	r2,r17,31
 8018678:	8810d07a 	srli	r8,r17,1
 801867c:	982c97fa 	slli	r22,r19,31
 8018680:	b884b03a 	or	r2,r23,r2
 8018684:	d8800015 	stw	r2,0(sp)
 8018688:	003ee206 	br	8018214 <__alt_data_end+0xfc018214>
 801868c:	3dfff41e 	bne	r7,r23,8018660 <__alt_data_end+0xfc018660>
 8018690:	d8c00117 	ldw	r3,4(sp)
 8018694:	b0fff02e 	bgeu	r22,r3,8018658 <__alt_data_end+0xfc018658>
 8018698:	b909c83a 	sub	r4,r23,r4
 801869c:	1023883a 	mov	r17,r2
 80186a0:	003f4106 	br	80183a8 <__alt_data_end+0xfc0183a8>
 80186a4:	1021883a 	mov	r16,r2
 80186a8:	003f1106 	br	80182f0 <__alt_data_end+0xfc0182f0>
 80186ac:	1023883a 	mov	r17,r2
 80186b0:	003ef706 	br	8018290 <__alt_data_end+0xfc018290>
 80186b4:	b23fe136 	bltu	r22,r8,801863c <__alt_data_end+0xfc01863c>
 80186b8:	0009883a 	mov	r4,zero
 80186bc:	003f3a06 	br	80183a8 <__alt_data_end+0xfc0183a8>
 80186c0:	38802c36 	bltu	r7,r2,8018774 <__divdf3+0x8b0>
 80186c4:	11c05326 	beq	r2,r7,8018814 <__divdf3+0x950>
 80186c8:	2827883a 	mov	r19,r5
 80186cc:	003f8d06 	br	8018504 <__alt_data_end+0xfc018504>
 80186d0:	04ffffc4 	movi	r19,-1
 80186d4:	003f8c06 	br	8018508 <__alt_data_end+0xfc018508>
 80186d8:	1011883a 	mov	r8,r2
 80186dc:	003f4d06 	br	8018414 <__alt_data_end+0xfc018414>
 80186e0:	1013883a 	mov	r9,r2
 80186e4:	003f6406 	br	8018478 <__alt_data_end+0xfc018478>
 80186e8:	e029883a 	mov	r20,fp
 80186ec:	003f8606 	br	8018508 <__alt_data_end+0xfc018508>
 80186f0:	008007c4 	movi	r2,31
 80186f4:	14002a16 	blt	r2,r16,80187a0 <__divdf3+0x8dc>
 80186f8:	91410784 	addi	r5,r18,1054
 80186fc:	9c0cd83a 	srl	r6,r19,r16
 8018700:	8948983a 	sll	r4,r17,r5
 8018704:	9944983a 	sll	r2,r19,r5
 8018708:	8c20d83a 	srl	r16,r17,r16
 801870c:	3108b03a 	or	r4,r6,r4
 8018710:	1004c03a 	cmpne	r2,r2,zero
 8018714:	2084b03a 	or	r2,r4,r2
 8018718:	110001cc 	andi	r4,r2,7
 801871c:	20000726 	beq	r4,zero,801873c <__divdf3+0x878>
 8018720:	114003cc 	andi	r5,r2,15
 8018724:	01000104 	movi	r4,4
 8018728:	29000426 	beq	r5,r4,801873c <__divdf3+0x878>
 801872c:	11000104 	addi	r4,r2,4
 8018730:	2085803a 	cmpltu	r2,r4,r2
 8018734:	80a1883a 	add	r16,r16,r2
 8018738:	2005883a 	mov	r2,r4
 801873c:	8100202c 	andhi	r4,r16,128
 8018740:	20002d26 	beq	r4,zero,80187f8 <__divdf3+0x934>
 8018744:	a180004c 	andi	r6,r20,1
 8018748:	02000044 	movi	r8,1
 801874c:	000b883a 	mov	r5,zero
 8018750:	0027883a 	mov	r19,zero
 8018754:	003e3906 	br	801803c <__alt_data_end+0xfc01803c>
 8018758:	d8c00117 	ldw	r3,4(sp)
 801875c:	8c7fff84 	addi	r17,r17,-2
 8018760:	b0ed883a 	add	r22,r22,r3
 8018764:	b0c5803a 	cmpltu	r2,r22,r3
 8018768:	15c5883a 	add	r2,r2,r23
 801876c:	11cf883a 	add	r7,r2,r7
 8018770:	003f0c06 	br	80183a4 <__alt_data_end+0xfc0183a4>
 8018774:	d8c00117 	ldw	r3,4(sp)
 8018778:	997fff84 	addi	r5,r19,-2
 801877c:	18d1883a 	add	r8,r3,r3
 8018780:	40c7803a 	cmpltu	r3,r8,r3
 8018784:	1dcd883a 	add	r6,r3,r23
 8018788:	398f883a 	add	r7,r7,r6
 801878c:	da000115 	stw	r8,4(sp)
 8018790:	003f8a06 	br	80185bc <__alt_data_end+0xfc0185bc>
 8018794:	203f861e 	bne	r4,zero,80185b0 <__alt_data_end+0xfc0185b0>
 8018798:	d8000115 	stw	zero,4(sp)
 801879c:	003f8906 	br	80185c4 <__alt_data_end+0xfc0185c4>
 80187a0:	00bef884 	movi	r2,-1054
 80187a4:	1485c83a 	sub	r2,r2,r18
 80187a8:	01000804 	movi	r4,32
 80187ac:	8884d83a 	srl	r2,r17,r2
 80187b0:	81001c26 	beq	r16,r4,8018824 <__divdf3+0x960>
 80187b4:	91010f84 	addi	r4,r18,1086
 80187b8:	8908983a 	sll	r4,r17,r4
 80187bc:	24c8b03a 	or	r4,r4,r19
 80187c0:	2008c03a 	cmpne	r4,r4,zero
 80187c4:	2084b03a 	or	r2,r4,r2
 80187c8:	140001cc 	andi	r16,r2,7
 80187cc:	8000061e 	bne	r16,zero,80187e8 <__divdf3+0x924>
 80187d0:	000b883a 	mov	r5,zero
 80187d4:	1004d0fa 	srli	r2,r2,3
 80187d8:	a180004c 	andi	r6,r20,1
 80187dc:	0011883a 	mov	r8,zero
 80187e0:	1426b03a 	or	r19,r2,r16
 80187e4:	003e1506 	br	801803c <__alt_data_end+0xfc01803c>
 80187e8:	114003cc 	andi	r5,r2,15
 80187ec:	01000104 	movi	r4,4
 80187f0:	0021883a 	mov	r16,zero
 80187f4:	293fcd1e 	bne	r5,r4,801872c <__alt_data_end+0xfc01872c>
 80187f8:	800a927a 	slli	r5,r16,9
 80187fc:	8020977a 	slli	r16,r16,29
 8018800:	280ad33a 	srli	r5,r5,12
 8018804:	003ff306 	br	80187d4 <__alt_data_end+0xfc0187d4>
 8018808:	b23fd336 	bltu	r22,r8,8018758 <__alt_data_end+0xfc018758>
 801880c:	1023883a 	mov	r17,r2
 8018810:	003fa906 	br	80186b8 <__alt_data_end+0xfc0186b8>
 8018814:	d8c00117 	ldw	r3,4(sp)
 8018818:	193fd636 	bltu	r3,r4,8018774 <__alt_data_end+0xfc018774>
 801881c:	2827883a 	mov	r19,r5
 8018820:	003f6806 	br	80185c4 <__alt_data_end+0xfc0185c4>
 8018824:	0009883a 	mov	r4,zero
 8018828:	003fe406 	br	80187bc <__alt_data_end+0xfc0187bc>
 801882c:	00800434 	movhi	r2,16
 8018830:	89400234 	orhi	r5,r17,8
 8018834:	10bfffc4 	addi	r2,r2,-1
 8018838:	e00d883a 	mov	r6,fp
 801883c:	288a703a 	and	r5,r5,r2
 8018840:	003e5806 	br	80181a4 <__alt_data_end+0xfc0181a4>

08018844 <__eqdf2>:
 8018844:	2804d53a 	srli	r2,r5,20
 8018848:	3806d53a 	srli	r3,r7,20
 801884c:	02000434 	movhi	r8,16
 8018850:	423fffc4 	addi	r8,r8,-1
 8018854:	1081ffcc 	andi	r2,r2,2047
 8018858:	0241ffc4 	movi	r9,2047
 801885c:	2a14703a 	and	r10,r5,r8
 8018860:	18c1ffcc 	andi	r3,r3,2047
 8018864:	3a10703a 	and	r8,r7,r8
 8018868:	280ad7fa 	srli	r5,r5,31
 801886c:	380ed7fa 	srli	r7,r7,31
 8018870:	12400f26 	beq	r2,r9,80188b0 <__eqdf2+0x6c>
 8018874:	0241ffc4 	movi	r9,2047
 8018878:	1a400326 	beq	r3,r9,8018888 <__eqdf2+0x44>
 801887c:	10c00526 	beq	r2,r3,8018894 <__eqdf2+0x50>
 8018880:	00800044 	movi	r2,1
 8018884:	f800283a 	ret
 8018888:	4192b03a 	or	r9,r8,r6
 801888c:	483ffc1e 	bne	r9,zero,8018880 <__alt_data_end+0xfc018880>
 8018890:	10fffb1e 	bne	r2,r3,8018880 <__alt_data_end+0xfc018880>
 8018894:	523ffa1e 	bne	r10,r8,8018880 <__alt_data_end+0xfc018880>
 8018898:	21bff91e 	bne	r4,r6,8018880 <__alt_data_end+0xfc018880>
 801889c:	29c00826 	beq	r5,r7,80188c0 <__eqdf2+0x7c>
 80188a0:	103ff71e 	bne	r2,zero,8018880 <__alt_data_end+0xfc018880>
 80188a4:	5104b03a 	or	r2,r10,r4
 80188a8:	1004c03a 	cmpne	r2,r2,zero
 80188ac:	f800283a 	ret
 80188b0:	5112b03a 	or	r9,r10,r4
 80188b4:	483fef26 	beq	r9,zero,8018874 <__alt_data_end+0xfc018874>
 80188b8:	00800044 	movi	r2,1
 80188bc:	f800283a 	ret
 80188c0:	0005883a 	mov	r2,zero
 80188c4:	f800283a 	ret

080188c8 <__gedf2>:
 80188c8:	2804d53a 	srli	r2,r5,20
 80188cc:	3806d53a 	srli	r3,r7,20
 80188d0:	02000434 	movhi	r8,16
 80188d4:	423fffc4 	addi	r8,r8,-1
 80188d8:	0241ffc4 	movi	r9,2047
 80188dc:	1081ffcc 	andi	r2,r2,2047
 80188e0:	2a14703a 	and	r10,r5,r8
 80188e4:	1a46703a 	and	r3,r3,r9
 80188e8:	3a10703a 	and	r8,r7,r8
 80188ec:	280ad7fa 	srli	r5,r5,31
 80188f0:	380ed7fa 	srli	r7,r7,31
 80188f4:	12400b26 	beq	r2,r9,8018924 <__gedf2+0x5c>
 80188f8:	1a401626 	beq	r3,r9,8018954 <__gedf2+0x8c>
 80188fc:	10000c1e 	bne	r2,zero,8018930 <__gedf2+0x68>
 8018900:	5112b03a 	or	r9,r10,r4
 8018904:	4813003a 	cmpeq	r9,r9,zero
 8018908:	4817883a 	mov	r11,r9
 801890c:	18000c1e 	bne	r3,zero,8018940 <__gedf2+0x78>
 8018910:	4198b03a 	or	r12,r8,r6
 8018914:	60000a1e 	bne	r12,zero,8018940 <__gedf2+0x78>
 8018918:	48001326 	beq	r9,zero,8018968 <__gedf2+0xa0>
 801891c:	0005883a 	mov	r2,zero
 8018920:	f800283a 	ret
 8018924:	5112b03a 	or	r9,r10,r4
 8018928:	4800191e 	bne	r9,zero,8018990 <__gedf2+0xc8>
 801892c:	18800926 	beq	r3,r2,8018954 <__gedf2+0x8c>
 8018930:	18000b1e 	bne	r3,zero,8018960 <__gedf2+0x98>
 8018934:	4192b03a 	or	r9,r8,r6
 8018938:	0017883a 	mov	r11,zero
 801893c:	48000a26 	beq	r9,zero,8018968 <__gedf2+0xa0>
 8018940:	39c03fcc 	andi	r7,r7,255
 8018944:	58000726 	beq	r11,zero,8018964 <__gedf2+0x9c>
 8018948:	3800081e 	bne	r7,zero,801896c <__gedf2+0xa4>
 801894c:	00bfffc4 	movi	r2,-1
 8018950:	f800283a 	ret
 8018954:	4192b03a 	or	r9,r8,r6
 8018958:	48000d1e 	bne	r9,zero,8018990 <__gedf2+0xc8>
 801895c:	103fe826 	beq	r2,zero,8018900 <__alt_data_end+0xfc018900>
 8018960:	39c03fcc 	andi	r7,r7,255
 8018964:	29c00326 	beq	r5,r7,8018974 <__gedf2+0xac>
 8018968:	283ff81e 	bne	r5,zero,801894c <__alt_data_end+0xfc01894c>
 801896c:	00800044 	movi	r2,1
 8018970:	f800283a 	ret
 8018974:	18bffc16 	blt	r3,r2,8018968 <__alt_data_end+0xfc018968>
 8018978:	10c00316 	blt	r2,r3,8018988 <__gedf2+0xc0>
 801897c:	42bffa36 	bltu	r8,r10,8018968 <__alt_data_end+0xfc018968>
 8018980:	52000526 	beq	r10,r8,8018998 <__gedf2+0xd0>
 8018984:	523fe52e 	bgeu	r10,r8,801891c <__alt_data_end+0xfc01891c>
 8018988:	283ff026 	beq	r5,zero,801894c <__alt_data_end+0xfc01894c>
 801898c:	003ff706 	br	801896c <__alt_data_end+0xfc01896c>
 8018990:	00bfff84 	movi	r2,-2
 8018994:	f800283a 	ret
 8018998:	313ff336 	bltu	r6,r4,8018968 <__alt_data_end+0xfc018968>
 801899c:	21bfdf2e 	bgeu	r4,r6,801891c <__alt_data_end+0xfc01891c>
 80189a0:	283fea26 	beq	r5,zero,801894c <__alt_data_end+0xfc01894c>
 80189a4:	003ff106 	br	801896c <__alt_data_end+0xfc01896c>

080189a8 <__ledf2>:
 80189a8:	2804d53a 	srli	r2,r5,20
 80189ac:	3810d53a 	srli	r8,r7,20
 80189b0:	00c00434 	movhi	r3,16
 80189b4:	18ffffc4 	addi	r3,r3,-1
 80189b8:	0241ffc4 	movi	r9,2047
 80189bc:	1081ffcc 	andi	r2,r2,2047
 80189c0:	28d4703a 	and	r10,r5,r3
 80189c4:	4250703a 	and	r8,r8,r9
 80189c8:	38c6703a 	and	r3,r7,r3
 80189cc:	280ad7fa 	srli	r5,r5,31
 80189d0:	380ed7fa 	srli	r7,r7,31
 80189d4:	12400b26 	beq	r2,r9,8018a04 <__ledf2+0x5c>
 80189d8:	42401926 	beq	r8,r9,8018a40 <__ledf2+0x98>
 80189dc:	10000c1e 	bne	r2,zero,8018a10 <__ledf2+0x68>
 80189e0:	5112b03a 	or	r9,r10,r4
 80189e4:	4813003a 	cmpeq	r9,r9,zero
 80189e8:	4817883a 	mov	r11,r9
 80189ec:	40000f26 	beq	r8,zero,8018a2c <__ledf2+0x84>
 80189f0:	39c03fcc 	andi	r7,r7,255
 80189f4:	58001826 	beq	r11,zero,8018a58 <__ledf2+0xb0>
 80189f8:	38000a1e 	bne	r7,zero,8018a24 <__ledf2+0x7c>
 80189fc:	00bfffc4 	movi	r2,-1
 8018a00:	f800283a 	ret
 8018a04:	5112b03a 	or	r9,r10,r4
 8018a08:	48000f1e 	bne	r9,zero,8018a48 <__ledf2+0xa0>
 8018a0c:	40800c26 	beq	r8,r2,8018a40 <__ledf2+0x98>
 8018a10:	4000101e 	bne	r8,zero,8018a54 <__ledf2+0xac>
 8018a14:	1992b03a 	or	r9,r3,r6
 8018a18:	0017883a 	mov	r11,zero
 8018a1c:	483ff41e 	bne	r9,zero,80189f0 <__alt_data_end+0xfc0189f0>
 8018a20:	283ff61e 	bne	r5,zero,80189fc <__alt_data_end+0xfc0189fc>
 8018a24:	00800044 	movi	r2,1
 8018a28:	f800283a 	ret
 8018a2c:	1998b03a 	or	r12,r3,r6
 8018a30:	603fef1e 	bne	r12,zero,80189f0 <__alt_data_end+0xfc0189f0>
 8018a34:	483ffa26 	beq	r9,zero,8018a20 <__alt_data_end+0xfc018a20>
 8018a38:	0005883a 	mov	r2,zero
 8018a3c:	f800283a 	ret
 8018a40:	1992b03a 	or	r9,r3,r6
 8018a44:	48000226 	beq	r9,zero,8018a50 <__ledf2+0xa8>
 8018a48:	00800084 	movi	r2,2
 8018a4c:	f800283a 	ret
 8018a50:	103fe326 	beq	r2,zero,80189e0 <__alt_data_end+0xfc0189e0>
 8018a54:	39c03fcc 	andi	r7,r7,255
 8018a58:	29fff11e 	bne	r5,r7,8018a20 <__alt_data_end+0xfc018a20>
 8018a5c:	40bff016 	blt	r8,r2,8018a20 <__alt_data_end+0xfc018a20>
 8018a60:	12000316 	blt	r2,r8,8018a70 <__ledf2+0xc8>
 8018a64:	1abfee36 	bltu	r3,r10,8018a20 <__alt_data_end+0xfc018a20>
 8018a68:	50c00326 	beq	r10,r3,8018a78 <__ledf2+0xd0>
 8018a6c:	50fff22e 	bgeu	r10,r3,8018a38 <__alt_data_end+0xfc018a38>
 8018a70:	283fe226 	beq	r5,zero,80189fc <__alt_data_end+0xfc0189fc>
 8018a74:	003feb06 	br	8018a24 <__alt_data_end+0xfc018a24>
 8018a78:	313fe936 	bltu	r6,r4,8018a20 <__alt_data_end+0xfc018a20>
 8018a7c:	21bfee2e 	bgeu	r4,r6,8018a38 <__alt_data_end+0xfc018a38>
 8018a80:	283fde26 	beq	r5,zero,80189fc <__alt_data_end+0xfc0189fc>
 8018a84:	003fe706 	br	8018a24 <__alt_data_end+0xfc018a24>

08018a88 <__muldf3>:
 8018a88:	deffee04 	addi	sp,sp,-72
 8018a8c:	dd000c15 	stw	r20,48(sp)
 8018a90:	2828d53a 	srli	r20,r5,20
 8018a94:	dd400d15 	stw	r21,52(sp)
 8018a98:	282ad7fa 	srli	r21,r5,31
 8018a9c:	dc000815 	stw	r16,32(sp)
 8018aa0:	04000434 	movhi	r16,16
 8018aa4:	ddc00f15 	stw	r23,60(sp)
 8018aa8:	dcc00b15 	stw	r19,44(sp)
 8018aac:	dc800a15 	stw	r18,40(sp)
 8018ab0:	843fffc4 	addi	r16,r16,-1
 8018ab4:	dfc01115 	stw	ra,68(sp)
 8018ab8:	df001015 	stw	fp,64(sp)
 8018abc:	dd800e15 	stw	r22,56(sp)
 8018ac0:	dc400915 	stw	r17,36(sp)
 8018ac4:	a501ffcc 	andi	r20,r20,2047
 8018ac8:	2025883a 	mov	r18,r4
 8018acc:	202f883a 	mov	r23,r4
 8018ad0:	2c20703a 	and	r16,r5,r16
 8018ad4:	a827883a 	mov	r19,r21
 8018ad8:	aa403fcc 	andi	r9,r21,255
 8018adc:	a0005926 	beq	r20,zero,8018c44 <__muldf3+0x1bc>
 8018ae0:	0081ffc4 	movi	r2,2047
 8018ae4:	a0803426 	beq	r20,r2,8018bb8 <__muldf3+0x130>
 8018ae8:	84000434 	orhi	r16,r16,16
 8018aec:	2004d77a 	srli	r2,r4,29
 8018af0:	802090fa 	slli	r16,r16,3
 8018af4:	202e90fa 	slli	r23,r4,3
 8018af8:	a53f0044 	addi	r20,r20,-1023
 8018afc:	80a0b03a 	or	r16,r16,r2
 8018b00:	000b883a 	mov	r5,zero
 8018b04:	0039883a 	mov	fp,zero
 8018b08:	3806d53a 	srli	r3,r7,20
 8018b0c:	382cd7fa 	srli	r22,r7,31
 8018b10:	00800434 	movhi	r2,16
 8018b14:	10bfffc4 	addi	r2,r2,-1
 8018b18:	18c1ffcc 	andi	r3,r3,2047
 8018b1c:	3025883a 	mov	r18,r6
 8018b20:	38a2703a 	and	r17,r7,r2
 8018b24:	b2803fcc 	andi	r10,r22,255
 8018b28:	18006426 	beq	r3,zero,8018cbc <__muldf3+0x234>
 8018b2c:	0081ffc4 	movi	r2,2047
 8018b30:	18805c26 	beq	r3,r2,8018ca4 <__muldf3+0x21c>
 8018b34:	8c400434 	orhi	r17,r17,16
 8018b38:	3004d77a 	srli	r2,r6,29
 8018b3c:	882290fa 	slli	r17,r17,3
 8018b40:	302490fa 	slli	r18,r6,3
 8018b44:	18ff0044 	addi	r3,r3,-1023
 8018b48:	88a2b03a 	or	r17,r17,r2
 8018b4c:	000f883a 	mov	r7,zero
 8018b50:	394ab03a 	or	r5,r7,r5
 8018b54:	280a90ba 	slli	r5,r5,2
 8018b58:	008200b4 	movhi	r2,2050
 8018b5c:	10a2de04 	addi	r2,r2,-29832
 8018b60:	288b883a 	add	r5,r5,r2
 8018b64:	28800017 	ldw	r2,0(r5)
 8018b68:	a0c7883a 	add	r3,r20,r3
 8018b6c:	b54cf03a 	xor	r6,r22,r21
 8018b70:	1a000044 	addi	r8,r3,1
 8018b74:	1000683a 	jmp	r2
 8018b78:	08018dbc 	xorhi	zero,at,1590
 8018b7c:	08018da8 	cmpgeui	zero,at,1590
 8018b80:	08018da8 	cmpgeui	zero,at,1590
 8018b84:	08018d94 	ori	zero,at,1590
 8018b88:	08018bd4 	ori	zero,at,1583
 8018b8c:	08018bd4 	ori	zero,at,1583
 8018b90:	08018d7c 	xorhi	zero,at,1589
 8018b94:	08018d94 	ori	zero,at,1590
 8018b98:	08018bd4 	ori	zero,at,1583
 8018b9c:	08018d7c 	xorhi	zero,at,1589
 8018ba0:	08018bd4 	ori	zero,at,1583
 8018ba4:	08018d94 	ori	zero,at,1590
 8018ba8:	08018bd8 	cmpnei	zero,at,1583
 8018bac:	08018bd8 	cmpnei	zero,at,1583
 8018bb0:	08018bd8 	cmpnei	zero,at,1583
 8018bb4:	080190f8 	rdprs	zero,at,1603
 8018bb8:	8104b03a 	or	r2,r16,r4
 8018bbc:	10006c1e 	bne	r2,zero,8018d70 <__muldf3+0x2e8>
 8018bc0:	01400204 	movi	r5,8
 8018bc4:	0021883a 	mov	r16,zero
 8018bc8:	002f883a 	mov	r23,zero
 8018bcc:	07000084 	movi	fp,2
 8018bd0:	003fcd06 	br	8018b08 <__alt_data_end+0xfc018b08>
 8018bd4:	3013883a 	mov	r9,r6
 8018bd8:	00800084 	movi	r2,2
 8018bdc:	e080501e 	bne	fp,r2,8018d20 <__muldf3+0x298>
 8018be0:	4cc0004c 	andi	r19,r9,1
 8018be4:	0101ffc4 	movi	r4,2047
 8018be8:	0021883a 	mov	r16,zero
 8018bec:	002f883a 	mov	r23,zero
 8018bf0:	2008953a 	slli	r4,r4,20
 8018bf4:	98c03fcc 	andi	r3,r19,255
 8018bf8:	04400434 	movhi	r17,16
 8018bfc:	8c7fffc4 	addi	r17,r17,-1
 8018c00:	180697fa 	slli	r3,r3,31
 8018c04:	8460703a 	and	r16,r16,r17
 8018c08:	8120b03a 	or	r16,r16,r4
 8018c0c:	80c6b03a 	or	r3,r16,r3
 8018c10:	b805883a 	mov	r2,r23
 8018c14:	dfc01117 	ldw	ra,68(sp)
 8018c18:	df001017 	ldw	fp,64(sp)
 8018c1c:	ddc00f17 	ldw	r23,60(sp)
 8018c20:	dd800e17 	ldw	r22,56(sp)
 8018c24:	dd400d17 	ldw	r21,52(sp)
 8018c28:	dd000c17 	ldw	r20,48(sp)
 8018c2c:	dcc00b17 	ldw	r19,44(sp)
 8018c30:	dc800a17 	ldw	r18,40(sp)
 8018c34:	dc400917 	ldw	r17,36(sp)
 8018c38:	dc000817 	ldw	r16,32(sp)
 8018c3c:	dec01204 	addi	sp,sp,72
 8018c40:	f800283a 	ret
 8018c44:	8104b03a 	or	r2,r16,r4
 8018c48:	10004426 	beq	r2,zero,8018d5c <__muldf3+0x2d4>
 8018c4c:	80014b26 	beq	r16,zero,801917c <__muldf3+0x6f4>
 8018c50:	8009883a 	mov	r4,r16
 8018c54:	d9800715 	stw	r6,28(sp)
 8018c58:	d9c00215 	stw	r7,8(sp)
 8018c5c:	da400415 	stw	r9,16(sp)
 8018c60:	8019f580 	call	8019f58 <__clzsi2>
 8018c64:	d9800717 	ldw	r6,28(sp)
 8018c68:	d9c00217 	ldw	r7,8(sp)
 8018c6c:	da400417 	ldw	r9,16(sp)
 8018c70:	1007883a 	mov	r3,r2
 8018c74:	01000a04 	movi	r4,40
 8018c78:	1dfffe04 	addi	r23,r3,-8
 8018c7c:	20c9c83a 	sub	r4,r4,r3
 8018c80:	85e0983a 	sll	r16,r16,r23
 8018c84:	9108d83a 	srl	r4,r18,r4
 8018c88:	95ee983a 	sll	r23,r18,r23
 8018c8c:	2420b03a 	or	r16,r4,r16
 8018c90:	053f0344 	movi	r20,-1011
 8018c94:	a0e9c83a 	sub	r20,r20,r3
 8018c98:	000b883a 	mov	r5,zero
 8018c9c:	0039883a 	mov	fp,zero
 8018ca0:	003f9906 	br	8018b08 <__alt_data_end+0xfc018b08>
 8018ca4:	8984b03a 	or	r2,r17,r6
 8018ca8:	10002a1e 	bne	r2,zero,8018d54 <__muldf3+0x2cc>
 8018cac:	0023883a 	mov	r17,zero
 8018cb0:	0025883a 	mov	r18,zero
 8018cb4:	01c00084 	movi	r7,2
 8018cb8:	003fa506 	br	8018b50 <__alt_data_end+0xfc018b50>
 8018cbc:	8984b03a 	or	r2,r17,r6
 8018cc0:	10002026 	beq	r2,zero,8018d44 <__muldf3+0x2bc>
 8018cc4:	88011c26 	beq	r17,zero,8019138 <__muldf3+0x6b0>
 8018cc8:	8809883a 	mov	r4,r17
 8018ccc:	d9400215 	stw	r5,8(sp)
 8018cd0:	d9800715 	stw	r6,28(sp)
 8018cd4:	da400415 	stw	r9,16(sp)
 8018cd8:	da800315 	stw	r10,12(sp)
 8018cdc:	8019f580 	call	8019f58 <__clzsi2>
 8018ce0:	d9400217 	ldw	r5,8(sp)
 8018ce4:	d9800717 	ldw	r6,28(sp)
 8018ce8:	da400417 	ldw	r9,16(sp)
 8018cec:	da800317 	ldw	r10,12(sp)
 8018cf0:	1007883a 	mov	r3,r2
 8018cf4:	01000a04 	movi	r4,40
 8018cf8:	1cbffe04 	addi	r18,r3,-8
 8018cfc:	20c9c83a 	sub	r4,r4,r3
 8018d00:	8ca2983a 	sll	r17,r17,r18
 8018d04:	3108d83a 	srl	r4,r6,r4
 8018d08:	34a4983a 	sll	r18,r6,r18
 8018d0c:	2462b03a 	or	r17,r4,r17
 8018d10:	00bf0344 	movi	r2,-1011
 8018d14:	10c7c83a 	sub	r3,r2,r3
 8018d18:	000f883a 	mov	r7,zero
 8018d1c:	003f8c06 	br	8018b50 <__alt_data_end+0xfc018b50>
 8018d20:	008000c4 	movi	r2,3
 8018d24:	e0816d26 	beq	fp,r2,80192dc <__muldf3+0x854>
 8018d28:	00800044 	movi	r2,1
 8018d2c:	e081321e 	bne	fp,r2,80191f8 <__muldf3+0x770>
 8018d30:	48a6703a 	and	r19,r9,r2
 8018d34:	0009883a 	mov	r4,zero
 8018d38:	0021883a 	mov	r16,zero
 8018d3c:	002f883a 	mov	r23,zero
 8018d40:	003fab06 	br	8018bf0 <__alt_data_end+0xfc018bf0>
 8018d44:	0023883a 	mov	r17,zero
 8018d48:	0025883a 	mov	r18,zero
 8018d4c:	01c00044 	movi	r7,1
 8018d50:	003f7f06 	br	8018b50 <__alt_data_end+0xfc018b50>
 8018d54:	01c000c4 	movi	r7,3
 8018d58:	003f7d06 	br	8018b50 <__alt_data_end+0xfc018b50>
 8018d5c:	01400104 	movi	r5,4
 8018d60:	0021883a 	mov	r16,zero
 8018d64:	002f883a 	mov	r23,zero
 8018d68:	07000044 	movi	fp,1
 8018d6c:	003f6606 	br	8018b08 <__alt_data_end+0xfc018b08>
 8018d70:	01400304 	movi	r5,12
 8018d74:	070000c4 	movi	fp,3
 8018d78:	003f6306 	br	8018b08 <__alt_data_end+0xfc018b08>
 8018d7c:	04000434 	movhi	r16,16
 8018d80:	0027883a 	mov	r19,zero
 8018d84:	843fffc4 	addi	r16,r16,-1
 8018d88:	05ffffc4 	movi	r23,-1
 8018d8c:	0101ffc4 	movi	r4,2047
 8018d90:	003f9706 	br	8018bf0 <__alt_data_end+0xfc018bf0>
 8018d94:	8821883a 	mov	r16,r17
 8018d98:	902f883a 	mov	r23,r18
 8018d9c:	5013883a 	mov	r9,r10
 8018da0:	3839883a 	mov	fp,r7
 8018da4:	003f8c06 	br	8018bd8 <__alt_data_end+0xfc018bd8>
 8018da8:	8821883a 	mov	r16,r17
 8018dac:	902f883a 	mov	r23,r18
 8018db0:	3013883a 	mov	r9,r6
 8018db4:	3839883a 	mov	fp,r7
 8018db8:	003f8706 	br	8018bd8 <__alt_data_end+0xfc018bd8>
 8018dbc:	b82ad43a 	srli	r21,r23,16
 8018dc0:	9038d43a 	srli	fp,r18,16
 8018dc4:	bdffffcc 	andi	r23,r23,65535
 8018dc8:	94bfffcc 	andi	r18,r18,65535
 8018dcc:	9009883a 	mov	r4,r18
 8018dd0:	b80b883a 	mov	r5,r23
 8018dd4:	d8c00515 	stw	r3,20(sp)
 8018dd8:	d9800715 	stw	r6,28(sp)
 8018ddc:	da000615 	stw	r8,24(sp)
 8018de0:	800334c0 	call	800334c <__mulsi3>
 8018de4:	9009883a 	mov	r4,r18
 8018de8:	a80b883a 	mov	r5,r21
 8018dec:	1029883a 	mov	r20,r2
 8018df0:	800334c0 	call	800334c <__mulsi3>
 8018df4:	e009883a 	mov	r4,fp
 8018df8:	a80b883a 	mov	r5,r21
 8018dfc:	102d883a 	mov	r22,r2
 8018e00:	800334c0 	call	800334c <__mulsi3>
 8018e04:	e009883a 	mov	r4,fp
 8018e08:	b80b883a 	mov	r5,r23
 8018e0c:	1027883a 	mov	r19,r2
 8018e10:	800334c0 	call	800334c <__mulsi3>
 8018e14:	a008d43a 	srli	r4,r20,16
 8018e18:	b085883a 	add	r2,r22,r2
 8018e1c:	d8c00517 	ldw	r3,20(sp)
 8018e20:	110f883a 	add	r7,r2,r4
 8018e24:	d9800717 	ldw	r6,28(sp)
 8018e28:	da000617 	ldw	r8,24(sp)
 8018e2c:	3d80022e 	bgeu	r7,r22,8018e38 <__muldf3+0x3b0>
 8018e30:	00800074 	movhi	r2,1
 8018e34:	98a7883a 	add	r19,r19,r2
 8018e38:	3804943a 	slli	r2,r7,16
 8018e3c:	380ed43a 	srli	r7,r7,16
 8018e40:	882cd43a 	srli	r22,r17,16
 8018e44:	a53fffcc 	andi	r20,r20,65535
 8018e48:	8c7fffcc 	andi	r17,r17,65535
 8018e4c:	1529883a 	add	r20,r2,r20
 8018e50:	8809883a 	mov	r4,r17
 8018e54:	b80b883a 	mov	r5,r23
 8018e58:	d8c00515 	stw	r3,20(sp)
 8018e5c:	d9800715 	stw	r6,28(sp)
 8018e60:	da000615 	stw	r8,24(sp)
 8018e64:	d9c00015 	stw	r7,0(sp)
 8018e68:	dd000115 	stw	r20,4(sp)
 8018e6c:	800334c0 	call	800334c <__mulsi3>
 8018e70:	a80b883a 	mov	r5,r21
 8018e74:	8809883a 	mov	r4,r17
 8018e78:	d8800415 	stw	r2,16(sp)
 8018e7c:	800334c0 	call	800334c <__mulsi3>
 8018e80:	a80b883a 	mov	r5,r21
 8018e84:	b009883a 	mov	r4,r22
 8018e88:	1029883a 	mov	r20,r2
 8018e8c:	800334c0 	call	800334c <__mulsi3>
 8018e90:	b009883a 	mov	r4,r22
 8018e94:	b80b883a 	mov	r5,r23
 8018e98:	102b883a 	mov	r21,r2
 8018e9c:	800334c0 	call	800334c <__mulsi3>
 8018ea0:	da400417 	ldw	r9,16(sp)
 8018ea4:	a085883a 	add	r2,r20,r2
 8018ea8:	d8c00517 	ldw	r3,20(sp)
 8018eac:	4808d43a 	srli	r4,r9,16
 8018eb0:	d9800717 	ldw	r6,28(sp)
 8018eb4:	da000617 	ldw	r8,24(sp)
 8018eb8:	1109883a 	add	r4,r2,r4
 8018ebc:	2500022e 	bgeu	r4,r20,8018ec8 <__muldf3+0x440>
 8018ec0:	00800074 	movhi	r2,1
 8018ec4:	a8ab883a 	add	r21,r21,r2
 8018ec8:	200e943a 	slli	r7,r4,16
 8018ecc:	2004d43a 	srli	r2,r4,16
 8018ed0:	802ed43a 	srli	r23,r16,16
 8018ed4:	843fffcc 	andi	r16,r16,65535
 8018ed8:	4d3fffcc 	andi	r20,r9,65535
 8018edc:	9009883a 	mov	r4,r18
 8018ee0:	800b883a 	mov	r5,r16
 8018ee4:	3d29883a 	add	r20,r7,r20
 8018ee8:	d8c00515 	stw	r3,20(sp)
 8018eec:	d9800715 	stw	r6,28(sp)
 8018ef0:	da000615 	stw	r8,24(sp)
 8018ef4:	a8ab883a 	add	r21,r21,r2
 8018ef8:	800334c0 	call	800334c <__mulsi3>
 8018efc:	9009883a 	mov	r4,r18
 8018f00:	b80b883a 	mov	r5,r23
 8018f04:	d8800315 	stw	r2,12(sp)
 8018f08:	800334c0 	call	800334c <__mulsi3>
 8018f0c:	e009883a 	mov	r4,fp
 8018f10:	b80b883a 	mov	r5,r23
 8018f14:	1025883a 	mov	r18,r2
 8018f18:	800334c0 	call	800334c <__mulsi3>
 8018f1c:	e009883a 	mov	r4,fp
 8018f20:	800b883a 	mov	r5,r16
 8018f24:	d8800215 	stw	r2,8(sp)
 8018f28:	800334c0 	call	800334c <__mulsi3>
 8018f2c:	da800317 	ldw	r10,12(sp)
 8018f30:	d9400017 	ldw	r5,0(sp)
 8018f34:	9085883a 	add	r2,r18,r2
 8018f38:	5008d43a 	srli	r4,r10,16
 8018f3c:	a153883a 	add	r9,r20,r5
 8018f40:	d8c00517 	ldw	r3,20(sp)
 8018f44:	1109883a 	add	r4,r2,r4
 8018f48:	d9800717 	ldw	r6,28(sp)
 8018f4c:	da000617 	ldw	r8,24(sp)
 8018f50:	dac00217 	ldw	r11,8(sp)
 8018f54:	2480022e 	bgeu	r4,r18,8018f60 <__muldf3+0x4d8>
 8018f58:	00800074 	movhi	r2,1
 8018f5c:	5897883a 	add	r11,r11,r2
 8018f60:	200e943a 	slli	r7,r4,16
 8018f64:	2038d43a 	srli	fp,r4,16
 8018f68:	52bfffcc 	andi	r10,r10,65535
 8018f6c:	3a8f883a 	add	r7,r7,r10
 8018f70:	8809883a 	mov	r4,r17
 8018f74:	800b883a 	mov	r5,r16
 8018f78:	d8c00515 	stw	r3,20(sp)
 8018f7c:	d9800715 	stw	r6,28(sp)
 8018f80:	d9c00215 	stw	r7,8(sp)
 8018f84:	da000615 	stw	r8,24(sp)
 8018f88:	da400415 	stw	r9,16(sp)
 8018f8c:	5f39883a 	add	fp,r11,fp
 8018f90:	800334c0 	call	800334c <__mulsi3>
 8018f94:	8809883a 	mov	r4,r17
 8018f98:	b80b883a 	mov	r5,r23
 8018f9c:	1025883a 	mov	r18,r2
 8018fa0:	800334c0 	call	800334c <__mulsi3>
 8018fa4:	b009883a 	mov	r4,r22
 8018fa8:	b80b883a 	mov	r5,r23
 8018fac:	d8800315 	stw	r2,12(sp)
 8018fb0:	800334c0 	call	800334c <__mulsi3>
 8018fb4:	b009883a 	mov	r4,r22
 8018fb8:	800b883a 	mov	r5,r16
 8018fbc:	1023883a 	mov	r17,r2
 8018fc0:	800334c0 	call	800334c <__mulsi3>
 8018fc4:	da800317 	ldw	r10,12(sp)
 8018fc8:	9008d43a 	srli	r4,r18,16
 8018fcc:	d8c00517 	ldw	r3,20(sp)
 8018fd0:	5085883a 	add	r2,r10,r2
 8018fd4:	1109883a 	add	r4,r2,r4
 8018fd8:	d9800717 	ldw	r6,28(sp)
 8018fdc:	d9c00217 	ldw	r7,8(sp)
 8018fe0:	da000617 	ldw	r8,24(sp)
 8018fe4:	da400417 	ldw	r9,16(sp)
 8018fe8:	2280022e 	bgeu	r4,r10,8018ff4 <__muldf3+0x56c>
 8018fec:	00800074 	movhi	r2,1
 8018ff0:	88a3883a 	add	r17,r17,r2
 8018ff4:	2004943a 	slli	r2,r4,16
 8018ff8:	94bfffcc 	andi	r18,r18,65535
 8018ffc:	4ce7883a 	add	r19,r9,r19
 8019000:	14a5883a 	add	r18,r2,r18
 8019004:	9d29803a 	cmpltu	r20,r19,r20
 8019008:	9565883a 	add	r18,r18,r21
 801900c:	9505883a 	add	r2,r18,r20
 8019010:	99e7883a 	add	r19,r19,r7
 8019014:	99cf803a 	cmpltu	r7,r19,r7
 8019018:	e08b883a 	add	r5,fp,r2
 801901c:	2008d43a 	srli	r4,r4,16
 8019020:	29ef883a 	add	r23,r5,r7
 8019024:	1529803a 	cmpltu	r20,r2,r20
 8019028:	956b803a 	cmpltu	r21,r18,r21
 801902c:	b9cf803a 	cmpltu	r7,r23,r7
 8019030:	a564b03a 	or	r18,r20,r21
 8019034:	2f39803a 	cmpltu	fp,r5,fp
 8019038:	9125883a 	add	r18,r18,r4
 801903c:	3f38b03a 	or	fp,r7,fp
 8019040:	9725883a 	add	r18,r18,fp
 8019044:	9804927a 	slli	r2,r19,9
 8019048:	9463883a 	add	r17,r18,r17
 801904c:	d9000117 	ldw	r4,4(sp)
 8019050:	b820d5fa 	srli	r16,r23,23
 8019054:	8822927a 	slli	r17,r17,9
 8019058:	9826d5fa 	srli	r19,r19,23
 801905c:	1104b03a 	or	r2,r2,r4
 8019060:	b82e927a 	slli	r23,r23,9
 8019064:	1004c03a 	cmpne	r2,r2,zero
 8019068:	8c20b03a 	or	r16,r17,r16
 801906c:	14e6b03a 	or	r19,r2,r19
 8019070:	8080402c 	andhi	r2,r16,256
 8019074:	9deeb03a 	or	r23,r19,r23
 8019078:	10000726 	beq	r2,zero,8019098 <__muldf3+0x610>
 801907c:	b804d07a 	srli	r2,r23,1
 8019080:	800697fa 	slli	r3,r16,31
 8019084:	bdc0004c 	andi	r23,r23,1
 8019088:	8020d07a 	srli	r16,r16,1
 801908c:	b8aeb03a 	or	r23,r23,r2
 8019090:	b8eeb03a 	or	r23,r23,r3
 8019094:	4007883a 	mov	r3,r8
 8019098:	1900ffc4 	addi	r4,r3,1023
 801909c:	01004d0e 	bge	zero,r4,80191d4 <__muldf3+0x74c>
 80190a0:	b88001cc 	andi	r2,r23,7
 80190a4:	10000726 	beq	r2,zero,80190c4 <__muldf3+0x63c>
 80190a8:	b94003cc 	andi	r5,r23,15
 80190ac:	00800104 	movi	r2,4
 80190b0:	28800426 	beq	r5,r2,80190c4 <__muldf3+0x63c>
 80190b4:	b885883a 	add	r2,r23,r2
 80190b8:	15ef803a 	cmpltu	r23,r2,r23
 80190bc:	85e1883a 	add	r16,r16,r23
 80190c0:	102f883a 	mov	r23,r2
 80190c4:	8080402c 	andhi	r2,r16,256
 80190c8:	10000426 	beq	r2,zero,80190dc <__muldf3+0x654>
 80190cc:	00bfc034 	movhi	r2,65280
 80190d0:	10bfffc4 	addi	r2,r2,-1
 80190d4:	19010004 	addi	r4,r3,1024
 80190d8:	80a0703a 	and	r16,r16,r2
 80190dc:	0081ff84 	movi	r2,2046
 80190e0:	1100340e 	bge	r2,r4,80191b4 <__muldf3+0x72c>
 80190e4:	34c0004c 	andi	r19,r6,1
 80190e8:	0101ffc4 	movi	r4,2047
 80190ec:	0021883a 	mov	r16,zero
 80190f0:	002f883a 	mov	r23,zero
 80190f4:	003ebe06 	br	8018bf0 <__alt_data_end+0xfc018bf0>
 80190f8:	8080022c 	andhi	r2,r16,8
 80190fc:	10000926 	beq	r2,zero,8019124 <__muldf3+0x69c>
 8019100:	8880022c 	andhi	r2,r17,8
 8019104:	1000071e 	bne	r2,zero,8019124 <__muldf3+0x69c>
 8019108:	00800434 	movhi	r2,16
 801910c:	8c000234 	orhi	r16,r17,8
 8019110:	10bfffc4 	addi	r2,r2,-1
 8019114:	b027883a 	mov	r19,r22
 8019118:	80a0703a 	and	r16,r16,r2
 801911c:	902f883a 	mov	r23,r18
 8019120:	003f1a06 	br	8018d8c <__alt_data_end+0xfc018d8c>
 8019124:	00800434 	movhi	r2,16
 8019128:	84000234 	orhi	r16,r16,8
 801912c:	10bfffc4 	addi	r2,r2,-1
 8019130:	80a0703a 	and	r16,r16,r2
 8019134:	003f1506 	br	8018d8c <__alt_data_end+0xfc018d8c>
 8019138:	3009883a 	mov	r4,r6
 801913c:	d9400215 	stw	r5,8(sp)
 8019140:	d9800715 	stw	r6,28(sp)
 8019144:	da400415 	stw	r9,16(sp)
 8019148:	da800315 	stw	r10,12(sp)
 801914c:	8019f580 	call	8019f58 <__clzsi2>
 8019150:	10c00804 	addi	r3,r2,32
 8019154:	010009c4 	movi	r4,39
 8019158:	d9400217 	ldw	r5,8(sp)
 801915c:	d9800717 	ldw	r6,28(sp)
 8019160:	da400417 	ldw	r9,16(sp)
 8019164:	da800317 	ldw	r10,12(sp)
 8019168:	20fee20e 	bge	r4,r3,8018cf4 <__alt_data_end+0xfc018cf4>
 801916c:	147ffe04 	addi	r17,r2,-8
 8019170:	9462983a 	sll	r17,r18,r17
 8019174:	0025883a 	mov	r18,zero
 8019178:	003ee506 	br	8018d10 <__alt_data_end+0xfc018d10>
 801917c:	d9800715 	stw	r6,28(sp)
 8019180:	d9c00215 	stw	r7,8(sp)
 8019184:	da400415 	stw	r9,16(sp)
 8019188:	8019f580 	call	8019f58 <__clzsi2>
 801918c:	10c00804 	addi	r3,r2,32
 8019190:	010009c4 	movi	r4,39
 8019194:	d9800717 	ldw	r6,28(sp)
 8019198:	d9c00217 	ldw	r7,8(sp)
 801919c:	da400417 	ldw	r9,16(sp)
 80191a0:	20feb40e 	bge	r4,r3,8018c74 <__alt_data_end+0xfc018c74>
 80191a4:	143ffe04 	addi	r16,r2,-8
 80191a8:	9420983a 	sll	r16,r18,r16
 80191ac:	002f883a 	mov	r23,zero
 80191b0:	003eb706 	br	8018c90 <__alt_data_end+0xfc018c90>
 80191b4:	8004977a 	slli	r2,r16,29
 80191b8:	b82ed0fa 	srli	r23,r23,3
 80191bc:	8020927a 	slli	r16,r16,9
 80191c0:	2101ffcc 	andi	r4,r4,2047
 80191c4:	15eeb03a 	or	r23,r2,r23
 80191c8:	8020d33a 	srli	r16,r16,12
 80191cc:	34c0004c 	andi	r19,r6,1
 80191d0:	003e8706 	br	8018bf0 <__alt_data_end+0xfc018bf0>
 80191d4:	00bf0084 	movi	r2,-1022
 80191d8:	10c5c83a 	sub	r2,r2,r3
 80191dc:	01000e04 	movi	r4,56
 80191e0:	2080080e 	bge	r4,r2,8019204 <__muldf3+0x77c>
 80191e4:	34c0004c 	andi	r19,r6,1
 80191e8:	0009883a 	mov	r4,zero
 80191ec:	0021883a 	mov	r16,zero
 80191f0:	002f883a 	mov	r23,zero
 80191f4:	003e7e06 	br	8018bf0 <__alt_data_end+0xfc018bf0>
 80191f8:	4007883a 	mov	r3,r8
 80191fc:	480d883a 	mov	r6,r9
 8019200:	003fa506 	br	8019098 <__alt_data_end+0xfc019098>
 8019204:	010007c4 	movi	r4,31
 8019208:	20801816 	blt	r4,r2,801926c <__muldf3+0x7e4>
 801920c:	18c10784 	addi	r3,r3,1054
 8019210:	80c8983a 	sll	r4,r16,r3
 8019214:	b88ad83a 	srl	r5,r23,r2
 8019218:	b8c6983a 	sll	r3,r23,r3
 801921c:	80a0d83a 	srl	r16,r16,r2
 8019220:	2908b03a 	or	r4,r5,r4
 8019224:	1804c03a 	cmpne	r2,r3,zero
 8019228:	2088b03a 	or	r4,r4,r2
 801922c:	208001cc 	andi	r2,r4,7
 8019230:	10000726 	beq	r2,zero,8019250 <__muldf3+0x7c8>
 8019234:	20c003cc 	andi	r3,r4,15
 8019238:	00800104 	movi	r2,4
 801923c:	18800426 	beq	r3,r2,8019250 <__muldf3+0x7c8>
 8019240:	20c00104 	addi	r3,r4,4
 8019244:	1905803a 	cmpltu	r2,r3,r4
 8019248:	80a1883a 	add	r16,r16,r2
 801924c:	1809883a 	mov	r4,r3
 8019250:	8080202c 	andhi	r2,r16,128
 8019254:	10001b26 	beq	r2,zero,80192c4 <__muldf3+0x83c>
 8019258:	34c0004c 	andi	r19,r6,1
 801925c:	01000044 	movi	r4,1
 8019260:	0021883a 	mov	r16,zero
 8019264:	002f883a 	mov	r23,zero
 8019268:	003e6106 	br	8018bf0 <__alt_data_end+0xfc018bf0>
 801926c:	013ef884 	movi	r4,-1054
 8019270:	20c9c83a 	sub	r4,r4,r3
 8019274:	01400804 	movi	r5,32
 8019278:	8108d83a 	srl	r4,r16,r4
 801927c:	11401526 	beq	r2,r5,80192d4 <__muldf3+0x84c>
 8019280:	18c10f84 	addi	r3,r3,1086
 8019284:	80e0983a 	sll	r16,r16,r3
 8019288:	85eeb03a 	or	r23,r16,r23
 801928c:	b804c03a 	cmpne	r2,r23,zero
 8019290:	1108b03a 	or	r4,r2,r4
 8019294:	20c001cc 	andi	r3,r4,7
 8019298:	1800061e 	bne	r3,zero,80192b4 <__muldf3+0x82c>
 801929c:	0021883a 	mov	r16,zero
 80192a0:	202ed0fa 	srli	r23,r4,3
 80192a4:	34c0004c 	andi	r19,r6,1
 80192a8:	0009883a 	mov	r4,zero
 80192ac:	b8eeb03a 	or	r23,r23,r3
 80192b0:	003e4f06 	br	8018bf0 <__alt_data_end+0xfc018bf0>
 80192b4:	20c003cc 	andi	r3,r4,15
 80192b8:	00800104 	movi	r2,4
 80192bc:	0021883a 	mov	r16,zero
 80192c0:	18bfdf1e 	bne	r3,r2,8019240 <__alt_data_end+0xfc019240>
 80192c4:	8004927a 	slli	r2,r16,9
 80192c8:	8006977a 	slli	r3,r16,29
 80192cc:	1020d33a 	srli	r16,r2,12
 80192d0:	003ff306 	br	80192a0 <__alt_data_end+0xfc0192a0>
 80192d4:	0021883a 	mov	r16,zero
 80192d8:	003feb06 	br	8019288 <__alt_data_end+0xfc019288>
 80192dc:	00800434 	movhi	r2,16
 80192e0:	84000234 	orhi	r16,r16,8
 80192e4:	10bfffc4 	addi	r2,r2,-1
 80192e8:	4cc0004c 	andi	r19,r9,1
 80192ec:	80a0703a 	and	r16,r16,r2
 80192f0:	003ea606 	br	8018d8c <__alt_data_end+0xfc018d8c>

080192f4 <__subdf3>:
 80192f4:	00c00434 	movhi	r3,16
 80192f8:	18ffffc4 	addi	r3,r3,-1
 80192fc:	defffb04 	addi	sp,sp,-20
 8019300:	28d2703a 	and	r9,r5,r3
 8019304:	3814d53a 	srli	r10,r7,20
 8019308:	38c6703a 	and	r3,r7,r3
 801930c:	3004d77a 	srli	r2,r6,29
 8019310:	dc800215 	stw	r18,8(sp)
 8019314:	dc000015 	stw	r16,0(sp)
 8019318:	2824d7fa 	srli	r18,r5,31
 801931c:	2820d53a 	srli	r16,r5,20
 8019320:	481290fa 	slli	r9,r9,3
 8019324:	200ad77a 	srli	r5,r4,29
 8019328:	180690fa 	slli	r3,r3,3
 801932c:	dc400115 	stw	r17,4(sp)
 8019330:	dfc00415 	stw	ra,16(sp)
 8019334:	202290fa 	slli	r17,r4,3
 8019338:	dcc00315 	stw	r19,12(sp)
 801933c:	5281ffcc 	andi	r10,r10,2047
 8019340:	0101ffc4 	movi	r4,2047
 8019344:	9011883a 	mov	r8,r18
 8019348:	8401ffcc 	andi	r16,r16,2047
 801934c:	94803fcc 	andi	r18,r18,255
 8019350:	494ab03a 	or	r5,r9,r5
 8019354:	380ed7fa 	srli	r7,r7,31
 8019358:	1886b03a 	or	r3,r3,r2
 801935c:	300c90fa 	slli	r6,r6,3
 8019360:	51009026 	beq	r10,r4,80195a4 <__subdf3+0x2b0>
 8019364:	39c0005c 	xori	r7,r7,1
 8019368:	8285c83a 	sub	r2,r16,r10
 801936c:	91c06f26 	beq	r18,r7,801952c <__subdf3+0x238>
 8019370:	0080b10e 	bge	zero,r2,8019638 <__subdf3+0x344>
 8019374:	50002a1e 	bne	r10,zero,8019420 <__subdf3+0x12c>
 8019378:	1988b03a 	or	r4,r3,r6
 801937c:	2000941e 	bne	r4,zero,80195d0 <__subdf3+0x2dc>
 8019380:	888001cc 	andi	r2,r17,7
 8019384:	10005b26 	beq	r2,zero,80194f4 <__subdf3+0x200>
 8019388:	88c003cc 	andi	r3,r17,15
 801938c:	00800104 	movi	r2,4
 8019390:	18805826 	beq	r3,r2,80194f4 <__subdf3+0x200>
 8019394:	88c00104 	addi	r3,r17,4
 8019398:	1c63803a 	cmpltu	r17,r3,r17
 801939c:	2c4b883a 	add	r5,r5,r17
 80193a0:	2880202c 	andhi	r2,r5,128
 80193a4:	9200004c 	andi	r8,r18,1
 80193a8:	1823883a 	mov	r17,r3
 80193ac:	10005426 	beq	r2,zero,8019500 <__subdf3+0x20c>
 80193b0:	84000044 	addi	r16,r16,1
 80193b4:	0081ffc4 	movi	r2,2047
 80193b8:	8080bf26 	beq	r16,r2,80196b8 <__subdf3+0x3c4>
 80193bc:	013fe034 	movhi	r4,65408
 80193c0:	213fffc4 	addi	r4,r4,-1
 80193c4:	290a703a 	and	r5,r5,r4
 80193c8:	2804977a 	slli	r2,r5,29
 80193cc:	280a927a 	slli	r5,r5,9
 80193d0:	8822d0fa 	srli	r17,r17,3
 80193d4:	8401ffcc 	andi	r16,r16,2047
 80193d8:	2808d33a 	srli	r4,r5,12
 80193dc:	1444b03a 	or	r2,r2,r17
 80193e0:	8401ffcc 	andi	r16,r16,2047
 80193e4:	800a953a 	slli	r5,r16,20
 80193e8:	40c03fcc 	andi	r3,r8,255
 80193ec:	04000434 	movhi	r16,16
 80193f0:	180697fa 	slli	r3,r3,31
 80193f4:	843fffc4 	addi	r16,r16,-1
 80193f8:	2420703a 	and	r16,r4,r16
 80193fc:	8160b03a 	or	r16,r16,r5
 8019400:	80c6b03a 	or	r3,r16,r3
 8019404:	dfc00417 	ldw	ra,16(sp)
 8019408:	dcc00317 	ldw	r19,12(sp)
 801940c:	dc800217 	ldw	r18,8(sp)
 8019410:	dc400117 	ldw	r17,4(sp)
 8019414:	dc000017 	ldw	r16,0(sp)
 8019418:	dec00504 	addi	sp,sp,20
 801941c:	f800283a 	ret
 8019420:	0101ffc4 	movi	r4,2047
 8019424:	813fd626 	beq	r16,r4,8019380 <__alt_data_end+0xfc019380>
 8019428:	18c02034 	orhi	r3,r3,128
 801942c:	01000e04 	movi	r4,56
 8019430:	2080a416 	blt	r4,r2,80196c4 <__subdf3+0x3d0>
 8019434:	010007c4 	movi	r4,31
 8019438:	2080c716 	blt	r4,r2,8019758 <__subdf3+0x464>
 801943c:	01000804 	movi	r4,32
 8019440:	2089c83a 	sub	r4,r4,r2
 8019444:	1910983a 	sll	r8,r3,r4
 8019448:	308ed83a 	srl	r7,r6,r2
 801944c:	3108983a 	sll	r4,r6,r4
 8019450:	1884d83a 	srl	r2,r3,r2
 8019454:	41ccb03a 	or	r6,r8,r7
 8019458:	2008c03a 	cmpne	r4,r4,zero
 801945c:	310cb03a 	or	r6,r6,r4
 8019460:	898dc83a 	sub	r6,r17,r6
 8019464:	89a3803a 	cmpltu	r17,r17,r6
 8019468:	288bc83a 	sub	r5,r5,r2
 801946c:	2c4bc83a 	sub	r5,r5,r17
 8019470:	3023883a 	mov	r17,r6
 8019474:	2880202c 	andhi	r2,r5,128
 8019478:	10006b26 	beq	r2,zero,8019628 <__subdf3+0x334>
 801947c:	04c02034 	movhi	r19,128
 8019480:	9cffffc4 	addi	r19,r19,-1
 8019484:	2ce6703a 	and	r19,r5,r19
 8019488:	98007c26 	beq	r19,zero,801967c <__subdf3+0x388>
 801948c:	9809883a 	mov	r4,r19
 8019490:	8019f580 	call	8019f58 <__clzsi2>
 8019494:	10fffe04 	addi	r3,r2,-8
 8019498:	010007c4 	movi	r4,31
 801949c:	20c07d16 	blt	r4,r3,8019694 <__subdf3+0x3a0>
 80194a0:	01400a04 	movi	r5,40
 80194a4:	2885c83a 	sub	r2,r5,r2
 80194a8:	888ad83a 	srl	r5,r17,r2
 80194ac:	98e6983a 	sll	r19,r19,r3
 80194b0:	88e2983a 	sll	r17,r17,r3
 80194b4:	2ce6b03a 	or	r19,r5,r19
 80194b8:	1c007a16 	blt	r3,r16,80196a4 <__subdf3+0x3b0>
 80194bc:	1c21c83a 	sub	r16,r3,r16
 80194c0:	81400044 	addi	r5,r16,1
 80194c4:	00c007c4 	movi	r3,31
 80194c8:	19409616 	blt	r3,r5,8019724 <__subdf3+0x430>
 80194cc:	1c21c83a 	sub	r16,r3,r16
 80194d0:	8c08983a 	sll	r4,r17,r16
 80194d4:	8946d83a 	srl	r3,r17,r5
 80194d8:	9c20983a 	sll	r16,r19,r16
 80194dc:	2008c03a 	cmpne	r4,r4,zero
 80194e0:	994ad83a 	srl	r5,r19,r5
 80194e4:	1c06b03a 	or	r3,r3,r16
 80194e8:	1922b03a 	or	r17,r3,r4
 80194ec:	0021883a 	mov	r16,zero
 80194f0:	003fa306 	br	8019380 <__alt_data_end+0xfc019380>
 80194f4:	2880202c 	andhi	r2,r5,128
 80194f8:	9200004c 	andi	r8,r18,1
 80194fc:	103fac1e 	bne	r2,zero,80193b0 <__alt_data_end+0xfc0193b0>
 8019500:	2804977a 	slli	r2,r5,29
 8019504:	8822d0fa 	srli	r17,r17,3
 8019508:	00c1ffc4 	movi	r3,2047
 801950c:	280ad0fa 	srli	r5,r5,3
 8019510:	1444b03a 	or	r2,r2,r17
 8019514:	80c02726 	beq	r16,r3,80195b4 <__subdf3+0x2c0>
 8019518:	01000434 	movhi	r4,16
 801951c:	213fffc4 	addi	r4,r4,-1
 8019520:	80e0703a 	and	r16,r16,r3
 8019524:	2908703a 	and	r4,r5,r4
 8019528:	003fad06 	br	80193e0 <__alt_data_end+0xfc0193e0>
 801952c:	0080690e 	bge	zero,r2,80196d4 <__subdf3+0x3e0>
 8019530:	50002f26 	beq	r10,zero,80195f0 <__subdf3+0x2fc>
 8019534:	0101ffc4 	movi	r4,2047
 8019538:	813f9126 	beq	r16,r4,8019380 <__alt_data_end+0xfc019380>
 801953c:	18c02034 	orhi	r3,r3,128
 8019540:	01000e04 	movi	r4,56
 8019544:	2080b00e 	bge	r4,r2,8019808 <__subdf3+0x514>
 8019548:	198cb03a 	or	r6,r3,r6
 801954c:	300ec03a 	cmpne	r7,r6,zero
 8019550:	0005883a 	mov	r2,zero
 8019554:	3c4f883a 	add	r7,r7,r17
 8019558:	3c63803a 	cmpltu	r17,r7,r17
 801955c:	114b883a 	add	r5,r2,r5
 8019560:	2c4b883a 	add	r5,r5,r17
 8019564:	3823883a 	mov	r17,r7
 8019568:	2880202c 	andhi	r2,r5,128
 801956c:	10002e26 	beq	r2,zero,8019628 <__subdf3+0x334>
 8019570:	84000044 	addi	r16,r16,1
 8019574:	0081ffc4 	movi	r2,2047
 8019578:	8080de26 	beq	r16,r2,80198f4 <__subdf3+0x600>
 801957c:	00bfe034 	movhi	r2,65408
 8019580:	10bfffc4 	addi	r2,r2,-1
 8019584:	288a703a 	and	r5,r5,r2
 8019588:	880cd07a 	srli	r6,r17,1
 801958c:	280897fa 	slli	r4,r5,31
 8019590:	88c0004c 	andi	r3,r17,1
 8019594:	30e2b03a 	or	r17,r6,r3
 8019598:	280ad07a 	srli	r5,r5,1
 801959c:	8922b03a 	or	r17,r17,r4
 80195a0:	003f7706 	br	8019380 <__alt_data_end+0xfc019380>
 80195a4:	1984b03a 	or	r2,r3,r6
 80195a8:	103f6e26 	beq	r2,zero,8019364 <__alt_data_end+0xfc019364>
 80195ac:	39c03fcc 	andi	r7,r7,255
 80195b0:	003f6d06 	br	8019368 <__alt_data_end+0xfc019368>
 80195b4:	1146b03a 	or	r3,r2,r5
 80195b8:	18003f26 	beq	r3,zero,80196b8 <__subdf3+0x3c4>
 80195bc:	00c00434 	movhi	r3,16
 80195c0:	29000234 	orhi	r4,r5,8
 80195c4:	18ffffc4 	addi	r3,r3,-1
 80195c8:	20c8703a 	and	r4,r4,r3
 80195cc:	003f8406 	br	80193e0 <__alt_data_end+0xfc0193e0>
 80195d0:	10bfffc4 	addi	r2,r2,-1
 80195d4:	1000501e 	bne	r2,zero,8019718 <__subdf3+0x424>
 80195d8:	898fc83a 	sub	r7,r17,r6
 80195dc:	89e3803a 	cmpltu	r17,r17,r7
 80195e0:	28cbc83a 	sub	r5,r5,r3
 80195e4:	2c4bc83a 	sub	r5,r5,r17
 80195e8:	3823883a 	mov	r17,r7
 80195ec:	003fa106 	br	8019474 <__alt_data_end+0xfc019474>
 80195f0:	1988b03a 	or	r4,r3,r6
 80195f4:	203f6226 	beq	r4,zero,8019380 <__alt_data_end+0xfc019380>
 80195f8:	10bfffc4 	addi	r2,r2,-1
 80195fc:	10009b1e 	bne	r2,zero,801986c <__subdf3+0x578>
 8019600:	344d883a 	add	r6,r6,r17
 8019604:	3463803a 	cmpltu	r17,r6,r17
 8019608:	194b883a 	add	r5,r3,r5
 801960c:	2c4b883a 	add	r5,r5,r17
 8019610:	3023883a 	mov	r17,r6
 8019614:	003fd406 	br	8019568 <__alt_data_end+0xfc019568>
 8019618:	1106b03a 	or	r3,r2,r4
 801961c:	1800b426 	beq	r3,zero,80198f0 <__subdf3+0x5fc>
 8019620:	100b883a 	mov	r5,r2
 8019624:	2023883a 	mov	r17,r4
 8019628:	888001cc 	andi	r2,r17,7
 801962c:	103f561e 	bne	r2,zero,8019388 <__alt_data_end+0xfc019388>
 8019630:	9200004c 	andi	r8,r18,1
 8019634:	003fb206 	br	8019500 <__alt_data_end+0xfc019500>
 8019638:	1000531e 	bne	r2,zero,8019788 <__subdf3+0x494>
 801963c:	80800044 	addi	r2,r16,1
 8019640:	1081ffcc 	andi	r2,r2,2047
 8019644:	01000044 	movi	r4,1
 8019648:	2080a00e 	bge	r4,r2,80198cc <__subdf3+0x5d8>
 801964c:	8985c83a 	sub	r2,r17,r6
 8019650:	8889803a 	cmpltu	r4,r17,r2
 8019654:	28e7c83a 	sub	r19,r5,r3
 8019658:	9927c83a 	sub	r19,r19,r4
 801965c:	9900202c 	andhi	r4,r19,128
 8019660:	20006226 	beq	r4,zero,80197ec <__subdf3+0x4f8>
 8019664:	3463c83a 	sub	r17,r6,r17
 8019668:	194bc83a 	sub	r5,r3,r5
 801966c:	344d803a 	cmpltu	r6,r6,r17
 8019670:	29a7c83a 	sub	r19,r5,r6
 8019674:	3825883a 	mov	r18,r7
 8019678:	983f841e 	bne	r19,zero,801948c <__alt_data_end+0xfc01948c>
 801967c:	8809883a 	mov	r4,r17
 8019680:	8019f580 	call	8019f58 <__clzsi2>
 8019684:	10800804 	addi	r2,r2,32
 8019688:	10fffe04 	addi	r3,r2,-8
 801968c:	010007c4 	movi	r4,31
 8019690:	20ff830e 	bge	r4,r3,80194a0 <__alt_data_end+0xfc0194a0>
 8019694:	14fff604 	addi	r19,r2,-40
 8019698:	8ce6983a 	sll	r19,r17,r19
 801969c:	0023883a 	mov	r17,zero
 80196a0:	1c3f860e 	bge	r3,r16,80194bc <__alt_data_end+0xfc0194bc>
 80196a4:	017fe034 	movhi	r5,65408
 80196a8:	297fffc4 	addi	r5,r5,-1
 80196ac:	80e1c83a 	sub	r16,r16,r3
 80196b0:	994a703a 	and	r5,r19,r5
 80196b4:	003f3206 	br	8019380 <__alt_data_end+0xfc019380>
 80196b8:	0009883a 	mov	r4,zero
 80196bc:	0005883a 	mov	r2,zero
 80196c0:	003f4706 	br	80193e0 <__alt_data_end+0xfc0193e0>
 80196c4:	198cb03a 	or	r6,r3,r6
 80196c8:	300cc03a 	cmpne	r6,r6,zero
 80196cc:	0005883a 	mov	r2,zero
 80196d0:	003f6306 	br	8019460 <__alt_data_end+0xfc019460>
 80196d4:	10009d1e 	bne	r2,zero,801994c <__subdf3+0x658>
 80196d8:	81c00044 	addi	r7,r16,1
 80196dc:	3881ffcc 	andi	r2,r7,2047
 80196e0:	02400044 	movi	r9,1
 80196e4:	4880680e 	bge	r9,r2,8019888 <__subdf3+0x594>
 80196e8:	0081ffc4 	movi	r2,2047
 80196ec:	3880ae26 	beq	r7,r2,80199a8 <__subdf3+0x6b4>
 80196f0:	344d883a 	add	r6,r6,r17
 80196f4:	3463803a 	cmpltu	r17,r6,r17
 80196f8:	194b883a 	add	r5,r3,r5
 80196fc:	2c4b883a 	add	r5,r5,r17
 8019700:	282297fa 	slli	r17,r5,31
 8019704:	300cd07a 	srli	r6,r6,1
 8019708:	280ad07a 	srli	r5,r5,1
 801970c:	3821883a 	mov	r16,r7
 8019710:	89a2b03a 	or	r17,r17,r6
 8019714:	003f1a06 	br	8019380 <__alt_data_end+0xfc019380>
 8019718:	0101ffc4 	movi	r4,2047
 801971c:	813f431e 	bne	r16,r4,801942c <__alt_data_end+0xfc01942c>
 8019720:	003f1706 	br	8019380 <__alt_data_end+0xfc019380>
 8019724:	80bff844 	addi	r2,r16,-31
 8019728:	00c00804 	movi	r3,32
 801972c:	9884d83a 	srl	r2,r19,r2
 8019730:	28c05126 	beq	r5,r3,8019878 <__subdf3+0x584>
 8019734:	00c00fc4 	movi	r3,63
 8019738:	1c21c83a 	sub	r16,r3,r16
 801973c:	9c26983a 	sll	r19,r19,r16
 8019740:	9c62b03a 	or	r17,r19,r17
 8019744:	8822c03a 	cmpne	r17,r17,zero
 8019748:	88a2b03a 	or	r17,r17,r2
 801974c:	000b883a 	mov	r5,zero
 8019750:	0021883a 	mov	r16,zero
 8019754:	003fb406 	br	8019628 <__alt_data_end+0xfc019628>
 8019758:	113ff804 	addi	r4,r2,-32
 801975c:	01c00804 	movi	r7,32
 8019760:	1908d83a 	srl	r4,r3,r4
 8019764:	11c04626 	beq	r2,r7,8019880 <__subdf3+0x58c>
 8019768:	01c01004 	movi	r7,64
 801976c:	3885c83a 	sub	r2,r7,r2
 8019770:	1884983a 	sll	r2,r3,r2
 8019774:	118cb03a 	or	r6,r2,r6
 8019778:	300cc03a 	cmpne	r6,r6,zero
 801977c:	310cb03a 	or	r6,r6,r4
 8019780:	0005883a 	mov	r2,zero
 8019784:	003f3606 	br	8019460 <__alt_data_end+0xfc019460>
 8019788:	80002b26 	beq	r16,zero,8019838 <__subdf3+0x544>
 801978c:	0101ffc4 	movi	r4,2047
 8019790:	51006926 	beq	r10,r4,8019938 <__subdf3+0x644>
 8019794:	0085c83a 	sub	r2,zero,r2
 8019798:	29402034 	orhi	r5,r5,128
 801979c:	01000e04 	movi	r4,56
 80197a0:	20807d16 	blt	r4,r2,8019998 <__subdf3+0x6a4>
 80197a4:	010007c4 	movi	r4,31
 80197a8:	2080d916 	blt	r4,r2,8019b10 <__subdf3+0x81c>
 80197ac:	01000804 	movi	r4,32
 80197b0:	2089c83a 	sub	r4,r4,r2
 80197b4:	2912983a 	sll	r9,r5,r4
 80197b8:	8890d83a 	srl	r8,r17,r2
 80197bc:	8908983a 	sll	r4,r17,r4
 80197c0:	2884d83a 	srl	r2,r5,r2
 80197c4:	4a22b03a 	or	r17,r9,r8
 80197c8:	2008c03a 	cmpne	r4,r4,zero
 80197cc:	8922b03a 	or	r17,r17,r4
 80197d0:	3463c83a 	sub	r17,r6,r17
 80197d4:	1885c83a 	sub	r2,r3,r2
 80197d8:	344d803a 	cmpltu	r6,r6,r17
 80197dc:	118bc83a 	sub	r5,r2,r6
 80197e0:	5021883a 	mov	r16,r10
 80197e4:	3825883a 	mov	r18,r7
 80197e8:	003f2206 	br	8019474 <__alt_data_end+0xfc019474>
 80197ec:	9886b03a 	or	r3,r19,r2
 80197f0:	18001c1e 	bne	r3,zero,8019864 <__subdf3+0x570>
 80197f4:	0011883a 	mov	r8,zero
 80197f8:	000b883a 	mov	r5,zero
 80197fc:	0023883a 	mov	r17,zero
 8019800:	0021883a 	mov	r16,zero
 8019804:	003f3e06 	br	8019500 <__alt_data_end+0xfc019500>
 8019808:	010007c4 	movi	r4,31
 801980c:	20803c16 	blt	r4,r2,8019900 <__subdf3+0x60c>
 8019810:	01000804 	movi	r4,32
 8019814:	2089c83a 	sub	r4,r4,r2
 8019818:	1912983a 	sll	r9,r3,r4
 801981c:	308ed83a 	srl	r7,r6,r2
 8019820:	3108983a 	sll	r4,r6,r4
 8019824:	1884d83a 	srl	r2,r3,r2
 8019828:	49ceb03a 	or	r7,r9,r7
 801982c:	2008c03a 	cmpne	r4,r4,zero
 8019830:	390eb03a 	or	r7,r7,r4
 8019834:	003f4706 	br	8019554 <__alt_data_end+0xfc019554>
 8019838:	2c48b03a 	or	r4,r5,r17
 801983c:	20003e26 	beq	r4,zero,8019938 <__subdf3+0x644>
 8019840:	0084303a 	nor	r2,zero,r2
 8019844:	10003a1e 	bne	r2,zero,8019930 <__subdf3+0x63c>
 8019848:	3463c83a 	sub	r17,r6,r17
 801984c:	194bc83a 	sub	r5,r3,r5
 8019850:	344d803a 	cmpltu	r6,r6,r17
 8019854:	298bc83a 	sub	r5,r5,r6
 8019858:	5021883a 	mov	r16,r10
 801985c:	3825883a 	mov	r18,r7
 8019860:	003f0406 	br	8019474 <__alt_data_end+0xfc019474>
 8019864:	1023883a 	mov	r17,r2
 8019868:	003f0706 	br	8019488 <__alt_data_end+0xfc019488>
 801986c:	0101ffc4 	movi	r4,2047
 8019870:	813f331e 	bne	r16,r4,8019540 <__alt_data_end+0xfc019540>
 8019874:	003ec206 	br	8019380 <__alt_data_end+0xfc019380>
 8019878:	0027883a 	mov	r19,zero
 801987c:	003fb006 	br	8019740 <__alt_data_end+0xfc019740>
 8019880:	0005883a 	mov	r2,zero
 8019884:	003fbb06 	br	8019774 <__alt_data_end+0xfc019774>
 8019888:	2c44b03a 	or	r2,r5,r17
 801988c:	80008b1e 	bne	r16,zero,8019abc <__subdf3+0x7c8>
 8019890:	1000b526 	beq	r2,zero,8019b68 <__subdf3+0x874>
 8019894:	1984b03a 	or	r2,r3,r6
 8019898:	103eb926 	beq	r2,zero,8019380 <__alt_data_end+0xfc019380>
 801989c:	3449883a 	add	r4,r6,r17
 80198a0:	2463803a 	cmpltu	r17,r4,r17
 80198a4:	194b883a 	add	r5,r3,r5
 80198a8:	2c4b883a 	add	r5,r5,r17
 80198ac:	2880202c 	andhi	r2,r5,128
 80198b0:	2023883a 	mov	r17,r4
 80198b4:	103f5c26 	beq	r2,zero,8019628 <__alt_data_end+0xfc019628>
 80198b8:	00bfe034 	movhi	r2,65408
 80198bc:	10bfffc4 	addi	r2,r2,-1
 80198c0:	4821883a 	mov	r16,r9
 80198c4:	288a703a 	and	r5,r5,r2
 80198c8:	003ead06 	br	8019380 <__alt_data_end+0xfc019380>
 80198cc:	2c44b03a 	or	r2,r5,r17
 80198d0:	8000291e 	bne	r16,zero,8019978 <__subdf3+0x684>
 80198d4:	10004f1e 	bne	r2,zero,8019a14 <__subdf3+0x720>
 80198d8:	1984b03a 	or	r2,r3,r6
 80198dc:	10000426 	beq	r2,zero,80198f0 <__subdf3+0x5fc>
 80198e0:	180b883a 	mov	r5,r3
 80198e4:	3023883a 	mov	r17,r6
 80198e8:	3825883a 	mov	r18,r7
 80198ec:	003ea406 	br	8019380 <__alt_data_end+0xfc019380>
 80198f0:	0011883a 	mov	r8,zero
 80198f4:	000b883a 	mov	r5,zero
 80198f8:	0023883a 	mov	r17,zero
 80198fc:	003f0006 	br	8019500 <__alt_data_end+0xfc019500>
 8019900:	11fff804 	addi	r7,r2,-32
 8019904:	19c8d83a 	srl	r4,r3,r7
 8019908:	01c00804 	movi	r7,32
 801990c:	11c07e26 	beq	r2,r7,8019b08 <__subdf3+0x814>
 8019910:	01c01004 	movi	r7,64
 8019914:	3885c83a 	sub	r2,r7,r2
 8019918:	1884983a 	sll	r2,r3,r2
 801991c:	118cb03a 	or	r6,r2,r6
 8019920:	300ec03a 	cmpne	r7,r6,zero
 8019924:	390eb03a 	or	r7,r7,r4
 8019928:	0005883a 	mov	r2,zero
 801992c:	003f0906 	br	8019554 <__alt_data_end+0xfc019554>
 8019930:	0101ffc4 	movi	r4,2047
 8019934:	513f991e 	bne	r10,r4,801979c <__alt_data_end+0xfc01979c>
 8019938:	180b883a 	mov	r5,r3
 801993c:	3023883a 	mov	r17,r6
 8019940:	5021883a 	mov	r16,r10
 8019944:	3825883a 	mov	r18,r7
 8019948:	003e8d06 	br	8019380 <__alt_data_end+0xfc019380>
 801994c:	80001a1e 	bne	r16,zero,80199b8 <__subdf3+0x6c4>
 8019950:	2c48b03a 	or	r4,r5,r17
 8019954:	20005526 	beq	r4,zero,8019aac <__subdf3+0x7b8>
 8019958:	0084303a 	nor	r2,zero,r2
 801995c:	1000511e 	bne	r2,zero,8019aa4 <__subdf3+0x7b0>
 8019960:	89a3883a 	add	r17,r17,r6
 8019964:	194b883a 	add	r5,r3,r5
 8019968:	898d803a 	cmpltu	r6,r17,r6
 801996c:	298b883a 	add	r5,r5,r6
 8019970:	5021883a 	mov	r16,r10
 8019974:	003efc06 	br	8019568 <__alt_data_end+0xfc019568>
 8019978:	1000341e 	bne	r2,zero,8019a4c <__subdf3+0x758>
 801997c:	1984b03a 	or	r2,r3,r6
 8019980:	10006f26 	beq	r2,zero,8019b40 <__subdf3+0x84c>
 8019984:	180b883a 	mov	r5,r3
 8019988:	3023883a 	mov	r17,r6
 801998c:	3825883a 	mov	r18,r7
 8019990:	0401ffc4 	movi	r16,2047
 8019994:	003e7a06 	br	8019380 <__alt_data_end+0xfc019380>
 8019998:	2c62b03a 	or	r17,r5,r17
 801999c:	8822c03a 	cmpne	r17,r17,zero
 80199a0:	0005883a 	mov	r2,zero
 80199a4:	003f8a06 	br	80197d0 <__alt_data_end+0xfc0197d0>
 80199a8:	3821883a 	mov	r16,r7
 80199ac:	000b883a 	mov	r5,zero
 80199b0:	0023883a 	mov	r17,zero
 80199b4:	003ed206 	br	8019500 <__alt_data_end+0xfc019500>
 80199b8:	0101ffc4 	movi	r4,2047
 80199bc:	51003b26 	beq	r10,r4,8019aac <__subdf3+0x7b8>
 80199c0:	0085c83a 	sub	r2,zero,r2
 80199c4:	29402034 	orhi	r5,r5,128
 80199c8:	01000e04 	movi	r4,56
 80199cc:	20806216 	blt	r4,r2,8019b58 <__subdf3+0x864>
 80199d0:	010007c4 	movi	r4,31
 80199d4:	20806b16 	blt	r4,r2,8019b84 <__subdf3+0x890>
 80199d8:	01000804 	movi	r4,32
 80199dc:	2089c83a 	sub	r4,r4,r2
 80199e0:	2912983a 	sll	r9,r5,r4
 80199e4:	888ed83a 	srl	r7,r17,r2
 80199e8:	8908983a 	sll	r4,r17,r4
 80199ec:	2884d83a 	srl	r2,r5,r2
 80199f0:	49e2b03a 	or	r17,r9,r7
 80199f4:	2008c03a 	cmpne	r4,r4,zero
 80199f8:	8922b03a 	or	r17,r17,r4
 80199fc:	89a3883a 	add	r17,r17,r6
 8019a00:	10c5883a 	add	r2,r2,r3
 8019a04:	898d803a 	cmpltu	r6,r17,r6
 8019a08:	118b883a 	add	r5,r2,r6
 8019a0c:	5021883a 	mov	r16,r10
 8019a10:	003ed506 	br	8019568 <__alt_data_end+0xfc019568>
 8019a14:	1984b03a 	or	r2,r3,r6
 8019a18:	103e5926 	beq	r2,zero,8019380 <__alt_data_end+0xfc019380>
 8019a1c:	8989c83a 	sub	r4,r17,r6
 8019a20:	8911803a 	cmpltu	r8,r17,r4
 8019a24:	28c5c83a 	sub	r2,r5,r3
 8019a28:	1205c83a 	sub	r2,r2,r8
 8019a2c:	1200202c 	andhi	r8,r2,128
 8019a30:	403ef926 	beq	r8,zero,8019618 <__alt_data_end+0xfc019618>
 8019a34:	3463c83a 	sub	r17,r6,r17
 8019a38:	194bc83a 	sub	r5,r3,r5
 8019a3c:	344d803a 	cmpltu	r6,r6,r17
 8019a40:	298bc83a 	sub	r5,r5,r6
 8019a44:	3825883a 	mov	r18,r7
 8019a48:	003e4d06 	br	8019380 <__alt_data_end+0xfc019380>
 8019a4c:	1984b03a 	or	r2,r3,r6
 8019a50:	10002b26 	beq	r2,zero,8019b00 <__subdf3+0x80c>
 8019a54:	2808d0fa 	srli	r4,r5,3
 8019a58:	8822d0fa 	srli	r17,r17,3
 8019a5c:	280a977a 	slli	r5,r5,29
 8019a60:	2080022c 	andhi	r2,r4,8
 8019a64:	2c62b03a 	or	r17,r5,r17
 8019a68:	10000826 	beq	r2,zero,8019a8c <__subdf3+0x798>
 8019a6c:	1810d0fa 	srli	r8,r3,3
 8019a70:	4080022c 	andhi	r2,r8,8
 8019a74:	1000051e 	bne	r2,zero,8019a8c <__subdf3+0x798>
 8019a78:	300cd0fa 	srli	r6,r6,3
 8019a7c:	1804977a 	slli	r2,r3,29
 8019a80:	4009883a 	mov	r4,r8
 8019a84:	3825883a 	mov	r18,r7
 8019a88:	11a2b03a 	or	r17,r2,r6
 8019a8c:	880ad77a 	srli	r5,r17,29
 8019a90:	200890fa 	slli	r4,r4,3
 8019a94:	882290fa 	slli	r17,r17,3
 8019a98:	0401ffc4 	movi	r16,2047
 8019a9c:	290ab03a 	or	r5,r5,r4
 8019aa0:	003e3706 	br	8019380 <__alt_data_end+0xfc019380>
 8019aa4:	0101ffc4 	movi	r4,2047
 8019aa8:	513fc71e 	bne	r10,r4,80199c8 <__alt_data_end+0xfc0199c8>
 8019aac:	180b883a 	mov	r5,r3
 8019ab0:	3023883a 	mov	r17,r6
 8019ab4:	5021883a 	mov	r16,r10
 8019ab8:	003e3106 	br	8019380 <__alt_data_end+0xfc019380>
 8019abc:	10002d26 	beq	r2,zero,8019b74 <__subdf3+0x880>
 8019ac0:	1984b03a 	or	r2,r3,r6
 8019ac4:	10000e26 	beq	r2,zero,8019b00 <__subdf3+0x80c>
 8019ac8:	2808d0fa 	srli	r4,r5,3
 8019acc:	8822d0fa 	srli	r17,r17,3
 8019ad0:	280a977a 	slli	r5,r5,29
 8019ad4:	2080022c 	andhi	r2,r4,8
 8019ad8:	2c62b03a 	or	r17,r5,r17
 8019adc:	103feb26 	beq	r2,zero,8019a8c <__alt_data_end+0xfc019a8c>
 8019ae0:	180ed0fa 	srli	r7,r3,3
 8019ae4:	3880022c 	andhi	r2,r7,8
 8019ae8:	103fe81e 	bne	r2,zero,8019a8c <__alt_data_end+0xfc019a8c>
 8019aec:	300cd0fa 	srli	r6,r6,3
 8019af0:	1804977a 	slli	r2,r3,29
 8019af4:	3809883a 	mov	r4,r7
 8019af8:	11a2b03a 	or	r17,r2,r6
 8019afc:	003fe306 	br	8019a8c <__alt_data_end+0xfc019a8c>
 8019b00:	0401ffc4 	movi	r16,2047
 8019b04:	003e1e06 	br	8019380 <__alt_data_end+0xfc019380>
 8019b08:	0005883a 	mov	r2,zero
 8019b0c:	003f8306 	br	801991c <__alt_data_end+0xfc01991c>
 8019b10:	113ff804 	addi	r4,r2,-32
 8019b14:	02000804 	movi	r8,32
 8019b18:	2908d83a 	srl	r4,r5,r4
 8019b1c:	12002526 	beq	r2,r8,8019bb4 <__subdf3+0x8c0>
 8019b20:	02001004 	movi	r8,64
 8019b24:	4085c83a 	sub	r2,r8,r2
 8019b28:	288a983a 	sll	r5,r5,r2
 8019b2c:	2c62b03a 	or	r17,r5,r17
 8019b30:	8822c03a 	cmpne	r17,r17,zero
 8019b34:	8922b03a 	or	r17,r17,r4
 8019b38:	0005883a 	mov	r2,zero
 8019b3c:	003f2406 	br	80197d0 <__alt_data_end+0xfc0197d0>
 8019b40:	01402034 	movhi	r5,128
 8019b44:	0011883a 	mov	r8,zero
 8019b48:	297fffc4 	addi	r5,r5,-1
 8019b4c:	047ffe04 	movi	r17,-8
 8019b50:	0401ffc4 	movi	r16,2047
 8019b54:	003e6a06 	br	8019500 <__alt_data_end+0xfc019500>
 8019b58:	2c62b03a 	or	r17,r5,r17
 8019b5c:	8822c03a 	cmpne	r17,r17,zero
 8019b60:	0005883a 	mov	r2,zero
 8019b64:	003fa506 	br	80199fc <__alt_data_end+0xfc0199fc>
 8019b68:	180b883a 	mov	r5,r3
 8019b6c:	3023883a 	mov	r17,r6
 8019b70:	003e0306 	br	8019380 <__alt_data_end+0xfc019380>
 8019b74:	180b883a 	mov	r5,r3
 8019b78:	3023883a 	mov	r17,r6
 8019b7c:	0401ffc4 	movi	r16,2047
 8019b80:	003dff06 	br	8019380 <__alt_data_end+0xfc019380>
 8019b84:	113ff804 	addi	r4,r2,-32
 8019b88:	01c00804 	movi	r7,32
 8019b8c:	2908d83a 	srl	r4,r5,r4
 8019b90:	11c00a26 	beq	r2,r7,8019bbc <__subdf3+0x8c8>
 8019b94:	01c01004 	movi	r7,64
 8019b98:	3885c83a 	sub	r2,r7,r2
 8019b9c:	288a983a 	sll	r5,r5,r2
 8019ba0:	2c62b03a 	or	r17,r5,r17
 8019ba4:	8822c03a 	cmpne	r17,r17,zero
 8019ba8:	8922b03a 	or	r17,r17,r4
 8019bac:	0005883a 	mov	r2,zero
 8019bb0:	003f9206 	br	80199fc <__alt_data_end+0xfc0199fc>
 8019bb4:	000b883a 	mov	r5,zero
 8019bb8:	003fdc06 	br	8019b2c <__alt_data_end+0xfc019b2c>
 8019bbc:	000b883a 	mov	r5,zero
 8019bc0:	003ff706 	br	8019ba0 <__alt_data_end+0xfc019ba0>

08019bc4 <__fixdfsi>:
 8019bc4:	2806d53a 	srli	r3,r5,20
 8019bc8:	00800434 	movhi	r2,16
 8019bcc:	10bfffc4 	addi	r2,r2,-1
 8019bd0:	18c1ffcc 	andi	r3,r3,2047
 8019bd4:	0180ff84 	movi	r6,1022
 8019bd8:	2884703a 	and	r2,r5,r2
 8019bdc:	280ad7fa 	srli	r5,r5,31
 8019be0:	30c0130e 	bge	r6,r3,8019c30 <__fixdfsi+0x6c>
 8019be4:	01810744 	movi	r6,1053
 8019be8:	30c00d16 	blt	r6,r3,8019c20 <__fixdfsi+0x5c>
 8019bec:	01810cc4 	movi	r6,1075
 8019bf0:	30cdc83a 	sub	r6,r6,r3
 8019bf4:	01c007c4 	movi	r7,31
 8019bf8:	10800434 	orhi	r2,r2,16
 8019bfc:	39800e0e 	bge	r7,r6,8019c38 <__fixdfsi+0x74>
 8019c00:	010104c4 	movi	r4,1043
 8019c04:	20c7c83a 	sub	r3,r4,r3
 8019c08:	10c6d83a 	srl	r3,r2,r3
 8019c0c:	29403fcc 	andi	r5,r5,255
 8019c10:	0145c83a 	sub	r2,zero,r5
 8019c14:	1884f03a 	xor	r2,r3,r2
 8019c18:	1145883a 	add	r2,r2,r5
 8019c1c:	f800283a 	ret
 8019c20:	00a00034 	movhi	r2,32768
 8019c24:	10bfffc4 	addi	r2,r2,-1
 8019c28:	2885883a 	add	r2,r5,r2
 8019c2c:	f800283a 	ret
 8019c30:	0005883a 	mov	r2,zero
 8019c34:	f800283a 	ret
 8019c38:	18fefb44 	addi	r3,r3,-1043
 8019c3c:	2188d83a 	srl	r4,r4,r6
 8019c40:	10c6983a 	sll	r3,r2,r3
 8019c44:	20c6b03a 	or	r3,r4,r3
 8019c48:	003ff006 	br	8019c0c <__alt_data_end+0xfc019c0c>

08019c4c <__floatsidf>:
 8019c4c:	defffd04 	addi	sp,sp,-12
 8019c50:	dc400115 	stw	r17,4(sp)
 8019c54:	dfc00215 	stw	ra,8(sp)
 8019c58:	dc000015 	stw	r16,0(sp)
 8019c5c:	2023883a 	mov	r17,r4
 8019c60:	20001426 	beq	r4,zero,8019cb4 <__floatsidf+0x68>
 8019c64:	2020d7fa 	srli	r16,r4,31
 8019c68:	80000126 	beq	r16,zero,8019c70 <__floatsidf+0x24>
 8019c6c:	0123c83a 	sub	r17,zero,r4
 8019c70:	8809883a 	mov	r4,r17
 8019c74:	8019f580 	call	8019f58 <__clzsi2>
 8019c78:	01410784 	movi	r5,1054
 8019c7c:	00c00284 	movi	r3,10
 8019c80:	288bc83a 	sub	r5,r5,r2
 8019c84:	18801c16 	blt	r3,r2,8019cf8 <__floatsidf+0xac>
 8019c88:	00c002c4 	movi	r3,11
 8019c8c:	1887c83a 	sub	r3,r3,r2
 8019c90:	88c8d83a 	srl	r4,r17,r3
 8019c94:	00c00434 	movhi	r3,16
 8019c98:	18ffffc4 	addi	r3,r3,-1
 8019c9c:	10800544 	addi	r2,r2,21
 8019ca0:	20c8703a 	and	r4,r4,r3
 8019ca4:	8884983a 	sll	r2,r17,r2
 8019ca8:	28c1ffcc 	andi	r3,r5,2047
 8019cac:	800d883a 	mov	r6,r16
 8019cb0:	00000406 	br	8019cc4 <__floatsidf+0x78>
 8019cb4:	000d883a 	mov	r6,zero
 8019cb8:	0007883a 	mov	r3,zero
 8019cbc:	0009883a 	mov	r4,zero
 8019cc0:	0005883a 	mov	r2,zero
 8019cc4:	180a953a 	slli	r5,r3,20
 8019cc8:	31803fcc 	andi	r6,r6,255
 8019ccc:	00c00434 	movhi	r3,16
 8019cd0:	300c97fa 	slli	r6,r6,31
 8019cd4:	18ffffc4 	addi	r3,r3,-1
 8019cd8:	20c6703a 	and	r3,r4,r3
 8019cdc:	1946b03a 	or	r3,r3,r5
 8019ce0:	1986b03a 	or	r3,r3,r6
 8019ce4:	dfc00217 	ldw	ra,8(sp)
 8019ce8:	dc400117 	ldw	r17,4(sp)
 8019cec:	dc000017 	ldw	r16,0(sp)
 8019cf0:	dec00304 	addi	sp,sp,12
 8019cf4:	f800283a 	ret
 8019cf8:	10fffd44 	addi	r3,r2,-11
 8019cfc:	88c8983a 	sll	r4,r17,r3
 8019d00:	00800434 	movhi	r2,16
 8019d04:	10bfffc4 	addi	r2,r2,-1
 8019d08:	2088703a 	and	r4,r4,r2
 8019d0c:	28c1ffcc 	andi	r3,r5,2047
 8019d10:	800d883a 	mov	r6,r16
 8019d14:	0005883a 	mov	r2,zero
 8019d18:	003fea06 	br	8019cc4 <__alt_data_end+0xfc019cc4>

08019d1c <__floatunsidf>:
 8019d1c:	defffe04 	addi	sp,sp,-8
 8019d20:	dc000015 	stw	r16,0(sp)
 8019d24:	dfc00115 	stw	ra,4(sp)
 8019d28:	2021883a 	mov	r16,r4
 8019d2c:	20001026 	beq	r4,zero,8019d70 <__floatunsidf+0x54>
 8019d30:	8019f580 	call	8019f58 <__clzsi2>
 8019d34:	01410784 	movi	r5,1054
 8019d38:	100d883a 	mov	r6,r2
 8019d3c:	288bc83a 	sub	r5,r5,r2
 8019d40:	00800284 	movi	r2,10
 8019d44:	11801616 	blt	r2,r6,8019da0 <__floatunsidf+0x84>
 8019d48:	008002c4 	movi	r2,11
 8019d4c:	1185c83a 	sub	r2,r2,r6
 8019d50:	8084d83a 	srl	r2,r16,r2
 8019d54:	00c00434 	movhi	r3,16
 8019d58:	31c00544 	addi	r7,r6,21
 8019d5c:	18ffffc4 	addi	r3,r3,-1
 8019d60:	81e0983a 	sll	r16,r16,r7
 8019d64:	10cc703a 	and	r6,r2,r3
 8019d68:	2941ffcc 	andi	r5,r5,2047
 8019d6c:	00000206 	br	8019d78 <__floatunsidf+0x5c>
 8019d70:	000b883a 	mov	r5,zero
 8019d74:	000d883a 	mov	r6,zero
 8019d78:	280a953a 	slli	r5,r5,20
 8019d7c:	00c00434 	movhi	r3,16
 8019d80:	18ffffc4 	addi	r3,r3,-1
 8019d84:	30c6703a 	and	r3,r6,r3
 8019d88:	8005883a 	mov	r2,r16
 8019d8c:	1946b03a 	or	r3,r3,r5
 8019d90:	dfc00117 	ldw	ra,4(sp)
 8019d94:	dc000017 	ldw	r16,0(sp)
 8019d98:	dec00204 	addi	sp,sp,8
 8019d9c:	f800283a 	ret
 8019da0:	31bffd44 	addi	r6,r6,-11
 8019da4:	818c983a 	sll	r6,r16,r6
 8019da8:	00800434 	movhi	r2,16
 8019dac:	10bfffc4 	addi	r2,r2,-1
 8019db0:	2941ffcc 	andi	r5,r5,2047
 8019db4:	0021883a 	mov	r16,zero
 8019db8:	308c703a 	and	r6,r6,r2
 8019dbc:	003fee06 	br	8019d78 <__alt_data_end+0xfc019d78>

08019dc0 <__truncdfsf2>:
 8019dc0:	2810d53a 	srli	r8,r5,20
 8019dc4:	01c00434 	movhi	r7,16
 8019dc8:	39ffffc4 	addi	r7,r7,-1
 8019dcc:	29ce703a 	and	r7,r5,r7
 8019dd0:	380e90fa 	slli	r7,r7,3
 8019dd4:	4201ffcc 	andi	r8,r8,2047
 8019dd8:	200cd77a 	srli	r6,r4,29
 8019ddc:	42400044 	addi	r9,r8,1
 8019de0:	4a41ffcc 	andi	r9,r9,2047
 8019de4:	00800044 	movi	r2,1
 8019de8:	398cb03a 	or	r6,r7,r6
 8019dec:	280ad7fa 	srli	r5,r5,31
 8019df0:	200e90fa 	slli	r7,r4,3
 8019df4:	1240230e 	bge	r2,r9,8019e84 <__truncdfsf2+0xc4>
 8019df8:	40ff2004 	addi	r3,r8,-896
 8019dfc:	00803f84 	movi	r2,254
 8019e00:	10c01516 	blt	r2,r3,8019e58 <__truncdfsf2+0x98>
 8019e04:	00c02d0e 	bge	zero,r3,8019ebc <__truncdfsf2+0xfc>
 8019e08:	200891ba 	slli	r4,r4,6
 8019e0c:	300c90fa 	slli	r6,r6,3
 8019e10:	380ed77a 	srli	r7,r7,29
 8019e14:	2008c03a 	cmpne	r4,r4,zero
 8019e18:	310cb03a 	or	r6,r6,r4
 8019e1c:	31ccb03a 	or	r6,r6,r7
 8019e20:	308001cc 	andi	r2,r6,7
 8019e24:	10000426 	beq	r2,zero,8019e38 <__truncdfsf2+0x78>
 8019e28:	310003cc 	andi	r4,r6,15
 8019e2c:	00800104 	movi	r2,4
 8019e30:	20800126 	beq	r4,r2,8019e38 <__truncdfsf2+0x78>
 8019e34:	31800104 	addi	r6,r6,4
 8019e38:	3081002c 	andhi	r2,r6,1024
 8019e3c:	10002326 	beq	r2,zero,8019ecc <__truncdfsf2+0x10c>
 8019e40:	18c00044 	addi	r3,r3,1
 8019e44:	00803fc4 	movi	r2,255
 8019e48:	18800326 	beq	r3,r2,8019e58 <__truncdfsf2+0x98>
 8019e4c:	300c91ba 	slli	r6,r6,6
 8019e50:	300cd27a 	srli	r6,r6,9
 8019e54:	00000206 	br	8019e60 <__truncdfsf2+0xa0>
 8019e58:	00ffffc4 	movi	r3,-1
 8019e5c:	000d883a 	mov	r6,zero
 8019e60:	18c03fcc 	andi	r3,r3,255
 8019e64:	180895fa 	slli	r4,r3,23
 8019e68:	00c02034 	movhi	r3,128
 8019e6c:	280a97fa 	slli	r5,r5,31
 8019e70:	18ffffc4 	addi	r3,r3,-1
 8019e74:	30c6703a 	and	r3,r6,r3
 8019e78:	1906b03a 	or	r3,r3,r4
 8019e7c:	1944b03a 	or	r2,r3,r5
 8019e80:	f800283a 	ret
 8019e84:	4000071e 	bne	r8,zero,8019ea4 <__truncdfsf2+0xe4>
 8019e88:	31ccb03a 	or	r6,r6,r7
 8019e8c:	30000d1e 	bne	r6,zero,8019ec4 <__truncdfsf2+0x104>
 8019e90:	0007883a 	mov	r3,zero
 8019e94:	00802034 	movhi	r2,128
 8019e98:	10bfffc4 	addi	r2,r2,-1
 8019e9c:	308c703a 	and	r6,r6,r2
 8019ea0:	003fef06 	br	8019e60 <__alt_data_end+0xfc019e60>
 8019ea4:	31c8b03a 	or	r4,r6,r7
 8019ea8:	203feb26 	beq	r4,zero,8019e58 <__alt_data_end+0xfc019e58>
 8019eac:	300c90fa 	slli	r6,r6,3
 8019eb0:	00c03fc4 	movi	r3,255
 8019eb4:	31808034 	orhi	r6,r6,512
 8019eb8:	003fd906 	br	8019e20 <__alt_data_end+0xfc019e20>
 8019ebc:	00bffa44 	movi	r2,-23
 8019ec0:	1880090e 	bge	r3,r2,8019ee8 <__truncdfsf2+0x128>
 8019ec4:	01800144 	movi	r6,5
 8019ec8:	0007883a 	mov	r3,zero
 8019ecc:	00803fc4 	movi	r2,255
 8019ed0:	300cd0fa 	srli	r6,r6,3
 8019ed4:	18bfef1e 	bne	r3,r2,8019e94 <__alt_data_end+0xfc019e94>
 8019ed8:	303fdf26 	beq	r6,zero,8019e58 <__alt_data_end+0xfc019e58>
 8019edc:	31801034 	orhi	r6,r6,64
 8019ee0:	00ffffc4 	movi	r3,-1
 8019ee4:	003feb06 	br	8019e94 <__alt_data_end+0xfc019e94>
 8019ee8:	0080e784 	movi	r2,926
 8019eec:	1205c83a 	sub	r2,r2,r8
 8019ef0:	00c007c4 	movi	r3,31
 8019ef4:	31802034 	orhi	r6,r6,128
 8019ef8:	18800916 	blt	r3,r2,8019f20 <__truncdfsf2+0x160>
 8019efc:	423f2084 	addi	r8,r8,-894
 8019f00:	3a06983a 	sll	r3,r7,r8
 8019f04:	3210983a 	sll	r8,r6,r8
 8019f08:	388ed83a 	srl	r7,r7,r2
 8019f0c:	180cc03a 	cmpne	r6,r3,zero
 8019f10:	418cb03a 	or	r6,r8,r6
 8019f14:	31ccb03a 	or	r6,r6,r7
 8019f18:	0007883a 	mov	r3,zero
 8019f1c:	003fc006 	br	8019e20 <__alt_data_end+0xfc019e20>
 8019f20:	00c0df84 	movi	r3,894
 8019f24:	1a07c83a 	sub	r3,r3,r8
 8019f28:	01000804 	movi	r4,32
 8019f2c:	30c6d83a 	srl	r3,r6,r3
 8019f30:	11000726 	beq	r2,r4,8019f50 <__truncdfsf2+0x190>
 8019f34:	423f2884 	addi	r8,r8,-862
 8019f38:	3210983a 	sll	r8,r6,r8
 8019f3c:	41ceb03a 	or	r7,r8,r7
 8019f40:	380ec03a 	cmpne	r7,r7,zero
 8019f44:	38ccb03a 	or	r6,r7,r3
 8019f48:	0007883a 	mov	r3,zero
 8019f4c:	003fb406 	br	8019e20 <__alt_data_end+0xfc019e20>
 8019f50:	0011883a 	mov	r8,zero
 8019f54:	003ff906 	br	8019f3c <__alt_data_end+0xfc019f3c>

08019f58 <__clzsi2>:
 8019f58:	00bfffd4 	movui	r2,65535
 8019f5c:	11000b36 	bltu	r2,r4,8019f8c <__clzsi2+0x34>
 8019f60:	00803fc4 	movi	r2,255
 8019f64:	1100122e 	bgeu	r2,r4,8019fb0 <__clzsi2+0x58>
 8019f68:	00c00204 	movi	r3,8
 8019f6c:	01400604 	movi	r5,24
 8019f70:	20c8d83a 	srl	r4,r4,r3
 8019f74:	008200b4 	movhi	r2,2050
 8019f78:	10b91504 	addi	r2,r2,-7084
 8019f7c:	1109883a 	add	r4,r2,r4
 8019f80:	20800003 	ldbu	r2,0(r4)
 8019f84:	2885c83a 	sub	r2,r5,r2
 8019f88:	f800283a 	ret
 8019f8c:	00804034 	movhi	r2,256
 8019f90:	10bfffc4 	addi	r2,r2,-1
 8019f94:	11000336 	bltu	r2,r4,8019fa4 <__clzsi2+0x4c>
 8019f98:	00c00404 	movi	r3,16
 8019f9c:	180b883a 	mov	r5,r3
 8019fa0:	003ff306 	br	8019f70 <__alt_data_end+0xfc019f70>
 8019fa4:	00c00604 	movi	r3,24
 8019fa8:	01400204 	movi	r5,8
 8019fac:	003ff006 	br	8019f70 <__alt_data_end+0xfc019f70>
 8019fb0:	0007883a 	mov	r3,zero
 8019fb4:	01400804 	movi	r5,32
 8019fb8:	003fed06 	br	8019f70 <__alt_data_end+0xfc019f70>

08019fbc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 8019fbc:	defffe04 	addi	sp,sp,-8
 8019fc0:	dfc00115 	stw	ra,4(sp)
 8019fc4:	df000015 	stw	fp,0(sp)
 8019fc8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 8019fcc:	008200b4 	movhi	r2,2050
 8019fd0:	10809e04 	addi	r2,r2,632
 8019fd4:	10800017 	ldw	r2,0(r2)
 8019fd8:	10000526 	beq	r2,zero,8019ff0 <alt_get_errno+0x34>
 8019fdc:	008200b4 	movhi	r2,2050
 8019fe0:	10809e04 	addi	r2,r2,632
 8019fe4:	10800017 	ldw	r2,0(r2)
 8019fe8:	103ee83a 	callr	r2
 8019fec:	00000206 	br	8019ff8 <alt_get_errno+0x3c>
 8019ff0:	008200b4 	movhi	r2,2050
 8019ff4:	1087e304 	addi	r2,r2,8076
}
 8019ff8:	e037883a 	mov	sp,fp
 8019ffc:	dfc00117 	ldw	ra,4(sp)
 801a000:	df000017 	ldw	fp,0(sp)
 801a004:	dec00204 	addi	sp,sp,8
 801a008:	f800283a 	ret

0801a00c <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
 801a00c:	defffb04 	addi	sp,sp,-20
 801a010:	dfc00415 	stw	ra,16(sp)
 801a014:	df000315 	stw	fp,12(sp)
 801a018:	df000304 	addi	fp,sp,12
 801a01c:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
 801a020:	e0bfff17 	ldw	r2,-4(fp)
 801a024:	10000816 	blt	r2,zero,801a048 <close+0x3c>
 801a028:	e13fff17 	ldw	r4,-4(fp)
 801a02c:	01400304 	movi	r5,12
 801a030:	800334c0 	call	800334c <__mulsi3>
 801a034:	1007883a 	mov	r3,r2
 801a038:	008200b4 	movhi	r2,2050
 801a03c:	10bbb004 	addi	r2,r2,-4416
 801a040:	1885883a 	add	r2,r3,r2
 801a044:	00000106 	br	801a04c <close+0x40>
 801a048:	0005883a 	mov	r2,zero
 801a04c:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
 801a050:	e0bffd17 	ldw	r2,-12(fp)
 801a054:	10001926 	beq	r2,zero,801a0bc <close+0xb0>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
 801a058:	e0bffd17 	ldw	r2,-12(fp)
 801a05c:	10800017 	ldw	r2,0(r2)
 801a060:	10800417 	ldw	r2,16(r2)
 801a064:	10000626 	beq	r2,zero,801a080 <close+0x74>
 801a068:	e0bffd17 	ldw	r2,-12(fp)
 801a06c:	10800017 	ldw	r2,0(r2)
 801a070:	10800417 	ldw	r2,16(r2)
 801a074:	e13ffd17 	ldw	r4,-12(fp)
 801a078:	103ee83a 	callr	r2
 801a07c:	00000106 	br	801a084 <close+0x78>
 801a080:	0005883a 	mov	r2,zero
 801a084:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
 801a088:	e13fff17 	ldw	r4,-4(fp)
 801a08c:	801aca40 	call	801aca4 <alt_release_fd>
    if (rval < 0)
 801a090:	e0bffe17 	ldw	r2,-8(fp)
 801a094:	1000070e 	bge	r2,zero,801a0b4 <close+0xa8>
    {
      ALT_ERRNO = -rval;
 801a098:	8019fbc0 	call	8019fbc <alt_get_errno>
 801a09c:	1007883a 	mov	r3,r2
 801a0a0:	e0bffe17 	ldw	r2,-8(fp)
 801a0a4:	0085c83a 	sub	r2,zero,r2
 801a0a8:	18800015 	stw	r2,0(r3)
      return -1;
 801a0ac:	00bfffc4 	movi	r2,-1
 801a0b0:	00000706 	br	801a0d0 <close+0xc4>
    }
    return 0;
 801a0b4:	0005883a 	mov	r2,zero
 801a0b8:	00000506 	br	801a0d0 <close+0xc4>
  }
  else
  {
    ALT_ERRNO = EBADFD;
 801a0bc:	8019fbc0 	call	8019fbc <alt_get_errno>
 801a0c0:	1007883a 	mov	r3,r2
 801a0c4:	00801444 	movi	r2,81
 801a0c8:	18800015 	stw	r2,0(r3)
    return -1;
 801a0cc:	00bfffc4 	movi	r2,-1
  }
}
 801a0d0:	e037883a 	mov	sp,fp
 801a0d4:	dfc00117 	ldw	ra,4(sp)
 801a0d8:	df000017 	ldw	fp,0(sp)
 801a0dc:	dec00204 	addi	sp,sp,8
 801a0e0:	f800283a 	ret

0801a0e4 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
 801a0e4:	defffc04 	addi	sp,sp,-16
 801a0e8:	df000315 	stw	fp,12(sp)
 801a0ec:	df000304 	addi	fp,sp,12
 801a0f0:	e13ffd15 	stw	r4,-12(fp)
 801a0f4:	e17ffe15 	stw	r5,-8(fp)
 801a0f8:	e1bfff15 	stw	r6,-4(fp)
  return len;
 801a0fc:	e0bfff17 	ldw	r2,-4(fp)
}
 801a100:	e037883a 	mov	sp,fp
 801a104:	df000017 	ldw	fp,0(sp)
 801a108:	dec00104 	addi	sp,sp,4
 801a10c:	f800283a 	ret

0801a110 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 801a110:	defffe04 	addi	sp,sp,-8
 801a114:	dfc00115 	stw	ra,4(sp)
 801a118:	df000015 	stw	fp,0(sp)
 801a11c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 801a120:	008200b4 	movhi	r2,2050
 801a124:	10809e04 	addi	r2,r2,632
 801a128:	10800017 	ldw	r2,0(r2)
 801a12c:	10000526 	beq	r2,zero,801a144 <alt_get_errno+0x34>
 801a130:	008200b4 	movhi	r2,2050
 801a134:	10809e04 	addi	r2,r2,632
 801a138:	10800017 	ldw	r2,0(r2)
 801a13c:	103ee83a 	callr	r2
 801a140:	00000206 	br	801a14c <alt_get_errno+0x3c>
 801a144:	008200b4 	movhi	r2,2050
 801a148:	1087e304 	addi	r2,r2,8076
}
 801a14c:	e037883a 	mov	sp,fp
 801a150:	dfc00117 	ldw	ra,4(sp)
 801a154:	df000017 	ldw	fp,0(sp)
 801a158:	dec00204 	addi	sp,sp,8
 801a15c:	f800283a 	ret

0801a160 <alt_dma_txchan_open>:
 *
 * The return value will be NULL on failure, and non-NULL otherwise. 
 */

alt_dma_txchan alt_dma_txchan_open (const char* name)
{
 801a160:	defffc04 	addi	sp,sp,-16
 801a164:	dfc00315 	stw	ra,12(sp)
 801a168:	df000215 	stw	fp,8(sp)
 801a16c:	df000204 	addi	fp,sp,8
 801a170:	e13fff15 	stw	r4,-4(fp)
  alt_dma_txchan dev;

  dev = (alt_dma_txchan) alt_find_dev (name, &alt_dma_txchan_list);
 801a174:	e13fff17 	ldw	r4,-4(fp)
 801a178:	d1602704 	addi	r5,gp,-32612
 801a17c:	801a1e80 	call	801a1e8 <alt_find_dev>
 801a180:	e0bffe15 	stw	r2,-8(fp)

  if (!dev)
 801a184:	e0bffe17 	ldw	r2,-8(fp)
 801a188:	1000041e 	bne	r2,zero,801a19c <alt_dma_txchan_open+0x3c>
  {
    ALT_ERRNO = ENODEV;
 801a18c:	801a1100 	call	801a110 <alt_get_errno>
 801a190:	1007883a 	mov	r3,r2
 801a194:	008004c4 	movi	r2,19
 801a198:	18800015 	stw	r2,0(r3)
  }

  return dev;
 801a19c:	e0bffe17 	ldw	r2,-8(fp)
}
 801a1a0:	e037883a 	mov	sp,fp
 801a1a4:	dfc00117 	ldw	ra,4(sp)
 801a1a8:	df000017 	ldw	fp,0(sp)
 801a1ac:	dec00204 	addi	sp,sp,8
 801a1b0:	f800283a 	ret

0801a1b4 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
 801a1b4:	defffd04 	addi	sp,sp,-12
 801a1b8:	df000215 	stw	fp,8(sp)
 801a1bc:	df000204 	addi	fp,sp,8
 801a1c0:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
 801a1c4:	0001883a 	nop
 801a1c8:	e0bfff17 	ldw	r2,-4(fp)
 801a1cc:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
 801a1d0:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
 801a1d4:	10000226 	beq	r2,zero,801a1e0 <_exit+0x2c>
    ALT_SIM_FAIL();
 801a1d8:	002af070 	cmpltui	zero,zero,43969
 801a1dc:	00000106 	br	801a1e4 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
 801a1e0:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
 801a1e4:	003fff06 	br	801a1e4 <__alt_data_end+0xfc01a1e4>

0801a1e8 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
 801a1e8:	defffa04 	addi	sp,sp,-24
 801a1ec:	dfc00515 	stw	ra,20(sp)
 801a1f0:	df000415 	stw	fp,16(sp)
 801a1f4:	df000404 	addi	fp,sp,16
 801a1f8:	e13ffe15 	stw	r4,-8(fp)
 801a1fc:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
 801a200:	e0bfff17 	ldw	r2,-4(fp)
 801a204:	10800017 	ldw	r2,0(r2)
 801a208:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
 801a20c:	e13ffe17 	ldw	r4,-8(fp)
 801a210:	80049680 	call	8004968 <strlen>
 801a214:	10800044 	addi	r2,r2,1
 801a218:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 801a21c:	00000d06 	br	801a254 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
 801a220:	e0bffc17 	ldw	r2,-16(fp)
 801a224:	10c00217 	ldw	r3,8(r2)
 801a228:	e0bffd17 	ldw	r2,-12(fp)
 801a22c:	1809883a 	mov	r4,r3
 801a230:	e17ffe17 	ldw	r5,-8(fp)
 801a234:	100d883a 	mov	r6,r2
 801a238:	800e0680 	call	800e068 <memcmp>
 801a23c:	1000021e 	bne	r2,zero,801a248 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
 801a240:	e0bffc17 	ldw	r2,-16(fp)
 801a244:	00000706 	br	801a264 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
 801a248:	e0bffc17 	ldw	r2,-16(fp)
 801a24c:	10800017 	ldw	r2,0(r2)
 801a250:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 801a254:	e0fffc17 	ldw	r3,-16(fp)
 801a258:	e0bfff17 	ldw	r2,-4(fp)
 801a25c:	18bff01e 	bne	r3,r2,801a220 <__alt_data_end+0xfc01a220>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
 801a260:	0005883a 	mov	r2,zero
}
 801a264:	e037883a 	mov	sp,fp
 801a268:	dfc00117 	ldw	ra,4(sp)
 801a26c:	df000017 	ldw	fp,0(sp)
 801a270:	dec00204 	addi	sp,sp,8
 801a274:	f800283a 	ret

0801a278 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 801a278:	defffe04 	addi	sp,sp,-8
 801a27c:	dfc00115 	stw	ra,4(sp)
 801a280:	df000015 	stw	fp,0(sp)
 801a284:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 801a288:	008200b4 	movhi	r2,2050
 801a28c:	10809e04 	addi	r2,r2,632
 801a290:	10800017 	ldw	r2,0(r2)
 801a294:	10000526 	beq	r2,zero,801a2ac <alt_get_errno+0x34>
 801a298:	008200b4 	movhi	r2,2050
 801a29c:	10809e04 	addi	r2,r2,632
 801a2a0:	10800017 	ldw	r2,0(r2)
 801a2a4:	103ee83a 	callr	r2
 801a2a8:	00000206 	br	801a2b4 <alt_get_errno+0x3c>
 801a2ac:	008200b4 	movhi	r2,2050
 801a2b0:	1087e304 	addi	r2,r2,8076
}
 801a2b4:	e037883a 	mov	sp,fp
 801a2b8:	dfc00117 	ldw	ra,4(sp)
 801a2bc:	df000017 	ldw	fp,0(sp)
 801a2c0:	dec00204 	addi	sp,sp,8
 801a2c4:	f800283a 	ret

0801a2c8 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
 801a2c8:	defffb04 	addi	sp,sp,-20
 801a2cc:	dfc00415 	stw	ra,16(sp)
 801a2d0:	df000315 	stw	fp,12(sp)
 801a2d4:	df000304 	addi	fp,sp,12
 801a2d8:	e13ffe15 	stw	r4,-8(fp)
 801a2dc:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 801a2e0:	e0bffe17 	ldw	r2,-8(fp)
 801a2e4:	10000816 	blt	r2,zero,801a308 <fstat+0x40>
 801a2e8:	e13ffe17 	ldw	r4,-8(fp)
 801a2ec:	01400304 	movi	r5,12
 801a2f0:	800334c0 	call	800334c <__mulsi3>
 801a2f4:	1007883a 	mov	r3,r2
 801a2f8:	008200b4 	movhi	r2,2050
 801a2fc:	10bbb004 	addi	r2,r2,-4416
 801a300:	1885883a 	add	r2,r3,r2
 801a304:	00000106 	br	801a30c <fstat+0x44>
 801a308:	0005883a 	mov	r2,zero
 801a30c:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
 801a310:	e0bffd17 	ldw	r2,-12(fp)
 801a314:	10001026 	beq	r2,zero,801a358 <fstat+0x90>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
 801a318:	e0bffd17 	ldw	r2,-12(fp)
 801a31c:	10800017 	ldw	r2,0(r2)
 801a320:	10800817 	ldw	r2,32(r2)
 801a324:	10000726 	beq	r2,zero,801a344 <fstat+0x7c>
    {
      return fd->dev->fstat(fd, st);
 801a328:	e0bffd17 	ldw	r2,-12(fp)
 801a32c:	10800017 	ldw	r2,0(r2)
 801a330:	10800817 	ldw	r2,32(r2)
 801a334:	e13ffd17 	ldw	r4,-12(fp)
 801a338:	e17fff17 	ldw	r5,-4(fp)
 801a33c:	103ee83a 	callr	r2
 801a340:	00000a06 	br	801a36c <fstat+0xa4>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
 801a344:	e0bfff17 	ldw	r2,-4(fp)
 801a348:	00c80004 	movi	r3,8192
 801a34c:	10c00115 	stw	r3,4(r2)
      return 0;
 801a350:	0005883a 	mov	r2,zero
 801a354:	00000506 	br	801a36c <fstat+0xa4>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 801a358:	801a2780 	call	801a278 <alt_get_errno>
 801a35c:	1007883a 	mov	r3,r2
 801a360:	00801444 	movi	r2,81
 801a364:	18800015 	stw	r2,0(r3)
    return -1;
 801a368:	00bfffc4 	movi	r2,-1
  }
}
 801a36c:	e037883a 	mov	sp,fp
 801a370:	dfc00117 	ldw	ra,4(sp)
 801a374:	df000017 	ldw	fp,0(sp)
 801a378:	dec00204 	addi	sp,sp,8
 801a37c:	f800283a 	ret

0801a380 <getpid>:
 *
 * ALT_GETPID is mapped onto the getpid() system call in alt_syscall.h
 */
 
int ALT_GETPID (void)
{
 801a380:	deffff04 	addi	sp,sp,-4
 801a384:	df000015 	stw	fp,0(sp)
 801a388:	d839883a 	mov	fp,sp
  return 0;
 801a38c:	0005883a 	mov	r2,zero
}
 801a390:	e037883a 	mov	sp,fp
 801a394:	df000017 	ldw	fp,0(sp)
 801a398:	dec00104 	addi	sp,sp,4
 801a39c:	f800283a 	ret

0801a3a0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 801a3a0:	defffe04 	addi	sp,sp,-8
 801a3a4:	dfc00115 	stw	ra,4(sp)
 801a3a8:	df000015 	stw	fp,0(sp)
 801a3ac:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 801a3b0:	008200b4 	movhi	r2,2050
 801a3b4:	10809e04 	addi	r2,r2,632
 801a3b8:	10800017 	ldw	r2,0(r2)
 801a3bc:	10000526 	beq	r2,zero,801a3d4 <alt_get_errno+0x34>
 801a3c0:	008200b4 	movhi	r2,2050
 801a3c4:	10809e04 	addi	r2,r2,632
 801a3c8:	10800017 	ldw	r2,0(r2)
 801a3cc:	103ee83a 	callr	r2
 801a3d0:	00000206 	br	801a3dc <alt_get_errno+0x3c>
 801a3d4:	008200b4 	movhi	r2,2050
 801a3d8:	1087e304 	addi	r2,r2,8076
}
 801a3dc:	e037883a 	mov	sp,fp
 801a3e0:	dfc00117 	ldw	ra,4(sp)
 801a3e4:	df000017 	ldw	fp,0(sp)
 801a3e8:	dec00204 	addi	sp,sp,8
 801a3ec:	f800283a 	ret

0801a3f0 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
 801a3f0:	deffed04 	addi	sp,sp,-76
 801a3f4:	dfc01215 	stw	ra,72(sp)
 801a3f8:	df001115 	stw	fp,68(sp)
 801a3fc:	df001104 	addi	fp,sp,68
 801a400:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 801a404:	e0bfff17 	ldw	r2,-4(fp)
 801a408:	10000816 	blt	r2,zero,801a42c <isatty+0x3c>
 801a40c:	e13fff17 	ldw	r4,-4(fp)
 801a410:	01400304 	movi	r5,12
 801a414:	800334c0 	call	800334c <__mulsi3>
 801a418:	1007883a 	mov	r3,r2
 801a41c:	008200b4 	movhi	r2,2050
 801a420:	10bbb004 	addi	r2,r2,-4416
 801a424:	1885883a 	add	r2,r3,r2
 801a428:	00000106 	br	801a430 <isatty+0x40>
 801a42c:	0005883a 	mov	r2,zero
 801a430:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
 801a434:	e0bfef17 	ldw	r2,-68(fp)
 801a438:	10000e26 	beq	r2,zero,801a474 <isatty+0x84>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
 801a43c:	e0bfef17 	ldw	r2,-68(fp)
 801a440:	10800017 	ldw	r2,0(r2)
 801a444:	10800817 	ldw	r2,32(r2)
 801a448:	1000021e 	bne	r2,zero,801a454 <isatty+0x64>
    {
      return 1;
 801a44c:	00800044 	movi	r2,1
 801a450:	00000d06 	br	801a488 <isatty+0x98>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
 801a454:	e0bff004 	addi	r2,fp,-64
 801a458:	e13fff17 	ldw	r4,-4(fp)
 801a45c:	100b883a 	mov	r5,r2
 801a460:	801a2c80 	call	801a2c8 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
 801a464:	e0bff117 	ldw	r2,-60(fp)
 801a468:	10880020 	cmpeqi	r2,r2,8192
 801a46c:	10803fcc 	andi	r2,r2,255
 801a470:	00000506 	br	801a488 <isatty+0x98>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 801a474:	801a3a00 	call	801a3a0 <alt_get_errno>
 801a478:	1007883a 	mov	r3,r2
 801a47c:	00801444 	movi	r2,81
 801a480:	18800015 	stw	r2,0(r3)
    return 0;
 801a484:	0005883a 	mov	r2,zero
  }
}
 801a488:	e037883a 	mov	sp,fp
 801a48c:	dfc00117 	ldw	ra,4(sp)
 801a490:	df000017 	ldw	fp,0(sp)
 801a494:	dec00204 	addi	sp,sp,8
 801a498:	f800283a 	ret

0801a49c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 801a49c:	defffe04 	addi	sp,sp,-8
 801a4a0:	dfc00115 	stw	ra,4(sp)
 801a4a4:	df000015 	stw	fp,0(sp)
 801a4a8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 801a4ac:	008200b4 	movhi	r2,2050
 801a4b0:	10809e04 	addi	r2,r2,632
 801a4b4:	10800017 	ldw	r2,0(r2)
 801a4b8:	10000526 	beq	r2,zero,801a4d0 <alt_get_errno+0x34>
 801a4bc:	008200b4 	movhi	r2,2050
 801a4c0:	10809e04 	addi	r2,r2,632
 801a4c4:	10800017 	ldw	r2,0(r2)
 801a4c8:	103ee83a 	callr	r2
 801a4cc:	00000206 	br	801a4d8 <alt_get_errno+0x3c>
 801a4d0:	008200b4 	movhi	r2,2050
 801a4d4:	1087e304 	addi	r2,r2,8076
}
 801a4d8:	e037883a 	mov	sp,fp
 801a4dc:	dfc00117 	ldw	ra,4(sp)
 801a4e0:	df000017 	ldw	fp,0(sp)
 801a4e4:	dec00204 	addi	sp,sp,8
 801a4e8:	f800283a 	ret

0801a4ec <kill>:
 *
 * ALT_KILL is mapped onto the kill() system call in alt_syscall.h
 */

int ALT_KILL (int pid, int sig)
{
 801a4ec:	defffb04 	addi	sp,sp,-20
 801a4f0:	dfc00415 	stw	ra,16(sp)
 801a4f4:	df000315 	stw	fp,12(sp)
 801a4f8:	df000304 	addi	fp,sp,12
 801a4fc:	e13ffe15 	stw	r4,-8(fp)
 801a500:	e17fff15 	stw	r5,-4(fp)
  int status = 0;
 801a504:	e03ffd15 	stw	zero,-12(fp)

  if (pid <= 0)
 801a508:	e0bffe17 	ldw	r2,-8(fp)
 801a50c:	00803116 	blt	zero,r2,801a5d4 <kill+0xe8>
  {
    switch (sig)
 801a510:	e0bfff17 	ldw	r2,-4(fp)
 801a514:	10800828 	cmpgeui	r2,r2,32
 801a518:	1000291e 	bne	r2,zero,801a5c0 <kill+0xd4>
 801a51c:	e0bfff17 	ldw	r2,-4(fp)
 801a520:	100690ba 	slli	r3,r2,2
 801a524:	008200b4 	movhi	r2,2050
 801a528:	10a94e04 	addi	r2,r2,-23240
 801a52c:	1885883a 	add	r2,r3,r2
 801a530:	10800017 	ldw	r2,0(r2)
 801a534:	1000683a 	jmp	r2
 801a538:	0801a5cc 	andi	zero,at,1687
 801a53c:	0801a5c0 	call	801a5c <__alt_mem_sdram_controller-0x77fe5a4>
 801a540:	0801a5c0 	call	801a5c <__alt_mem_sdram_controller-0x77fe5a4>
 801a544:	0801a5b8 	rdprs	zero,at,1686
 801a548:	0801a5b8 	rdprs	zero,at,1686
 801a54c:	0801a5b8 	rdprs	zero,at,1686
 801a550:	0801a5b8 	rdprs	zero,at,1686
 801a554:	0801a5c0 	call	801a5c <__alt_mem_sdram_controller-0x77fe5a4>
 801a558:	0801a5b8 	rdprs	zero,at,1686
 801a55c:	0801a5b8 	rdprs	zero,at,1686
 801a560:	0801a5b8 	rdprs	zero,at,1686
 801a564:	0801a5b8 	rdprs	zero,at,1686
 801a568:	0801a5b8 	rdprs	zero,at,1686
 801a56c:	0801a5b8 	rdprs	zero,at,1686
 801a570:	0801a5b8 	rdprs	zero,at,1686
 801a574:	0801a5b8 	rdprs	zero,at,1686
 801a578:	0801a5cc 	andi	zero,at,1687
 801a57c:	0801a5c0 	call	801a5c <__alt_mem_sdram_controller-0x77fe5a4>
 801a580:	0801a5c0 	call	801a5c <__alt_mem_sdram_controller-0x77fe5a4>
 801a584:	0801a5c0 	call	801a5c <__alt_mem_sdram_controller-0x77fe5a4>
 801a588:	0801a5cc 	andi	zero,at,1687
 801a58c:	0801a5c0 	call	801a5c <__alt_mem_sdram_controller-0x77fe5a4>
 801a590:	0801a5c0 	call	801a5c <__alt_mem_sdram_controller-0x77fe5a4>
 801a594:	0801a5b8 	rdprs	zero,at,1686
 801a598:	0801a5b8 	rdprs	zero,at,1686
 801a59c:	0801a5b8 	rdprs	zero,at,1686
 801a5a0:	0801a5b8 	rdprs	zero,at,1686
 801a5a4:	0801a5b8 	rdprs	zero,at,1686
 801a5a8:	0801a5c0 	call	801a5c <__alt_mem_sdram_controller-0x77fe5a4>
 801a5ac:	0801a5c0 	call	801a5c <__alt_mem_sdram_controller-0x77fe5a4>
 801a5b0:	0801a5b8 	rdprs	zero,at,1686
 801a5b4:	0801a5b8 	rdprs	zero,at,1686
       * The Posix standard defines the default behaviour for all these signals 
       * as being eqivalent to a call to _exit(). No mechanism is provided to 
       * change this behaviour.
       */

      _exit(0);
 801a5b8:	0009883a 	mov	r4,zero
 801a5bc:	801a1b40 	call	801a1b4 <_exit>
      break;
    default:

      /* Tried to send an unsupported signal */

      status = EINVAL;
 801a5c0:	00800584 	movi	r2,22
 801a5c4:	e0bffd15 	stw	r2,-12(fp)
 801a5c8:	00000606 	br	801a5e4 <kill+0xf8>
    {
    case 0:

      /* The null signal is used to check that a pid is valid. */

      break;
 801a5cc:	0001883a 	nop
 801a5d0:	00000406 	br	801a5e4 <kill+0xf8>

      status = EINVAL;
    }
  }

  else if (pid > 0)
 801a5d4:	e0bffe17 	ldw	r2,-8(fp)
 801a5d8:	0080020e 	bge	zero,r2,801a5e4 <kill+0xf8>
  {
    /* Attempted to signal a non-existant process */

    status = ESRCH;
 801a5dc:	008000c4 	movi	r2,3
 801a5e0:	e0bffd15 	stw	r2,-12(fp)
  }

  if (status)
 801a5e4:	e0bffd17 	ldw	r2,-12(fp)
 801a5e8:	10000626 	beq	r2,zero,801a604 <kill+0x118>
  {
    ALT_ERRNO = status;
 801a5ec:	801a49c0 	call	801a49c <alt_get_errno>
 801a5f0:	1007883a 	mov	r3,r2
 801a5f4:	e0bffd17 	ldw	r2,-12(fp)
 801a5f8:	18800015 	stw	r2,0(r3)
    return -1;
 801a5fc:	00bfffc4 	movi	r2,-1
 801a600:	00000106 	br	801a608 <kill+0x11c>
  }

  return 0;
 801a604:	0005883a 	mov	r2,zero
}
 801a608:	e037883a 	mov	sp,fp
 801a60c:	dfc00117 	ldw	ra,4(sp)
 801a610:	df000017 	ldw	fp,0(sp)
 801a614:	dec00204 	addi	sp,sp,8
 801a618:	f800283a 	ret

0801a61c <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
 801a61c:	defffc04 	addi	sp,sp,-16
 801a620:	df000315 	stw	fp,12(sp)
 801a624:	df000304 	addi	fp,sp,12
 801a628:	e13ffd15 	stw	r4,-12(fp)
 801a62c:	e17ffe15 	stw	r5,-8(fp)
 801a630:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
 801a634:	e0fffe17 	ldw	r3,-8(fp)
 801a638:	e0bffd17 	ldw	r2,-12(fp)
 801a63c:	18800c26 	beq	r3,r2,801a670 <alt_load_section+0x54>
  {
    while( to != end )
 801a640:	00000806 	br	801a664 <alt_load_section+0x48>
    {
      *to++ = *from++;
 801a644:	e0bffe17 	ldw	r2,-8(fp)
 801a648:	10c00104 	addi	r3,r2,4
 801a64c:	e0fffe15 	stw	r3,-8(fp)
 801a650:	e0fffd17 	ldw	r3,-12(fp)
 801a654:	19000104 	addi	r4,r3,4
 801a658:	e13ffd15 	stw	r4,-12(fp)
 801a65c:	18c00017 	ldw	r3,0(r3)
 801a660:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
 801a664:	e0fffe17 	ldw	r3,-8(fp)
 801a668:	e0bfff17 	ldw	r2,-4(fp)
 801a66c:	18bff51e 	bne	r3,r2,801a644 <__alt_data_end+0xfc01a644>
    {
      *to++ = *from++;
    }
  }
}
 801a670:	e037883a 	mov	sp,fp
 801a674:	df000017 	ldw	fp,0(sp)
 801a678:	dec00104 	addi	sp,sp,4
 801a67c:	f800283a 	ret

0801a680 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
 801a680:	defffe04 	addi	sp,sp,-8
 801a684:	dfc00115 	stw	ra,4(sp)
 801a688:	df000015 	stw	fp,0(sp)
 801a68c:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
 801a690:	010200b4 	movhi	r4,2050
 801a694:	2100a504 	addi	r4,r4,660
 801a698:	014200b4 	movhi	r5,2050
 801a69c:	29797304 	addi	r5,r5,-6708
 801a6a0:	018200b4 	movhi	r6,2050
 801a6a4:	3180a504 	addi	r6,r6,660
 801a6a8:	801a61c0 	call	801a61c <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
 801a6ac:	01020034 	movhi	r4,2048
 801a6b0:	21000804 	addi	r4,r4,32
 801a6b4:	01420034 	movhi	r5,2048
 801a6b8:	29400804 	addi	r5,r5,32
 801a6bc:	01820034 	movhi	r6,2048
 801a6c0:	31808c04 	addi	r6,r6,560
 801a6c4:	801a61c0 	call	801a61c <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
 801a6c8:	010200b4 	movhi	r4,2050
 801a6cc:	21362f04 	addi	r4,r4,-10052
 801a6d0:	014200b4 	movhi	r5,2050
 801a6d4:	29762f04 	addi	r5,r5,-10052
 801a6d8:	018200b4 	movhi	r6,2050
 801a6dc:	31b97304 	addi	r6,r6,-6708
 801a6e0:	801a61c0 	call	801a61c <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
 801a6e4:	801cad80 	call	801cad8 <alt_dcache_flush_all>
  alt_icache_flush_all();
 801a6e8:	801cd440 	call	801cd44 <alt_icache_flush_all>
}
 801a6ec:	e037883a 	mov	sp,fp
 801a6f0:	dfc00117 	ldw	ra,4(sp)
 801a6f4:	df000017 	ldw	fp,0(sp)
 801a6f8:	dec00204 	addi	sp,sp,8
 801a6fc:	f800283a 	ret

0801a700 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 801a700:	defffe04 	addi	sp,sp,-8
 801a704:	dfc00115 	stw	ra,4(sp)
 801a708:	df000015 	stw	fp,0(sp)
 801a70c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 801a710:	008200b4 	movhi	r2,2050
 801a714:	10809e04 	addi	r2,r2,632
 801a718:	10800017 	ldw	r2,0(r2)
 801a71c:	10000526 	beq	r2,zero,801a734 <alt_get_errno+0x34>
 801a720:	008200b4 	movhi	r2,2050
 801a724:	10809e04 	addi	r2,r2,632
 801a728:	10800017 	ldw	r2,0(r2)
 801a72c:	103ee83a 	callr	r2
 801a730:	00000206 	br	801a73c <alt_get_errno+0x3c>
 801a734:	008200b4 	movhi	r2,2050
 801a738:	1087e304 	addi	r2,r2,8076
}
 801a73c:	e037883a 	mov	sp,fp
 801a740:	dfc00117 	ldw	ra,4(sp)
 801a744:	df000017 	ldw	fp,0(sp)
 801a748:	dec00204 	addi	sp,sp,8
 801a74c:	f800283a 	ret

0801a750 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
 801a750:	defff904 	addi	sp,sp,-28
 801a754:	dfc00615 	stw	ra,24(sp)
 801a758:	df000515 	stw	fp,20(sp)
 801a75c:	df000504 	addi	fp,sp,20
 801a760:	e13ffd15 	stw	r4,-12(fp)
 801a764:	e17ffe15 	stw	r5,-8(fp)
 801a768:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
 801a76c:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 801a770:	e0bffd17 	ldw	r2,-12(fp)
 801a774:	10000816 	blt	r2,zero,801a798 <lseek+0x48>
 801a778:	e13ffd17 	ldw	r4,-12(fp)
 801a77c:	01400304 	movi	r5,12
 801a780:	800334c0 	call	800334c <__mulsi3>
 801a784:	1007883a 	mov	r3,r2
 801a788:	008200b4 	movhi	r2,2050
 801a78c:	10bbb004 	addi	r2,r2,-4416
 801a790:	1885883a 	add	r2,r3,r2
 801a794:	00000106 	br	801a79c <lseek+0x4c>
 801a798:	0005883a 	mov	r2,zero
 801a79c:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
 801a7a0:	e0bffc17 	ldw	r2,-16(fp)
 801a7a4:	10001026 	beq	r2,zero,801a7e8 <lseek+0x98>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
 801a7a8:	e0bffc17 	ldw	r2,-16(fp)
 801a7ac:	10800017 	ldw	r2,0(r2)
 801a7b0:	10800717 	ldw	r2,28(r2)
 801a7b4:	10000926 	beq	r2,zero,801a7dc <lseek+0x8c>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
 801a7b8:	e0bffc17 	ldw	r2,-16(fp)
 801a7bc:	10800017 	ldw	r2,0(r2)
 801a7c0:	10800717 	ldw	r2,28(r2)
 801a7c4:	e13ffc17 	ldw	r4,-16(fp)
 801a7c8:	e17ffe17 	ldw	r5,-8(fp)
 801a7cc:	e1bfff17 	ldw	r6,-4(fp)
 801a7d0:	103ee83a 	callr	r2
 801a7d4:	e0bffb15 	stw	r2,-20(fp)
 801a7d8:	00000506 	br	801a7f0 <lseek+0xa0>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
 801a7dc:	00bfde84 	movi	r2,-134
 801a7e0:	e0bffb15 	stw	r2,-20(fp)
 801a7e4:	00000206 	br	801a7f0 <lseek+0xa0>
    }
  }
  else  
  {
    rc = -EBADFD;
 801a7e8:	00bfebc4 	movi	r2,-81
 801a7ec:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
 801a7f0:	e0bffb17 	ldw	r2,-20(fp)
 801a7f4:	1000070e 	bge	r2,zero,801a814 <lseek+0xc4>
  {
    ALT_ERRNO = -rc;
 801a7f8:	801a7000 	call	801a700 <alt_get_errno>
 801a7fc:	1007883a 	mov	r3,r2
 801a800:	e0bffb17 	ldw	r2,-20(fp)
 801a804:	0085c83a 	sub	r2,zero,r2
 801a808:	18800015 	stw	r2,0(r3)
    rc = -1;
 801a80c:	00bfffc4 	movi	r2,-1
 801a810:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
 801a814:	e0bffb17 	ldw	r2,-20(fp)
}
 801a818:	e037883a 	mov	sp,fp
 801a81c:	dfc00117 	ldw	ra,4(sp)
 801a820:	df000017 	ldw	fp,0(sp)
 801a824:	dec00204 	addi	sp,sp,8
 801a828:	f800283a 	ret

0801a82c <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
 801a82c:	defffd04 	addi	sp,sp,-12
 801a830:	dfc00215 	stw	ra,8(sp)
 801a834:	df000115 	stw	fp,4(sp)
 801a838:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
 801a83c:	0009883a 	mov	r4,zero
 801a840:	801af5c0 	call	801af5c <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
 801a844:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
 801a848:	801af900 	call	801af90 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
 801a84c:	010200b4 	movhi	r4,2050
 801a850:	21395804 	addi	r4,r4,-6816
 801a854:	014200b4 	movhi	r5,2050
 801a858:	29795804 	addi	r5,r5,-6816
 801a85c:	018200b4 	movhi	r6,2050
 801a860:	31b95804 	addi	r6,r6,-6816
 801a864:	801ce400 	call	801ce40 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
 801a868:	801cc8c0 	call	801cc8c <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
 801a86c:	010200b4 	movhi	r4,2050
 801a870:	21333a04 	addi	r4,r4,-13080
 801a874:	801d74c0 	call	801d74c <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
 801a878:	d1277217 	ldw	r4,-25144(gp)
 801a87c:	d0e77317 	ldw	r3,-25140(gp)
 801a880:	d0a77417 	ldw	r2,-25136(gp)
 801a884:	180b883a 	mov	r5,r3
 801a888:	100d883a 	mov	r6,r2
 801a88c:	8000efc0 	call	8000efc <main>
 801a890:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
 801a894:	01000044 	movi	r4,1
 801a898:	801a00c0 	call	801a00c <close>
  exit (result);
 801a89c:	e13fff17 	ldw	r4,-4(fp)
 801a8a0:	80038ac0 	call	80038ac <exit>

0801a8a4 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
 801a8a4:	defffe04 	addi	sp,sp,-8
 801a8a8:	df000115 	stw	fp,4(sp)
 801a8ac:	df000104 	addi	fp,sp,4
 801a8b0:	e13fff15 	stw	r4,-4(fp)
}
 801a8b4:	e037883a 	mov	sp,fp
 801a8b8:	df000017 	ldw	fp,0(sp)
 801a8bc:	dec00104 	addi	sp,sp,4
 801a8c0:	f800283a 	ret

0801a8c4 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
 801a8c4:	defffe04 	addi	sp,sp,-8
 801a8c8:	df000115 	stw	fp,4(sp)
 801a8cc:	df000104 	addi	fp,sp,4
 801a8d0:	e13fff15 	stw	r4,-4(fp)
}
 801a8d4:	e037883a 	mov	sp,fp
 801a8d8:	df000017 	ldw	fp,0(sp)
 801a8dc:	dec00104 	addi	sp,sp,4
 801a8e0:	f800283a 	ret

0801a8e4 <alt_printf>:
/* 
 * ALT printf function 
 */
void 
alt_printf(const char* fmt, ... )
{
 801a8e4:	defff204 	addi	sp,sp,-56
 801a8e8:	dfc00a15 	stw	ra,40(sp)
 801a8ec:	df000915 	stw	fp,36(sp)
 801a8f0:	df000904 	addi	fp,sp,36
 801a8f4:	e1400215 	stw	r5,8(fp)
 801a8f8:	e1800315 	stw	r6,12(fp)
 801a8fc:	e1c00415 	stw	r7,16(fp)
 801a900:	e13fff15 	stw	r4,-4(fp)
	va_list args;
	va_start(args, fmt);
 801a904:	e0800204 	addi	r2,fp,8
 801a908:	e0bffe15 	stw	r2,-8(fp)
    const char *w;
    char c;

    /* Process format string. */
    w = fmt;
 801a90c:	e0bfff17 	ldw	r2,-4(fp)
 801a910:	e0bff715 	stw	r2,-36(fp)
    while ((c = *w++) != 0)
 801a914:	00007106 	br	801aadc <alt_printf+0x1f8>
    {
        /* If not a format escape character, just print  */
        /* character.  Otherwise, process format string. */
        if (c != '%')
 801a918:	e0bff807 	ldb	r2,-32(fp)
 801a91c:	10800960 	cmpeqi	r2,r2,37
 801a920:	1000041e 	bne	r2,zero,801a934 <alt_printf+0x50>
        {
            alt_putchar(c);
 801a924:	e0bff807 	ldb	r2,-32(fp)
 801a928:	1009883a 	mov	r4,r2
 801a92c:	801ab0c0 	call	801ab0c <alt_putchar>
 801a930:	00006a06 	br	801aadc <alt_printf+0x1f8>
        }
        else
        {
            /* Get format character.  If none     */
            /* available, processing is complete. */
            if ((c = *w++) != 0)
 801a934:	e0bff717 	ldw	r2,-36(fp)
 801a938:	10c00044 	addi	r3,r2,1
 801a93c:	e0fff715 	stw	r3,-36(fp)
 801a940:	10800003 	ldbu	r2,0(r2)
 801a944:	e0bff805 	stb	r2,-32(fp)
 801a948:	e0bff807 	ldb	r2,-32(fp)
 801a94c:	10006226 	beq	r2,zero,801aad8 <alt_printf+0x1f4>
            {
                if (c == '%')
 801a950:	e0bff807 	ldb	r2,-32(fp)
 801a954:	10800958 	cmpnei	r2,r2,37
 801a958:	1000041e 	bne	r2,zero,801a96c <alt_printf+0x88>
                {
                    /* Process "%" escape sequence. */
                    alt_putchar(c);
 801a95c:	e0bff807 	ldb	r2,-32(fp)
 801a960:	1009883a 	mov	r4,r2
 801a964:	801ab0c0 	call	801ab0c <alt_putchar>
 801a968:	00005c06 	br	801aadc <alt_printf+0x1f8>
                } 
                else if (c == 'c')
 801a96c:	e0bff807 	ldb	r2,-32(fp)
 801a970:	108018d8 	cmpnei	r2,r2,99
 801a974:	1000081e 	bne	r2,zero,801a998 <alt_printf+0xb4>
                {
                    int v = va_arg(args, int);
 801a978:	e0bffe17 	ldw	r2,-8(fp)
 801a97c:	10c00104 	addi	r3,r2,4
 801a980:	e0fffe15 	stw	r3,-8(fp)
 801a984:	10800017 	ldw	r2,0(r2)
 801a988:	e0bffd15 	stw	r2,-12(fp)
                    alt_putchar(v);
 801a98c:	e13ffd17 	ldw	r4,-12(fp)
 801a990:	801ab0c0 	call	801ab0c <alt_putchar>
 801a994:	00005106 	br	801aadc <alt_printf+0x1f8>
                }
                else if (c == 'x')
 801a998:	e0bff807 	ldb	r2,-32(fp)
 801a99c:	10801e18 	cmpnei	r2,r2,120
 801a9a0:	1000341e 	bne	r2,zero,801aa74 <alt_printf+0x190>
                {
                    /* Process hexadecimal number format. */
                    unsigned long v = va_arg(args, unsigned long);
 801a9a4:	e0bffe17 	ldw	r2,-8(fp)
 801a9a8:	10c00104 	addi	r3,r2,4
 801a9ac:	e0fffe15 	stw	r3,-8(fp)
 801a9b0:	10800017 	ldw	r2,0(r2)
 801a9b4:	e0bffb15 	stw	r2,-20(fp)
                    unsigned long digit;
                    int digit_shift;

                    /* If the number value is zero, just print and continue. */
                    if (v == 0)
 801a9b8:	e0bffb17 	ldw	r2,-20(fp)
 801a9bc:	1000031e 	bne	r2,zero,801a9cc <alt_printf+0xe8>
                    {
                        alt_putchar('0');
 801a9c0:	01000c04 	movi	r4,48
 801a9c4:	801ab0c0 	call	801ab0c <alt_putchar>
                        continue;
 801a9c8:	00004406 	br	801aadc <alt_printf+0x1f8>
                    }

                    /* Find first non-zero digit. */
                    digit_shift = 28;
 801a9cc:	00800704 	movi	r2,28
 801a9d0:	e0bff915 	stw	r2,-28(fp)
                    while (!(v & (0xF << digit_shift)))
 801a9d4:	00000306 	br	801a9e4 <alt_printf+0x100>
                        digit_shift -= 4;
 801a9d8:	e0bff917 	ldw	r2,-28(fp)
 801a9dc:	10bfff04 	addi	r2,r2,-4
 801a9e0:	e0bff915 	stw	r2,-28(fp)
                        continue;
                    }

                    /* Find first non-zero digit. */
                    digit_shift = 28;
                    while (!(v & (0xF << digit_shift)))
 801a9e4:	00c003c4 	movi	r3,15
 801a9e8:	e0bff917 	ldw	r2,-28(fp)
 801a9ec:	1884983a 	sll	r2,r3,r2
 801a9f0:	1007883a 	mov	r3,r2
 801a9f4:	e0bffb17 	ldw	r2,-20(fp)
 801a9f8:	1884703a 	and	r2,r3,r2
 801a9fc:	103ff626 	beq	r2,zero,801a9d8 <__alt_data_end+0xfc01a9d8>
                        digit_shift -= 4;

                    /* Print digits. */
                    for (; digit_shift >= 0; digit_shift -= 4)
 801aa00:	00001906 	br	801aa68 <alt_printf+0x184>
                    {
                        digit = (v & (0xF << digit_shift)) >> digit_shift;
 801aa04:	00c003c4 	movi	r3,15
 801aa08:	e0bff917 	ldw	r2,-28(fp)
 801aa0c:	1884983a 	sll	r2,r3,r2
 801aa10:	1007883a 	mov	r3,r2
 801aa14:	e0bffb17 	ldw	r2,-20(fp)
 801aa18:	1886703a 	and	r3,r3,r2
 801aa1c:	e0bff917 	ldw	r2,-28(fp)
 801aa20:	1884d83a 	srl	r2,r3,r2
 801aa24:	e0bffc15 	stw	r2,-16(fp)
                        if (digit <= 9)
 801aa28:	e0bffc17 	ldw	r2,-16(fp)
 801aa2c:	108002a8 	cmpgeui	r2,r2,10
 801aa30:	1000041e 	bne	r2,zero,801aa44 <alt_printf+0x160>
                            c = '0' + digit;
 801aa34:	e0bffc17 	ldw	r2,-16(fp)
 801aa38:	10800c04 	addi	r2,r2,48
 801aa3c:	e0bff805 	stb	r2,-32(fp)
 801aa40:	00000306 	br	801aa50 <alt_printf+0x16c>
                        else
                            c = 'a' + digit - 10;
 801aa44:	e0bffc17 	ldw	r2,-16(fp)
 801aa48:	108015c4 	addi	r2,r2,87
 801aa4c:	e0bff805 	stb	r2,-32(fp)
                        alt_putchar(c);
 801aa50:	e0bff807 	ldb	r2,-32(fp)
 801aa54:	1009883a 	mov	r4,r2
 801aa58:	801ab0c0 	call	801ab0c <alt_putchar>
                    digit_shift = 28;
                    while (!(v & (0xF << digit_shift)))
                        digit_shift -= 4;

                    /* Print digits. */
                    for (; digit_shift >= 0; digit_shift -= 4)
 801aa5c:	e0bff917 	ldw	r2,-28(fp)
 801aa60:	10bfff04 	addi	r2,r2,-4
 801aa64:	e0bff915 	stw	r2,-28(fp)
 801aa68:	e0bff917 	ldw	r2,-28(fp)
 801aa6c:	103fe50e 	bge	r2,zero,801aa04 <__alt_data_end+0xfc01aa04>
 801aa70:	00001a06 	br	801aadc <alt_printf+0x1f8>
                        else
                            c = 'a' + digit - 10;
                        alt_putchar(c);
                    }
                }
                else if (c == 's')
 801aa74:	e0bff807 	ldb	r2,-32(fp)
 801aa78:	10801cd8 	cmpnei	r2,r2,115
 801aa7c:	1000151e 	bne	r2,zero,801aad4 <alt_printf+0x1f0>
                {
                    /* Process string format. */
                    char *s = va_arg(args, char *);
 801aa80:	e0bffe17 	ldw	r2,-8(fp)
 801aa84:	10c00104 	addi	r3,r2,4
 801aa88:	e0fffe15 	stw	r3,-8(fp)
 801aa8c:	10800017 	ldw	r2,0(r2)
 801aa90:	e0bffa15 	stw	r2,-24(fp)

                    while(*s)
 801aa94:	00000906 	br	801aabc <alt_printf+0x1d8>
                      alt_putchar(*s++);
 801aa98:	e0bffa17 	ldw	r2,-24(fp)
 801aa9c:	10c00044 	addi	r3,r2,1
 801aaa0:	e0fffa15 	stw	r3,-24(fp)
 801aaa4:	10800003 	ldbu	r2,0(r2)
 801aaa8:	10803fcc 	andi	r2,r2,255
 801aaac:	1080201c 	xori	r2,r2,128
 801aab0:	10bfe004 	addi	r2,r2,-128
 801aab4:	1009883a 	mov	r4,r2
 801aab8:	801ab0c0 	call	801ab0c <alt_putchar>
                else if (c == 's')
                {
                    /* Process string format. */
                    char *s = va_arg(args, char *);

                    while(*s)
 801aabc:	e0bffa17 	ldw	r2,-24(fp)
 801aac0:	10800003 	ldbu	r2,0(r2)
 801aac4:	10803fcc 	andi	r2,r2,255
 801aac8:	1080201c 	xori	r2,r2,128
 801aacc:	10bfe004 	addi	r2,r2,-128
 801aad0:	103ff11e 	bne	r2,zero,801aa98 <__alt_data_end+0xfc01aa98>
 801aad4:	00000106 	br	801aadc <alt_printf+0x1f8>
                      alt_putchar(*s++);
                }
            }
            else
            {
                break;
 801aad8:	00000706 	br	801aaf8 <alt_printf+0x214>
    const char *w;
    char c;

    /* Process format string. */
    w = fmt;
    while ((c = *w++) != 0)
 801aadc:	e0bff717 	ldw	r2,-36(fp)
 801aae0:	10c00044 	addi	r3,r2,1
 801aae4:	e0fff715 	stw	r3,-36(fp)
 801aae8:	10800003 	ldbu	r2,0(r2)
 801aaec:	e0bff805 	stb	r2,-32(fp)
 801aaf0:	e0bff807 	ldb	r2,-32(fp)
 801aaf4:	103f881e 	bne	r2,zero,801a918 <__alt_data_end+0xfc01a918>
            {
                break;
            }
        }
    }
}
 801aaf8:	e037883a 	mov	sp,fp
 801aafc:	dfc00117 	ldw	ra,4(sp)
 801ab00:	df000017 	ldw	fp,0(sp)
 801ab04:	dec00504 	addi	sp,sp,20
 801ab08:	f800283a 	ret

0801ab0c <alt_putchar>:
 * Uses the ALT_DRIVER_WRITE() macro to call directly to driver if available.
 * Otherwise, uses newlib provided putchar() routine.
 */
int 
alt_putchar(int c)
{
 801ab0c:	defffd04 	addi	sp,sp,-12
 801ab10:	dfc00215 	stw	ra,8(sp)
 801ab14:	df000115 	stw	fp,4(sp)
 801ab18:	df000104 	addi	fp,sp,4
 801ab1c:	e13fff15 	stw	r4,-4(fp)
    if (ALT_DRIVER_WRITE(ALT_STDOUT_DEV, &c1, 1, 0) == -1) {
        return -1;
    }
    return c;
#else
    return putchar(c);
 801ab20:	008200b4 	movhi	r2,2050
 801ab24:	10809004 	addi	r2,r2,576
 801ab28:	10800017 	ldw	r2,0(r2)
 801ab2c:	10800217 	ldw	r2,8(r2)
 801ab30:	e13fff17 	ldw	r4,-4(fp)
 801ab34:	100b883a 	mov	r5,r2
 801ab38:	800f4600 	call	800f460 <putc>
#endif
}
 801ab3c:	e037883a 	mov	sp,fp
 801ab40:	dfc00117 	ldw	ra,4(sp)
 801ab44:	df000017 	ldw	fp,0(sp)
 801ab48:	dec00204 	addi	sp,sp,8
 801ab4c:	f800283a 	ret

0801ab50 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 801ab50:	defffe04 	addi	sp,sp,-8
 801ab54:	dfc00115 	stw	ra,4(sp)
 801ab58:	df000015 	stw	fp,0(sp)
 801ab5c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 801ab60:	008200b4 	movhi	r2,2050
 801ab64:	10809e04 	addi	r2,r2,632
 801ab68:	10800017 	ldw	r2,0(r2)
 801ab6c:	10000526 	beq	r2,zero,801ab84 <alt_get_errno+0x34>
 801ab70:	008200b4 	movhi	r2,2050
 801ab74:	10809e04 	addi	r2,r2,632
 801ab78:	10800017 	ldw	r2,0(r2)
 801ab7c:	103ee83a 	callr	r2
 801ab80:	00000206 	br	801ab8c <alt_get_errno+0x3c>
 801ab84:	008200b4 	movhi	r2,2050
 801ab88:	1087e304 	addi	r2,r2,8076
}
 801ab8c:	e037883a 	mov	sp,fp
 801ab90:	dfc00117 	ldw	ra,4(sp)
 801ab94:	df000017 	ldw	fp,0(sp)
 801ab98:	dec00204 	addi	sp,sp,8
 801ab9c:	f800283a 	ret

0801aba0 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
 801aba0:	defff904 	addi	sp,sp,-28
 801aba4:	dfc00615 	stw	ra,24(sp)
 801aba8:	df000515 	stw	fp,20(sp)
 801abac:	df000504 	addi	fp,sp,20
 801abb0:	e13ffd15 	stw	r4,-12(fp)
 801abb4:	e17ffe15 	stw	r5,-8(fp)
 801abb8:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 801abbc:	e0bffd17 	ldw	r2,-12(fp)
 801abc0:	10000816 	blt	r2,zero,801abe4 <read+0x44>
 801abc4:	e13ffd17 	ldw	r4,-12(fp)
 801abc8:	01400304 	movi	r5,12
 801abcc:	800334c0 	call	800334c <__mulsi3>
 801abd0:	1007883a 	mov	r3,r2
 801abd4:	008200b4 	movhi	r2,2050
 801abd8:	10bbb004 	addi	r2,r2,-4416
 801abdc:	1885883a 	add	r2,r3,r2
 801abe0:	00000106 	br	801abe8 <read+0x48>
 801abe4:	0005883a 	mov	r2,zero
 801abe8:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 801abec:	e0bffb17 	ldw	r2,-20(fp)
 801abf0:	10002226 	beq	r2,zero,801ac7c <read+0xdc>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 801abf4:	e0bffb17 	ldw	r2,-20(fp)
 801abf8:	10800217 	ldw	r2,8(r2)
 801abfc:	108000cc 	andi	r2,r2,3
 801ac00:	10800060 	cmpeqi	r2,r2,1
 801ac04:	1000181e 	bne	r2,zero,801ac68 <read+0xc8>
        (fd->dev->read))
 801ac08:	e0bffb17 	ldw	r2,-20(fp)
 801ac0c:	10800017 	ldw	r2,0(r2)
 801ac10:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 801ac14:	10001426 	beq	r2,zero,801ac68 <read+0xc8>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
 801ac18:	e0bffb17 	ldw	r2,-20(fp)
 801ac1c:	10800017 	ldw	r2,0(r2)
 801ac20:	10800517 	ldw	r2,20(r2)
 801ac24:	e0ffff17 	ldw	r3,-4(fp)
 801ac28:	e13ffb17 	ldw	r4,-20(fp)
 801ac2c:	e17ffe17 	ldw	r5,-8(fp)
 801ac30:	180d883a 	mov	r6,r3
 801ac34:	103ee83a 	callr	r2
 801ac38:	e0bffc15 	stw	r2,-16(fp)
 801ac3c:	e0bffc17 	ldw	r2,-16(fp)
 801ac40:	1000070e 	bge	r2,zero,801ac60 <read+0xc0>
        {
          ALT_ERRNO = -rval;
 801ac44:	801ab500 	call	801ab50 <alt_get_errno>
 801ac48:	1007883a 	mov	r3,r2
 801ac4c:	e0bffc17 	ldw	r2,-16(fp)
 801ac50:	0085c83a 	sub	r2,zero,r2
 801ac54:	18800015 	stw	r2,0(r3)
          return -1;
 801ac58:	00bfffc4 	movi	r2,-1
 801ac5c:	00000c06 	br	801ac90 <read+0xf0>
        }
        return rval;
 801ac60:	e0bffc17 	ldw	r2,-16(fp)
 801ac64:	00000a06 	br	801ac90 <read+0xf0>
      }
      else
      {
        ALT_ERRNO = EACCES;
 801ac68:	801ab500 	call	801ab50 <alt_get_errno>
 801ac6c:	1007883a 	mov	r3,r2
 801ac70:	00800344 	movi	r2,13
 801ac74:	18800015 	stw	r2,0(r3)
 801ac78:	00000406 	br	801ac8c <read+0xec>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
 801ac7c:	801ab500 	call	801ab50 <alt_get_errno>
 801ac80:	1007883a 	mov	r3,r2
 801ac84:	00801444 	movi	r2,81
 801ac88:	18800015 	stw	r2,0(r3)
  }
  return -1;
 801ac8c:	00bfffc4 	movi	r2,-1
}
 801ac90:	e037883a 	mov	sp,fp
 801ac94:	dfc00117 	ldw	ra,4(sp)
 801ac98:	df000017 	ldw	fp,0(sp)
 801ac9c:	dec00204 	addi	sp,sp,8
 801aca0:	f800283a 	ret

0801aca4 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
 801aca4:	defffc04 	addi	sp,sp,-16
 801aca8:	dfc00315 	stw	ra,12(sp)
 801acac:	df000215 	stw	fp,8(sp)
 801acb0:	dc000115 	stw	r16,4(sp)
 801acb4:	df000204 	addi	fp,sp,8
 801acb8:	e13ffe15 	stw	r4,-8(fp)
  if (fd > 2)
 801acbc:	e0bffe17 	ldw	r2,-8(fp)
 801acc0:	108000d0 	cmplti	r2,r2,3
 801acc4:	1000111e 	bne	r2,zero,801ad0c <alt_release_fd+0x68>
  {
    alt_fd_list[fd].fd_flags = 0;
 801acc8:	040200b4 	movhi	r16,2050
 801accc:	843bb004 	addi	r16,r16,-4416
 801acd0:	e0bffe17 	ldw	r2,-8(fp)
 801acd4:	1009883a 	mov	r4,r2
 801acd8:	01400304 	movi	r5,12
 801acdc:	800334c0 	call	800334c <__mulsi3>
 801ace0:	8085883a 	add	r2,r16,r2
 801ace4:	10800204 	addi	r2,r2,8
 801ace8:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
 801acec:	040200b4 	movhi	r16,2050
 801acf0:	843bb004 	addi	r16,r16,-4416
 801acf4:	e0bffe17 	ldw	r2,-8(fp)
 801acf8:	1009883a 	mov	r4,r2
 801acfc:	01400304 	movi	r5,12
 801ad00:	800334c0 	call	800334c <__mulsi3>
 801ad04:	8085883a 	add	r2,r16,r2
 801ad08:	10000015 	stw	zero,0(r2)
  }
}
 801ad0c:	e6ffff04 	addi	sp,fp,-4
 801ad10:	dfc00217 	ldw	ra,8(sp)
 801ad14:	df000117 	ldw	fp,4(sp)
 801ad18:	dc000017 	ldw	r16,0(sp)
 801ad1c:	dec00304 	addi	sp,sp,12
 801ad20:	f800283a 	ret

0801ad24 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
 801ad24:	defff904 	addi	sp,sp,-28
 801ad28:	df000615 	stw	fp,24(sp)
 801ad2c:	df000604 	addi	fp,sp,24
 801ad30:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 801ad34:	0005303a 	rdctl	r2,status
 801ad38:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 801ad3c:	e0fffc17 	ldw	r3,-16(fp)
 801ad40:	00bfff84 	movi	r2,-2
 801ad44:	1884703a 	and	r2,r3,r2
 801ad48:	1001703a 	wrctl	status,r2
  
  return context;
 801ad4c:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
 801ad50:	e0bffa15 	stw	r2,-24(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
 801ad54:	d0a02a17 	ldw	r2,-32600(gp)
 801ad58:	10c000c4 	addi	r3,r2,3
 801ad5c:	00bfff04 	movi	r2,-4
 801ad60:	1884703a 	and	r2,r3,r2
 801ad64:	d0a02a15 	stw	r2,-32600(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
 801ad68:	d0e02a17 	ldw	r3,-32600(gp)
 801ad6c:	e0bfff17 	ldw	r2,-4(fp)
 801ad70:	1887883a 	add	r3,r3,r2
 801ad74:	00830034 	movhi	r2,3072
 801ad78:	10800004 	addi	r2,r2,0
 801ad7c:	10c0062e 	bgeu	r2,r3,801ad98 <sbrk+0x74>
 801ad80:	e0bffa17 	ldw	r2,-24(fp)
 801ad84:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 801ad88:	e0bffd17 	ldw	r2,-12(fp)
 801ad8c:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
 801ad90:	00bfffc4 	movi	r2,-1
 801ad94:	00000b06 	br	801adc4 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
 801ad98:	d0a02a17 	ldw	r2,-32600(gp)
 801ad9c:	e0bffb15 	stw	r2,-20(fp)
  heap_end += incr; 
 801ada0:	d0e02a17 	ldw	r3,-32600(gp)
 801ada4:	e0bfff17 	ldw	r2,-4(fp)
 801ada8:	1885883a 	add	r2,r3,r2
 801adac:	d0a02a15 	stw	r2,-32600(gp)
 801adb0:	e0bffa17 	ldw	r2,-24(fp)
 801adb4:	e0bffe15 	stw	r2,-8(fp)
 801adb8:	e0bffe17 	ldw	r2,-8(fp)
 801adbc:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
 801adc0:	e0bffb17 	ldw	r2,-20(fp)
} 
 801adc4:	e037883a 	mov	sp,fp
 801adc8:	df000017 	ldw	fp,0(sp)
 801adcc:	dec00104 	addi	sp,sp,4
 801add0:	f800283a 	ret

0801add4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 801add4:	defffe04 	addi	sp,sp,-8
 801add8:	dfc00115 	stw	ra,4(sp)
 801addc:	df000015 	stw	fp,0(sp)
 801ade0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 801ade4:	008200b4 	movhi	r2,2050
 801ade8:	10809e04 	addi	r2,r2,632
 801adec:	10800017 	ldw	r2,0(r2)
 801adf0:	10000526 	beq	r2,zero,801ae08 <alt_get_errno+0x34>
 801adf4:	008200b4 	movhi	r2,2050
 801adf8:	10809e04 	addi	r2,r2,632
 801adfc:	10800017 	ldw	r2,0(r2)
 801ae00:	103ee83a 	callr	r2
 801ae04:	00000206 	br	801ae10 <alt_get_errno+0x3c>
 801ae08:	008200b4 	movhi	r2,2050
 801ae0c:	1087e304 	addi	r2,r2,8076
}
 801ae10:	e037883a 	mov	sp,fp
 801ae14:	dfc00117 	ldw	ra,4(sp)
 801ae18:	df000017 	ldw	fp,0(sp)
 801ae1c:	dec00204 	addi	sp,sp,8
 801ae20:	f800283a 	ret

0801ae24 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
 801ae24:	defff904 	addi	sp,sp,-28
 801ae28:	dfc00615 	stw	ra,24(sp)
 801ae2c:	df000515 	stw	fp,20(sp)
 801ae30:	df000504 	addi	fp,sp,20
 801ae34:	e13ffd15 	stw	r4,-12(fp)
 801ae38:	e17ffe15 	stw	r5,-8(fp)
 801ae3c:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 801ae40:	e0bffd17 	ldw	r2,-12(fp)
 801ae44:	10000816 	blt	r2,zero,801ae68 <write+0x44>
 801ae48:	e13ffd17 	ldw	r4,-12(fp)
 801ae4c:	01400304 	movi	r5,12
 801ae50:	800334c0 	call	800334c <__mulsi3>
 801ae54:	1007883a 	mov	r3,r2
 801ae58:	008200b4 	movhi	r2,2050
 801ae5c:	10bbb004 	addi	r2,r2,-4416
 801ae60:	1885883a 	add	r2,r3,r2
 801ae64:	00000106 	br	801ae6c <write+0x48>
 801ae68:	0005883a 	mov	r2,zero
 801ae6c:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 801ae70:	e0bffb17 	ldw	r2,-20(fp)
 801ae74:	10002126 	beq	r2,zero,801aefc <write+0xd8>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
 801ae78:	e0bffb17 	ldw	r2,-20(fp)
 801ae7c:	10800217 	ldw	r2,8(r2)
 801ae80:	108000cc 	andi	r2,r2,3
 801ae84:	10001826 	beq	r2,zero,801aee8 <write+0xc4>
 801ae88:	e0bffb17 	ldw	r2,-20(fp)
 801ae8c:	10800017 	ldw	r2,0(r2)
 801ae90:	10800617 	ldw	r2,24(r2)
 801ae94:	10001426 	beq	r2,zero,801aee8 <write+0xc4>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
 801ae98:	e0bffb17 	ldw	r2,-20(fp)
 801ae9c:	10800017 	ldw	r2,0(r2)
 801aea0:	10800617 	ldw	r2,24(r2)
 801aea4:	e0ffff17 	ldw	r3,-4(fp)
 801aea8:	e13ffb17 	ldw	r4,-20(fp)
 801aeac:	e17ffe17 	ldw	r5,-8(fp)
 801aeb0:	180d883a 	mov	r6,r3
 801aeb4:	103ee83a 	callr	r2
 801aeb8:	e0bffc15 	stw	r2,-16(fp)
 801aebc:	e0bffc17 	ldw	r2,-16(fp)
 801aec0:	1000070e 	bge	r2,zero,801aee0 <write+0xbc>
      {
        ALT_ERRNO = -rval;
 801aec4:	801add40 	call	801add4 <alt_get_errno>
 801aec8:	1007883a 	mov	r3,r2
 801aecc:	e0bffc17 	ldw	r2,-16(fp)
 801aed0:	0085c83a 	sub	r2,zero,r2
 801aed4:	18800015 	stw	r2,0(r3)
        return -1;
 801aed8:	00bfffc4 	movi	r2,-1
 801aedc:	00000c06 	br	801af10 <write+0xec>
      }
      return rval;
 801aee0:	e0bffc17 	ldw	r2,-16(fp)
 801aee4:	00000a06 	br	801af10 <write+0xec>
    }
    else
    {
      ALT_ERRNO = EACCES;
 801aee8:	801add40 	call	801add4 <alt_get_errno>
 801aeec:	1007883a 	mov	r3,r2
 801aef0:	00800344 	movi	r2,13
 801aef4:	18800015 	stw	r2,0(r3)
 801aef8:	00000406 	br	801af0c <write+0xe8>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
 801aefc:	801add40 	call	801add4 <alt_get_errno>
 801af00:	1007883a 	mov	r3,r2
 801af04:	00801444 	movi	r2,81
 801af08:	18800015 	stw	r2,0(r3)
  }
  return -1;
 801af0c:	00bfffc4 	movi	r2,-1
}
 801af10:	e037883a 	mov	sp,fp
 801af14:	dfc00117 	ldw	ra,4(sp)
 801af18:	df000017 	ldw	fp,0(sp)
 801af1c:	dec00204 	addi	sp,sp,8
 801af20:	f800283a 	ret

0801af24 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
 801af24:	defffd04 	addi	sp,sp,-12
 801af28:	dfc00215 	stw	ra,8(sp)
 801af2c:	df000115 	stw	fp,4(sp)
 801af30:	df000104 	addi	fp,sp,4
 801af34:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
 801af38:	e13fff17 	ldw	r4,-4(fp)
 801af3c:	014200b4 	movhi	r5,2050
 801af40:	29409904 	addi	r5,r5,612
 801af44:	801cb440 	call	801cb44 <alt_dev_llist_insert>
}
 801af48:	e037883a 	mov	sp,fp
 801af4c:	dfc00117 	ldw	ra,4(sp)
 801af50:	df000017 	ldw	fp,0(sp)
 801af54:	dec00204 	addi	sp,sp,8
 801af58:	f800283a 	ret

0801af5c <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
 801af5c:	defffd04 	addi	sp,sp,-12
 801af60:	dfc00215 	stw	ra,8(sp)
 801af64:	df000115 	stw	fp,4(sp)
 801af68:	df000104 	addi	fp,sp,4
 801af6c:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
 801af70:	801d4a80 	call	801d4a8 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
 801af74:	00800044 	movi	r2,1
 801af78:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
 801af7c:	e037883a 	mov	sp,fp
 801af80:	dfc00117 	ldw	ra,4(sp)
 801af84:	df000017 	ldw	fp,0(sp)
 801af88:	dec00204 	addi	sp,sp,8
 801af8c:	f800283a 	ret

0801af90 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
 801af90:	defffd04 	addi	sp,sp,-12
 801af94:	dfc00215 	stw	ra,8(sp)
 801af98:	df000115 	stw	fp,4(sp)
 801af9c:	df000104 	addi	fp,sp,4
    ALTERA_AVALON_DMA_INIT ( DMA_FPGA_TO_HPS, dma_fpga_to_hps);
 801afa0:	008000c4 	movi	r2,3
 801afa4:	d8800015 	stw	r2,0(sp)
 801afa8:	010200b4 	movhi	r4,2050
 801afac:	213c3904 	addi	r4,r4,-3868
 801afb0:	014200b4 	movhi	r5,2050
 801afb4:	297c4004 	addi	r5,r5,-3840
 801afb8:	01801004 	movi	r6,64
 801afbc:	000f883a 	mov	r7,zero
 801afc0:	801bb200 	call	801bb20 <alt_avalon_dma_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
 801afc4:	010200b4 	movhi	r4,2050
 801afc8:	213c5104 	addi	r4,r4,-3772
 801afcc:	000b883a 	mov	r5,zero
 801afd0:	000d883a 	mov	r6,zero
 801afd4:	801bd2c0 	call	801bd2c <altera_avalon_jtag_uart_init>
 801afd8:	010200b4 	movhi	r4,2050
 801afdc:	213c4704 	addi	r4,r4,-3812
 801afe0:	801af240 	call	801af24 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID, sysid);
 801afe4:	0001883a 	nop
    ALTERA_UP_AVALON_RS232_INIT ( BT_RS232_UART, bt_rs232_uart);
 801afe8:	010200b4 	movhi	r4,2050
 801afec:	21005f04 	addi	r4,r4,380
 801aff0:	801af240 	call	801af24 <alt_dev_reg>
    ALTERA_UP_AVALON_RS232_INIT ( WIFI_RS232_UART, wifi_rs232_uart);
 801aff4:	010200b4 	movhi	r4,2050
 801aff8:	21006a04 	addi	r4,r4,424
 801affc:	801af240 	call	801af24 <alt_dev_reg>
}
 801b000:	e037883a 	mov	sp,fp
 801b004:	dfc00117 	ldw	ra,4(sp)
 801b008:	df000017 	ldw	fp,0(sp)
 801b00c:	dec00204 	addi	sp,sp,8
 801b010:	f800283a 	ret

0801b014 <alt_dma_txchan_reg>:
/*
 * Register a DMA transmit channel with the system.
 */

static ALT_INLINE int alt_dma_txchan_reg (alt_dma_txchan_dev* dev)
{
 801b014:	defffd04 	addi	sp,sp,-12
 801b018:	dfc00215 	stw	ra,8(sp)
 801b01c:	df000115 	stw	fp,4(sp)
 801b020:	df000104 	addi	fp,sp,4
 801b024:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dma_txchan_list;

  return alt_dev_llist_insert((alt_dev_llist*) dev, &alt_dma_txchan_list);
 801b028:	e13fff17 	ldw	r4,-4(fp)
 801b02c:	014200b4 	movhi	r5,2050
 801b030:	29409c04 	addi	r5,r5,624
 801b034:	801cb440 	call	801cb44 <alt_dev_llist_insert>
}
 801b038:	e037883a 	mov	sp,fp
 801b03c:	dfc00117 	ldw	ra,4(sp)
 801b040:	df000017 	ldw	fp,0(sp)
 801b044:	dec00204 	addi	sp,sp,8
 801b048:	f800283a 	ret

0801b04c <alt_dma_rxchan_reg>:
/*
 * Register a DMA receive channel with the system.
 */

static ALT_INLINE int alt_dma_rxchan_reg (alt_dma_rxchan_dev* dev)
{
 801b04c:	defffd04 	addi	sp,sp,-12
 801b050:	dfc00215 	stw	ra,8(sp)
 801b054:	df000115 	stw	fp,4(sp)
 801b058:	df000104 	addi	fp,sp,4
 801b05c:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dma_rxchan_list;

  return alt_dev_llist_insert((alt_dev_llist*) dev, &alt_dma_rxchan_list);
 801b060:	e13fff17 	ldw	r4,-4(fp)
 801b064:	014200b4 	movhi	r5,2050
 801b068:	2940a004 	addi	r5,r5,640
 801b06c:	801cb440 	call	801cb44 <alt_dev_llist_insert>
}
 801b070:	e037883a 	mov	sp,fp
 801b074:	dfc00117 	ldw	ra,4(sp)
 801b078:	df000017 	ldw	fp,0(sp)
 801b07c:	dec00204 	addi	sp,sp,8
 801b080:	f800283a 	ret

0801b084 <alt_avalon_dma_launch_bidir>:
 * both the receive and transmit channels are using incrementing addresses,
 * i.e. both channels are accesing memory rather than devices.
 */

void alt_avalon_dma_launch_bidir (alt_avalon_dma_priv* priv)
{
 801b084:	defffc04 	addi	sp,sp,-16
 801b088:	df000315 	stw	fp,12(sp)
 801b08c:	df000304 	addi	fp,sp,12
 801b090:	e13fff15 	stw	r4,-4(fp)
  alt_avalon_dma_txslot* tx_slot;
  alt_avalon_dma_rxslot* rx_slot;

  if ((priv->tx_start != priv->tx_end) && (priv->rx_start != priv->rx_end))
 801b094:	e0bfff17 	ldw	r2,-4(fp)
 801b098:	10c00117 	ldw	r3,4(r2)
 801b09c:	e0bfff17 	ldw	r2,-4(fp)
 801b0a0:	10800217 	ldw	r2,8(r2)
 801b0a4:	18802e26 	beq	r3,r2,801b160 <alt_avalon_dma_launch_bidir+0xdc>
 801b0a8:	e0bfff17 	ldw	r2,-4(fp)
 801b0ac:	10c00317 	ldw	r3,12(r2)
 801b0b0:	e0bfff17 	ldw	r2,-4(fp)
 801b0b4:	10800417 	ldw	r2,16(r2)
 801b0b8:	18802926 	beq	r3,r2,801b160 <alt_avalon_dma_launch_bidir+0xdc>
  {
    priv->active = 1;
 801b0bc:	e0bfff17 	ldw	r2,-4(fp)
 801b0c0:	00c00044 	movi	r3,1
 801b0c4:	10c00815 	stw	r3,32(r2)

    tx_slot = &priv->tx_buf[priv->tx_start];
 801b0c8:	e0bfff17 	ldw	r2,-4(fp)
 801b0cc:	10800117 	ldw	r2,4(r2)
 801b0d0:	1004913a 	slli	r2,r2,4
 801b0d4:	10800904 	addi	r2,r2,36
 801b0d8:	e0ffff17 	ldw	r3,-4(fp)
 801b0dc:	1885883a 	add	r2,r3,r2
 801b0e0:	e0bffd15 	stw	r2,-12(fp)
    rx_slot = &priv->rx_buf[priv->rx_start];
 801b0e4:	e0bfff17 	ldw	r2,-4(fp)
 801b0e8:	10800317 	ldw	r2,12(r2)
 801b0ec:	1004913a 	slli	r2,r2,4
 801b0f0:	10801904 	addi	r2,r2,100
 801b0f4:	e0ffff17 	ldw	r3,-4(fp)
 801b0f8:	1885883a 	add	r2,r3,r2
 801b0fc:	e0bffe15 	stw	r2,-8(fp)

    IOWR_ALTERA_AVALON_DMA_RADDRESS (priv->base, (alt_u32) tx_slot->from);
 801b100:	e0bfff17 	ldw	r2,-4(fp)
 801b104:	10800017 	ldw	r2,0(r2)
 801b108:	10800104 	addi	r2,r2,4
 801b10c:	e0fffd17 	ldw	r3,-12(fp)
 801b110:	18c00017 	ldw	r3,0(r3)
 801b114:	10c00035 	stwio	r3,0(r2)
    IOWR_ALTERA_AVALON_DMA_WADDRESS (priv->base, (alt_u32) rx_slot->data);
 801b118:	e0bfff17 	ldw	r2,-4(fp)
 801b11c:	10800017 	ldw	r2,0(r2)
 801b120:	10800204 	addi	r2,r2,8
 801b124:	e0fffe17 	ldw	r3,-8(fp)
 801b128:	18c00017 	ldw	r3,0(r3)
 801b12c:	10c00035 	stwio	r3,0(r2)

    IOWR_ALTERA_AVALON_DMA_LENGTH (priv->base,
 801b130:	e0bfff17 	ldw	r2,-4(fp)
 801b134:	10800017 	ldw	r2,0(r2)
 801b138:	11000304 	addi	r4,r2,12
 801b13c:	e0bffd17 	ldw	r2,-12(fp)
 801b140:	11400117 	ldw	r5,4(r2)
 801b144:	e0bffe17 	ldw	r2,-8(fp)
 801b148:	10c00117 	ldw	r3,4(r2)
 801b14c:	2805883a 	mov	r2,r5
 801b150:	1880012e 	bgeu	r3,r2,801b158 <alt_avalon_dma_launch_bidir+0xd4>
 801b154:	1805883a 	mov	r2,r3
 801b158:	20800035 	stwio	r2,0(r4)
 801b15c:	00000206 	br	801b168 <alt_avalon_dma_launch_bidir+0xe4>
       (tx_slot->len > rx_slot->len) ? rx_slot->len : tx_slot->len);
  }
  else
  {
    priv->active = 0;
 801b160:	e0bfff17 	ldw	r2,-4(fp)
 801b164:	10000815 	stw	zero,32(r2)
  }
}
 801b168:	e037883a 	mov	sp,fp
 801b16c:	df000017 	ldw	fp,0(sp)
 801b170:	dec00104 	addi	sp,sp,4
 801b174:	f800283a 	ret

0801b178 <alt_avalon_dma_launch_txonly>:
 * i.e. the receive channel is accessing a single memory location (which is
 * probably a device register).
 */

static void alt_avalon_dma_launch_txonly (alt_avalon_dma_priv* priv)
{
 801b178:	defffd04 	addi	sp,sp,-12
 801b17c:	df000215 	stw	fp,8(sp)
 801b180:	df000204 	addi	fp,sp,8
 801b184:	e13fff15 	stw	r4,-4(fp)
  alt_avalon_dma_txslot* tx_slot;

  if (priv->tx_start != priv->tx_end)
 801b188:	e0bfff17 	ldw	r2,-4(fp)
 801b18c:	10c00117 	ldw	r3,4(r2)
 801b190:	e0bfff17 	ldw	r2,-4(fp)
 801b194:	10800217 	ldw	r2,8(r2)
 801b198:	18801726 	beq	r3,r2,801b1f8 <alt_avalon_dma_launch_txonly+0x80>
  {
    priv->active = 1;
 801b19c:	e0bfff17 	ldw	r2,-4(fp)
 801b1a0:	00c00044 	movi	r3,1
 801b1a4:	10c00815 	stw	r3,32(r2)
    tx_slot      = &priv->tx_buf[priv->tx_start];
 801b1a8:	e0bfff17 	ldw	r2,-4(fp)
 801b1ac:	10800117 	ldw	r2,4(r2)
 801b1b0:	1004913a 	slli	r2,r2,4
 801b1b4:	10800904 	addi	r2,r2,36
 801b1b8:	e0ffff17 	ldw	r3,-4(fp)
 801b1bc:	1885883a 	add	r2,r3,r2
 801b1c0:	e0bffe15 	stw	r2,-8(fp)

    IOWR_ALTERA_AVALON_DMA_RADDRESS (priv->base, (alt_u32) tx_slot->from);
 801b1c4:	e0bfff17 	ldw	r2,-4(fp)
 801b1c8:	10800017 	ldw	r2,0(r2)
 801b1cc:	10800104 	addi	r2,r2,4
 801b1d0:	e0fffe17 	ldw	r3,-8(fp)
 801b1d4:	18c00017 	ldw	r3,0(r3)
 801b1d8:	10c00035 	stwio	r3,0(r2)
    IOWR_ALTERA_AVALON_DMA_LENGTH (priv->base, tx_slot->len);
 801b1dc:	e0bfff17 	ldw	r2,-4(fp)
 801b1e0:	10800017 	ldw	r2,0(r2)
 801b1e4:	10800304 	addi	r2,r2,12
 801b1e8:	e0fffe17 	ldw	r3,-8(fp)
 801b1ec:	18c00117 	ldw	r3,4(r3)
 801b1f0:	10c00035 	stwio	r3,0(r2)
 801b1f4:	00000206 	br	801b200 <alt_avalon_dma_launch_txonly+0x88>
  }
  else
  {
    priv->active = 0;
 801b1f8:	e0bfff17 	ldw	r2,-4(fp)
 801b1fc:	10000815 	stw	zero,32(r2)
  }
}
 801b200:	e037883a 	mov	sp,fp
 801b204:	df000017 	ldw	fp,0(sp)
 801b208:	dec00104 	addi	sp,sp,4
 801b20c:	f800283a 	ret

0801b210 <alt_avalon_dma_launch_rxonly>:
 * i.e. the transmit channel is accessing a single memory location (which is
 * probably a device register).
 */

static void alt_avalon_dma_launch_rxonly (alt_avalon_dma_priv* priv)
{
 801b210:	defffd04 	addi	sp,sp,-12
 801b214:	df000215 	stw	fp,8(sp)
 801b218:	df000204 	addi	fp,sp,8
 801b21c:	e13fff15 	stw	r4,-4(fp)
  alt_avalon_dma_rxslot* rx_slot;

  if (priv->rx_start != priv->rx_end)
 801b220:	e0bfff17 	ldw	r2,-4(fp)
 801b224:	10c00317 	ldw	r3,12(r2)
 801b228:	e0bfff17 	ldw	r2,-4(fp)
 801b22c:	10800417 	ldw	r2,16(r2)
 801b230:	18801726 	beq	r3,r2,801b290 <alt_avalon_dma_launch_rxonly+0x80>
  {
    priv->active = 1;
 801b234:	e0bfff17 	ldw	r2,-4(fp)
 801b238:	00c00044 	movi	r3,1
 801b23c:	10c00815 	stw	r3,32(r2)
    rx_slot      = &priv->rx_buf[priv->rx_start];
 801b240:	e0bfff17 	ldw	r2,-4(fp)
 801b244:	10800317 	ldw	r2,12(r2)
 801b248:	1004913a 	slli	r2,r2,4
 801b24c:	10801904 	addi	r2,r2,100
 801b250:	e0ffff17 	ldw	r3,-4(fp)
 801b254:	1885883a 	add	r2,r3,r2
 801b258:	e0bffe15 	stw	r2,-8(fp)

    IOWR_ALTERA_AVALON_DMA_WADDRESS (priv->base, (alt_u32) rx_slot->data);
 801b25c:	e0bfff17 	ldw	r2,-4(fp)
 801b260:	10800017 	ldw	r2,0(r2)
 801b264:	10800204 	addi	r2,r2,8
 801b268:	e0fffe17 	ldw	r3,-8(fp)
 801b26c:	18c00017 	ldw	r3,0(r3)
 801b270:	10c00035 	stwio	r3,0(r2)
    IOWR_ALTERA_AVALON_DMA_LENGTH (priv->base, rx_slot->len);
 801b274:	e0bfff17 	ldw	r2,-4(fp)
 801b278:	10800017 	ldw	r2,0(r2)
 801b27c:	10800304 	addi	r2,r2,12
 801b280:	e0fffe17 	ldw	r3,-8(fp)
 801b284:	18c00117 	ldw	r3,4(r3)
 801b288:	10c00035 	stwio	r3,0(r2)
 801b28c:	00000206 	br	801b298 <alt_avalon_dma_launch_rxonly+0x88>
  }
  else
  {
    priv->active = 0;
 801b290:	e0bfff17 	ldw	r2,-4(fp)
 801b294:	10000815 	stw	zero,32(r2)
  }
}
 801b298:	e037883a 	mov	sp,fp
 801b29c:	df000017 	ldw	fp,0(sp)
 801b2a0:	dec00104 	addi	sp,sp,4
 801b2a4:	f800283a 	ret

0801b2a8 <alt_avalon_dma_ioctl>:
 * device instance. See alt_dma_dev.h for the meaning of the supported
 * ioctl requests.
 */

static int alt_avalon_dma_ioctl (alt_avalon_dma_priv* priv, int req, void* arg)
{
 801b2a8:	defffa04 	addi	sp,sp,-24
 801b2ac:	df000515 	stw	fp,20(sp)
 801b2b0:	df000504 	addi	fp,sp,20
 801b2b4:	e13ffd15 	stw	r4,-12(fp)
 801b2b8:	e17ffe15 	stw	r5,-8(fp)
 801b2bc:	e1bfff15 	stw	r6,-4(fp)
  int     status = 0;
 801b2c0:	e03ffb15 	stw	zero,-20(fp)
   * since it cannot catch concurrent calls to alt_alavalon_dma_prepare()
   * or alt_avalon_dma_send(), but it should at least catch the most
   * common class of problems.
   */

  if ((priv->tx_start != priv->tx_end) ||
 801b2c4:	e0bffd17 	ldw	r2,-12(fp)
 801b2c8:	10c00117 	ldw	r3,4(r2)
 801b2cc:	e0bffd17 	ldw	r2,-12(fp)
 801b2d0:	10800217 	ldw	r2,8(r2)
 801b2d4:	18800a1e 	bne	r3,r2,801b300 <alt_avalon_dma_ioctl+0x58>
      (priv->rx_start != priv->rx_end) ||
 801b2d8:	e0bffd17 	ldw	r2,-12(fp)
 801b2dc:	10c00317 	ldw	r3,12(r2)
 801b2e0:	e0bffd17 	ldw	r2,-12(fp)
 801b2e4:	10800417 	ldw	r2,16(r2)
   * since it cannot catch concurrent calls to alt_alavalon_dma_prepare()
   * or alt_avalon_dma_send(), but it should at least catch the most
   * common class of problems.
   */

  if ((priv->tx_start != priv->tx_end) ||
 801b2e8:	1880051e 	bne	r3,r2,801b300 <alt_avalon_dma_ioctl+0x58>
      (priv->rx_start != priv->rx_end) ||
      IORD_ALTERA_AVALON_DMA_LENGTH (priv->base))
 801b2ec:	e0bffd17 	ldw	r2,-12(fp)
 801b2f0:	10800017 	ldw	r2,0(r2)
 801b2f4:	10800304 	addi	r2,r2,12
 801b2f8:	10800037 	ldwio	r2,0(r2)
   * or alt_avalon_dma_send(), but it should at least catch the most
   * common class of problems.
   */

  if ((priv->tx_start != priv->tx_end) ||
      (priv->rx_start != priv->rx_end) ||
 801b2fc:	10000226 	beq	r2,zero,801b308 <alt_avalon_dma_ioctl+0x60>
      IORD_ALTERA_AVALON_DMA_LENGTH (priv->base))
  {
    return -EIO;
 801b300:	00bffec4 	movi	r2,-5
 801b304:	0000b506 	br	801b5dc <alt_avalon_dma_ioctl+0x334>
  }

  /* Now process the ioctl. */

  switch (req)
 801b308:	e0bffe17 	ldw	r2,-8(fp)
 801b30c:	108002a8 	cmpgeui	r2,r2,10
 801b310:	1000781e 	bne	r2,zero,801b4f4 <alt_avalon_dma_ioctl+0x24c>
 801b314:	e0bffe17 	ldw	r2,-8(fp)
 801b318:	100690ba 	slli	r3,r2,2
 801b31c:	008200b4 	movhi	r2,2050
 801b320:	10accc04 	addi	r2,r2,-19664
 801b324:	1885883a 	add	r2,r3,r2
 801b328:	10800017 	ldw	r2,0(r2)
 801b32c:	1000683a 	jmp	r2
 801b330:	0801b4f4 	orhi	zero,at,1747
 801b334:	0801b358 	cmpnei	zero,at,1741
 801b338:	0801b3b0 	cmpltui	zero,at,1742
 801b33c:	0801b3dc 	xori	zero,at,1743
 801b340:	0801b434 	orhi	zero,at,1744
 801b344:	0801b460 	cmpeqi	zero,at,1745
 801b348:	0801b47c 	xorhi	zero,at,1745
 801b34c:	0801b49c 	xori	zero,at,1746
 801b350:	0801b4bc 	xorhi	zero,at,1746
 801b354:	0801b4dc 	xori	zero,at,1747
  {
  case ALT_DMA_TX_STREAM_ON:
    if (!(priv->flags & ALT_AVALON_DMA_RX_STREAM))
 801b358:	e0bffd17 	ldw	r2,-12(fp)
 801b35c:	10800517 	ldw	r2,20(r2)
 801b360:	1080100c 	andi	r2,r2,64
 801b364:	10000f1e 	bne	r2,zero,801b3a4 <alt_avalon_dma_ioctl+0xfc>
    {
      IOWR_ALTERA_AVALON_DMA_RADDRESS (priv->base, (alt_u32) arg);
 801b368:	e0bffd17 	ldw	r2,-12(fp)
 801b36c:	10800017 	ldw	r2,0(r2)
 801b370:	10800104 	addi	r2,r2,4
 801b374:	e0ffff17 	ldw	r3,-4(fp)
 801b378:	10c00035 	stwio	r3,0(r2)
      priv->flags |= ALT_AVALON_DMA_TX_STREAM;
 801b37c:	e0bffd17 	ldw	r2,-12(fp)
 801b380:	10800517 	ldw	r2,20(r2)
 801b384:	10c00814 	ori	r3,r2,32
 801b388:	e0bffd17 	ldw	r2,-12(fp)
 801b38c:	10c00515 	stw	r3,20(r2)
      priv->launch = alt_avalon_dma_launch_rxonly;
 801b390:	e0fffd17 	ldw	r3,-12(fp)
 801b394:	008200b4 	movhi	r2,2050
 801b398:	10ac8404 	addi	r2,r2,-19952
 801b39c:	18800715 	stw	r2,28(r3)
    }
    else
    {
      status = -EIO;
    }
    break;
 801b3a0:	00005606 	br	801b4fc <alt_avalon_dma_ioctl+0x254>
      priv->flags |= ALT_AVALON_DMA_TX_STREAM;
      priv->launch = alt_avalon_dma_launch_rxonly;
    }
    else
    {
      status = -EIO;
 801b3a4:	00bffec4 	movi	r2,-5
 801b3a8:	e0bffb15 	stw	r2,-20(fp)
    }
    break;
 801b3ac:	00005306 	br	801b4fc <alt_avalon_dma_ioctl+0x254>
  case ALT_DMA_TX_STREAM_OFF:
    priv->flags &= ~ALT_AVALON_DMA_TX_STREAM;
 801b3b0:	e0bffd17 	ldw	r2,-12(fp)
 801b3b4:	10c00517 	ldw	r3,20(r2)
 801b3b8:	00bff7c4 	movi	r2,-33
 801b3bc:	1886703a 	and	r3,r3,r2
 801b3c0:	e0bffd17 	ldw	r2,-12(fp)
 801b3c4:	10c00515 	stw	r3,20(r2)
    priv->launch = alt_avalon_dma_launch_bidir;
 801b3c8:	e0fffd17 	ldw	r3,-12(fp)
 801b3cc:	008200b4 	movhi	r2,2050
 801b3d0:	10ac2104 	addi	r2,r2,-20348
 801b3d4:	18800715 	stw	r2,28(r3)
    break;
 801b3d8:	00004806 	br	801b4fc <alt_avalon_dma_ioctl+0x254>
  case ALT_DMA_RX_STREAM_ON:
    if (!(priv->flags & ALT_AVALON_DMA_TX_STREAM))
 801b3dc:	e0bffd17 	ldw	r2,-12(fp)
 801b3e0:	10800517 	ldw	r2,20(r2)
 801b3e4:	1080080c 	andi	r2,r2,32
 801b3e8:	10000f1e 	bne	r2,zero,801b428 <alt_avalon_dma_ioctl+0x180>
    {
      IOWR_ALTERA_AVALON_DMA_WADDRESS (priv->base, (alt_u32) arg);
 801b3ec:	e0bffd17 	ldw	r2,-12(fp)
 801b3f0:	10800017 	ldw	r2,0(r2)
 801b3f4:	10800204 	addi	r2,r2,8
 801b3f8:	e0ffff17 	ldw	r3,-4(fp)
 801b3fc:	10c00035 	stwio	r3,0(r2)
      priv->flags |= ALT_AVALON_DMA_RX_STREAM;
 801b400:	e0bffd17 	ldw	r2,-12(fp)
 801b404:	10800517 	ldw	r2,20(r2)
 801b408:	10c01014 	ori	r3,r2,64
 801b40c:	e0bffd17 	ldw	r2,-12(fp)
 801b410:	10c00515 	stw	r3,20(r2)
      priv->launch = alt_avalon_dma_launch_txonly;
 801b414:	e0fffd17 	ldw	r3,-12(fp)
 801b418:	008200b4 	movhi	r2,2050
 801b41c:	10ac5e04 	addi	r2,r2,-20104
 801b420:	18800715 	stw	r2,28(r3)
    }
    else
    {
      status = -EIO;
    }
    break;
 801b424:	00003506 	br	801b4fc <alt_avalon_dma_ioctl+0x254>
      priv->flags |= ALT_AVALON_DMA_RX_STREAM;
      priv->launch = alt_avalon_dma_launch_txonly;
    }
    else
    {
      status = -EIO;
 801b428:	00bffec4 	movi	r2,-5
 801b42c:	e0bffb15 	stw	r2,-20(fp)
    }
    break;
 801b430:	00003206 	br	801b4fc <alt_avalon_dma_ioctl+0x254>
  case ALT_DMA_RX_STREAM_OFF:
    priv->flags &= ~ALT_AVALON_DMA_RX_STREAM;
 801b434:	e0bffd17 	ldw	r2,-12(fp)
 801b438:	10c00517 	ldw	r3,20(r2)
 801b43c:	00bfefc4 	movi	r2,-65
 801b440:	1886703a 	and	r3,r3,r2
 801b444:	e0bffd17 	ldw	r2,-12(fp)
 801b448:	10c00515 	stw	r3,20(r2)
    priv->launch = alt_avalon_dma_launch_bidir;
 801b44c:	e0fffd17 	ldw	r3,-12(fp)
 801b450:	008200b4 	movhi	r2,2050
 801b454:	10ac2104 	addi	r2,r2,-20348
 801b458:	18800715 	stw	r2,28(r3)
    break;
 801b45c:	00002706 	br	801b4fc <alt_avalon_dma_ioctl+0x254>
  case ALT_DMA_SET_MODE_8:
    priv->flags = (priv->flags & ~ALT_AVALON_DMA_MODE_MSK) |
 801b460:	e0bffd17 	ldw	r2,-12(fp)
 801b464:	10c00517 	ldw	r3,20(r2)
 801b468:	00bffc04 	movi	r2,-16
 801b46c:	1886703a 	and	r3,r3,r2
 801b470:	e0bffd17 	ldw	r2,-12(fp)
 801b474:	10c00515 	stw	r3,20(r2)
      ALT_AVALON_DMA_MODE_8;
    break;
 801b478:	00002006 	br	801b4fc <alt_avalon_dma_ioctl+0x254>
  case ALT_DMA_SET_MODE_16:
    priv->flags = (priv->flags & ~ALT_AVALON_DMA_MODE_MSK) |
 801b47c:	e0bffd17 	ldw	r2,-12(fp)
 801b480:	10c00517 	ldw	r3,20(r2)
 801b484:	00bffc04 	movi	r2,-16
 801b488:	1884703a 	and	r2,r3,r2
 801b48c:	10c00054 	ori	r3,r2,1
 801b490:	e0bffd17 	ldw	r2,-12(fp)
 801b494:	10c00515 	stw	r3,20(r2)
      ALT_AVALON_DMA_MODE_16;
    break;
 801b498:	00001806 	br	801b4fc <alt_avalon_dma_ioctl+0x254>
  case ALT_DMA_SET_MODE_32:
    priv->flags = (priv->flags & ~ALT_AVALON_DMA_MODE_MSK) |
 801b49c:	e0bffd17 	ldw	r2,-12(fp)
 801b4a0:	10c00517 	ldw	r3,20(r2)
 801b4a4:	00bffc04 	movi	r2,-16
 801b4a8:	1884703a 	and	r2,r3,r2
 801b4ac:	10c000d4 	ori	r3,r2,3
 801b4b0:	e0bffd17 	ldw	r2,-12(fp)
 801b4b4:	10c00515 	stw	r3,20(r2)
      ALT_AVALON_DMA_MODE_32;
    break;
 801b4b8:	00001006 	br	801b4fc <alt_avalon_dma_ioctl+0x254>
  case ALT_DMA_SET_MODE_64:
    priv->flags = (priv->flags & ~ALT_AVALON_DMA_MODE_MSK) |
 801b4bc:	e0bffd17 	ldw	r2,-12(fp)
 801b4c0:	10c00517 	ldw	r3,20(r2)
 801b4c4:	00bffc04 	movi	r2,-16
 801b4c8:	1884703a 	and	r2,r3,r2
 801b4cc:	10c001d4 	ori	r3,r2,7
 801b4d0:	e0bffd17 	ldw	r2,-12(fp)
 801b4d4:	10c00515 	stw	r3,20(r2)
      ALT_AVALON_DMA_MODE_64;
    break;
 801b4d8:	00000806 	br	801b4fc <alt_avalon_dma_ioctl+0x254>
  case ALT_DMA_SET_MODE_128:
    priv->flags = (priv->flags & ~ALT_AVALON_DMA_MODE_MSK) |
 801b4dc:	e0bffd17 	ldw	r2,-12(fp)
 801b4e0:	10800517 	ldw	r2,20(r2)
 801b4e4:	10c003d4 	ori	r3,r2,15
 801b4e8:	e0bffd17 	ldw	r2,-12(fp)
 801b4ec:	10c00515 	stw	r3,20(r2)
      ALT_AVALON_DMA_MODE_128;
    break;
 801b4f0:	00000206 	br	801b4fc <alt_avalon_dma_ioctl+0x254>
  default:
    status = -ENOTTY;
 801b4f4:	00bff9c4 	movi	r2,-25
 801b4f8:	e0bffb15 	stw	r2,-20(fp)
  }

  if (!status)
 801b4fc:	e0bffb17 	ldw	r2,-20(fp)
 801b500:	1000351e 	bne	r2,zero,801b5d8 <alt_avalon_dma_ioctl+0x330>
  {
     switch (priv->flags & ALT_AVALON_DMA_MODE_MSK)
 801b504:	e0bffd17 	ldw	r2,-12(fp)
 801b508:	10800517 	ldw	r2,20(r2)
 801b50c:	108003cc 	andi	r2,r2,15
 801b510:	10c00060 	cmpeqi	r3,r2,1
 801b514:	1800091e 	bne	r3,zero,801b53c <alt_avalon_dma_ioctl+0x294>
 801b518:	0080052e 	bgeu	zero,r2,801b530 <alt_avalon_dma_ioctl+0x288>
 801b51c:	10c000e0 	cmpeqi	r3,r2,3
 801b520:	1800091e 	bne	r3,zero,801b548 <alt_avalon_dma_ioctl+0x2a0>
 801b524:	108001e0 	cmpeqi	r2,r2,7
 801b528:	10000a1e 	bne	r2,zero,801b554 <alt_avalon_dma_ioctl+0x2ac>
 801b52c:	00000c06 	br	801b560 <alt_avalon_dma_ioctl+0x2b8>
     {
     case ALT_AVALON_DMA_MODE_8:
       mode = ALTERA_AVALON_DMA_CONTROL_BYTE_MSK;
 801b530:	00800044 	movi	r2,1
 801b534:	e0bffc15 	stw	r2,-16(fp)
       break;
 801b538:	00000b06 	br	801b568 <alt_avalon_dma_ioctl+0x2c0>
     case ALT_AVALON_DMA_MODE_16:
       mode = ALTERA_AVALON_DMA_CONTROL_HW_MSK;
 801b53c:	00800084 	movi	r2,2
 801b540:	e0bffc15 	stw	r2,-16(fp)
       break;
 801b544:	00000806 	br	801b568 <alt_avalon_dma_ioctl+0x2c0>
     case ALT_AVALON_DMA_MODE_32:
       mode = ALTERA_AVALON_DMA_CONTROL_WORD_MSK;
 801b548:	00800104 	movi	r2,4
 801b54c:	e0bffc15 	stw	r2,-16(fp)
       break;
 801b550:	00000506 	br	801b568 <alt_avalon_dma_ioctl+0x2c0>
     case ALT_AVALON_DMA_MODE_64:
       mode = ALTERA_AVALON_DMA_CONTROL_DWORD_MSK;
 801b554:	00810004 	movi	r2,1024
 801b558:	e0bffc15 	stw	r2,-16(fp)
       break;
 801b55c:	00000206 	br	801b568 <alt_avalon_dma_ioctl+0x2c0>
     default:
       mode = ALTERA_AVALON_DMA_CONTROL_QWORD_MSK;
 801b560:	00820004 	movi	r2,2048
 801b564:	e0bffc15 	stw	r2,-16(fp)
     }

    if (priv->flags & ALT_AVALON_DMA_TX_STREAM)
 801b568:	e0bffd17 	ldw	r2,-12(fp)
 801b56c:	10800517 	ldw	r2,20(r2)
 801b570:	1080080c 	andi	r2,r2,32
 801b574:	10000726 	beq	r2,zero,801b594 <alt_avalon_dma_ioctl+0x2ec>
    {
      IOWR_ALTERA_AVALON_DMA_CONTROL (priv->base,
 801b578:	e0bffd17 	ldw	r2,-12(fp)
 801b57c:	10800017 	ldw	r2,0(r2)
 801b580:	10800604 	addi	r2,r2,24
 801b584:	e0fffc17 	ldw	r3,-16(fp)
 801b588:	18c07e14 	ori	r3,r3,504
 801b58c:	10c00035 	stwio	r3,0(r2)
 801b590:	00001106 	br	801b5d8 <alt_avalon_dma_ioctl+0x330>
        ALTERA_AVALON_DMA_CONTROL_REEN_MSK |
        ALTERA_AVALON_DMA_CONTROL_WEEN_MSK |
        ALTERA_AVALON_DMA_CONTROL_LEEN_MSK |
        ALTERA_AVALON_DMA_CONTROL_RCON_MSK);
    }
    else if (priv->flags & ALT_AVALON_DMA_RX_STREAM)
 801b594:	e0bffd17 	ldw	r2,-12(fp)
 801b598:	10800517 	ldw	r2,20(r2)
 801b59c:	1080100c 	andi	r2,r2,64
 801b5a0:	10000726 	beq	r2,zero,801b5c0 <alt_avalon_dma_ioctl+0x318>
    {
      IOWR_ALTERA_AVALON_DMA_CONTROL (priv->base,
 801b5a4:	e0bffd17 	ldw	r2,-12(fp)
 801b5a8:	10800017 	ldw	r2,0(r2)
 801b5ac:	10800604 	addi	r2,r2,24
 801b5b0:	e0fffc17 	ldw	r3,-16(fp)
 801b5b4:	18c0be14 	ori	r3,r3,760
 801b5b8:	10c00035 	stwio	r3,0(r2)
 801b5bc:	00000606 	br	801b5d8 <alt_avalon_dma_ioctl+0x330>
        ALTERA_AVALON_DMA_CONTROL_LEEN_MSK |
        ALTERA_AVALON_DMA_CONTROL_WCON_MSK);
    }
    else
    {
      IOWR_ALTERA_AVALON_DMA_CONTROL (priv->base,
 801b5c0:	e0bffd17 	ldw	r2,-12(fp)
 801b5c4:	10800017 	ldw	r2,0(r2)
 801b5c8:	10800604 	addi	r2,r2,24
 801b5cc:	e0fffc17 	ldw	r3,-16(fp)
 801b5d0:	18c03e14 	ori	r3,r3,248
 801b5d4:	10c00035 	stwio	r3,0(r2)
        ALTERA_AVALON_DMA_CONTROL_WEEN_MSK      |
        ALTERA_AVALON_DMA_CONTROL_LEEN_MSK);
    }
  }

  return status;
 801b5d8:	e0bffb17 	ldw	r2,-20(fp)
}
 801b5dc:	e037883a 	mov	sp,fp
 801b5e0:	df000017 	ldw	fp,0(sp)
 801b5e4:	dec00104 	addi	sp,sp,4
 801b5e8:	f800283a 	ret

0801b5ec <alt_avalon_dma_tx_ioctl>:
 */

int alt_avalon_dma_tx_ioctl (alt_dma_txchan dma,
           int req,
           void* arg)
{
 801b5ec:	defffb04 	addi	sp,sp,-20
 801b5f0:	dfc00415 	stw	ra,16(sp)
 801b5f4:	df000315 	stw	fp,12(sp)
 801b5f8:	df000304 	addi	fp,sp,12
 801b5fc:	e13ffd15 	stw	r4,-12(fp)
 801b600:	e17ffe15 	stw	r5,-8(fp)
 801b604:	e1bfff15 	stw	r6,-4(fp)
  return alt_avalon_dma_ioctl (((alt_avalon_dma_txchan*) dma)->priv,
 801b608:	e0bffd17 	ldw	r2,-12(fp)
 801b60c:	10800617 	ldw	r2,24(r2)
 801b610:	1009883a 	mov	r4,r2
 801b614:	e17ffe17 	ldw	r5,-8(fp)
 801b618:	e1bfff17 	ldw	r6,-4(fp)
 801b61c:	801b2a80 	call	801b2a8 <alt_avalon_dma_ioctl>
             req,
             arg);
}
 801b620:	e037883a 	mov	sp,fp
 801b624:	dfc00117 	ldw	ra,4(sp)
 801b628:	df000017 	ldw	fp,0(sp)
 801b62c:	dec00204 	addi	sp,sp,8
 801b630:	f800283a 	ret

0801b634 <alt_avalon_dma_rx_ioctl>:
 */

int alt_avalon_dma_rx_ioctl (alt_dma_rxchan dma,
           int req,
           void* arg)
{
 801b634:	defffb04 	addi	sp,sp,-20
 801b638:	dfc00415 	stw	ra,16(sp)
 801b63c:	df000315 	stw	fp,12(sp)
 801b640:	df000304 	addi	fp,sp,12
 801b644:	e13ffd15 	stw	r4,-12(fp)
 801b648:	e17ffe15 	stw	r5,-8(fp)
 801b64c:	e1bfff15 	stw	r6,-4(fp)
  return alt_avalon_dma_ioctl (((alt_avalon_dma_rxchan*) dma)->priv,
 801b650:	e0bffd17 	ldw	r2,-12(fp)
 801b654:	10800617 	ldw	r2,24(r2)
 801b658:	1009883a 	mov	r4,r2
 801b65c:	e17ffe17 	ldw	r5,-8(fp)
 801b660:	e1bfff17 	ldw	r6,-4(fp)
 801b664:	801b2a80 	call	801b2a8 <alt_avalon_dma_ioctl>
             req,
             arg);
}
 801b668:	e037883a 	mov	sp,fp
 801b66c:	dfc00117 	ldw	ra,4(sp)
 801b670:	df000017 	ldw	fp,0(sp)
 801b674:	dec00204 	addi	sp,sp,8
 801b678:	f800283a 	ret

0801b67c <alt_avalon_dma_prepare>:
int alt_avalon_dma_prepare (alt_dma_rxchan   dma,
                            void*            data,
                            alt_u32          len,
                            alt_rxchan_done* done,
                            void*            handle)
{
 801b67c:	defff404 	addi	sp,sp,-48
 801b680:	dfc00b15 	stw	ra,44(sp)
 801b684:	df000a15 	stw	fp,40(sp)
 801b688:	df000a04 	addi	fp,sp,40
 801b68c:	e13ffc15 	stw	r4,-16(fp)
 801b690:	e17ffd15 	stw	r5,-12(fp)
 801b694:	e1bffe15 	stw	r6,-8(fp)
 801b698:	e1ffff15 	stw	r7,-4(fp)
  alt_u32                end;
  alt_u32                next;
  alt_u32                align_mask;
  alt_avalon_dma_priv*   priv;

  priv = ((alt_avalon_dma_rxchan*) dma)->priv;
 801b69c:	e0bffc17 	ldw	r2,-16(fp)
 801b6a0:	10800617 	ldw	r2,24(r2)
 801b6a4:	e0bff615 	stw	r2,-40(fp)
  /*
   * Ensure that the data is correctly aligned, and that it's not too
   * big for the device.
   */

  align_mask = priv->flags & ALT_AVALON_DMA_MODE_MSK;
 801b6a8:	e0bff617 	ldw	r2,-40(fp)
 801b6ac:	10800517 	ldw	r2,20(r2)
 801b6b0:	108003cc 	andi	r2,r2,15
 801b6b4:	e0bff715 	stw	r2,-36(fp)

  if ((((alt_u32) data) & align_mask) || (len & align_mask) ||
 801b6b8:	e0fffd17 	ldw	r3,-12(fp)
 801b6bc:	e0bff717 	ldw	r2,-36(fp)
 801b6c0:	1884703a 	and	r2,r3,r2
 801b6c4:	1000081e 	bne	r2,zero,801b6e8 <alt_avalon_dma_prepare+0x6c>
 801b6c8:	e0fffe17 	ldw	r3,-8(fp)
 801b6cc:	e0bff717 	ldw	r2,-36(fp)
 801b6d0:	1884703a 	and	r2,r3,r2
 801b6d4:	1000041e 	bne	r2,zero,801b6e8 <alt_avalon_dma_prepare+0x6c>
     (len > priv->max_length))
 801b6d8:	e0bff617 	ldw	r2,-40(fp)
 801b6dc:	10c00617 	ldw	r3,24(r2)
   * big for the device.
   */

  align_mask = priv->flags & ALT_AVALON_DMA_MODE_MSK;

  if ((((alt_u32) data) & align_mask) || (len & align_mask) ||
 801b6e0:	e0bffe17 	ldw	r2,-8(fp)
 801b6e4:	1880022e 	bgeu	r3,r2,801b6f0 <alt_avalon_dma_prepare+0x74>
     (len > priv->max_length))
  {
    return -EINVAL;
 801b6e8:	00bffa84 	movi	r2,-22
 801b6ec:	00002c06 	br	801b7a0 <alt_avalon_dma_prepare+0x124>
  }

  start = priv->rx_start;
 801b6f0:	e0bff617 	ldw	r2,-40(fp)
 801b6f4:	10800317 	ldw	r2,12(r2)
 801b6f8:	e0bff815 	stw	r2,-32(fp)
  end   = priv->rx_end;
 801b6fc:	e0bff617 	ldw	r2,-40(fp)
 801b700:	10800417 	ldw	r2,16(r2)
 801b704:	e0bff915 	stw	r2,-28(fp)
  slot  = &priv->rx_buf[end];
 801b708:	e0bff917 	ldw	r2,-28(fp)
 801b70c:	1004913a 	slli	r2,r2,4
 801b710:	10801904 	addi	r2,r2,100
 801b714:	e0fff617 	ldw	r3,-40(fp)
 801b718:	1885883a 	add	r2,r3,r2
 801b71c:	e0bffa15 	stw	r2,-24(fp)

  next  = (end + 1) & ALT_AVALON_DMA_NSLOTS_MSK;
 801b720:	e0bff917 	ldw	r2,-28(fp)
 801b724:	10800044 	addi	r2,r2,1
 801b728:	108000cc 	andi	r2,r2,3
 801b72c:	e0bffb15 	stw	r2,-20(fp)

  if (next == start)
 801b730:	e0fffb17 	ldw	r3,-20(fp)
 801b734:	e0bff817 	ldw	r2,-32(fp)
 801b738:	1880021e 	bne	r3,r2,801b744 <alt_avalon_dma_prepare+0xc8>
  {
    return -ENOSPC;
 801b73c:	00bff904 	movi	r2,-28
 801b740:	00001706 	br	801b7a0 <alt_avalon_dma_prepare+0x124>
  }

  slot->data   = data;
 801b744:	e0bffa17 	ldw	r2,-24(fp)
 801b748:	e0fffd17 	ldw	r3,-12(fp)
 801b74c:	10c00015 	stw	r3,0(r2)
  slot->len    = len;
 801b750:	e0bffa17 	ldw	r2,-24(fp)
 801b754:	e0fffe17 	ldw	r3,-8(fp)
 801b758:	10c00115 	stw	r3,4(r2)
  slot->done   = done;
 801b75c:	e0bffa17 	ldw	r2,-24(fp)
 801b760:	e0ffff17 	ldw	r3,-4(fp)
 801b764:	10c00215 	stw	r3,8(r2)
  slot->handle = handle;
 801b768:	e0bffa17 	ldw	r2,-24(fp)
 801b76c:	e0c00217 	ldw	r3,8(fp)
 801b770:	10c00315 	stw	r3,12(r2)

  priv->rx_end = next;
 801b774:	e0bff617 	ldw	r2,-40(fp)
 801b778:	e0fffb17 	ldw	r3,-20(fp)
 801b77c:	10c00415 	stw	r3,16(r2)

  if (!priv->active)
 801b780:	e0bff617 	ldw	r2,-40(fp)
 801b784:	10800817 	ldw	r2,32(r2)
 801b788:	1000041e 	bne	r2,zero,801b79c <alt_avalon_dma_prepare+0x120>
  {
    priv->launch (priv);
 801b78c:	e0bff617 	ldw	r2,-40(fp)
 801b790:	10800717 	ldw	r2,28(r2)
 801b794:	e13ff617 	ldw	r4,-40(fp)
 801b798:	103ee83a 	callr	r2
  }

  return 0;
 801b79c:	0005883a 	mov	r2,zero
}
 801b7a0:	e037883a 	mov	sp,fp
 801b7a4:	dfc00117 	ldw	ra,4(sp)
 801b7a8:	df000017 	ldw	fp,0(sp)
 801b7ac:	dec00204 	addi	sp,sp,8
 801b7b0:	f800283a 	ret

0801b7b4 <alt_avalon_dma_space>:
 *
 * A negative value indicates that the value could not be determined.
 */

int alt_avalon_dma_space (alt_dma_txchan dma)
{
 801b7b4:	defffb04 	addi	sp,sp,-20
 801b7b8:	df000415 	stw	fp,16(sp)
 801b7bc:	df000404 	addi	fp,sp,16
 801b7c0:	e13fff15 	stw	r4,-4(fp)
  alt_avalon_dma_priv* priv;

  alt_u32 start;
  alt_u32 end;

  priv = ((alt_avalon_dma_txchan*) dma)->priv;
 801b7c4:	e0bfff17 	ldw	r2,-4(fp)
 801b7c8:	10800617 	ldw	r2,24(r2)
 801b7cc:	e0bffc15 	stw	r2,-16(fp)

  start = priv->tx_start;
 801b7d0:	e0bffc17 	ldw	r2,-16(fp)
 801b7d4:	10800117 	ldw	r2,4(r2)
 801b7d8:	e0bffd15 	stw	r2,-12(fp)
  end   = priv->tx_end;
 801b7dc:	e0bffc17 	ldw	r2,-16(fp)
 801b7e0:	10800217 	ldw	r2,8(r2)
 801b7e4:	e0bffe15 	stw	r2,-8(fp)

  return (start > end) ? start - end - 1 :
 801b7e8:	e0bffd17 	ldw	r2,-12(fp)
 801b7ec:	e0fffe17 	ldw	r3,-8(fp)
 801b7f0:	1880052e 	bgeu	r3,r2,801b808 <alt_avalon_dma_space+0x54>
 801b7f4:	e0fffd17 	ldw	r3,-12(fp)
 801b7f8:	e0bffe17 	ldw	r2,-8(fp)
 801b7fc:	1885c83a 	sub	r2,r3,r2
 801b800:	10bfffc4 	addi	r2,r2,-1
 801b804:	00000406 	br	801b818 <alt_avalon_dma_space+0x64>
    ALT_AVALON_DMA_NSLOTS + start - end - 1;
 801b808:	e0fffd17 	ldw	r3,-12(fp)
 801b80c:	e0bffe17 	ldw	r2,-8(fp)
 801b810:	1885c83a 	sub	r2,r3,r2
 801b814:	108000c4 	addi	r2,r2,3
}
 801b818:	e037883a 	mov	sp,fp
 801b81c:	df000017 	ldw	fp,0(sp)
 801b820:	dec00104 	addi	sp,sp,4
 801b824:	f800283a 	ret

0801b828 <alt_avalon_dma_send>:
int alt_avalon_dma_send (alt_dma_txchan   dma,
                         const void*      from,
                         alt_u32          len,
                         alt_txchan_done* done,
                         void*            handle)
{
 801b828:	defff404 	addi	sp,sp,-48
 801b82c:	dfc00b15 	stw	ra,44(sp)
 801b830:	df000a15 	stw	fp,40(sp)
 801b834:	df000a04 	addi	fp,sp,40
 801b838:	e13ffc15 	stw	r4,-16(fp)
 801b83c:	e17ffd15 	stw	r5,-12(fp)
 801b840:	e1bffe15 	stw	r6,-8(fp)
 801b844:	e1ffff15 	stw	r7,-4(fp)
  alt_u32                end;
  alt_u32                align_mask;
  alt_u32                next;
  alt_avalon_dma_priv*   priv;

  priv = ((alt_avalon_dma_txchan*) dma)->priv;
 801b848:	e0bffc17 	ldw	r2,-16(fp)
 801b84c:	10800617 	ldw	r2,24(r2)
 801b850:	e0bff615 	stw	r2,-40(fp)
  /*
   * Ensure that the data is correctly aligned, and not too large
   * for the device
   */

  align_mask = priv->flags & ALT_AVALON_DMA_MODE_MSK;
 801b854:	e0bff617 	ldw	r2,-40(fp)
 801b858:	10800517 	ldw	r2,20(r2)
 801b85c:	108003cc 	andi	r2,r2,15
 801b860:	e0bff715 	stw	r2,-36(fp)

  if ((((alt_u32) from) & align_mask) ||
 801b864:	e0fffd17 	ldw	r3,-12(fp)
 801b868:	e0bff717 	ldw	r2,-36(fp)
 801b86c:	1884703a 	and	r2,r3,r2
 801b870:	1000081e 	bne	r2,zero,801b894 <alt_avalon_dma_send+0x6c>
        (len & align_mask)            ||
 801b874:	e0fffe17 	ldw	r3,-8(fp)
 801b878:	e0bff717 	ldw	r2,-36(fp)
 801b87c:	1884703a 	and	r2,r3,r2
   * for the device
   */

  align_mask = priv->flags & ALT_AVALON_DMA_MODE_MSK;

  if ((((alt_u32) from) & align_mask) ||
 801b880:	1000041e 	bne	r2,zero,801b894 <alt_avalon_dma_send+0x6c>
        (len & align_mask)            ||
        (len > priv->max_length))
 801b884:	e0bff617 	ldw	r2,-40(fp)
 801b888:	10c00617 	ldw	r3,24(r2)
   */

  align_mask = priv->flags & ALT_AVALON_DMA_MODE_MSK;

  if ((((alt_u32) from) & align_mask) ||
        (len & align_mask)            ||
 801b88c:	e0bffe17 	ldw	r2,-8(fp)
 801b890:	1880022e 	bgeu	r3,r2,801b89c <alt_avalon_dma_send+0x74>
        (len > priv->max_length))
  {
    return -EINVAL;
 801b894:	00bffa84 	movi	r2,-22
 801b898:	00002c06 	br	801b94c <alt_avalon_dma_send+0x124>
  }

  start = priv->tx_start;
 801b89c:	e0bff617 	ldw	r2,-40(fp)
 801b8a0:	10800117 	ldw	r2,4(r2)
 801b8a4:	e0bff815 	stw	r2,-32(fp)
  end   = priv->tx_end;
 801b8a8:	e0bff617 	ldw	r2,-40(fp)
 801b8ac:	10800217 	ldw	r2,8(r2)
 801b8b0:	e0bff915 	stw	r2,-28(fp)
  slot  = &priv->tx_buf[end];
 801b8b4:	e0bff917 	ldw	r2,-28(fp)
 801b8b8:	1004913a 	slli	r2,r2,4
 801b8bc:	10800904 	addi	r2,r2,36
 801b8c0:	e0fff617 	ldw	r3,-40(fp)
 801b8c4:	1885883a 	add	r2,r3,r2
 801b8c8:	e0bffa15 	stw	r2,-24(fp)
  next  = (end + 1) & ALT_AVALON_DMA_NSLOTS_MSK;
 801b8cc:	e0bff917 	ldw	r2,-28(fp)
 801b8d0:	10800044 	addi	r2,r2,1
 801b8d4:	108000cc 	andi	r2,r2,3
 801b8d8:	e0bffb15 	stw	r2,-20(fp)

  if (next == start)
 801b8dc:	e0fffb17 	ldw	r3,-20(fp)
 801b8e0:	e0bff817 	ldw	r2,-32(fp)
 801b8e4:	1880021e 	bne	r3,r2,801b8f0 <alt_avalon_dma_send+0xc8>
  {
    return -ENOSPC;
 801b8e8:	00bff904 	movi	r2,-28
 801b8ec:	00001706 	br	801b94c <alt_avalon_dma_send+0x124>
  }

  /* Fill in the descriptor */

  slot->from   = from;
 801b8f0:	e0bffa17 	ldw	r2,-24(fp)
 801b8f4:	e0fffd17 	ldw	r3,-12(fp)
 801b8f8:	10c00015 	stw	r3,0(r2)
  slot->len    = len;
 801b8fc:	e0bffa17 	ldw	r2,-24(fp)
 801b900:	e0fffe17 	ldw	r3,-8(fp)
 801b904:	10c00115 	stw	r3,4(r2)
  slot->done   = done;
 801b908:	e0bffa17 	ldw	r2,-24(fp)
 801b90c:	e0ffff17 	ldw	r3,-4(fp)
 801b910:	10c00215 	stw	r3,8(r2)
  slot->handle = handle;
 801b914:	e0bffa17 	ldw	r2,-24(fp)
 801b918:	e0c00217 	ldw	r3,8(fp)
 801b91c:	10c00315 	stw	r3,12(r2)

  priv->tx_end = next;
 801b920:	e0bff617 	ldw	r2,-40(fp)
 801b924:	e0fffb17 	ldw	r3,-20(fp)
 801b928:	10c00215 	stw	r3,8(r2)

  if (!priv->active)
 801b92c:	e0bff617 	ldw	r2,-40(fp)
 801b930:	10800817 	ldw	r2,32(r2)
 801b934:	1000041e 	bne	r2,zero,801b948 <alt_avalon_dma_send+0x120>
  {
    priv->launch (priv);
 801b938:	e0bff617 	ldw	r2,-40(fp)
 801b93c:	10800717 	ldw	r2,28(r2)
 801b940:	e13ff617 	ldw	r4,-40(fp)
 801b944:	103ee83a 	callr	r2
  }

  return 0;
 801b948:	0005883a 	mov	r2,zero
}
 801b94c:	e037883a 	mov	sp,fp
 801b950:	dfc00117 	ldw	ra,4(sp)
 801b954:	df000017 	ldw	fp,0(sp)
 801b958:	dec00204 	addi	sp,sp,8
 801b95c:	f800283a 	ret

0801b960 <alt_avalon_dma_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_dma_irq (void* context)
#else
static void alt_avalon_dma_irq (void* context, alt_u32 id)
#endif
{
 801b960:	defff004 	addi	sp,sp,-64
 801b964:	dfc00f15 	stw	ra,60(sp)
 801b968:	df000e15 	stw	fp,56(sp)
 801b96c:	df000e04 	addi	fp,sp,56
 801b970:	e13ffe15 	stw	r4,-8(fp)
 801b974:	e17fff15 	stw	r5,-4(fp)
  alt_avalon_dma_priv* priv = (alt_avalon_dma_priv*) context;
 801b978:	e0bffe17 	ldw	r2,-8(fp)
 801b97c:	e0bff215 	stw	r2,-56(fp)
  alt_u32                rx_start;
  int                    stream_tx;
  int                    stream_rx;
  alt_irq_context        cpu_sr;

  stream_tx = priv->flags & ALT_AVALON_DMA_TX_STREAM;
 801b980:	e0bff217 	ldw	r2,-56(fp)
 801b984:	10800517 	ldw	r2,20(r2)
 801b988:	1080080c 	andi	r2,r2,32
 801b98c:	e0bff315 	stw	r2,-52(fp)
  stream_rx = priv->flags & ALT_AVALON_DMA_RX_STREAM;
 801b990:	e0bff217 	ldw	r2,-56(fp)
 801b994:	10800517 	ldw	r2,20(r2)
 801b998:	1080100c 	andi	r2,r2,64
 801b99c:	e0bff415 	stw	r2,-48(fp)

  tx_start = priv->tx_start;
 801b9a0:	e0bff217 	ldw	r2,-56(fp)
 801b9a4:	10800117 	ldw	r2,4(r2)
 801b9a8:	e0bff515 	stw	r2,-44(fp)
  rx_start = priv->rx_start;
 801b9ac:	e0bff217 	ldw	r2,-56(fp)
 801b9b0:	10800317 	ldw	r2,12(r2)
 801b9b4:	e0bff615 	stw	r2,-40(fp)

  tx_slot = &priv->tx_buf[tx_start];
 801b9b8:	e0bff517 	ldw	r2,-44(fp)
 801b9bc:	1004913a 	slli	r2,r2,4
 801b9c0:	10800904 	addi	r2,r2,36
 801b9c4:	e0fff217 	ldw	r3,-56(fp)
 801b9c8:	1885883a 	add	r2,r3,r2
 801b9cc:	e0bff715 	stw	r2,-36(fp)
  rx_slot = &priv->rx_buf[rx_start];
 801b9d0:	e0bff617 	ldw	r2,-40(fp)
 801b9d4:	1004913a 	slli	r2,r2,4
 801b9d8:	10801904 	addi	r2,r2,100
 801b9dc:	e0fff217 	ldw	r3,-56(fp)
 801b9e0:	1885883a 	add	r2,r3,r2
 801b9e4:	e0bff815 	stw	r2,-32(fp)

  /* Increment the descriptors */

  if (!stream_tx)
 801b9e8:	e0bff317 	ldw	r2,-52(fp)
 801b9ec:	1000051e 	bne	r2,zero,801ba04 <alt_avalon_dma_irq+0xa4>
  {
    priv->tx_start = (tx_start + 1) & ALT_AVALON_DMA_NSLOTS_MSK;
 801b9f0:	e0bff517 	ldw	r2,-44(fp)
 801b9f4:	10800044 	addi	r2,r2,1
 801b9f8:	10c000cc 	andi	r3,r2,3
 801b9fc:	e0bff217 	ldw	r2,-56(fp)
 801ba00:	10c00115 	stw	r3,4(r2)
  }
  if (!stream_rx)
 801ba04:	e0bff417 	ldw	r2,-48(fp)
 801ba08:	1000051e 	bne	r2,zero,801ba20 <alt_avalon_dma_irq+0xc0>
  {
    priv->rx_start = (rx_start + 1) & ALT_AVALON_DMA_NSLOTS_MSK;
 801ba0c:	e0bff617 	ldw	r2,-40(fp)
 801ba10:	10800044 	addi	r2,r2,1
 801ba14:	10c000cc 	andi	r3,r2,3
 801ba18:	e0bff217 	ldw	r2,-56(fp)
 801ba1c:	10c00315 	stw	r3,12(r2)
  }

  /* clear the interrupt */

  IOWR_ALTERA_AVALON_DMA_STATUS (priv->base, 0);
 801ba20:	e0bff217 	ldw	r2,-56(fp)
 801ba24:	10800017 	ldw	r2,0(r2)
 801ba28:	0007883a 	mov	r3,zero
 801ba2c:	10c00035 	stwio	r3,0(r2)
  
  /* Dummy read to ensure IRQ is cleared prior to ISR completion*/
  IORD_ALTERA_AVALON_DMA_STATUS (priv->base);
 801ba30:	e0bff217 	ldw	r2,-56(fp)
 801ba34:	10800017 	ldw	r2,0(r2)
 801ba38:	10800037 	ldwio	r2,0(r2)

  /* launch the next transaction */

  priv->launch (priv);
 801ba3c:	e0bff217 	ldw	r2,-56(fp)
 801ba40:	10800717 	ldw	r2,28(r2)
 801ba44:	e13ff217 	ldw	r4,-56(fp)
 801ba48:	103ee83a 	callr	r2
   * Other interrupts are explicitly disabled if callbacks
   * are registered because there is no guarantee that they are 
   * preemption-safe. This allows the DMA driver to support 
   * interrupt preemption.
   */
  if (!stream_tx && tx_slot->done)
 801ba4c:	e0bff317 	ldw	r2,-52(fp)
 801ba50:	1000151e 	bne	r2,zero,801baa8 <alt_avalon_dma_irq+0x148>
 801ba54:	e0bff717 	ldw	r2,-36(fp)
 801ba58:	10800217 	ldw	r2,8(r2)
 801ba5c:	10001226 	beq	r2,zero,801baa8 <alt_avalon_dma_irq+0x148>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 801ba60:	0005303a 	rdctl	r2,status
 801ba64:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 801ba68:	e0fffa17 	ldw	r3,-24(fp)
 801ba6c:	00bfff84 	movi	r2,-2
 801ba70:	1884703a 	and	r2,r3,r2
 801ba74:	1001703a 	wrctl	status,r2
  
  return context;
 801ba78:	e0bffa17 	ldw	r2,-24(fp)
  {
    cpu_sr = alt_irq_disable_all();
 801ba7c:	e0bff915 	stw	r2,-28(fp)
    tx_slot->done (tx_slot->handle);
 801ba80:	e0bff717 	ldw	r2,-36(fp)
 801ba84:	10800217 	ldw	r2,8(r2)
 801ba88:	e0fff717 	ldw	r3,-36(fp)
 801ba8c:	18c00317 	ldw	r3,12(r3)
 801ba90:	1809883a 	mov	r4,r3
 801ba94:	103ee83a 	callr	r2
 801ba98:	e0bff917 	ldw	r2,-28(fp)
 801ba9c:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 801baa0:	e0bffb17 	ldw	r2,-20(fp)
 801baa4:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(cpu_sr);
    
  }
  if (!stream_rx && rx_slot->done)
 801baa8:	e0bff417 	ldw	r2,-48(fp)
 801baac:	1000171e 	bne	r2,zero,801bb0c <alt_avalon_dma_irq+0x1ac>
 801bab0:	e0bff817 	ldw	r2,-32(fp)
 801bab4:	10800217 	ldw	r2,8(r2)
 801bab8:	10001426 	beq	r2,zero,801bb0c <alt_avalon_dma_irq+0x1ac>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 801babc:	0005303a 	rdctl	r2,status
 801bac0:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 801bac4:	e0fffc17 	ldw	r3,-16(fp)
 801bac8:	00bfff84 	movi	r2,-2
 801bacc:	1884703a 	and	r2,r3,r2
 801bad0:	1001703a 	wrctl	status,r2
  
  return context;
 801bad4:	e0bffc17 	ldw	r2,-16(fp)
  {
    cpu_sr = alt_irq_disable_all();
 801bad8:	e0bff915 	stw	r2,-28(fp)
    rx_slot->done (rx_slot->handle, rx_slot->data);
 801badc:	e0bff817 	ldw	r2,-32(fp)
 801bae0:	10800217 	ldw	r2,8(r2)
 801bae4:	e0fff817 	ldw	r3,-32(fp)
 801bae8:	19000317 	ldw	r4,12(r3)
 801baec:	e0fff817 	ldw	r3,-32(fp)
 801baf0:	18c00017 	ldw	r3,0(r3)
 801baf4:	180b883a 	mov	r5,r3
 801baf8:	103ee83a 	callr	r2
 801bafc:	e0bff917 	ldw	r2,-28(fp)
 801bb00:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 801bb04:	e0bffd17 	ldw	r2,-12(fp)
 801bb08:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(cpu_sr);
  }
}
 801bb0c:	e037883a 	mov	sp,fp
 801bb10:	dfc00117 	ldw	ra,4(sp)
 801bb14:	df000017 	ldw	fp,0(sp)
 801bb18:	dec00204 	addi	sp,sp,8
 801bb1c:	f800283a 	ret

0801bb20 <alt_avalon_dma_init>:
void alt_avalon_dma_init (alt_avalon_dma_txchan* tx,
                          alt_avalon_dma_rxchan* rx,
                          void*                  base,
                          alt_u32                ic_id,
                          alt_u32                irq)
{
 801bb20:	defffa04 	addi	sp,sp,-24
 801bb24:	dfc00515 	stw	ra,20(sp)
 801bb28:	df000415 	stw	fp,16(sp)
 801bb2c:	df000404 	addi	fp,sp,16
 801bb30:	e13ffc15 	stw	r4,-16(fp)
 801bb34:	e17ffd15 	stw	r5,-12(fp)
 801bb38:	e1bffe15 	stw	r6,-8(fp)
 801bb3c:	e1ffff15 	stw	r7,-4(fp)

  /* Halt any current transactions (reset the device) */
  IOWR_ALTERA_AVALON_DMA_CONTROL (base, ALTERA_AVALON_DMA_CONTROL_SOFTWARERESET_MSK);
 801bb40:	e0bffe17 	ldw	r2,-8(fp)
 801bb44:	10800604 	addi	r2,r2,24
 801bb48:	00c40004 	movi	r3,4096
 801bb4c:	10c00035 	stwio	r3,0(r2)
  IOWR_ALTERA_AVALON_DMA_CONTROL (base, ALTERA_AVALON_DMA_CONTROL_SOFTWARERESET_MSK);
 801bb50:	e0bffe17 	ldw	r2,-8(fp)
 801bb54:	10800604 	addi	r2,r2,24
 801bb58:	00c40004 	movi	r3,4096
 801bb5c:	10c00035 	stwio	r3,0(r2)

  /* Set the default mode of the device (32 bit block reads and writes from/to memory). */
  IOWR_ALTERA_AVALON_DMA_CONTROL (base,
 801bb60:	e0bffe17 	ldw	r2,-8(fp)
 801bb64:	10800604 	addi	r2,r2,24
 801bb68:	00c03f04 	movi	r3,252
 801bb6c:	10c00035 	stwio	r3,0(r2)
                          ALTERA_AVALON_DMA_CONTROL_REEN_MSK      |
                          ALTERA_AVALON_DMA_CONTROL_WEEN_MSK      |
                          ALTERA_AVALON_DMA_CONTROL_LEEN_MSK);

  /* Clear any pending interrupts and the DONE flag */
  IOWR_ALTERA_AVALON_DMA_STATUS (base, 0);
 801bb70:	0007883a 	mov	r3,zero
 801bb74:	e0bffe17 	ldw	r2,-8(fp)
 801bb78:	10c00035 	stwio	r3,0(r2)
   * system.
   */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  if (alt_ic_isr_register(ic_id, irq, alt_avalon_dma_irq, tx->priv, 0x0) >= 0)
#else
  if (alt_irq_register (irq, tx->priv, alt_avalon_dma_irq) >= 0)
 801bb7c:	e0bffc17 	ldw	r2,-16(fp)
 801bb80:	10800617 	ldw	r2,24(r2)
 801bb84:	e1000217 	ldw	r4,8(fp)
 801bb88:	100b883a 	mov	r5,r2
 801bb8c:	018200b4 	movhi	r6,2050
 801bb90:	31ae5804 	addi	r6,r6,-18080
 801bb94:	801ceb80 	call	801ceb8 <alt_irq_register>
 801bb98:	10000616 	blt	r2,zero,801bbb4 <alt_avalon_dma_init+0x94>
#endif  
  {
    alt_dma_txchan_reg (&tx->dev);
 801bb9c:	e0bffc17 	ldw	r2,-16(fp)
 801bba0:	1009883a 	mov	r4,r2
 801bba4:	801b0140 	call	801b014 <alt_dma_txchan_reg>
    alt_dma_rxchan_reg (&rx->dev);
 801bba8:	e0bffd17 	ldw	r2,-12(fp)
 801bbac:	1009883a 	mov	r4,r2
 801bbb0:	801b04c0 	call	801b04c <alt_dma_rxchan_reg>
  }
}
 801bbb4:	e037883a 	mov	sp,fp
 801bbb8:	dfc00117 	ldw	ra,4(sp)
 801bbbc:	df000017 	ldw	fp,0(sp)
 801bbc0:	dec00204 	addi	sp,sp,8
 801bbc4:	f800283a 	ret

0801bbc8 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
 801bbc8:	defffa04 	addi	sp,sp,-24
 801bbcc:	dfc00515 	stw	ra,20(sp)
 801bbd0:	df000415 	stw	fp,16(sp)
 801bbd4:	df000404 	addi	fp,sp,16
 801bbd8:	e13ffd15 	stw	r4,-12(fp)
 801bbdc:	e17ffe15 	stw	r5,-8(fp)
 801bbe0:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 801bbe4:	e0bffd17 	ldw	r2,-12(fp)
 801bbe8:	10800017 	ldw	r2,0(r2)
 801bbec:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
 801bbf0:	e0bffc17 	ldw	r2,-16(fp)
 801bbf4:	10c00a04 	addi	r3,r2,40
 801bbf8:	e0bffd17 	ldw	r2,-12(fp)
 801bbfc:	10800217 	ldw	r2,8(r2)
 801bc00:	1809883a 	mov	r4,r3
 801bc04:	e17ffe17 	ldw	r5,-8(fp)
 801bc08:	e1bfff17 	ldw	r6,-4(fp)
 801bc0c:	100f883a 	mov	r7,r2
 801bc10:	801c1e80 	call	801c1e8 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
 801bc14:	e037883a 	mov	sp,fp
 801bc18:	dfc00117 	ldw	ra,4(sp)
 801bc1c:	df000017 	ldw	fp,0(sp)
 801bc20:	dec00204 	addi	sp,sp,8
 801bc24:	f800283a 	ret

0801bc28 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
 801bc28:	defffa04 	addi	sp,sp,-24
 801bc2c:	dfc00515 	stw	ra,20(sp)
 801bc30:	df000415 	stw	fp,16(sp)
 801bc34:	df000404 	addi	fp,sp,16
 801bc38:	e13ffd15 	stw	r4,-12(fp)
 801bc3c:	e17ffe15 	stw	r5,-8(fp)
 801bc40:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 801bc44:	e0bffd17 	ldw	r2,-12(fp)
 801bc48:	10800017 	ldw	r2,0(r2)
 801bc4c:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
 801bc50:	e0bffc17 	ldw	r2,-16(fp)
 801bc54:	10c00a04 	addi	r3,r2,40
 801bc58:	e0bffd17 	ldw	r2,-12(fp)
 801bc5c:	10800217 	ldw	r2,8(r2)
 801bc60:	1809883a 	mov	r4,r3
 801bc64:	e17ffe17 	ldw	r5,-8(fp)
 801bc68:	e1bfff17 	ldw	r6,-4(fp)
 801bc6c:	100f883a 	mov	r7,r2
 801bc70:	801c3f40 	call	801c3f4 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
 801bc74:	e037883a 	mov	sp,fp
 801bc78:	dfc00117 	ldw	ra,4(sp)
 801bc7c:	df000017 	ldw	fp,0(sp)
 801bc80:	dec00204 	addi	sp,sp,8
 801bc84:	f800283a 	ret

0801bc88 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
 801bc88:	defffc04 	addi	sp,sp,-16
 801bc8c:	dfc00315 	stw	ra,12(sp)
 801bc90:	df000215 	stw	fp,8(sp)
 801bc94:	df000204 	addi	fp,sp,8
 801bc98:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 801bc9c:	e0bfff17 	ldw	r2,-4(fp)
 801bca0:	10800017 	ldw	r2,0(r2)
 801bca4:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
 801bca8:	e0bffe17 	ldw	r2,-8(fp)
 801bcac:	10c00a04 	addi	r3,r2,40
 801bcb0:	e0bfff17 	ldw	r2,-4(fp)
 801bcb4:	10800217 	ldw	r2,8(r2)
 801bcb8:	1809883a 	mov	r4,r3
 801bcbc:	100b883a 	mov	r5,r2
 801bcc0:	801c0940 	call	801c094 <altera_avalon_jtag_uart_close>
}
 801bcc4:	e037883a 	mov	sp,fp
 801bcc8:	dfc00117 	ldw	ra,4(sp)
 801bccc:	df000017 	ldw	fp,0(sp)
 801bcd0:	dec00204 	addi	sp,sp,8
 801bcd4:	f800283a 	ret

0801bcd8 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
 801bcd8:	defffa04 	addi	sp,sp,-24
 801bcdc:	dfc00515 	stw	ra,20(sp)
 801bce0:	df000415 	stw	fp,16(sp)
 801bce4:	df000404 	addi	fp,sp,16
 801bce8:	e13ffd15 	stw	r4,-12(fp)
 801bcec:	e17ffe15 	stw	r5,-8(fp)
 801bcf0:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
 801bcf4:	e0bffd17 	ldw	r2,-12(fp)
 801bcf8:	10800017 	ldw	r2,0(r2)
 801bcfc:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
 801bd00:	e0bffc17 	ldw	r2,-16(fp)
 801bd04:	10800a04 	addi	r2,r2,40
 801bd08:	1009883a 	mov	r4,r2
 801bd0c:	e17ffe17 	ldw	r5,-8(fp)
 801bd10:	e1bfff17 	ldw	r6,-4(fp)
 801bd14:	801c0fc0 	call	801c0fc <altera_avalon_jtag_uart_ioctl>
}
 801bd18:	e037883a 	mov	sp,fp
 801bd1c:	dfc00117 	ldw	ra,4(sp)
 801bd20:	df000017 	ldw	fp,0(sp)
 801bd24:	dec00204 	addi	sp,sp,8
 801bd28:	f800283a 	ret

0801bd2c <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
 801bd2c:	defffb04 	addi	sp,sp,-20
 801bd30:	dfc00415 	stw	ra,16(sp)
 801bd34:	df000315 	stw	fp,12(sp)
 801bd38:	df000304 	addi	fp,sp,12
 801bd3c:	e13ffd15 	stw	r4,-12(fp)
 801bd40:	e17ffe15 	stw	r5,-8(fp)
 801bd44:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 801bd48:	e0bffd17 	ldw	r2,-12(fp)
 801bd4c:	00c00044 	movi	r3,1
 801bd50:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
 801bd54:	e0bffd17 	ldw	r2,-12(fp)
 801bd58:	10800017 	ldw	r2,0(r2)
 801bd5c:	10800104 	addi	r2,r2,4
 801bd60:	1007883a 	mov	r3,r2
 801bd64:	e0bffd17 	ldw	r2,-12(fp)
 801bd68:	10800817 	ldw	r2,32(r2)
 801bd6c:	18800035 	stwio	r2,0(r3)
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
                      sp, NULL);
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
 801bd70:	e0bfff17 	ldw	r2,-4(fp)
 801bd74:	1009883a 	mov	r4,r2
 801bd78:	e17ffd17 	ldw	r5,-12(fp)
 801bd7c:	018200b4 	movhi	r6,2050
 801bd80:	31af7904 	addi	r6,r6,-16924
 801bd84:	801ceb80 	call	801ceb8 <alt_irq_register>
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
 801bd88:	e0bffd17 	ldw	r2,-12(fp)
 801bd8c:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
 801bd90:	e0bffd17 	ldw	r2,-12(fp)
 801bd94:	10c00204 	addi	r3,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
 801bd98:	008200b4 	movhi	r2,2050
 801bd9c:	1087eb04 	addi	r2,r2,8108
 801bda0:	10800017 	ldw	r2,0(r2)
 801bda4:	1809883a 	mov	r4,r3
 801bda8:	100b883a 	mov	r5,r2
 801bdac:	018200b4 	movhi	r6,2050
 801bdb0:	31affb04 	addi	r6,r6,-16404
 801bdb4:	e1fffd17 	ldw	r7,-12(fp)
 801bdb8:	801c9980 	call	801c998 <alt_alarm_start>
 801bdbc:	1000040e 	bge	r2,zero,801bdd0 <altera_avalon_jtag_uart_init+0xa4>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
 801bdc0:	e0fffd17 	ldw	r3,-12(fp)
 801bdc4:	00a00034 	movhi	r2,32768
 801bdc8:	10bfffc4 	addi	r2,r2,-1
 801bdcc:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
 801bdd0:	e037883a 	mov	sp,fp
 801bdd4:	dfc00117 	ldw	ra,4(sp)
 801bdd8:	df000017 	ldw	fp,0(sp)
 801bddc:	dec00204 	addi	sp,sp,8
 801bde0:	f800283a 	ret

0801bde4 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
 801bde4:	defff704 	addi	sp,sp,-36
 801bde8:	df000815 	stw	fp,32(sp)
 801bdec:	df000804 	addi	fp,sp,32
 801bdf0:	e13ffe15 	stw	r4,-8(fp)
 801bdf4:	e17fff15 	stw	r5,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
 801bdf8:	e0bffe17 	ldw	r2,-8(fp)
 801bdfc:	e0bffa15 	stw	r2,-24(fp)
  unsigned int base = sp->base;
 801be00:	e0bffa17 	ldw	r2,-24(fp)
 801be04:	10800017 	ldw	r2,0(r2)
 801be08:	e0bffb15 	stw	r2,-20(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 801be0c:	e0bffb17 	ldw	r2,-20(fp)
 801be10:	10800104 	addi	r2,r2,4
 801be14:	10800037 	ldwio	r2,0(r2)
 801be18:	e0bffc15 	stw	r2,-16(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
 801be1c:	e0bffc17 	ldw	r2,-16(fp)
 801be20:	1080c00c 	andi	r2,r2,768
 801be24:	1000011e 	bne	r2,zero,801be2c <altera_avalon_jtag_uart_irq+0x48>
      break;
 801be28:	00006c06 	br	801bfdc <altera_avalon_jtag_uart_irq+0x1f8>

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
 801be2c:	e0bffc17 	ldw	r2,-16(fp)
 801be30:	1080400c 	andi	r2,r2,256
 801be34:	10003426 	beq	r2,zero,801bf08 <altera_avalon_jtag_uart_irq+0x124>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
 801be38:	00800074 	movhi	r2,1
 801be3c:	e0bff815 	stw	r2,-32(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 801be40:	e0bffa17 	ldw	r2,-24(fp)
 801be44:	10800a17 	ldw	r2,40(r2)
 801be48:	10800044 	addi	r2,r2,1
 801be4c:	1081ffcc 	andi	r2,r2,2047
 801be50:	e0bffd15 	stw	r2,-12(fp)
        if (next == sp->rx_out)
 801be54:	e0bffa17 	ldw	r2,-24(fp)
 801be58:	10c00b17 	ldw	r3,44(r2)
 801be5c:	e0bffd17 	ldw	r2,-12(fp)
 801be60:	1880011e 	bne	r3,r2,801be68 <altera_avalon_jtag_uart_irq+0x84>
          break;
 801be64:	00001606 	br	801bec0 <altera_avalon_jtag_uart_irq+0xdc>

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
 801be68:	e0bffb17 	ldw	r2,-20(fp)
 801be6c:	10800037 	ldwio	r2,0(r2)
 801be70:	e0bff815 	stw	r2,-32(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
 801be74:	e0bff817 	ldw	r2,-32(fp)
 801be78:	10a0000c 	andi	r2,r2,32768
 801be7c:	1000011e 	bne	r2,zero,801be84 <altera_avalon_jtag_uart_irq+0xa0>
          break;
 801be80:	00000f06 	br	801bec0 <altera_avalon_jtag_uart_irq+0xdc>

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
 801be84:	e0bffa17 	ldw	r2,-24(fp)
 801be88:	10800a17 	ldw	r2,40(r2)
 801be8c:	e0fff817 	ldw	r3,-32(fp)
 801be90:	1809883a 	mov	r4,r3
 801be94:	e0fffa17 	ldw	r3,-24(fp)
 801be98:	1885883a 	add	r2,r3,r2
 801be9c:	10800e04 	addi	r2,r2,56
 801bea0:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 801bea4:	e0bffa17 	ldw	r2,-24(fp)
 801bea8:	10800a17 	ldw	r2,40(r2)
 801beac:	10800044 	addi	r2,r2,1
 801beb0:	10c1ffcc 	andi	r3,r2,2047
 801beb4:	e0bffa17 	ldw	r2,-24(fp)
 801beb8:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
 801bebc:	003fe006 	br	801be40 <__alt_data_end+0xfc01be40>

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
 801bec0:	e0bff817 	ldw	r2,-32(fp)
 801bec4:	10bfffec 	andhi	r2,r2,65535
 801bec8:	10000f26 	beq	r2,zero,801bf08 <altera_avalon_jtag_uart_irq+0x124>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 801becc:	e0bffa17 	ldw	r2,-24(fp)
 801bed0:	10c00817 	ldw	r3,32(r2)
 801bed4:	00bfff84 	movi	r2,-2
 801bed8:	1886703a 	and	r3,r3,r2
 801bedc:	e0bffa17 	ldw	r2,-24(fp)
 801bee0:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
 801bee4:	e0bffb17 	ldw	r2,-20(fp)
 801bee8:	10800104 	addi	r2,r2,4
 801beec:	1007883a 	mov	r3,r2
 801bef0:	e0bffa17 	ldw	r2,-24(fp)
 801bef4:	10800817 	ldw	r2,32(r2)
 801bef8:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 801befc:	e0bffb17 	ldw	r2,-20(fp)
 801bf00:	10800104 	addi	r2,r2,4
 801bf04:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
 801bf08:	e0bffc17 	ldw	r2,-16(fp)
 801bf0c:	1080800c 	andi	r2,r2,512
 801bf10:	10003126 	beq	r2,zero,801bfd8 <altera_avalon_jtag_uart_irq+0x1f4>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
 801bf14:	e0bffc17 	ldw	r2,-16(fp)
 801bf18:	1004d43a 	srli	r2,r2,16
 801bf1c:	e0bff915 	stw	r2,-28(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
 801bf20:	00001406 	br	801bf74 <altera_avalon_jtag_uart_irq+0x190>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
 801bf24:	e0bffb17 	ldw	r2,-20(fp)
 801bf28:	e0fffa17 	ldw	r3,-24(fp)
 801bf2c:	18c00d17 	ldw	r3,52(r3)
 801bf30:	e13ffa17 	ldw	r4,-24(fp)
 801bf34:	20c7883a 	add	r3,r4,r3
 801bf38:	18c20e04 	addi	r3,r3,2104
 801bf3c:	18c00003 	ldbu	r3,0(r3)
 801bf40:	18c03fcc 	andi	r3,r3,255
 801bf44:	18c0201c 	xori	r3,r3,128
 801bf48:	18ffe004 	addi	r3,r3,-128
 801bf4c:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 801bf50:	e0bffa17 	ldw	r2,-24(fp)
 801bf54:	10800d17 	ldw	r2,52(r2)
 801bf58:	10800044 	addi	r2,r2,1
 801bf5c:	10c1ffcc 	andi	r3,r2,2047
 801bf60:	e0bffa17 	ldw	r2,-24(fp)
 801bf64:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
 801bf68:	e0bff917 	ldw	r2,-28(fp)
 801bf6c:	10bfffc4 	addi	r2,r2,-1
 801bf70:	e0bff915 	stw	r2,-28(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
 801bf74:	e0bff917 	ldw	r2,-28(fp)
 801bf78:	10000526 	beq	r2,zero,801bf90 <altera_avalon_jtag_uart_irq+0x1ac>
 801bf7c:	e0bffa17 	ldw	r2,-24(fp)
 801bf80:	10c00d17 	ldw	r3,52(r2)
 801bf84:	e0bffa17 	ldw	r2,-24(fp)
 801bf88:	10800c17 	ldw	r2,48(r2)
 801bf8c:	18bfe51e 	bne	r3,r2,801bf24 <__alt_data_end+0xfc01bf24>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
 801bf90:	e0bff917 	ldw	r2,-28(fp)
 801bf94:	10001026 	beq	r2,zero,801bfd8 <altera_avalon_jtag_uart_irq+0x1f4>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 801bf98:	e0bffa17 	ldw	r2,-24(fp)
 801bf9c:	10c00817 	ldw	r3,32(r2)
 801bfa0:	00bfff44 	movi	r2,-3
 801bfa4:	1886703a 	and	r3,r3,r2
 801bfa8:	e0bffa17 	ldw	r2,-24(fp)
 801bfac:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 801bfb0:	e0bffa17 	ldw	r2,-24(fp)
 801bfb4:	10800017 	ldw	r2,0(r2)
 801bfb8:	10800104 	addi	r2,r2,4
 801bfbc:	1007883a 	mov	r3,r2
 801bfc0:	e0bffa17 	ldw	r2,-24(fp)
 801bfc4:	10800817 	ldw	r2,32(r2)
 801bfc8:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 801bfcc:	e0bffb17 	ldw	r2,-20(fp)
 801bfd0:	10800104 	addi	r2,r2,4
 801bfd4:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
 801bfd8:	003f8c06 	br	801be0c <__alt_data_end+0xfc01be0c>
}
 801bfdc:	e037883a 	mov	sp,fp
 801bfe0:	df000017 	ldw	fp,0(sp)
 801bfe4:	dec00104 	addi	sp,sp,4
 801bfe8:	f800283a 	ret

0801bfec <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
 801bfec:	defff804 	addi	sp,sp,-32
 801bff0:	df000715 	stw	fp,28(sp)
 801bff4:	df000704 	addi	fp,sp,28
 801bff8:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
 801bffc:	e0bffb17 	ldw	r2,-20(fp)
 801c000:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
 801c004:	e0bff917 	ldw	r2,-28(fp)
 801c008:	10800017 	ldw	r2,0(r2)
 801c00c:	10800104 	addi	r2,r2,4
 801c010:	10800037 	ldwio	r2,0(r2)
 801c014:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
 801c018:	e0bffa17 	ldw	r2,-24(fp)
 801c01c:	1081000c 	andi	r2,r2,1024
 801c020:	10000b26 	beq	r2,zero,801c050 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
 801c024:	e0bff917 	ldw	r2,-28(fp)
 801c028:	10800017 	ldw	r2,0(r2)
 801c02c:	10800104 	addi	r2,r2,4
 801c030:	1007883a 	mov	r3,r2
 801c034:	e0bff917 	ldw	r2,-28(fp)
 801c038:	10800817 	ldw	r2,32(r2)
 801c03c:	10810014 	ori	r2,r2,1024
 801c040:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
 801c044:	e0bff917 	ldw	r2,-28(fp)
 801c048:	10000915 	stw	zero,36(r2)
 801c04c:	00000a06 	br	801c078 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
 801c050:	e0bff917 	ldw	r2,-28(fp)
 801c054:	10c00917 	ldw	r3,36(r2)
 801c058:	00a00034 	movhi	r2,32768
 801c05c:	10bfff04 	addi	r2,r2,-4
 801c060:	10c00536 	bltu	r2,r3,801c078 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
 801c064:	e0bff917 	ldw	r2,-28(fp)
 801c068:	10800917 	ldw	r2,36(r2)
 801c06c:	10c00044 	addi	r3,r2,1
 801c070:	e0bff917 	ldw	r2,-28(fp)
 801c074:	10c00915 	stw	r3,36(r2)
 801c078:	008200b4 	movhi	r2,2050
 801c07c:	1087eb04 	addi	r2,r2,8108
 801c080:	10800017 	ldw	r2,0(r2)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
 801c084:	e037883a 	mov	sp,fp
 801c088:	df000017 	ldw	fp,0(sp)
 801c08c:	dec00104 	addi	sp,sp,4
 801c090:	f800283a 	ret

0801c094 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
 801c094:	defffd04 	addi	sp,sp,-12
 801c098:	df000215 	stw	fp,8(sp)
 801c09c:	df000204 	addi	fp,sp,8
 801c0a0:	e13ffe15 	stw	r4,-8(fp)
 801c0a4:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 801c0a8:	00000506 	br	801c0c0 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
 801c0ac:	e0bfff17 	ldw	r2,-4(fp)
 801c0b0:	1090000c 	andi	r2,r2,16384
 801c0b4:	10000226 	beq	r2,zero,801c0c0 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
 801c0b8:	00bffd44 	movi	r2,-11
 801c0bc:	00000b06 	br	801c0ec <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 801c0c0:	e0bffe17 	ldw	r2,-8(fp)
 801c0c4:	10c00d17 	ldw	r3,52(r2)
 801c0c8:	e0bffe17 	ldw	r2,-8(fp)
 801c0cc:	10800c17 	ldw	r2,48(r2)
 801c0d0:	18800526 	beq	r3,r2,801c0e8 <altera_avalon_jtag_uart_close+0x54>
 801c0d4:	e0bffe17 	ldw	r2,-8(fp)
 801c0d8:	10c00917 	ldw	r3,36(r2)
 801c0dc:	e0bffe17 	ldw	r2,-8(fp)
 801c0e0:	10800117 	ldw	r2,4(r2)
 801c0e4:	18bff136 	bltu	r3,r2,801c0ac <__alt_data_end+0xfc01c0ac>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
 801c0e8:	0005883a 	mov	r2,zero
}
 801c0ec:	e037883a 	mov	sp,fp
 801c0f0:	df000017 	ldw	fp,0(sp)
 801c0f4:	dec00104 	addi	sp,sp,4
 801c0f8:	f800283a 	ret

0801c0fc <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
 801c0fc:	defffa04 	addi	sp,sp,-24
 801c100:	df000515 	stw	fp,20(sp)
 801c104:	df000504 	addi	fp,sp,20
 801c108:	e13ffd15 	stw	r4,-12(fp)
 801c10c:	e17ffe15 	stw	r5,-8(fp)
 801c110:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
 801c114:	00bff9c4 	movi	r2,-25
 801c118:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
 801c11c:	e0bffe17 	ldw	r2,-8(fp)
 801c120:	10da8060 	cmpeqi	r3,r2,27137
 801c124:	1800031e 	bne	r3,zero,801c134 <altera_avalon_jtag_uart_ioctl+0x38>
 801c128:	109a80a0 	cmpeqi	r2,r2,27138
 801c12c:	1000191e 	bne	r2,zero,801c194 <altera_avalon_jtag_uart_ioctl+0x98>
      rc = 0;
    }
    break;

  default:
    break;
 801c130:	00002806 	br	801c1d4 <altera_avalon_jtag_uart_ioctl+0xd8>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
 801c134:	e0bffd17 	ldw	r2,-12(fp)
 801c138:	10c00117 	ldw	r3,4(r2)
 801c13c:	00a00034 	movhi	r2,32768
 801c140:	10bfffc4 	addi	r2,r2,-1
 801c144:	18801226 	beq	r3,r2,801c190 <altera_avalon_jtag_uart_ioctl+0x94>
    {
      int timeout = *((int *)arg);
 801c148:	e0bfff17 	ldw	r2,-4(fp)
 801c14c:	10800017 	ldw	r2,0(r2)
 801c150:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
 801c154:	e0bffc17 	ldw	r2,-16(fp)
 801c158:	10800090 	cmplti	r2,r2,2
 801c15c:	1000061e 	bne	r2,zero,801c178 <altera_avalon_jtag_uart_ioctl+0x7c>
 801c160:	e0fffc17 	ldw	r3,-16(fp)
 801c164:	00a00034 	movhi	r2,32768
 801c168:	10bfffc4 	addi	r2,r2,-1
 801c16c:	18800226 	beq	r3,r2,801c178 <altera_avalon_jtag_uart_ioctl+0x7c>
 801c170:	e0bffc17 	ldw	r2,-16(fp)
 801c174:	00000206 	br	801c180 <altera_avalon_jtag_uart_ioctl+0x84>
 801c178:	00a00034 	movhi	r2,32768
 801c17c:	10bfff84 	addi	r2,r2,-2
 801c180:	e0fffd17 	ldw	r3,-12(fp)
 801c184:	18800115 	stw	r2,4(r3)
      rc = 0;
 801c188:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
 801c18c:	00001106 	br	801c1d4 <altera_avalon_jtag_uart_ioctl+0xd8>
 801c190:	00001006 	br	801c1d4 <altera_avalon_jtag_uart_ioctl+0xd8>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
 801c194:	e0bffd17 	ldw	r2,-12(fp)
 801c198:	10c00117 	ldw	r3,4(r2)
 801c19c:	00a00034 	movhi	r2,32768
 801c1a0:	10bfffc4 	addi	r2,r2,-1
 801c1a4:	18800a26 	beq	r3,r2,801c1d0 <altera_avalon_jtag_uart_ioctl+0xd4>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
 801c1a8:	e0bffd17 	ldw	r2,-12(fp)
 801c1ac:	10c00917 	ldw	r3,36(r2)
 801c1b0:	e0bffd17 	ldw	r2,-12(fp)
 801c1b4:	10800117 	ldw	r2,4(r2)
 801c1b8:	1885803a 	cmpltu	r2,r3,r2
 801c1bc:	10c03fcc 	andi	r3,r2,255
 801c1c0:	e0bfff17 	ldw	r2,-4(fp)
 801c1c4:	10c00015 	stw	r3,0(r2)
      rc = 0;
 801c1c8:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
 801c1cc:	00000006 	br	801c1d0 <altera_avalon_jtag_uart_ioctl+0xd4>
 801c1d0:	0001883a 	nop

  default:
    break;
  }

  return rc;
 801c1d4:	e0bffb17 	ldw	r2,-20(fp)
}
 801c1d8:	e037883a 	mov	sp,fp
 801c1dc:	df000017 	ldw	fp,0(sp)
 801c1e0:	dec00104 	addi	sp,sp,4
 801c1e4:	f800283a 	ret

0801c1e8 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
 801c1e8:	defff304 	addi	sp,sp,-52
 801c1ec:	dfc00c15 	stw	ra,48(sp)
 801c1f0:	df000b15 	stw	fp,44(sp)
 801c1f4:	df000b04 	addi	fp,sp,44
 801c1f8:	e13ffc15 	stw	r4,-16(fp)
 801c1fc:	e17ffd15 	stw	r5,-12(fp)
 801c200:	e1bffe15 	stw	r6,-8(fp)
 801c204:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
 801c208:	e0bffd17 	ldw	r2,-12(fp)
 801c20c:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 801c210:	00004906 	br	801c338 <altera_avalon_jtag_uart_read+0x150>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
 801c214:	e0bffc17 	ldw	r2,-16(fp)
 801c218:	10800a17 	ldw	r2,40(r2)
 801c21c:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
 801c220:	e0bffc17 	ldw	r2,-16(fp)
 801c224:	10800b17 	ldw	r2,44(r2)
 801c228:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
 801c22c:	e0fff717 	ldw	r3,-36(fp)
 801c230:	e0bff817 	ldw	r2,-32(fp)
 801c234:	18800536 	bltu	r3,r2,801c24c <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
 801c238:	e0fff717 	ldw	r3,-36(fp)
 801c23c:	e0bff817 	ldw	r2,-32(fp)
 801c240:	1885c83a 	sub	r2,r3,r2
 801c244:	e0bff615 	stw	r2,-40(fp)
 801c248:	00000406 	br	801c25c <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
 801c24c:	00c20004 	movi	r3,2048
 801c250:	e0bff817 	ldw	r2,-32(fp)
 801c254:	1885c83a 	sub	r2,r3,r2
 801c258:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
 801c25c:	e0bff617 	ldw	r2,-40(fp)
 801c260:	1000011e 	bne	r2,zero,801c268 <altera_avalon_jtag_uart_read+0x80>
        break; /* No more data available */
 801c264:	00001d06 	br	801c2dc <altera_avalon_jtag_uart_read+0xf4>

      if (n > space)
 801c268:	e0fffe17 	ldw	r3,-8(fp)
 801c26c:	e0bff617 	ldw	r2,-40(fp)
 801c270:	1880022e 	bgeu	r3,r2,801c27c <altera_avalon_jtag_uart_read+0x94>
        n = space;
 801c274:	e0bffe17 	ldw	r2,-8(fp)
 801c278:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
 801c27c:	e0bff817 	ldw	r2,-32(fp)
 801c280:	10800e04 	addi	r2,r2,56
 801c284:	e0fffc17 	ldw	r3,-16(fp)
 801c288:	1885883a 	add	r2,r3,r2
 801c28c:	e13ff517 	ldw	r4,-44(fp)
 801c290:	100b883a 	mov	r5,r2
 801c294:	e1bff617 	ldw	r6,-40(fp)
 801c298:	800e0e40 	call	800e0e4 <memcpy>
      ptr   += n;
 801c29c:	e0fff517 	ldw	r3,-44(fp)
 801c2a0:	e0bff617 	ldw	r2,-40(fp)
 801c2a4:	1885883a 	add	r2,r3,r2
 801c2a8:	e0bff515 	stw	r2,-44(fp)
      space -= n;
 801c2ac:	e0fffe17 	ldw	r3,-8(fp)
 801c2b0:	e0bff617 	ldw	r2,-40(fp)
 801c2b4:	1885c83a 	sub	r2,r3,r2
 801c2b8:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 801c2bc:	e0fff817 	ldw	r3,-32(fp)
 801c2c0:	e0bff617 	ldw	r2,-40(fp)
 801c2c4:	1885883a 	add	r2,r3,r2
 801c2c8:	10c1ffcc 	andi	r3,r2,2047
 801c2cc:	e0bffc17 	ldw	r2,-16(fp)
 801c2d0:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
 801c2d4:	e0bffe17 	ldw	r2,-8(fp)
 801c2d8:	00bfce16 	blt	zero,r2,801c214 <__alt_data_end+0xfc01c214>

    /* If we read any data then return it */
    if (ptr != buffer)
 801c2dc:	e0fff517 	ldw	r3,-44(fp)
 801c2e0:	e0bffd17 	ldw	r2,-12(fp)
 801c2e4:	18800126 	beq	r3,r2,801c2ec <altera_avalon_jtag_uart_read+0x104>
      break;
 801c2e8:	00001506 	br	801c340 <altera_avalon_jtag_uart_read+0x158>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
 801c2ec:	e0bfff17 	ldw	r2,-4(fp)
 801c2f0:	1090000c 	andi	r2,r2,16384
 801c2f4:	10000126 	beq	r2,zero,801c2fc <altera_avalon_jtag_uart_read+0x114>
      break;
 801c2f8:	00001106 	br	801c340 <altera_avalon_jtag_uart_read+0x158>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
 801c2fc:	0001883a 	nop
 801c300:	e0bffc17 	ldw	r2,-16(fp)
 801c304:	10c00a17 	ldw	r3,40(r2)
 801c308:	e0bff717 	ldw	r2,-36(fp)
 801c30c:	1880051e 	bne	r3,r2,801c324 <altera_avalon_jtag_uart_read+0x13c>
 801c310:	e0bffc17 	ldw	r2,-16(fp)
 801c314:	10c00917 	ldw	r3,36(r2)
 801c318:	e0bffc17 	ldw	r2,-16(fp)
 801c31c:	10800117 	ldw	r2,4(r2)
 801c320:	18bff736 	bltu	r3,r2,801c300 <__alt_data_end+0xfc01c300>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
 801c324:	e0bffc17 	ldw	r2,-16(fp)
 801c328:	10c00a17 	ldw	r3,40(r2)
 801c32c:	e0bff717 	ldw	r2,-36(fp)
 801c330:	1880011e 	bne	r3,r2,801c338 <altera_avalon_jtag_uart_read+0x150>
      break;
 801c334:	00000206 	br	801c340 <altera_avalon_jtag_uart_read+0x158>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 801c338:	e0bffe17 	ldw	r2,-8(fp)
 801c33c:	00bfb516 	blt	zero,r2,801c214 <__alt_data_end+0xfc01c214>
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
 801c340:	e0fff517 	ldw	r3,-44(fp)
 801c344:	e0bffd17 	ldw	r2,-12(fp)
 801c348:	18801826 	beq	r3,r2,801c3ac <altera_avalon_jtag_uart_read+0x1c4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 801c34c:	0005303a 	rdctl	r2,status
 801c350:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 801c354:	e0fffa17 	ldw	r3,-24(fp)
 801c358:	00bfff84 	movi	r2,-2
 801c35c:	1884703a 	and	r2,r3,r2
 801c360:	1001703a 	wrctl	status,r2
  
  return context;
 801c364:	e0bffa17 	ldw	r2,-24(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
 801c368:	e0bff915 	stw	r2,-28(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 801c36c:	e0bffc17 	ldw	r2,-16(fp)
 801c370:	10800817 	ldw	r2,32(r2)
 801c374:	10c00054 	ori	r3,r2,1
 801c378:	e0bffc17 	ldw	r2,-16(fp)
 801c37c:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 801c380:	e0bffc17 	ldw	r2,-16(fp)
 801c384:	10800017 	ldw	r2,0(r2)
 801c388:	10800104 	addi	r2,r2,4
 801c38c:	1007883a 	mov	r3,r2
 801c390:	e0bffc17 	ldw	r2,-16(fp)
 801c394:	10800817 	ldw	r2,32(r2)
 801c398:	18800035 	stwio	r2,0(r3)
 801c39c:	e0bff917 	ldw	r2,-28(fp)
 801c3a0:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 801c3a4:	e0bffb17 	ldw	r2,-20(fp)
 801c3a8:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
 801c3ac:	e0fff517 	ldw	r3,-44(fp)
 801c3b0:	e0bffd17 	ldw	r2,-12(fp)
 801c3b4:	18800426 	beq	r3,r2,801c3c8 <altera_avalon_jtag_uart_read+0x1e0>
    return ptr - buffer;
 801c3b8:	e0fff517 	ldw	r3,-44(fp)
 801c3bc:	e0bffd17 	ldw	r2,-12(fp)
 801c3c0:	1885c83a 	sub	r2,r3,r2
 801c3c4:	00000606 	br	801c3e0 <altera_avalon_jtag_uart_read+0x1f8>
  else if (flags & O_NONBLOCK)
 801c3c8:	e0bfff17 	ldw	r2,-4(fp)
 801c3cc:	1090000c 	andi	r2,r2,16384
 801c3d0:	10000226 	beq	r2,zero,801c3dc <altera_avalon_jtag_uart_read+0x1f4>
    return -EWOULDBLOCK;
 801c3d4:	00bffd44 	movi	r2,-11
 801c3d8:	00000106 	br	801c3e0 <altera_avalon_jtag_uart_read+0x1f8>
  else
    return -EIO;
 801c3dc:	00bffec4 	movi	r2,-5
}
 801c3e0:	e037883a 	mov	sp,fp
 801c3e4:	dfc00117 	ldw	ra,4(sp)
 801c3e8:	df000017 	ldw	fp,0(sp)
 801c3ec:	dec00204 	addi	sp,sp,8
 801c3f0:	f800283a 	ret

0801c3f4 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
 801c3f4:	defff304 	addi	sp,sp,-52
 801c3f8:	dfc00c15 	stw	ra,48(sp)
 801c3fc:	df000b15 	stw	fp,44(sp)
 801c400:	df000b04 	addi	fp,sp,44
 801c404:	e13ffc15 	stw	r4,-16(fp)
 801c408:	e17ffd15 	stw	r5,-12(fp)
 801c40c:	e1bffe15 	stw	r6,-8(fp)
 801c410:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
 801c414:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
 801c418:	e0bffd17 	ldw	r2,-12(fp)
 801c41c:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 801c420:	00003806 	br	801c504 <altera_avalon_jtag_uart_write+0x110>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
 801c424:	e0bffc17 	ldw	r2,-16(fp)
 801c428:	10800c17 	ldw	r2,48(r2)
 801c42c:	e0bff815 	stw	r2,-32(fp)
      out = sp->tx_out;
 801c430:	e0bffc17 	ldw	r2,-16(fp)
 801c434:	10800d17 	ldw	r2,52(r2)
 801c438:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
 801c43c:	e0fff817 	ldw	r3,-32(fp)
 801c440:	e0bff517 	ldw	r2,-44(fp)
 801c444:	1880062e 	bgeu	r3,r2,801c460 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
 801c448:	e0fff517 	ldw	r3,-44(fp)
 801c44c:	e0bff817 	ldw	r2,-32(fp)
 801c450:	1885c83a 	sub	r2,r3,r2
 801c454:	10bfffc4 	addi	r2,r2,-1
 801c458:	e0bff615 	stw	r2,-40(fp)
 801c45c:	00000b06 	br	801c48c <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
 801c460:	e0bff517 	ldw	r2,-44(fp)
 801c464:	10000526 	beq	r2,zero,801c47c <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
 801c468:	00c20004 	movi	r3,2048
 801c46c:	e0bff817 	ldw	r2,-32(fp)
 801c470:	1885c83a 	sub	r2,r3,r2
 801c474:	e0bff615 	stw	r2,-40(fp)
 801c478:	00000406 	br	801c48c <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
 801c47c:	00c1ffc4 	movi	r3,2047
 801c480:	e0bff817 	ldw	r2,-32(fp)
 801c484:	1885c83a 	sub	r2,r3,r2
 801c488:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
 801c48c:	e0bff617 	ldw	r2,-40(fp)
 801c490:	1000011e 	bne	r2,zero,801c498 <altera_avalon_jtag_uart_write+0xa4>
        break;
 801c494:	00001d06 	br	801c50c <altera_avalon_jtag_uart_write+0x118>

      if (n > count)
 801c498:	e0fffe17 	ldw	r3,-8(fp)
 801c49c:	e0bff617 	ldw	r2,-40(fp)
 801c4a0:	1880022e 	bgeu	r3,r2,801c4ac <altera_avalon_jtag_uart_write+0xb8>
        n = count;
 801c4a4:	e0bffe17 	ldw	r2,-8(fp)
 801c4a8:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
 801c4ac:	e0bff817 	ldw	r2,-32(fp)
 801c4b0:	10820e04 	addi	r2,r2,2104
 801c4b4:	e0fffc17 	ldw	r3,-16(fp)
 801c4b8:	1885883a 	add	r2,r3,r2
 801c4bc:	1009883a 	mov	r4,r2
 801c4c0:	e17ffd17 	ldw	r5,-12(fp)
 801c4c4:	e1bff617 	ldw	r6,-40(fp)
 801c4c8:	800e0e40 	call	800e0e4 <memcpy>
      ptr   += n;
 801c4cc:	e0fffd17 	ldw	r3,-12(fp)
 801c4d0:	e0bff617 	ldw	r2,-40(fp)
 801c4d4:	1885883a 	add	r2,r3,r2
 801c4d8:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
 801c4dc:	e0fffe17 	ldw	r3,-8(fp)
 801c4e0:	e0bff617 	ldw	r2,-40(fp)
 801c4e4:	1885c83a 	sub	r2,r3,r2
 801c4e8:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 801c4ec:	e0fff817 	ldw	r3,-32(fp)
 801c4f0:	e0bff617 	ldw	r2,-40(fp)
 801c4f4:	1885883a 	add	r2,r3,r2
 801c4f8:	10c1ffcc 	andi	r3,r2,2047
 801c4fc:	e0bffc17 	ldw	r2,-16(fp)
 801c500:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 801c504:	e0bffe17 	ldw	r2,-8(fp)
 801c508:	00bfc616 	blt	zero,r2,801c424 <__alt_data_end+0xfc01c424>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 801c50c:	0005303a 	rdctl	r2,status
 801c510:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 801c514:	e0fffa17 	ldw	r3,-24(fp)
 801c518:	00bfff84 	movi	r2,-2
 801c51c:	1884703a 	and	r2,r3,r2
 801c520:	1001703a 	wrctl	status,r2
  
  return context;
 801c524:	e0bffa17 	ldw	r2,-24(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
 801c528:	e0bff915 	stw	r2,-28(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 801c52c:	e0bffc17 	ldw	r2,-16(fp)
 801c530:	10800817 	ldw	r2,32(r2)
 801c534:	10c00094 	ori	r3,r2,2
 801c538:	e0bffc17 	ldw	r2,-16(fp)
 801c53c:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 801c540:	e0bffc17 	ldw	r2,-16(fp)
 801c544:	10800017 	ldw	r2,0(r2)
 801c548:	10800104 	addi	r2,r2,4
 801c54c:	1007883a 	mov	r3,r2
 801c550:	e0bffc17 	ldw	r2,-16(fp)
 801c554:	10800817 	ldw	r2,32(r2)
 801c558:	18800035 	stwio	r2,0(r3)
 801c55c:	e0bff917 	ldw	r2,-28(fp)
 801c560:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 801c564:	e0bffb17 	ldw	r2,-20(fp)
 801c568:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
 801c56c:	e0bffe17 	ldw	r2,-8(fp)
 801c570:	0080120e 	bge	zero,r2,801c5bc <altera_avalon_jtag_uart_write+0x1c8>
    {
      if (flags & O_NONBLOCK)
 801c574:	e0bfff17 	ldw	r2,-4(fp)
 801c578:	1090000c 	andi	r2,r2,16384
 801c57c:	10000126 	beq	r2,zero,801c584 <altera_avalon_jtag_uart_write+0x190>
        break;
 801c580:	00001006 	br	801c5c4 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
 801c584:	0001883a 	nop
 801c588:	e0bffc17 	ldw	r2,-16(fp)
 801c58c:	10c00d17 	ldw	r3,52(r2)
 801c590:	e0bff517 	ldw	r2,-44(fp)
 801c594:	1880051e 	bne	r3,r2,801c5ac <altera_avalon_jtag_uart_write+0x1b8>
 801c598:	e0bffc17 	ldw	r2,-16(fp)
 801c59c:	10c00917 	ldw	r3,36(r2)
 801c5a0:	e0bffc17 	ldw	r2,-16(fp)
 801c5a4:	10800117 	ldw	r2,4(r2)
 801c5a8:	18bff736 	bltu	r3,r2,801c588 <__alt_data_end+0xfc01c588>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
 801c5ac:	e0bffc17 	ldw	r2,-16(fp)
 801c5b0:	10800917 	ldw	r2,36(r2)
 801c5b4:	10000126 	beq	r2,zero,801c5bc <altera_avalon_jtag_uart_write+0x1c8>
         break;
 801c5b8:	00000206 	br	801c5c4 <altera_avalon_jtag_uart_write+0x1d0>
    }
  }
  while (count > 0);
 801c5bc:	e0bffe17 	ldw	r2,-8(fp)
 801c5c0:	00bf9716 	blt	zero,r2,801c420 <__alt_data_end+0xfc01c420>
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
 801c5c4:	e0fffd17 	ldw	r3,-12(fp)
 801c5c8:	e0bff717 	ldw	r2,-36(fp)
 801c5cc:	18800426 	beq	r3,r2,801c5e0 <altera_avalon_jtag_uart_write+0x1ec>
    return ptr - start;
 801c5d0:	e0fffd17 	ldw	r3,-12(fp)
 801c5d4:	e0bff717 	ldw	r2,-36(fp)
 801c5d8:	1885c83a 	sub	r2,r3,r2
 801c5dc:	00000606 	br	801c5f8 <altera_avalon_jtag_uart_write+0x204>
  else if (flags & O_NONBLOCK)
 801c5e0:	e0bfff17 	ldw	r2,-4(fp)
 801c5e4:	1090000c 	andi	r2,r2,16384
 801c5e8:	10000226 	beq	r2,zero,801c5f4 <altera_avalon_jtag_uart_write+0x200>
    return -EWOULDBLOCK;
 801c5ec:	00bffd44 	movi	r2,-11
 801c5f0:	00000106 	br	801c5f8 <altera_avalon_jtag_uart_write+0x204>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
 801c5f4:	00bffec4 	movi	r2,-5
}
 801c5f8:	e037883a 	mov	sp,fp
 801c5fc:	dfc00117 	ldw	ra,4(sp)
 801c600:	df000017 	ldw	fp,0(sp)
 801c604:	dec00204 	addi	sp,sp,8
 801c608:	f800283a 	ret

0801c60c <alt_up_rs232_enable_read_interrupt>:
#include "altera_up_avalon_rs232.h"
#include "altera_up_avalon_rs232_regs.h"


void alt_up_rs232_enable_read_interrupt(alt_up_rs232_dev *rs232)
{
 801c60c:	defffd04 	addi	sp,sp,-12
 801c610:	df000215 	stw	fp,8(sp)
 801c614:	df000204 	addi	fp,sp,8
 801c618:	e13fff15 	stw	r4,-4(fp)
	alt_u32 ctrl_reg;
	ctrl_reg = IORD_ALT_UP_RS232_CONTROL(rs232->base); 
 801c61c:	e0bfff17 	ldw	r2,-4(fp)
 801c620:	10800a17 	ldw	r2,40(r2)
 801c624:	10800104 	addi	r2,r2,4
 801c628:	10800037 	ldwio	r2,0(r2)
 801c62c:	e0bffe15 	stw	r2,-8(fp)
	// set RE to 1 while maintaining other bits the same
	ctrl_reg |= ALT_UP_RS232_CONTROL_RE_MSK;
 801c630:	e0bffe17 	ldw	r2,-8(fp)
 801c634:	10800054 	ori	r2,r2,1
 801c638:	e0bffe15 	stw	r2,-8(fp)
	IOWR_ALT_UP_RS232_CONTROL(rs232->base, ctrl_reg);
 801c63c:	e0bfff17 	ldw	r2,-4(fp)
 801c640:	10800a17 	ldw	r2,40(r2)
 801c644:	10800104 	addi	r2,r2,4
 801c648:	1007883a 	mov	r3,r2
 801c64c:	e0bffe17 	ldw	r2,-8(fp)
 801c650:	18800035 	stwio	r2,0(r3)
}
 801c654:	e037883a 	mov	sp,fp
 801c658:	df000017 	ldw	fp,0(sp)
 801c65c:	dec00104 	addi	sp,sp,4
 801c660:	f800283a 	ret

0801c664 <alt_up_rs232_disable_read_interrupt>:

void alt_up_rs232_disable_read_interrupt(alt_up_rs232_dev *rs232)
{
 801c664:	defffd04 	addi	sp,sp,-12
 801c668:	df000215 	stw	fp,8(sp)
 801c66c:	df000204 	addi	fp,sp,8
 801c670:	e13fff15 	stw	r4,-4(fp)
	alt_u32 ctrl_reg;
	ctrl_reg = IORD_ALT_UP_RS232_CONTROL(rs232->base); 
 801c674:	e0bfff17 	ldw	r2,-4(fp)
 801c678:	10800a17 	ldw	r2,40(r2)
 801c67c:	10800104 	addi	r2,r2,4
 801c680:	10800037 	ldwio	r2,0(r2)
 801c684:	e0bffe15 	stw	r2,-8(fp)
	// set RE to 0 while maintaining other bits the same
	ctrl_reg &= ~ALT_UP_RS232_CONTROL_RE_MSK;
 801c688:	e0fffe17 	ldw	r3,-8(fp)
 801c68c:	00bfff84 	movi	r2,-2
 801c690:	1884703a 	and	r2,r3,r2
 801c694:	e0bffe15 	stw	r2,-8(fp)
	IOWR_ALT_UP_RS232_CONTROL(rs232->base, ctrl_reg);
 801c698:	e0bfff17 	ldw	r2,-4(fp)
 801c69c:	10800a17 	ldw	r2,40(r2)
 801c6a0:	10800104 	addi	r2,r2,4
 801c6a4:	1007883a 	mov	r3,r2
 801c6a8:	e0bffe17 	ldw	r2,-8(fp)
 801c6ac:	18800035 	stwio	r2,0(r3)
}
 801c6b0:	e037883a 	mov	sp,fp
 801c6b4:	df000017 	ldw	fp,0(sp)
 801c6b8:	dec00104 	addi	sp,sp,4
 801c6bc:	f800283a 	ret

0801c6c0 <alt_up_rs232_get_used_space_in_read_FIFO>:

unsigned alt_up_rs232_get_used_space_in_read_FIFO(alt_up_rs232_dev *rs232)
{
 801c6c0:	defffd04 	addi	sp,sp,-12
 801c6c4:	df000215 	stw	fp,8(sp)
 801c6c8:	df000204 	addi	fp,sp,8
 801c6cc:	e13fff15 	stw	r4,-4(fp)
	alt_u16 ravail = 0;
 801c6d0:	e03ffe0d 	sth	zero,-8(fp)
	// we can only read the 16 bits for RAVAIL --- a read of DATA will discard the data
//	ravail = IORD_16DIRECT(IOADDR_ALT_UP_RS232_DATA(rs232->base), 2); 
	ravail = IORD_ALT_UP_RS232_RAVAIL(rs232->base); 
 801c6d4:	e0bfff17 	ldw	r2,-4(fp)
 801c6d8:	10800a17 	ldw	r2,40(r2)
 801c6dc:	10800084 	addi	r2,r2,2
 801c6e0:	1080002b 	ldhuio	r2,0(r2)
 801c6e4:	10bfffcc 	andi	r2,r2,65535
 801c6e8:	e0bffe0d 	sth	r2,-8(fp)
//	return ravail;
	return (ravail & ALT_UP_RS232_RAVAIL_MSK) >> ALT_UP_RS232_RAVAIL_OFST;
 801c6ec:	e0bffe0b 	ldhu	r2,-8(fp)
}
 801c6f0:	e037883a 	mov	sp,fp
 801c6f4:	df000017 	ldw	fp,0(sp)
 801c6f8:	dec00104 	addi	sp,sp,4
 801c6fc:	f800283a 	ret

0801c700 <alt_up_rs232_get_available_space_in_write_FIFO>:

unsigned alt_up_rs232_get_available_space_in_write_FIFO(alt_up_rs232_dev *rs232)
{
 801c700:	defffd04 	addi	sp,sp,-12
 801c704:	df000215 	stw	fp,8(sp)
 801c708:	df000204 	addi	fp,sp,8
 801c70c:	e13fff15 	stw	r4,-4(fp)
	alt_u32 ctrl_reg;
	ctrl_reg = IORD_ALT_UP_RS232_CONTROL(rs232->base); 
 801c710:	e0bfff17 	ldw	r2,-4(fp)
 801c714:	10800a17 	ldw	r2,40(r2)
 801c718:	10800104 	addi	r2,r2,4
 801c71c:	10800037 	ldwio	r2,0(r2)
 801c720:	e0bffe15 	stw	r2,-8(fp)
	return (ctrl_reg & ALT_UP_RS232_CONTROL_WSPACE_MSK) >> ALT_UP_RS232_CONTROL_WSPACE_OFST;
 801c724:	e0bffe17 	ldw	r2,-8(fp)
 801c728:	1004d43a 	srli	r2,r2,16
}
 801c72c:	e037883a 	mov	sp,fp
 801c730:	df000017 	ldw	fp,0(sp)
 801c734:	dec00104 	addi	sp,sp,4
 801c738:	f800283a 	ret

0801c73c <alt_up_rs232_check_parity>:

int alt_up_rs232_check_parity(alt_u32 data_reg)
{
 801c73c:	defffd04 	addi	sp,sp,-12
 801c740:	df000215 	stw	fp,8(sp)
 801c744:	df000204 	addi	fp,sp,8
 801c748:	e13fff15 	stw	r4,-4(fp)
	unsigned parity_error = (data_reg & ALT_UP_RS232_DATA_PE_MSK) >> ALT_UP_RS232_DATA_PE_OFST;
 801c74c:	e0bfff17 	ldw	r2,-4(fp)
 801c750:	1080800c 	andi	r2,r2,512
 801c754:	1004d27a 	srli	r2,r2,9
 801c758:	e0bffe15 	stw	r2,-8(fp)
	return (parity_error ? -1 : 0);
 801c75c:	e0bffe17 	ldw	r2,-8(fp)
 801c760:	10000226 	beq	r2,zero,801c76c <alt_up_rs232_check_parity+0x30>
 801c764:	00bfffc4 	movi	r2,-1
 801c768:	00000106 	br	801c770 <alt_up_rs232_check_parity+0x34>
 801c76c:	0005883a 	mov	r2,zero
}
 801c770:	e037883a 	mov	sp,fp
 801c774:	df000017 	ldw	fp,0(sp)
 801c778:	dec00104 	addi	sp,sp,4
 801c77c:	f800283a 	ret

0801c780 <alt_up_rs232_write_data>:

int alt_up_rs232_write_data(alt_up_rs232_dev *rs232, alt_u8 data)
{
 801c780:	defffd04 	addi	sp,sp,-12
 801c784:	df000215 	stw	fp,8(sp)
 801c788:	df000204 	addi	fp,sp,8
 801c78c:	e13ffe15 	stw	r4,-8(fp)
 801c790:	2805883a 	mov	r2,r5
 801c794:	e0bfff05 	stb	r2,-4(fp)
	/*alt_u32 data_reg;
	data_reg = IORD_ALT_UP_RS232_DATA(rs232->base);*/
    
	// we can write directly without thinking about other bit fields for this
	// case ONLY, because only DATA field of the data register is writable
	IOWR_ALT_UP_RS232_DATA(rs232->base, (data>>ALT_UP_RS232_DATA_DATA_OFST) & ALT_UP_RS232_DATA_DATA_MSK);
 801c798:	e0bffe17 	ldw	r2,-8(fp)
 801c79c:	10800a17 	ldw	r2,40(r2)
 801c7a0:	1007883a 	mov	r3,r2
 801c7a4:	e0bfff03 	ldbu	r2,-4(fp)
 801c7a8:	18800035 	stwio	r2,0(r3)
	return 0;
 801c7ac:	0005883a 	mov	r2,zero
}
 801c7b0:	e037883a 	mov	sp,fp
 801c7b4:	df000017 	ldw	fp,0(sp)
 801c7b8:	dec00104 	addi	sp,sp,4
 801c7bc:	f800283a 	ret

0801c7c0 <alt_up_rs232_read_data>:

int alt_up_rs232_read_data(alt_up_rs232_dev *rs232, alt_u8 *data, alt_u8 *parity_error)
{
 801c7c0:	defffa04 	addi	sp,sp,-24
 801c7c4:	dfc00515 	stw	ra,20(sp)
 801c7c8:	df000415 	stw	fp,16(sp)
 801c7cc:	df000404 	addi	fp,sp,16
 801c7d0:	e13ffd15 	stw	r4,-12(fp)
 801c7d4:	e17ffe15 	stw	r5,-8(fp)
 801c7d8:	e1bfff15 	stw	r6,-4(fp)
	alt_u32 data_reg;
	data_reg = IORD_ALT_UP_RS232_DATA(rs232->base);
 801c7dc:	e0bffd17 	ldw	r2,-12(fp)
 801c7e0:	10800a17 	ldw	r2,40(r2)
 801c7e4:	10800037 	ldwio	r2,0(r2)
 801c7e8:	e0bffc15 	stw	r2,-16(fp)
	*data = (data_reg & ALT_UP_RS232_DATA_DATA_MSK) >> ALT_UP_RS232_DATA_DATA_OFST;
 801c7ec:	e0bffc17 	ldw	r2,-16(fp)
 801c7f0:	1007883a 	mov	r3,r2
 801c7f4:	e0bffe17 	ldw	r2,-8(fp)
 801c7f8:	10c00005 	stb	r3,0(r2)
	*parity_error = alt_up_rs232_check_parity(data_reg);
 801c7fc:	e13ffc17 	ldw	r4,-16(fp)
 801c800:	801c73c0 	call	801c73c <alt_up_rs232_check_parity>
 801c804:	1007883a 	mov	r3,r2
 801c808:	e0bfff17 	ldw	r2,-4(fp)
 801c80c:	10c00005 	stb	r3,0(r2)
	return (((data_reg & ALT_UP_RS232_DATA_RVALID_MSK) >> ALT_UP_RS232_DATA_RVALID_OFST) - 1);
 801c810:	e0bffc17 	ldw	r2,-16(fp)
 801c814:	10a0000c 	andi	r2,r2,32768
 801c818:	1004d3fa 	srli	r2,r2,15
 801c81c:	10bfffc4 	addi	r2,r2,-1
}
 801c820:	e037883a 	mov	sp,fp
 801c824:	dfc00117 	ldw	ra,4(sp)
 801c828:	df000017 	ldw	fp,0(sp)
 801c82c:	dec00204 	addi	sp,sp,8
 801c830:	f800283a 	ret

0801c834 <alt_up_rs232_read_fd>:

int alt_up_rs232_read_fd (alt_fd* fd, char* ptr, int len)
{
 801c834:	defff804 	addi	sp,sp,-32
 801c838:	dfc00715 	stw	ra,28(sp)
 801c83c:	df000615 	stw	fp,24(sp)
 801c840:	df000604 	addi	fp,sp,24
 801c844:	e13ffd15 	stw	r4,-12(fp)
 801c848:	e17ffe15 	stw	r5,-8(fp)
 801c84c:	e1bfff15 	stw	r6,-4(fp)
	alt_up_rs232_dev *rs232 = (alt_up_rs232_dev*)fd->dev;
 801c850:	e0bffd17 	ldw	r2,-12(fp)
 801c854:	10800017 	ldw	r2,0(r2)
 801c858:	e0bffb15 	stw	r2,-20(fp)
	int count = 0;
 801c85c:	e03ffa15 	stw	zero,-24(fp)
	alt_u8 parity_error;
	while(len--)
 801c860:	00000e06 	br	801c89c <alt_up_rs232_read_fd+0x68>
	{
		if (alt_up_rs232_read_data(rs232, (alt_u8 *)ptr++, &parity_error)==0)
 801c864:	e0bffe17 	ldw	r2,-8(fp)
 801c868:	10c00044 	addi	r3,r2,1
 801c86c:	e0fffe15 	stw	r3,-8(fp)
 801c870:	e0fffc04 	addi	r3,fp,-16
 801c874:	e13ffb17 	ldw	r4,-20(fp)
 801c878:	100b883a 	mov	r5,r2
 801c87c:	180d883a 	mov	r6,r3
 801c880:	801c7c00 	call	801c7c0 <alt_up_rs232_read_data>
 801c884:	1000041e 	bne	r2,zero,801c898 <alt_up_rs232_read_fd+0x64>
			count++;
 801c888:	e0bffa17 	ldw	r2,-24(fp)
 801c88c:	10800044 	addi	r2,r2,1
 801c890:	e0bffa15 	stw	r2,-24(fp)
 801c894:	00000106 	br	801c89c <alt_up_rs232_read_fd+0x68>
		else
			break;
 801c898:	00000406 	br	801c8ac <alt_up_rs232_read_fd+0x78>
int alt_up_rs232_read_fd (alt_fd* fd, char* ptr, int len)
{
	alt_up_rs232_dev *rs232 = (alt_up_rs232_dev*)fd->dev;
	int count = 0;
	alt_u8 parity_error;
	while(len--)
 801c89c:	e0bfff17 	ldw	r2,-4(fp)
 801c8a0:	10ffffc4 	addi	r3,r2,-1
 801c8a4:	e0ffff15 	stw	r3,-4(fp)
 801c8a8:	103fee1e 	bne	r2,zero,801c864 <__alt_data_end+0xfc01c864>
		if (alt_up_rs232_read_data(rs232, (alt_u8 *)ptr++, &parity_error)==0)
			count++;
		else
			break;
	}
	return count;
 801c8ac:	e0bffa17 	ldw	r2,-24(fp)
}
 801c8b0:	e037883a 	mov	sp,fp
 801c8b4:	dfc00117 	ldw	ra,4(sp)
 801c8b8:	df000017 	ldw	fp,0(sp)
 801c8bc:	dec00204 	addi	sp,sp,8
 801c8c0:	f800283a 	ret

0801c8c4 <alt_up_rs232_write_fd>:

int alt_up_rs232_write_fd (alt_fd* fd, const char* ptr, int len)
{
 801c8c4:	defff904 	addi	sp,sp,-28
 801c8c8:	dfc00615 	stw	ra,24(sp)
 801c8cc:	df000515 	stw	fp,20(sp)
 801c8d0:	df000504 	addi	fp,sp,20
 801c8d4:	e13ffd15 	stw	r4,-12(fp)
 801c8d8:	e17ffe15 	stw	r5,-8(fp)
 801c8dc:	e1bfff15 	stw	r6,-4(fp)
	alt_up_rs232_dev *rs232 = (alt_up_rs232_dev*)fd->dev;
 801c8e0:	e0bffd17 	ldw	r2,-12(fp)
 801c8e4:	10800017 	ldw	r2,0(r2)
 801c8e8:	e0bffc15 	stw	r2,-16(fp)
	int count = 0;
 801c8ec:	e03ffb15 	stw	zero,-20(fp)
	while(len--)
 801c8f0:	00000f06 	br	801c930 <alt_up_rs232_write_fd+0x6c>
	{
		if (alt_up_rs232_write_data(rs232, *ptr)==0)
 801c8f4:	e0bffe17 	ldw	r2,-8(fp)
 801c8f8:	10800003 	ldbu	r2,0(r2)
 801c8fc:	10803fcc 	andi	r2,r2,255
 801c900:	e13ffc17 	ldw	r4,-16(fp)
 801c904:	100b883a 	mov	r5,r2
 801c908:	801c7800 	call	801c780 <alt_up_rs232_write_data>
 801c90c:	1000071e 	bne	r2,zero,801c92c <alt_up_rs232_write_fd+0x68>
		{
			count++;
 801c910:	e0bffb17 	ldw	r2,-20(fp)
 801c914:	10800044 	addi	r2,r2,1
 801c918:	e0bffb15 	stw	r2,-20(fp)
			ptr++;
 801c91c:	e0bffe17 	ldw	r2,-8(fp)
 801c920:	10800044 	addi	r2,r2,1
 801c924:	e0bffe15 	stw	r2,-8(fp)
 801c928:	00000106 	br	801c930 <alt_up_rs232_write_fd+0x6c>
		}
		else
			break;
 801c92c:	00000406 	br	801c940 <alt_up_rs232_write_fd+0x7c>

int alt_up_rs232_write_fd (alt_fd* fd, const char* ptr, int len)
{
	alt_up_rs232_dev *rs232 = (alt_up_rs232_dev*)fd->dev;
	int count = 0;
	while(len--)
 801c930:	e0bfff17 	ldw	r2,-4(fp)
 801c934:	10ffffc4 	addi	r3,r2,-1
 801c938:	e0ffff15 	stw	r3,-4(fp)
 801c93c:	103fed1e 	bne	r2,zero,801c8f4 <__alt_data_end+0xfc01c8f4>
			ptr++;
		}
		else
			break;
	}
	return count;
 801c940:	e0bffb17 	ldw	r2,-20(fp)
}
 801c944:	e037883a 	mov	sp,fp
 801c948:	dfc00117 	ldw	ra,4(sp)
 801c94c:	df000017 	ldw	fp,0(sp)
 801c950:	dec00204 	addi	sp,sp,8
 801c954:	f800283a 	ret

0801c958 <alt_up_rs232_open_dev>:

alt_up_rs232_dev* alt_up_rs232_open_dev(const char* name)
{
 801c958:	defffc04 	addi	sp,sp,-16
 801c95c:	dfc00315 	stw	ra,12(sp)
 801c960:	df000215 	stw	fp,8(sp)
 801c964:	df000204 	addi	fp,sp,8
 801c968:	e13fff15 	stw	r4,-4(fp)
  // find the device from the device list 
  // (see altera_hal/HAL/inc/priv/alt_file.h 
  // and altera_hal/HAL/src/alt_find_dev.c 
  // for details)
  alt_up_rs232_dev *dev = (alt_up_rs232_dev*)alt_find_dev(name, &alt_dev_list);
 801c96c:	e13fff17 	ldw	r4,-4(fp)
 801c970:	014200b4 	movhi	r5,2050
 801c974:	29409904 	addi	r5,r5,612
 801c978:	801a1e80 	call	801a1e8 <alt_find_dev>
 801c97c:	e0bffe15 	stw	r2,-8(fp)

  return dev;
 801c980:	e0bffe17 	ldw	r2,-8(fp)
}
 801c984:	e037883a 	mov	sp,fp
 801c988:	dfc00117 	ldw	ra,4(sp)
 801c98c:	df000017 	ldw	fp,0(sp)
 801c990:	dec00204 	addi	sp,sp,8
 801c994:	f800283a 	ret

0801c998 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
 801c998:	defff504 	addi	sp,sp,-44
 801c99c:	df000a15 	stw	fp,40(sp)
 801c9a0:	df000a04 	addi	fp,sp,40
 801c9a4:	e13ffc15 	stw	r4,-16(fp)
 801c9a8:	e17ffd15 	stw	r5,-12(fp)
 801c9ac:	e1bffe15 	stw	r6,-8(fp)
 801c9b0:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
 801c9b4:	e03ff615 	stw	zero,-40(fp)
 801c9b8:	008200b4 	movhi	r2,2050
 801c9bc:	1087eb04 	addi	r2,r2,8108
 801c9c0:	10800017 	ldw	r2,0(r2)
  
  if (alt_ticks_per_second ())
 801c9c4:	10003f26 	beq	r2,zero,801cac4 <alt_alarm_start+0x12c>
  {
    if (alarm)
 801c9c8:	e0bffc17 	ldw	r2,-16(fp)
 801c9cc:	10003b26 	beq	r2,zero,801cabc <alt_alarm_start+0x124>
    {
      alarm->callback = callback;
 801c9d0:	e0bffc17 	ldw	r2,-16(fp)
 801c9d4:	e0fffe17 	ldw	r3,-8(fp)
 801c9d8:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
 801c9dc:	e0bffc17 	ldw	r2,-16(fp)
 801c9e0:	e0ffff17 	ldw	r3,-4(fp)
 801c9e4:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 801c9e8:	0005303a 	rdctl	r2,status
 801c9ec:	e0bff815 	stw	r2,-32(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 801c9f0:	e0fff817 	ldw	r3,-32(fp)
 801c9f4:	00bfff84 	movi	r2,-2
 801c9f8:	1884703a 	and	r2,r3,r2
 801c9fc:	1001703a 	wrctl	status,r2
  
  return context;
 801ca00:	e0bff817 	ldw	r2,-32(fp)
 
      irq_context = alt_irq_disable_all ();
 801ca04:	e0bff715 	stw	r2,-36(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
 801ca08:	008200b4 	movhi	r2,2050
 801ca0c:	1087ec04 	addi	r2,r2,8112
 801ca10:	10800017 	ldw	r2,0(r2)
      
      current_nticks = alt_nticks();
 801ca14:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
 801ca18:	e0fffd17 	ldw	r3,-12(fp)
 801ca1c:	e0bff617 	ldw	r2,-40(fp)
 801ca20:	1885883a 	add	r2,r3,r2
 801ca24:	10c00044 	addi	r3,r2,1
 801ca28:	e0bffc17 	ldw	r2,-16(fp)
 801ca2c:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
 801ca30:	e0bffc17 	ldw	r2,-16(fp)
 801ca34:	10c00217 	ldw	r3,8(r2)
 801ca38:	e0bff617 	ldw	r2,-40(fp)
 801ca3c:	1880042e 	bgeu	r3,r2,801ca50 <alt_alarm_start+0xb8>
      {
        alarm->rollover = 1;
 801ca40:	e0bffc17 	ldw	r2,-16(fp)
 801ca44:	00c00044 	movi	r3,1
 801ca48:	10c00405 	stb	r3,16(r2)
 801ca4c:	00000206 	br	801ca58 <alt_alarm_start+0xc0>
      }
      else
      {
        alarm->rollover = 0;
 801ca50:	e0bffc17 	ldw	r2,-16(fp)
 801ca54:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
 801ca58:	e0fffc17 	ldw	r3,-16(fp)
 801ca5c:	008200b4 	movhi	r2,2050
 801ca60:	1080a304 	addi	r2,r2,652
 801ca64:	e0bff915 	stw	r2,-28(fp)
 801ca68:	e0fffa15 	stw	r3,-24(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 801ca6c:	e0bffa17 	ldw	r2,-24(fp)
 801ca70:	e0fff917 	ldw	r3,-28(fp)
 801ca74:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 801ca78:	e0bff917 	ldw	r2,-28(fp)
 801ca7c:	10c00017 	ldw	r3,0(r2)
 801ca80:	e0bffa17 	ldw	r2,-24(fp)
 801ca84:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 801ca88:	e0bff917 	ldw	r2,-28(fp)
 801ca8c:	10800017 	ldw	r2,0(r2)
 801ca90:	e0fffa17 	ldw	r3,-24(fp)
 801ca94:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 801ca98:	e0bff917 	ldw	r2,-28(fp)
 801ca9c:	e0fffa17 	ldw	r3,-24(fp)
 801caa0:	10c00015 	stw	r3,0(r2)
 801caa4:	e0bff717 	ldw	r2,-36(fp)
 801caa8:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 801caac:	e0bffb17 	ldw	r2,-20(fp)
 801cab0:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
 801cab4:	0005883a 	mov	r2,zero
 801cab8:	00000306 	br	801cac8 <alt_alarm_start+0x130>
    }
    else
    {
      return -EINVAL;
 801cabc:	00bffa84 	movi	r2,-22
 801cac0:	00000106 	br	801cac8 <alt_alarm_start+0x130>
    }
  }
  else
  {
    return -ENOTSUP;
 801cac4:	00bfde84 	movi	r2,-134
  }
}
 801cac8:	e037883a 	mov	sp,fp
 801cacc:	df000017 	ldw	fp,0(sp)
 801cad0:	dec00104 	addi	sp,sp,4
 801cad4:	f800283a 	ret

0801cad8 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
 801cad8:	deffff04 	addi	sp,sp,-4
 801cadc:	df000015 	stw	fp,0(sp)
 801cae0:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
 801cae4:	e037883a 	mov	sp,fp
 801cae8:	df000017 	ldw	fp,0(sp)
 801caec:	dec00104 	addi	sp,sp,4
 801caf0:	f800283a 	ret

0801caf4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 801caf4:	defffe04 	addi	sp,sp,-8
 801caf8:	dfc00115 	stw	ra,4(sp)
 801cafc:	df000015 	stw	fp,0(sp)
 801cb00:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 801cb04:	008200b4 	movhi	r2,2050
 801cb08:	10809e04 	addi	r2,r2,632
 801cb0c:	10800017 	ldw	r2,0(r2)
 801cb10:	10000526 	beq	r2,zero,801cb28 <alt_get_errno+0x34>
 801cb14:	008200b4 	movhi	r2,2050
 801cb18:	10809e04 	addi	r2,r2,632
 801cb1c:	10800017 	ldw	r2,0(r2)
 801cb20:	103ee83a 	callr	r2
 801cb24:	00000206 	br	801cb30 <alt_get_errno+0x3c>
 801cb28:	008200b4 	movhi	r2,2050
 801cb2c:	1087e304 	addi	r2,r2,8076
}
 801cb30:	e037883a 	mov	sp,fp
 801cb34:	dfc00117 	ldw	ra,4(sp)
 801cb38:	df000017 	ldw	fp,0(sp)
 801cb3c:	dec00204 	addi	sp,sp,8
 801cb40:	f800283a 	ret

0801cb44 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
 801cb44:	defffa04 	addi	sp,sp,-24
 801cb48:	dfc00515 	stw	ra,20(sp)
 801cb4c:	df000415 	stw	fp,16(sp)
 801cb50:	df000404 	addi	fp,sp,16
 801cb54:	e13ffe15 	stw	r4,-8(fp)
 801cb58:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
 801cb5c:	e0bffe17 	ldw	r2,-8(fp)
 801cb60:	10000326 	beq	r2,zero,801cb70 <alt_dev_llist_insert+0x2c>
 801cb64:	e0bffe17 	ldw	r2,-8(fp)
 801cb68:	10800217 	ldw	r2,8(r2)
 801cb6c:	1000061e 	bne	r2,zero,801cb88 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
 801cb70:	801caf40 	call	801caf4 <alt_get_errno>
 801cb74:	1007883a 	mov	r3,r2
 801cb78:	00800584 	movi	r2,22
 801cb7c:	18800015 	stw	r2,0(r3)
    return -EINVAL;
 801cb80:	00bffa84 	movi	r2,-22
 801cb84:	00001306 	br	801cbd4 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
 801cb88:	e0bffe17 	ldw	r2,-8(fp)
 801cb8c:	e0ffff17 	ldw	r3,-4(fp)
 801cb90:	e0fffc15 	stw	r3,-16(fp)
 801cb94:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 801cb98:	e0bffd17 	ldw	r2,-12(fp)
 801cb9c:	e0fffc17 	ldw	r3,-16(fp)
 801cba0:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 801cba4:	e0bffc17 	ldw	r2,-16(fp)
 801cba8:	10c00017 	ldw	r3,0(r2)
 801cbac:	e0bffd17 	ldw	r2,-12(fp)
 801cbb0:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 801cbb4:	e0bffc17 	ldw	r2,-16(fp)
 801cbb8:	10800017 	ldw	r2,0(r2)
 801cbbc:	e0fffd17 	ldw	r3,-12(fp)
 801cbc0:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 801cbc4:	e0bffc17 	ldw	r2,-16(fp)
 801cbc8:	e0fffd17 	ldw	r3,-12(fp)
 801cbcc:	10c00015 	stw	r3,0(r2)

  return 0;  
 801cbd0:	0005883a 	mov	r2,zero
}
 801cbd4:	e037883a 	mov	sp,fp
 801cbd8:	dfc00117 	ldw	ra,4(sp)
 801cbdc:	df000017 	ldw	fp,0(sp)
 801cbe0:	dec00204 	addi	sp,sp,8
 801cbe4:	f800283a 	ret

0801cbe8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 801cbe8:	defffe04 	addi	sp,sp,-8
 801cbec:	dfc00115 	stw	ra,4(sp)
 801cbf0:	df000015 	stw	fp,0(sp)
 801cbf4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 801cbf8:	008200b4 	movhi	r2,2050
 801cbfc:	10809e04 	addi	r2,r2,632
 801cc00:	10800017 	ldw	r2,0(r2)
 801cc04:	10000526 	beq	r2,zero,801cc1c <alt_get_errno+0x34>
 801cc08:	008200b4 	movhi	r2,2050
 801cc0c:	10809e04 	addi	r2,r2,632
 801cc10:	10800017 	ldw	r2,0(r2)
 801cc14:	103ee83a 	callr	r2
 801cc18:	00000206 	br	801cc24 <alt_get_errno+0x3c>
 801cc1c:	008200b4 	movhi	r2,2050
 801cc20:	1087e304 	addi	r2,r2,8076
}
 801cc24:	e037883a 	mov	sp,fp
 801cc28:	dfc00117 	ldw	ra,4(sp)
 801cc2c:	df000017 	ldw	fp,0(sp)
 801cc30:	dec00204 	addi	sp,sp,8
 801cc34:	f800283a 	ret

0801cc38 <alt_dma_rxchan_open>:
 *
 * The return value will be NULL on failure, and non-NULL otherwise. 
 */

alt_dma_rxchan alt_dma_rxchan_open (const char* name)
{
 801cc38:	defffc04 	addi	sp,sp,-16
 801cc3c:	dfc00315 	stw	ra,12(sp)
 801cc40:	df000215 	stw	fp,8(sp)
 801cc44:	df000204 	addi	fp,sp,8
 801cc48:	e13fff15 	stw	r4,-4(fp)
  alt_dma_rxchan dev;

  dev = (alt_dma_rxchan) alt_find_dev (name, &alt_dma_rxchan_list);
 801cc4c:	e13fff17 	ldw	r4,-4(fp)
 801cc50:	d1602b04 	addi	r5,gp,-32596
 801cc54:	801a1e80 	call	801a1e8 <alt_find_dev>
 801cc58:	e0bffe15 	stw	r2,-8(fp)

  if (!dev)
 801cc5c:	e0bffe17 	ldw	r2,-8(fp)
 801cc60:	1000041e 	bne	r2,zero,801cc74 <alt_dma_rxchan_open+0x3c>
  {
    ALT_ERRNO = ENODEV;
 801cc64:	801cbe80 	call	801cbe8 <alt_get_errno>
 801cc68:	1007883a 	mov	r3,r2
 801cc6c:	008004c4 	movi	r2,19
 801cc70:	18800015 	stw	r2,0(r3)
  }

  return dev;
 801cc74:	e0bffe17 	ldw	r2,-8(fp)
}
 801cc78:	e037883a 	mov	sp,fp
 801cc7c:	dfc00117 	ldw	ra,4(sp)
 801cc80:	df000017 	ldw	fp,0(sp)
 801cc84:	dec00204 	addi	sp,sp,8
 801cc88:	f800283a 	ret

0801cc8c <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
 801cc8c:	defffd04 	addi	sp,sp,-12
 801cc90:	dfc00215 	stw	ra,8(sp)
 801cc94:	df000115 	stw	fp,4(sp)
 801cc98:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 801cc9c:	008200b4 	movhi	r2,2050
 801cca0:	10b62d04 	addi	r2,r2,-10060
 801cca4:	e0bfff15 	stw	r2,-4(fp)
 801cca8:	00000606 	br	801ccc4 <_do_ctors+0x38>
        (*ctor) (); 
 801ccac:	e0bfff17 	ldw	r2,-4(fp)
 801ccb0:	10800017 	ldw	r2,0(r2)
 801ccb4:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 801ccb8:	e0bfff17 	ldw	r2,-4(fp)
 801ccbc:	10bfff04 	addi	r2,r2,-4
 801ccc0:	e0bfff15 	stw	r2,-4(fp)
 801ccc4:	e0ffff17 	ldw	r3,-4(fp)
 801ccc8:	008200b4 	movhi	r2,2050
 801cccc:	10b62d04 	addi	r2,r2,-10060
 801ccd0:	18bff62e 	bgeu	r3,r2,801ccac <__alt_data_end+0xfc01ccac>
        (*ctor) (); 
}
 801ccd4:	e037883a 	mov	sp,fp
 801ccd8:	dfc00117 	ldw	ra,4(sp)
 801ccdc:	df000017 	ldw	fp,0(sp)
 801cce0:	dec00204 	addi	sp,sp,8
 801cce4:	f800283a 	ret

0801cce8 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
 801cce8:	defffd04 	addi	sp,sp,-12
 801ccec:	dfc00215 	stw	ra,8(sp)
 801ccf0:	df000115 	stw	fp,4(sp)
 801ccf4:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 801ccf8:	008200b4 	movhi	r2,2050
 801ccfc:	10b62e04 	addi	r2,r2,-10056
 801cd00:	e0bfff15 	stw	r2,-4(fp)
 801cd04:	00000606 	br	801cd20 <_do_dtors+0x38>
        (*dtor) (); 
 801cd08:	e0bfff17 	ldw	r2,-4(fp)
 801cd0c:	10800017 	ldw	r2,0(r2)
 801cd10:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 801cd14:	e0bfff17 	ldw	r2,-4(fp)
 801cd18:	10bfff04 	addi	r2,r2,-4
 801cd1c:	e0bfff15 	stw	r2,-4(fp)
 801cd20:	e0ffff17 	ldw	r3,-4(fp)
 801cd24:	008200b4 	movhi	r2,2050
 801cd28:	10b62e04 	addi	r2,r2,-10056
 801cd2c:	18bff62e 	bgeu	r3,r2,801cd08 <__alt_data_end+0xfc01cd08>
        (*dtor) (); 
}
 801cd30:	e037883a 	mov	sp,fp
 801cd34:	dfc00117 	ldw	ra,4(sp)
 801cd38:	df000017 	ldw	fp,0(sp)
 801cd3c:	dec00204 	addi	sp,sp,8
 801cd40:	f800283a 	ret

0801cd44 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
 801cd44:	deffff04 	addi	sp,sp,-4
 801cd48:	df000015 	stw	fp,0(sp)
 801cd4c:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
 801cd50:	e037883a 	mov	sp,fp
 801cd54:	df000017 	ldw	fp,0(sp)
 801cd58:	dec00104 	addi	sp,sp,4
 801cd5c:	f800283a 	ret

0801cd60 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
 801cd60:	defff804 	addi	sp,sp,-32
 801cd64:	dfc00715 	stw	ra,28(sp)
 801cd68:	df000615 	stw	fp,24(sp)
 801cd6c:	dc000515 	stw	r16,20(sp)
 801cd70:	df000604 	addi	fp,sp,24
 801cd74:	e13ffb15 	stw	r4,-20(fp)
 801cd78:	e17ffc15 	stw	r5,-16(fp)
 801cd7c:	e1bffd15 	stw	r6,-12(fp)
 801cd80:	e1fffe15 	stw	r7,-8(fp)
  int old;

  old = open (name, flags, mode);
 801cd84:	e13ffc17 	ldw	r4,-16(fp)
 801cd88:	e17ffd17 	ldw	r5,-12(fp)
 801cd8c:	e1bffe17 	ldw	r6,-8(fp)
 801cd90:	801d1ac0 	call	801d1ac <open>
 801cd94:	e0bffa15 	stw	r2,-24(fp)

  if (old >= 0)
 801cd98:	e0bffa17 	ldw	r2,-24(fp)
 801cd9c:	10002216 	blt	r2,zero,801ce28 <alt_open_fd+0xc8>
  {
    fd->dev      = alt_fd_list[old].dev;
 801cda0:	040200b4 	movhi	r16,2050
 801cda4:	843bb004 	addi	r16,r16,-4416
 801cda8:	e0bffa17 	ldw	r2,-24(fp)
 801cdac:	1009883a 	mov	r4,r2
 801cdb0:	01400304 	movi	r5,12
 801cdb4:	800334c0 	call	800334c <__mulsi3>
 801cdb8:	8085883a 	add	r2,r16,r2
 801cdbc:	10c00017 	ldw	r3,0(r2)
 801cdc0:	e0bffb17 	ldw	r2,-20(fp)
 801cdc4:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
 801cdc8:	040200b4 	movhi	r16,2050
 801cdcc:	843bb004 	addi	r16,r16,-4416
 801cdd0:	e0bffa17 	ldw	r2,-24(fp)
 801cdd4:	1009883a 	mov	r4,r2
 801cdd8:	01400304 	movi	r5,12
 801cddc:	800334c0 	call	800334c <__mulsi3>
 801cde0:	8085883a 	add	r2,r16,r2
 801cde4:	10800104 	addi	r2,r2,4
 801cde8:	10c00017 	ldw	r3,0(r2)
 801cdec:	e0bffb17 	ldw	r2,-20(fp)
 801cdf0:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
 801cdf4:	040200b4 	movhi	r16,2050
 801cdf8:	843bb004 	addi	r16,r16,-4416
 801cdfc:	e0bffa17 	ldw	r2,-24(fp)
 801ce00:	1009883a 	mov	r4,r2
 801ce04:	01400304 	movi	r5,12
 801ce08:	800334c0 	call	800334c <__mulsi3>
 801ce0c:	8085883a 	add	r2,r16,r2
 801ce10:	10800204 	addi	r2,r2,8
 801ce14:	10c00017 	ldw	r3,0(r2)
 801ce18:	e0bffb17 	ldw	r2,-20(fp)
 801ce1c:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
 801ce20:	e13ffa17 	ldw	r4,-24(fp)
 801ce24:	801aca40 	call	801aca4 <alt_release_fd>
  }
} 
 801ce28:	e6ffff04 	addi	sp,fp,-4
 801ce2c:	dfc00217 	ldw	ra,8(sp)
 801ce30:	df000117 	ldw	fp,4(sp)
 801ce34:	dc000017 	ldw	r16,0(sp)
 801ce38:	dec00304 	addi	sp,sp,12
 801ce3c:	f800283a 	ret

0801ce40 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
 801ce40:	defffb04 	addi	sp,sp,-20
 801ce44:	dfc00415 	stw	ra,16(sp)
 801ce48:	df000315 	stw	fp,12(sp)
 801ce4c:	df000304 	addi	fp,sp,12
 801ce50:	e13ffd15 	stw	r4,-12(fp)
 801ce54:	e17ffe15 	stw	r5,-8(fp)
 801ce58:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
 801ce5c:	010200b4 	movhi	r4,2050
 801ce60:	213bb304 	addi	r4,r4,-4404
 801ce64:	e17ffd17 	ldw	r5,-12(fp)
 801ce68:	01800044 	movi	r6,1
 801ce6c:	01c07fc4 	movi	r7,511
 801ce70:	801cd600 	call	801cd60 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
 801ce74:	010200b4 	movhi	r4,2050
 801ce78:	213bb004 	addi	r4,r4,-4416
 801ce7c:	e17ffe17 	ldw	r5,-8(fp)
 801ce80:	000d883a 	mov	r6,zero
 801ce84:	01c07fc4 	movi	r7,511
 801ce88:	801cd600 	call	801cd60 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
 801ce8c:	010200b4 	movhi	r4,2050
 801ce90:	213bb604 	addi	r4,r4,-4392
 801ce94:	e17fff17 	ldw	r5,-4(fp)
 801ce98:	01800044 	movi	r6,1
 801ce9c:	01c07fc4 	movi	r7,511
 801cea0:	801cd600 	call	801cd60 <alt_open_fd>
}  
 801cea4:	e037883a 	mov	sp,fp
 801cea8:	dfc00117 	ldw	ra,4(sp)
 801ceac:	df000017 	ldw	fp,0(sp)
 801ceb0:	dec00204 	addi	sp,sp,8
 801ceb4:	f800283a 	ret

0801ceb8 <alt_irq_register>:
 */
 
int alt_irq_register (alt_u32 id, 
                      void* context, 
                      alt_isr_func handler)
{
 801ceb8:	defff004 	addi	sp,sp,-64
 801cebc:	df000f15 	stw	fp,60(sp)
 801cec0:	df000f04 	addi	fp,sp,60
 801cec4:	e13ffd15 	stw	r4,-12(fp)
 801cec8:	e17ffe15 	stw	r5,-8(fp)
 801cecc:	e1bfff15 	stw	r6,-4(fp)
  int rc = -EINVAL;  
 801ced0:	00bffa84 	movi	r2,-22
 801ced4:	e0bff115 	stw	r2,-60(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
 801ced8:	e0bffd17 	ldw	r2,-12(fp)
 801cedc:	10800828 	cmpgeui	r2,r2,32
 801cee0:	10005c1e 	bne	r2,zero,801d054 <alt_irq_register+0x19c>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 801cee4:	0005303a 	rdctl	r2,status
 801cee8:	e0bff315 	stw	r2,-52(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 801ceec:	e0fff317 	ldw	r3,-52(fp)
 801cef0:	00bfff84 	movi	r2,-2
 801cef4:	1884703a 	and	r2,r3,r2
 801cef8:	1001703a 	wrctl	status,r2
  
  return context;
 801cefc:	e0bff317 	ldw	r2,-52(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all ();
 801cf00:	e0bff215 	stw	r2,-56(fp)

    alt_irq[id].handler = handler;
 801cf04:	008200b4 	movhi	r2,2050
 801cf08:	108a7b04 	addi	r2,r2,10732
 801cf0c:	e0fffd17 	ldw	r3,-12(fp)
 801cf10:	180690fa 	slli	r3,r3,3
 801cf14:	10c5883a 	add	r2,r2,r3
 801cf18:	e0ffff17 	ldw	r3,-4(fp)
 801cf1c:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = context;
 801cf20:	008200b4 	movhi	r2,2050
 801cf24:	108a7b04 	addi	r2,r2,10732
 801cf28:	e0fffd17 	ldw	r3,-12(fp)
 801cf2c:	180690fa 	slli	r3,r3,3
 801cf30:	10c5883a 	add	r2,r2,r3
 801cf34:	10800104 	addi	r2,r2,4
 801cf38:	e0fffe17 	ldw	r3,-8(fp)
 801cf3c:	10c00015 	stw	r3,0(r2)

    rc = (handler) ? alt_irq_enable (id): alt_irq_disable (id);
 801cf40:	e0bfff17 	ldw	r2,-4(fp)
 801cf44:	10001f26 	beq	r2,zero,801cfc4 <alt_irq_register+0x10c>
 801cf48:	e0bffd17 	ldw	r2,-12(fp)
 801cf4c:	e0bff415 	stw	r2,-48(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 801cf50:	0005303a 	rdctl	r2,status
 801cf54:	e0bff515 	stw	r2,-44(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 801cf58:	e0fff517 	ldw	r3,-44(fp)
 801cf5c:	00bfff84 	movi	r2,-2
 801cf60:	1884703a 	and	r2,r3,r2
 801cf64:	1001703a 	wrctl	status,r2
  
  return context;
 801cf68:	e0bff517 	ldw	r2,-44(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 801cf6c:	e0bff615 	stw	r2,-40(fp)

  alt_irq_active |= (1 << id);
 801cf70:	e0bff417 	ldw	r2,-48(fp)
 801cf74:	00c00044 	movi	r3,1
 801cf78:	1884983a 	sll	r2,r3,r2
 801cf7c:	1007883a 	mov	r3,r2
 801cf80:	008200b4 	movhi	r2,2050
 801cf84:	1087ea04 	addi	r2,r2,8104
 801cf88:	10800017 	ldw	r2,0(r2)
 801cf8c:	1886b03a 	or	r3,r3,r2
 801cf90:	008200b4 	movhi	r2,2050
 801cf94:	1087ea04 	addi	r2,r2,8104
 801cf98:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 801cf9c:	008200b4 	movhi	r2,2050
 801cfa0:	1087ea04 	addi	r2,r2,8104
 801cfa4:	10800017 	ldw	r2,0(r2)
 801cfa8:	100170fa 	wrctl	ienable,r2
 801cfac:	e0bff617 	ldw	r2,-40(fp)
 801cfb0:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 801cfb4:	e0bff717 	ldw	r2,-36(fp)
 801cfb8:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 801cfbc:	0005883a 	mov	r2,zero
 801cfc0:	00001f06 	br	801d040 <alt_irq_register+0x188>
 801cfc4:	e0bffd17 	ldw	r2,-12(fp)
 801cfc8:	e0bff815 	stw	r2,-32(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 801cfcc:	0005303a 	rdctl	r2,status
 801cfd0:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 801cfd4:	e0fff917 	ldw	r3,-28(fp)
 801cfd8:	00bfff84 	movi	r2,-2
 801cfdc:	1884703a 	and	r2,r3,r2
 801cfe0:	1001703a 	wrctl	status,r2
  
  return context;
 801cfe4:	e0bff917 	ldw	r2,-28(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 801cfe8:	e0bffa15 	stw	r2,-24(fp)

  alt_irq_active &= ~(1 << id);
 801cfec:	e0bff817 	ldw	r2,-32(fp)
 801cff0:	00c00044 	movi	r3,1
 801cff4:	1884983a 	sll	r2,r3,r2
 801cff8:	0084303a 	nor	r2,zero,r2
 801cffc:	1007883a 	mov	r3,r2
 801d000:	008200b4 	movhi	r2,2050
 801d004:	1087ea04 	addi	r2,r2,8104
 801d008:	10800017 	ldw	r2,0(r2)
 801d00c:	1886703a 	and	r3,r3,r2
 801d010:	008200b4 	movhi	r2,2050
 801d014:	1087ea04 	addi	r2,r2,8104
 801d018:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 801d01c:	008200b4 	movhi	r2,2050
 801d020:	1087ea04 	addi	r2,r2,8104
 801d024:	10800017 	ldw	r2,0(r2)
 801d028:	100170fa 	wrctl	ienable,r2
 801d02c:	e0bffa17 	ldw	r2,-24(fp)
 801d030:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 801d034:	e0bffb17 	ldw	r2,-20(fp)
 801d038:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 801d03c:	0005883a 	mov	r2,zero
 801d040:	e0bff115 	stw	r2,-60(fp)
 801d044:	e0bff217 	ldw	r2,-56(fp)
 801d048:	e0bffc15 	stw	r2,-16(fp)
 801d04c:	e0bffc17 	ldw	r2,-16(fp)
 801d050:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }
  return rc; 
 801d054:	e0bff117 	ldw	r2,-60(fp)
}
 801d058:	e037883a 	mov	sp,fp
 801d05c:	df000017 	ldw	fp,0(sp)
 801d060:	dec00104 	addi	sp,sp,4
 801d064:	f800283a 	ret

0801d068 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 801d068:	defffe04 	addi	sp,sp,-8
 801d06c:	dfc00115 	stw	ra,4(sp)
 801d070:	df000015 	stw	fp,0(sp)
 801d074:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 801d078:	008200b4 	movhi	r2,2050
 801d07c:	10809e04 	addi	r2,r2,632
 801d080:	10800017 	ldw	r2,0(r2)
 801d084:	10000526 	beq	r2,zero,801d09c <alt_get_errno+0x34>
 801d088:	008200b4 	movhi	r2,2050
 801d08c:	10809e04 	addi	r2,r2,632
 801d090:	10800017 	ldw	r2,0(r2)
 801d094:	103ee83a 	callr	r2
 801d098:	00000206 	br	801d0a4 <alt_get_errno+0x3c>
 801d09c:	008200b4 	movhi	r2,2050
 801d0a0:	1087e304 	addi	r2,r2,8076
}
 801d0a4:	e037883a 	mov	sp,fp
 801d0a8:	dfc00117 	ldw	ra,4(sp)
 801d0ac:	df000017 	ldw	fp,0(sp)
 801d0b0:	dec00204 	addi	sp,sp,8
 801d0b4:	f800283a 	ret

0801d0b8 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
 801d0b8:	defffb04 	addi	sp,sp,-20
 801d0bc:	dfc00415 	stw	ra,16(sp)
 801d0c0:	df000315 	stw	fp,12(sp)
 801d0c4:	dc000215 	stw	r16,8(sp)
 801d0c8:	df000304 	addi	fp,sp,12
 801d0cc:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
 801d0d0:	e0bffe17 	ldw	r2,-8(fp)
 801d0d4:	10800217 	ldw	r2,8(r2)
 801d0d8:	10d00034 	orhi	r3,r2,16384
 801d0dc:	e0bffe17 	ldw	r2,-8(fp)
 801d0e0:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 801d0e4:	e03ffd15 	stw	zero,-12(fp)
 801d0e8:	00002306 	br	801d178 <alt_file_locked+0xc0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 801d0ec:	040200b4 	movhi	r16,2050
 801d0f0:	843bb004 	addi	r16,r16,-4416
 801d0f4:	e0bffd17 	ldw	r2,-12(fp)
 801d0f8:	1009883a 	mov	r4,r2
 801d0fc:	01400304 	movi	r5,12
 801d100:	800334c0 	call	800334c <__mulsi3>
 801d104:	8085883a 	add	r2,r16,r2
 801d108:	10c00017 	ldw	r3,0(r2)
 801d10c:	e0bffe17 	ldw	r2,-8(fp)
 801d110:	10800017 	ldw	r2,0(r2)
 801d114:	1880151e 	bne	r3,r2,801d16c <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 801d118:	040200b4 	movhi	r16,2050
 801d11c:	843bb004 	addi	r16,r16,-4416
 801d120:	e0bffd17 	ldw	r2,-12(fp)
 801d124:	1009883a 	mov	r4,r2
 801d128:	01400304 	movi	r5,12
 801d12c:	800334c0 	call	800334c <__mulsi3>
 801d130:	8085883a 	add	r2,r16,r2
 801d134:	10800204 	addi	r2,r2,8
 801d138:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 801d13c:	10000b0e 	bge	r2,zero,801d16c <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
 801d140:	e13ffd17 	ldw	r4,-12(fp)
 801d144:	01400304 	movi	r5,12
 801d148:	800334c0 	call	800334c <__mulsi3>
 801d14c:	1007883a 	mov	r3,r2
 801d150:	008200b4 	movhi	r2,2050
 801d154:	10bbb004 	addi	r2,r2,-4416
 801d158:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 801d15c:	e0bffe17 	ldw	r2,-8(fp)
 801d160:	18800226 	beq	r3,r2,801d16c <alt_file_locked+0xb4>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
 801d164:	00bffcc4 	movi	r2,-13
 801d168:	00000a06 	br	801d194 <alt_file_locked+0xdc>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 801d16c:	e0bffd17 	ldw	r2,-12(fp)
 801d170:	10800044 	addi	r2,r2,1
 801d174:	e0bffd15 	stw	r2,-12(fp)
 801d178:	008200b4 	movhi	r2,2050
 801d17c:	10809b04 	addi	r2,r2,620
 801d180:	10800017 	ldw	r2,0(r2)
 801d184:	1007883a 	mov	r3,r2
 801d188:	e0bffd17 	ldw	r2,-12(fp)
 801d18c:	18bfd72e 	bgeu	r3,r2,801d0ec <__alt_data_end+0xfc01d0ec>
    }
  }
  
  /* The device is not locked */
 
  return 0;
 801d190:	0005883a 	mov	r2,zero
}
 801d194:	e6ffff04 	addi	sp,fp,-4
 801d198:	dfc00217 	ldw	ra,8(sp)
 801d19c:	df000117 	ldw	fp,4(sp)
 801d1a0:	dc000017 	ldw	r16,0(sp)
 801d1a4:	dec00304 	addi	sp,sp,12
 801d1a8:	f800283a 	ret

0801d1ac <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
 801d1ac:	defff604 	addi	sp,sp,-40
 801d1b0:	dfc00915 	stw	ra,36(sp)
 801d1b4:	df000815 	stw	fp,32(sp)
 801d1b8:	df000804 	addi	fp,sp,32
 801d1bc:	e13ffd15 	stw	r4,-12(fp)
 801d1c0:	e17ffe15 	stw	r5,-8(fp)
 801d1c4:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
 801d1c8:	00bfffc4 	movi	r2,-1
 801d1cc:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
 801d1d0:	00bffb44 	movi	r2,-19
 801d1d4:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
 801d1d8:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
 801d1dc:	e13ffd17 	ldw	r4,-12(fp)
 801d1e0:	014200b4 	movhi	r5,2050
 801d1e4:	29409904 	addi	r5,r5,612
 801d1e8:	801a1e80 	call	801a1e8 <alt_find_dev>
 801d1ec:	e0bff815 	stw	r2,-32(fp)
 801d1f0:	e0bff817 	ldw	r2,-32(fp)
 801d1f4:	1000051e 	bne	r2,zero,801d20c <open+0x60>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
 801d1f8:	e13ffd17 	ldw	r4,-12(fp)
 801d1fc:	801d4c80 	call	801d4c8 <alt_find_file>
 801d200:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
 801d204:	00800044 	movi	r2,1
 801d208:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
 801d20c:	e0bff817 	ldw	r2,-32(fp)
 801d210:	10002b26 	beq	r2,zero,801d2c0 <open+0x114>
  {
    if ((index = alt_get_fd (dev)) < 0)
 801d214:	e13ff817 	ldw	r4,-32(fp)
 801d218:	801d5dc0 	call	801d5dc <alt_get_fd>
 801d21c:	e0bff915 	stw	r2,-28(fp)
 801d220:	e0bff917 	ldw	r2,-28(fp)
 801d224:	1000030e 	bge	r2,zero,801d234 <open+0x88>
    {
      status = index;
 801d228:	e0bff917 	ldw	r2,-28(fp)
 801d22c:	e0bffa15 	stw	r2,-24(fp)
 801d230:	00002506 	br	801d2c8 <open+0x11c>
    }
    else
    {
      fd = &alt_fd_list[index];
 801d234:	e13ff917 	ldw	r4,-28(fp)
 801d238:	01400304 	movi	r5,12
 801d23c:	800334c0 	call	800334c <__mulsi3>
 801d240:	1007883a 	mov	r3,r2
 801d244:	008200b4 	movhi	r2,2050
 801d248:	10bbb004 	addi	r2,r2,-4416
 801d24c:	1885883a 	add	r2,r3,r2
 801d250:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
 801d254:	e0fffe17 	ldw	r3,-8(fp)
 801d258:	00900034 	movhi	r2,16384
 801d25c:	10bfffc4 	addi	r2,r2,-1
 801d260:	1886703a 	and	r3,r3,r2
 801d264:	e0bffc17 	ldw	r2,-16(fp)
 801d268:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
 801d26c:	e0bffb17 	ldw	r2,-20(fp)
 801d270:	1000051e 	bne	r2,zero,801d288 <open+0xdc>
 801d274:	e13ffc17 	ldw	r4,-16(fp)
 801d278:	801d0b80 	call	801d0b8 <alt_file_locked>
 801d27c:	e0bffa15 	stw	r2,-24(fp)
 801d280:	e0bffa17 	ldw	r2,-24(fp)
 801d284:	10001016 	blt	r2,zero,801d2c8 <open+0x11c>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
 801d288:	e0bff817 	ldw	r2,-32(fp)
 801d28c:	10800317 	ldw	r2,12(r2)
 801d290:	10000826 	beq	r2,zero,801d2b4 <open+0x108>
 801d294:	e0bff817 	ldw	r2,-32(fp)
 801d298:	10800317 	ldw	r2,12(r2)
 801d29c:	e13ffc17 	ldw	r4,-16(fp)
 801d2a0:	e17ffd17 	ldw	r5,-12(fp)
 801d2a4:	e1bffe17 	ldw	r6,-8(fp)
 801d2a8:	e1ffff17 	ldw	r7,-4(fp)
 801d2ac:	103ee83a 	callr	r2
 801d2b0:	00000106 	br	801d2b8 <open+0x10c>
 801d2b4:	0005883a 	mov	r2,zero
 801d2b8:	e0bffa15 	stw	r2,-24(fp)
 801d2bc:	00000206 	br	801d2c8 <open+0x11c>
      }
    }
  }
  else
  {
    status = -ENODEV;
 801d2c0:	00bffb44 	movi	r2,-19
 801d2c4:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
 801d2c8:	e0bffa17 	ldw	r2,-24(fp)
 801d2cc:	1000090e 	bge	r2,zero,801d2f4 <open+0x148>
  {
    alt_release_fd (index);  
 801d2d0:	e13ff917 	ldw	r4,-28(fp)
 801d2d4:	801aca40 	call	801aca4 <alt_release_fd>
    ALT_ERRNO = -status;
 801d2d8:	801d0680 	call	801d068 <alt_get_errno>
 801d2dc:	1007883a 	mov	r3,r2
 801d2e0:	e0bffa17 	ldw	r2,-24(fp)
 801d2e4:	0085c83a 	sub	r2,zero,r2
 801d2e8:	18800015 	stw	r2,0(r3)
    return -1;
 801d2ec:	00bfffc4 	movi	r2,-1
 801d2f0:	00000106 	br	801d2f8 <open+0x14c>
  }
  
  /* return the reference upon success */

  return index;
 801d2f4:	e0bff917 	ldw	r2,-28(fp)
}
 801d2f8:	e037883a 	mov	sp,fp
 801d2fc:	dfc00117 	ldw	ra,4(sp)
 801d300:	df000017 	ldw	fp,0(sp)
 801d304:	dec00204 	addi	sp,sp,8
 801d308:	f800283a 	ret

0801d30c <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
 801d30c:	defffa04 	addi	sp,sp,-24
 801d310:	df000515 	stw	fp,20(sp)
 801d314:	df000504 	addi	fp,sp,20
 801d318:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 801d31c:	0005303a 	rdctl	r2,status
 801d320:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 801d324:	e0fffc17 	ldw	r3,-16(fp)
 801d328:	00bfff84 	movi	r2,-2
 801d32c:	1884703a 	and	r2,r3,r2
 801d330:	1001703a 	wrctl	status,r2
  
  return context;
 801d334:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
 801d338:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
 801d33c:	e0bfff17 	ldw	r2,-4(fp)
 801d340:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
 801d344:	e0bffd17 	ldw	r2,-12(fp)
 801d348:	10800017 	ldw	r2,0(r2)
 801d34c:	e0fffd17 	ldw	r3,-12(fp)
 801d350:	18c00117 	ldw	r3,4(r3)
 801d354:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
 801d358:	e0bffd17 	ldw	r2,-12(fp)
 801d35c:	10800117 	ldw	r2,4(r2)
 801d360:	e0fffd17 	ldw	r3,-12(fp)
 801d364:	18c00017 	ldw	r3,0(r3)
 801d368:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
 801d36c:	e0bffd17 	ldw	r2,-12(fp)
 801d370:	e0fffd17 	ldw	r3,-12(fp)
 801d374:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
 801d378:	e0bffd17 	ldw	r2,-12(fp)
 801d37c:	e0fffd17 	ldw	r3,-12(fp)
 801d380:	10c00015 	stw	r3,0(r2)
 801d384:	e0bffb17 	ldw	r2,-20(fp)
 801d388:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 801d38c:	e0bffe17 	ldw	r2,-8(fp)
 801d390:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
 801d394:	e037883a 	mov	sp,fp
 801d398:	df000017 	ldw	fp,0(sp)
 801d39c:	dec00104 	addi	sp,sp,4
 801d3a0:	f800283a 	ret

0801d3a4 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
 801d3a4:	defffb04 	addi	sp,sp,-20
 801d3a8:	dfc00415 	stw	ra,16(sp)
 801d3ac:	df000315 	stw	fp,12(sp)
 801d3b0:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
 801d3b4:	d0a02e17 	ldw	r2,-32584(gp)
 801d3b8:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
 801d3bc:	d0a77717 	ldw	r2,-25124(gp)
 801d3c0:	10800044 	addi	r2,r2,1
 801d3c4:	d0a77715 	stw	r2,-25124(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 801d3c8:	00002e06 	br	801d484 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
 801d3cc:	e0bffd17 	ldw	r2,-12(fp)
 801d3d0:	10800017 	ldw	r2,0(r2)
 801d3d4:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
 801d3d8:	e0bffd17 	ldw	r2,-12(fp)
 801d3dc:	10800403 	ldbu	r2,16(r2)
 801d3e0:	10803fcc 	andi	r2,r2,255
 801d3e4:	10000426 	beq	r2,zero,801d3f8 <alt_tick+0x54>
 801d3e8:	d0a77717 	ldw	r2,-25124(gp)
 801d3ec:	1000021e 	bne	r2,zero,801d3f8 <alt_tick+0x54>
    {
      alarm->rollover = 0;
 801d3f0:	e0bffd17 	ldw	r2,-12(fp)
 801d3f4:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
 801d3f8:	e0bffd17 	ldw	r2,-12(fp)
 801d3fc:	10800217 	ldw	r2,8(r2)
 801d400:	d0e77717 	ldw	r3,-25124(gp)
 801d404:	18801d36 	bltu	r3,r2,801d47c <alt_tick+0xd8>
 801d408:	e0bffd17 	ldw	r2,-12(fp)
 801d40c:	10800403 	ldbu	r2,16(r2)
 801d410:	10803fcc 	andi	r2,r2,255
 801d414:	1000191e 	bne	r2,zero,801d47c <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
 801d418:	e0bffd17 	ldw	r2,-12(fp)
 801d41c:	10800317 	ldw	r2,12(r2)
 801d420:	e0fffd17 	ldw	r3,-12(fp)
 801d424:	18c00517 	ldw	r3,20(r3)
 801d428:	1809883a 	mov	r4,r3
 801d42c:	103ee83a 	callr	r2
 801d430:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
 801d434:	e0bfff17 	ldw	r2,-4(fp)
 801d438:	1000031e 	bne	r2,zero,801d448 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
 801d43c:	e13ffd17 	ldw	r4,-12(fp)
 801d440:	801d30c0 	call	801d30c <alt_alarm_stop>
 801d444:	00000d06 	br	801d47c <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
 801d448:	e0bffd17 	ldw	r2,-12(fp)
 801d44c:	10c00217 	ldw	r3,8(r2)
 801d450:	e0bfff17 	ldw	r2,-4(fp)
 801d454:	1887883a 	add	r3,r3,r2
 801d458:	e0bffd17 	ldw	r2,-12(fp)
 801d45c:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
 801d460:	e0bffd17 	ldw	r2,-12(fp)
 801d464:	10c00217 	ldw	r3,8(r2)
 801d468:	d0a77717 	ldw	r2,-25124(gp)
 801d46c:	1880032e 	bgeu	r3,r2,801d47c <alt_tick+0xd8>
        {
          alarm->rollover = 1;
 801d470:	e0bffd17 	ldw	r2,-12(fp)
 801d474:	00c00044 	movi	r3,1
 801d478:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
 801d47c:	e0bffe17 	ldw	r2,-8(fp)
 801d480:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 801d484:	e0fffd17 	ldw	r3,-12(fp)
 801d488:	d0a02e04 	addi	r2,gp,-32584
 801d48c:	18bfcf1e 	bne	r3,r2,801d3cc <__alt_data_end+0xfc01d3cc>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
 801d490:	0001883a 	nop
}
 801d494:	e037883a 	mov	sp,fp
 801d498:	dfc00117 	ldw	ra,4(sp)
 801d49c:	df000017 	ldw	fp,0(sp)
 801d4a0:	dec00204 	addi	sp,sp,8
 801d4a4:	f800283a 	ret

0801d4a8 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
 801d4a8:	deffff04 	addi	sp,sp,-4
 801d4ac:	df000015 	stw	fp,0(sp)
 801d4b0:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
 801d4b4:	000170fa 	wrctl	ienable,zero
}
 801d4b8:	e037883a 	mov	sp,fp
 801d4bc:	df000017 	ldw	fp,0(sp)
 801d4c0:	dec00104 	addi	sp,sp,4
 801d4c4:	f800283a 	ret

0801d4c8 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
 801d4c8:	defffb04 	addi	sp,sp,-20
 801d4cc:	dfc00415 	stw	ra,16(sp)
 801d4d0:	df000315 	stw	fp,12(sp)
 801d4d4:	df000304 	addi	fp,sp,12
 801d4d8:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
 801d4dc:	008200b4 	movhi	r2,2050
 801d4e0:	10809704 	addi	r2,r2,604
 801d4e4:	10800017 	ldw	r2,0(r2)
 801d4e8:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 801d4ec:	00003106 	br	801d5b4 <alt_find_file+0xec>
  {
    len = strlen(next->name);
 801d4f0:	e0bffd17 	ldw	r2,-12(fp)
 801d4f4:	10800217 	ldw	r2,8(r2)
 801d4f8:	1009883a 	mov	r4,r2
 801d4fc:	80049680 	call	8004968 <strlen>
 801d500:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
 801d504:	e0bffd17 	ldw	r2,-12(fp)
 801d508:	10c00217 	ldw	r3,8(r2)
 801d50c:	e0bffe17 	ldw	r2,-8(fp)
 801d510:	10bfffc4 	addi	r2,r2,-1
 801d514:	1885883a 	add	r2,r3,r2
 801d518:	10800003 	ldbu	r2,0(r2)
 801d51c:	10803fcc 	andi	r2,r2,255
 801d520:	1080201c 	xori	r2,r2,128
 801d524:	10bfe004 	addi	r2,r2,-128
 801d528:	10800bd8 	cmpnei	r2,r2,47
 801d52c:	1000031e 	bne	r2,zero,801d53c <alt_find_file+0x74>
    {
      len -= 1;
 801d530:	e0bffe17 	ldw	r2,-8(fp)
 801d534:	10bfffc4 	addi	r2,r2,-1
 801d538:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 801d53c:	e0bffe17 	ldw	r2,-8(fp)
 801d540:	e0ffff17 	ldw	r3,-4(fp)
 801d544:	1885883a 	add	r2,r3,r2
 801d548:	10800003 	ldbu	r2,0(r2)
 801d54c:	10803fcc 	andi	r2,r2,255
 801d550:	1080201c 	xori	r2,r2,128
 801d554:	10bfe004 	addi	r2,r2,-128
 801d558:	10800be0 	cmpeqi	r2,r2,47
 801d55c:	1000081e 	bne	r2,zero,801d580 <alt_find_file+0xb8>
 801d560:	e0bffe17 	ldw	r2,-8(fp)
 801d564:	e0ffff17 	ldw	r3,-4(fp)
 801d568:	1885883a 	add	r2,r3,r2
 801d56c:	10800003 	ldbu	r2,0(r2)
 801d570:	10803fcc 	andi	r2,r2,255
 801d574:	1080201c 	xori	r2,r2,128
 801d578:	10bfe004 	addi	r2,r2,-128
 801d57c:	10000a1e 	bne	r2,zero,801d5a8 <alt_find_file+0xe0>
        !memcmp (next->name, name, len))
 801d580:	e0bffd17 	ldw	r2,-12(fp)
 801d584:	10c00217 	ldw	r3,8(r2)
 801d588:	e0bffe17 	ldw	r2,-8(fp)
 801d58c:	1809883a 	mov	r4,r3
 801d590:	e17fff17 	ldw	r5,-4(fp)
 801d594:	100d883a 	mov	r6,r2
 801d598:	800e0680 	call	800e068 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 801d59c:	1000021e 	bne	r2,zero,801d5a8 <alt_find_file+0xe0>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
 801d5a0:	e0bffd17 	ldw	r2,-12(fp)
 801d5a4:	00000806 	br	801d5c8 <alt_find_file+0x100>
    }
    next = (alt_dev*) next->llist.next;
 801d5a8:	e0bffd17 	ldw	r2,-12(fp)
 801d5ac:	10800017 	ldw	r2,0(r2)
 801d5b0:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 801d5b4:	e0fffd17 	ldw	r3,-12(fp)
 801d5b8:	008200b4 	movhi	r2,2050
 801d5bc:	10809704 	addi	r2,r2,604
 801d5c0:	18bfcb1e 	bne	r3,r2,801d4f0 <__alt_data_end+0xfc01d4f0>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
 801d5c4:	0005883a 	mov	r2,zero
}
 801d5c8:	e037883a 	mov	sp,fp
 801d5cc:	dfc00117 	ldw	ra,4(sp)
 801d5d0:	df000017 	ldw	fp,0(sp)
 801d5d4:	dec00204 	addi	sp,sp,8
 801d5d8:	f800283a 	ret

0801d5dc <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
 801d5dc:	defffa04 	addi	sp,sp,-24
 801d5e0:	dfc00515 	stw	ra,20(sp)
 801d5e4:	df000415 	stw	fp,16(sp)
 801d5e8:	dc000315 	stw	r16,12(sp)
 801d5ec:	df000404 	addi	fp,sp,16
 801d5f0:	e13ffe15 	stw	r4,-8(fp)
  alt_32 i;
  int rc = -EMFILE;
 801d5f4:	00bffa04 	movi	r2,-24
 801d5f8:	e0bffd15 	stw	r2,-12(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 801d5fc:	e03ffc15 	stw	zero,-16(fp)
 801d600:	00002106 	br	801d688 <alt_get_fd+0xac>
  {
    if (!alt_fd_list[i].dev)
 801d604:	040200b4 	movhi	r16,2050
 801d608:	843bb004 	addi	r16,r16,-4416
 801d60c:	e0bffc17 	ldw	r2,-16(fp)
 801d610:	1009883a 	mov	r4,r2
 801d614:	01400304 	movi	r5,12
 801d618:	800334c0 	call	800334c <__mulsi3>
 801d61c:	8085883a 	add	r2,r16,r2
 801d620:	10800017 	ldw	r2,0(r2)
 801d624:	1000151e 	bne	r2,zero,801d67c <alt_get_fd+0xa0>
    {
      alt_fd_list[i].dev = dev;
 801d628:	040200b4 	movhi	r16,2050
 801d62c:	843bb004 	addi	r16,r16,-4416
 801d630:	e0bffc17 	ldw	r2,-16(fp)
 801d634:	1009883a 	mov	r4,r2
 801d638:	01400304 	movi	r5,12
 801d63c:	800334c0 	call	800334c <__mulsi3>
 801d640:	8085883a 	add	r2,r16,r2
 801d644:	e0fffe17 	ldw	r3,-8(fp)
 801d648:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
 801d64c:	008200b4 	movhi	r2,2050
 801d650:	10809b04 	addi	r2,r2,620
 801d654:	10c00017 	ldw	r3,0(r2)
 801d658:	e0bffc17 	ldw	r2,-16(fp)
 801d65c:	1880040e 	bge	r3,r2,801d670 <alt_get_fd+0x94>
      {
        alt_max_fd = i;
 801d660:	008200b4 	movhi	r2,2050
 801d664:	10809b04 	addi	r2,r2,620
 801d668:	e0fffc17 	ldw	r3,-16(fp)
 801d66c:	10c00015 	stw	r3,0(r2)
      }
      rc = i;
 801d670:	e0bffc17 	ldw	r2,-16(fp)
 801d674:	e0bffd15 	stw	r2,-12(fp)
      goto alt_get_fd_exit;
 801d678:	00000606 	br	801d694 <alt_get_fd+0xb8>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 801d67c:	e0bffc17 	ldw	r2,-16(fp)
 801d680:	10800044 	addi	r2,r2,1
 801d684:	e0bffc15 	stw	r2,-16(fp)
 801d688:	e0bffc17 	ldw	r2,-16(fp)
 801d68c:	10800810 	cmplti	r2,r2,32
 801d690:	103fdc1e 	bne	r2,zero,801d604 <__alt_data_end+0xfc01d604>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
 801d694:	e0bffd17 	ldw	r2,-12(fp)
}
 801d698:	e6ffff04 	addi	sp,fp,-4
 801d69c:	dfc00217 	ldw	ra,8(sp)
 801d6a0:	df000117 	ldw	fp,4(sp)
 801d6a4:	dc000017 	ldw	r16,0(sp)
 801d6a8:	dec00304 	addi	sp,sp,12
 801d6ac:	f800283a 	ret

0801d6b0 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
 801d6b0:	defffe04 	addi	sp,sp,-8
 801d6b4:	df000115 	stw	fp,4(sp)
 801d6b8:	df000104 	addi	fp,sp,4
 801d6bc:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
 801d6c0:	e0bfff17 	ldw	r2,-4(fp)
 801d6c4:	10bffe84 	addi	r2,r2,-6
 801d6c8:	10c00428 	cmpgeui	r3,r2,16
 801d6cc:	18001a1e 	bne	r3,zero,801d738 <alt_exception_cause_generated_bad_addr+0x88>
 801d6d0:	100690ba 	slli	r3,r2,2
 801d6d4:	008200b4 	movhi	r2,2050
 801d6d8:	10b5ba04 	addi	r2,r2,-10520
 801d6dc:	1885883a 	add	r2,r3,r2
 801d6e0:	10800017 	ldw	r2,0(r2)
 801d6e4:	1000683a 	jmp	r2
 801d6e8:	0801d728 	cmpgeui	zero,at,1884
 801d6ec:	0801d728 	cmpgeui	zero,at,1884
 801d6f0:	0801d738 	rdprs	zero,at,1884
 801d6f4:	0801d738 	rdprs	zero,at,1884
 801d6f8:	0801d738 	rdprs	zero,at,1884
 801d6fc:	0801d728 	cmpgeui	zero,at,1884
 801d700:	0801d730 	cmpltui	zero,at,1884
 801d704:	0801d738 	rdprs	zero,at,1884
 801d708:	0801d728 	cmpgeui	zero,at,1884
 801d70c:	0801d728 	cmpgeui	zero,at,1884
 801d710:	0801d738 	rdprs	zero,at,1884
 801d714:	0801d728 	cmpgeui	zero,at,1884
 801d718:	0801d730 	cmpltui	zero,at,1884
 801d71c:	0801d738 	rdprs	zero,at,1884
 801d720:	0801d738 	rdprs	zero,at,1884
 801d724:	0801d728 	cmpgeui	zero,at,1884
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
 801d728:	00800044 	movi	r2,1
 801d72c:	00000306 	br	801d73c <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
 801d730:	0005883a 	mov	r2,zero
 801d734:	00000106 	br	801d73c <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
 801d738:	0005883a 	mov	r2,zero
  }
}
 801d73c:	e037883a 	mov	sp,fp
 801d740:	df000017 	ldw	fp,0(sp)
 801d744:	dec00104 	addi	sp,sp,4
 801d748:	f800283a 	ret

0801d74c <atexit>:
 801d74c:	200b883a 	mov	r5,r4
 801d750:	000d883a 	mov	r6,zero
 801d754:	0009883a 	mov	r4,zero
 801d758:	000f883a 	mov	r7,zero
 801d75c:	801d7601 	jmpi	801d760 <__register_exitproc>

0801d760 <__register_exitproc>:
 801d760:	008200b4 	movhi	r2,2050
 801d764:	defffa04 	addi	sp,sp,-24
 801d768:	10808f04 	addi	r2,r2,572
 801d76c:	dc000315 	stw	r16,12(sp)
 801d770:	14000017 	ldw	r16,0(r2)
 801d774:	dc400415 	stw	r17,16(sp)
 801d778:	dfc00515 	stw	ra,20(sp)
 801d77c:	80805217 	ldw	r2,328(r16)
 801d780:	2023883a 	mov	r17,r4
 801d784:	10003626 	beq	r2,zero,801d860 <__register_exitproc+0x100>
 801d788:	10c00117 	ldw	r3,4(r2)
 801d78c:	010007c4 	movi	r4,31
 801d790:	20c00e16 	blt	r4,r3,801d7cc <__register_exitproc+0x6c>
 801d794:	1a400044 	addi	r9,r3,1
 801d798:	8800211e 	bne	r17,zero,801d820 <__register_exitproc+0xc0>
 801d79c:	18c00084 	addi	r3,r3,2
 801d7a0:	18c7883a 	add	r3,r3,r3
 801d7a4:	18c7883a 	add	r3,r3,r3
 801d7a8:	12400115 	stw	r9,4(r2)
 801d7ac:	10c7883a 	add	r3,r2,r3
 801d7b0:	19400015 	stw	r5,0(r3)
 801d7b4:	0005883a 	mov	r2,zero
 801d7b8:	dfc00517 	ldw	ra,20(sp)
 801d7bc:	dc400417 	ldw	r17,16(sp)
 801d7c0:	dc000317 	ldw	r16,12(sp)
 801d7c4:	dec00604 	addi	sp,sp,24
 801d7c8:	f800283a 	ret
 801d7cc:	00820034 	movhi	r2,2048
 801d7d0:	108e3904 	addi	r2,r2,14564
 801d7d4:	10002526 	beq	r2,zero,801d86c <__register_exitproc+0x10c>
 801d7d8:	01006404 	movi	r4,400
 801d7dc:	d9400015 	stw	r5,0(sp)
 801d7e0:	d9800115 	stw	r6,4(sp)
 801d7e4:	d9c00215 	stw	r7,8(sp)
 801d7e8:	80038e40 	call	80038e4 <malloc>
 801d7ec:	d9400017 	ldw	r5,0(sp)
 801d7f0:	d9800117 	ldw	r6,4(sp)
 801d7f4:	d9c00217 	ldw	r7,8(sp)
 801d7f8:	10001c26 	beq	r2,zero,801d86c <__register_exitproc+0x10c>
 801d7fc:	80c05217 	ldw	r3,328(r16)
 801d800:	10000115 	stw	zero,4(r2)
 801d804:	02400044 	movi	r9,1
 801d808:	10c00015 	stw	r3,0(r2)
 801d80c:	80805215 	stw	r2,328(r16)
 801d810:	10006215 	stw	zero,392(r2)
 801d814:	10006315 	stw	zero,396(r2)
 801d818:	0007883a 	mov	r3,zero
 801d81c:	883fdf26 	beq	r17,zero,801d79c <__alt_data_end+0xfc01d79c>
 801d820:	18d1883a 	add	r8,r3,r3
 801d824:	4211883a 	add	r8,r8,r8
 801d828:	1211883a 	add	r8,r2,r8
 801d82c:	41802215 	stw	r6,136(r8)
 801d830:	01000044 	movi	r4,1
 801d834:	11806217 	ldw	r6,392(r2)
 801d838:	20c8983a 	sll	r4,r4,r3
 801d83c:	310cb03a 	or	r6,r6,r4
 801d840:	11806215 	stw	r6,392(r2)
 801d844:	41c04215 	stw	r7,264(r8)
 801d848:	01800084 	movi	r6,2
 801d84c:	89bfd31e 	bne	r17,r6,801d79c <__alt_data_end+0xfc01d79c>
 801d850:	11806317 	ldw	r6,396(r2)
 801d854:	3108b03a 	or	r4,r6,r4
 801d858:	11006315 	stw	r4,396(r2)
 801d85c:	003fcf06 	br	801d79c <__alt_data_end+0xfc01d79c>
 801d860:	80805304 	addi	r2,r16,332
 801d864:	80805215 	stw	r2,328(r16)
 801d868:	003fc706 	br	801d788 <__alt_data_end+0xfc01d788>
 801d86c:	00bfffc4 	movi	r2,-1
 801d870:	003fd106 	br	801d7b8 <__alt_data_end+0xfc01d7b8>
 801d874:	0201ffff 	0x201ffff
 801d878:	883a0000 	call	883a000 <_gp+0x811e2c>
 801d87c:	010d0bff 	0x10d0bff
 801d880:	01010002 	0x1010002
	...
 801d88c:	010d0bff 	0x10d0bff
 801d890:	01010004 	movi	r4,1024
 801d894:	00000100 	call	10 <__alt_mem_sdram_controller-0x7fffff0>
 801d898:	00000000 	call	0 <__alt_mem_sdram_controller-0x8000000>
 801d89c:	01110bff 	0x1110bff
 801d8a0:	01010004 	movi	r4,1024
 801d8a4:	7f000105 	stb	fp,4(r15)
 801d8a8:	007d0000 	call	7d000 <__alt_mem_sdram_controller-0x7f83000>
	...
 801d8b4:	0800166c 	andhi	zero,at,89
 801d8b8:	0800169c 	xori	zero,at,90
