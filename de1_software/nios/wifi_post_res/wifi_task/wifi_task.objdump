
wifi_task.elf:     file format elf32-littlenios2
wifi_task.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x08000230

Program Header:
    LOAD off    0x00001000 vaddr 0x08000000 paddr 0x08000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x08000020 paddr 0x08000020 align 2**12
         filesz 0x00017070 memsz 0x00017070 flags r-x
    LOAD off    0x00018090 vaddr 0x08017090 paddr 0x08018cfc align 2**12
         filesz 0x00001c6c memsz 0x00001c6c flags rw-
    LOAD off    0x0001a968 vaddr 0x0801a968 paddr 0x0801a968 align 2**12
         filesz 0x00000000 memsz 0x00000a74 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  08000000  08000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000210  08000020  08000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0001673c  08000230  08000230  00001230  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000724  0801696c  0801696c  0001796c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001c6c  08017090  08018cfc  00018090  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000a74  0801a968  0801a968  0001a968  2**2
                  ALLOC, SMALL_DATA
  6 .sdram_controller 00000000  0801b3dc  0801b3dc  00019cfc  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  00019cfc  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00001258  00000000  00000000  00019d20  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   00033945  00000000  00000000  0001af78  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 0000d3f6  00000000  00000000  0004e8bd  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   00010768  00000000  00000000  0005bcb3  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  0000341c  00000000  00000000  0006c41c  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00006bd2  00000000  00000000  0006f838  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    0001fb3e  00000000  00000000  0007640a  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000010  00000000  00000000  00095f48  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00001cf8  00000000  00000000  00095f58  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  0009d1f3  2**0
                  CONTENTS, READONLY
 18 .cpu          0000000c  00000000  00000000  0009d1f6  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  0009d202  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  0009d203  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  0009d204  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  0009d208  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  0009d20c  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   0000000b  00000000  00000000  0009d210  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    0000000b  00000000  00000000  0009d21b  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   0000000b  00000000  00000000  0009d226  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 0000000f  00000000  00000000  0009d231  2**0
                  CONTENTS, READONLY
 28 .quartus_project_dir 0000001d  00000000  00000000  0009d240  2**0
                  CONTENTS, READONLY
 29 .jdi          00007b07  00000000  00000000  0009d25d  2**0
                  CONTENTS, READONLY
 30 .sopcinfo     002f5c98  00000000  00000000  000a4d64  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
08000000 l    d  .entry	00000000 .entry
08000020 l    d  .exceptions	00000000 .exceptions
08000230 l    d  .text	00000000 .text
0801696c l    d  .rodata	00000000 .rodata
08017090 l    d  .rwdata	00000000 .rwdata
0801a968 l    d  .bss	00000000 .bss
0801b3dc l    d  .sdram_controller	00000000 .sdram_controller
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 D:/tag2/de1_software/nios/wifi_post_res/wifi_task_bsp//obj/HAL/src/crt0.o
08000268 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 WiFiUart.cpp
00000000 l    df *ABS*	00000000 main.cpp
00000000 l    df *ABS*	00000000 wifi_task.cpp
00000000 l    df *ABS*	00000000 eh_personality.cc
08000b78 l     F .text	00000058 _ZL12read_sleb128PKhPl
08000bd0 l     F .text	00000088 _ZL16get_adjusted_ptrPKSt9type_infoS1_PPv
08000c58 l     F .text	000000a0 _ZL21size_of_encoded_valueh
08000cf8 l     F .text	00000210 _ZL28read_encoded_value_with_basehjPKhPj
08000f08 l     F .text	00000054 _ZL15get_ttype_entryP16lsda_header_infom
08000f5c l     F .text	000000a8 _ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl
08001004 l     F .text	00000088 _ZL21base_of_encoded_valuehP15_Unwind_Context
0800108c l     F .text	00000240 _ZL28check_compact_exception_specPKSt9type_infoPvPKhij
080012cc l     F .text	00000134 _ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info
00000000 l    df *ABS*	00000000 eh_globals.cc
0801a968 l     O .bss	00000008 _ZL10eh_globals
00000000 l    df *ABS*	00000000 class_type_info.cc
00000000 l    df *ABS*	00000000 del_op.cc
00000000 l    df *ABS*	00000000 eh_terminate.cc
00000000 l    df *ABS*	00000000 si_class_type_info.cc
00000000 l    df *ABS*	00000000 eh_catch.cc
00000000 l    df *ABS*	00000000 eh_call.cc
00000000 l    df *ABS*	00000000 eh_term_handler.cc
00000000 l    df *ABS*	00000000 eh_throw.cc
08002408 l     F .text	00000044 _ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception
00000000 l    df *ABS*	00000000 tinfo.cc
00000000 l    df *ABS*	00000000 eh_alloc.cc
0801a974 l     O .bss	00000004 _ZL14emergency_used
0801aab4 l     O .bss	00000800 _ZL16emergency_buffer
0801a970 l     O .bss	00000004 _ZL15dependents_used
0801a9b4 l     O .bss	00000100 _ZL17dependents_buffer
00000000 l    df *ABS*	00000000 eh_exception.cc
00000000 l    df *ABS*	00000000 eh_unex_handler.cc
00000000 l    df *ABS*	00000000 pure.cc
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 unwind-sjlj.c
08002820 l     F .text	00000118 _Unwind_ForcedUnwind_Phase2
0801a978 l     O .bss	00000004 fc_static
08002938 l     F .text	000000c0 _Unwind_RaiseException_Phase2
080029f8 l     F .text	00000030 uw_install_context.isra.1
00000000 l    df *ABS*	00000000 abort.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 signal.c
00000000 l    df *ABS*	00000000 signalr.c
00000000 l    df *ABS*	00000000 snprintf.c
00000000 l    df *ABS*	00000000 strcat.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strcpy.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
08016d52 l     O .rodata	00000010 zeroes.4166
08016d62 l     O .rodata	00000010 blanks.4165
00000000 l    df *ABS*	00000000 vfprintf.c
08016d72 l     O .rodata	00000010 zeroes.4181
08016d82 l     O .rodata	00000010 blanks.4180
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
080081a4 l     F .text	00000228 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
08009d4c l     F .text	00000008 __fp_lock
08009d54 l     F .text	00000008 __fp_unlock
08009d68 l     F .text	000001a0 __sinit.part.1
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
08017498 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 locale.c
080178dc l     O .rwdata	00000020 lc_ctype_charset
080178bc l     O .rwdata	00000020 lc_message_charset
080178fc l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 mprec.c
08016db4 l     O .rodata	0000000c p05.2678
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 vfprintf.c
08016ed8 l     O .rodata	00000010 zeroes.4110
08016ee8 l     O .rodata	00000010 blanks.4109
00000000 l    df *ABS*	00000000 vfprintf.c
0800dc6c l     F .text	000000fc __sprint_r.part.0
08016f08 l     O .rodata	00000010 blanks.4125
08016ef8 l     O .rodata	00000010 zeroes.4126
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
08010770 l     F .text	0000006c udivmodsi4
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
08013098 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
080131c0 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_exit.c
00000000 l    df *ABS*	00000000 alt_fstat.c
08013220 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_getpid.c
00000000 l    df *ABS*	00000000 alt_isatty.c
08013348 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_kill.c
08013444 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
080135c4 l     F .text	00000064 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
080136a8 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0801388c l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
08018cdc l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
08013b10 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
08013c60 l     F .text	00000038 alt_dev_reg
08017adc l     O .rwdata	000000a4 dma_fpga_to_hps_priv
08017b80 l     O .rwdata	0000001c dma_fpga_to_hps_tx
08017b9c l     O .rwdata	0000001c dma_fpga_to_hps_rx
08017bb8 l     O .rwdata	00001060 jtag_uart_0
08018c18 l     O .rwdata	0000002c bt_rs232_uart
08018c44 l     O .rwdata	0000002c wifi_rs232_uart
00000000 l    df *ABS*	00000000 altera_avalon_dma.c
08013d50 l     F .text	00000038 alt_dma_txchan_reg
08013d88 l     F .text	00000038 alt_dma_rxchan_reg
08013eb4 l     F .text	00000098 alt_avalon_dma_launch_txonly
08013f4c l     F .text	00000098 alt_avalon_dma_launch_rxonly
08013fe4 l     F .text	00000344 alt_avalon_dma_ioctl
0801469c l     F .text	000001c0 alt_avalon_dma_irq
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
08014b20 l     F .text	00000208 altera_avalon_jtag_uart_irq
08014d28 l     F .text	000000a8 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_up_avalon_rs232.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
08015830 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_dma_rxchan_open.c
08015924 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_dma_txchan_open.c
080159c8 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
08015bd0 l     F .text	000000e0 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_register.c
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
08015ed8 l     F .text	00000050 alt_get_errno
08015f28 l     F .text	000000f4 alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
0801a9b0 g     O .bss	00000004 alt_instruction_exception_handler
08002668 g     F .text	00000044 __cxa_free_exception
0800256c g     F .text	00000008 _ZNKSt9type_info15__is_function_pEv
0800c00c g     F .text	00000074 _mprec_log10
08001f00 g     F .text	00000018 _ZSt10unexpectedv
0800c0f8 g     F .text	0000008c __any_on
0800f698 g     F .text	00000054 _isatty_r
08016dc0 g     O .rodata	00000028 __mprec_tinytens
080137d4 g     F .text	00000078 alt_main
08003dbc g     F .text	00000090 strcpy
08000690 g     F .text	00000080 _ZN8WiFiUart6read_mEPii
080036b4 g     F .text	000000b8 _puts_r
0801b2dc g     O .bss	00000100 alt_irq
080027a8 g     F .text	00000004 _ZN10__cxxabiv115__forced_unwindD1Ev
0800f6ec g     F .text	0000005c _lseek_r
0800029c g     F .text	00000048 _ZN8WiFiUartD1Ev
08002ab4 g     F .text	00000020 .hidden _Unwind_GetIPInfo
08018cfc g       *ABS*	00000000 __flash_rwdata_start
08011ab8 g     F .text	00000084 .hidden __eqdf2
080024dc g     F .text	00000084 __cxa_rethrow
08002a40 g     F .text	00000014 .hidden _Unwind_SjLj_Unregister
08001f3c g     F .text	00000014 _ZSt14set_unexpectedPFvvE
08002aa4 g     F .text	00000010 .hidden _Unwind_GetIP
0801b3dc g       *ABS*	00000000 __alt_heap_start
08003a78 g     F .text	00000058 _kill_r
08003678 g     F .text	0000003c printf
0800f914 g     F .text	0000009c _wcrtomb_r
0800383c g     F .text	00000084 _signal_r
0800c870 g     F .text	0000005c __sseek
0800a0b0 g     F .text	00000010 __sinit
0801485c g     F .text	000000a8 alt_avalon_dma_init
0800f7a4 g     F .text	00000154 __swbuf_r
08002740 g     F .text	00000040 __cxa_free_dependent_exception
08001f60 g     F .text	00000010 _ZN10__cxxabiv120__si_class_type_infoD2Ev
0800ab28 g     F .text	0000007c _setlocale_r
08016b58  w    O .rodata	00000025 _ZTSN10__cxxabiv120__si_class_type_infoE
08009f08 g     F .text	00000078 __sfmoreglue
0801386c g     F .text	00000020 __malloc_unlock
08015570 g     F .text	00000090 alt_up_rs232_read_fd
080027a8 g     F .text	00000004 _ZN10__cxxabiv115__forced_unwindD2Ev
08002390 g     F .text	00000020 _ZSt18uncaught_exceptionv
080027d8 g     F .text	00000020 __cxa_deleted_virtual
0800afe0 g     F .text	0000015c memmove
08002780 g     F .text	00000004 _ZNSt9exceptionD2Ev
0800a098 g     F .text	00000018 _cleanup
08003bac g     F .text	000000e4 snprintf
0800b13c g     F .text	000000a8 _Balloc
08011b3c g     F .text	000000e0 .hidden __gtdf2
08016c94  w    O .rodata	00000014 _ZTVSt13bad_exception
08016318 g     F .text	00000020 altera_nios2_gen2_irq_init
00000000  w      *UND*	00000000 __errno
08000000 g     F .entry	0000000c __reset
08002af0 g     F .text	00000008 .hidden _Unwind_GetRegionStart
08000020 g       *ABS*	00000000 __flash_exceptions_start
0800f640 g     F .text	00000058 _fstat_r
0801a988 g     O .bss	00000004 errno
0800c7ec g     F .text	00000008 __seofread
0800046c g     F .text	000001b0 _ZN8WiFiUart12update_entryEPViS1_
08000000 g       *ABS*	00000000 __alt_mem_sdram_controller
0800ca9c g     F .text	000011d0 ___svfiprintf_internal_r
08002ccc g     F .text	00000074 .hidden _Unwind_Backtrace
0801a99c g     O .bss	00000004 alt_argv
08020c70 g       *ABS*	00000000 _gp
08013328 g     F .text	00000020 getpid
080169ec  w    O .rodata	0000000a _ZTS8WiFiUart
08001900 g     F .text	00000234 __cxa_call_unexpected
08002224 g     F .text	00000008 __cxa_get_exception_ptr
08015a18 g     F .text	00000054 alt_dma_txchan_open
0801795c g     O .rwdata	00000180 alt_fd_list
08002be0 g     F .text	00000044 .hidden _Unwind_SjLj_ForcedUnwind
08002a70 g     F .text	00000018 .hidden _Unwind_GetCFA
08001f18 g     F .text	00000014 _ZSt13set_terminatePFvvE
08015b24 g     F .text	00000090 alt_find_dev
0800aea8 g     F .text	00000138 memcpy
080026ac g     F .text	00000094 __cxa_allocate_dependent_exception
08009d5c g     F .text	0000000c _cleanup_r
08001bc4 g     F .text	00000018 _ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_
08012ec0 g     F .text	000000d0 .hidden __floatsidf
08015cb0 g     F .text	00000078 alt_io_redirect
08011c1c g     F .text	000000e0 .hidden __ltdf2
0801696c g       *ABS*	00000000 __DTOR_END__
08001bdc g     F .text	00000010 _ZN10__cxxabiv117__class_type_infoD1Ev
080154fc g     F .text	00000074 alt_up_rs232_read_data
0800376c g     F .text	00000014 puts
08016520 g     F .text	0000009c alt_exception_cause_generated_bad_addr
0800085c g     F .text	0000004c _ZN8WiFiUart5flushEv
0800c724 g     F .text	00000074 __fpclassifyd
0800bf68 g     F .text	000000a4 __ratio
0800f1a4 g     F .text	00000024 __vfiprintf_internal
08014f24 g     F .text	0000020c altera_avalon_jtag_uart_read
08002d58 g     F .text	00000014 malloc
0800364c g     F .text	0000002c _printf_r
0801088c g     F .text	00000008 .hidden __udivsi3
08013398 g     F .text	000000ac isatty
080038c0 g     F .text	000000bc _raise_r
08016e10 g     O .rodata	000000c8 __mprec_tens
0800aba4 g     F .text	0000000c __locale_charset
0800026c g     F .text	00000030 _ZN8WiFiUartC2Ev
0801a984 g     O .bss	00000004 __malloc_top_pad
08003ad0 g     F .text	00000004 _getpid_r
0800026c g     F .text	00000030 _ZN8WiFiUartC1Ev
08018cbc g     O .rwdata	00000004 __mb_cur_max
0800abd4 g     F .text	0000000c _localeconv_r
080002e4 g     F .text	00000038 _ZN8WiFiUartD0Ev
0800b564 g     F .text	0000003c __i2b
0800a514 g     F .text	000004a4 __sfvwrite_r
08001c8c g     F .text	000000b8 _ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj
0800397c g     F .text	000000a8 __sigtramp_r
08003780 g     F .text	00000054 _sbrk_r
08016bc8  w    O .rodata	00000020 _ZTVSt9type_info
0800f748 g     F .text	0000005c _read_r
08002788 g     F .text	0000000c _ZNKSt9exception4whatEv
08018cd4 g     O .rwdata	00000004 alt_max_fd
08015478 g     F .text	00000044 alt_up_rs232_check_parity
0800f350 g     F .text	00000100 _fclose_r
08009d1c g     F .text	00000030 fflush
0801a980 g     O .bss	00000004 __malloc_max_sbrked_mem
08015d28 g     F .text	000001b0 alt_irq_register
0801089c g     F .text	0000089c .hidden __adddf3
08013dc0 g     F .text	000000f4 alt_avalon_dma_launch_bidir
08016b8c  w    O .rodata	0000002c _ZTVN10__cxxabiv120__si_class_type_infoE
0800029c g     F .text	00000048 _ZN8WiFiUartD2Ev
0800bd10 g     F .text	0000011c __b2d
08018c74  w    O .rwdata	00000008 _ZTI8WiFiUart
08015974 g     F .text	00000054 alt_dma_rxchan_open
08010154 g     F .text	0000061c .hidden __umoddi3
080136f8 g     F .text	000000dc lseek
08001c20 g     F .text	0000006c _ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE
08001e14 g     F .text	00000004 _ZdlPv
080169dc  w    O .rodata	00000010 _ZTV8WiFiUart
08018cb4 g     O .rwdata	00000004 _global_impure_ptr
0800c184 g     F .text	000005a0 _realloc_r
0801b3dc g       *ABS*	00000000 __bss_end
08016214 g     F .text	00000104 alt_tick
08002a28 g     F .text	00000018 .hidden _Unwind_SjLj_Register
0800fb14 g     F .text	00000640 .hidden __udivdi3
0800f464 g     F .text	00000184 _fputwc_r
08016de8 g     O .rodata	00000028 __mprec_bigtens
0800b348 g     F .text	00000104 __s2b
08002d40 g     F .text	00000018 abort
08012f90 g     F .text	000000a4 .hidden __floatunsidf
0800bab8 g     F .text	00000060 __mcmp
080022e0 g     F .text	000000b0 __cxa_end_catch
0800a0d0 g     F .text	00000018 __fp_lock_all
08002784 g     F .text	00000004 _ZNSt13bad_exceptionD2Ev
0801617c g     F .text	00000098 alt_alarm_stop
080007b4 g     F .text	00000060 _ZN8WiFiUart6read_sEv
0801a9a4 g     O .bss	00000004 alt_irq_active
08001ed8 g     F .text	00000018 _ZSt9terminatev
080008ec g     F .text	0000028c _Z9wifi_taskv
080000fc g     F .exceptions	000000d4 alt_irq_handler
08017934 g     O .rwdata	00000028 alt_dev_null
080027b0 g     F .text	00000004 _ZN10__cxxabiv119__foreign_exceptionD2Ev
08016afc  w    O .rodata	00000022 _ZTSN10__cxxabiv117__class_type_infoE
08015814 g     F .text	0000001c alt_dcache_flush_all
0800b44c g     F .text	00000068 __hi0bits
08018c90  w    O .rwdata	00000008 _ZTISt9exception
08012e38 g     F .text	00000088 .hidden __fixdfsi
08018cfc g       *ABS*	00000000 __ram_rwdata_end
08002560 g     F .text	00000004 _ZNSt9type_infoD1Ev
08018ccc g     O .rwdata	00000008 alt_dev_list
080027b0 g     F .text	00000004 _ZN10__cxxabiv119__foreign_exceptionD1Ev
080144f0 g     F .text	00000074 alt_avalon_dma_space
08013b60 g     F .text	00000100 write
0800257c g     F .text	00000004 _ZNSt9type_infoD0Ev
08017090 g       *ABS*	00000000 __ram_rodata_end
08013270 g     F .text	000000b8 fstat
08015600 g     F .text	00000094 alt_up_rs232_write_fd
08018c70 g     O .rwdata	00000004 script
08013494 g     F .text	00000130 kill
08011c1c g     F .text	000000e0 .hidden __ledf2
0800061c g     F .text	00000074 _ZN8WiFiUart7write_mEPci
08003c90 g     F .text	00000088 strcat
0800b830 g     F .text	00000140 __pow5mult
0800dd80 g     F .text	00001424 ___vfiprintf_internal_r
0801a994 g     O .bss	00000004 __nlocale_changed
08010894 g     F .text	00000008 .hidden __umodsi3
08002574 g     F .text	00000008 _ZNKSt9type_info11__do_upcastEPKN10__cxxabiv117__class_type_infoEPPv
08001f2c g     F .text	00000010 _ZSt13get_terminatev
0801b3dc g       *ABS*	00000000 end
08002cb4 g     F .text	00000018 .hidden _Unwind_DeleteException
08014a68 g     F .text	000000b8 altera_avalon_jtag_uart_init
080001d0 g     F .exceptions	00000060 alt_instruction_exception_entry
08001d44 g     F .text	000000d0 _ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE
0801696c g       *ABS*	00000000 __CTOR_LIST__
0c000000 g       *ABS*	00000000 __alt_stack_pointer
08013034 g     F .text	00000064 .hidden __clzsi2
08003ad4 g     F .text	000000d8 _snprintf_r
08001b4c g     F .text	00000078 _ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv
08015130 g     F .text	00000218 altera_avalon_jtag_uart_write
0800a0c0 g     F .text	00000004 __sfp_lock_acquire
08016c1c  w    O .rodata	00000012 _ZTSSt13bad_exception
0800adc0 g     F .text	000000e8 memchr
08005f54 g     F .text	000020fc ___vfprintf_internal_r
0800a224 g     F .text	000002f0 _free_r
0800abb0 g     F .text	00000010 __locale_mb_cur_max
08014564 g     F .text	00000138 alt_avalon_dma_send
08016798 g     F .text	00000194 __call_exitprocs
08018ce8 g     O .rwdata	00000008 alt_dma_txchan_list
0801a990 g     O .bss	00000004 __mlocale_changed
08018cac g     O .rwdata	00000004 __malloc_sbrk_base
08000230 g     F .text	0000003c _start
0801a9a8 g     O .bss	00000004 _alt_tick_rate
08016bb8  w    O .rodata	0000000d _ZTSSt9type_info
080027b8 g     F .text	00000020 __cxa_pure_virtual
0800b970 g     F .text	00000148 __lshift
0801a9ac g     O .bss	00000004 _alt_nticks
08003a38 g     F .text	0000001c signal
080138dc g     F .text	00000104 read
08013ccc g     F .text	00000084 alt_sys_init
0800c8d4 g     F .text	000001c8 __ssprint_r
08016684 g     F .text	00000114 __register_exitproc
08001fa4 g     F .text	00000160 _ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE
0801543c g     F .text	0000003c alt_up_rs232_get_available_space_in_write_FIFO
08000384 g     F .text	000000e8 _ZN8WiFiUart4initEv
0800b5a0 g     F .text	00000290 __multiply
08014dd0 g     F .text	00000068 altera_avalon_jtag_uart_close
080027f8 g     F .text	00000028 .hidden __mulsi3
08017090 g       *ABS*	00000000 __ram_rwdata_start
08002b10 g     F .text	000000d0 .hidden _Unwind_SjLj_RaiseException
0801696c g       *ABS*	00000000 __ram_rodata_start
0801b2b4 g     O .bss	00000028 __malloc_current_mallinfo
08002c24 g     F .text	00000044 .hidden _Unwind_SjLj_Resume
0800be2c g     F .text	0000013c __d2b
08016cbc  w    O .rodata	00000014 _ZTVN10__cxxabiv119__foreign_exceptionE
08002560 g     F .text	00000004 _ZNSt9type_infoD2Ev
080027b4 g     F .text	00000004 _ZN10__cxxabiv119__foreign_exceptionD0Ev
080021a0 g     F .text	00000084 _ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE
08014904 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0801644c g     F .text	000000d4 alt_get_fd
08000710 g     F .text	000000a4 _ZN8WiFiUart7write_sEh
08018ca0  w    O .rwdata	00000008 _ZTIN10__cxxabiv119__foreign_exceptionE
0800f224 g     F .text	00000054 _close_r
08016608 g     F .text	0000007c memcmp
080149c4 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
0801b3dc g       *ABS*	00000000 __alt_stack_base
08014a14 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
08001f60 g     F .text	00000010 _ZN10__cxxabiv120__si_class_type_infoD1Ev
08008074 g     F .text	00000130 __swsetup_r
08002c68 g     F .text	0000004c .hidden _Unwind_SjLj_Resume_or_Rethrow
08011138 g     F .text	00000980 .hidden __divdf3
08009f80 g     F .text	00000118 __sfp
0800c080 g     F .text	00000078 __copybits
08002564 g     F .text	00000008 _ZNKSt9type_info14__is_pointer_pEv
08017090 g     O .rwdata	00000408 __malloc_av_
0800a0cc g     F .text	00000004 __sinit_lock_release
08011cfc g     F .text	0000086c .hidden __muldf3
0800c798 g     F .text	00000054 __sread
08016c80  w    O .rodata	00000014 _ZTVSt9exception
080027ac g     F .text	00000004 _ZN10__cxxabiv115__forced_unwindD0Ev
080153a0 g     F .text	0000005c alt_up_rs232_disable_read_interrupt
08016338 g     F .text	00000114 alt_find_file
08015880 g     F .text	000000a4 alt_dev_llist_insert
0801384c g     F .text	00000020 __malloc_lock
08013a60 g     F .text	000000b0 sbrk
08003ee4 g     F .text	00002070 ___svfprintf_internal_r
08016b2c  w    O .rodata	0000002c _ZTVN10__cxxabiv117__class_type_infoE
0800244c g     F .text	00000090 __cxa_throw
08009af4 g     F .text	00000228 _fflush_r
08002ad4 g     F .text	00000010 .hidden _Unwind_SetIP
0800f278 g     F .text	000000d8 _calloc_r
0801a968 g       *ABS*	00000000 __bss_start
08003528 g     F .text	00000124 memset
080008a8 g     F .text	00000044 main
08014370 g     F .text	00000048 alt_avalon_dma_rx_ioctl
0801a9a0 g     O .bss	00000004 alt_envp
0801a97c g     O .bss	00000004 __malloc_max_total_mem
08014964 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
0800f8f8 g     F .text	0000001c __swbuf
08001b34 g     F .text	0000000c __cxa_get_globals_fast
0800c8cc g     F .text	00000008 __sclose
0c000000 g       *ABS*	00000000 __alt_heap_limit
08018c7c g     O .rwdata	00000004 tagid
0800f450 g     F .text	00000014 fclose
080083cc g     F .text	00001728 _dtoa_r
08002d80 g     F .text	000007a8 _malloc_r
0800fa88 g     F .text	00000030 __ascii_wctomb
08002794 g     F .text	0000000c _ZNKSt13bad_exception4whatEv
08018cd8 g     O .rwdata	00000004 alt_errno
08003a54 g     F .text	00000010 _init_signal
08016b20  w    O .rodata	0000000c _ZTIN10__cxxabiv117__class_type_infoE
0800a9b8 g     F .text	000000b8 _fwalk
08002784 g     F .text	00000004 _ZNSt13bad_exceptionD1Ev
080107dc g     F .text	00000054 .hidden __divsi3
0800a100 g     F .text	00000124 _malloc_trim_r
0801696c g       *ABS*	00000000 __CTOR_END__
08003d18 g     F .text	000000a4 strcmp
0801696c g       *ABS*	00000000 __flash_rodata_start
08016ca8  w    O .rodata	00000014 _ZTVN10__cxxabiv115__forced_unwindE
0801696c g       *ABS*	00000000 __DTOR_LIST__
08015694 g     F .text	00000040 alt_up_rs232_open_dev
08011ab8 g     F .text	00000084 .hidden __nedf2
08013c98 g     F .text	00000034 alt_irq_init
080139e0 g     F .text	00000080 alt_release_fd
08001f70 g     F .text	00000034 _ZN10__cxxabiv120__si_class_type_infoD0Ev
08016f18 g     O .rodata	00000100 .hidden __clz_tab
0801a98c g     O .bss	00000004 _PathLocale
080165bc g     F .text	00000014 atexit
08018c80 g     O .rwdata	00000004 result
0800f1c8 g     F .text	0000005c _write_r
0800abe0 g     F .text	0000001c setlocale
08002b08 g     F .text	00000008 .hidden _Unwind_GetTextRelBase
080023b0 g     F .text	00000058 __cxa_call_terminate
08018cb8 g     O .rwdata	00000004 _impure_ptr
08018c98  w    O .rwdata	00000008 _ZTIN10__cxxabiv115__forced_unwindE
0801a998 g     O .bss	00000004 alt_argc
08015ac8 g     F .text	0000005c _do_dtors
0800abcc g     F .text	00000008 __locale_cjk_lang
08000814 g     F .text	00000048 _ZN8WiFiUart10read_readyEv
08001f50 g     F .text	00000010 _ZSt14get_unexpectedv
08000020 g       .exceptions	00000000 alt_irq_entry
0800bcb0 g     F .text	00000060 __ulp
08002af8 g     F .text	00000008 .hidden _Unwind_FindEnclosingFunction
0800a0e8 g     F .text	00000018 __fp_unlock_all
08018cc4 g     O .rwdata	00000008 alt_fs_list
08016c5c  w    O .rodata	00000024 _ZTSN10__cxxabiv119__foreign_exceptionE
08015348 g     F .text	00000058 alt_up_rs232_enable_read_interrupt
08002ae4 g     F .text	0000000c .hidden _Unwind_GetLanguageSpecificData
080154bc g     F .text	00000040 alt_up_rs232_write_data
0800222c g     F .text	000000b4 __cxa_begin_catch
08001bdc g     F .text	00000010 _ZN10__cxxabiv117__class_type_infoD2Ev
08001ef0 g     F .text	00000010 _ZN10__cxxabiv112__unexpectedEPFvvE
08000020 g       *ABS*	00000000 __ram_exceptions_start
0800abfc g     F .text	0000000c localeconv
080027a4 g     F .text	00000004 _ZNSt13bad_exceptionD0Ev
08018c84 g     O .rwdata	00000004 _ZN10__cxxabiv119__terminate_handlerE
080025c4 g     F .text	000000a4 __cxa_allocate_exception
08016b80  w    O .rodata	0000000c _ZTIN10__cxxabiv120__si_class_type_infoE
08018cfc g       *ABS*	00000000 _edata
0801b3dc g       *ABS*	00000000 _end
08001400 g     F .text	00000500 __gxx_personality_sj0
08000230 g       *ABS*	00000000 __ram_exceptions_end
08014e38 g     F .text	000000ec altera_avalon_jtag_uart_ioctl
08002780 g     F .text	00000004 _ZNSt9exceptionD1Ev
0800c7f4 g     F .text	0000007c __swrite
08018cb0 g     O .rwdata	00000004 __malloc_trim_threshold
0800abc0 g     F .text	0000000c __locale_msgcharset
080165d0 g     F .text	00000038 exit
08002a88 g     F .text	0000001c .hidden _Unwind_SetGR
0800aa70 g     F .text	000000b8 _fwalk_reent
08002104 g     F .text	0000009c _ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_
0800bb18 g     F .text	00000198 __mdiff
08001e18 g     F .text	000000c0 _ZN10__cxxabiv111__terminateEPFvvE
08010830 g     F .text	0000005c .hidden __modsi3
0c000000 g       *ABS*	00000000 __alt_data_end
08000020 g     F .exceptions	00000000 alt_exception
0800a0c4 g     F .text	00000004 __sfp_lock_release
08016c30  w    O .rodata	0000000c _ZTISt13bad_exception
080131ec g     F .text	00000034 _exit
080156d4 g     F .text	00000140 alt_alarm_start
08002a54 g     F .text	0000001c .hidden _Unwind_GetGR
08001b40 g     F .text	0000000c __cxa_get_globals
0800ac08 g     F .text	000001b8 __smakebuf_r
08018ca8 g     O .rwdata	00000004 _ZN10__cxxabiv120__unexpected_handlerE
08003e4c g     F .text	00000098 strlen
080037d4 g     F .text	00000068 _init_signal_r
08018c88  w    O .rwdata	00000008 _ZTISt9type_info
0801601c g     F .text	00000160 open
08011b3c g     F .text	000000e0 .hidden __gedf2
08016c0c  w    O .rodata	0000000d _ZTSSt9exception
08018cc0 g     O .rwdata	00000004 __wctomb
080027a0 g     F .text	00000004 _ZNSt9exceptionD0Ev
0800dd68 g     F .text	00000018 __sprint_r
08015bb4 g     F .text	0000001c alt_icache_flush_all
08002b00 g     F .text	00000008 .hidden _Unwind_GetDataRelBase
08018cf0 g     O .rwdata	00000004 alt_priority_mask
08008050 g     F .text	00000024 __vfprintf_internal
0800fab8 g     F .text	0000005c _wctomb_r
080143b8 g     F .text	00000138 alt_avalon_dma_prepare
08012568 g     F .text	000008d0 .hidden __subdf3
08018ce0 g     O .rwdata	00000008 alt_dma_rxchan_list
0800b4b4 g     F .text	000000b0 __lo0bits
0800031c g     F .text	00000068 _ZN8WiFiUart4openEPKc
08018cf4 g     O .rwdata	00000008 alt_alarm_list
08015a6c g     F .text	0000005c _do_ctors
08003a64 g     F .text	00000014 __sigtramp
080153fc g     F .text	00000040 alt_up_rs232_get_used_space_in_read_FIFO
0800f9b0 g     F .text	000000d8 wcrtomb
080130e8 g     F .text	000000d8 close
08016c3c  w    O .rodata	00000020 _ZTSN10__cxxabiv115__forced_unwindE
08013628 g     F .text	00000080 alt_load
08014328 g     F .text	00000048 alt_avalon_dma_tx_ioctl
08002580 g     F .text	00000044 _ZNKSt9type_info10__do_catchEPKS_PPvj
0800f5e8 g     F .text	00000058 fputwc
08003a24 g     F .text	00000014 raise
08002d6c g     F .text	00000014 free
0800a0c8 g     F .text	00000004 __sinit_lock_acquire
0800b20c g     F .text	0000013c __multadd
08001bec g     F .text	00000034 _ZN10__cxxabiv117__class_type_infoD0Ev
0800b1e4 g     F .text	00000028 _Bfree



Disassembly of section .entry:

08000000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
 8000000:	00420034 	movhi	at,2048
    ori r1, r1, %lo(_start)
 8000004:	08408c14 	ori	at,at,560
    jmp r1
 8000008:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

08000020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
 8000020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
 8000024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
 8000028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
 800002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
 8000030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
 8000034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
 8000038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
 800003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
 8000040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
 8000044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
 8000048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
 800004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
 8000050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
 8000054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
 8000058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
 800005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
 8000060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
 8000064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
 8000068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
 800006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
 8000070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
 8000074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
 8000078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
 800007c:	10000326 	beq	r2,zero,800008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
 8000080:	20000226 	beq	r4,zero,800008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
 8000084:	80000fc0 	call	80000fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
 8000088:	00000706 	br	80000a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw   ea,  72(sp)  /* Don't re-issue */
 800008c:	df401215 	stw	ea,72(sp)
        ldhu.n  r2, 0(r4)
        ldhu.n  r3, 2(r4)
        slli.n  r3, r3, 16
        or.n    r2, r2, r3 /* Instruction that caused exception */
#else
        ldw   r2, -4(ea)   /* Instruction that caused exception */
 8000090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
 8000094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
 8000098:	80001d00 	call	80001d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
 800009c:	1000021e 	bne	r2,zero,80000a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
 80000a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
 80000a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
 80000a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
 80000ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
 80000b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
 80000b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
 80000b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
 80000bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
 80000c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
 80000c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
 80000c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
 80000cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
 80000d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
 80000d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
 80000d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
 80000dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
 80000e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
 80000e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
 80000e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
 80000ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
 80000f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
 80000f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
 80000f8:	ef80083a 	eret

080000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
 80000fc:	defff904 	addi	sp,sp,-28
 8000100:	dfc00615 	stw	ra,24(sp)
 8000104:	df000515 	stw	fp,20(sp)
 8000108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
 800010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 8000110:	0005313a 	rdctl	r2,ipending
 8000114:	e0bffe15 	stw	r2,-8(fp)

  return active;
 8000118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 800011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
 8000120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 8000124:	00800044 	movi	r2,1
 8000128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 800012c:	e0fffb17 	ldw	r3,-20(fp)
 8000130:	e0bffc17 	ldw	r2,-16(fp)
 8000134:	1884703a 	and	r2,r3,r2
 8000138:	10001526 	beq	r2,zero,8000190 <alt_irq_handler+0x94>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
 800013c:	008200b4 	movhi	r2,2050
 8000140:	10acb704 	addi	r2,r2,-19748
 8000144:	e0fffd17 	ldw	r3,-12(fp)
 8000148:	180690fa 	slli	r3,r3,3
 800014c:	10c5883a 	add	r2,r2,r3
 8000150:	10c00017 	ldw	r3,0(r2)
 8000154:	008200b4 	movhi	r2,2050
 8000158:	10acb704 	addi	r2,r2,-19748
 800015c:	e13ffd17 	ldw	r4,-12(fp)
 8000160:	200890fa 	slli	r4,r4,3
 8000164:	1105883a 	add	r2,r2,r4
 8000168:	10800104 	addi	r2,r2,4
 800016c:	10800017 	ldw	r2,0(r2)
 8000170:	1009883a 	mov	r4,r2
 8000174:	e17ffd17 	ldw	r5,-12(fp)
 8000178:	183ee83a 	callr	r3
#endif
        break;
 800017c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 8000180:	0005313a 	rdctl	r2,ipending
 8000184:	e0bfff15 	stw	r2,-4(fp)

  return active;
 8000188:	e0bfff17 	ldw	r2,-4(fp)
 800018c:	00000706 	br	80001ac <alt_irq_handler+0xb0>
      }
      mask <<= 1;
 8000190:	e0bffc17 	ldw	r2,-16(fp)
 8000194:	1085883a 	add	r2,r2,r2
 8000198:	e0bffc15 	stw	r2,-16(fp)
      i++;
 800019c:	e0bffd17 	ldw	r2,-12(fp)
 80001a0:	10800044 	addi	r2,r2,1
 80001a4:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
 80001a8:	003fe006 	br	800012c <__alt_data_end+0xfc00012c>

    active = alt_irq_pending ();
 80001ac:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
 80001b0:	e0bffb17 	ldw	r2,-20(fp)
 80001b4:	103fda1e 	bne	r2,zero,8000120 <__alt_data_end+0xfc000120>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
 80001b8:	0001883a 	nop
}
 80001bc:	e037883a 	mov	sp,fp
 80001c0:	dfc00117 	ldw	ra,4(sp)
 80001c4:	df000017 	ldw	fp,0(sp)
 80001c8:	dec00204 	addi	sp,sp,8
 80001cc:	f800283a 	ret

080001d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
 80001d0:	defffb04 	addi	sp,sp,-20
 80001d4:	dfc00415 	stw	ra,16(sp)
 80001d8:	df000315 	stw	fp,12(sp)
 80001dc:	df000304 	addi	fp,sp,12
 80001e0:	e13fff15 	stw	r4,-4(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
 80001e4:	00bfffc4 	movi	r2,-1
 80001e8:	e0bffd15 	stw	r2,-12(fp)
  badaddr = 0;
 80001ec:	e03ffe15 	stw	zero,-8(fp)
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
 80001f0:	d0a75017 	ldw	r2,-25280(gp)
 80001f4:	10000726 	beq	r2,zero,8000214 <alt_instruction_exception_entry+0x44>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
 80001f8:	d0a75017 	ldw	r2,-25280(gp)
 80001fc:	e0fffd17 	ldw	r3,-12(fp)
 8000200:	1809883a 	mov	r4,r3
 8000204:	e17fff17 	ldw	r5,-4(fp)
 8000208:	e1bffe17 	ldw	r6,-8(fp)
 800020c:	103ee83a 	callr	r2
 8000210:	00000206 	br	800021c <alt_instruction_exception_entry+0x4c>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
 8000214:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
 8000218:	0005883a 	mov	r2,zero
}
 800021c:	e037883a 	mov	sp,fp
 8000220:	dfc00117 	ldw	ra,4(sp)
 8000224:	df000017 	ldw	fp,0(sp)
 8000228:	dec00204 	addi	sp,sp,8
 800022c:	f800283a 	ret

Disassembly of section .text:

08000230 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
 8000230:	06c30034 	movhi	sp,3072
    ori sp, sp, %lo(__alt_stack_pointer)
 8000234:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
 8000238:	068200b4 	movhi	gp,2050
    ori gp, gp, %lo(_gp)
 800023c:	d6831c14 	ori	gp,gp,3184
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
 8000240:	00820074 	movhi	r2,2049
    ori r2, r2, %lo(__bss_start)
 8000244:	10aa5a14 	ori	r2,r2,43368

    movhi r3, %hi(__bss_end)
 8000248:	00c20074 	movhi	r3,2049
    ori r3, r3, %lo(__bss_end)
 800024c:	18ecf714 	ori	r3,r3,46044

    beq r2, r3, 1f
 8000250:	10c00326 	beq	r2,r3,8000260 <_start+0x30>

0:
    stw zero, (r2)
 8000254:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
 8000258:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
 800025c:	10fffd36 	bltu	r2,r3,8000254 <__alt_data_end+0xfc000254>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
 8000260:	80136280 	call	8013628 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
 8000264:	80137d40 	call	80137d4 <alt_main>

08000268 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
 8000268:	003fff06 	br	8000268 <__alt_data_end+0xfc000268>

0800026c <_ZN8WiFiUartC1Ev>:
#include "sys/alt_dev.h"
#include "altera_up_avalon_rs232.h"

char *script = "dofile(\"patch_data.lua\")";

WiFiUart::WiFiUart()
 800026c:	defffe04 	addi	sp,sp,-8
 8000270:	df000115 	stw	fp,4(sp)
 8000274:	df000104 	addi	fp,sp,4
 8000278:	e13fff15 	stw	r4,-4(fp)
 800027c:	e0ffff17 	ldw	r3,-4(fp)
 8000280:	00820074 	movhi	r2,2049
 8000284:	109a7904 	addi	r2,r2,27108
 8000288:	18800015 	stw	r2,0(r3)
{
    // TODO Auto-generated constructor stub
}
 800028c:	e037883a 	mov	sp,fp
 8000290:	df000017 	ldw	fp,0(sp)
 8000294:	dec00104 	addi	sp,sp,4
 8000298:	f800283a 	ret

0800029c <_ZN8WiFiUartD1Ev>:


WiFiUart::~WiFiUart()
 800029c:	defffd04 	addi	sp,sp,-12
 80002a0:	dfc00215 	stw	ra,8(sp)
 80002a4:	df000115 	stw	fp,4(sp)
 80002a8:	df000104 	addi	fp,sp,4
 80002ac:	e13fff15 	stw	r4,-4(fp)
 80002b0:	e0ffff17 	ldw	r3,-4(fp)
 80002b4:	00820074 	movhi	r2,2049
 80002b8:	109a7904 	addi	r2,r2,27108
 80002bc:	18800015 	stw	r2,0(r3)
{
	// TODO Auto-generated destructor stub
}
 80002c0:	0005883a 	mov	r2,zero
 80002c4:	10000226 	beq	r2,zero,80002d0 <_ZN8WiFiUartD1Ev+0x34>
 80002c8:	e13fff17 	ldw	r4,-4(fp)
 80002cc:	8001e140 	call	8001e14 <_ZdlPv>
 80002d0:	e037883a 	mov	sp,fp
 80002d4:	dfc00117 	ldw	ra,4(sp)
 80002d8:	df000017 	ldw	fp,0(sp)
 80002dc:	dec00204 	addi	sp,sp,8
 80002e0:	f800283a 	ret

080002e4 <_ZN8WiFiUartD0Ev>:
{
    // TODO Auto-generated constructor stub
}


WiFiUart::~WiFiUart()
 80002e4:	defffd04 	addi	sp,sp,-12
 80002e8:	dfc00215 	stw	ra,8(sp)
 80002ec:	df000115 	stw	fp,4(sp)
 80002f0:	df000104 	addi	fp,sp,4
 80002f4:	e13fff15 	stw	r4,-4(fp)
{
	// TODO Auto-generated destructor stub
}
 80002f8:	e13fff17 	ldw	r4,-4(fp)
 80002fc:	800029c0 	call	800029c <_ZN8WiFiUartD1Ev>
 8000300:	e13fff17 	ldw	r4,-4(fp)
 8000304:	8001e140 	call	8001e14 <_ZdlPv>
 8000308:	e037883a 	mov	sp,fp
 800030c:	dfc00117 	ldw	ra,4(sp)
 8000310:	df000017 	ldw	fp,0(sp)
 8000314:	dec00204 	addi	sp,sp,8
 8000318:	f800283a 	ret

0800031c <_ZN8WiFiUart4openEPKc>:


int WiFiUart::open(const char *device_name)
{
 800031c:	defffc04 	addi	sp,sp,-16
 8000320:	dfc00315 	stw	ra,12(sp)
 8000324:	df000215 	stw	fp,8(sp)
 8000328:	df000204 	addi	fp,sp,8
 800032c:	e13ffe15 	stw	r4,-8(fp)
 8000330:	e17fff15 	stw	r5,-4(fp)
	RS232_DEV = alt_up_rs232_open_dev(device_name);
 8000334:	e13fff17 	ldw	r4,-4(fp)
 8000338:	80156940 	call	8015694 <alt_up_rs232_open_dev>
 800033c:	1007883a 	mov	r3,r2
 8000340:	e0bffe17 	ldw	r2,-8(fp)
 8000344:	10c00115 	stw	r3,4(r2)

    // Enable the read interrupts for the RS232 UART core 
    alt_up_rs232_enable_read_interrupt(RS232_DEV);
 8000348:	e0bffe17 	ldw	r2,-8(fp)
 800034c:	10800117 	ldw	r2,4(r2)
 8000350:	1009883a 	mov	r4,r2
 8000354:	80153480 	call	8015348 <alt_up_rs232_enable_read_interrupt>

    if (RS232_DEV == NULL) {
 8000358:	e0bffe17 	ldw	r2,-8(fp)
 800035c:	10800117 	ldw	r2,4(r2)
 8000360:	1000021e 	bne	r2,zero,800036c <_ZN8WiFiUart4openEPKc+0x50>
        return 0;
 8000364:	0005883a 	mov	r2,zero
 8000368:	00000106 	br	8000370 <_ZN8WiFiUart4openEPKc+0x54>
    }
        
    return 1;
 800036c:	00800044 	movi	r2,1
}
 8000370:	e037883a 	mov	sp,fp
 8000374:	dfc00117 	ldw	ra,4(sp)
 8000378:	df000017 	ldw	fp,0(sp)
 800037c:	dec00204 	addi	sp,sp,8
 8000380:	f800283a 	ret

08000384 <_ZN8WiFiUart4initEv>:


int WiFiUart::init()
{
 8000384:	defffa04 	addi	sp,sp,-24
 8000388:	dfc00515 	stw	ra,20(sp)
 800038c:	df000415 	stw	fp,16(sp)
 8000390:	dc000315 	stw	r16,12(sp)
 8000394:	df000404 	addi	fp,sp,16
 8000398:	e13ffe15 	stw	r4,-8(fp)
	if (RS232_DEV == NULL) {
 800039c:	e0bffe17 	ldw	r2,-8(fp)
 80003a0:	10800117 	ldw	r2,4(r2)
 80003a4:	1000051e 	bne	r2,zero,80003bc <_ZN8WiFiUart4initEv+0x38>
        printf("ERROR: Open RS232 port before conencting.\n");
 80003a8:	01020074 	movhi	r4,2049
 80003ac:	211a6204 	addi	r4,r4,27016
 80003b0:	800376c0 	call	800376c <puts>
        return 0;
 80003b4:	0005883a 	mov	r2,zero
 80003b8:	00002606 	br	8000454 <_ZN8WiFiUart4initEv+0xd0>
    }

    flush();    // Clear FIFO
 80003bc:	e13ffe17 	ldw	r4,-8(fp)
 80003c0:	800085c0 	call	800085c <_ZN8WiFiUart5flushEv>

    int i;
    char *crlf = "\r\n";
 80003c4:	00820074 	movhi	r2,2049
 80003c8:	109a6d04 	addi	r2,r2,27060
 80003cc:	e0bffd15 	stw	r2,-12(fp)
    
    for (i = 0; i < 5; i++) {   // Send CRLF multiple times to let the wifi firmware match up the communication baud rate
 80003d0:	e03ffc15 	stw	zero,-16(fp)
 80003d4:	00000b06 	br	8000404 <_ZN8WiFiUart4initEv+0x80>
        write_m(crlf, strlen(crlf));
 80003d8:	e13ffd17 	ldw	r4,-12(fp)
 80003dc:	8003e4c0 	call	8003e4c <strlen>
 80003e0:	e13ffe17 	ldw	r4,-8(fp)
 80003e4:	e17ffd17 	ldw	r5,-12(fp)
 80003e8:	100d883a 	mov	r6,r2
 80003ec:	800061c0 	call	800061c <_ZN8WiFiUart7write_mEPci>
        flush();
 80003f0:	e13ffe17 	ldw	r4,-8(fp)
 80003f4:	800085c0 	call	800085c <_ZN8WiFiUart5flushEv>
    flush();    // Clear FIFO

    int i;
    char *crlf = "\r\n";
    
    for (i = 0; i < 5; i++) {   // Send CRLF multiple times to let the wifi firmware match up the communication baud rate
 80003f8:	e0bffc17 	ldw	r2,-16(fp)
 80003fc:	10800044 	addi	r2,r2,1
 8000400:	e0bffc15 	stw	r2,-16(fp)
 8000404:	e0bffc17 	ldw	r2,-16(fp)
 8000408:	10800150 	cmplti	r2,r2,5
 800040c:	103ff21e 	bne	r2,zero,80003d8 <__alt_data_end+0xfc0003d8>
        write_m(crlf, strlen(crlf));
        flush();
    }

    write_m(script, strlen(script));
 8000410:	d4200017 	ldw	r16,-32768(gp)
 8000414:	d0a00017 	ldw	r2,-32768(gp)
 8000418:	1009883a 	mov	r4,r2
 800041c:	8003e4c0 	call	8003e4c <strlen>
 8000420:	e13ffe17 	ldw	r4,-8(fp)
 8000424:	800b883a 	mov	r5,r16
 8000428:	100d883a 	mov	r6,r2
 800042c:	800061c0 	call	800061c <_ZN8WiFiUart7write_mEPci>
    write_s('\r');
 8000430:	e13ffe17 	ldw	r4,-8(fp)
 8000434:	01400344 	movi	r5,13
 8000438:	80007100 	call	8000710 <_ZN8WiFiUart7write_sEh>
    write_s('\n');
 800043c:	e13ffe17 	ldw	r4,-8(fp)
 8000440:	01400284 	movi	r5,10
 8000444:	80007100 	call	8000710 <_ZN8WiFiUart7write_sEh>
    flush();
 8000448:	e13ffe17 	ldw	r4,-8(fp)
 800044c:	800085c0 	call	800085c <_ZN8WiFiUart5flushEv>

    return 1;
 8000450:	00800044 	movi	r2,1
}
 8000454:	e6ffff04 	addi	sp,fp,-4
 8000458:	dfc00217 	ldw	ra,8(sp)
 800045c:	df000117 	ldw	fp,4(sp)
 8000460:	dc000017 	ldw	r16,0(sp)
 8000464:	dec00304 	addi	sp,sp,12
 8000468:	f800283a 	ret

0800046c <_ZN8WiFiUart12update_entryEPViS1_>:


int WiFiUart::update_entry(volatile int *tag_id, volatile int *result)
{
 800046c:	deffea04 	addi	sp,sp,-88
 8000470:	dfc01515 	stw	ra,84(sp)
 8000474:	df001415 	stw	fp,80(sp)
 8000478:	df001404 	addi	fp,sp,80
 800047c:	e13ffd15 	stw	r4,-12(fp)
 8000480:	e17ffe15 	stw	r5,-8(fp)
 8000484:	e1bfff15 	stw	r6,-4(fp)
    const char *result_str = (result) ? "true" : "false";
 8000488:	e0bfff17 	ldw	r2,-4(fp)
 800048c:	10000326 	beq	r2,zero,800049c <_ZN8WiFiUart12update_entryEPViS1_+0x30>
 8000490:	00820074 	movhi	r2,2049
 8000494:	109a6e04 	addi	r2,r2,27064
 8000498:	00000206 	br	80004a4 <_ZN8WiFiUart12update_entryEPViS1_+0x38>
 800049c:	00820074 	movhi	r2,2049
 80004a0:	109a7004 	addi	r2,r2,27072
 80004a4:	e0bfed15 	stw	r2,-76(fp)

    char command[50] = "update_db_entry(\"";
 80004a8:	00985934 	movhi	r2,24932
 80004ac:	109c1d44 	addi	r2,r2,28789
 80004b0:	e0bff015 	stw	r2,-64(fp)
 80004b4:	009917f4 	movhi	r2,25695
 80004b8:	10995d04 	addi	r2,r2,25972
 80004bc:	e0bff115 	stw	r2,-60(fp)
 80004c0:	009b9974 	movhi	r2,28261
 80004c4:	1097d884 	addi	r2,r2,24418
 80004c8:	e0bff215 	stw	r2,-56(fp)
 80004cc:	008a1e74 	movhi	r2,10361
 80004d0:	109c9d04 	addi	r2,r2,29300
 80004d4:	e0bff315 	stw	r2,-52(fp)
 80004d8:	00800884 	movi	r2,34
 80004dc:	e0bff415 	stw	r2,-48(fp)
 80004e0:	e03ff515 	stw	zero,-44(fp)
 80004e4:	e03ff615 	stw	zero,-40(fp)
 80004e8:	e03ff715 	stw	zero,-36(fp)
 80004ec:	e03ff815 	stw	zero,-32(fp)
 80004f0:	e03ff915 	stw	zero,-28(fp)
 80004f4:	e03ffa15 	stw	zero,-24(fp)
 80004f8:	e03ffb15 	stw	zero,-20(fp)
 80004fc:	e03ffc0d 	sth	zero,-16(fp)
    char tid_str[8];
	snprintf(tid_str, 8, "%d", tag_id); // convert tag_id from int to string 
 8000500:	e0bfee04 	addi	r2,fp,-72
 8000504:	1009883a 	mov	r4,r2
 8000508:	01400204 	movi	r5,8
 800050c:	01820074 	movhi	r6,2049
 8000510:	319a7204 	addi	r6,r6,27080
 8000514:	e1fffe17 	ldw	r7,-8(fp)
 8000518:	8003bac0 	call	8003bac <snprintf>
    strcat(command, tid_str);
 800051c:	e0fff004 	addi	r3,fp,-64
 8000520:	e0bfee04 	addi	r2,fp,-72
 8000524:	1809883a 	mov	r4,r3
 8000528:	100b883a 	mov	r5,r2
 800052c:	8003c900 	call	8003c90 <strcat>
	strcat(command, "\",");
 8000530:	e0bff004 	addi	r2,fp,-64
 8000534:	1009883a 	mov	r4,r2
 8000538:	8003e4c0 	call	8003e4c <strlen>
 800053c:	1007883a 	mov	r3,r2
 8000540:	e0bff004 	addi	r2,fp,-64
 8000544:	10c5883a 	add	r2,r2,r3
 8000548:	00c00884 	movi	r3,34
 800054c:	10c00005 	stb	r3,0(r2)
 8000550:	00c00b04 	movi	r3,44
 8000554:	10c00045 	stb	r3,1(r2)
 8000558:	10000085 	stb	zero,2(r2)
    strcat(command, result_str);
 800055c:	e0bff004 	addi	r2,fp,-64
 8000560:	1009883a 	mov	r4,r2
 8000564:	e17fed17 	ldw	r5,-76(fp)
 8000568:	8003c900 	call	8003c90 <strcat>
    strcat(command, ")");
 800056c:	e0bff004 	addi	r2,fp,-64
 8000570:	1009883a 	mov	r4,r2
 8000574:	8003e4c0 	call	8003e4c <strlen>
 8000578:	1007883a 	mov	r3,r2
 800057c:	e0bff004 	addi	r2,fp,-64
 8000580:	10c5883a 	add	r2,r2,r3
 8000584:	00c00a44 	movi	r3,41
 8000588:	10c00005 	stb	r3,0(r2)
 800058c:	10000045 	stb	zero,1(r2)
    
	printf("Command: %s\n", command);
 8000590:	e0bff004 	addi	r2,fp,-64
 8000594:	01020074 	movhi	r4,2049
 8000598:	211a7304 	addi	r4,r4,27084
 800059c:	100b883a 	mov	r5,r2
 80005a0:	80036780 	call	8003678 <printf>

    write_m(command, strlen(command));
 80005a4:	e0bff004 	addi	r2,fp,-64
 80005a8:	1009883a 	mov	r4,r2
 80005ac:	8003e4c0 	call	8003e4c <strlen>
 80005b0:	1007883a 	mov	r3,r2
 80005b4:	e0bff004 	addi	r2,fp,-64
 80005b8:	e13ffd17 	ldw	r4,-12(fp)
 80005bc:	100b883a 	mov	r5,r2
 80005c0:	180d883a 	mov	r6,r3
 80005c4:	800061c0 	call	800061c <_ZN8WiFiUart7write_mEPci>
    write_s('\r');
 80005c8:	e13ffd17 	ldw	r4,-12(fp)
 80005cc:	01400344 	movi	r5,13
 80005d0:	80007100 	call	8000710 <_ZN8WiFiUart7write_sEh>
    write_s('\n');
 80005d4:	e13ffd17 	ldw	r4,-12(fp)
 80005d8:	01400284 	movi	r5,10
 80005dc:	80007100 	call	8000710 <_ZN8WiFiUart7write_sEh>
    for (int i = 0;i < 7000000; i++){};
 80005e0:	e03fec15 	stw	zero,-80(fp)
 80005e4:	00000306 	br	80005f4 <_ZN8WiFiUart12update_entryEPViS1_+0x188>
 80005e8:	e0bfec17 	ldw	r2,-80(fp)
 80005ec:	10800044 	addi	r2,r2,1
 80005f0:	e0bfec15 	stw	r2,-80(fp)
 80005f4:	e0ffec17 	ldw	r3,-80(fp)
 80005f8:	00801af4 	movhi	r2,107
 80005fc:	10b3efc4 	addi	r2,r2,-12353
 8000600:	10fff90e 	bge	r2,r3,80005e8 <__alt_data_end+0xfc0005e8>

    return 1;
 8000604:	00800044 	movi	r2,1
}
 8000608:	e037883a 	mov	sp,fp
 800060c:	dfc00117 	ldw	ra,4(sp)
 8000610:	df000017 	ldw	fp,0(sp)
 8000614:	dec00204 	addi	sp,sp,8
 8000618:	f800283a 	ret

0800061c <_ZN8WiFiUart7write_mEPci>:


int WiFiUart::write_m(char data[], int length)
{
 800061c:	defffa04 	addi	sp,sp,-24
 8000620:	dfc00515 	stw	ra,20(sp)
 8000624:	df000415 	stw	fp,16(sp)
 8000628:	df000404 	addi	fp,sp,16
 800062c:	e13ffd15 	stw	r4,-12(fp)
 8000630:	e17ffe15 	stw	r5,-8(fp)
 8000634:	e1bfff15 	stw	r6,-4(fp)
    int count;
	for (count = 0; count < length; count++) {
 8000638:	e03ffc15 	stw	zero,-16(fp)
 800063c:	00000b06 	br	800066c <_ZN8WiFiUart7write_mEPci+0x50>
		write_s(data[count]);
 8000640:	e0bffc17 	ldw	r2,-16(fp)
 8000644:	e0fffe17 	ldw	r3,-8(fp)
 8000648:	1885883a 	add	r2,r3,r2
 800064c:	10800003 	ldbu	r2,0(r2)
 8000650:	10803fcc 	andi	r2,r2,255
 8000654:	e13ffd17 	ldw	r4,-12(fp)
 8000658:	100b883a 	mov	r5,r2
 800065c:	80007100 	call	8000710 <_ZN8WiFiUart7write_sEh>


int WiFiUart::write_m(char data[], int length)
{
    int count;
	for (count = 0; count < length; count++) {
 8000660:	e0bffc17 	ldw	r2,-16(fp)
 8000664:	10800044 	addi	r2,r2,1
 8000668:	e0bffc15 	stw	r2,-16(fp)
 800066c:	e0fffc17 	ldw	r3,-16(fp)
 8000670:	e0bfff17 	ldw	r2,-4(fp)
 8000674:	18bff216 	blt	r3,r2,8000640 <__alt_data_end+0xfc000640>
		write_s(data[count]);
	}
    return count;
 8000678:	e0bffc17 	ldw	r2,-16(fp)
}
 800067c:	e037883a 	mov	sp,fp
 8000680:	dfc00117 	ldw	ra,4(sp)
 8000684:	df000017 	ldw	fp,0(sp)
 8000688:	dec00204 	addi	sp,sp,8
 800068c:	f800283a 	ret

08000690 <_ZN8WiFiUart6read_mEPii>:


void WiFiUart::read_m(int *buffer, int length)
{
 8000690:	defff904 	addi	sp,sp,-28
 8000694:	dfc00615 	stw	ra,24(sp)
 8000698:	df000515 	stw	fp,20(sp)
 800069c:	dc000415 	stw	r16,16(sp)
 80006a0:	df000504 	addi	fp,sp,20
 80006a4:	e13ffc15 	stw	r4,-16(fp)
 80006a8:	e17ffd15 	stw	r5,-12(fp)
 80006ac:	e1bffe15 	stw	r6,-8(fp)
    int count;
    for (count = 0; count < length; count++) {
 80006b0:	e03ffb15 	stw	zero,-20(fp)
 80006b4:	00000d06 	br	80006ec <_ZN8WiFiUart6read_mEPii+0x5c>
		buffer[count] = read_s();
 80006b8:	e0bffb17 	ldw	r2,-20(fp)
 80006bc:	1085883a 	add	r2,r2,r2
 80006c0:	1085883a 	add	r2,r2,r2
 80006c4:	1007883a 	mov	r3,r2
 80006c8:	e0bffd17 	ldw	r2,-12(fp)
 80006cc:	10e1883a 	add	r16,r2,r3
 80006d0:	e13ffc17 	ldw	r4,-16(fp)
 80006d4:	80007b40 	call	80007b4 <_ZN8WiFiUart6read_sEv>
 80006d8:	10803fcc 	andi	r2,r2,255
 80006dc:	80800015 	stw	r2,0(r16)


void WiFiUart::read_m(int *buffer, int length)
{
    int count;
    for (count = 0; count < length; count++) {
 80006e0:	e0bffb17 	ldw	r2,-20(fp)
 80006e4:	10800044 	addi	r2,r2,1
 80006e8:	e0bffb15 	stw	r2,-20(fp)
 80006ec:	e0fffb17 	ldw	r3,-20(fp)
 80006f0:	e0bffe17 	ldw	r2,-8(fp)
 80006f4:	18bff016 	blt	r3,r2,80006b8 <__alt_data_end+0xfc0006b8>
		buffer[count] = read_s();
	}
}
 80006f8:	e6ffff04 	addi	sp,fp,-4
 80006fc:	dfc00217 	ldw	ra,8(sp)
 8000700:	df000117 	ldw	fp,4(sp)
 8000704:	dc000017 	ldw	r16,0(sp)
 8000708:	dec00304 	addi	sp,sp,12
 800070c:	f800283a 	ret

08000710 <_ZN8WiFiUart7write_sEh>:


int WiFiUart::write_s(alt_u8 data)
{
 8000710:	defffb04 	addi	sp,sp,-20
 8000714:	dfc00415 	stw	ra,16(sp)
 8000718:	df000315 	stw	fp,12(sp)
 800071c:	df000304 	addi	fp,sp,12
 8000720:	e13ffe15 	stw	r4,-8(fp)
 8000724:	2805883a 	mov	r2,r5
 8000728:	e0bfff05 	stb	r2,-4(fp)
    alt_up_rs232_disable_read_interrupt(RS232_DEV);
 800072c:	e0bffe17 	ldw	r2,-8(fp)
 8000730:	10800117 	ldw	r2,4(r2)
 8000734:	1009883a 	mov	r4,r2
 8000738:	80153a00 	call	80153a0 <alt_up_rs232_disable_read_interrupt>

    int result = 0;
 800073c:	e03ffd15 	stw	zero,-12(fp)
    WRITE_FIFO_SPACE = alt_up_rs232_get_available_space_in_write_FIFO(RS232_DEV);
 8000740:	e0bffe17 	ldw	r2,-8(fp)
 8000744:	10800117 	ldw	r2,4(r2)
 8000748:	1009883a 	mov	r4,r2
 800074c:	801543c0 	call	801543c <alt_up_rs232_get_available_space_in_write_FIFO>
 8000750:	1007883a 	mov	r3,r2
 8000754:	e0bffe17 	ldw	r2,-8(fp)
 8000758:	10c00215 	stw	r3,8(r2)

    if (WRITE_FIFO_SPACE >= WRITE_FIFO_EMPTY) {
 800075c:	e0bffe17 	ldw	r2,-8(fp)
 8000760:	10800217 	ldw	r2,8(r2)
 8000764:	10802030 	cmpltui	r2,r2,128
 8000768:	1000081e 	bne	r2,zero,800078c <_ZN8WiFiUart7write_sEh+0x7c>
        alt_up_rs232_write_data(RS232_DEV, data);
 800076c:	e0bffe17 	ldw	r2,-8(fp)
 8000770:	10c00117 	ldw	r3,4(r2)
 8000774:	e0bfff03 	ldbu	r2,-4(fp)
 8000778:	1809883a 	mov	r4,r3
 800077c:	100b883a 	mov	r5,r2
 8000780:	80154bc0 	call	80154bc <alt_up_rs232_write_data>
        result = 1;
 8000784:	00800044 	movi	r2,1
 8000788:	e0bffd15 	stw	r2,-12(fp)
    }

    // Enable the read interrupts for the RS232 UART core 
    alt_up_rs232_enable_read_interrupt(RS232_DEV);
 800078c:	e0bffe17 	ldw	r2,-8(fp)
 8000790:	10800117 	ldw	r2,4(r2)
 8000794:	1009883a 	mov	r4,r2
 8000798:	80153480 	call	8015348 <alt_up_rs232_enable_read_interrupt>
    return result;
 800079c:	e0bffd17 	ldw	r2,-12(fp)
}
 80007a0:	e037883a 	mov	sp,fp
 80007a4:	dfc00117 	ldw	ra,4(sp)
 80007a8:	df000017 	ldw	fp,0(sp)
 80007ac:	dec00204 	addi	sp,sp,8
 80007b0:	f800283a 	ret

080007b4 <_ZN8WiFiUart6read_sEv>:


unsigned char WiFiUart::read_s(void)
{
 80007b4:	defffc04 	addi	sp,sp,-16
 80007b8:	dfc00315 	stw	ra,12(sp)
 80007bc:	df000215 	stw	fp,8(sp)
 80007c0:	df000204 	addi	fp,sp,8
 80007c4:	e13fff15 	stw	r4,-4(fp)
    while (!read_ready()) {}    // Wait for data to be available to read
 80007c8:	0001883a 	nop
 80007cc:	e13fff17 	ldw	r4,-4(fp)
 80007d0:	80008140 	call	8000814 <_ZN8WiFiUart10read_readyEv>
 80007d4:	1005003a 	cmpeq	r2,r2,zero
 80007d8:	10803fcc 	andi	r2,r2,255
 80007dc:	103ffb1e 	bne	r2,zero,80007cc <__alt_data_end+0xfc0007cc>

    alt_u8 buffer;
    alt_u8 parity_error;

    alt_up_rs232_read_data(RS232_DEV, &buffer, &parity_error);
 80007e0:	e0bfff17 	ldw	r2,-4(fp)
 80007e4:	10c00117 	ldw	r3,4(r2)
 80007e8:	e0bffe44 	addi	r2,fp,-7
 80007ec:	1809883a 	mov	r4,r3
 80007f0:	e17ffe04 	addi	r5,fp,-8
 80007f4:	100d883a 	mov	r6,r2
 80007f8:	80154fc0 	call	80154fc <alt_up_rs232_read_data>

    return (unsigned char) buffer;
 80007fc:	e0bffe03 	ldbu	r2,-8(fp)
}
 8000800:	e037883a 	mov	sp,fp
 8000804:	dfc00117 	ldw	ra,4(sp)
 8000808:	df000017 	ldw	fp,0(sp)
 800080c:	dec00204 	addi	sp,sp,8
 8000810:	f800283a 	ret

08000814 <_ZN8WiFiUart10read_readyEv>:


int WiFiUart::read_ready(void)
{
 8000814:	defffc04 	addi	sp,sp,-16
 8000818:	dfc00315 	stw	ra,12(sp)
 800081c:	df000215 	stw	fp,8(sp)
 8000820:	df000204 	addi	fp,sp,8
 8000824:	e13fff15 	stw	r4,-4(fp)
    alt_u16 read_fifo_used = alt_up_rs232_get_used_space_in_read_FIFO(RS232_DEV);
 8000828:	e0bfff17 	ldw	r2,-4(fp)
 800082c:	10800117 	ldw	r2,4(r2)
 8000830:	1009883a 	mov	r4,r2
 8000834:	80153fc0 	call	80153fc <alt_up_rs232_get_used_space_in_read_FIFO>
 8000838:	e0bffe0d 	sth	r2,-8(fp)
    return (read_fifo_used > READ_FIFO_EMPTY);
 800083c:	e0bffe0b 	ldhu	r2,-8(fp)
 8000840:	1004c03a 	cmpne	r2,r2,zero
 8000844:	10803fcc 	andi	r2,r2,255
}
 8000848:	e037883a 	mov	sp,fp
 800084c:	dfc00117 	ldw	ra,4(sp)
 8000850:	df000017 	ldw	fp,0(sp)
 8000854:	dec00204 	addi	sp,sp,8
 8000858:	f800283a 	ret

0800085c <_ZN8WiFiUart5flushEv>:


void WiFiUart::flush(void)
{
 800085c:	defffd04 	addi	sp,sp,-12
 8000860:	dfc00215 	stw	ra,8(sp)
 8000864:	df000115 	stw	fp,4(sp)
 8000868:	df000104 	addi	fp,sp,4
 800086c:	e13fff15 	stw	r4,-4(fp)
    while (read_ready()) {
 8000870:	00000206 	br	800087c <_ZN8WiFiUart5flushEv+0x20>
        // read unwanted char out of fifo receiver buffer
        read_s();
 8000874:	e13fff17 	ldw	r4,-4(fp)
 8000878:	80007b40 	call	80007b4 <_ZN8WiFiUart6read_sEv>
}


void WiFiUart::flush(void)
{
    while (read_ready()) {
 800087c:	e13fff17 	ldw	r4,-4(fp)
 8000880:	80008140 	call	8000814 <_ZN8WiFiUart10read_readyEv>
 8000884:	1004c03a 	cmpne	r2,r2,zero
 8000888:	10803fcc 	andi	r2,r2,255
 800088c:	103ff91e 	bne	r2,zero,8000874 <__alt_data_end+0xfc000874>
        // read unwanted char out of fifo receiver buffer
        read_s();
    }
    return; // no more characters so return 
 8000890:	0001883a 	nop
 8000894:	e037883a 	mov	sp,fp
 8000898:	dfc00117 	ldw	ra,4(sp)
 800089c:	df000017 	ldw	fp,0(sp)
 80008a0:	dec00204 	addi	sp,sp,8
 80008a4:	f800283a 	ret

080008a8 <main>:
#include <stdio.h>
#include "../../src/terasic_includes.h"
#include "../../src/tasks.h"

int main()
{
 80008a8:	defffe04 	addi	sp,sp,-8
 80008ac:	dfc00115 	stw	ra,4(sp)
 80008b0:	df000015 	stw	fp,0(sp)
 80008b4:	d839883a 	mov	fp,sp
  printf("NIOS II SOFTWARE APPLICATION: WIFI TEST\n");
 80008b8:	01020074 	movhi	r4,2049
 80008bc:	211a7e04 	addi	r4,r4,27128
 80008c0:	800376c0 	call	800376c <puts>
  printf("===========================================\n\n");
 80008c4:	01020074 	movhi	r4,2049
 80008c8:	211a8804 	addi	r4,r4,27168
 80008cc:	800376c0 	call	800376c <puts>

  wifi_task();
 80008d0:	80008ec0 	call	80008ec <_Z9wifi_taskv>

  return 0;
 80008d4:	0005883a 	mov	r2,zero
 80008d8:	e037883a 	mov	sp,fp
 80008dc:	dfc00117 	ldw	ra,4(sp)
 80008e0:	df000017 	ldw	fp,0(sp)
 80008e4:	dec00204 	addi	sp,sp,8
 80008e8:	f800283a 	ret

080008ec <_Z9wifi_taskv>:
volatile int *tagid  = (volatile int *) 0x0a900000; /* tag id */
volatile int *result = (volatile int *) 0x0b000004; /* dnn result */


int wifi_task()
{
 80008ec:	deffde04 	addi	sp,sp,-136
 80008f0:	dfc02115 	stw	ra,132(sp)
 80008f4:	df002015 	stw	fp,128(sp)
 80008f8:	ddc01f15 	stw	r23,124(sp)
 80008fc:	dd801e15 	stw	r22,120(sp)
 8000900:	dd401d15 	stw	r21,116(sp)
 8000904:	dd001c15 	stw	r20,112(sp)
 8000908:	dcc01b15 	stw	r19,108(sp)
 800090c:	dc801a15 	stw	r18,104(sp)
 8000910:	dc401915 	stw	r17,100(sp)
 8000914:	dc001815 	stw	r16,96(sp)
 8000918:	df002004 	addi	fp,sp,128
 800091c:	00820034 	movhi	r2,2048
 8000920:	10850004 	addi	r2,r2,5120
 8000924:	e0bfed15 	stw	r2,-76(fp)
 8000928:	00820074 	movhi	r2,2049
 800092c:	109a4b04 	addi	r2,r2,26924
 8000930:	e0bfee15 	stw	r2,-72(fp)
 8000934:	e0bfef04 	addi	r2,fp,-68
 8000938:	e0ffe004 	addi	r3,fp,-128
 800093c:	10c00015 	stw	r3,0(r2)
 8000940:	00c20034 	movhi	r3,2048
 8000944:	18c2c104 	addi	r3,r3,2820
 8000948:	10c00115 	stw	r3,4(r2)
 800094c:	16c00215 	stw	sp,8(r2)
 8000950:	e0bfe704 	addi	r2,fp,-100
 8000954:	1009883a 	mov	r4,r2
 8000958:	8002a280 	call	8002a28 <_Unwind_SjLj_Register>
    WiFiUart WiFi_UART;
 800095c:	e0ffe404 	addi	r3,fp,-112
 8000960:	00bfffc4 	movi	r2,-1
 8000964:	e0bfe815 	stw	r2,-96(fp)
 8000968:	1809883a 	mov	r4,r3
 800096c:	800026c0 	call	800026c <_ZN8WiFiUartC1Ev>

    int open_success = WiFi_UART.open(WIFI_RS232_UART_NAME);
 8000970:	e0bfe404 	addi	r2,fp,-112
 8000974:	1009883a 	mov	r4,r2
 8000978:	01420074 	movhi	r5,2049
 800097c:	00800044 	movi	r2,1
 8000980:	e0bfe815 	stw	r2,-96(fp)
 8000984:	295a9404 	addi	r5,r5,27216
 8000988:	800031c0 	call	800031c <_ZN8WiFiUart4openEPKc>
 800098c:	e0bfe115 	stw	r2,-124(fp)
    WiFi_UART.flush();
 8000990:	e0bfe404 	addi	r2,fp,-112
 8000994:	1009883a 	mov	r4,r2
 8000998:	800085c0 	call	800085c <_ZN8WiFiUart5flushEv>

    if (!open_success) {
 800099c:	e0bfe117 	ldw	r2,-124(fp)
 80009a0:	1000051e 	bne	r2,zero,80009b8 <_Z9wifi_taskv+0xcc>
        printf("OPEN ERROR: RS232 UART port fail to open.\n");
 80009a4:	01020074 	movhi	r4,2049
 80009a8:	211a9a04 	addi	r4,r4,27240
 80009ac:	800376c0 	call	800376c <puts>
        return 0;
 80009b0:	e03ff415 	stw	zero,-48(fp)
 80009b4:	00004b06 	br	8000ae4 <_Z9wifi_taskv+0x1f8>
    }

    int init_success = WiFi_UART.init();
 80009b8:	e0ffe404 	addi	r3,fp,-112
 80009bc:	00800044 	movi	r2,1
 80009c0:	e0bfe815 	stw	r2,-96(fp)
 80009c4:	1809883a 	mov	r4,r3
 80009c8:	80003840 	call	8000384 <_ZN8WiFiUart4initEv>
 80009cc:	e0bfe215 	stw	r2,-120(fp)

    if (!init_success)
 80009d0:	e0bfe217 	ldw	r2,-120(fp)
 80009d4:	1000031e 	bne	r2,zero,80009e4 <_Z9wifi_taskv+0xf8>
        return -1;
 80009d8:	00bfffc4 	movi	r2,-1
 80009dc:	e0bff415 	stw	r2,-48(fp)
 80009e0:	00004006 	br	8000ae4 <_Z9wifi_taskv+0x1f8>

    WiFi_UART.update_entry(tagid, result);
 80009e4:	d1600317 	ldw	r5,-32756(gp)
 80009e8:	d0e00417 	ldw	r3,-32752(gp)
 80009ec:	e13fe404 	addi	r4,fp,-112
 80009f0:	00800044 	movi	r2,1
 80009f4:	e0bfe815 	stw	r2,-96(fp)
 80009f8:	180d883a 	mov	r6,r3
 80009fc:	800046c0 	call	800046c <_ZN8WiFiUart12update_entryEPViS1_>

    // Check if 200 is received
    int count = 0;
 8000a00:	e03fe015 	stw	zero,-128(fp)
    char *buffer;

    while (!WiFi_UART.read_ready()) {}
 8000a04:	0001883a 	nop
 8000a08:	e0ffe404 	addi	r3,fp,-112
 8000a0c:	00800044 	movi	r2,1
 8000a10:	e0bfe815 	stw	r2,-96(fp)
 8000a14:	1809883a 	mov	r4,r3
 8000a18:	80008140 	call	8000814 <_ZN8WiFiUart10read_readyEv>
 8000a1c:	1005003a 	cmpeq	r2,r2,zero
 8000a20:	10803fcc 	andi	r2,r2,255
 8000a24:	103ff81e 	bne	r2,zero,8000a08 <__alt_data_end+0xfc000a08>

    while (WiFi_UART.read_ready()) {
 8000a28:	00000e06 	br	8000a64 <_Z9wifi_taskv+0x178>
        buffer[count] = WiFi_UART.read_s();
 8000a2c:	e0bfe017 	ldw	r2,-128(fp)
 8000a30:	e0ffe317 	ldw	r3,-116(fp)
 8000a34:	1887883a 	add	r3,r3,r2
 8000a38:	e0fff515 	stw	r3,-44(fp)
 8000a3c:	e0ffe404 	addi	r3,fp,-112
 8000a40:	00800044 	movi	r2,1
 8000a44:	e0bfe815 	stw	r2,-96(fp)
 8000a48:	1809883a 	mov	r4,r3
 8000a4c:	80007b40 	call	80007b4 <_ZN8WiFiUart6read_sEv>
 8000a50:	e0fff517 	ldw	r3,-44(fp)
 8000a54:	18800005 	stb	r2,0(r3)
        count++;
 8000a58:	e0bfe017 	ldw	r2,-128(fp)
 8000a5c:	10800044 	addi	r2,r2,1
 8000a60:	e0bfe015 	stw	r2,-128(fp)
    int count = 0;
    char *buffer;

    while (!WiFi_UART.read_ready()) {}

    while (WiFi_UART.read_ready()) {
 8000a64:	e0ffe404 	addi	r3,fp,-112
 8000a68:	00800044 	movi	r2,1
 8000a6c:	e0bfe815 	stw	r2,-96(fp)
 8000a70:	1809883a 	mov	r4,r3
 8000a74:	80008140 	call	8000814 <_ZN8WiFiUart10read_readyEv>
 8000a78:	1004c03a 	cmpne	r2,r2,zero
 8000a7c:	10803fcc 	andi	r2,r2,255
 8000a80:	103fea1e 	bne	r2,zero,8000a2c <__alt_data_end+0xfc000a2c>
        buffer[count] = WiFi_UART.read_s();
        count++;
    }

	printf("Buffer: %s\n", buffer);
 8000a84:	01020074 	movhi	r4,2049
 8000a88:	211aa504 	addi	r4,r4,27284
 8000a8c:	e17fe317 	ldw	r5,-116(fp)
 8000a90:	80036780 	call	8003678 <printf>

    WiFi_UART.flush();
 8000a94:	e0bfe404 	addi	r2,fp,-112
 8000a98:	1009883a 	mov	r4,r2
 8000a9c:	800085c0 	call	800085c <_ZN8WiFiUart5flushEv>
	
	if (strcmp(buffer,"200\r\n") == 0) {
 8000aa0:	e13fe317 	ldw	r4,-116(fp)
 8000aa4:	01420074 	movhi	r5,2049
 8000aa8:	295aa804 	addi	r5,r5,27296
 8000aac:	8003d180 	call	8003d18 <strcmp>
 8000ab0:	1000051e 	bne	r2,zero,8000ac8 <_Z9wifi_taskv+0x1dc>
        printf("UPDATE SUCCESS: Database entry updated.\n");
 8000ab4:	01020074 	movhi	r4,2049
 8000ab8:	211aaa04 	addi	r4,r4,27304
 8000abc:	800376c0 	call	800376c <puts>
        return 0;
 8000ac0:	e03ff415 	stw	zero,-48(fp)
 8000ac4:	00000706 	br	8000ae4 <_Z9wifi_taskv+0x1f8>
    }
	
    printf("ERROR: Failed to updated database entry.\n");
 8000ac8:	01020074 	movhi	r4,2049
 8000acc:	00800044 	movi	r2,1
 8000ad0:	e0bfe815 	stw	r2,-96(fp)
 8000ad4:	211ab404 	addi	r4,r4,27344
 8000ad8:	800376c0 	call	800376c <puts>
    return 1;
 8000adc:	00800044 	movi	r2,1
 8000ae0:	e0bff415 	stw	r2,-48(fp)
 8000ae4:	e0ffe404 	addi	r3,fp,-112
 8000ae8:	00bfffc4 	movi	r2,-1
 8000aec:	e0bfe815 	stw	r2,-96(fp)
 8000af0:	1809883a 	mov	r4,r3
 8000af4:	800029c0 	call	800029c <_ZN8WiFiUartD1Ev>
 8000af8:	e0fff417 	ldw	r3,-48(fp)
 8000afc:	e0fff615 	stw	r3,-40(fp)
 8000b00:	00000c06 	br	8000b34 <_Z9wifi_taskv+0x248>
 8000b04:	e7002004 	addi	fp,fp,128
 8000b08:	e0bfe917 	ldw	r2,-92(fp)
 8000b0c:	e0bff715 	stw	r2,-36(fp)
 8000b10:	e0bfe404 	addi	r2,fp,-112
 8000b14:	e03fe815 	stw	zero,-96(fp)
 8000b18:	1009883a 	mov	r4,r2
 8000b1c:	800029c0 	call	800029c <_ZN8WiFiUartD1Ev>
 8000b20:	e0fff717 	ldw	r3,-36(fp)
 8000b24:	00bfffc4 	movi	r2,-1
 8000b28:	e0bfe815 	stw	r2,-96(fp)
 8000b2c:	1809883a 	mov	r4,r3
 8000b30:	8002c240 	call	8002c24 <_Unwind_SjLj_Resume>
 8000b34:	e0bfe704 	addi	r2,fp,-100
 8000b38:	1009883a 	mov	r4,r2
 8000b3c:	8002a400 	call	8002a40 <_Unwind_SjLj_Unregister>
 8000b40:	e0bff617 	ldw	r2,-40(fp)
 8000b44:	e6fff804 	addi	sp,fp,-32
 8000b48:	dfc00917 	ldw	ra,36(sp)
 8000b4c:	df000817 	ldw	fp,32(sp)
 8000b50:	ddc00717 	ldw	r23,28(sp)
 8000b54:	dd800617 	ldw	r22,24(sp)
 8000b58:	dd400517 	ldw	r21,20(sp)
 8000b5c:	dd000417 	ldw	r20,16(sp)
 8000b60:	dcc00317 	ldw	r19,12(sp)
 8000b64:	dc800217 	ldw	r18,8(sp)
 8000b68:	dc400117 	ldw	r17,4(sp)
 8000b6c:	dc000017 	ldw	r16,0(sp)
 8000b70:	dec00a04 	addi	sp,sp,40
 8000b74:	f800283a 	ret

08000b78 <_ZL12read_sleb128PKhPl>:
 8000b78:	0011883a 	mov	r8,zero
 8000b7c:	000d883a 	mov	r6,zero
 8000b80:	21c00003 	ldbu	r7,0(r4)
 8000b84:	20800044 	addi	r2,r4,1
 8000b88:	1009883a 	mov	r4,r2
 8000b8c:	38c01fcc 	andi	r3,r7,127
 8000b90:	1986983a 	sll	r3,r3,r6
 8000b94:	3a403fcc 	andi	r9,r7,255
 8000b98:	4a40201c 	xori	r9,r9,128
 8000b9c:	4a7fe004 	addi	r9,r9,-128
 8000ba0:	40d0b03a 	or	r8,r8,r3
 8000ba4:	318001c4 	addi	r6,r6,7
 8000ba8:	483ff516 	blt	r9,zero,8000b80 <__alt_data_end+0xfc000b80>
 8000bac:	00c007c4 	movi	r3,31
 8000bb0:	19800536 	bltu	r3,r6,8000bc8 <_ZL12read_sleb128PKhPl+0x50>
 8000bb4:	39c0100c 	andi	r7,r7,64
 8000bb8:	38000326 	beq	r7,zero,8000bc8 <_ZL12read_sleb128PKhPl+0x50>
 8000bbc:	00ffffc4 	movi	r3,-1
 8000bc0:	198c983a 	sll	r6,r3,r6
 8000bc4:	3210b03a 	or	r8,r6,r8
 8000bc8:	2a000015 	stw	r8,0(r5)
 8000bcc:	f800283a 	ret

08000bd0 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv>:
 8000bd0:	28800017 	ldw	r2,0(r5)
 8000bd4:	30c00017 	ldw	r3,0(r6)
 8000bd8:	defffb04 	addi	sp,sp,-20
 8000bdc:	10800217 	ldw	r2,8(r2)
 8000be0:	dc400315 	stw	r17,12(sp)
 8000be4:	dc000215 	stw	r16,8(sp)
 8000be8:	d9400115 	stw	r5,4(sp)
 8000bec:	dfc00415 	stw	ra,16(sp)
 8000bf0:	2021883a 	mov	r16,r4
 8000bf4:	d8c00015 	stw	r3,0(sp)
 8000bf8:	2809883a 	mov	r4,r5
 8000bfc:	3023883a 	mov	r17,r6
 8000c00:	103ee83a 	callr	r2
 8000c04:	10803fcc 	andi	r2,r2,255
 8000c08:	d9400117 	ldw	r5,4(sp)
 8000c0c:	10000326 	beq	r2,zero,8000c1c <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv+0x4c>
 8000c10:	d8800017 	ldw	r2,0(sp)
 8000c14:	10800017 	ldw	r2,0(r2)
 8000c18:	d8800015 	stw	r2,0(sp)
 8000c1c:	80800017 	ldw	r2,0(r16)
 8000c20:	8009883a 	mov	r4,r16
 8000c24:	d80d883a 	mov	r6,sp
 8000c28:	10800417 	ldw	r2,16(r2)
 8000c2c:	01c00044 	movi	r7,1
 8000c30:	103ee83a 	callr	r2
 8000c34:	10c03fcc 	andi	r3,r2,255
 8000c38:	18000226 	beq	r3,zero,8000c44 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv+0x74>
 8000c3c:	d8c00017 	ldw	r3,0(sp)
 8000c40:	88c00015 	stw	r3,0(r17)
 8000c44:	dfc00417 	ldw	ra,16(sp)
 8000c48:	dc400317 	ldw	r17,12(sp)
 8000c4c:	dc000217 	ldw	r16,8(sp)
 8000c50:	dec00504 	addi	sp,sp,20
 8000c54:	f800283a 	ret

08000c58 <_ZL21size_of_encoded_valueh>:
 8000c58:	deffff04 	addi	sp,sp,-4
 8000c5c:	dfc00015 	stw	ra,0(sp)
 8000c60:	00803fc4 	movi	r2,255
 8000c64:	20802026 	beq	r4,r2,8000ce8 <_ZL21size_of_encoded_valueh+0x90>
 8000c68:	210001cc 	andi	r4,r4,7
 8000c6c:	00800144 	movi	r2,5
 8000c70:	11001c36 	bltu	r2,r4,8000ce4 <_ZL21size_of_encoded_valueh+0x8c>
 8000c74:	200890ba 	slli	r4,r4,2
 8000c78:	00820034 	movhi	r2,2048
 8000c7c:	10832304 	addi	r2,r2,3212
 8000c80:	2089883a 	add	r4,r4,r2
 8000c84:	20800017 	ldw	r2,0(r4)
 8000c88:	1000683a 	jmp	r2
 8000c8c:	08000ca4 	muli	zero,at,50
 8000c90:	08000ce4 	muli	zero,at,51
 8000c94:	08000cb4 	orhi	zero,at,50
 8000c98:	08000ca4 	muli	zero,at,50
 8000c9c:	08000cd4 	ori	zero,at,51
 8000ca0:	08000cc4 	addi	zero,at,51
 8000ca4:	00800104 	movi	r2,4
 8000ca8:	dfc00017 	ldw	ra,0(sp)
 8000cac:	dec00104 	addi	sp,sp,4
 8000cb0:	f800283a 	ret
 8000cb4:	00800084 	movi	r2,2
 8000cb8:	dfc00017 	ldw	ra,0(sp)
 8000cbc:	dec00104 	addi	sp,sp,4
 8000cc0:	f800283a 	ret
 8000cc4:	00800044 	movi	r2,1
 8000cc8:	dfc00017 	ldw	ra,0(sp)
 8000ccc:	dec00104 	addi	sp,sp,4
 8000cd0:	f800283a 	ret
 8000cd4:	00800204 	movi	r2,8
 8000cd8:	dfc00017 	ldw	ra,0(sp)
 8000cdc:	dec00104 	addi	sp,sp,4
 8000ce0:	f800283a 	ret
 8000ce4:	8002d400 	call	8002d40 <abort>
 8000ce8:	0005883a 	mov	r2,zero
 8000cec:	dfc00017 	ldw	ra,0(sp)
 8000cf0:	dec00104 	addi	sp,sp,4
 8000cf4:	f800283a 	ret

08000cf8 <_ZL28read_encoded_value_with_basehjPKhPj>:
 8000cf8:	defffa04 	addi	sp,sp,-24
 8000cfc:	dc000315 	stw	r16,12(sp)
 8000d00:	dfc00515 	stw	ra,20(sp)
 8000d04:	dc400415 	stw	r17,16(sp)
 8000d08:	00801404 	movi	r2,80
 8000d0c:	2021883a 	mov	r16,r4
 8000d10:	20807526 	beq	r4,r2,8000ee8 <_ZL28read_encoded_value_with_basehjPKhPj+0x1f0>
 8000d14:	208003cc 	andi	r2,r4,15
 8000d18:	00c00304 	movi	r3,12
 8000d1c:	18807136 	bltu	r3,r2,8000ee4 <_ZL28read_encoded_value_with_basehjPKhPj+0x1ec>
 8000d20:	100490ba 	slli	r2,r2,2
 8000d24:	00c20034 	movhi	r3,2048
 8000d28:	18c34f04 	addi	r3,r3,3388
 8000d2c:	10c5883a 	add	r2,r2,r3
 8000d30:	10800017 	ldw	r2,0(r2)
 8000d34:	2823883a 	mov	r17,r5
 8000d38:	1000683a 	jmp	r2
 8000d3c:	08000e24 	muli	zero,at,56
 8000d40:	08000e54 	ori	zero,at,57
 8000d44:	08000e0c 	andi	zero,at,56
 8000d48:	08000d70 	cmpltui	zero,at,53
 8000d4c:	08000ddc 	xori	zero,at,55
 8000d50:	08000e90 	cmplti	zero,at,58
 8000d54:	08000ee4 	muli	zero,at,59
 8000d58:	08000ee4 	muli	zero,at,59
 8000d5c:	08000ee4 	muli	zero,at,59
 8000d60:	08000e9c 	xori	zero,at,58
 8000d64:	08000ec0 	call	8000ec <__alt_mem_sdram_controller-0x77fff14>
 8000d68:	08000d70 	cmpltui	zero,at,53
 8000d6c:	08000ddc 	xori	zero,at,55
 8000d70:	30800043 	ldbu	r2,1(r6)
 8000d74:	30c00083 	ldbu	r3,2(r6)
 8000d78:	310000c3 	ldbu	r4,3(r6)
 8000d7c:	32000003 	ldbu	r8,0(r6)
 8000d80:	1004923a 	slli	r2,r2,8
 8000d84:	1806943a 	slli	r3,r3,16
 8000d88:	2008963a 	slli	r4,r4,24
 8000d8c:	1204b03a 	or	r2,r2,r8
 8000d90:	1884b03a 	or	r2,r3,r2
 8000d94:	2086b03a 	or	r3,r4,r2
 8000d98:	30800104 	addi	r2,r6,4
 8000d9c:	18000926 	beq	r3,zero,8000dc4 <_ZL28read_encoded_value_with_basehjPKhPj+0xcc>
 8000da0:	81401c0c 	andi	r5,r16,112
 8000da4:	01000404 	movi	r4,16
 8000da8:	29005526 	beq	r5,r4,8000f00 <_ZL28read_encoded_value_with_basehjPKhPj+0x208>
 8000dac:	84003fcc 	andi	r16,r16,255
 8000db0:	8400201c 	xori	r16,r16,128
 8000db4:	843fe004 	addi	r16,r16,-128
 8000db8:	1c47883a 	add	r3,r3,r17
 8000dbc:	8000010e 	bge	r16,zero,8000dc4 <_ZL28read_encoded_value_with_basehjPKhPj+0xcc>
 8000dc0:	18c00017 	ldw	r3,0(r3)
 8000dc4:	38c00015 	stw	r3,0(r7)
 8000dc8:	dfc00517 	ldw	ra,20(sp)
 8000dcc:	dc400417 	ldw	r17,16(sp)
 8000dd0:	dc000317 	ldw	r16,12(sp)
 8000dd4:	dec00604 	addi	sp,sp,24
 8000dd8:	f800283a 	ret
 8000ddc:	30800043 	ldbu	r2,1(r6)
 8000de0:	30c00083 	ldbu	r3,2(r6)
 8000de4:	310000c3 	ldbu	r4,3(r6)
 8000de8:	32000003 	ldbu	r8,0(r6)
 8000dec:	1004923a 	slli	r2,r2,8
 8000df0:	1806943a 	slli	r3,r3,16
 8000df4:	2008963a 	slli	r4,r4,24
 8000df8:	1204b03a 	or	r2,r2,r8
 8000dfc:	1884b03a 	or	r2,r3,r2
 8000e00:	2086b03a 	or	r3,r4,r2
 8000e04:	30800204 	addi	r2,r6,8
 8000e08:	003fe406 	br	8000d9c <__alt_data_end+0xfc000d9c>
 8000e0c:	30c00043 	ldbu	r3,1(r6)
 8000e10:	32000003 	ldbu	r8,0(r6)
 8000e14:	30800084 	addi	r2,r6,2
 8000e18:	1806923a 	slli	r3,r3,8
 8000e1c:	1a06b03a 	or	r3,r3,r8
 8000e20:	003fde06 	br	8000d9c <__alt_data_end+0xfc000d9c>
 8000e24:	30800043 	ldbu	r2,1(r6)
 8000e28:	30c00083 	ldbu	r3,2(r6)
 8000e2c:	314000c3 	ldbu	r5,3(r6)
 8000e30:	31000003 	ldbu	r4,0(r6)
 8000e34:	1004923a 	slli	r2,r2,8
 8000e38:	1806943a 	slli	r3,r3,16
 8000e3c:	280a963a 	slli	r5,r5,24
 8000e40:	1104b03a 	or	r2,r2,r4
 8000e44:	1884b03a 	or	r2,r3,r2
 8000e48:	2886b03a 	or	r3,r5,r2
 8000e4c:	30800104 	addi	r2,r6,4
 8000e50:	003fd206 	br	8000d9c <__alt_data_end+0xfc000d9c>
 8000e54:	3013883a 	mov	r9,r6
 8000e58:	0007883a 	mov	r3,zero
 8000e5c:	0011883a 	mov	r8,zero
 8000e60:	49000003 	ldbu	r4,0(r9)
 8000e64:	48800044 	addi	r2,r9,1
 8000e68:	1013883a 	mov	r9,r2
 8000e6c:	21401fcc 	andi	r5,r4,127
 8000e70:	2a0a983a 	sll	r5,r5,r8
 8000e74:	21003fcc 	andi	r4,r4,255
 8000e78:	2100201c 	xori	r4,r4,128
 8000e7c:	213fe004 	addi	r4,r4,-128
 8000e80:	1946b03a 	or	r3,r3,r5
 8000e84:	420001c4 	addi	r8,r8,7
 8000e88:	203ff516 	blt	r4,zero,8000e60 <__alt_data_end+0xfc000e60>
 8000e8c:	003fc306 	br	8000d9c <__alt_data_end+0xfc000d9c>
 8000e90:	30c00003 	ldbu	r3,0(r6)
 8000e94:	30800044 	addi	r2,r6,1
 8000e98:	003fc006 	br	8000d9c <__alt_data_end+0xfc000d9c>
 8000e9c:	3009883a 	mov	r4,r6
 8000ea0:	d80b883a 	mov	r5,sp
 8000ea4:	d9800115 	stw	r6,4(sp)
 8000ea8:	d9c00215 	stw	r7,8(sp)
 8000eac:	8000b780 	call	8000b78 <_ZL12read_sleb128PKhPl>
 8000eb0:	d8c00017 	ldw	r3,0(sp)
 8000eb4:	d9800117 	ldw	r6,4(sp)
 8000eb8:	d9c00217 	ldw	r7,8(sp)
 8000ebc:	003fb706 	br	8000d9c <__alt_data_end+0xfc000d9c>
 8000ec0:	30c00043 	ldbu	r3,1(r6)
 8000ec4:	32000003 	ldbu	r8,0(r6)
 8000ec8:	30800084 	addi	r2,r6,2
 8000ecc:	1806923a 	slli	r3,r3,8
 8000ed0:	1a06b03a 	or	r3,r3,r8
 8000ed4:	18ffffcc 	andi	r3,r3,65535
 8000ed8:	18e0001c 	xori	r3,r3,32768
 8000edc:	18e00004 	addi	r3,r3,-32768
 8000ee0:	003fae06 	br	8000d9c <__alt_data_end+0xfc000d9c>
 8000ee4:	8002d400 	call	8002d40 <abort>
 8000ee8:	318000c4 	addi	r6,r6,3
 8000eec:	00bfff04 	movi	r2,-4
 8000ef0:	3084703a 	and	r2,r6,r2
 8000ef4:	10c00017 	ldw	r3,0(r2)
 8000ef8:	10800104 	addi	r2,r2,4
 8000efc:	003fb106 	br	8000dc4 <__alt_data_end+0xfc000dc4>
 8000f00:	3023883a 	mov	r17,r6
 8000f04:	003fa906 	br	8000dac <__alt_data_end+0xfc000dac>

08000f08 <_ZL15get_ttype_entryP16lsda_header_infom>:
 8000f08:	defffc04 	addi	sp,sp,-16
 8000f0c:	dfc00315 	stw	ra,12(sp)
 8000f10:	dc000215 	stw	r16,8(sp)
 8000f14:	2021883a 	mov	r16,r4
 8000f18:	21000503 	ldbu	r4,20(r4)
 8000f1c:	d9400115 	stw	r5,4(sp)
 8000f20:	8000c580 	call	8000c58 <_ZL21size_of_encoded_valueh>
 8000f24:	d9400117 	ldw	r5,4(sp)
 8000f28:	1009883a 	mov	r4,r2
 8000f2c:	80027f80 	call	80027f8 <__mulsi3>
 8000f30:	81800317 	ldw	r6,12(r16)
 8000f34:	81000503 	ldbu	r4,20(r16)
 8000f38:	81400217 	ldw	r5,8(r16)
 8000f3c:	308dc83a 	sub	r6,r6,r2
 8000f40:	d80f883a 	mov	r7,sp
 8000f44:	8000cf80 	call	8000cf8 <_ZL28read_encoded_value_with_basehjPKhPj>
 8000f48:	d8800017 	ldw	r2,0(sp)
 8000f4c:	dfc00317 	ldw	ra,12(sp)
 8000f50:	dc000217 	ldw	r16,8(sp)
 8000f54:	dec00404 	addi	sp,sp,16
 8000f58:	f800283a 	ret

08000f5c <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl>:
 8000f5c:	defffb04 	addi	sp,sp,-20
 8000f60:	dc000115 	stw	r16,4(sp)
 8000f64:	24000317 	ldw	r16,12(r4)
 8000f68:	01ce303a 	nor	r7,zero,r7
 8000f6c:	dc800315 	stw	r18,12(sp)
 8000f70:	dc400215 	stw	r17,8(sp)
 8000f74:	dfc00415 	stw	ra,16(sp)
 8000f78:	2023883a 	mov	r17,r4
 8000f7c:	2825883a 	mov	r18,r5
 8000f80:	d9800015 	stw	r6,0(sp)
 8000f84:	81e1883a 	add	r16,r16,r7
 8000f88:	8009883a 	mov	r4,r16
 8000f8c:	000b883a 	mov	r5,zero
 8000f90:	000d883a 	mov	r6,zero
 8000f94:	20800003 	ldbu	r2,0(r4)
 8000f98:	84000044 	addi	r16,r16,1
 8000f9c:	8009883a 	mov	r4,r16
 8000fa0:	10c01fcc 	andi	r3,r2,127
 8000fa4:	1986983a 	sll	r3,r3,r6
 8000fa8:	10803fcc 	andi	r2,r2,255
 8000fac:	1080201c 	xori	r2,r2,128
 8000fb0:	10bfe004 	addi	r2,r2,-128
 8000fb4:	28cab03a 	or	r5,r5,r3
 8000fb8:	318001c4 	addi	r6,r6,7
 8000fbc:	103ff516 	blt	r2,zero,8000f94 <__alt_data_end+0xfc000f94>
 8000fc0:	28000e26 	beq	r5,zero,8000ffc <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0xa0>
 8000fc4:	8809883a 	mov	r4,r17
 8000fc8:	8000f080 	call	8000f08 <_ZL15get_ttype_entryP16lsda_header_infom>
 8000fcc:	1009883a 	mov	r4,r2
 8000fd0:	900b883a 	mov	r5,r18
 8000fd4:	d80d883a 	mov	r6,sp
 8000fd8:	8000bd00 	call	8000bd0 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv>
 8000fdc:	10c03fcc 	andi	r3,r2,255
 8000fe0:	183fe926 	beq	r3,zero,8000f88 <__alt_data_end+0xfc000f88>
 8000fe4:	dfc00417 	ldw	ra,16(sp)
 8000fe8:	dc800317 	ldw	r18,12(sp)
 8000fec:	dc400217 	ldw	r17,8(sp)
 8000ff0:	dc000117 	ldw	r16,4(sp)
 8000ff4:	dec00504 	addi	sp,sp,20
 8000ff8:	f800283a 	ret
 8000ffc:	0005883a 	mov	r2,zero
 8001000:	003ff806 	br	8000fe4 <__alt_data_end+0xfc000fe4>

08001004 <_ZL21base_of_encoded_valuehP15_Unwind_Context>:
 8001004:	deffff04 	addi	sp,sp,-4
 8001008:	dfc00015 	stw	ra,0(sp)
 800100c:	00803fc4 	movi	r2,255
 8001010:	20800e26 	beq	r4,r2,800104c <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x48>
 8001014:	20801c0c 	andi	r2,r4,112
 8001018:	00c00804 	movi	r3,32
 800101c:	10c01726 	beq	r2,r3,800107c <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x78>
 8001020:	18800e2e 	bgeu	r3,r2,800105c <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x58>
 8001024:	00c01004 	movi	r3,64
 8001028:	10c01026 	beq	r2,r3,800106c <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x68>
 800102c:	00c01404 	movi	r3,80
 8001030:	10c00626 	beq	r2,r3,800104c <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x48>
 8001034:	00c00c04 	movi	r3,48
 8001038:	10c00b1e 	bne	r2,r3,8001068 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x64>
 800103c:	2809883a 	mov	r4,r5
 8001040:	dfc00017 	ldw	ra,0(sp)
 8001044:	dec00104 	addi	sp,sp,4
 8001048:	8002b001 	jmpi	8002b00 <_Unwind_GetDataRelBase>
 800104c:	0005883a 	mov	r2,zero
 8001050:	dfc00017 	ldw	ra,0(sp)
 8001054:	dec00104 	addi	sp,sp,4
 8001058:	f800283a 	ret
 800105c:	103ffb26 	beq	r2,zero,800104c <__alt_data_end+0xfc00104c>
 8001060:	00c00404 	movi	r3,16
 8001064:	10fff926 	beq	r2,r3,800104c <__alt_data_end+0xfc00104c>
 8001068:	8002d400 	call	8002d40 <abort>
 800106c:	2809883a 	mov	r4,r5
 8001070:	dfc00017 	ldw	ra,0(sp)
 8001074:	dec00104 	addi	sp,sp,4
 8001078:	8002af01 	jmpi	8002af0 <_Unwind_GetRegionStart>
 800107c:	2809883a 	mov	r4,r5
 8001080:	dfc00017 	ldw	ra,0(sp)
 8001084:	dec00104 	addi	sp,sp,4
 8001088:	8002b081 	jmpi	8002b08 <_Unwind_GetTextRelBase>

0800108c <_ZL28check_compact_exception_specPKSt9type_infoPvPKhij>:
 800108c:	defff104 	addi	sp,sp,-60
 8001090:	dd800b15 	stw	r22,44(sp)
 8001094:	382dd23a 	srai	r22,r7,8
 8001098:	dd400a15 	stw	r21,40(sp)
 800109c:	dd000915 	stw	r20,36(sp)
 80010a0:	dfc00e15 	stw	ra,56(sp)
 80010a4:	df000d15 	stw	fp,52(sp)
 80010a8:	ddc00c15 	stw	r23,48(sp)
 80010ac:	dcc00815 	stw	r19,32(sp)
 80010b0:	dc800715 	stw	r18,28(sp)
 80010b4:	dc400615 	stw	r17,24(sp)
 80010b8:	dc000515 	stw	r16,20(sp)
 80010bc:	d9c00315 	stw	r7,12(sp)
 80010c0:	d9400215 	stw	r5,8(sp)
 80010c4:	2029883a 	mov	r20,r4
 80010c8:	dd400f17 	ldw	r21,60(sp)
 80010cc:	b000010e 	bge	r22,zero,80010d4 <_ZL28check_compact_exception_specPKSt9type_infoPvPKhij+0x48>
 80010d0:	05adc83a 	sub	r22,zero,r22
 80010d4:	01000144 	movi	r4,5
 80010d8:	000b883a 	mov	r5,zero
 80010dc:	d9800415 	stw	r6,16(sp)
 80010e0:	80010040 	call	8001004 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 80010e4:	d9800417 	ldw	r6,16(sp)
 80010e8:	100b883a 	mov	r5,r2
 80010ec:	d9c00104 	addi	r7,sp,4
 80010f0:	01000144 	movi	r4,5
 80010f4:	8000cf80 	call	8000cf8 <_ZL28read_encoded_value_with_basehjPKhPj>
 80010f8:	1009883a 	mov	r4,r2
 80010fc:	017ffe44 	movi	r5,-7
 8001100:	1021883a 	mov	r16,r2
 8001104:	80027f80 	call	80027f8 <__mulsi3>
 8001108:	1027883a 	mov	r19,r2
 800110c:	002f883a 	mov	r23,zero
 8001110:	84400003 	ldbu	r17,0(r16)
 8001114:	8009883a 	mov	r4,r16
 8001118:	014001c4 	movi	r5,7
 800111c:	80027f80 	call	80027f8 <__mulsi3>
 8001120:	88c01fcc 	andi	r3,r17,127
 8001124:	14c5883a 	add	r2,r2,r19
 8001128:	1886983a 	sll	r3,r3,r2
 800112c:	8c403fcc 	andi	r17,r17,255
 8001130:	8c40201c 	xori	r17,r17,128
 8001134:	8c7fe004 	addi	r17,r17,-128
 8001138:	84000044 	addi	r16,r16,1
 800113c:	b8eeb03a 	or	r23,r23,r3
 8001140:	883ff316 	blt	r17,zero,8001110 <__alt_data_end+0xfc001110>
 8001144:	85e1883a 	add	r16,r16,r23
 8001148:	8009883a 	mov	r4,r16
 800114c:	017ffe44 	movi	r5,-7
 8001150:	80027f80 	call	80027f8 <__mulsi3>
 8001154:	102f883a 	mov	r23,r2
 8001158:	8007883a 	mov	r3,r16
 800115c:	0025883a 	mov	r18,zero
 8001160:	1cc00003 	ldbu	r19,0(r3)
 8001164:	1809883a 	mov	r4,r3
 8001168:	014001c4 	movi	r5,7
 800116c:	1c400044 	addi	r17,r3,1
 8001170:	80027f80 	call	80027f8 <__mulsi3>
 8001174:	98c01fcc 	andi	r3,r19,127
 8001178:	15c5883a 	add	r2,r2,r23
 800117c:	1884983a 	sll	r2,r3,r2
 8001180:	9cc03fcc 	andi	r19,r19,255
 8001184:	9cc0201c 	xori	r19,r19,128
 8001188:	9cffe004 	addi	r19,r19,-128
 800118c:	8807883a 	mov	r3,r17
 8001190:	90a4b03a 	or	r18,r18,r2
 8001194:	983ff216 	blt	r19,zero,8001160 <__alt_data_end+0xfc001160>
 8001198:	b7003fcc 	andi	fp,r22,255
 800119c:	e73fffc4 	addi	fp,fp,-1
 80011a0:	8f39883a 	add	fp,r17,fp
 80011a4:	840000c4 	addi	r16,r16,3
 80011a8:	848d883a 	add	r6,r16,r18
 80011ac:	e009883a 	mov	r4,fp
 80011b0:	017ffe44 	movi	r5,-7
 80011b4:	04ffff04 	movi	r19,-4
 80011b8:	34e6703a 	and	r19,r6,r19
 80011bc:	80027f80 	call	80027f8 <__mulsi3>
 80011c0:	002f883a 	mov	r23,zero
 80011c4:	102d883a 	mov	r22,r2
 80011c8:	e4400003 	ldbu	r17,0(fp)
 80011cc:	e009883a 	mov	r4,fp
 80011d0:	014001c4 	movi	r5,7
 80011d4:	80027f80 	call	80027f8 <__mulsi3>
 80011d8:	88c01fcc 	andi	r3,r17,127
 80011dc:	1585883a 	add	r2,r2,r22
 80011e0:	1886983a 	sll	r3,r3,r2
 80011e4:	8c403fcc 	andi	r17,r17,255
 80011e8:	8c40201c 	xori	r17,r17,128
 80011ec:	e4000044 	addi	r16,fp,1
 80011f0:	8c7fe004 	addi	r17,r17,-128
 80011f4:	b8eeb03a 	or	r23,r23,r3
 80011f8:	8039883a 	mov	fp,r16
 80011fc:	883ff216 	blt	r17,zero,80011c8 <__alt_data_end+0xfc0011c8>
 8001200:	d8800317 	ldw	r2,12(sp)
 8001204:	14803fcc 	andi	r18,r2,255
 8001208:	b8002326 	beq	r23,zero,8001298 <_ZL28check_compact_exception_specPKSt9type_infoPvPKhij+0x20c>
 800120c:	9009883a 	mov	r4,r18
 8001210:	8000c580 	call	8000c58 <_ZL21size_of_encoded_valueh>
 8001214:	1009883a 	mov	r4,r2
 8001218:	b97fffc4 	addi	r5,r23,-1
 800121c:	80027f80 	call	80027f8 <__mulsi3>
 8001220:	9009883a 	mov	r4,r18
 8001224:	a80b883a 	mov	r5,r21
 8001228:	14cd883a 	add	r6,r2,r19
 800122c:	d80f883a 	mov	r7,sp
 8001230:	8000cf80 	call	8000cf8 <_ZL28read_encoded_value_with_basehjPKhPj>
 8001234:	d9000017 	ldw	r4,0(sp)
 8001238:	a00b883a 	mov	r5,r20
 800123c:	d9800204 	addi	r6,sp,8
 8001240:	8000bd00 	call	8000bd0 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv>
 8001244:	10c03fcc 	andi	r3,r2,255
 8001248:	1800141e 	bne	r3,zero,800129c <_ZL28check_compact_exception_specPKSt9type_infoPvPKhij+0x210>
 800124c:	8009883a 	mov	r4,r16
 8001250:	017ffe44 	movi	r5,-7
 8001254:	80027f80 	call	80027f8 <__mulsi3>
 8001258:	102d883a 	mov	r22,r2
 800125c:	002f883a 	mov	r23,zero
 8001260:	84400003 	ldbu	r17,0(r16)
 8001264:	8009883a 	mov	r4,r16
 8001268:	014001c4 	movi	r5,7
 800126c:	80027f80 	call	80027f8 <__mulsi3>
 8001270:	88c01fcc 	andi	r3,r17,127
 8001274:	1585883a 	add	r2,r2,r22
 8001278:	1886983a 	sll	r3,r3,r2
 800127c:	8c403fcc 	andi	r17,r17,255
 8001280:	8c40201c 	xori	r17,r17,128
 8001284:	8c7fe004 	addi	r17,r17,-128
 8001288:	84000044 	addi	r16,r16,1
 800128c:	b8eeb03a 	or	r23,r23,r3
 8001290:	883ff316 	blt	r17,zero,8001260 <__alt_data_end+0xfc001260>
 8001294:	003fdc06 	br	8001208 <__alt_data_end+0xfc001208>
 8001298:	0005883a 	mov	r2,zero
 800129c:	dfc00e17 	ldw	ra,56(sp)
 80012a0:	df000d17 	ldw	fp,52(sp)
 80012a4:	ddc00c17 	ldw	r23,48(sp)
 80012a8:	dd800b17 	ldw	r22,44(sp)
 80012ac:	dd400a17 	ldw	r21,40(sp)
 80012b0:	dd000917 	ldw	r20,36(sp)
 80012b4:	dcc00817 	ldw	r19,32(sp)
 80012b8:	dc800717 	ldw	r18,28(sp)
 80012bc:	dc400617 	ldw	r17,24(sp)
 80012c0:	dc000517 	ldw	r16,20(sp)
 80012c4:	dec00f04 	addi	sp,sp,60
 80012c8:	f800283a 	ret

080012cc <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>:
 80012cc:	defffb04 	addi	sp,sp,-20
 80012d0:	dcc00315 	stw	r19,12(sp)
 80012d4:	dc400115 	stw	r17,4(sp)
 80012d8:	dc000015 	stw	r16,0(sp)
 80012dc:	dfc00415 	stw	ra,16(sp)
 80012e0:	dc800215 	stw	r18,8(sp)
 80012e4:	2027883a 	mov	r19,r4
 80012e8:	2821883a 	mov	r16,r5
 80012ec:	3023883a 	mov	r17,r6
 80012f0:	20003f26 	beq	r4,zero,80013f0 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x124>
 80012f4:	8002af00 	call	8002af0 <_Unwind_GetRegionStart>
 80012f8:	88800015 	stw	r2,0(r17)
 80012fc:	84800003 	ldbu	r18,0(r16)
 8001300:	00c03fc4 	movi	r3,255
 8001304:	84000044 	addi	r16,r16,1
 8001308:	90c03726 	beq	r18,r3,80013e8 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x11c>
 800130c:	9009883a 	mov	r4,r18
 8001310:	980b883a 	mov	r5,r19
 8001314:	80010040 	call	8001004 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 8001318:	800d883a 	mov	r6,r16
 800131c:	9009883a 	mov	r4,r18
 8001320:	100b883a 	mov	r5,r2
 8001324:	89c00104 	addi	r7,r17,4
 8001328:	8000cf80 	call	8000cf8 <_ZL28read_encoded_value_with_basehjPKhPj>
 800132c:	1021883a 	mov	r16,r2
 8001330:	80c00003 	ldbu	r3,0(r16)
 8001334:	01003fc4 	movi	r4,255
 8001338:	80800044 	addi	r2,r16,1
 800133c:	88c00505 	stb	r3,20(r17)
 8001340:	18c03fcc 	andi	r3,r3,255
 8001344:	19002c26 	beq	r3,r4,80013f8 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x12c>
 8001348:	100d883a 	mov	r6,r2
 800134c:	000f883a 	mov	r7,zero
 8001350:	000b883a 	mov	r5,zero
 8001354:	30c00003 	ldbu	r3,0(r6)
 8001358:	10800044 	addi	r2,r2,1
 800135c:	100d883a 	mov	r6,r2
 8001360:	19001fcc 	andi	r4,r3,127
 8001364:	2148983a 	sll	r4,r4,r5
 8001368:	18c03fcc 	andi	r3,r3,255
 800136c:	18c0201c 	xori	r3,r3,128
 8001370:	18ffe004 	addi	r3,r3,-128
 8001374:	390eb03a 	or	r7,r7,r4
 8001378:	294001c4 	addi	r5,r5,7
 800137c:	183ff516 	blt	r3,zero,8001354 <__alt_data_end+0xfc001354>
 8001380:	11cf883a 	add	r7,r2,r7
 8001384:	89c00315 	stw	r7,12(r17)
 8001388:	10c00003 	ldbu	r3,0(r2)
 800138c:	000f883a 	mov	r7,zero
 8001390:	10800044 	addi	r2,r2,1
 8001394:	88c00545 	stb	r3,21(r17)
 8001398:	000b883a 	mov	r5,zero
 800139c:	10c00003 	ldbu	r3,0(r2)
 80013a0:	10800044 	addi	r2,r2,1
 80013a4:	19001fcc 	andi	r4,r3,127
 80013a8:	2148983a 	sll	r4,r4,r5
 80013ac:	18c03fcc 	andi	r3,r3,255
 80013b0:	18c0201c 	xori	r3,r3,128
 80013b4:	18ffe004 	addi	r3,r3,-128
 80013b8:	390eb03a 	or	r7,r7,r4
 80013bc:	294001c4 	addi	r5,r5,7
 80013c0:	183ff616 	blt	r3,zero,800139c <__alt_data_end+0xfc00139c>
 80013c4:	11cf883a 	add	r7,r2,r7
 80013c8:	89c00415 	stw	r7,16(r17)
 80013cc:	dfc00417 	ldw	ra,16(sp)
 80013d0:	dcc00317 	ldw	r19,12(sp)
 80013d4:	dc800217 	ldw	r18,8(sp)
 80013d8:	dc400117 	ldw	r17,4(sp)
 80013dc:	dc000017 	ldw	r16,0(sp)
 80013e0:	dec00504 	addi	sp,sp,20
 80013e4:	f800283a 	ret
 80013e8:	88800115 	stw	r2,4(r17)
 80013ec:	003fd006 	br	8001330 <__alt_data_end+0xfc001330>
 80013f0:	0005883a 	mov	r2,zero
 80013f4:	003fc006 	br	80012f8 <__alt_data_end+0xfc0012f8>
 80013f8:	88000315 	stw	zero,12(r17)
 80013fc:	003fe206 	br	8001388 <__alt_data_end+0xfc001388>

08001400 <__gxx_personality_sj0>:
 8001400:	00820034 	movhi	r2,2048
 8001404:	deffde04 	addi	sp,sp,-136
 8001408:	10850004 	addi	r2,r2,5120
 800140c:	d8801015 	stw	r2,64(sp)
 8001410:	00820074 	movhi	r2,2049
 8001414:	109a4d04 	addi	r2,r2,26932
 8001418:	d8801115 	stw	r2,68(sp)
 800141c:	00820034 	movhi	r2,2048
 8001420:	10863b04 	addi	r2,r2,6380
 8001424:	d9001715 	stw	r4,92(sp)
 8001428:	d9000a04 	addi	r4,sp,40
 800142c:	d8801315 	stw	r2,76(sp)
 8001430:	dfc02115 	stw	ra,132(sp)
 8001434:	df002015 	stw	fp,128(sp)
 8001438:	dec01215 	stw	sp,72(sp)
 800143c:	dec01415 	stw	sp,80(sp)
 8001440:	d9401a15 	stw	r5,104(sp)
 8001444:	d9801815 	stw	r6,96(sp)
 8001448:	d9c01915 	stw	r7,100(sp)
 800144c:	8002a280 	call	8002a28 <_Unwind_SjLj_Register>
 8001450:	d8c01717 	ldw	r3,92(sp)
 8001454:	d8000915 	stw	zero,36(sp)
 8001458:	d8000815 	stw	zero,32(sp)
 800145c:	00800044 	movi	r2,1
 8001460:	18800926 	beq	r3,r2,8001488 <__gxx_personality_sj0+0x88>
 8001464:	014000c4 	movi	r5,3
 8001468:	d9401715 	stw	r5,92(sp)
 800146c:	d9000a04 	addi	r4,sp,40
 8001470:	8002a400 	call	8002a40 <_Unwind_SjLj_Unregister>
 8001474:	d8801717 	ldw	r2,92(sp)
 8001478:	dfc02117 	ldw	ra,132(sp)
 800147c:	df002017 	ldw	fp,128(sp)
 8001480:	dec02204 	addi	sp,sp,136
 8001484:	f800283a 	ret
 8001488:	d9401817 	ldw	r5,96(sp)
 800148c:	012f3574 	movhi	r4,48341
 8001490:	21354004 	addi	r4,r4,-11008
 8001494:	2909883a 	add	r4,r5,r4
 8001498:	2145803a 	cmpltu	r2,r4,r5
 800149c:	d9401917 	ldw	r5,100(sp)
 80014a0:	d8c01b05 	stb	r3,108(sp)
 80014a4:	00ee2cb4 	movhi	r3,47282
 80014a8:	18eaaf04 	addi	r3,r3,-21828
 80014ac:	28c7883a 	add	r3,r5,r3
 80014b0:	10c5883a 	add	r2,r2,r3
 80014b4:	10003526 	beq	r2,zero,800158c <__gxx_personality_sj0+0x18c>
 80014b8:	d8c01a17 	ldw	r3,104(sp)
 80014bc:	00800184 	movi	r2,6
 80014c0:	18803826 	beq	r3,r2,80015a4 <__gxx_personality_sj0+0x1a4>
 80014c4:	d9002317 	ldw	r4,140(sp)
 80014c8:	00ffffc4 	movi	r3,-1
 80014cc:	d8c00b15 	stw	r3,44(sp)
 80014d0:	8002ae40 	call	8002ae4 <_Unwind_GetLanguageSpecificData>
 80014d4:	d8801915 	stw	r2,100(sp)
 80014d8:	1000a326 	beq	r2,zero,8001768 <__gxx_personality_sj0+0x368>
 80014dc:	d9002317 	ldw	r4,140(sp)
 80014e0:	d9401917 	ldw	r5,100(sp)
 80014e4:	d80d883a 	mov	r6,sp
 80014e8:	00bfffc4 	movi	r2,-1
 80014ec:	d8800b15 	stw	r2,44(sp)
 80014f0:	80012cc0 	call	80012cc <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>
 80014f4:	d9000503 	ldbu	r4,20(sp)
 80014f8:	d9402317 	ldw	r5,140(sp)
 80014fc:	d8801715 	stw	r2,92(sp)
 8001500:	80010040 	call	8001004 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 8001504:	d9002317 	ldw	r4,140(sp)
 8001508:	d9400804 	addi	r5,sp,32
 800150c:	d8800215 	stw	r2,8(sp)
 8001510:	8002ab40 	call	8002ab4 <_Unwind_GetIPInfo>
 8001514:	d8c00817 	ldw	r3,32(sp)
 8001518:	1800011e 	bne	r3,zero,8001520 <__gxx_personality_sj0+0x120>
 800151c:	10bfffc4 	addi	r2,r2,-1
 8001520:	10009116 	blt	r2,zero,8001768 <__gxx_personality_sj0+0x368>
 8001524:	10004c1e 	bne	r2,zero,8001658 <__gxx_personality_sj0+0x258>
 8001528:	d8001c15 	stw	zero,112(sp)
 800152c:	00800044 	movi	r2,1
 8001530:	d8001715 	stw	zero,92(sp)
 8001534:	d8001815 	stw	zero,96(sp)
 8001538:	d9001a17 	ldw	r4,104(sp)
 800153c:	20c0004c 	andi	r3,r4,1
 8001540:	18008c26 	beq	r3,zero,8001774 <__gxx_personality_sj0+0x374>
 8001544:	00c00084 	movi	r3,2
 8001548:	10c08726 	beq	r2,r3,8001768 <__gxx_personality_sj0+0x368>
 800154c:	d8801b03 	ldbu	r2,108(sp)
 8001550:	1000d21e 	bne	r2,zero,800189c <__gxx_personality_sj0+0x49c>
 8001554:	d9402217 	ldw	r5,136(sp)
 8001558:	d8801717 	ldw	r2,92(sp)
 800155c:	d8c01817 	ldw	r3,96(sp)
 8001560:	d9001917 	ldw	r4,100(sp)
 8001564:	28bffb15 	stw	r2,-20(r5)
 8001568:	d8800917 	ldw	r2,36(sp)
 800156c:	28fffc15 	stw	r3,-16(r5)
 8001570:	00c00184 	movi	r3,6
 8001574:	28bfff15 	stw	r2,-4(r5)
 8001578:	d8801c17 	ldw	r2,112(sp)
 800157c:	293ffd15 	stw	r4,-12(r5)
 8001580:	d8c01715 	stw	r3,92(sp)
 8001584:	28bffe15 	stw	r2,-8(r5)
 8001588:	003fb806 	br	800146c <__alt_data_end+0xfc00146c>
 800158c:	d8801717 	ldw	r2,92(sp)
 8001590:	113fc936 	bltu	r2,r4,80014b8 <__alt_data_end+0xfc0014b8>
 8001594:	d8c01a17 	ldw	r3,104(sp)
 8001598:	d8001b05 	stb	zero,108(sp)
 800159c:	00800184 	movi	r2,6
 80015a0:	18bfc81e 	bne	r3,r2,80014c4 <__alt_data_end+0xfc0014c4>
 80015a4:	d8801b03 	ldbu	r2,108(sp)
 80015a8:	103fc61e 	bne	r2,zero,80014c4 <__alt_data_end+0xfc0014c4>
 80015ac:	d9002217 	ldw	r4,136(sp)
 80015b0:	d9402217 	ldw	r5,136(sp)
 80015b4:	d8802217 	ldw	r2,136(sp)
 80015b8:	213ffe17 	ldw	r4,-8(r4)
 80015bc:	297ffb17 	ldw	r5,-20(r5)
 80015c0:	10bffd17 	ldw	r2,-12(r2)
 80015c4:	d9001c15 	stw	r4,112(sp)
 80015c8:	d9401715 	stw	r5,92(sp)
 80015cc:	d8801915 	stw	r2,100(sp)
 80015d0:	20008726 	beq	r4,zero,80017f0 <__gxx_personality_sj0+0x3f0>
 80015d4:	d8801717 	ldw	r2,92(sp)
 80015d8:	10006f0e 	bge	r2,zero,8001798 <__gxx_personality_sj0+0x398>
 80015dc:	d9002317 	ldw	r4,140(sp)
 80015e0:	d9401917 	ldw	r5,100(sp)
 80015e4:	d80d883a 	mov	r6,sp
 80015e8:	00bfffc4 	movi	r2,-1
 80015ec:	d8800b15 	stw	r2,44(sp)
 80015f0:	80012cc0 	call	80012cc <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>
 80015f4:	d9000503 	ldbu	r4,20(sp)
 80015f8:	d9402317 	ldw	r5,140(sp)
 80015fc:	80010040 	call	8001004 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 8001600:	d9000503 	ldbu	r4,20(sp)
 8001604:	d9402317 	ldw	r5,140(sp)
 8001608:	d8800215 	stw	r2,8(sp)
 800160c:	80010040 	call	8001004 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 8001610:	d8c02217 	ldw	r3,136(sp)
 8001614:	18bffe15 	stw	r2,-8(r3)
 8001618:	00005f06 	br	8001798 <__gxx_personality_sj0+0x398>
 800161c:	000f883a 	mov	r7,zero
 8001620:	000d883a 	mov	r6,zero
 8001624:	19000003 	ldbu	r4,0(r3)
 8001628:	18c00044 	addi	r3,r3,1
 800162c:	d8c01715 	stw	r3,92(sp)
 8001630:	21401fcc 	andi	r5,r4,127
 8001634:	298a983a 	sll	r5,r5,r6
 8001638:	21003fcc 	andi	r4,r4,255
 800163c:	2100201c 	xori	r4,r4,128
 8001640:	213fe004 	addi	r4,r4,-128
 8001644:	394eb03a 	or	r7,r7,r5
 8001648:	318001c4 	addi	r6,r6,7
 800164c:	203ff516 	blt	r4,zero,8001624 <__alt_data_end+0xfc001624>
 8001650:	10bfffc4 	addi	r2,r2,-1
 8001654:	10000e26 	beq	r2,zero,8001690 <__gxx_personality_sj0+0x290>
 8001658:	d8c01717 	ldw	r3,92(sp)
 800165c:	0011883a 	mov	r8,zero
 8001660:	000d883a 	mov	r6,zero
 8001664:	19000003 	ldbu	r4,0(r3)
 8001668:	18c00044 	addi	r3,r3,1
 800166c:	21401fcc 	andi	r5,r4,127
 8001670:	298a983a 	sll	r5,r5,r6
 8001674:	21003fcc 	andi	r4,r4,255
 8001678:	2100201c 	xori	r4,r4,128
 800167c:	213fe004 	addi	r4,r4,-128
 8001680:	4150b03a 	or	r8,r8,r5
 8001684:	318001c4 	addi	r6,r6,7
 8001688:	203ff616 	blt	r4,zero,8001664 <__alt_data_end+0xfc001664>
 800168c:	003fe306 	br	800161c <__alt_data_end+0xfc00161c>
 8001690:	42000044 	addi	r8,r8,1
 8001694:	da001c15 	stw	r8,112(sp)
 8001698:	38004f26 	beq	r7,zero,80017d8 <__gxx_personality_sj0+0x3d8>
 800169c:	d8800417 	ldw	r2,16(sp)
 80016a0:	39ffffc4 	addi	r7,r7,-1
 80016a4:	11c5883a 	add	r2,r2,r7
 80016a8:	d8801815 	stw	r2,96(sp)
 80016ac:	40002e26 	beq	r8,zero,8001768 <__gxx_personality_sj0+0x368>
 80016b0:	10004b26 	beq	r2,zero,80017e0 <__gxx_personality_sj0+0x3e0>
 80016b4:	d8c01a17 	ldw	r3,104(sp)
 80016b8:	18c0020c 	andi	r3,r3,8
 80016bc:	d8c01e15 	stw	r3,120(sp)
 80016c0:	1800801e 	bne	r3,zero,80018c4 <__gxx_personality_sj0+0x4c4>
 80016c4:	d8801b03 	ldbu	r2,108(sp)
 80016c8:	1000821e 	bne	r2,zero,80018d4 <__gxx_personality_sj0+0x4d4>
 80016cc:	d9002217 	ldw	r4,136(sp)
 80016d0:	20800017 	ldw	r2,0(r4)
 80016d4:	1080004c 	andi	r2,r2,1
 80016d8:	1000821e 	bne	r2,zero,80018e4 <__gxx_personality_sj0+0x4e4>
 80016dc:	d9402217 	ldw	r5,136(sp)
 80016e0:	28800504 	addi	r2,r5,20
 80016e4:	d8800915 	stw	r2,36(sp)
 80016e8:	10bff017 	ldw	r2,-64(r2)
 80016ec:	d8801d15 	stw	r2,116(sp)
 80016f0:	d9001b03 	ldbu	r4,108(sp)
 80016f4:	d8001b45 	stb	zero,109(sp)
 80016f8:	d9001f15 	stw	r4,124(sp)
 80016fc:	00000e06 	br	8001738 <__gxx_personality_sj0+0x338>
 8001700:	01c03d0e 	bge	zero,r7,80017f8 <__gxx_personality_sj0+0x3f8>
 8001704:	017fffc4 	movi	r5,-1
 8001708:	d9400b15 	stw	r5,44(sp)
 800170c:	d809883a 	mov	r4,sp
 8001710:	380b883a 	mov	r5,r7
 8001714:	8000f080 	call	8000f08 <_ZL15get_ttype_entryP16lsda_header_infom>
 8001718:	10004f26 	beq	r2,zero,8001858 <__gxx_personality_sj0+0x458>
 800171c:	d8c01d17 	ldw	r3,116(sp)
 8001720:	1800611e 	bne	r3,zero,80018a8 <__gxx_personality_sj0+0x4a8>
 8001724:	d8800617 	ldw	r2,24(sp)
 8001728:	10005726 	beq	r2,zero,8001888 <__gxx_personality_sj0+0x488>
 800172c:	d9401717 	ldw	r5,92(sp)
 8001730:	2885883a 	add	r2,r5,r2
 8001734:	d8801815 	stw	r2,96(sp)
 8001738:	d9001817 	ldw	r4,96(sp)
 800173c:	d9400704 	addi	r5,sp,28
 8001740:	8000b780 	call	8000b78 <_ZL12read_sleb128PKhPl>
 8001744:	1009883a 	mov	r4,r2
 8001748:	d9400604 	addi	r5,sp,24
 800174c:	d8801715 	stw	r2,92(sp)
 8001750:	8000b780 	call	8000b78 <_ZL12read_sleb128PKhPl>
 8001754:	d9c00717 	ldw	r7,28(sp)
 8001758:	383fe91e 	bne	r7,zero,8001700 <__alt_data_end+0xfc001700>
 800175c:	01000044 	movi	r4,1
 8001760:	d9001b45 	stb	r4,109(sp)
 8001764:	003fef06 	br	8001724 <__alt_data_end+0xfc001724>
 8001768:	01000204 	movi	r4,8
 800176c:	d9001715 	stw	r4,92(sp)
 8001770:	003f3e06 	br	800146c <__alt_data_end+0xfc00146c>
 8001774:	d9001a17 	ldw	r4,104(sp)
 8001778:	20c0020c 	andi	r3,r4,8
 800177c:	1800021e 	bne	r3,zero,8001788 <__gxx_personality_sj0+0x388>
 8001780:	d8c01b03 	ldbu	r3,108(sp)
 8001784:	18001826 	beq	r3,zero,80017e8 <__gxx_personality_sj0+0x3e8>
 8001788:	00c00044 	movi	r3,1
 800178c:	10c05926 	beq	r2,r3,80018f4 <__gxx_personality_sj0+0x4f4>
 8001790:	d9401717 	ldw	r5,92(sp)
 8001794:	28005816 	blt	r5,zero,80018f8 <__gxx_personality_sj0+0x4f8>
 8001798:	d9802217 	ldw	r6,136(sp)
 800179c:	d9002317 	ldw	r4,140(sp)
 80017a0:	00bfffc4 	movi	r2,-1
 80017a4:	000b883a 	mov	r5,zero
 80017a8:	d8800b15 	stw	r2,44(sp)
 80017ac:	8002a880 	call	8002a88 <_Unwind_SetGR>
 80017b0:	d9002317 	ldw	r4,140(sp)
 80017b4:	d9801717 	ldw	r6,92(sp)
 80017b8:	01400044 	movi	r5,1
 80017bc:	8002a880 	call	8002a88 <_Unwind_SetGR>
 80017c0:	d9002317 	ldw	r4,140(sp)
 80017c4:	d9401c17 	ldw	r5,112(sp)
 80017c8:	8002ad40 	call	8002ad4 <_Unwind_SetIP>
 80017cc:	010001c4 	movi	r4,7
 80017d0:	d9001715 	stw	r4,92(sp)
 80017d4:	003f2506 	br	800146c <__alt_data_end+0xfc00146c>
 80017d8:	d8c01c17 	ldw	r3,112(sp)
 80017dc:	183fe226 	beq	r3,zero,8001768 <__alt_data_end+0xfc001768>
 80017e0:	00800084 	movi	r2,2
 80017e4:	003f5206 	br	8001530 <__alt_data_end+0xfc001530>
 80017e8:	00c00044 	movi	r3,1
 80017ec:	10ff791e 	bne	r2,r3,80015d4 <__alt_data_end+0xfc0015d4>
 80017f0:	d9002217 	ldw	r4,136(sp)
 80017f4:	80023b00 	call	80023b0 <__cxa_call_terminate>
 80017f8:	d9001d17 	ldw	r4,116(sp)
 80017fc:	20000426 	beq	r4,zero,8001810 <__gxx_personality_sj0+0x410>
 8001800:	d9401e17 	ldw	r5,120(sp)
 8001804:	2800021e 	bne	r5,zero,8001810 <__gxx_personality_sj0+0x410>
 8001808:	d8801f17 	ldw	r2,124(sp)
 800180c:	10001626 	beq	r2,zero,8001868 <__gxx_personality_sj0+0x468>
 8001810:	d8c00317 	ldw	r3,12(sp)
 8001814:	01ce303a 	nor	r7,zero,r7
 8001818:	000d883a 	mov	r6,zero
 800181c:	19c7883a 	add	r3,r3,r7
 8001820:	000b883a 	mov	r5,zero
 8001824:	18800003 	ldbu	r2,0(r3)
 8001828:	18c00044 	addi	r3,r3,1
 800182c:	11001fcc 	andi	r4,r2,127
 8001830:	2148983a 	sll	r4,r4,r5
 8001834:	10803fcc 	andi	r2,r2,255
 8001838:	1080201c 	xori	r2,r2,128
 800183c:	10bfe004 	addi	r2,r2,-128
 8001840:	310cb03a 	or	r6,r6,r4
 8001844:	294001c4 	addi	r5,r5,7
 8001848:	103ff616 	blt	r2,zero,8001824 <__alt_data_end+0xfc001824>
 800184c:	3005003a 	cmpeq	r2,r6,zero
 8001850:	10803fcc 	andi	r2,r2,255
 8001854:	103fb326 	beq	r2,zero,8001724 <__alt_data_end+0xfc001724>
 8001858:	d8800717 	ldw	r2,28(sp)
 800185c:	d8801715 	stw	r2,92(sp)
 8001860:	008000c4 	movi	r2,3
 8001864:	003f3406 	br	8001538 <__alt_data_end+0xfc001538>
 8001868:	d9401d17 	ldw	r5,116(sp)
 800186c:	d9800917 	ldw	r6,36(sp)
 8001870:	00ffffc4 	movi	r3,-1
 8001874:	d809883a 	mov	r4,sp
 8001878:	d8c00b15 	stw	r3,44(sp)
 800187c:	8000f5c0 	call	8000f5c <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl>
 8001880:	1080005c 	xori	r2,r2,1
 8001884:	003ff206 	br	8001850 <__alt_data_end+0xfc001850>
 8001888:	d8801b43 	ldbu	r2,109(sp)
 800188c:	103fb626 	beq	r2,zero,8001768 <__alt_data_end+0xfc001768>
 8001890:	d8001715 	stw	zero,92(sp)
 8001894:	00800084 	movi	r2,2
 8001898:	003f2706 	br	8001538 <__alt_data_end+0xfc001538>
 800189c:	00800184 	movi	r2,6
 80018a0:	d8801715 	stw	r2,92(sp)
 80018a4:	003ef106 	br	800146c <__alt_data_end+0xfc00146c>
 80018a8:	1009883a 	mov	r4,r2
 80018ac:	180b883a 	mov	r5,r3
 80018b0:	d9800904 	addi	r6,sp,36
 80018b4:	8000bd00 	call	8000bd0 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv>
 80018b8:	10803fcc 	andi	r2,r2,255
 80018bc:	103fe61e 	bne	r2,zero,8001858 <__alt_data_end+0xfc001858>
 80018c0:	003f9806 	br	8001724 <__alt_data_end+0xfc001724>
 80018c4:	008200b4 	movhi	r2,2050
 80018c8:	10a32604 	addi	r2,r2,-29544
 80018cc:	d8801d15 	stw	r2,116(sp)
 80018d0:	003f8706 	br	80016f0 <__alt_data_end+0xfc0016f0>
 80018d4:	00c200b4 	movhi	r3,2050
 80018d8:	18e32804 	addi	r3,r3,-29536
 80018dc:	d8c01d15 	stw	r3,116(sp)
 80018e0:	003f8306 	br	80016f0 <__alt_data_end+0xfc0016f0>
 80018e4:	20bff517 	ldw	r2,-44(r4)
 80018e8:	003f7e06 	br	80016e4 <__alt_data_end+0xfc0016e4>
 80018ec:	d9000c17 	ldw	r4,48(sp)
 80018f0:	800222c0 	call	800222c <__cxa_begin_catch>
 80018f4:	8001ed80 	call	8001ed8 <_ZSt9terminatev>
 80018f8:	d8c00b15 	stw	r3,44(sp)
 80018fc:	8001f000 	call	8001f00 <_ZSt10unexpectedv>

08001900 <__cxa_call_unexpected>:
 8001900:	00820034 	movhi	r2,2048
 8001904:	deffe604 	addi	sp,sp,-104
 8001908:	10850004 	addi	r2,r2,5120
 800190c:	d8800d15 	stw	r2,52(sp)
 8001910:	00820074 	movhi	r2,2049
 8001914:	109a5104 	addi	r2,r2,26948
 8001918:	d8800e15 	stw	r2,56(sp)
 800191c:	d8800104 	addi	r2,sp,4
 8001920:	d8800f15 	stw	r2,60(sp)
 8001924:	00820034 	movhi	r2,2048
 8001928:	10866304 	addi	r2,r2,6540
 800192c:	d9001415 	stw	r4,80(sp)
 8001930:	d9000704 	addi	r4,sp,28
 8001934:	dfc01915 	stw	ra,100(sp)
 8001938:	d8801015 	stw	r2,64(sp)
 800193c:	df001815 	stw	fp,96(sp)
 8001940:	dec01115 	stw	sp,68(sp)
 8001944:	8002a280 	call	8002a28 <_Unwind_SjLj_Register>
 8001948:	d9001417 	ldw	r4,80(sp)
 800194c:	800222c0 	call	800222c <__cxa_begin_catch>
 8001950:	d8c01417 	ldw	r3,80(sp)
 8001954:	18bffe17 	ldw	r2,-8(r3)
 8001958:	193ff717 	ldw	r4,-36(r3)
 800195c:	18fffd17 	ldw	r3,-12(r3)
 8001960:	d8800315 	stw	r2,12(sp)
 8001964:	d8c01615 	stw	r3,88(sp)
 8001968:	d8c01417 	ldw	r3,80(sp)
 800196c:	18fffb17 	ldw	r3,-20(r3)
 8001970:	d8c01515 	stw	r3,84(sp)
 8001974:	d8c01417 	ldw	r3,80(sp)
 8001978:	18fff817 	ldw	r3,-32(r3)
 800197c:	d8c01415 	stw	r3,80(sp)
 8001980:	00c00044 	movi	r3,1
 8001984:	d8c00815 	stw	r3,32(sp)
 8001988:	8001ef00 	call	8001ef0 <_ZN10__cxxabiv112__unexpectedEPFvvE>
 800198c:	d8c00917 	ldw	r3,36(sp)
 8001990:	d8800817 	ldw	r2,32(sp)
 8001994:	d8c01715 	stw	r3,92(sp)
 8001998:	10000a26 	beq	r2,zero,80019c4 <__cxa_call_unexpected+0xc4>
 800199c:	10bfffc4 	addi	r2,r2,-1
 80019a0:	10000126 	beq	r2,zero,80019a8 <__cxa_call_unexpected+0xa8>
 80019a4:	003da0fa 	break	3
 80019a8:	d8000815 	stw	zero,32(sp)
 80019ac:	80022e00 	call	80022e0 <__cxa_end_catch>
 80019b0:	80022e00 	call	80022e0 <__cxa_end_catch>
 80019b4:	d9001717 	ldw	r4,92(sp)
 80019b8:	00bfffc4 	movi	r2,-1
 80019bc:	d8800815 	stw	r2,32(sp)
 80019c0:	8002c240 	call	8002c24 <_Unwind_SjLj_Resume>
 80019c4:	d9001717 	ldw	r4,92(sp)
 80019c8:	800222c0 	call	800222c <__cxa_begin_catch>
 80019cc:	8001b340 	call	8001b34 <__cxa_get_globals_fast>
 80019d0:	10800017 	ldw	r2,0(r2)
 80019d4:	10c00b17 	ldw	r3,44(r2)
 80019d8:	18c0004c 	andi	r3,r3,1
 80019dc:	18001e26 	beq	r3,zero,8001a58 <__cxa_call_unexpected+0x158>
 80019e0:	10800017 	ldw	r2,0(r2)
 80019e4:	d8801715 	stw	r2,92(sp)
 80019e8:	d8801517 	ldw	r2,84(sp)
 80019ec:	00802b0e 	bge	zero,r2,8001a9c <__cxa_call_unexpected+0x19c>
 80019f0:	d8c01717 	ldw	r3,92(sp)
 80019f4:	d8800317 	ldw	r2,12(sp)
 80019f8:	d9801617 	ldw	r6,88(sp)
 80019fc:	193ff017 	ldw	r4,-64(r3)
 8001a00:	d9c01517 	ldw	r7,84(sp)
 8001a04:	d8800015 	stw	r2,0(sp)
 8001a08:	180b883a 	mov	r5,r3
 8001a0c:	00800084 	movi	r2,2
 8001a10:	d8800815 	stw	r2,32(sp)
 8001a14:	800108c0 	call	800108c <_ZL28check_compact_exception_specPKSt9type_infoPvPKhij>
 8001a18:	10803fcc 	andi	r2,r2,255
 8001a1c:	10001e1e 	bne	r2,zero,8001a98 <__cxa_call_unexpected+0x198>
 8001a20:	d8800317 	ldw	r2,12(sp)
 8001a24:	d9801617 	ldw	r6,88(sp)
 8001a28:	d9c01517 	ldw	r7,84(sp)
 8001a2c:	01020074 	movhi	r4,2049
 8001a30:	d8800015 	stw	r2,0(sp)
 8001a34:	211b0c04 	addi	r4,r4,27696
 8001a38:	00800084 	movi	r2,2
 8001a3c:	000b883a 	mov	r5,zero
 8001a40:	d8800815 	stw	r2,32(sp)
 8001a44:	800108c0 	call	800108c <_ZL28check_compact_exception_specPKSt9type_infoPvPKhij>
 8001a48:	10803fcc 	andi	r2,r2,255
 8001a4c:	1000051e 	bne	r2,zero,8001a64 <__cxa_call_unexpected+0x164>
 8001a50:	d9001417 	ldw	r4,80(sp)
 8001a54:	8001e180 	call	8001e18 <_ZN10__cxxabiv111__terminateEPFvvE>
 8001a58:	10801004 	addi	r2,r2,64
 8001a5c:	d8801715 	stw	r2,92(sp)
 8001a60:	003fe106 	br	80019e8 <__alt_data_end+0xfc0019e8>
 8001a64:	01000104 	movi	r4,4
 8001a68:	80025c40 	call	80025c4 <__cxa_allocate_exception>
 8001a6c:	00c20074 	movhi	r3,2049
 8001a70:	18db2704 	addi	r3,r3,27804
 8001a74:	01420074 	movhi	r5,2049
 8001a78:	01820034 	movhi	r6,2048
 8001a7c:	10c00015 	stw	r3,0(r2)
 8001a80:	295b0c04 	addi	r5,r5,27696
 8001a84:	00c00084 	movi	r3,2
 8001a88:	3189e104 	addi	r6,r6,10116
 8001a8c:	1009883a 	mov	r4,r2
 8001a90:	d8c00815 	stw	r3,32(sp)
 8001a94:	800244c0 	call	800244c <__cxa_throw>
 8001a98:	80024dc0 	call	80024dc <__cxa_rethrow>
 8001a9c:	d9401617 	ldw	r5,88(sp)
 8001aa0:	00800084 	movi	r2,2
 8001aa4:	0009883a 	mov	r4,zero
 8001aa8:	d9800104 	addi	r6,sp,4
 8001aac:	d8800815 	stw	r2,32(sp)
 8001ab0:	80012cc0 	call	80012cc <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>
 8001ab4:	d8801717 	ldw	r2,92(sp)
 8001ab8:	d9c01517 	ldw	r7,84(sp)
 8001abc:	d9000104 	addi	r4,sp,4
 8001ac0:	117ff017 	ldw	r5,-64(r2)
 8001ac4:	100d883a 	mov	r6,r2
 8001ac8:	8000f5c0 	call	8000f5c <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl>
 8001acc:	10803fcc 	andi	r2,r2,255
 8001ad0:	1000171e 	bne	r2,zero,8001b30 <__cxa_call_unexpected+0x230>
 8001ad4:	d9c01517 	ldw	r7,84(sp)
 8001ad8:	01420074 	movhi	r5,2049
 8001adc:	00800084 	movi	r2,2
 8001ae0:	295b0c04 	addi	r5,r5,27696
 8001ae4:	d9000104 	addi	r4,sp,4
 8001ae8:	000d883a 	mov	r6,zero
 8001aec:	d8800815 	stw	r2,32(sp)
 8001af0:	8000f5c0 	call	8000f5c <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl>
 8001af4:	10803fcc 	andi	r2,r2,255
 8001af8:	103fd526 	beq	r2,zero,8001a50 <__alt_data_end+0xfc001a50>
 8001afc:	01000104 	movi	r4,4
 8001b00:	80025c40 	call	80025c4 <__cxa_allocate_exception>
 8001b04:	00c20074 	movhi	r3,2049
 8001b08:	18db2704 	addi	r3,r3,27804
 8001b0c:	01420074 	movhi	r5,2049
 8001b10:	01820034 	movhi	r6,2048
 8001b14:	10c00015 	stw	r3,0(r2)
 8001b18:	295b0c04 	addi	r5,r5,27696
 8001b1c:	00c00084 	movi	r3,2
 8001b20:	3189e104 	addi	r6,r6,10116
 8001b24:	1009883a 	mov	r4,r2
 8001b28:	d8c00815 	stw	r3,32(sp)
 8001b2c:	800244c0 	call	800244c <__cxa_throw>
 8001b30:	80024dc0 	call	80024dc <__cxa_rethrow>

08001b34 <__cxa_get_globals_fast>:
 8001b34:	008200b4 	movhi	r2,2050
 8001b38:	10aa5a04 	addi	r2,r2,-22168
 8001b3c:	f800283a 	ret

08001b40 <__cxa_get_globals>:
 8001b40:	008200b4 	movhi	r2,2050
 8001b44:	10aa5a04 	addi	r2,r2,-22168
 8001b48:	f800283a 	ret

08001b4c <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv>:
 8001b4c:	20800017 	ldw	r2,0(r4)
 8001b50:	defffa04 	addi	sp,sp,-24
 8001b54:	dc000415 	stw	r16,16(sp)
 8001b58:	10800617 	ldw	r2,24(r2)
 8001b5c:	3021883a 	mov	r16,r6
 8001b60:	31800017 	ldw	r6,0(r6)
 8001b64:	00c00404 	movi	r3,16
 8001b68:	d8c00215 	stw	r3,8(sp)
 8001b6c:	dfc00515 	stw	ra,20(sp)
 8001b70:	d8000015 	stw	zero,0(sp)
 8001b74:	d8000115 	stw	zero,4(sp)
 8001b78:	d8000315 	stw	zero,12(sp)
 8001b7c:	d80f883a 	mov	r7,sp
 8001b80:	103ee83a 	callr	r2
 8001b84:	d8800117 	ldw	r2,4(sp)
 8001b88:	00c00184 	movi	r3,6
 8001b8c:	1080018c 	andi	r2,r2,6
 8001b90:	10c00526 	beq	r2,r3,8001ba8 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv+0x5c>
 8001b94:	0005883a 	mov	r2,zero
 8001b98:	dfc00517 	ldw	ra,20(sp)
 8001b9c:	dc000417 	ldw	r16,16(sp)
 8001ba0:	dec00604 	addi	sp,sp,24
 8001ba4:	f800283a 	ret
 8001ba8:	d8c00017 	ldw	r3,0(sp)
 8001bac:	00800044 	movi	r2,1
 8001bb0:	80c00015 	stw	r3,0(r16)
 8001bb4:	dfc00517 	ldw	ra,20(sp)
 8001bb8:	dc000417 	ldw	r16,16(sp)
 8001bbc:	dec00604 	addi	sp,sp,24
 8001bc0:	f800283a 	ret

08001bc4 <_ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_>:
 8001bc4:	d8800017 	ldw	r2,0(sp)
 8001bc8:	11800226 	beq	r2,r6,8001bd4 <_ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_+0x10>
 8001bcc:	00800044 	movi	r2,1
 8001bd0:	f800283a 	ret
 8001bd4:	00800184 	movi	r2,6
 8001bd8:	f800283a 	ret

08001bdc <_ZN10__cxxabiv117__class_type_infoD1Ev>:
 8001bdc:	00820074 	movhi	r2,2049
 8001be0:	109acd04 	addi	r2,r2,27444
 8001be4:	20800015 	stw	r2,0(r4)
 8001be8:	80025601 	jmpi	8002560 <_ZNSt9type_infoD1Ev>

08001bec <_ZN10__cxxabiv117__class_type_infoD0Ev>:
 8001bec:	defffe04 	addi	sp,sp,-8
 8001bf0:	00820074 	movhi	r2,2049
 8001bf4:	dc000015 	stw	r16,0(sp)
 8001bf8:	dfc00115 	stw	ra,4(sp)
 8001bfc:	109acd04 	addi	r2,r2,27444
 8001c00:	20800015 	stw	r2,0(r4)
 8001c04:	2021883a 	mov	r16,r4
 8001c08:	80025600 	call	8002560 <_ZNSt9type_infoD1Ev>
 8001c0c:	8009883a 	mov	r4,r16
 8001c10:	dfc00117 	ldw	ra,4(sp)
 8001c14:	dc000017 	ldw	r16,0(sp)
 8001c18:	dec00204 	addi	sp,sp,8
 8001c1c:	8001e141 	jmpi	8001e14 <_ZdlPv>

08001c20 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE>:
 8001c20:	21000117 	ldw	r4,4(r4)
 8001c24:	29400117 	ldw	r5,4(r5)
 8001c28:	defffd04 	addi	sp,sp,-12
 8001c2c:	dc400115 	stw	r17,4(sp)
 8001c30:	dc000015 	stw	r16,0(sp)
 8001c34:	dfc00215 	stw	ra,8(sp)
 8001c38:	3023883a 	mov	r17,r6
 8001c3c:	3821883a 	mov	r16,r7
 8001c40:	21400b26 	beq	r4,r5,8001c70 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE+0x50>
 8001c44:	20c00007 	ldb	r3,0(r4)
 8001c48:	00800a84 	movi	r2,42
 8001c4c:	18800226 	beq	r3,r2,8001c58 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE+0x38>
 8001c50:	8003d180 	call	8003d18 <strcmp>
 8001c54:	10000626 	beq	r2,zero,8001c70 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE+0x50>
 8001c58:	0005883a 	mov	r2,zero
 8001c5c:	dfc00217 	ldw	ra,8(sp)
 8001c60:	dc400117 	ldw	r17,4(sp)
 8001c64:	dc000017 	ldw	r16,0(sp)
 8001c68:	dec00304 	addi	sp,sp,12
 8001c6c:	f800283a 	ret
 8001c70:	00800204 	movi	r2,8
 8001c74:	80800315 	stw	r2,12(r16)
 8001c78:	00800184 	movi	r2,6
 8001c7c:	80800115 	stw	r2,4(r16)
 8001c80:	84400015 	stw	r17,0(r16)
 8001c84:	00800044 	movi	r2,1
 8001c88:	003ff406 	br	8001c5c <__alt_data_end+0xfc001c5c>

08001c8c <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj>:
 8001c8c:	20800117 	ldw	r2,4(r4)
 8001c90:	28c00117 	ldw	r3,4(r5)
 8001c94:	10c02926 	beq	r2,r3,8001d3c <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0xb0>
 8001c98:	defffb04 	addi	sp,sp,-20
 8001c9c:	dcc00315 	stw	r19,12(sp)
 8001ca0:	dc800215 	stw	r18,8(sp)
 8001ca4:	dc400115 	stw	r17,4(sp)
 8001ca8:	dc000015 	stw	r16,0(sp)
 8001cac:	dfc00415 	stw	ra,16(sp)
 8001cb0:	2821883a 	mov	r16,r5
 8001cb4:	11400007 	ldb	r5,0(r2)
 8001cb8:	2025883a 	mov	r18,r4
 8001cbc:	01000a84 	movi	r4,42
 8001cc0:	3823883a 	mov	r17,r7
 8001cc4:	3027883a 	mov	r19,r6
 8001cc8:	29000426 	beq	r5,r4,8001cdc <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x50>
 8001ccc:	1009883a 	mov	r4,r2
 8001cd0:	180b883a 	mov	r5,r3
 8001cd4:	8003d180 	call	8003d18 <strcmp>
 8001cd8:	10000a26 	beq	r2,zero,8001d04 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x78>
 8001cdc:	008000c4 	movi	r2,3
 8001ce0:	14400a2e 	bgeu	r2,r17,8001d0c <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x80>
 8001ce4:	0005883a 	mov	r2,zero
 8001ce8:	dfc00417 	ldw	ra,16(sp)
 8001cec:	dcc00317 	ldw	r19,12(sp)
 8001cf0:	dc800217 	ldw	r18,8(sp)
 8001cf4:	dc400117 	ldw	r17,4(sp)
 8001cf8:	dc000017 	ldw	r16,0(sp)
 8001cfc:	dec00504 	addi	sp,sp,20
 8001d00:	f800283a 	ret
 8001d04:	00800044 	movi	r2,1
 8001d08:	003ff706 	br	8001ce8 <__alt_data_end+0xfc001ce8>
 8001d0c:	80800017 	ldw	r2,0(r16)
 8001d10:	8009883a 	mov	r4,r16
 8001d14:	900b883a 	mov	r5,r18
 8001d18:	10800517 	ldw	r2,20(r2)
 8001d1c:	980d883a 	mov	r6,r19
 8001d20:	dfc00417 	ldw	ra,16(sp)
 8001d24:	dcc00317 	ldw	r19,12(sp)
 8001d28:	dc800217 	ldw	r18,8(sp)
 8001d2c:	dc400117 	ldw	r17,4(sp)
 8001d30:	dc000017 	ldw	r16,0(sp)
 8001d34:	dec00504 	addi	sp,sp,20
 8001d38:	1000683a 	jmp	r2
 8001d3c:	00800044 	movi	r2,1
 8001d40:	f800283a 	ret

08001d44 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE>:
 8001d44:	defffb04 	addi	sp,sp,-20
 8001d48:	dc400315 	stw	r17,12(sp)
 8001d4c:	d8800717 	ldw	r2,28(sp)
 8001d50:	dc400517 	ldw	r17,20(sp)
 8001d54:	dc000215 	stw	r16,8(sp)
 8001d58:	dfc00415 	stw	ra,16(sp)
 8001d5c:	24000117 	ldw	r16,4(r4)
 8001d60:	88801026 	beq	r17,r2,8001da4 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x60>
 8001d64:	39400117 	ldw	r5,4(r7)
 8001d68:	81401d26 	beq	r16,r5,8001de0 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x9c>
 8001d6c:	80c00007 	ldb	r3,0(r16)
 8001d70:	00800a84 	movi	r2,42
 8001d74:	18800526 	beq	r3,r2,8001d8c <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x48>
 8001d78:	8009883a 	mov	r4,r16
 8001d7c:	d9800115 	stw	r6,4(sp)
 8001d80:	8003d180 	call	8003d18 <strcmp>
 8001d84:	d9800117 	ldw	r6,4(sp)
 8001d88:	10001526 	beq	r2,zero,8001de0 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x9c>
 8001d8c:	0005883a 	mov	r2,zero
 8001d90:	dfc00417 	ldw	ra,16(sp)
 8001d94:	dc400317 	ldw	r17,12(sp)
 8001d98:	dc000217 	ldw	r16,8(sp)
 8001d9c:	dec00504 	addi	sp,sp,20
 8001da0:	f800283a 	ret
 8001da4:	d8800617 	ldw	r2,24(sp)
 8001da8:	11400117 	ldw	r5,4(r2)
 8001dac:	81401326 	beq	r16,r5,8001dfc <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0xb8>
 8001db0:	80c00007 	ldb	r3,0(r16)
 8001db4:	00800a84 	movi	r2,42
 8001db8:	18801326 	beq	r3,r2,8001e08 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0xc4>
 8001dbc:	8009883a 	mov	r4,r16
 8001dc0:	d9800115 	stw	r6,4(sp)
 8001dc4:	d9c00015 	stw	r7,0(sp)
 8001dc8:	8003d180 	call	8003d18 <strcmp>
 8001dcc:	d9800117 	ldw	r6,4(sp)
 8001dd0:	d9c00017 	ldw	r7,0(sp)
 8001dd4:	10000926 	beq	r2,zero,8001dfc <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0xb8>
 8001dd8:	39400117 	ldw	r5,4(r7)
 8001ddc:	817fe61e 	bne	r16,r5,8001d78 <__alt_data_end+0xfc001d78>
 8001de0:	d8800817 	ldw	r2,32(sp)
 8001de4:	d8c00817 	ldw	r3,32(sp)
 8001de8:	14400015 	stw	r17,0(r2)
 8001dec:	11800115 	stw	r6,4(r2)
 8001df0:	00800044 	movi	r2,1
 8001df4:	18800315 	stw	r2,12(r3)
 8001df8:	003fe406 	br	8001d8c <__alt_data_end+0xfc001d8c>
 8001dfc:	d8800817 	ldw	r2,32(sp)
 8001e00:	11800215 	stw	r6,8(r2)
 8001e04:	003fe106 	br	8001d8c <__alt_data_end+0xfc001d8c>
 8001e08:	38800117 	ldw	r2,4(r7)
 8001e0c:	80bfdf1e 	bne	r16,r2,8001d8c <__alt_data_end+0xfc001d8c>
 8001e10:	003ff306 	br	8001de0 <__alt_data_end+0xfc001de0>

08001e14 <_ZdlPv>:
 8001e14:	8002d6c1 	jmpi	8002d6c <free>

08001e18 <_ZN10__cxxabiv111__terminateEPFvvE>:
 8001e18:	00820034 	movhi	r2,2048
 8001e1c:	deffef04 	addi	sp,sp,-68
 8001e20:	10850004 	addi	r2,r2,5120
 8001e24:	d8800615 	stw	r2,24(sp)
 8001e28:	00820074 	movhi	r2,2049
 8001e2c:	109a5504 	addi	r2,r2,26964
 8001e30:	d8800715 	stw	r2,28(sp)
 8001e34:	00820034 	movhi	r2,2048
 8001e38:	10879c04 	addi	r2,r2,7792
 8001e3c:	d9000d15 	stw	r4,52(sp)
 8001e40:	d809883a 	mov	r4,sp
 8001e44:	d8800915 	stw	r2,36(sp)
 8001e48:	dfc01015 	stw	ra,64(sp)
 8001e4c:	df000f15 	stw	fp,60(sp)
 8001e50:	dec00815 	stw	sp,32(sp)
 8001e54:	dec00a15 	stw	sp,40(sp)
 8001e58:	8002a280 	call	8002a28 <_Unwind_SjLj_Register>
 8001e5c:	00800044 	movi	r2,1
 8001e60:	d8800115 	stw	r2,4(sp)
 8001e64:	d8800d17 	ldw	r2,52(sp)
 8001e68:	103ee83a 	callr	r2
 8001e6c:	8002d400 	call	8002d40 <abort>
 8001e70:	d8c00217 	ldw	r3,8(sp)
 8001e74:	d8800117 	ldw	r2,4(sp)
 8001e78:	d8c00d15 	stw	r3,52(sp)
 8001e7c:	d8c00317 	ldw	r3,12(sp)
 8001e80:	d8c00e15 	stw	r3,56(sp)
 8001e84:	10000b26 	beq	r2,zero,8001eb4 <_ZN10__cxxabiv111__terminateEPFvvE+0x9c>
 8001e88:	10bfffc4 	addi	r2,r2,-1
 8001e8c:	10000126 	beq	r2,zero,8001e94 <_ZN10__cxxabiv111__terminateEPFvvE+0x7c>
 8001e90:	003da0fa 	break	3
 8001e94:	d8000115 	stw	zero,4(sp)
 8001e98:	80022e00 	call	80022e0 <__cxa_end_catch>
 8001e9c:	d8c00e17 	ldw	r3,56(sp)
 8001ea0:	00bfffc4 	movi	r2,-1
 8001ea4:	18800826 	beq	r3,r2,8001ec8 <_ZN10__cxxabiv111__terminateEPFvvE+0xb0>
 8001ea8:	d9000d17 	ldw	r4,52(sp)
 8001eac:	d8800115 	stw	r2,4(sp)
 8001eb0:	8002c240 	call	8002c24 <_Unwind_SjLj_Resume>
 8001eb4:	d9000d17 	ldw	r4,52(sp)
 8001eb8:	800222c0 	call	800222c <__cxa_begin_catch>
 8001ebc:	00800084 	movi	r2,2
 8001ec0:	d8800115 	stw	r2,4(sp)
 8001ec4:	8002d400 	call	8002d40 <abort>
 8001ec8:	d8800e17 	ldw	r2,56(sp)
 8001ecc:	d9000d17 	ldw	r4,52(sp)
 8001ed0:	d8800115 	stw	r2,4(sp)
 8001ed4:	80019000 	call	8001900 <__cxa_call_unexpected>

08001ed8 <_ZSt9terminatev>:
 8001ed8:	008200b4 	movhi	r2,2050
 8001edc:	10a32104 	addi	r2,r2,-29564
 8001ee0:	11000017 	ldw	r4,0(r2)
 8001ee4:	deffff04 	addi	sp,sp,-4
 8001ee8:	dfc00015 	stw	ra,0(sp)
 8001eec:	8001e180 	call	8001e18 <_ZN10__cxxabiv111__terminateEPFvvE>

08001ef0 <_ZN10__cxxabiv112__unexpectedEPFvvE>:
 8001ef0:	deffff04 	addi	sp,sp,-4
 8001ef4:	dfc00015 	stw	ra,0(sp)
 8001ef8:	203ee83a 	callr	r4
 8001efc:	8001ed80 	call	8001ed8 <_ZSt9terminatev>

08001f00 <_ZSt10unexpectedv>:
 8001f00:	008200b4 	movhi	r2,2050
 8001f04:	10a32a04 	addi	r2,r2,-29528
 8001f08:	11000017 	ldw	r4,0(r2)
 8001f0c:	deffff04 	addi	sp,sp,-4
 8001f10:	dfc00015 	stw	ra,0(sp)
 8001f14:	8001ef00 	call	8001ef0 <_ZN10__cxxabiv112__unexpectedEPFvvE>

08001f18 <_ZSt13set_terminatePFvvE>:
 8001f18:	00c200b4 	movhi	r3,2050
 8001f1c:	18e32104 	addi	r3,r3,-29564
 8001f20:	18800017 	ldw	r2,0(r3)
 8001f24:	19000015 	stw	r4,0(r3)
 8001f28:	f800283a 	ret

08001f2c <_ZSt13get_terminatev>:
 8001f2c:	008200b4 	movhi	r2,2050
 8001f30:	10a32104 	addi	r2,r2,-29564
 8001f34:	10800017 	ldw	r2,0(r2)
 8001f38:	f800283a 	ret

08001f3c <_ZSt14set_unexpectedPFvvE>:
 8001f3c:	00c200b4 	movhi	r3,2050
 8001f40:	18e32a04 	addi	r3,r3,-29528
 8001f44:	18800017 	ldw	r2,0(r3)
 8001f48:	19000015 	stw	r4,0(r3)
 8001f4c:	f800283a 	ret

08001f50 <_ZSt14get_unexpectedv>:
 8001f50:	008200b4 	movhi	r2,2050
 8001f54:	10a32a04 	addi	r2,r2,-29528
 8001f58:	10800017 	ldw	r2,0(r2)
 8001f5c:	f800283a 	ret

08001f60 <_ZN10__cxxabiv120__si_class_type_infoD1Ev>:
 8001f60:	00820074 	movhi	r2,2049
 8001f64:	109ae504 	addi	r2,r2,27540
 8001f68:	20800015 	stw	r2,0(r4)
 8001f6c:	8001bdc1 	jmpi	8001bdc <_ZN10__cxxabiv117__class_type_infoD1Ev>

08001f70 <_ZN10__cxxabiv120__si_class_type_infoD0Ev>:
 8001f70:	defffe04 	addi	sp,sp,-8
 8001f74:	00820074 	movhi	r2,2049
 8001f78:	dc000015 	stw	r16,0(sp)
 8001f7c:	dfc00115 	stw	ra,4(sp)
 8001f80:	109ae504 	addi	r2,r2,27540
 8001f84:	20800015 	stw	r2,0(r4)
 8001f88:	2021883a 	mov	r16,r4
 8001f8c:	8001bdc0 	call	8001bdc <_ZN10__cxxabiv117__class_type_infoD1Ev>
 8001f90:	8009883a 	mov	r4,r16
 8001f94:	dfc00117 	ldw	ra,4(sp)
 8001f98:	dc000017 	ldw	r16,0(sp)
 8001f9c:	dec00204 	addi	sp,sp,8
 8001fa0:	8001e141 	jmpi	8001e14 <_ZdlPv>

08001fa4 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE>:
 8001fa4:	defff504 	addi	sp,sp,-44
 8001fa8:	dc000115 	stw	r16,4(sp)
 8001fac:	38800117 	ldw	r2,4(r7)
 8001fb0:	24000117 	ldw	r16,4(r4)
 8001fb4:	ddc00815 	stw	r23,32(sp)
 8001fb8:	dd800715 	stw	r22,28(sp)
 8001fbc:	dd400615 	stw	r21,24(sp)
 8001fc0:	dd000515 	stw	r20,20(sp)
 8001fc4:	dcc00415 	stw	r19,16(sp)
 8001fc8:	dc800315 	stw	r18,12(sp)
 8001fcc:	dc400215 	stw	r17,8(sp)
 8001fd0:	dfc00a15 	stw	ra,40(sp)
 8001fd4:	df000915 	stw	fp,36(sp)
 8001fd8:	202b883a 	mov	r21,r4
 8001fdc:	382d883a 	mov	r22,r7
 8001fe0:	2823883a 	mov	r17,r5
 8001fe4:	dc800b17 	ldw	r18,44(sp)
 8001fe8:	ddc00c17 	ldw	r23,48(sp)
 8001fec:	dd000d17 	ldw	r20,52(sp)
 8001ff0:	dcc00e17 	ldw	r19,56(sp)
 8001ff4:	80801f26 	beq	r16,r2,8002074 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xd0>
 8001ff8:	87000007 	ldb	fp,0(r16)
 8001ffc:	00c00a84 	movi	r3,42
 8002000:	e0c00626 	beq	fp,r3,800201c <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x78>
 8002004:	8009883a 	mov	r4,r16
 8002008:	100b883a 	mov	r5,r2
 800200c:	d9800015 	stw	r6,0(sp)
 8002010:	8003d180 	call	8003d18 <strcmp>
 8002014:	d9800017 	ldw	r6,0(sp)
 8002018:	10001626 	beq	r2,zero,8002074 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xd0>
 800201c:	95002c26 	beq	r18,r20,80020d0 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x12c>
 8002020:	a9000217 	ldw	r4,8(r21)
 8002024:	880b883a 	mov	r5,r17
 8002028:	b00f883a 	mov	r7,r22
 800202c:	20800017 	ldw	r2,0(r4)
 8002030:	dc800b15 	stw	r18,44(sp)
 8002034:	ddc00c15 	stw	r23,48(sp)
 8002038:	dd000d15 	stw	r20,52(sp)
 800203c:	dcc00e15 	stw	r19,56(sp)
 8002040:	10800717 	ldw	r2,28(r2)
 8002044:	dfc00a17 	ldw	ra,40(sp)
 8002048:	df000917 	ldw	fp,36(sp)
 800204c:	ddc00817 	ldw	r23,32(sp)
 8002050:	dd800717 	ldw	r22,28(sp)
 8002054:	dd400617 	ldw	r21,24(sp)
 8002058:	dd000517 	ldw	r20,20(sp)
 800205c:	dcc00417 	ldw	r19,16(sp)
 8002060:	dc800317 	ldw	r18,12(sp)
 8002064:	dc400217 	ldw	r17,8(sp)
 8002068:	dc000117 	ldw	r16,4(sp)
 800206c:	dec00b04 	addi	sp,sp,44
 8002070:	1000683a 	jmp	r2
 8002074:	9c800015 	stw	r18,0(r19)
 8002078:	99800115 	stw	r6,4(r19)
 800207c:	88001116 	blt	r17,zero,80020c4 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x120>
 8002080:	9463883a 	add	r17,r18,r17
 8002084:	a4401d26 	beq	r20,r17,80020fc <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x158>
 8002088:	00800044 	movi	r2,1
 800208c:	98800315 	stw	r2,12(r19)
 8002090:	0005883a 	mov	r2,zero
 8002094:	dfc00a17 	ldw	ra,40(sp)
 8002098:	df000917 	ldw	fp,36(sp)
 800209c:	ddc00817 	ldw	r23,32(sp)
 80020a0:	dd800717 	ldw	r22,28(sp)
 80020a4:	dd400617 	ldw	r21,24(sp)
 80020a8:	dd000517 	ldw	r20,20(sp)
 80020ac:	dcc00417 	ldw	r19,16(sp)
 80020b0:	dc800317 	ldw	r18,12(sp)
 80020b4:	dc400217 	ldw	r17,8(sp)
 80020b8:	dc000117 	ldw	r16,4(sp)
 80020bc:	dec00b04 	addi	sp,sp,44
 80020c0:	f800283a 	ret
 80020c4:	00bfff84 	movi	r2,-2
 80020c8:	88bff11e 	bne	r17,r2,8002090 <__alt_data_end+0xfc002090>
 80020cc:	003fee06 	br	8002088 <__alt_data_end+0xfc002088>
 80020d0:	b9400117 	ldw	r5,4(r23)
 80020d4:	81400726 	beq	r16,r5,80020f4 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x150>
 80020d8:	00800a84 	movi	r2,42
 80020dc:	e0bfd026 	beq	fp,r2,8002020 <__alt_data_end+0xfc002020>
 80020e0:	8009883a 	mov	r4,r16
 80020e4:	d9800015 	stw	r6,0(sp)
 80020e8:	8003d180 	call	8003d18 <strcmp>
 80020ec:	d9800017 	ldw	r6,0(sp)
 80020f0:	103fcb1e 	bne	r2,zero,8002020 <__alt_data_end+0xfc002020>
 80020f4:	99800215 	stw	r6,8(r19)
 80020f8:	003fe506 	br	8002090 <__alt_data_end+0xfc002090>
 80020fc:	00800184 	movi	r2,6
 8002100:	003fe206 	br	800208c <__alt_data_end+0xfc00208c>

08002104 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_>:
 8002104:	defffa04 	addi	sp,sp,-24
 8002108:	dc000215 	stw	r16,8(sp)
 800210c:	dc000617 	ldw	r16,24(sp)
 8002110:	dc800415 	stw	r18,16(sp)
 8002114:	dc400315 	stw	r17,12(sp)
 8002118:	dfc00515 	stw	ra,20(sp)
 800211c:	2023883a 	mov	r17,r4
 8002120:	2825883a 	mov	r18,r5
 8002124:	81800b26 	beq	r16,r6,8002154 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x50>
 8002128:	89000217 	ldw	r4,8(r17)
 800212c:	900b883a 	mov	r5,r18
 8002130:	20800017 	ldw	r2,0(r4)
 8002134:	dc000615 	stw	r16,24(sp)
 8002138:	10800817 	ldw	r2,32(r2)
 800213c:	dfc00517 	ldw	ra,20(sp)
 8002140:	dc800417 	ldw	r18,16(sp)
 8002144:	dc400317 	ldw	r17,12(sp)
 8002148:	dc000217 	ldw	r16,8(sp)
 800214c:	dec00604 	addi	sp,sp,24
 8002150:	1000683a 	jmp	r2
 8002154:	21000117 	ldw	r4,4(r4)
 8002158:	39400117 	ldw	r5,4(r7)
 800215c:	21400926 	beq	r4,r5,8002184 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x80>
 8002160:	20c00007 	ldb	r3,0(r4)
 8002164:	00800a84 	movi	r2,42
 8002168:	18bfef26 	beq	r3,r2,8002128 <__alt_data_end+0xfc002128>
 800216c:	d9800015 	stw	r6,0(sp)
 8002170:	d9c00115 	stw	r7,4(sp)
 8002174:	8003d180 	call	8003d18 <strcmp>
 8002178:	d9800017 	ldw	r6,0(sp)
 800217c:	d9c00117 	ldw	r7,4(sp)
 8002180:	103fe91e 	bne	r2,zero,8002128 <__alt_data_end+0xfc002128>
 8002184:	00800184 	movi	r2,6
 8002188:	dfc00517 	ldw	ra,20(sp)
 800218c:	dc800417 	ldw	r18,16(sp)
 8002190:	dc400317 	ldw	r17,12(sp)
 8002194:	dc000217 	ldw	r16,8(sp)
 8002198:	dec00604 	addi	sp,sp,24
 800219c:	f800283a 	ret

080021a0 <_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE>:
 80021a0:	defffb04 	addi	sp,sp,-20
 80021a4:	dcc00315 	stw	r19,12(sp)
 80021a8:	dc800215 	stw	r18,8(sp)
 80021ac:	dc400115 	stw	r17,4(sp)
 80021b0:	dc000015 	stw	r16,0(sp)
 80021b4:	dfc00415 	stw	ra,16(sp)
 80021b8:	2027883a 	mov	r19,r4
 80021bc:	2825883a 	mov	r18,r5
 80021c0:	3023883a 	mov	r17,r6
 80021c4:	3821883a 	mov	r16,r7
 80021c8:	8001c200 	call	8001c20 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE>
 80021cc:	10c03fcc 	andi	r3,r2,255
 80021d0:	18000726 	beq	r3,zero,80021f0 <_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x50>
 80021d4:	dfc00417 	ldw	ra,16(sp)
 80021d8:	dcc00317 	ldw	r19,12(sp)
 80021dc:	dc800217 	ldw	r18,8(sp)
 80021e0:	dc400117 	ldw	r17,4(sp)
 80021e4:	dc000017 	ldw	r16,0(sp)
 80021e8:	dec00504 	addi	sp,sp,20
 80021ec:	f800283a 	ret
 80021f0:	99000217 	ldw	r4,8(r19)
 80021f4:	900b883a 	mov	r5,r18
 80021f8:	880d883a 	mov	r6,r17
 80021fc:	20800017 	ldw	r2,0(r4)
 8002200:	800f883a 	mov	r7,r16
 8002204:	10800617 	ldw	r2,24(r2)
 8002208:	dfc00417 	ldw	ra,16(sp)
 800220c:	dcc00317 	ldw	r19,12(sp)
 8002210:	dc800217 	ldw	r18,8(sp)
 8002214:	dc400117 	ldw	r17,4(sp)
 8002218:	dc000017 	ldw	r16,0(sp)
 800221c:	dec00504 	addi	sp,sp,20
 8002220:	1000683a 	jmp	r2

08002224 <__cxa_get_exception_ptr>:
 8002224:	20bfff17 	ldw	r2,-4(r4)
 8002228:	f800283a 	ret

0800222c <__cxa_begin_catch>:
 800222c:	defffe04 	addi	sp,sp,-8
 8002230:	dc000015 	stw	r16,0(sp)
 8002234:	dfc00115 	stw	ra,4(sp)
 8002238:	2021883a 	mov	r16,r4
 800223c:	8001b400 	call	8001b40 <__cxa_get_globals>
 8002240:	81000017 	ldw	r4,0(r16)
 8002244:	80c00117 	ldw	r3,4(r16)
 8002248:	01af3574 	movhi	r6,48341
 800224c:	31b54004 	addi	r6,r6,-11008
 8002250:	016e2cb4 	movhi	r5,47282
 8002254:	296aaf04 	addi	r5,r5,-21828
 8002258:	218d883a 	add	r6,r4,r6
 800225c:	3109803a 	cmpltu	r4,r6,r4
 8002260:	1947883a 	add	r3,r3,r5
 8002264:	20c7883a 	add	r3,r4,r3
 8002268:	817ff504 	addi	r5,r16,-44
 800226c:	11000017 	ldw	r4,0(r2)
 8002270:	18000726 	beq	r3,zero,8002290 <__cxa_begin_catch+0x64>
 8002274:	2000191e 	bne	r4,zero,80022dc <__cxa_begin_catch+0xb0>
 8002278:	11400015 	stw	r5,0(r2)
 800227c:	0005883a 	mov	r2,zero
 8002280:	dfc00117 	ldw	ra,4(sp)
 8002284:	dc000017 	ldw	r16,0(sp)
 8002288:	dec00204 	addi	sp,sp,8
 800228c:	f800283a 	ret
 8002290:	01c00044 	movi	r7,1
 8002294:	39bff736 	bltu	r7,r6,8002274 <__alt_data_end+0xfc002274>
 8002298:	80fffa17 	ldw	r3,-24(r16)
 800229c:	18000d16 	blt	r3,zero,80022d4 <__cxa_begin_catch+0xa8>
 80022a0:	18c00044 	addi	r3,r3,1
 80022a4:	11800117 	ldw	r6,4(r2)
 80022a8:	80fffa15 	stw	r3,-24(r16)
 80022ac:	30ffffc4 	addi	r3,r6,-1
 80022b0:	10c00115 	stw	r3,4(r2)
 80022b4:	21400226 	beq	r4,r5,80022c0 <__cxa_begin_catch+0x94>
 80022b8:	813ff915 	stw	r4,-28(r16)
 80022bc:	11400015 	stw	r5,0(r2)
 80022c0:	80bfff17 	ldw	r2,-4(r16)
 80022c4:	dfc00117 	ldw	ra,4(sp)
 80022c8:	dc000017 	ldw	r16,0(sp)
 80022cc:	dec00204 	addi	sp,sp,8
 80022d0:	f800283a 	ret
 80022d4:	38c7c83a 	sub	r3,r7,r3
 80022d8:	003ff206 	br	80022a4 <__alt_data_end+0xfc0022a4>
 80022dc:	8001ed80 	call	8001ed8 <_ZSt9terminatev>

080022e0 <__cxa_end_catch>:
 80022e0:	deffff04 	addi	sp,sp,-4
 80022e4:	dfc00015 	stw	ra,0(sp)
 80022e8:	8001b340 	call	8001b34 <__cxa_get_globals_fast>
 80022ec:	11000017 	ldw	r4,0(r2)
 80022f0:	20001326 	beq	r4,zero,8002340 <__cxa_end_catch+0x60>
 80022f4:	21400b17 	ldw	r5,44(r4)
 80022f8:	01ef3574 	movhi	r7,48341
 80022fc:	39f54004 	addi	r7,r7,-11008
 8002300:	29cf883a 	add	r7,r5,r7
 8002304:	20c00c17 	ldw	r3,48(r4)
 8002308:	394d803a 	cmpltu	r6,r7,r5
 800230c:	016e2cb4 	movhi	r5,47282
 8002310:	296aaf04 	addi	r5,r5,-21828
 8002314:	1947883a 	add	r3,r3,r5
 8002318:	30c7883a 	add	r3,r6,r3
 800231c:	18000b1e 	bne	r3,zero,800234c <__cxa_end_catch+0x6c>
 8002320:	00c00044 	movi	r3,1
 8002324:	19c00936 	bltu	r3,r7,800234c <__cxa_end_catch+0x6c>
 8002328:	20c00517 	ldw	r3,20(r4)
 800232c:	18000c16 	blt	r3,zero,8002360 <__cxa_end_catch+0x80>
 8002330:	197fffc4 	addi	r5,r3,-1
 8002334:	28000f26 	beq	r5,zero,8002374 <__cxa_end_catch+0x94>
 8002338:	18001426 	beq	r3,zero,800238c <__cxa_end_catch+0xac>
 800233c:	21400515 	stw	r5,20(r4)
 8002340:	dfc00017 	ldw	ra,0(sp)
 8002344:	dec00104 	addi	sp,sp,4
 8002348:	f800283a 	ret
 800234c:	21000b04 	addi	r4,r4,44
 8002350:	10000015 	stw	zero,0(r2)
 8002354:	dfc00017 	ldw	ra,0(sp)
 8002358:	dec00104 	addi	sp,sp,4
 800235c:	8002cb41 	jmpi	8002cb4 <_Unwind_DeleteException>
 8002360:	19400044 	addi	r5,r3,1
 8002364:	283ff51e 	bne	r5,zero,800233c <__alt_data_end+0xfc00233c>
 8002368:	20c00417 	ldw	r3,16(r4)
 800236c:	10c00015 	stw	r3,0(r2)
 8002370:	003ff206 	br	800233c <__alt_data_end+0xfc00233c>
 8002374:	20c00417 	ldw	r3,16(r4)
 8002378:	21000b04 	addi	r4,r4,44
 800237c:	10c00015 	stw	r3,0(r2)
 8002380:	dfc00017 	ldw	ra,0(sp)
 8002384:	dec00104 	addi	sp,sp,4
 8002388:	8002cb41 	jmpi	8002cb4 <_Unwind_DeleteException>
 800238c:	8001ed80 	call	8001ed8 <_ZSt9terminatev>

08002390 <_ZSt18uncaught_exceptionv>:
 8002390:	deffff04 	addi	sp,sp,-4
 8002394:	dfc00015 	stw	ra,0(sp)
 8002398:	8001b400 	call	8001b40 <__cxa_get_globals>
 800239c:	10800117 	ldw	r2,4(r2)
 80023a0:	1004c03a 	cmpne	r2,r2,zero
 80023a4:	dfc00017 	ldw	ra,0(sp)
 80023a8:	dec00104 	addi	sp,sp,4
 80023ac:	f800283a 	ret

080023b0 <__cxa_call_terminate>:
 80023b0:	defffe04 	addi	sp,sp,-8
 80023b4:	dc000015 	stw	r16,0(sp)
 80023b8:	dfc00115 	stw	ra,4(sp)
 80023bc:	2021883a 	mov	r16,r4
 80023c0:	20000c26 	beq	r4,zero,80023f4 <__cxa_call_terminate+0x44>
 80023c4:	800222c0 	call	800222c <__cxa_begin_catch>
 80023c8:	80c00017 	ldw	r3,0(r16)
 80023cc:	012f3574 	movhi	r4,48341
 80023d0:	21354004 	addi	r4,r4,-11008
 80023d4:	1909883a 	add	r4,r3,r4
 80023d8:	80800117 	ldw	r2,4(r16)
 80023dc:	20cb803a 	cmpltu	r5,r4,r3
 80023e0:	00ee2cb4 	movhi	r3,47282
 80023e4:	18eaaf04 	addi	r3,r3,-21828
 80023e8:	10c5883a 	add	r2,r2,r3
 80023ec:	2885883a 	add	r2,r5,r2
 80023f0:	10000126 	beq	r2,zero,80023f8 <__cxa_call_terminate+0x48>
 80023f4:	8001ed80 	call	8001ed8 <_ZSt9terminatev>
 80023f8:	00800044 	movi	r2,1
 80023fc:	113ffd36 	bltu	r2,r4,80023f4 <__alt_data_end+0xfc0023f4>
 8002400:	813ff817 	ldw	r4,-32(r16)
 8002404:	8001e180 	call	8001e18 <_ZN10__cxxabiv111__terminateEPFvvE>

08002408 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception>:
 8002408:	defffe04 	addi	sp,sp,-8
 800240c:	dfc00115 	stw	ra,4(sp)
 8002410:	dc000015 	stw	r16,0(sp)
 8002414:	00800044 	movi	r2,1
 8002418:	11000a36 	bltu	r2,r4,8002444 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception+0x3c>
 800241c:	28bff617 	ldw	r2,-40(r5)
 8002420:	2c000504 	addi	r16,r5,20
 8002424:	10000226 	beq	r2,zero,8002430 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception+0x28>
 8002428:	8009883a 	mov	r4,r16
 800242c:	103ee83a 	callr	r2
 8002430:	8009883a 	mov	r4,r16
 8002434:	dfc00117 	ldw	ra,4(sp)
 8002438:	dc000017 	ldw	r16,0(sp)
 800243c:	dec00204 	addi	sp,sp,8
 8002440:	80026681 	jmpi	8002668 <__cxa_free_exception>
 8002444:	293ff817 	ldw	r4,-32(r5)
 8002448:	8001e180 	call	8001e18 <_ZN10__cxxabiv111__terminateEPFvvE>

0800244c <__cxa_throw>:
 800244c:	defffb04 	addi	sp,sp,-20
 8002450:	dfc00415 	stw	ra,16(sp)
 8002454:	dcc00315 	stw	r19,12(sp)
 8002458:	dc800215 	stw	r18,8(sp)
 800245c:	2827883a 	mov	r19,r5
 8002460:	3025883a 	mov	r18,r6
 8002464:	dc400115 	stw	r17,4(sp)
 8002468:	dc000015 	stw	r16,0(sp)
 800246c:	2021883a 	mov	r16,r4
 8002470:	8001b400 	call	8001b40 <__cxa_get_globals>
 8002474:	10c00117 	ldw	r3,4(r2)
 8002478:	847ffb04 	addi	r17,r16,-20
 800247c:	18c00044 	addi	r3,r3,1
 8002480:	10c00115 	stw	r3,4(r2)
 8002484:	00800044 	movi	r2,1
 8002488:	80bfef15 	stw	r2,-68(r16)
 800248c:	84fff015 	stw	r19,-64(r16)
 8002490:	84bff115 	stw	r18,-60(r16)
 8002494:	8001f500 	call	8001f50 <_ZSt14get_unexpectedv>
 8002498:	80bff215 	stw	r2,-56(r16)
 800249c:	8001f2c0 	call	8001f2c <_ZSt13get_terminatev>
 80024a0:	80bff315 	stw	r2,-52(r16)
 80024a4:	0090caf4 	movhi	r2,17195
 80024a8:	108ac004 	addi	r2,r2,11008
 80024ac:	80bffb15 	stw	r2,-20(r16)
 80024b0:	0091d3b4 	movhi	r2,18254
 80024b4:	109550c4 	addi	r2,r2,21827
 80024b8:	80bffc15 	stw	r2,-16(r16)
 80024bc:	00820034 	movhi	r2,2048
 80024c0:	10890204 	addi	r2,r2,9224
 80024c4:	8809883a 	mov	r4,r17
 80024c8:	80bffd15 	stw	r2,-12(r16)
 80024cc:	8002b100 	call	8002b10 <_Unwind_SjLj_RaiseException>
 80024d0:	8809883a 	mov	r4,r17
 80024d4:	800222c0 	call	800222c <__cxa_begin_catch>
 80024d8:	8001ed80 	call	8001ed8 <_ZSt9terminatev>

080024dc <__cxa_rethrow>:
 80024dc:	defffe04 	addi	sp,sp,-8
 80024e0:	dfc00115 	stw	ra,4(sp)
 80024e4:	dc000015 	stw	r16,0(sp)
 80024e8:	8001b400 	call	8001b40 <__cxa_get_globals>
 80024ec:	10c00117 	ldw	r3,4(r2)
 80024f0:	11000017 	ldw	r4,0(r2)
 80024f4:	18c00044 	addi	r3,r3,1
 80024f8:	10c00115 	stw	r3,4(r2)
 80024fc:	20001126 	beq	r4,zero,8002544 <__cxa_rethrow+0x68>
 8002500:	21400b17 	ldw	r5,44(r4)
 8002504:	01ef3574 	movhi	r7,48341
 8002508:	39f54004 	addi	r7,r7,-11008
 800250c:	29cf883a 	add	r7,r5,r7
 8002510:	20c00c17 	ldw	r3,48(r4)
 8002514:	394d803a 	cmpltu	r6,r7,r5
 8002518:	016e2cb4 	movhi	r5,47282
 800251c:	296aaf04 	addi	r5,r5,-21828
 8002520:	1947883a 	add	r3,r3,r5
 8002524:	30c7883a 	add	r3,r6,r3
 8002528:	18000726 	beq	r3,zero,8002548 <__cxa_rethrow+0x6c>
 800252c:	10000015 	stw	zero,0(r2)
 8002530:	24000b04 	addi	r16,r4,44
 8002534:	8009883a 	mov	r4,r16
 8002538:	8002c680 	call	8002c68 <_Unwind_SjLj_Resume_or_Rethrow>
 800253c:	8009883a 	mov	r4,r16
 8002540:	800222c0 	call	800222c <__cxa_begin_catch>
 8002544:	8001ed80 	call	8001ed8 <_ZSt9terminatev>
 8002548:	00c00044 	movi	r3,1
 800254c:	19fff736 	bltu	r3,r7,800252c <__alt_data_end+0xfc00252c>
 8002550:	20800517 	ldw	r2,20(r4)
 8002554:	0085c83a 	sub	r2,zero,r2
 8002558:	20800515 	stw	r2,20(r4)
 800255c:	003ff406 	br	8002530 <__alt_data_end+0xfc002530>

08002560 <_ZNSt9type_infoD1Ev>:
 8002560:	f800283a 	ret

08002564 <_ZNKSt9type_info14__is_pointer_pEv>:
 8002564:	0005883a 	mov	r2,zero
 8002568:	f800283a 	ret

0800256c <_ZNKSt9type_info15__is_function_pEv>:
 800256c:	0005883a 	mov	r2,zero
 8002570:	f800283a 	ret

08002574 <_ZNKSt9type_info11__do_upcastEPKN10__cxxabiv117__class_type_infoEPPv>:
 8002574:	0005883a 	mov	r2,zero
 8002578:	f800283a 	ret

0800257c <_ZNSt9type_infoD0Ev>:
 800257c:	8001e141 	jmpi	8001e14 <_ZdlPv>

08002580 <_ZNKSt9type_info10__do_catchEPKS_PPvj>:
 8002580:	21000117 	ldw	r4,4(r4)
 8002584:	29400117 	ldw	r5,4(r5)
 8002588:	21400c26 	beq	r4,r5,80025bc <_ZNKSt9type_info10__do_catchEPKS_PPvj+0x3c>
 800258c:	20c00007 	ldb	r3,0(r4)
 8002590:	00800a84 	movi	r2,42
 8002594:	18800726 	beq	r3,r2,80025b4 <_ZNKSt9type_info10__do_catchEPKS_PPvj+0x34>
 8002598:	deffff04 	addi	sp,sp,-4
 800259c:	dfc00015 	stw	ra,0(sp)
 80025a0:	8003d180 	call	8003d18 <strcmp>
 80025a4:	1005003a 	cmpeq	r2,r2,zero
 80025a8:	dfc00017 	ldw	ra,0(sp)
 80025ac:	dec00104 	addi	sp,sp,4
 80025b0:	f800283a 	ret
 80025b4:	0005883a 	mov	r2,zero
 80025b8:	f800283a 	ret
 80025bc:	00800044 	movi	r2,1
 80025c0:	f800283a 	ret

080025c4 <__cxa_allocate_exception>:
 80025c4:	defffd04 	addi	sp,sp,-12
 80025c8:	dc400115 	stw	r17,4(sp)
 80025cc:	24401104 	addi	r17,r4,68
 80025d0:	8809883a 	mov	r4,r17
 80025d4:	dc000015 	stw	r16,0(sp)
 80025d8:	dfc00215 	stw	ra,8(sp)
 80025dc:	8002d580 	call	8002d58 <malloc>
 80025e0:	1021883a 	mov	r16,r2
 80025e4:	10000a26 	beq	r2,zero,8002610 <__cxa_allocate_exception+0x4c>
 80025e8:	8009883a 	mov	r4,r16
 80025ec:	000b883a 	mov	r5,zero
 80025f0:	01801104 	movi	r6,68
 80025f4:	80035280 	call	8003528 <memset>
 80025f8:	80801104 	addi	r2,r16,68
 80025fc:	dfc00217 	ldw	ra,8(sp)
 8002600:	dc400117 	ldw	r17,4(sp)
 8002604:	dc000017 	ldw	r16,0(sp)
 8002608:	dec00304 	addi	sp,sp,12
 800260c:	f800283a 	ret
 8002610:	014200b4 	movhi	r5,2050
 8002614:	296a5d04 	addi	r5,r5,-22156
 8002618:	00808004 	movi	r2,512
 800261c:	29800017 	ldw	r6,0(r5)
 8002620:	14400736 	bltu	r2,r17,8002640 <__cxa_allocate_exception+0x7c>
 8002624:	3005883a 	mov	r2,r6
 8002628:	01000104 	movi	r4,4
 800262c:	10c0004c 	andi	r3,r2,1
 8002630:	18000426 	beq	r3,zero,8002644 <__cxa_allocate_exception+0x80>
 8002634:	84000044 	addi	r16,r16,1
 8002638:	1004d07a 	srli	r2,r2,1
 800263c:	813ffb1e 	bne	r16,r4,800262c <__alt_data_end+0xfc00262c>
 8002640:	8001ed80 	call	8001ed8 <_ZSt9terminatev>
 8002644:	00800044 	movi	r2,1
 8002648:	1404983a 	sll	r2,r2,r16
 800264c:	8020927a 	slli	r16,r16,9
 8002650:	118cb03a 	or	r6,r2,r6
 8002654:	008200b4 	movhi	r2,2050
 8002658:	10aaad04 	addi	r2,r2,-21836
 800265c:	29800015 	stw	r6,0(r5)
 8002660:	80a1883a 	add	r16,r16,r2
 8002664:	003fe006 	br	80025e8 <__alt_data_end+0xfc0025e8>

08002668 <__cxa_free_exception>:
 8002668:	008200b4 	movhi	r2,2050
 800266c:	10aaad04 	addi	r2,r2,-21836
 8002670:	20800236 	bltu	r4,r2,800267c <__cxa_free_exception+0x14>
 8002674:	10c20004 	addi	r3,r2,2048
 8002678:	20c00236 	bltu	r4,r3,8002684 <__cxa_free_exception+0x1c>
 800267c:	213fef04 	addi	r4,r4,-68
 8002680:	8002d6c1 	jmpi	8002d6c <free>
 8002684:	2089c83a 	sub	r4,r4,r2
 8002688:	2008d27a 	srli	r4,r4,9
 800268c:	014200b4 	movhi	r5,2050
 8002690:	296a5d04 	addi	r5,r5,-22156
 8002694:	00ffff84 	movi	r3,-2
 8002698:	28800017 	ldw	r2,0(r5)
 800269c:	1908183a 	rol	r4,r3,r4
 80026a0:	2088703a 	and	r4,r4,r2
 80026a4:	29000015 	stw	r4,0(r5)
 80026a8:	f800283a 	ret

080026ac <__cxa_allocate_dependent_exception>:
 80026ac:	defffe04 	addi	sp,sp,-8
 80026b0:	01001004 	movi	r4,64
 80026b4:	dc000015 	stw	r16,0(sp)
 80026b8:	dfc00115 	stw	ra,4(sp)
 80026bc:	8002d580 	call	8002d58 <malloc>
 80026c0:	1021883a 	mov	r16,r2
 80026c4:	10000926 	beq	r2,zero,80026ec <__cxa_allocate_dependent_exception+0x40>
 80026c8:	8009883a 	mov	r4,r16
 80026cc:	000b883a 	mov	r5,zero
 80026d0:	01801004 	movi	r6,64
 80026d4:	80035280 	call	8003528 <memset>
 80026d8:	8005883a 	mov	r2,r16
 80026dc:	dfc00117 	ldw	ra,4(sp)
 80026e0:	dc000017 	ldw	r16,0(sp)
 80026e4:	dec00204 	addi	sp,sp,8
 80026e8:	f800283a 	ret
 80026ec:	01c200b4 	movhi	r7,2050
 80026f0:	39ea5c04 	addi	r7,r7,-22160
 80026f4:	39800017 	ldw	r6,0(r7)
 80026f8:	0005883a 	mov	r2,zero
 80026fc:	01400104 	movi	r5,4
 8002700:	3007883a 	mov	r3,r6
 8002704:	1900004c 	andi	r4,r3,1
 8002708:	20000426 	beq	r4,zero,800271c <__cxa_allocate_dependent_exception+0x70>
 800270c:	10800044 	addi	r2,r2,1
 8002710:	1806d07a 	srli	r3,r3,1
 8002714:	117ffb1e 	bne	r2,r5,8002704 <__alt_data_end+0xfc002704>
 8002718:	8001ed80 	call	8001ed8 <_ZSt9terminatev>
 800271c:	00c00044 	movi	r3,1
 8002720:	1886983a 	sll	r3,r3,r2
 8002724:	100491ba 	slli	r2,r2,6
 8002728:	040200b4 	movhi	r16,2050
 800272c:	198cb03a 	or	r6,r3,r6
 8002730:	842a6d04 	addi	r16,r16,-22092
 8002734:	39800015 	stw	r6,0(r7)
 8002738:	1421883a 	add	r16,r2,r16
 800273c:	003fe206 	br	80026c8 <__alt_data_end+0xfc0026c8>

08002740 <__cxa_free_dependent_exception>:
 8002740:	008200b4 	movhi	r2,2050
 8002744:	10aa6d04 	addi	r2,r2,-22092
 8002748:	20800236 	bltu	r4,r2,8002754 <__cxa_free_dependent_exception+0x14>
 800274c:	10c04004 	addi	r3,r2,256
 8002750:	20c00136 	bltu	r4,r3,8002758 <__cxa_free_dependent_exception+0x18>
 8002754:	8002d6c1 	jmpi	8002d6c <free>
 8002758:	2089c83a 	sub	r4,r4,r2
 800275c:	2008d1ba 	srli	r4,r4,6
 8002760:	014200b4 	movhi	r5,2050
 8002764:	296a5c04 	addi	r5,r5,-22160
 8002768:	00ffff84 	movi	r3,-2
 800276c:	28800017 	ldw	r2,0(r5)
 8002770:	1908183a 	rol	r4,r3,r4
 8002774:	2088703a 	and	r4,r4,r2
 8002778:	29000015 	stw	r4,0(r5)
 800277c:	f800283a 	ret

08002780 <_ZNSt9exceptionD1Ev>:
 8002780:	f800283a 	ret

08002784 <_ZNSt13bad_exceptionD1Ev>:
 8002784:	f800283a 	ret

08002788 <_ZNKSt9exception4whatEv>:
 8002788:	00820074 	movhi	r2,2049
 800278c:	109afa04 	addi	r2,r2,27624
 8002790:	f800283a 	ret

08002794 <_ZNKSt13bad_exception4whatEv>:
 8002794:	00820074 	movhi	r2,2049
 8002798:	109afe04 	addi	r2,r2,27640
 800279c:	f800283a 	ret

080027a0 <_ZNSt9exceptionD0Ev>:
 80027a0:	8001e141 	jmpi	8001e14 <_ZdlPv>

080027a4 <_ZNSt13bad_exceptionD0Ev>:
 80027a4:	8001e141 	jmpi	8001e14 <_ZdlPv>

080027a8 <_ZN10__cxxabiv115__forced_unwindD1Ev>:
 80027a8:	f800283a 	ret

080027ac <_ZN10__cxxabiv115__forced_unwindD0Ev>:
 80027ac:	8001e141 	jmpi	8001e14 <_ZdlPv>

080027b0 <_ZN10__cxxabiv119__foreign_exceptionD1Ev>:
 80027b0:	f800283a 	ret

080027b4 <_ZN10__cxxabiv119__foreign_exceptionD0Ev>:
 80027b4:	8001e141 	jmpi	8001e14 <_ZdlPv>

080027b8 <__cxa_pure_virtual>:
 80027b8:	01420074 	movhi	r5,2049
 80027bc:	deffff04 	addi	sp,sp,-4
 80027c0:	295b3404 	addi	r5,r5,27856
 80027c4:	01000084 	movi	r4,2
 80027c8:	018006c4 	movi	r6,27
 80027cc:	dfc00015 	stw	ra,0(sp)
 80027d0:	8013b600 	call	8013b60 <write>
 80027d4:	8001ed80 	call	8001ed8 <_ZSt9terminatev>

080027d8 <__cxa_deleted_virtual>:
 80027d8:	01420074 	movhi	r5,2049
 80027dc:	deffff04 	addi	sp,sp,-4
 80027e0:	295b3b04 	addi	r5,r5,27884
 80027e4:	01000084 	movi	r4,2
 80027e8:	01800784 	movi	r6,30
 80027ec:	dfc00015 	stw	ra,0(sp)
 80027f0:	8013b600 	call	8013b60 <write>
 80027f4:	8001ed80 	call	8001ed8 <_ZSt9terminatev>

080027f8 <__mulsi3>:
 80027f8:	0005883a 	mov	r2,zero
 80027fc:	20000726 	beq	r4,zero,800281c <__mulsi3+0x24>
 8002800:	20c0004c 	andi	r3,r4,1
 8002804:	2008d07a 	srli	r4,r4,1
 8002808:	18000126 	beq	r3,zero,8002810 <__mulsi3+0x18>
 800280c:	1145883a 	add	r2,r2,r5
 8002810:	294b883a 	add	r5,r5,r5
 8002814:	203ffa1e 	bne	r4,zero,8002800 <__alt_data_end+0xfc002800>
 8002818:	f800283a 	ret
 800281c:	f800283a 	ret

08002820 <_Unwind_ForcedUnwind_Phase2>:
 8002820:	defff404 	addi	sp,sp,-48
 8002824:	dd800915 	stw	r22,36(sp)
 8002828:	058200b4 	movhi	r22,2050
 800282c:	ddc00a15 	stw	r23,40(sp)
 8002830:	dd400815 	stw	r21,32(sp)
 8002834:	dd000715 	stw	r20,28(sp)
 8002838:	dcc00615 	stw	r19,24(sp)
 800283c:	dc400415 	stw	r17,16(sp)
 8002840:	dc000315 	stw	r16,12(sp)
 8002844:	dfc00b15 	stw	ra,44(sp)
 8002848:	dc800515 	stw	r18,20(sp)
 800284c:	2021883a 	mov	r16,r4
 8002850:	2823883a 	mov	r17,r5
 8002854:	24c00317 	ldw	r19,12(r4)
 8002858:	25000417 	ldw	r20,16(r4)
 800285c:	28c00017 	ldw	r3,0(r5)
 8002860:	b5aa5e04 	addi	r22,r22,-22152
 8002864:	054001c4 	movi	r21,7
 8002868:	05c00204 	movi	r23,8
 800286c:	00001606 	br	80028c8 <_Unwind_ForcedUnwind_Phase2+0xa8>
 8002870:	81800017 	ldw	r6,0(r16)
 8002874:	81c00117 	ldw	r7,4(r16)
 8002878:	1c800617 	ldw	r18,24(r3)
 800287c:	dc000015 	stw	r16,0(sp)
 8002880:	dc400115 	stw	r17,4(sp)
 8002884:	dd000215 	stw	r20,8(sp)
 8002888:	983ee83a 	callr	r19
 800288c:	01000044 	movi	r4,1
 8002890:	01400284 	movi	r5,10
 8002894:	1000241e 	bne	r2,zero,8002928 <_Unwind_ForcedUnwind_Phase2+0x108>
 8002898:	90000726 	beq	r18,zero,80028b8 <_Unwind_ForcedUnwind_Phase2+0x98>
 800289c:	81800017 	ldw	r6,0(r16)
 80028a0:	81c00117 	ldw	r7,4(r16)
 80028a4:	dc000015 	stw	r16,0(sp)
 80028a8:	dc400115 	stw	r17,4(sp)
 80028ac:	903ee83a 	callr	r18
 80028b0:	15401f26 	beq	r2,r21,8002930 <_Unwind_ForcedUnwind_Phase2+0x110>
 80028b4:	15c01c1e 	bne	r2,r23,8002928 <_Unwind_ForcedUnwind_Phase2+0x108>
 80028b8:	88800017 	ldw	r2,0(r17)
 80028bc:	10c00017 	ldw	r3,0(r2)
 80028c0:	b0c00015 	stw	r3,0(r22)
 80028c4:	88c00015 	stw	r3,0(r17)
 80028c8:	01000044 	movi	r4,1
 80028cc:	01400284 	movi	r5,10
 80028d0:	183fe71e 	bne	r3,zero,8002870 <__alt_data_end+0xfc002870>
 80028d4:	81800017 	ldw	r6,0(r16)
 80028d8:	81c00117 	ldw	r7,4(r16)
 80028dc:	01000044 	movi	r4,1
 80028e0:	dc000015 	stw	r16,0(sp)
 80028e4:	dc400115 	stw	r17,4(sp)
 80028e8:	dd000215 	stw	r20,8(sp)
 80028ec:	01400684 	movi	r5,26
 80028f0:	983ee83a 	callr	r19
 80028f4:	10000c1e 	bne	r2,zero,8002928 <_Unwind_ForcedUnwind_Phase2+0x108>
 80028f8:	00800144 	movi	r2,5
 80028fc:	dfc00b17 	ldw	ra,44(sp)
 8002900:	ddc00a17 	ldw	r23,40(sp)
 8002904:	dd800917 	ldw	r22,36(sp)
 8002908:	dd400817 	ldw	r21,32(sp)
 800290c:	dd000717 	ldw	r20,28(sp)
 8002910:	dcc00617 	ldw	r19,24(sp)
 8002914:	dc800517 	ldw	r18,20(sp)
 8002918:	dc400417 	ldw	r17,16(sp)
 800291c:	dc000317 	ldw	r16,12(sp)
 8002920:	dec00c04 	addi	sp,sp,48
 8002924:	f800283a 	ret
 8002928:	00800084 	movi	r2,2
 800292c:	003ff306 	br	80028fc <__alt_data_end+0xfc0028fc>
 8002930:	a805883a 	mov	r2,r21
 8002934:	003ff106 	br	80028fc <__alt_data_end+0xfc0028fc>

08002938 <_Unwind_RaiseException_Phase2>:
 8002938:	28c00017 	ldw	r3,0(r5)
 800293c:	defff804 	addi	sp,sp,-32
 8002940:	dcc00515 	stw	r19,20(sp)
 8002944:	dc800415 	stw	r18,16(sp)
 8002948:	dc400315 	stw	r17,12(sp)
 800294c:	dc000215 	stw	r16,8(sp)
 8002950:	dfc00715 	stw	ra,28(sp)
 8002954:	dd000615 	stw	r20,24(sp)
 8002958:	2823883a 	mov	r17,r5
 800295c:	2021883a 	mov	r16,r4
 8002960:	048001c4 	movi	r18,7
 8002964:	04c00204 	movi	r19,8
 8002968:	18001326 	beq	r3,zero,80029b8 <_Unwind_RaiseException_Phase2+0x80>
 800296c:	81000417 	ldw	r4,16(r16)
 8002970:	1a000617 	ldw	r8,24(r3)
 8002974:	19001c26 	beq	r3,r4,80029e8 <_Unwind_RaiseException_Phase2+0xb0>
 8002978:	40000b26 	beq	r8,zero,80029a8 <_Unwind_RaiseException_Phase2+0x70>
 800297c:	01400084 	movi	r5,2
 8002980:	0029883a 	mov	r20,zero
 8002984:	81800017 	ldw	r6,0(r16)
 8002988:	81c00117 	ldw	r7,4(r16)
 800298c:	01000044 	movi	r4,1
 8002990:	dc000015 	stw	r16,0(sp)
 8002994:	dc400115 	stw	r17,4(sp)
 8002998:	403ee83a 	callr	r8
 800299c:	14800f26 	beq	r2,r18,80029dc <_Unwind_RaiseException_Phase2+0xa4>
 80029a0:	14c0051e 	bne	r2,r19,80029b8 <_Unwind_RaiseException_Phase2+0x80>
 80029a4:	a0000f1e 	bne	r20,zero,80029e4 <_Unwind_RaiseException_Phase2+0xac>
 80029a8:	88c00017 	ldw	r3,0(r17)
 80029ac:	18c00017 	ldw	r3,0(r3)
 80029b0:	88c00015 	stw	r3,0(r17)
 80029b4:	183fed1e 	bne	r3,zero,800296c <__alt_data_end+0xfc00296c>
 80029b8:	00800084 	movi	r2,2
 80029bc:	dfc00717 	ldw	ra,28(sp)
 80029c0:	dd000617 	ldw	r20,24(sp)
 80029c4:	dcc00517 	ldw	r19,20(sp)
 80029c8:	dc800417 	ldw	r18,16(sp)
 80029cc:	dc400317 	ldw	r17,12(sp)
 80029d0:	dc000217 	ldw	r16,8(sp)
 80029d4:	dec00804 	addi	sp,sp,32
 80029d8:	f800283a 	ret
 80029dc:	9005883a 	mov	r2,r18
 80029e0:	003ff606 	br	80029bc <__alt_data_end+0xfc0029bc>
 80029e4:	8002d400 	call	8002d40 <abort>
 80029e8:	403ffe26 	beq	r8,zero,80029e4 <__alt_data_end+0xfc0029e4>
 80029ec:	01400184 	movi	r5,6
 80029f0:	05000104 	movi	r20,4
 80029f4:	003fe306 	br	8002984 <__alt_data_end+0xfc002984>

080029f8 <uw_install_context.isra.1>:
 80029f8:	20c00017 	ldw	r3,0(r4)
 80029fc:	deffff04 	addi	sp,sp,-4
 8002a00:	014200b4 	movhi	r5,2050
 8002a04:	19000917 	ldw	r4,36(r3)
 8002a08:	df000015 	stw	fp,0(sp)
 8002a0c:	18800804 	addi	r2,r3,32
 8002a10:	d839883a 	mov	fp,sp
 8002a14:	296a5e04 	addi	r5,r5,-22152
 8002a18:	28c00015 	stw	r3,0(r5)
 8002a1c:	17000017 	ldw	fp,0(r2)
 8002a20:	1ec00a17 	ldw	sp,40(r3)
 8002a24:	2000683a 	jmp	r4

08002a28 <_Unwind_SjLj_Register>:
 8002a28:	008200b4 	movhi	r2,2050
 8002a2c:	10aa5e04 	addi	r2,r2,-22152
 8002a30:	10c00017 	ldw	r3,0(r2)
 8002a34:	11000015 	stw	r4,0(r2)
 8002a38:	20c00015 	stw	r3,0(r4)
 8002a3c:	f800283a 	ret

08002a40 <_Unwind_SjLj_Unregister>:
 8002a40:	20c00017 	ldw	r3,0(r4)
 8002a44:	008200b4 	movhi	r2,2050
 8002a48:	10aa5e04 	addi	r2,r2,-22152
 8002a4c:	10c00015 	stw	r3,0(r2)
 8002a50:	f800283a 	ret

08002a54 <_Unwind_GetGR>:
 8002a54:	20800017 	ldw	r2,0(r4)
 8002a58:	29400084 	addi	r5,r5,2
 8002a5c:	294b883a 	add	r5,r5,r5
 8002a60:	294b883a 	add	r5,r5,r5
 8002a64:	114b883a 	add	r5,r2,r5
 8002a68:	28800017 	ldw	r2,0(r5)
 8002a6c:	f800283a 	ret

08002a70 <_Unwind_GetCFA>:
 8002a70:	20800017 	ldw	r2,0(r4)
 8002a74:	10000226 	beq	r2,zero,8002a80 <_Unwind_GetCFA+0x10>
 8002a78:	10800a17 	ldw	r2,40(r2)
 8002a7c:	f800283a 	ret
 8002a80:	0005883a 	mov	r2,zero
 8002a84:	f800283a 	ret

08002a88 <_Unwind_SetGR>:
 8002a88:	20800017 	ldw	r2,0(r4)
 8002a8c:	29400084 	addi	r5,r5,2
 8002a90:	294b883a 	add	r5,r5,r5
 8002a94:	294b883a 	add	r5,r5,r5
 8002a98:	114b883a 	add	r5,r2,r5
 8002a9c:	29800015 	stw	r6,0(r5)
 8002aa0:	f800283a 	ret

08002aa4 <_Unwind_GetIP>:
 8002aa4:	20800017 	ldw	r2,0(r4)
 8002aa8:	10800117 	ldw	r2,4(r2)
 8002aac:	10800044 	addi	r2,r2,1
 8002ab0:	f800283a 	ret

08002ab4 <_Unwind_GetIPInfo>:
 8002ab4:	20800017 	ldw	r2,0(r4)
 8002ab8:	28000015 	stw	zero,0(r5)
 8002abc:	10000326 	beq	r2,zero,8002acc <_Unwind_GetIPInfo+0x18>
 8002ac0:	10800117 	ldw	r2,4(r2)
 8002ac4:	10800044 	addi	r2,r2,1
 8002ac8:	f800283a 	ret
 8002acc:	0005883a 	mov	r2,zero
 8002ad0:	f800283a 	ret

08002ad4 <_Unwind_SetIP>:
 8002ad4:	20800017 	ldw	r2,0(r4)
 8002ad8:	297fffc4 	addi	r5,r5,-1
 8002adc:	11400115 	stw	r5,4(r2)
 8002ae0:	f800283a 	ret

08002ae4 <_Unwind_GetLanguageSpecificData>:
 8002ae4:	20800017 	ldw	r2,0(r4)
 8002ae8:	10800717 	ldw	r2,28(r2)
 8002aec:	f800283a 	ret

08002af0 <_Unwind_GetRegionStart>:
 8002af0:	0005883a 	mov	r2,zero
 8002af4:	f800283a 	ret

08002af8 <_Unwind_FindEnclosingFunction>:
 8002af8:	0005883a 	mov	r2,zero
 8002afc:	f800283a 	ret

08002b00 <_Unwind_GetDataRelBase>:
 8002b00:	0005883a 	mov	r2,zero
 8002b04:	f800283a 	ret

08002b08 <_Unwind_GetTextRelBase>:
 8002b08:	0005883a 	mov	r2,zero
 8002b0c:	f800283a 	ret

08002b10 <_Unwind_SjLj_RaiseException>:
 8002b10:	008200b4 	movhi	r2,2050
 8002b14:	defff804 	addi	sp,sp,-32
 8002b18:	10aa5e04 	addi	r2,r2,-22152
 8002b1c:	dc800515 	stw	r18,20(sp)
 8002b20:	14800017 	ldw	r18,0(r2)
 8002b24:	dfc00715 	stw	ra,28(sp)
 8002b28:	dcc00615 	stw	r19,24(sp)
 8002b2c:	dc400415 	stw	r17,16(sp)
 8002b30:	dc000315 	stw	r16,12(sp)
 8002b34:	dc800215 	stw	r18,8(sp)
 8002b38:	90001426 	beq	r18,zero,8002b8c <_Unwind_SjLj_RaiseException+0x7c>
 8002b3c:	2021883a 	mov	r16,r4
 8002b40:	9005883a 	mov	r2,r18
 8002b44:	04400184 	movi	r17,6
 8002b48:	04c00204 	movi	r19,8
 8002b4c:	10800617 	ldw	r2,24(r2)
 8002b50:	10000a26 	beq	r2,zero,8002b7c <_Unwind_SjLj_RaiseException+0x6c>
 8002b54:	81800017 	ldw	r6,0(r16)
 8002b58:	81c00117 	ldw	r7,4(r16)
 8002b5c:	01000044 	movi	r4,1
 8002b60:	d8c00204 	addi	r3,sp,8
 8002b64:	dc000015 	stw	r16,0(sp)
 8002b68:	d8c00115 	stw	r3,4(sp)
 8002b6c:	200b883a 	mov	r5,r4
 8002b70:	103ee83a 	callr	r2
 8002b74:	14400d26 	beq	r2,r17,8002bac <_Unwind_SjLj_RaiseException+0x9c>
 8002b78:	14c0171e 	bne	r2,r19,8002bd8 <_Unwind_SjLj_RaiseException+0xc8>
 8002b7c:	d8800217 	ldw	r2,8(sp)
 8002b80:	10800017 	ldw	r2,0(r2)
 8002b84:	d8800215 	stw	r2,8(sp)
 8002b88:	103ff01e 	bne	r2,zero,8002b4c <__alt_data_end+0xfc002b4c>
 8002b8c:	00800144 	movi	r2,5
 8002b90:	dfc00717 	ldw	ra,28(sp)
 8002b94:	dcc00617 	ldw	r19,24(sp)
 8002b98:	dc800517 	ldw	r18,20(sp)
 8002b9c:	dc400417 	ldw	r17,16(sp)
 8002ba0:	dc000317 	ldw	r16,12(sp)
 8002ba4:	dec00804 	addi	sp,sp,32
 8002ba8:	f800283a 	ret
 8002bac:	d8800217 	ldw	r2,8(sp)
 8002bb0:	80000315 	stw	zero,12(r16)
 8002bb4:	8009883a 	mov	r4,r16
 8002bb8:	80800415 	stw	r2,16(r16)
 8002bbc:	d9400204 	addi	r5,sp,8
 8002bc0:	dc800215 	stw	r18,8(sp)
 8002bc4:	80029380 	call	8002938 <_Unwind_RaiseException_Phase2>
 8002bc8:	00c001c4 	movi	r3,7
 8002bcc:	10fff01e 	bne	r2,r3,8002b90 <__alt_data_end+0xfc002b90>
 8002bd0:	d9000204 	addi	r4,sp,8
 8002bd4:	80029f80 	call	80029f8 <uw_install_context.isra.1>
 8002bd8:	008000c4 	movi	r2,3
 8002bdc:	003fec06 	br	8002b90 <__alt_data_end+0xfc002b90>

08002be0 <_Unwind_SjLj_ForcedUnwind>:
 8002be0:	00c200b4 	movhi	r3,2050
 8002be4:	18ea5e04 	addi	r3,r3,-22152
 8002be8:	defffe04 	addi	sp,sp,-8
 8002bec:	18c00017 	ldw	r3,0(r3)
 8002bf0:	dfc00115 	stw	ra,4(sp)
 8002bf4:	21400315 	stw	r5,12(r4)
 8002bf8:	21800415 	stw	r6,16(r4)
 8002bfc:	d80b883a 	mov	r5,sp
 8002c00:	d8c00015 	stw	r3,0(sp)
 8002c04:	80028200 	call	8002820 <_Unwind_ForcedUnwind_Phase2>
 8002c08:	00c001c4 	movi	r3,7
 8002c0c:	10c00326 	beq	r2,r3,8002c1c <_Unwind_SjLj_ForcedUnwind+0x3c>
 8002c10:	dfc00117 	ldw	ra,4(sp)
 8002c14:	dec00204 	addi	sp,sp,8
 8002c18:	f800283a 	ret
 8002c1c:	d809883a 	mov	r4,sp
 8002c20:	80029f80 	call	80029f8 <uw_install_context.isra.1>

08002c24 <_Unwind_SjLj_Resume>:
 8002c24:	00c200b4 	movhi	r3,2050
 8002c28:	18ea5e04 	addi	r3,r3,-22152
 8002c2c:	18c00017 	ldw	r3,0(r3)
 8002c30:	20800317 	ldw	r2,12(r4)
 8002c34:	defffe04 	addi	sp,sp,-8
 8002c38:	dfc00115 	stw	ra,4(sp)
 8002c3c:	d8c00015 	stw	r3,0(sp)
 8002c40:	d80b883a 	mov	r5,sp
 8002c44:	1000041e 	bne	r2,zero,8002c58 <_Unwind_SjLj_Resume+0x34>
 8002c48:	80029380 	call	8002938 <_Unwind_RaiseException_Phase2>
 8002c4c:	00c001c4 	movi	r3,7
 8002c50:	10c00326 	beq	r2,r3,8002c60 <_Unwind_SjLj_Resume+0x3c>
 8002c54:	8002d400 	call	8002d40 <abort>
 8002c58:	80028200 	call	8002820 <_Unwind_ForcedUnwind_Phase2>
 8002c5c:	003ffb06 	br	8002c4c <__alt_data_end+0xfc002c4c>
 8002c60:	d809883a 	mov	r4,sp
 8002c64:	80029f80 	call	80029f8 <uw_install_context.isra.1>

08002c68 <_Unwind_SjLj_Resume_or_Rethrow>:
 8002c68:	20800317 	ldw	r2,12(r4)
 8002c6c:	defffe04 	addi	sp,sp,-8
 8002c70:	dfc00115 	stw	ra,4(sp)
 8002c74:	1000041e 	bne	r2,zero,8002c88 <_Unwind_SjLj_Resume_or_Rethrow+0x20>
 8002c78:	8002b100 	call	8002b10 <_Unwind_SjLj_RaiseException>
 8002c7c:	dfc00117 	ldw	ra,4(sp)
 8002c80:	dec00204 	addi	sp,sp,8
 8002c84:	f800283a 	ret
 8002c88:	008200b4 	movhi	r2,2050
 8002c8c:	10aa5e04 	addi	r2,r2,-22152
 8002c90:	10800017 	ldw	r2,0(r2)
 8002c94:	d80b883a 	mov	r5,sp
 8002c98:	d8800015 	stw	r2,0(sp)
 8002c9c:	80028200 	call	8002820 <_Unwind_ForcedUnwind_Phase2>
 8002ca0:	00c001c4 	movi	r3,7
 8002ca4:	10c00126 	beq	r2,r3,8002cac <_Unwind_SjLj_Resume_or_Rethrow+0x44>
 8002ca8:	8002d400 	call	8002d40 <abort>
 8002cac:	d809883a 	mov	r4,sp
 8002cb0:	80029f80 	call	80029f8 <uw_install_context.isra.1>

08002cb4 <_Unwind_DeleteException>:
 8002cb4:	20800217 	ldw	r2,8(r4)
 8002cb8:	200b883a 	mov	r5,r4
 8002cbc:	10000226 	beq	r2,zero,8002cc8 <_Unwind_DeleteException+0x14>
 8002cc0:	01000044 	movi	r4,1
 8002cc4:	1000683a 	jmp	r2
 8002cc8:	f800283a 	ret

08002ccc <_Unwind_Backtrace>:
 8002ccc:	008200b4 	movhi	r2,2050
 8002cd0:	10aa5e04 	addi	r2,r2,-22152
 8002cd4:	10800017 	ldw	r2,0(r2)
 8002cd8:	defffc04 	addi	sp,sp,-16
 8002cdc:	dc400215 	stw	r17,8(sp)
 8002ce0:	dc000115 	stw	r16,4(sp)
 8002ce4:	dfc00315 	stw	ra,12(sp)
 8002ce8:	2023883a 	mov	r17,r4
 8002cec:	2821883a 	mov	r16,r5
 8002cf0:	d8800015 	stw	r2,0(sp)
 8002cf4:	00000506 	br	8002d0c <_Unwind_Backtrace+0x40>
 8002cf8:	883ee83a 	callr	r17
 8002cfc:	10000e1e 	bne	r2,zero,8002d38 <_Unwind_Backtrace+0x6c>
 8002d00:	d8800017 	ldw	r2,0(sp)
 8002d04:	10800017 	ldw	r2,0(r2)
 8002d08:	d8800015 	stw	r2,0(sp)
 8002d0c:	d809883a 	mov	r4,sp
 8002d10:	800b883a 	mov	r5,r16
 8002d14:	103ff81e 	bne	r2,zero,8002cf8 <__alt_data_end+0xfc002cf8>
 8002d18:	883ee83a 	callr	r17
 8002d1c:	1000061e 	bne	r2,zero,8002d38 <_Unwind_Backtrace+0x6c>
 8002d20:	00800144 	movi	r2,5
 8002d24:	dfc00317 	ldw	ra,12(sp)
 8002d28:	dc400217 	ldw	r17,8(sp)
 8002d2c:	dc000117 	ldw	r16,4(sp)
 8002d30:	dec00404 	addi	sp,sp,16
 8002d34:	f800283a 	ret
 8002d38:	008000c4 	movi	r2,3
 8002d3c:	003ff906 	br	8002d24 <__alt_data_end+0xfc002d24>

08002d40 <abort>:
 8002d40:	deffff04 	addi	sp,sp,-4
 8002d44:	01000184 	movi	r4,6
 8002d48:	dfc00015 	stw	ra,0(sp)
 8002d4c:	8003a240 	call	8003a24 <raise>
 8002d50:	01000044 	movi	r4,1
 8002d54:	80131ec0 	call	80131ec <_exit>

08002d58 <malloc>:
 8002d58:	008200b4 	movhi	r2,2050
 8002d5c:	10a32e04 	addi	r2,r2,-29512
 8002d60:	200b883a 	mov	r5,r4
 8002d64:	11000017 	ldw	r4,0(r2)
 8002d68:	8002d801 	jmpi	8002d80 <_malloc_r>

08002d6c <free>:
 8002d6c:	008200b4 	movhi	r2,2050
 8002d70:	10a32e04 	addi	r2,r2,-29512
 8002d74:	200b883a 	mov	r5,r4
 8002d78:	11000017 	ldw	r4,0(r2)
 8002d7c:	800a2241 	jmpi	800a224 <_free_r>

08002d80 <_malloc_r>:
 8002d80:	defff504 	addi	sp,sp,-44
 8002d84:	dc800315 	stw	r18,12(sp)
 8002d88:	dfc00a15 	stw	ra,40(sp)
 8002d8c:	df000915 	stw	fp,36(sp)
 8002d90:	ddc00815 	stw	r23,32(sp)
 8002d94:	dd800715 	stw	r22,28(sp)
 8002d98:	dd400615 	stw	r21,24(sp)
 8002d9c:	dd000515 	stw	r20,20(sp)
 8002da0:	dcc00415 	stw	r19,16(sp)
 8002da4:	dc400215 	stw	r17,8(sp)
 8002da8:	dc000115 	stw	r16,4(sp)
 8002dac:	288002c4 	addi	r2,r5,11
 8002db0:	00c00584 	movi	r3,22
 8002db4:	2025883a 	mov	r18,r4
 8002db8:	18802a2e 	bgeu	r3,r2,8002e64 <_malloc_r+0xe4>
 8002dbc:	047ffe04 	movi	r17,-8
 8002dc0:	1462703a 	and	r17,r2,r17
 8002dc4:	88009e16 	blt	r17,zero,8003040 <_malloc_r+0x2c0>
 8002dc8:	89409d36 	bltu	r17,r5,8003040 <_malloc_r+0x2c0>
 8002dcc:	801384c0 	call	801384c <__malloc_lock>
 8002dd0:	00807dc4 	movi	r2,503
 8002dd4:	14402736 	bltu	r2,r17,8002e74 <_malloc_r+0xf4>
 8002dd8:	8806d0fa 	srli	r3,r17,3
 8002ddc:	04c20074 	movhi	r19,2049
 8002de0:	9cdc2404 	addi	r19,r19,28816
 8002de4:	18c5883a 	add	r2,r3,r3
 8002de8:	1085883a 	add	r2,r2,r2
 8002dec:	1085883a 	add	r2,r2,r2
 8002df0:	9885883a 	add	r2,r19,r2
 8002df4:	14000317 	ldw	r16,12(r2)
 8002df8:	80814a26 	beq	r16,r2,8003324 <_malloc_r+0x5a4>
 8002dfc:	80c00117 	ldw	r3,4(r16)
 8002e00:	81000317 	ldw	r4,12(r16)
 8002e04:	00bfff04 	movi	r2,-4
 8002e08:	1884703a 	and	r2,r3,r2
 8002e0c:	81400217 	ldw	r5,8(r16)
 8002e10:	8085883a 	add	r2,r16,r2
 8002e14:	10c00117 	ldw	r3,4(r2)
 8002e18:	29000315 	stw	r4,12(r5)
 8002e1c:	21400215 	stw	r5,8(r4)
 8002e20:	18c00054 	ori	r3,r3,1
 8002e24:	10c00115 	stw	r3,4(r2)
 8002e28:	9009883a 	mov	r4,r18
 8002e2c:	801386c0 	call	801386c <__malloc_unlock>
 8002e30:	80800204 	addi	r2,r16,8
 8002e34:	dfc00a17 	ldw	ra,40(sp)
 8002e38:	df000917 	ldw	fp,36(sp)
 8002e3c:	ddc00817 	ldw	r23,32(sp)
 8002e40:	dd800717 	ldw	r22,28(sp)
 8002e44:	dd400617 	ldw	r21,24(sp)
 8002e48:	dd000517 	ldw	r20,20(sp)
 8002e4c:	dcc00417 	ldw	r19,16(sp)
 8002e50:	dc800317 	ldw	r18,12(sp)
 8002e54:	dc400217 	ldw	r17,8(sp)
 8002e58:	dc000117 	ldw	r16,4(sp)
 8002e5c:	dec00b04 	addi	sp,sp,44
 8002e60:	f800283a 	ret
 8002e64:	04400404 	movi	r17,16
 8002e68:	89407536 	bltu	r17,r5,8003040 <_malloc_r+0x2c0>
 8002e6c:	801384c0 	call	801384c <__malloc_lock>
 8002e70:	003fd906 	br	8002dd8 <__alt_data_end+0xfc002dd8>
 8002e74:	8806d27a 	srli	r3,r17,9
 8002e78:	18007526 	beq	r3,zero,8003050 <_malloc_r+0x2d0>
 8002e7c:	00800104 	movi	r2,4
 8002e80:	10c0ef36 	bltu	r2,r3,8003240 <_malloc_r+0x4c0>
 8002e84:	8806d1ba 	srli	r3,r17,6
 8002e88:	19c00e04 	addi	r7,r3,56
 8002e8c:	39cb883a 	add	r5,r7,r7
 8002e90:	04c20074 	movhi	r19,2049
 8002e94:	294b883a 	add	r5,r5,r5
 8002e98:	9cdc2404 	addi	r19,r19,28816
 8002e9c:	294b883a 	add	r5,r5,r5
 8002ea0:	994b883a 	add	r5,r19,r5
 8002ea4:	2c000317 	ldw	r16,12(r5)
 8002ea8:	2c000e26 	beq	r5,r16,8002ee4 <_malloc_r+0x164>
 8002eac:	80800117 	ldw	r2,4(r16)
 8002eb0:	01bfff04 	movi	r6,-4
 8002eb4:	010003c4 	movi	r4,15
 8002eb8:	1184703a 	and	r2,r2,r6
 8002ebc:	1447c83a 	sub	r3,r2,r17
 8002ec0:	20c00716 	blt	r4,r3,8002ee0 <_malloc_r+0x160>
 8002ec4:	1800650e 	bge	r3,zero,800305c <_malloc_r+0x2dc>
 8002ec8:	84000317 	ldw	r16,12(r16)
 8002ecc:	2c000526 	beq	r5,r16,8002ee4 <_malloc_r+0x164>
 8002ed0:	80800117 	ldw	r2,4(r16)
 8002ed4:	1184703a 	and	r2,r2,r6
 8002ed8:	1447c83a 	sub	r3,r2,r17
 8002edc:	20fff90e 	bge	r4,r3,8002ec4 <__alt_data_end+0xfc002ec4>
 8002ee0:	39ffffc4 	addi	r7,r7,-1
 8002ee4:	38c00044 	addi	r3,r7,1
 8002ee8:	01820074 	movhi	r6,2049
 8002eec:	9c000417 	ldw	r16,16(r19)
 8002ef0:	319c2404 	addi	r6,r6,28816
 8002ef4:	32400204 	addi	r9,r6,8
 8002ef8:	82410326 	beq	r16,r9,8003308 <_malloc_r+0x588>
 8002efc:	81000117 	ldw	r4,4(r16)
 8002f00:	00bfff04 	movi	r2,-4
 8002f04:	208e703a 	and	r7,r4,r2
 8002f08:	3c45c83a 	sub	r2,r7,r17
 8002f0c:	010003c4 	movi	r4,15
 8002f10:	2080ee16 	blt	r4,r2,80032cc <_malloc_r+0x54c>
 8002f14:	32400515 	stw	r9,20(r6)
 8002f18:	32400415 	stw	r9,16(r6)
 8002f1c:	1000510e 	bge	r2,zero,8003064 <_malloc_r+0x2e4>
 8002f20:	00807fc4 	movi	r2,511
 8002f24:	11c0ce36 	bltu	r2,r7,8003260 <_malloc_r+0x4e0>
 8002f28:	3808d0fa 	srli	r4,r7,3
 8002f2c:	01c00044 	movi	r7,1
 8002f30:	30800117 	ldw	r2,4(r6)
 8002f34:	210b883a 	add	r5,r4,r4
 8002f38:	294b883a 	add	r5,r5,r5
 8002f3c:	2009d0ba 	srai	r4,r4,2
 8002f40:	294b883a 	add	r5,r5,r5
 8002f44:	298b883a 	add	r5,r5,r6
 8002f48:	2a000217 	ldw	r8,8(r5)
 8002f4c:	3908983a 	sll	r4,r7,r4
 8002f50:	81400315 	stw	r5,12(r16)
 8002f54:	82000215 	stw	r8,8(r16)
 8002f58:	2088b03a 	or	r4,r4,r2
 8002f5c:	2c000215 	stw	r16,8(r5)
 8002f60:	31000115 	stw	r4,4(r6)
 8002f64:	44000315 	stw	r16,12(r8)
 8002f68:	1805d0ba 	srai	r2,r3,2
 8002f6c:	01400044 	movi	r5,1
 8002f70:	288a983a 	sll	r5,r5,r2
 8002f74:	21404336 	bltu	r4,r5,8003084 <_malloc_r+0x304>
 8002f78:	2144703a 	and	r2,r4,r5
 8002f7c:	10000a1e 	bne	r2,zero,8002fa8 <_malloc_r+0x228>
 8002f80:	00bfff04 	movi	r2,-4
 8002f84:	294b883a 	add	r5,r5,r5
 8002f88:	1886703a 	and	r3,r3,r2
 8002f8c:	2144703a 	and	r2,r4,r5
 8002f90:	18c00104 	addi	r3,r3,4
 8002f94:	1000041e 	bne	r2,zero,8002fa8 <_malloc_r+0x228>
 8002f98:	294b883a 	add	r5,r5,r5
 8002f9c:	2144703a 	and	r2,r4,r5
 8002fa0:	18c00104 	addi	r3,r3,4
 8002fa4:	103ffc26 	beq	r2,zero,8002f98 <__alt_data_end+0xfc002f98>
 8002fa8:	023fff04 	movi	r8,-4
 8002fac:	01c003c4 	movi	r7,15
 8002fb0:	18c5883a 	add	r2,r3,r3
 8002fb4:	1085883a 	add	r2,r2,r2
 8002fb8:	1085883a 	add	r2,r2,r2
 8002fbc:	9895883a 	add	r10,r19,r2
 8002fc0:	52c00304 	addi	r11,r10,12
 8002fc4:	1819883a 	mov	r12,r3
 8002fc8:	5c000017 	ldw	r16,0(r11)
 8002fcc:	59bffd04 	addi	r6,r11,-12
 8002fd0:	8180041e 	bne	r16,r6,8002fe4 <_malloc_r+0x264>
 8002fd4:	0000ce06 	br	8003310 <_malloc_r+0x590>
 8002fd8:	2000d70e 	bge	r4,zero,8003338 <_malloc_r+0x5b8>
 8002fdc:	84000317 	ldw	r16,12(r16)
 8002fe0:	8180cb26 	beq	r16,r6,8003310 <_malloc_r+0x590>
 8002fe4:	80800117 	ldw	r2,4(r16)
 8002fe8:	1204703a 	and	r2,r2,r8
 8002fec:	1449c83a 	sub	r4,r2,r17
 8002ff0:	393ff90e 	bge	r7,r4,8002fd8 <__alt_data_end+0xfc002fd8>
 8002ff4:	80800317 	ldw	r2,12(r16)
 8002ff8:	80c00217 	ldw	r3,8(r16)
 8002ffc:	89400054 	ori	r5,r17,1
 8003000:	81400115 	stw	r5,4(r16)
 8003004:	18800315 	stw	r2,12(r3)
 8003008:	10c00215 	stw	r3,8(r2)
 800300c:	8463883a 	add	r17,r16,r17
 8003010:	9c400515 	stw	r17,20(r19)
 8003014:	9c400415 	stw	r17,16(r19)
 8003018:	20800054 	ori	r2,r4,1
 800301c:	88800115 	stw	r2,4(r17)
 8003020:	8a400315 	stw	r9,12(r17)
 8003024:	8a400215 	stw	r9,8(r17)
 8003028:	8923883a 	add	r17,r17,r4
 800302c:	89000015 	stw	r4,0(r17)
 8003030:	9009883a 	mov	r4,r18
 8003034:	801386c0 	call	801386c <__malloc_unlock>
 8003038:	80800204 	addi	r2,r16,8
 800303c:	003f7d06 	br	8002e34 <__alt_data_end+0xfc002e34>
 8003040:	00800304 	movi	r2,12
 8003044:	90800015 	stw	r2,0(r18)
 8003048:	0005883a 	mov	r2,zero
 800304c:	003f7906 	br	8002e34 <__alt_data_end+0xfc002e34>
 8003050:	01401f84 	movi	r5,126
 8003054:	01c00fc4 	movi	r7,63
 8003058:	003f8d06 	br	8002e90 <__alt_data_end+0xfc002e90>
 800305c:	81000317 	ldw	r4,12(r16)
 8003060:	003f6a06 	br	8002e0c <__alt_data_end+0xfc002e0c>
 8003064:	81c5883a 	add	r2,r16,r7
 8003068:	10c00117 	ldw	r3,4(r2)
 800306c:	9009883a 	mov	r4,r18
 8003070:	18c00054 	ori	r3,r3,1
 8003074:	10c00115 	stw	r3,4(r2)
 8003078:	801386c0 	call	801386c <__malloc_unlock>
 800307c:	80800204 	addi	r2,r16,8
 8003080:	003f6c06 	br	8002e34 <__alt_data_end+0xfc002e34>
 8003084:	9c000217 	ldw	r16,8(r19)
 8003088:	00bfff04 	movi	r2,-4
 800308c:	85800117 	ldw	r22,4(r16)
 8003090:	b0ac703a 	and	r22,r22,r2
 8003094:	b4400336 	bltu	r22,r17,80030a4 <_malloc_r+0x324>
 8003098:	b445c83a 	sub	r2,r22,r17
 800309c:	00c003c4 	movi	r3,15
 80030a0:	18805d16 	blt	r3,r2,8003218 <_malloc_r+0x498>
 80030a4:	05c200b4 	movhi	r23,2050
 80030a8:	008200b4 	movhi	r2,2050
 80030ac:	bde32b04 	addi	r23,r23,-29524
 80030b0:	10aa6104 	addi	r2,r2,-22140
 80030b4:	15400017 	ldw	r21,0(r2)
 80030b8:	b9000017 	ldw	r4,0(r23)
 80030bc:	00ffffc4 	movi	r3,-1
 80030c0:	858d883a 	add	r6,r16,r22
 80030c4:	8d6b883a 	add	r21,r17,r21
 80030c8:	20c0e426 	beq	r4,r3,800345c <_malloc_r+0x6dc>
 80030cc:	ad4403c4 	addi	r21,r21,4111
 80030d0:	00fc0004 	movi	r3,-4096
 80030d4:	a8ea703a 	and	r21,r21,r3
 80030d8:	9009883a 	mov	r4,r18
 80030dc:	a80b883a 	mov	r5,r21
 80030e0:	d9800015 	stw	r6,0(sp)
 80030e4:	80037800 	call	8003780 <_sbrk_r>
 80030e8:	00ffffc4 	movi	r3,-1
 80030ec:	1029883a 	mov	r20,r2
 80030f0:	d9800017 	ldw	r6,0(sp)
 80030f4:	10c0a426 	beq	r2,r3,8003388 <_malloc_r+0x608>
 80030f8:	1180a236 	bltu	r2,r6,8003384 <_malloc_r+0x604>
 80030fc:	070200b4 	movhi	fp,2050
 8003100:	e72cad04 	addi	fp,fp,-19788
 8003104:	e0c00017 	ldw	r3,0(fp)
 8003108:	a8c7883a 	add	r3,r21,r3
 800310c:	e0c00015 	stw	r3,0(fp)
 8003110:	3500da26 	beq	r6,r20,800347c <_malloc_r+0x6fc>
 8003114:	b9000017 	ldw	r4,0(r23)
 8003118:	00bfffc4 	movi	r2,-1
 800311c:	2080e426 	beq	r4,r2,80034b0 <_malloc_r+0x730>
 8003120:	a185c83a 	sub	r2,r20,r6
 8003124:	1885883a 	add	r2,r3,r2
 8003128:	e0800015 	stw	r2,0(fp)
 800312c:	a0c001cc 	andi	r3,r20,7
 8003130:	1800b526 	beq	r3,zero,8003408 <_malloc_r+0x688>
 8003134:	a0e9c83a 	sub	r20,r20,r3
 8003138:	00840204 	movi	r2,4104
 800313c:	a5000204 	addi	r20,r20,8
 8003140:	10c7c83a 	sub	r3,r2,r3
 8003144:	a545883a 	add	r2,r20,r21
 8003148:	1083ffcc 	andi	r2,r2,4095
 800314c:	18abc83a 	sub	r21,r3,r2
 8003150:	9009883a 	mov	r4,r18
 8003154:	a80b883a 	mov	r5,r21
 8003158:	80037800 	call	8003780 <_sbrk_r>
 800315c:	00ffffc4 	movi	r3,-1
 8003160:	10c0d026 	beq	r2,r3,80034a4 <_malloc_r+0x724>
 8003164:	1507c83a 	sub	r3,r2,r20
 8003168:	a8c7883a 	add	r3,r21,r3
 800316c:	18c00054 	ori	r3,r3,1
 8003170:	e0800017 	ldw	r2,0(fp)
 8003174:	9d000215 	stw	r20,8(r19)
 8003178:	a0c00115 	stw	r3,4(r20)
 800317c:	a887883a 	add	r3,r21,r2
 8003180:	e0c00015 	stw	r3,0(fp)
 8003184:	84c00e26 	beq	r16,r19,80031c0 <_malloc_r+0x440>
 8003188:	018003c4 	movi	r6,15
 800318c:	3580a02e 	bgeu	r6,r22,8003410 <_malloc_r+0x690>
 8003190:	81400117 	ldw	r5,4(r16)
 8003194:	013ffe04 	movi	r4,-8
 8003198:	b0bffd04 	addi	r2,r22,-12
 800319c:	1104703a 	and	r2,r2,r4
 80031a0:	2900004c 	andi	r4,r5,1
 80031a4:	1108b03a 	or	r4,r2,r4
 80031a8:	81000115 	stw	r4,4(r16)
 80031ac:	01400144 	movi	r5,5
 80031b0:	8089883a 	add	r4,r16,r2
 80031b4:	21400115 	stw	r5,4(r4)
 80031b8:	21400215 	stw	r5,8(r4)
 80031bc:	3080c036 	bltu	r6,r2,80034c0 <_malloc_r+0x740>
 80031c0:	008200b4 	movhi	r2,2050
 80031c4:	10aa6004 	addi	r2,r2,-22144
 80031c8:	11000017 	ldw	r4,0(r2)
 80031cc:	20c0012e 	bgeu	r4,r3,80031d4 <_malloc_r+0x454>
 80031d0:	10c00015 	stw	r3,0(r2)
 80031d4:	008200b4 	movhi	r2,2050
 80031d8:	10aa5f04 	addi	r2,r2,-22148
 80031dc:	11000017 	ldw	r4,0(r2)
 80031e0:	9c000217 	ldw	r16,8(r19)
 80031e4:	20c0012e 	bgeu	r4,r3,80031ec <_malloc_r+0x46c>
 80031e8:	10c00015 	stw	r3,0(r2)
 80031ec:	80c00117 	ldw	r3,4(r16)
 80031f0:	00bfff04 	movi	r2,-4
 80031f4:	1886703a 	and	r3,r3,r2
 80031f8:	1c45c83a 	sub	r2,r3,r17
 80031fc:	1c400236 	bltu	r3,r17,8003208 <_malloc_r+0x488>
 8003200:	00c003c4 	movi	r3,15
 8003204:	18800416 	blt	r3,r2,8003218 <_malloc_r+0x498>
 8003208:	9009883a 	mov	r4,r18
 800320c:	801386c0 	call	801386c <__malloc_unlock>
 8003210:	0005883a 	mov	r2,zero
 8003214:	003f0706 	br	8002e34 <__alt_data_end+0xfc002e34>
 8003218:	88c00054 	ori	r3,r17,1
 800321c:	80c00115 	stw	r3,4(r16)
 8003220:	8463883a 	add	r17,r16,r17
 8003224:	10800054 	ori	r2,r2,1
 8003228:	9c400215 	stw	r17,8(r19)
 800322c:	88800115 	stw	r2,4(r17)
 8003230:	9009883a 	mov	r4,r18
 8003234:	801386c0 	call	801386c <__malloc_unlock>
 8003238:	80800204 	addi	r2,r16,8
 800323c:	003efd06 	br	8002e34 <__alt_data_end+0xfc002e34>
 8003240:	00800504 	movi	r2,20
 8003244:	10c0482e 	bgeu	r2,r3,8003368 <_malloc_r+0x5e8>
 8003248:	00801504 	movi	r2,84
 800324c:	10c06836 	bltu	r2,r3,80033f0 <_malloc_r+0x670>
 8003250:	8806d33a 	srli	r3,r17,12
 8003254:	19c01b84 	addi	r7,r3,110
 8003258:	39cb883a 	add	r5,r7,r7
 800325c:	003f0c06 	br	8002e90 <__alt_data_end+0xfc002e90>
 8003260:	3804d27a 	srli	r2,r7,9
 8003264:	01000104 	movi	r4,4
 8003268:	2080422e 	bgeu	r4,r2,8003374 <_malloc_r+0x5f4>
 800326c:	01000504 	movi	r4,20
 8003270:	20807c36 	bltu	r4,r2,8003464 <_malloc_r+0x6e4>
 8003274:	110016c4 	addi	r4,r2,91
 8003278:	210b883a 	add	r5,r4,r4
 800327c:	294b883a 	add	r5,r5,r5
 8003280:	294b883a 	add	r5,r5,r5
 8003284:	994b883a 	add	r5,r19,r5
 8003288:	28800217 	ldw	r2,8(r5)
 800328c:	02020074 	movhi	r8,2049
 8003290:	421c2404 	addi	r8,r8,28816
 8003294:	11406326 	beq	r2,r5,8003424 <_malloc_r+0x6a4>
 8003298:	01bfff04 	movi	r6,-4
 800329c:	11000117 	ldw	r4,4(r2)
 80032a0:	2188703a 	and	r4,r4,r6
 80032a4:	3900022e 	bgeu	r7,r4,80032b0 <_malloc_r+0x530>
 80032a8:	10800217 	ldw	r2,8(r2)
 80032ac:	28bffb1e 	bne	r5,r2,800329c <__alt_data_end+0xfc00329c>
 80032b0:	11800317 	ldw	r6,12(r2)
 80032b4:	99000117 	ldw	r4,4(r19)
 80032b8:	81800315 	stw	r6,12(r16)
 80032bc:	80800215 	stw	r2,8(r16)
 80032c0:	34000215 	stw	r16,8(r6)
 80032c4:	14000315 	stw	r16,12(r2)
 80032c8:	003f2706 	br	8002f68 <__alt_data_end+0xfc002f68>
 80032cc:	88c00054 	ori	r3,r17,1
 80032d0:	80c00115 	stw	r3,4(r16)
 80032d4:	8463883a 	add	r17,r16,r17
 80032d8:	34400515 	stw	r17,20(r6)
 80032dc:	34400415 	stw	r17,16(r6)
 80032e0:	10c00054 	ori	r3,r2,1
 80032e4:	8a400315 	stw	r9,12(r17)
 80032e8:	8a400215 	stw	r9,8(r17)
 80032ec:	88c00115 	stw	r3,4(r17)
 80032f0:	88a3883a 	add	r17,r17,r2
 80032f4:	88800015 	stw	r2,0(r17)
 80032f8:	9009883a 	mov	r4,r18
 80032fc:	801386c0 	call	801386c <__malloc_unlock>
 8003300:	80800204 	addi	r2,r16,8
 8003304:	003ecb06 	br	8002e34 <__alt_data_end+0xfc002e34>
 8003308:	31000117 	ldw	r4,4(r6)
 800330c:	003f1606 	br	8002f68 <__alt_data_end+0xfc002f68>
 8003310:	63000044 	addi	r12,r12,1
 8003314:	608000cc 	andi	r2,r12,3
 8003318:	5ac00204 	addi	r11,r11,8
 800331c:	103f2a1e 	bne	r2,zero,8002fc8 <__alt_data_end+0xfc002fc8>
 8003320:	00002106 	br	80033a8 <_malloc_r+0x628>
 8003324:	80800204 	addi	r2,r16,8
 8003328:	84000517 	ldw	r16,20(r16)
 800332c:	143eb31e 	bne	r2,r16,8002dfc <__alt_data_end+0xfc002dfc>
 8003330:	18c00084 	addi	r3,r3,2
 8003334:	003eec06 	br	8002ee8 <__alt_data_end+0xfc002ee8>
 8003338:	8085883a 	add	r2,r16,r2
 800333c:	10c00117 	ldw	r3,4(r2)
 8003340:	81000317 	ldw	r4,12(r16)
 8003344:	81400217 	ldw	r5,8(r16)
 8003348:	18c00054 	ori	r3,r3,1
 800334c:	10c00115 	stw	r3,4(r2)
 8003350:	29000315 	stw	r4,12(r5)
 8003354:	21400215 	stw	r5,8(r4)
 8003358:	9009883a 	mov	r4,r18
 800335c:	801386c0 	call	801386c <__malloc_unlock>
 8003360:	80800204 	addi	r2,r16,8
 8003364:	003eb306 	br	8002e34 <__alt_data_end+0xfc002e34>
 8003368:	19c016c4 	addi	r7,r3,91
 800336c:	39cb883a 	add	r5,r7,r7
 8003370:	003ec706 	br	8002e90 <__alt_data_end+0xfc002e90>
 8003374:	3804d1ba 	srli	r2,r7,6
 8003378:	11000e04 	addi	r4,r2,56
 800337c:	210b883a 	add	r5,r4,r4
 8003380:	003fbe06 	br	800327c <__alt_data_end+0xfc00327c>
 8003384:	84ff5d26 	beq	r16,r19,80030fc <__alt_data_end+0xfc0030fc>
 8003388:	9c000217 	ldw	r16,8(r19)
 800338c:	00bfff04 	movi	r2,-4
 8003390:	80c00117 	ldw	r3,4(r16)
 8003394:	1886703a 	and	r3,r3,r2
 8003398:	003f9706 	br	80031f8 <__alt_data_end+0xfc0031f8>
 800339c:	52800017 	ldw	r10,0(r10)
 80033a0:	18ffffc4 	addi	r3,r3,-1
 80033a4:	50805c1e 	bne	r10,r2,8003518 <_malloc_r+0x798>
 80033a8:	190000cc 	andi	r4,r3,3
 80033ac:	50bffe04 	addi	r2,r10,-8
 80033b0:	203ffa1e 	bne	r4,zero,800339c <__alt_data_end+0xfc00339c>
 80033b4:	98800117 	ldw	r2,4(r19)
 80033b8:	0146303a 	nor	r3,zero,r5
 80033bc:	1884703a 	and	r2,r3,r2
 80033c0:	98800115 	stw	r2,4(r19)
 80033c4:	294b883a 	add	r5,r5,r5
 80033c8:	117f2e36 	bltu	r2,r5,8003084 <__alt_data_end+0xfc003084>
 80033cc:	283f2d26 	beq	r5,zero,8003084 <__alt_data_end+0xfc003084>
 80033d0:	1146703a 	and	r3,r2,r5
 80033d4:	1800521e 	bne	r3,zero,8003520 <_malloc_r+0x7a0>
 80033d8:	6007883a 	mov	r3,r12
 80033dc:	294b883a 	add	r5,r5,r5
 80033e0:	1148703a 	and	r4,r2,r5
 80033e4:	18c00104 	addi	r3,r3,4
 80033e8:	203ffc26 	beq	r4,zero,80033dc <__alt_data_end+0xfc0033dc>
 80033ec:	003ef006 	br	8002fb0 <__alt_data_end+0xfc002fb0>
 80033f0:	00805504 	movi	r2,340
 80033f4:	10c01336 	bltu	r2,r3,8003444 <_malloc_r+0x6c4>
 80033f8:	8806d3fa 	srli	r3,r17,15
 80033fc:	19c01dc4 	addi	r7,r3,119
 8003400:	39cb883a 	add	r5,r7,r7
 8003404:	003ea206 	br	8002e90 <__alt_data_end+0xfc002e90>
 8003408:	00c40004 	movi	r3,4096
 800340c:	003f4d06 	br	8003144 <__alt_data_end+0xfc003144>
 8003410:	00800044 	movi	r2,1
 8003414:	a0800115 	stw	r2,4(r20)
 8003418:	a021883a 	mov	r16,r20
 800341c:	0007883a 	mov	r3,zero
 8003420:	003f7506 	br	80031f8 <__alt_data_end+0xfc0031f8>
 8003424:	200bd0ba 	srai	r5,r4,2
 8003428:	01800044 	movi	r6,1
 800342c:	41000117 	ldw	r4,4(r8)
 8003430:	314a983a 	sll	r5,r6,r5
 8003434:	100d883a 	mov	r6,r2
 8003438:	2908b03a 	or	r4,r5,r4
 800343c:	41000115 	stw	r4,4(r8)
 8003440:	003f9d06 	br	80032b8 <__alt_data_end+0xfc0032b8>
 8003444:	00815504 	movi	r2,1364
 8003448:	10c01336 	bltu	r2,r3,8003498 <_malloc_r+0x718>
 800344c:	8806d4ba 	srli	r3,r17,18
 8003450:	19c01f04 	addi	r7,r3,124
 8003454:	39cb883a 	add	r5,r7,r7
 8003458:	003e8d06 	br	8002e90 <__alt_data_end+0xfc002e90>
 800345c:	ad400404 	addi	r21,r21,16
 8003460:	003f1d06 	br	80030d8 <__alt_data_end+0xfc0030d8>
 8003464:	01001504 	movi	r4,84
 8003468:	20801c36 	bltu	r4,r2,80034dc <_malloc_r+0x75c>
 800346c:	3804d33a 	srli	r2,r7,12
 8003470:	11001b84 	addi	r4,r2,110
 8003474:	210b883a 	add	r5,r4,r4
 8003478:	003f8006 	br	800327c <__alt_data_end+0xfc00327c>
 800347c:	3083ffcc 	andi	r2,r6,4095
 8003480:	103f241e 	bne	r2,zero,8003114 <__alt_data_end+0xfc003114>
 8003484:	99000217 	ldw	r4,8(r19)
 8003488:	ad85883a 	add	r2,r21,r22
 800348c:	10800054 	ori	r2,r2,1
 8003490:	20800115 	stw	r2,4(r4)
 8003494:	003f4a06 	br	80031c0 <__alt_data_end+0xfc0031c0>
 8003498:	01403f04 	movi	r5,252
 800349c:	01c01f84 	movi	r7,126
 80034a0:	003e7b06 	br	8002e90 <__alt_data_end+0xfc002e90>
 80034a4:	00c00044 	movi	r3,1
 80034a8:	002b883a 	mov	r21,zero
 80034ac:	003f3006 	br	8003170 <__alt_data_end+0xfc003170>
 80034b0:	008200b4 	movhi	r2,2050
 80034b4:	10a32b04 	addi	r2,r2,-29524
 80034b8:	15000015 	stw	r20,0(r2)
 80034bc:	003f1b06 	br	800312c <__alt_data_end+0xfc00312c>
 80034c0:	9009883a 	mov	r4,r18
 80034c4:	81400204 	addi	r5,r16,8
 80034c8:	800a2240 	call	800a224 <_free_r>
 80034cc:	008200b4 	movhi	r2,2050
 80034d0:	10acad04 	addi	r2,r2,-19788
 80034d4:	10c00017 	ldw	r3,0(r2)
 80034d8:	003f3906 	br	80031c0 <__alt_data_end+0xfc0031c0>
 80034dc:	01005504 	movi	r4,340
 80034e0:	20800436 	bltu	r4,r2,80034f4 <_malloc_r+0x774>
 80034e4:	3804d3fa 	srli	r2,r7,15
 80034e8:	11001dc4 	addi	r4,r2,119
 80034ec:	210b883a 	add	r5,r4,r4
 80034f0:	003f6206 	br	800327c <__alt_data_end+0xfc00327c>
 80034f4:	01015504 	movi	r4,1364
 80034f8:	20800436 	bltu	r4,r2,800350c <_malloc_r+0x78c>
 80034fc:	3804d4ba 	srli	r2,r7,18
 8003500:	11001f04 	addi	r4,r2,124
 8003504:	210b883a 	add	r5,r4,r4
 8003508:	003f5c06 	br	800327c <__alt_data_end+0xfc00327c>
 800350c:	01403f04 	movi	r5,252
 8003510:	01001f84 	movi	r4,126
 8003514:	003f5906 	br	800327c <__alt_data_end+0xfc00327c>
 8003518:	98800117 	ldw	r2,4(r19)
 800351c:	003fa906 	br	80033c4 <__alt_data_end+0xfc0033c4>
 8003520:	6007883a 	mov	r3,r12
 8003524:	003ea206 	br	8002fb0 <__alt_data_end+0xfc002fb0>

08003528 <memset>:
 8003528:	20c000cc 	andi	r3,r4,3
 800352c:	2005883a 	mov	r2,r4
 8003530:	18004326 	beq	r3,zero,8003640 <memset+0x118>
 8003534:	31ffffc4 	addi	r7,r6,-1
 8003538:	30004026 	beq	r6,zero,800363c <memset+0x114>
 800353c:	2813883a 	mov	r9,r5
 8003540:	200d883a 	mov	r6,r4
 8003544:	2007883a 	mov	r3,r4
 8003548:	00000406 	br	800355c <memset+0x34>
 800354c:	3a3fffc4 	addi	r8,r7,-1
 8003550:	31800044 	addi	r6,r6,1
 8003554:	38003926 	beq	r7,zero,800363c <memset+0x114>
 8003558:	400f883a 	mov	r7,r8
 800355c:	18c00044 	addi	r3,r3,1
 8003560:	32400005 	stb	r9,0(r6)
 8003564:	1a0000cc 	andi	r8,r3,3
 8003568:	403ff81e 	bne	r8,zero,800354c <__alt_data_end+0xfc00354c>
 800356c:	010000c4 	movi	r4,3
 8003570:	21c02d2e 	bgeu	r4,r7,8003628 <memset+0x100>
 8003574:	29803fcc 	andi	r6,r5,255
 8003578:	3008923a 	slli	r4,r6,8
 800357c:	218cb03a 	or	r6,r4,r6
 8003580:	3008943a 	slli	r4,r6,16
 8003584:	218cb03a 	or	r6,r4,r6
 8003588:	010003c4 	movi	r4,15
 800358c:	21c0182e 	bgeu	r4,r7,80035f0 <memset+0xc8>
 8003590:	3b3ffc04 	addi	r12,r7,-16
 8003594:	6018d13a 	srli	r12,r12,4
 8003598:	1a000104 	addi	r8,r3,4
 800359c:	1ac00204 	addi	r11,r3,8
 80035a0:	6008913a 	slli	r4,r12,4
 80035a4:	1a800304 	addi	r10,r3,12
 80035a8:	1813883a 	mov	r9,r3
 80035ac:	21000504 	addi	r4,r4,20
 80035b0:	1909883a 	add	r4,r3,r4
 80035b4:	49800015 	stw	r6,0(r9)
 80035b8:	41800015 	stw	r6,0(r8)
 80035bc:	59800015 	stw	r6,0(r11)
 80035c0:	51800015 	stw	r6,0(r10)
 80035c4:	42000404 	addi	r8,r8,16
 80035c8:	4a400404 	addi	r9,r9,16
 80035cc:	5ac00404 	addi	r11,r11,16
 80035d0:	52800404 	addi	r10,r10,16
 80035d4:	413ff71e 	bne	r8,r4,80035b4 <__alt_data_end+0xfc0035b4>
 80035d8:	63000044 	addi	r12,r12,1
 80035dc:	6018913a 	slli	r12,r12,4
 80035e0:	39c003cc 	andi	r7,r7,15
 80035e4:	010000c4 	movi	r4,3
 80035e8:	1b07883a 	add	r3,r3,r12
 80035ec:	21c00e2e 	bgeu	r4,r7,8003628 <memset+0x100>
 80035f0:	1813883a 	mov	r9,r3
 80035f4:	3811883a 	mov	r8,r7
 80035f8:	010000c4 	movi	r4,3
 80035fc:	49800015 	stw	r6,0(r9)
 8003600:	423fff04 	addi	r8,r8,-4
 8003604:	4a400104 	addi	r9,r9,4
 8003608:	223ffc36 	bltu	r4,r8,80035fc <__alt_data_end+0xfc0035fc>
 800360c:	393fff04 	addi	r4,r7,-4
 8003610:	2008d0ba 	srli	r4,r4,2
 8003614:	39c000cc 	andi	r7,r7,3
 8003618:	21000044 	addi	r4,r4,1
 800361c:	2109883a 	add	r4,r4,r4
 8003620:	2109883a 	add	r4,r4,r4
 8003624:	1907883a 	add	r3,r3,r4
 8003628:	38000426 	beq	r7,zero,800363c <memset+0x114>
 800362c:	19cf883a 	add	r7,r3,r7
 8003630:	19400005 	stb	r5,0(r3)
 8003634:	18c00044 	addi	r3,r3,1
 8003638:	19fffd1e 	bne	r3,r7,8003630 <__alt_data_end+0xfc003630>
 800363c:	f800283a 	ret
 8003640:	2007883a 	mov	r3,r4
 8003644:	300f883a 	mov	r7,r6
 8003648:	003fc806 	br	800356c <__alt_data_end+0xfc00356c>

0800364c <_printf_r>:
 800364c:	defffd04 	addi	sp,sp,-12
 8003650:	dfc00015 	stw	ra,0(sp)
 8003654:	d9800115 	stw	r6,4(sp)
 8003658:	d9c00215 	stw	r7,8(sp)
 800365c:	280d883a 	mov	r6,r5
 8003660:	21400217 	ldw	r5,8(r4)
 8003664:	d9c00104 	addi	r7,sp,4
 8003668:	8005f540 	call	8005f54 <___vfprintf_internal_r>
 800366c:	dfc00017 	ldw	ra,0(sp)
 8003670:	dec00304 	addi	sp,sp,12
 8003674:	f800283a 	ret

08003678 <printf>:
 8003678:	defffc04 	addi	sp,sp,-16
 800367c:	dfc00015 	stw	ra,0(sp)
 8003680:	d9400115 	stw	r5,4(sp)
 8003684:	d9800215 	stw	r6,8(sp)
 8003688:	d9c00315 	stw	r7,12(sp)
 800368c:	008200b4 	movhi	r2,2050
 8003690:	10a32e04 	addi	r2,r2,-29512
 8003694:	10800017 	ldw	r2,0(r2)
 8003698:	200b883a 	mov	r5,r4
 800369c:	d9800104 	addi	r6,sp,4
 80036a0:	11000217 	ldw	r4,8(r2)
 80036a4:	80080500 	call	8008050 <__vfprintf_internal>
 80036a8:	dfc00017 	ldw	ra,0(sp)
 80036ac:	dec00404 	addi	sp,sp,16
 80036b0:	f800283a 	ret

080036b4 <_puts_r>:
 80036b4:	defff604 	addi	sp,sp,-40
 80036b8:	dc000715 	stw	r16,28(sp)
 80036bc:	2021883a 	mov	r16,r4
 80036c0:	2809883a 	mov	r4,r5
 80036c4:	dc400815 	stw	r17,32(sp)
 80036c8:	dfc00915 	stw	ra,36(sp)
 80036cc:	2823883a 	mov	r17,r5
 80036d0:	8003e4c0 	call	8003e4c <strlen>
 80036d4:	00c200b4 	movhi	r3,2050
 80036d8:	18e32e04 	addi	r3,r3,-29512
 80036dc:	18c00017 	ldw	r3,0(r3)
 80036e0:	11000044 	addi	r4,r2,1
 80036e4:	d8800115 	stw	r2,4(sp)
 80036e8:	18c00217 	ldw	r3,8(r3)
 80036ec:	01420074 	movhi	r5,2049
 80036f0:	295b4304 	addi	r5,r5,27916
 80036f4:	1880030b 	ldhu	r2,12(r3)
 80036f8:	d9400215 	stw	r5,8(sp)
 80036fc:	d9000615 	stw	r4,24(sp)
 8003700:	01400044 	movi	r5,1
 8003704:	01000084 	movi	r4,2
 8003708:	d9000515 	stw	r4,20(sp)
 800370c:	dc400015 	stw	r17,0(sp)
 8003710:	d9400315 	stw	r5,12(sp)
 8003714:	dec00415 	stw	sp,16(sp)
 8003718:	1108000c 	andi	r4,r2,8192
 800371c:	2000061e 	bne	r4,zero,8003738 <_puts_r+0x84>
 8003720:	19401917 	ldw	r5,100(r3)
 8003724:	0137ffc4 	movi	r4,-8193
 8003728:	10880014 	ori	r2,r2,8192
 800372c:	2908703a 	and	r4,r5,r4
 8003730:	1880030d 	sth	r2,12(r3)
 8003734:	19001915 	stw	r4,100(r3)
 8003738:	81400217 	ldw	r5,8(r16)
 800373c:	8009883a 	mov	r4,r16
 8003740:	d9800404 	addi	r6,sp,16
 8003744:	800a5140 	call	800a514 <__sfvwrite_r>
 8003748:	1000061e 	bne	r2,zero,8003764 <_puts_r+0xb0>
 800374c:	00800284 	movi	r2,10
 8003750:	dfc00917 	ldw	ra,36(sp)
 8003754:	dc400817 	ldw	r17,32(sp)
 8003758:	dc000717 	ldw	r16,28(sp)
 800375c:	dec00a04 	addi	sp,sp,40
 8003760:	f800283a 	ret
 8003764:	00bfffc4 	movi	r2,-1
 8003768:	003ff906 	br	8003750 <__alt_data_end+0xfc003750>

0800376c <puts>:
 800376c:	008200b4 	movhi	r2,2050
 8003770:	10a32e04 	addi	r2,r2,-29512
 8003774:	200b883a 	mov	r5,r4
 8003778:	11000017 	ldw	r4,0(r2)
 800377c:	80036b41 	jmpi	80036b4 <_puts_r>

08003780 <_sbrk_r>:
 8003780:	defffd04 	addi	sp,sp,-12
 8003784:	dc000015 	stw	r16,0(sp)
 8003788:	040200b4 	movhi	r16,2050
 800378c:	dc400115 	stw	r17,4(sp)
 8003790:	842a6204 	addi	r16,r16,-22136
 8003794:	2023883a 	mov	r17,r4
 8003798:	2809883a 	mov	r4,r5
 800379c:	dfc00215 	stw	ra,8(sp)
 80037a0:	80000015 	stw	zero,0(r16)
 80037a4:	8013a600 	call	8013a60 <sbrk>
 80037a8:	00ffffc4 	movi	r3,-1
 80037ac:	10c00526 	beq	r2,r3,80037c4 <_sbrk_r+0x44>
 80037b0:	dfc00217 	ldw	ra,8(sp)
 80037b4:	dc400117 	ldw	r17,4(sp)
 80037b8:	dc000017 	ldw	r16,0(sp)
 80037bc:	dec00304 	addi	sp,sp,12
 80037c0:	f800283a 	ret
 80037c4:	80c00017 	ldw	r3,0(r16)
 80037c8:	183ff926 	beq	r3,zero,80037b0 <__alt_data_end+0xfc0037b0>
 80037cc:	88c00015 	stw	r3,0(r17)
 80037d0:	003ff706 	br	80037b0 <__alt_data_end+0xfc0037b0>

080037d4 <_init_signal_r>:
 80037d4:	2080b717 	ldw	r2,732(r4)
 80037d8:	defffe04 	addi	sp,sp,-8
 80037dc:	dc000015 	stw	r16,0(sp)
 80037e0:	dfc00115 	stw	ra,4(sp)
 80037e4:	2021883a 	mov	r16,r4
 80037e8:	10000526 	beq	r2,zero,8003800 <_init_signal_r+0x2c>
 80037ec:	0005883a 	mov	r2,zero
 80037f0:	dfc00117 	ldw	ra,4(sp)
 80037f4:	dc000017 	ldw	r16,0(sp)
 80037f8:	dec00204 	addi	sp,sp,8
 80037fc:	f800283a 	ret
 8003800:	01402004 	movi	r5,128
 8003804:	8002d800 	call	8002d80 <_malloc_r>
 8003808:	8080b715 	stw	r2,732(r16)
 800380c:	10000926 	beq	r2,zero,8003834 <_init_signal_r+0x60>
 8003810:	0007883a 	mov	r3,zero
 8003814:	01002004 	movi	r4,128
 8003818:	00000106 	br	8003820 <_init_signal_r+0x4c>
 800381c:	8080b717 	ldw	r2,732(r16)
 8003820:	10c5883a 	add	r2,r2,r3
 8003824:	10000015 	stw	zero,0(r2)
 8003828:	18c00104 	addi	r3,r3,4
 800382c:	193ffb1e 	bne	r3,r4,800381c <__alt_data_end+0xfc00381c>
 8003830:	003fee06 	br	80037ec <__alt_data_end+0xfc0037ec>
 8003834:	00bfffc4 	movi	r2,-1
 8003838:	003fed06 	br	80037f0 <__alt_data_end+0xfc0037f0>

0800383c <_signal_r>:
 800383c:	00c007c4 	movi	r3,31
 8003840:	19401536 	bltu	r3,r5,8003898 <_signal_r+0x5c>
 8003844:	2080b717 	ldw	r2,732(r4)
 8003848:	defffc04 	addi	sp,sp,-16
 800384c:	dc800215 	stw	r18,8(sp)
 8003850:	dc400115 	stw	r17,4(sp)
 8003854:	dc000015 	stw	r16,0(sp)
 8003858:	dfc00315 	stw	ra,12(sp)
 800385c:	3023883a 	mov	r17,r6
 8003860:	2021883a 	mov	r16,r4
 8003864:	2825883a 	mov	r18,r5
 8003868:	10000f26 	beq	r2,zero,80038a8 <_signal_r+0x6c>
 800386c:	948b883a 	add	r5,r18,r18
 8003870:	294b883a 	add	r5,r5,r5
 8003874:	114b883a 	add	r5,r2,r5
 8003878:	28800017 	ldw	r2,0(r5)
 800387c:	2c400015 	stw	r17,0(r5)
 8003880:	dfc00317 	ldw	ra,12(sp)
 8003884:	dc800217 	ldw	r18,8(sp)
 8003888:	dc400117 	ldw	r17,4(sp)
 800388c:	dc000017 	ldw	r16,0(sp)
 8003890:	dec00404 	addi	sp,sp,16
 8003894:	f800283a 	ret
 8003898:	00c00584 	movi	r3,22
 800389c:	20c00015 	stw	r3,0(r4)
 80038a0:	00bfffc4 	movi	r2,-1
 80038a4:	f800283a 	ret
 80038a8:	80037d40 	call	80037d4 <_init_signal_r>
 80038ac:	1000021e 	bne	r2,zero,80038b8 <_signal_r+0x7c>
 80038b0:	8080b717 	ldw	r2,732(r16)
 80038b4:	003fed06 	br	800386c <__alt_data_end+0xfc00386c>
 80038b8:	00bfffc4 	movi	r2,-1
 80038bc:	003ff006 	br	8003880 <__alt_data_end+0xfc003880>

080038c0 <_raise_r>:
 80038c0:	008007c4 	movi	r2,31
 80038c4:	11402936 	bltu	r2,r5,800396c <_raise_r+0xac>
 80038c8:	20c0b717 	ldw	r3,732(r4)
 80038cc:	defffd04 	addi	sp,sp,-12
 80038d0:	dc400115 	stw	r17,4(sp)
 80038d4:	dc000015 	stw	r16,0(sp)
 80038d8:	dfc00215 	stw	ra,8(sp)
 80038dc:	2023883a 	mov	r17,r4
 80038e0:	2821883a 	mov	r16,r5
 80038e4:	18001726 	beq	r3,zero,8003944 <_raise_r+0x84>
 80038e8:	2945883a 	add	r2,r5,r5
 80038ec:	1085883a 	add	r2,r2,r2
 80038f0:	1887883a 	add	r3,r3,r2
 80038f4:	19400017 	ldw	r5,0(r3)
 80038f8:	28001226 	beq	r5,zero,8003944 <_raise_r+0x84>
 80038fc:	00800044 	movi	r2,1
 8003900:	28800e26 	beq	r5,r2,800393c <_raise_r+0x7c>
 8003904:	013fffc4 	movi	r4,-1
 8003908:	29000926 	beq	r5,r4,8003930 <_raise_r+0x70>
 800390c:	18000015 	stw	zero,0(r3)
 8003910:	8009883a 	mov	r4,r16
 8003914:	283ee83a 	callr	r5
 8003918:	0005883a 	mov	r2,zero
 800391c:	dfc00217 	ldw	ra,8(sp)
 8003920:	dc400117 	ldw	r17,4(sp)
 8003924:	dc000017 	ldw	r16,0(sp)
 8003928:	dec00304 	addi	sp,sp,12
 800392c:	f800283a 	ret
 8003930:	00c00584 	movi	r3,22
 8003934:	88c00015 	stw	r3,0(r17)
 8003938:	003ff806 	br	800391c <__alt_data_end+0xfc00391c>
 800393c:	0005883a 	mov	r2,zero
 8003940:	003ff606 	br	800391c <__alt_data_end+0xfc00391c>
 8003944:	8809883a 	mov	r4,r17
 8003948:	8003ad00 	call	8003ad0 <_getpid_r>
 800394c:	8809883a 	mov	r4,r17
 8003950:	100b883a 	mov	r5,r2
 8003954:	800d883a 	mov	r6,r16
 8003958:	dfc00217 	ldw	ra,8(sp)
 800395c:	dc400117 	ldw	r17,4(sp)
 8003960:	dc000017 	ldw	r16,0(sp)
 8003964:	dec00304 	addi	sp,sp,12
 8003968:	8003a781 	jmpi	8003a78 <_kill_r>
 800396c:	00800584 	movi	r2,22
 8003970:	20800015 	stw	r2,0(r4)
 8003974:	00bfffc4 	movi	r2,-1
 8003978:	f800283a 	ret

0800397c <__sigtramp_r>:
 800397c:	008007c4 	movi	r2,31
 8003980:	11402436 	bltu	r2,r5,8003a14 <__sigtramp_r+0x98>
 8003984:	20c0b717 	ldw	r3,732(r4)
 8003988:	defffd04 	addi	sp,sp,-12
 800398c:	dc400115 	stw	r17,4(sp)
 8003990:	dc000015 	stw	r16,0(sp)
 8003994:	dfc00215 	stw	ra,8(sp)
 8003998:	2021883a 	mov	r16,r4
 800399c:	2823883a 	mov	r17,r5
 80039a0:	18001826 	beq	r3,zero,8003a04 <__sigtramp_r+0x88>
 80039a4:	8c45883a 	add	r2,r17,r17
 80039a8:	1085883a 	add	r2,r2,r2
 80039ac:	1885883a 	add	r2,r3,r2
 80039b0:	10c00017 	ldw	r3,0(r2)
 80039b4:	18001126 	beq	r3,zero,80039fc <__sigtramp_r+0x80>
 80039b8:	013fffc4 	movi	r4,-1
 80039bc:	19000d26 	beq	r3,r4,80039f4 <__sigtramp_r+0x78>
 80039c0:	01000044 	movi	r4,1
 80039c4:	19000926 	beq	r3,r4,80039ec <__sigtramp_r+0x70>
 80039c8:	10000015 	stw	zero,0(r2)
 80039cc:	8809883a 	mov	r4,r17
 80039d0:	183ee83a 	callr	r3
 80039d4:	0005883a 	mov	r2,zero
 80039d8:	dfc00217 	ldw	ra,8(sp)
 80039dc:	dc400117 	ldw	r17,4(sp)
 80039e0:	dc000017 	ldw	r16,0(sp)
 80039e4:	dec00304 	addi	sp,sp,12
 80039e8:	f800283a 	ret
 80039ec:	008000c4 	movi	r2,3
 80039f0:	003ff906 	br	80039d8 <__alt_data_end+0xfc0039d8>
 80039f4:	00800084 	movi	r2,2
 80039f8:	003ff706 	br	80039d8 <__alt_data_end+0xfc0039d8>
 80039fc:	00800044 	movi	r2,1
 8003a00:	003ff506 	br	80039d8 <__alt_data_end+0xfc0039d8>
 8003a04:	80037d40 	call	80037d4 <_init_signal_r>
 8003a08:	1000041e 	bne	r2,zero,8003a1c <__sigtramp_r+0xa0>
 8003a0c:	80c0b717 	ldw	r3,732(r16)
 8003a10:	003fe406 	br	80039a4 <__alt_data_end+0xfc0039a4>
 8003a14:	00bfffc4 	movi	r2,-1
 8003a18:	f800283a 	ret
 8003a1c:	00bfffc4 	movi	r2,-1
 8003a20:	003fed06 	br	80039d8 <__alt_data_end+0xfc0039d8>

08003a24 <raise>:
 8003a24:	008200b4 	movhi	r2,2050
 8003a28:	10a32e04 	addi	r2,r2,-29512
 8003a2c:	200b883a 	mov	r5,r4
 8003a30:	11000017 	ldw	r4,0(r2)
 8003a34:	80038c01 	jmpi	80038c0 <_raise_r>

08003a38 <signal>:
 8003a38:	00c200b4 	movhi	r3,2050
 8003a3c:	18e32e04 	addi	r3,r3,-29512
 8003a40:	2005883a 	mov	r2,r4
 8003a44:	19000017 	ldw	r4,0(r3)
 8003a48:	280d883a 	mov	r6,r5
 8003a4c:	100b883a 	mov	r5,r2
 8003a50:	800383c1 	jmpi	800383c <_signal_r>

08003a54 <_init_signal>:
 8003a54:	008200b4 	movhi	r2,2050
 8003a58:	10a32e04 	addi	r2,r2,-29512
 8003a5c:	11000017 	ldw	r4,0(r2)
 8003a60:	80037d41 	jmpi	80037d4 <_init_signal_r>

08003a64 <__sigtramp>:
 8003a64:	008200b4 	movhi	r2,2050
 8003a68:	10a32e04 	addi	r2,r2,-29512
 8003a6c:	200b883a 	mov	r5,r4
 8003a70:	11000017 	ldw	r4,0(r2)
 8003a74:	800397c1 	jmpi	800397c <__sigtramp_r>

08003a78 <_kill_r>:
 8003a78:	defffd04 	addi	sp,sp,-12
 8003a7c:	dc000015 	stw	r16,0(sp)
 8003a80:	040200b4 	movhi	r16,2050
 8003a84:	dc400115 	stw	r17,4(sp)
 8003a88:	842a6204 	addi	r16,r16,-22136
 8003a8c:	2023883a 	mov	r17,r4
 8003a90:	2809883a 	mov	r4,r5
 8003a94:	300b883a 	mov	r5,r6
 8003a98:	dfc00215 	stw	ra,8(sp)
 8003a9c:	80000015 	stw	zero,0(r16)
 8003aa0:	80134940 	call	8013494 <kill>
 8003aa4:	00ffffc4 	movi	r3,-1
 8003aa8:	10c00526 	beq	r2,r3,8003ac0 <_kill_r+0x48>
 8003aac:	dfc00217 	ldw	ra,8(sp)
 8003ab0:	dc400117 	ldw	r17,4(sp)
 8003ab4:	dc000017 	ldw	r16,0(sp)
 8003ab8:	dec00304 	addi	sp,sp,12
 8003abc:	f800283a 	ret
 8003ac0:	80c00017 	ldw	r3,0(r16)
 8003ac4:	183ff926 	beq	r3,zero,8003aac <__alt_data_end+0xfc003aac>
 8003ac8:	88c00015 	stw	r3,0(r17)
 8003acc:	003ff706 	br	8003aac <__alt_data_end+0xfc003aac>

08003ad0 <_getpid_r>:
 8003ad0:	80133281 	jmpi	8013328 <getpid>

08003ad4 <_snprintf_r>:
 8003ad4:	3005883a 	mov	r2,r6
 8003ad8:	30003016 	blt	r6,zero,8003b9c <_snprintf_r+0xc8>
 8003adc:	deffe404 	addi	sp,sp,-112
 8003ae0:	00c08204 	movi	r3,520
 8003ae4:	dc001a15 	stw	r16,104(sp)
 8003ae8:	dfc01b15 	stw	ra,108(sp)
 8003aec:	d8c0030d 	sth	r3,12(sp)
 8003af0:	d9400015 	stw	r5,0(sp)
 8003af4:	d9400415 	stw	r5,16(sp)
 8003af8:	380d883a 	mov	r6,r7
 8003afc:	2021883a 	mov	r16,r4
 8003b00:	10001026 	beq	r2,zero,8003b44 <_snprintf_r+0x70>
 8003b04:	10bfffc4 	addi	r2,r2,-1
 8003b08:	d8800215 	stw	r2,8(sp)
 8003b0c:	d8800515 	stw	r2,20(sp)
 8003b10:	d80b883a 	mov	r5,sp
 8003b14:	00bfffc4 	movi	r2,-1
 8003b18:	d9c01c04 	addi	r7,sp,112
 8003b1c:	d880038d 	sth	r2,14(sp)
 8003b20:	8003ee40 	call	8003ee4 <___svfprintf_internal_r>
 8003b24:	00ffffc4 	movi	r3,-1
 8003b28:	10c01916 	blt	r2,r3,8003b90 <_snprintf_r+0xbc>
 8003b2c:	d8c00017 	ldw	r3,0(sp)
 8003b30:	18000005 	stb	zero,0(r3)
 8003b34:	dfc01b17 	ldw	ra,108(sp)
 8003b38:	dc001a17 	ldw	r16,104(sp)
 8003b3c:	dec01c04 	addi	sp,sp,112
 8003b40:	f800283a 	ret
 8003b44:	00bfffc4 	movi	r2,-1
 8003b48:	d80b883a 	mov	r5,sp
 8003b4c:	d9c01c04 	addi	r7,sp,112
 8003b50:	d8000215 	stw	zero,8(sp)
 8003b54:	d8000515 	stw	zero,20(sp)
 8003b58:	d880038d 	sth	r2,14(sp)
 8003b5c:	8003ee40 	call	8003ee4 <___svfprintf_internal_r>
 8003b60:	00ffffc4 	movi	r3,-1
 8003b64:	10c00416 	blt	r2,r3,8003b78 <_snprintf_r+0xa4>
 8003b68:	dfc01b17 	ldw	ra,108(sp)
 8003b6c:	dc001a17 	ldw	r16,104(sp)
 8003b70:	dec01c04 	addi	sp,sp,112
 8003b74:	f800283a 	ret
 8003b78:	00c022c4 	movi	r3,139
 8003b7c:	80c00015 	stw	r3,0(r16)
 8003b80:	dfc01b17 	ldw	ra,108(sp)
 8003b84:	dc001a17 	ldw	r16,104(sp)
 8003b88:	dec01c04 	addi	sp,sp,112
 8003b8c:	f800283a 	ret
 8003b90:	00c022c4 	movi	r3,139
 8003b94:	80c00015 	stw	r3,0(r16)
 8003b98:	003fe406 	br	8003b2c <__alt_data_end+0xfc003b2c>
 8003b9c:	008022c4 	movi	r2,139
 8003ba0:	20800015 	stw	r2,0(r4)
 8003ba4:	00bfffc4 	movi	r2,-1
 8003ba8:	f800283a 	ret

08003bac <snprintf>:
 8003bac:	deffe304 	addi	sp,sp,-116
 8003bb0:	dfc01b15 	stw	ra,108(sp)
 8003bb4:	dc001a15 	stw	r16,104(sp)
 8003bb8:	d9c01c15 	stw	r7,112(sp)
 8003bbc:	008200b4 	movhi	r2,2050
 8003bc0:	10a32e04 	addi	r2,r2,-29512
 8003bc4:	14000017 	ldw	r16,0(r2)
 8003bc8:	28002d16 	blt	r5,zero,8003c80 <snprintf+0xd4>
 8003bcc:	00c08204 	movi	r3,520
 8003bd0:	d8c0030d 	sth	r3,12(sp)
 8003bd4:	d9000015 	stw	r4,0(sp)
 8003bd8:	d9000415 	stw	r4,16(sp)
 8003bdc:	28001126 	beq	r5,zero,8003c24 <snprintf+0x78>
 8003be0:	28bfffc4 	addi	r2,r5,-1
 8003be4:	d8800215 	stw	r2,8(sp)
 8003be8:	d8800515 	stw	r2,20(sp)
 8003bec:	8009883a 	mov	r4,r16
 8003bf0:	00bfffc4 	movi	r2,-1
 8003bf4:	d80b883a 	mov	r5,sp
 8003bf8:	d9c01c04 	addi	r7,sp,112
 8003bfc:	d880038d 	sth	r2,14(sp)
 8003c00:	8003ee40 	call	8003ee4 <___svfprintf_internal_r>
 8003c04:	00ffffc4 	movi	r3,-1
 8003c08:	10c01a16 	blt	r2,r3,8003c74 <snprintf+0xc8>
 8003c0c:	d8c00017 	ldw	r3,0(sp)
 8003c10:	18000005 	stb	zero,0(r3)
 8003c14:	dfc01b17 	ldw	ra,108(sp)
 8003c18:	dc001a17 	ldw	r16,104(sp)
 8003c1c:	dec01d04 	addi	sp,sp,116
 8003c20:	f800283a 	ret
 8003c24:	00bfffc4 	movi	r2,-1
 8003c28:	8009883a 	mov	r4,r16
 8003c2c:	d80b883a 	mov	r5,sp
 8003c30:	d9c01c04 	addi	r7,sp,112
 8003c34:	d8000215 	stw	zero,8(sp)
 8003c38:	d8000515 	stw	zero,20(sp)
 8003c3c:	d880038d 	sth	r2,14(sp)
 8003c40:	8003ee40 	call	8003ee4 <___svfprintf_internal_r>
 8003c44:	00ffffc4 	movi	r3,-1
 8003c48:	10c00416 	blt	r2,r3,8003c5c <snprintf+0xb0>
 8003c4c:	dfc01b17 	ldw	ra,108(sp)
 8003c50:	dc001a17 	ldw	r16,104(sp)
 8003c54:	dec01d04 	addi	sp,sp,116
 8003c58:	f800283a 	ret
 8003c5c:	00c022c4 	movi	r3,139
 8003c60:	80c00015 	stw	r3,0(r16)
 8003c64:	dfc01b17 	ldw	ra,108(sp)
 8003c68:	dc001a17 	ldw	r16,104(sp)
 8003c6c:	dec01d04 	addi	sp,sp,116
 8003c70:	f800283a 	ret
 8003c74:	00c022c4 	movi	r3,139
 8003c78:	80c00015 	stw	r3,0(r16)
 8003c7c:	003fe306 	br	8003c0c <__alt_data_end+0xfc003c0c>
 8003c80:	008022c4 	movi	r2,139
 8003c84:	80800015 	stw	r2,0(r16)
 8003c88:	00bfffc4 	movi	r2,-1
 8003c8c:	003fef06 	br	8003c4c <__alt_data_end+0xfc003c4c>

08003c90 <strcat>:
 8003c90:	defffe04 	addi	sp,sp,-8
 8003c94:	dc000015 	stw	r16,0(sp)
 8003c98:	dfc00115 	stw	ra,4(sp)
 8003c9c:	208000cc 	andi	r2,r4,3
 8003ca0:	2021883a 	mov	r16,r4
 8003ca4:	1000111e 	bne	r2,zero,8003cec <strcat+0x5c>
 8003ca8:	20800017 	ldw	r2,0(r4)
 8003cac:	027fbff4 	movhi	r9,65279
 8003cb0:	4a7fbfc4 	addi	r9,r9,-257
 8003cb4:	0086303a 	nor	r3,zero,r2
 8003cb8:	02202074 	movhi	r8,32897
 8003cbc:	1245883a 	add	r2,r2,r9
 8003cc0:	42202004 	addi	r8,r8,-32640
 8003cc4:	10c4703a 	and	r2,r2,r3
 8003cc8:	1204703a 	and	r2,r2,r8
 8003ccc:	1000071e 	bne	r2,zero,8003cec <strcat+0x5c>
 8003cd0:	21000104 	addi	r4,r4,4
 8003cd4:	21800017 	ldw	r6,0(r4)
 8003cd8:	324f883a 	add	r7,r6,r9
 8003cdc:	018c303a 	nor	r6,zero,r6
 8003ce0:	398c703a 	and	r6,r7,r6
 8003ce4:	320c703a 	and	r6,r6,r8
 8003ce8:	303ff926 	beq	r6,zero,8003cd0 <__alt_data_end+0xfc003cd0>
 8003cec:	20800007 	ldb	r2,0(r4)
 8003cf0:	10000326 	beq	r2,zero,8003d00 <strcat+0x70>
 8003cf4:	21000044 	addi	r4,r4,1
 8003cf8:	21800007 	ldb	r6,0(r4)
 8003cfc:	303ffd1e 	bne	r6,zero,8003cf4 <__alt_data_end+0xfc003cf4>
 8003d00:	8003dbc0 	call	8003dbc <strcpy>
 8003d04:	8005883a 	mov	r2,r16
 8003d08:	dfc00117 	ldw	ra,4(sp)
 8003d0c:	dc000017 	ldw	r16,0(sp)
 8003d10:	dec00204 	addi	sp,sp,8
 8003d14:	f800283a 	ret

08003d18 <strcmp>:
 8003d18:	2144b03a 	or	r2,r4,r5
 8003d1c:	108000cc 	andi	r2,r2,3
 8003d20:	1000171e 	bne	r2,zero,8003d80 <strcmp+0x68>
 8003d24:	20800017 	ldw	r2,0(r4)
 8003d28:	28c00017 	ldw	r3,0(r5)
 8003d2c:	10c0141e 	bne	r2,r3,8003d80 <strcmp+0x68>
 8003d30:	027fbff4 	movhi	r9,65279
 8003d34:	4a7fbfc4 	addi	r9,r9,-257
 8003d38:	0086303a 	nor	r3,zero,r2
 8003d3c:	02202074 	movhi	r8,32897
 8003d40:	1245883a 	add	r2,r2,r9
 8003d44:	42202004 	addi	r8,r8,-32640
 8003d48:	10c4703a 	and	r2,r2,r3
 8003d4c:	1204703a 	and	r2,r2,r8
 8003d50:	10000226 	beq	r2,zero,8003d5c <strcmp+0x44>
 8003d54:	00001706 	br	8003db4 <strcmp+0x9c>
 8003d58:	1000161e 	bne	r2,zero,8003db4 <strcmp+0x9c>
 8003d5c:	21000104 	addi	r4,r4,4
 8003d60:	20c00017 	ldw	r3,0(r4)
 8003d64:	29400104 	addi	r5,r5,4
 8003d68:	29800017 	ldw	r6,0(r5)
 8003d6c:	1a4f883a 	add	r7,r3,r9
 8003d70:	00c4303a 	nor	r2,zero,r3
 8003d74:	3884703a 	and	r2,r7,r2
 8003d78:	1204703a 	and	r2,r2,r8
 8003d7c:	19bff626 	beq	r3,r6,8003d58 <__alt_data_end+0xfc003d58>
 8003d80:	20800007 	ldb	r2,0(r4)
 8003d84:	1000051e 	bne	r2,zero,8003d9c <strcmp+0x84>
 8003d88:	00000606 	br	8003da4 <strcmp+0x8c>
 8003d8c:	21000044 	addi	r4,r4,1
 8003d90:	20800007 	ldb	r2,0(r4)
 8003d94:	29400044 	addi	r5,r5,1
 8003d98:	10000226 	beq	r2,zero,8003da4 <strcmp+0x8c>
 8003d9c:	28c00007 	ldb	r3,0(r5)
 8003da0:	10fffa26 	beq	r2,r3,8003d8c <__alt_data_end+0xfc003d8c>
 8003da4:	20800003 	ldbu	r2,0(r4)
 8003da8:	28c00003 	ldbu	r3,0(r5)
 8003dac:	10c5c83a 	sub	r2,r2,r3
 8003db0:	f800283a 	ret
 8003db4:	0005883a 	mov	r2,zero
 8003db8:	f800283a 	ret

08003dbc <strcpy>:
 8003dbc:	2906b03a 	or	r3,r5,r4
 8003dc0:	18c000cc 	andi	r3,r3,3
 8003dc4:	2005883a 	mov	r2,r4
 8003dc8:	1800161e 	bne	r3,zero,8003e24 <strcpy+0x68>
 8003dcc:	29c00017 	ldw	r7,0(r5)
 8003dd0:	02ffbff4 	movhi	r11,65279
 8003dd4:	5affbfc4 	addi	r11,r11,-257
 8003dd8:	02a02074 	movhi	r10,32897
 8003ddc:	01c8303a 	nor	r4,zero,r7
 8003de0:	3ac7883a 	add	r3,r7,r11
 8003de4:	52a02004 	addi	r10,r10,-32640
 8003de8:	20c6703a 	and	r3,r4,r3
 8003dec:	1a86703a 	and	r3,r3,r10
 8003df0:	18000c1e 	bne	r3,zero,8003e24 <strcpy+0x68>
 8003df4:	1011883a 	mov	r8,r2
 8003df8:	41c00015 	stw	r7,0(r8)
 8003dfc:	29400104 	addi	r5,r5,4
 8003e00:	29c00017 	ldw	r7,0(r5)
 8003e04:	41800104 	addi	r6,r8,4
 8003e08:	3011883a 	mov	r8,r6
 8003e0c:	01d2303a 	nor	r9,zero,r7
 8003e10:	3ac7883a 	add	r3,r7,r11
 8003e14:	48c6703a 	and	r3,r9,r3
 8003e18:	1a86703a 	and	r3,r3,r10
 8003e1c:	183ff626 	beq	r3,zero,8003df8 <__alt_data_end+0xfc003df8>
 8003e20:	00000106 	br	8003e28 <strcpy+0x6c>
 8003e24:	100d883a 	mov	r6,r2
 8003e28:	28c00003 	ldbu	r3,0(r5)
 8003e2c:	31800044 	addi	r6,r6,1
 8003e30:	29400044 	addi	r5,r5,1
 8003e34:	30ffffc5 	stb	r3,-1(r6)
 8003e38:	18c03fcc 	andi	r3,r3,255
 8003e3c:	18c0201c 	xori	r3,r3,128
 8003e40:	18ffe004 	addi	r3,r3,-128
 8003e44:	183ff81e 	bne	r3,zero,8003e28 <__alt_data_end+0xfc003e28>
 8003e48:	f800283a 	ret

08003e4c <strlen>:
 8003e4c:	208000cc 	andi	r2,r4,3
 8003e50:	10002026 	beq	r2,zero,8003ed4 <strlen+0x88>
 8003e54:	20800007 	ldb	r2,0(r4)
 8003e58:	10002026 	beq	r2,zero,8003edc <strlen+0x90>
 8003e5c:	2005883a 	mov	r2,r4
 8003e60:	00000206 	br	8003e6c <strlen+0x20>
 8003e64:	10c00007 	ldb	r3,0(r2)
 8003e68:	18001826 	beq	r3,zero,8003ecc <strlen+0x80>
 8003e6c:	10800044 	addi	r2,r2,1
 8003e70:	10c000cc 	andi	r3,r2,3
 8003e74:	183ffb1e 	bne	r3,zero,8003e64 <__alt_data_end+0xfc003e64>
 8003e78:	10c00017 	ldw	r3,0(r2)
 8003e7c:	01ffbff4 	movhi	r7,65279
 8003e80:	39ffbfc4 	addi	r7,r7,-257
 8003e84:	00ca303a 	nor	r5,zero,r3
 8003e88:	01a02074 	movhi	r6,32897
 8003e8c:	19c7883a 	add	r3,r3,r7
 8003e90:	31a02004 	addi	r6,r6,-32640
 8003e94:	1946703a 	and	r3,r3,r5
 8003e98:	1986703a 	and	r3,r3,r6
 8003e9c:	1800091e 	bne	r3,zero,8003ec4 <strlen+0x78>
 8003ea0:	10800104 	addi	r2,r2,4
 8003ea4:	10c00017 	ldw	r3,0(r2)
 8003ea8:	19cb883a 	add	r5,r3,r7
 8003eac:	00c6303a 	nor	r3,zero,r3
 8003eb0:	28c6703a 	and	r3,r5,r3
 8003eb4:	1986703a 	and	r3,r3,r6
 8003eb8:	183ff926 	beq	r3,zero,8003ea0 <__alt_data_end+0xfc003ea0>
 8003ebc:	00000106 	br	8003ec4 <strlen+0x78>
 8003ec0:	10800044 	addi	r2,r2,1
 8003ec4:	10c00007 	ldb	r3,0(r2)
 8003ec8:	183ffd1e 	bne	r3,zero,8003ec0 <__alt_data_end+0xfc003ec0>
 8003ecc:	1105c83a 	sub	r2,r2,r4
 8003ed0:	f800283a 	ret
 8003ed4:	2005883a 	mov	r2,r4
 8003ed8:	003fe706 	br	8003e78 <__alt_data_end+0xfc003e78>
 8003edc:	0005883a 	mov	r2,zero
 8003ee0:	f800283a 	ret

08003ee4 <___svfprintf_internal_r>:
 8003ee4:	deffb504 	addi	sp,sp,-300
 8003ee8:	dfc04a15 	stw	ra,296(sp)
 8003eec:	dd804715 	stw	r22,284(sp)
 8003ef0:	d9002f15 	stw	r4,188(sp)
 8003ef4:	282d883a 	mov	r22,r5
 8003ef8:	d9802915 	stw	r6,164(sp)
 8003efc:	d9c02d15 	stw	r7,180(sp)
 8003f00:	df004915 	stw	fp,292(sp)
 8003f04:	ddc04815 	stw	r23,288(sp)
 8003f08:	dd404615 	stw	r21,280(sp)
 8003f0c:	dd004515 	stw	r20,276(sp)
 8003f10:	dcc04415 	stw	r19,272(sp)
 8003f14:	dc804315 	stw	r18,268(sp)
 8003f18:	dc404215 	stw	r17,264(sp)
 8003f1c:	dc004115 	stw	r16,260(sp)
 8003f20:	800abd40 	call	800abd4 <_localeconv_r>
 8003f24:	10800017 	ldw	r2,0(r2)
 8003f28:	1009883a 	mov	r4,r2
 8003f2c:	d8803515 	stw	r2,212(sp)
 8003f30:	8003e4c0 	call	8003e4c <strlen>
 8003f34:	d8803915 	stw	r2,228(sp)
 8003f38:	b080030b 	ldhu	r2,12(r22)
 8003f3c:	1080200c 	andi	r2,r2,128
 8003f40:	10000226 	beq	r2,zero,8003f4c <___svfprintf_internal_r+0x68>
 8003f44:	b0800417 	ldw	r2,16(r22)
 8003f48:	10067426 	beq	r2,zero,800591c <___svfprintf_internal_r+0x1a38>
 8003f4c:	d9001dc4 	addi	r4,sp,119
 8003f50:	ddc01e04 	addi	r23,sp,120
 8003f54:	d9400404 	addi	r5,sp,16
 8003f58:	05020074 	movhi	r20,2049
 8003f5c:	b905c83a 	sub	r2,r23,r4
 8003f60:	a51b5484 	addi	r20,r20,27986
 8003f64:	d9002815 	stw	r4,160(sp)
 8003f68:	d9401e15 	stw	r5,120(sp)
 8003f6c:	d8002015 	stw	zero,128(sp)
 8003f70:	d8001f15 	stw	zero,124(sp)
 8003f74:	d8003315 	stw	zero,204(sp)
 8003f78:	d8003715 	stw	zero,220(sp)
 8003f7c:	d8003815 	stw	zero,224(sp)
 8003f80:	d8003b15 	stw	zero,236(sp)
 8003f84:	d8003a15 	stw	zero,232(sp)
 8003f88:	d8003015 	stw	zero,192(sp)
 8003f8c:	2811883a 	mov	r8,r5
 8003f90:	d8803d15 	stw	r2,244(sp)
 8003f94:	d8c02917 	ldw	r3,164(sp)
 8003f98:	18800007 	ldb	r2,0(r3)
 8003f9c:	1001fa26 	beq	r2,zero,8004788 <___svfprintf_internal_r+0x8a4>
 8003fa0:	00c00944 	movi	r3,37
 8003fa4:	dc002917 	ldw	r16,164(sp)
 8003fa8:	10c0021e 	bne	r2,r3,8003fb4 <___svfprintf_internal_r+0xd0>
 8003fac:	00001606 	br	8004008 <___svfprintf_internal_r+0x124>
 8003fb0:	10c08526 	beq	r2,r3,80041c8 <___svfprintf_internal_r+0x2e4>
 8003fb4:	84000044 	addi	r16,r16,1
 8003fb8:	80800007 	ldb	r2,0(r16)
 8003fbc:	103ffc1e 	bne	r2,zero,8003fb0 <__alt_data_end+0xfc003fb0>
 8003fc0:	d9002917 	ldw	r4,164(sp)
 8003fc4:	8123c83a 	sub	r17,r16,r4
 8003fc8:	88000f26 	beq	r17,zero,8004008 <___svfprintf_internal_r+0x124>
 8003fcc:	d8802917 	ldw	r2,164(sp)
 8003fd0:	d8c02017 	ldw	r3,128(sp)
 8003fd4:	44400115 	stw	r17,4(r8)
 8003fd8:	40800015 	stw	r2,0(r8)
 8003fdc:	d8801f17 	ldw	r2,124(sp)
 8003fe0:	1c47883a 	add	r3,r3,r17
 8003fe4:	d8c02015 	stw	r3,128(sp)
 8003fe8:	10800044 	addi	r2,r2,1
 8003fec:	d8801f15 	stw	r2,124(sp)
 8003ff0:	00c001c4 	movi	r3,7
 8003ff4:	18807716 	blt	r3,r2,80041d4 <___svfprintf_internal_r+0x2f0>
 8003ff8:	42000204 	addi	r8,r8,8
 8003ffc:	d8c03017 	ldw	r3,192(sp)
 8004000:	1c47883a 	add	r3,r3,r17
 8004004:	d8c03015 	stw	r3,192(sp)
 8004008:	80800007 	ldb	r2,0(r16)
 800400c:	10007826 	beq	r2,zero,80041f0 <___svfprintf_internal_r+0x30c>
 8004010:	80800044 	addi	r2,r16,1
 8004014:	84000047 	ldb	r16,1(r16)
 8004018:	0027883a 	mov	r19,zero
 800401c:	0039883a 	mov	fp,zero
 8004020:	dcc02a05 	stb	r19,168(sp)
 8004024:	d8002785 	stb	zero,158(sp)
 8004028:	027fffc4 	movi	r9,-1
 800402c:	d8002e15 	stw	zero,184(sp)
 8004030:	04401604 	movi	r17,88
 8004034:	04800244 	movi	r18,9
 8004038:	da002915 	stw	r8,164(sp)
 800403c:	e027883a 	mov	r19,fp
 8004040:	17000044 	addi	fp,r2,1
 8004044:	80bff804 	addi	r2,r16,-32
 8004048:	88830036 	bltu	r17,r2,8004c4c <___svfprintf_internal_r+0xd68>
 800404c:	100490ba 	slli	r2,r2,2
 8004050:	01020034 	movhi	r4,2048
 8004054:	21101904 	addi	r4,r4,16484
 8004058:	1105883a 	add	r2,r2,r4
 800405c:	10800017 	ldw	r2,0(r2)
 8004060:	1000683a 	jmp	r2
 8004064:	08004a90 	cmplti	zero,at,298
 8004068:	08004c4c 	andi	zero,at,305
 800406c:	08004c4c 	andi	zero,at,305
 8004070:	08004aac 	andhi	zero,at,298
 8004074:	08004c4c 	andi	zero,at,305
 8004078:	08004c4c 	andi	zero,at,305
 800407c:	08004c4c 	andi	zero,at,305
 8004080:	08004c4c 	andi	zero,at,305
 8004084:	08004c4c 	andi	zero,at,305
 8004088:	08004c4c 	andi	zero,at,305
 800408c:	08004b98 	cmpnei	zero,at,302
 8004090:	08004bc0 	call	8004bc <__alt_mem_sdram_controller-0x77ffb44>
 8004094:	08004c4c 	andi	zero,at,305
 8004098:	08004250 	cmplti	zero,at,265
 800409c:	08004260 	cmpeqi	zero,at,265
 80040a0:	08004c4c 	andi	zero,at,305
 80040a4:	080042b0 	cmpltui	zero,at,266
 80040a8:	080042c0 	call	80042c <__alt_mem_sdram_controller-0x77ffbd4>
 80040ac:	080042c0 	call	80042c <__alt_mem_sdram_controller-0x77ffbd4>
 80040b0:	080042c0 	call	80042c <__alt_mem_sdram_controller-0x77ffbd4>
 80040b4:	080042c0 	call	80042c <__alt_mem_sdram_controller-0x77ffbd4>
 80040b8:	080042c0 	call	80042c <__alt_mem_sdram_controller-0x77ffbd4>
 80040bc:	080042c0 	call	80042c <__alt_mem_sdram_controller-0x77ffbd4>
 80040c0:	080042c0 	call	80042c <__alt_mem_sdram_controller-0x77ffbd4>
 80040c4:	080042c0 	call	80042c <__alt_mem_sdram_controller-0x77ffbd4>
 80040c8:	080042c0 	call	80042c <__alt_mem_sdram_controller-0x77ffbd4>
 80040cc:	08004c4c 	andi	zero,at,305
 80040d0:	08004c4c 	andi	zero,at,305
 80040d4:	08004c4c 	andi	zero,at,305
 80040d8:	08004c4c 	andi	zero,at,305
 80040dc:	08004c4c 	andi	zero,at,305
 80040e0:	08004c4c 	andi	zero,at,305
 80040e4:	08004c4c 	andi	zero,at,305
 80040e8:	08004c4c 	andi	zero,at,305
 80040ec:	08004c4c 	andi	zero,at,305
 80040f0:	08004c4c 	andi	zero,at,305
 80040f4:	08004304 	addi	zero,at,268
 80040f8:	08004790 	cmplti	zero,at,286
 80040fc:	08004c4c 	andi	zero,at,305
 8004100:	08004790 	cmplti	zero,at,286
 8004104:	08004c4c 	andi	zero,at,305
 8004108:	08004c4c 	andi	zero,at,305
 800410c:	08004c4c 	andi	zero,at,305
 8004110:	08004c4c 	andi	zero,at,305
 8004114:	08004838 	rdprs	zero,at,288
 8004118:	08004c4c 	andi	zero,at,305
 800411c:	08004c4c 	andi	zero,at,305
 8004120:	08004848 	cmpgei	zero,at,289
 8004124:	08004c4c 	andi	zero,at,305
 8004128:	08004c4c 	andi	zero,at,305
 800412c:	08004c4c 	andi	zero,at,305
 8004130:	08004c4c 	andi	zero,at,305
 8004134:	08004c4c 	andi	zero,at,305
 8004138:	08004888 	cmpgei	zero,at,290
 800413c:	08004c4c 	andi	zero,at,305
 8004140:	08004c4c 	andi	zero,at,305
 8004144:	080049dc 	xori	zero,at,295
 8004148:	08004c4c 	andi	zero,at,305
 800414c:	08004c4c 	andi	zero,at,305
 8004150:	08004c4c 	andi	zero,at,305
 8004154:	08004c4c 	andi	zero,at,305
 8004158:	08004c4c 	andi	zero,at,305
 800415c:	08004c4c 	andi	zero,at,305
 8004160:	08004c4c 	andi	zero,at,305
 8004164:	08004c4c 	andi	zero,at,305
 8004168:	08004c4c 	andi	zero,at,305
 800416c:	08004c4c 	andi	zero,at,305
 8004170:	08004a44 	addi	zero,at,297
 8004174:	08004908 	cmpgei	zero,at,292
 8004178:	08004790 	cmplti	zero,at,286
 800417c:	08004790 	cmplti	zero,at,286
 8004180:	08004790 	cmplti	zero,at,286
 8004184:	08004974 	orhi	zero,at,293
 8004188:	08004908 	cmpgei	zero,at,292
 800418c:	08004c4c 	andi	zero,at,305
 8004190:	08004c4c 	andi	zero,at,305
 8004194:	08004984 	addi	zero,at,294
 8004198:	08004c4c 	andi	zero,at,305
 800419c:	0800499c 	xori	zero,at,294
 80041a0:	08004c10 	cmplti	zero,at,304
 80041a4:	080048bc 	xorhi	zero,at,290
 80041a8:	08004b88 	cmpgei	zero,at,302
 80041ac:	08004c4c 	andi	zero,at,305
 80041b0:	08004abc 	xorhi	zero,at,298
 80041b4:	08004c4c 	andi	zero,at,305
 80041b8:	08004bd4 	ori	zero,at,303
 80041bc:	08004c4c 	andi	zero,at,305
 80041c0:	08004c4c 	andi	zero,at,305
 80041c4:	08004b3c 	xorhi	zero,at,300
 80041c8:	d9402917 	ldw	r5,164(sp)
 80041cc:	8163c83a 	sub	r17,r16,r5
 80041d0:	003f7d06 	br	8003fc8 <__alt_data_end+0xfc003fc8>
 80041d4:	d9002f17 	ldw	r4,188(sp)
 80041d8:	b00b883a 	mov	r5,r22
 80041dc:	b80d883a 	mov	r6,r23
 80041e0:	800c8d40 	call	800c8d4 <__ssprint_r>
 80041e4:	1000081e 	bne	r2,zero,8004208 <___svfprintf_internal_r+0x324>
 80041e8:	da000404 	addi	r8,sp,16
 80041ec:	003f8306 	br	8003ffc <__alt_data_end+0xfc003ffc>
 80041f0:	d8802017 	ldw	r2,128(sp)
 80041f4:	10000426 	beq	r2,zero,8004208 <___svfprintf_internal_r+0x324>
 80041f8:	d9002f17 	ldw	r4,188(sp)
 80041fc:	b00b883a 	mov	r5,r22
 8004200:	d9801e04 	addi	r6,sp,120
 8004204:	800c8d40 	call	800c8d4 <__ssprint_r>
 8004208:	b080030b 	ldhu	r2,12(r22)
 800420c:	1080100c 	andi	r2,r2,64
 8004210:	10000d1e 	bne	r2,zero,8004248 <___svfprintf_internal_r+0x364>
 8004214:	d8803017 	ldw	r2,192(sp)
 8004218:	dfc04a17 	ldw	ra,296(sp)
 800421c:	df004917 	ldw	fp,292(sp)
 8004220:	ddc04817 	ldw	r23,288(sp)
 8004224:	dd804717 	ldw	r22,284(sp)
 8004228:	dd404617 	ldw	r21,280(sp)
 800422c:	dd004517 	ldw	r20,276(sp)
 8004230:	dcc04417 	ldw	r19,272(sp)
 8004234:	dc804317 	ldw	r18,268(sp)
 8004238:	dc404217 	ldw	r17,264(sp)
 800423c:	dc004117 	ldw	r16,260(sp)
 8004240:	dec04b04 	addi	sp,sp,300
 8004244:	f800283a 	ret
 8004248:	00bfffc4 	movi	r2,-1
 800424c:	003ff206 	br	8004218 <__alt_data_end+0xfc004218>
 8004250:	e005883a 	mov	r2,fp
 8004254:	9cc00114 	ori	r19,r19,4
 8004258:	e4000007 	ldb	r16,0(fp)
 800425c:	003f7806 	br	8004040 <__alt_data_end+0xfc004040>
 8004260:	e4000007 	ldb	r16,0(fp)
 8004264:	01000a84 	movi	r4,42
 8004268:	e0800044 	addi	r2,fp,1
 800426c:	81071026 	beq	r16,r4,8005eb0 <___svfprintf_internal_r+0x1fcc>
 8004270:	857ff404 	addi	r21,r16,-48
 8004274:	1039883a 	mov	fp,r2
 8004278:	0013883a 	mov	r9,zero
 800427c:	957f7136 	bltu	r18,r21,8004044 <__alt_data_end+0xfc004044>
 8004280:	0009883a 	mov	r4,zero
 8004284:	01400284 	movi	r5,10
 8004288:	80027f80 	call	80027f8 <__mulsi3>
 800428c:	e4000007 	ldb	r16,0(fp)
 8004290:	a889883a 	add	r4,r21,r2
 8004294:	e7000044 	addi	fp,fp,1
 8004298:	857ff404 	addi	r21,r16,-48
 800429c:	957ff92e 	bgeu	r18,r21,8004284 <__alt_data_end+0xfc004284>
 80042a0:	2013883a 	mov	r9,r4
 80042a4:	203f670e 	bge	r4,zero,8004044 <__alt_data_end+0xfc004044>
 80042a8:	027fffc4 	movi	r9,-1
 80042ac:	003f6506 	br	8004044 <__alt_data_end+0xfc004044>
 80042b0:	9cc02014 	ori	r19,r19,128
 80042b4:	e005883a 	mov	r2,fp
 80042b8:	e4000007 	ldb	r16,0(fp)
 80042bc:	003f6006 	br	8004040 <__alt_data_end+0xfc004040>
 80042c0:	857ff404 	addi	r21,r16,-48
 80042c4:	d8002e15 	stw	zero,184(sp)
 80042c8:	e021883a 	mov	r16,fp
 80042cc:	0009883a 	mov	r4,zero
 80042d0:	da402b15 	stw	r9,172(sp)
 80042d4:	01400284 	movi	r5,10
 80042d8:	80027f80 	call	80027f8 <__mulsi3>
 80042dc:	81400007 	ldb	r5,0(r16)
 80042e0:	1549883a 	add	r4,r2,r21
 80042e4:	e7000044 	addi	fp,fp,1
 80042e8:	2d7ff404 	addi	r21,r5,-48
 80042ec:	e021883a 	mov	r16,fp
 80042f0:	957ff82e 	bgeu	r18,r21,80042d4 <__alt_data_end+0xfc0042d4>
 80042f4:	2821883a 	mov	r16,r5
 80042f8:	d9002e15 	stw	r4,184(sp)
 80042fc:	da402b17 	ldw	r9,172(sp)
 8004300:	003f5006 	br	8004044 <__alt_data_end+0xfc004044>
 8004304:	da002917 	ldw	r8,164(sp)
 8004308:	df002915 	stw	fp,164(sp)
 800430c:	9839883a 	mov	fp,r19
 8004310:	dcc02a03 	ldbu	r19,168(sp)
 8004314:	e7000414 	ori	fp,fp,16
 8004318:	e080080c 	andi	r2,fp,32
 800431c:	dcc02785 	stb	r19,158(sp)
 8004320:	d8c02d17 	ldw	r3,180(sp)
 8004324:	10018026 	beq	r2,zero,8004928 <___svfprintf_internal_r+0xa44>
 8004328:	d9002d17 	ldw	r4,180(sp)
 800432c:	18800117 	ldw	r2,4(r3)
 8004330:	1c800017 	ldw	r18,0(r3)
 8004334:	21000204 	addi	r4,r4,8
 8004338:	d9002d15 	stw	r4,180(sp)
 800433c:	102b883a 	mov	r21,r2
 8004340:	10018216 	blt	r2,zero,800494c <___svfprintf_internal_r+0xa68>
 8004344:	dcc02783 	ldbu	r19,158(sp)
 8004348:	da403215 	stw	r9,200(sp)
 800434c:	00800044 	movi	r2,1
 8004350:	9546b03a 	or	r3,r18,r21
 8004354:	48000216 	blt	r9,zero,8004360 <___svfprintf_internal_r+0x47c>
 8004358:	013fdfc4 	movi	r4,-129
 800435c:	e138703a 	and	fp,fp,r4
 8004360:	1802471e 	bne	r3,zero,8004c80 <___svfprintf_internal_r+0xd9c>
 8004364:	48035226 	beq	r9,zero,80050b0 <___svfprintf_internal_r+0x11cc>
 8004368:	10803fcc 	andi	r2,r2,255
 800436c:	00c00044 	movi	r3,1
 8004370:	10c26626 	beq	r2,r3,8004d0c <___svfprintf_internal_r+0xe28>
 8004374:	00c00084 	movi	r3,2
 8004378:	10c2e826 	beq	r2,r3,8004f1c <___svfprintf_internal_r+0x1038>
 800437c:	b807883a 	mov	r3,r23
 8004380:	9008d0fa 	srli	r4,r18,3
 8004384:	a80a977a 	slli	r5,r21,29
 8004388:	a82ad0fa 	srli	r21,r21,3
 800438c:	948001cc 	andi	r18,r18,7
 8004390:	90800c04 	addi	r2,r18,48
 8004394:	18ffffc4 	addi	r3,r3,-1
 8004398:	2924b03a 	or	r18,r5,r4
 800439c:	18800005 	stb	r2,0(r3)
 80043a0:	9548b03a 	or	r4,r18,r21
 80043a4:	203ff61e 	bne	r4,zero,8004380 <__alt_data_end+0xfc004380>
 80043a8:	e100004c 	andi	r4,fp,1
 80043ac:	d8c03115 	stw	r3,196(sp)
 80043b0:	2002e826 	beq	r4,zero,8004f54 <___svfprintf_internal_r+0x1070>
 80043b4:	10803fcc 	andi	r2,r2,255
 80043b8:	1080201c 	xori	r2,r2,128
 80043bc:	10bfe004 	addi	r2,r2,-128
 80043c0:	01000c04 	movi	r4,48
 80043c4:	11056d26 	beq	r2,r4,800597c <___svfprintf_internal_r+0x1a98>
 80043c8:	d9403117 	ldw	r5,196(sp)
 80043cc:	193fffc5 	stb	r4,-1(r3)
 80043d0:	297fffc4 	addi	r5,r5,-1
 80043d4:	d9403115 	stw	r5,196(sp)
 80043d8:	b963c83a 	sub	r17,r23,r5
 80043dc:	8805883a 	mov	r2,r17
 80043e0:	8a40010e 	bge	r17,r9,80043e8 <___svfprintf_internal_r+0x504>
 80043e4:	4805883a 	mov	r2,r9
 80043e8:	d8802a15 	stw	r2,168(sp)
 80043ec:	d8003415 	stw	zero,208(sp)
 80043f0:	98803fcc 	andi	r2,r19,255
 80043f4:	1080201c 	xori	r2,r2,128
 80043f8:	10bfe004 	addi	r2,r2,-128
 80043fc:	10000326 	beq	r2,zero,800440c <___svfprintf_internal_r+0x528>
 8004400:	d8c02a17 	ldw	r3,168(sp)
 8004404:	18c00044 	addi	r3,r3,1
 8004408:	d8c02a15 	stw	r3,168(sp)
 800440c:	e0c0008c 	andi	r3,fp,2
 8004410:	d8c02b15 	stw	r3,172(sp)
 8004414:	18000326 	beq	r3,zero,8004424 <___svfprintf_internal_r+0x540>
 8004418:	d8c02a17 	ldw	r3,168(sp)
 800441c:	18c00084 	addi	r3,r3,2
 8004420:	d8c02a15 	stw	r3,168(sp)
 8004424:	e0c0210c 	andi	r3,fp,132
 8004428:	d8c02c15 	stw	r3,176(sp)
 800442c:	1802121e 	bne	r3,zero,8004c78 <___svfprintf_internal_r+0xd94>
 8004430:	d9002e17 	ldw	r4,184(sp)
 8004434:	d8c02a17 	ldw	r3,168(sp)
 8004438:	20ebc83a 	sub	r21,r4,r3
 800443c:	05420e0e 	bge	zero,r21,8004c78 <___svfprintf_internal_r+0xd94>
 8004440:	02400404 	movi	r9,16
 8004444:	d8c02017 	ldw	r3,128(sp)
 8004448:	d8801f17 	ldw	r2,124(sp)
 800444c:	4d45aa0e 	bge	r9,r21,8005af8 <___svfprintf_internal_r+0x1c14>
 8004450:	01420074 	movhi	r5,2049
 8004454:	a809883a 	mov	r4,r21
 8004458:	295b5884 	addi	r5,r5,28002
 800445c:	dc003c15 	stw	r16,240(sp)
 8004460:	882b883a 	mov	r21,r17
 8004464:	d9403615 	stw	r5,216(sp)
 8004468:	4827883a 	mov	r19,r9
 800446c:	048001c4 	movi	r18,7
 8004470:	dc002f17 	ldw	r16,188(sp)
 8004474:	2023883a 	mov	r17,r4
 8004478:	00000306 	br	8004488 <___svfprintf_internal_r+0x5a4>
 800447c:	8c7ffc04 	addi	r17,r17,-16
 8004480:	42000204 	addi	r8,r8,8
 8004484:	9c40130e 	bge	r19,r17,80044d4 <___svfprintf_internal_r+0x5f0>
 8004488:	01020074 	movhi	r4,2049
 800448c:	18c00404 	addi	r3,r3,16
 8004490:	10800044 	addi	r2,r2,1
 8004494:	211b5884 	addi	r4,r4,28002
 8004498:	41000015 	stw	r4,0(r8)
 800449c:	44c00115 	stw	r19,4(r8)
 80044a0:	d8c02015 	stw	r3,128(sp)
 80044a4:	d8801f15 	stw	r2,124(sp)
 80044a8:	90bff40e 	bge	r18,r2,800447c <__alt_data_end+0xfc00447c>
 80044ac:	8009883a 	mov	r4,r16
 80044b0:	b00b883a 	mov	r5,r22
 80044b4:	b80d883a 	mov	r6,r23
 80044b8:	800c8d40 	call	800c8d4 <__ssprint_r>
 80044bc:	103f521e 	bne	r2,zero,8004208 <__alt_data_end+0xfc004208>
 80044c0:	8c7ffc04 	addi	r17,r17,-16
 80044c4:	d8c02017 	ldw	r3,128(sp)
 80044c8:	d8801f17 	ldw	r2,124(sp)
 80044cc:	da000404 	addi	r8,sp,16
 80044d0:	9c7fed16 	blt	r19,r17,8004488 <__alt_data_end+0xfc004488>
 80044d4:	dc003c17 	ldw	r16,240(sp)
 80044d8:	8809883a 	mov	r4,r17
 80044dc:	a823883a 	mov	r17,r21
 80044e0:	202b883a 	mov	r21,r4
 80044e4:	d9403617 	ldw	r5,216(sp)
 80044e8:	a8c7883a 	add	r3,r21,r3
 80044ec:	10800044 	addi	r2,r2,1
 80044f0:	41400015 	stw	r5,0(r8)
 80044f4:	45400115 	stw	r21,4(r8)
 80044f8:	d8c02015 	stw	r3,128(sp)
 80044fc:	d8801f15 	stw	r2,124(sp)
 8004500:	010001c4 	movi	r4,7
 8004504:	20834416 	blt	r4,r2,8005218 <___svfprintf_internal_r+0x1334>
 8004508:	d8802787 	ldb	r2,158(sp)
 800450c:	42000204 	addi	r8,r8,8
 8004510:	10000c26 	beq	r2,zero,8004544 <___svfprintf_internal_r+0x660>
 8004514:	d8801f17 	ldw	r2,124(sp)
 8004518:	d9002784 	addi	r4,sp,158
 800451c:	18c00044 	addi	r3,r3,1
 8004520:	10800044 	addi	r2,r2,1
 8004524:	41000015 	stw	r4,0(r8)
 8004528:	01000044 	movi	r4,1
 800452c:	41000115 	stw	r4,4(r8)
 8004530:	d8c02015 	stw	r3,128(sp)
 8004534:	d8801f15 	stw	r2,124(sp)
 8004538:	010001c4 	movi	r4,7
 800453c:	2082ee16 	blt	r4,r2,80050f8 <___svfprintf_internal_r+0x1214>
 8004540:	42000204 	addi	r8,r8,8
 8004544:	d8802b17 	ldw	r2,172(sp)
 8004548:	10000c26 	beq	r2,zero,800457c <___svfprintf_internal_r+0x698>
 800454c:	d8801f17 	ldw	r2,124(sp)
 8004550:	d9002704 	addi	r4,sp,156
 8004554:	18c00084 	addi	r3,r3,2
 8004558:	10800044 	addi	r2,r2,1
 800455c:	41000015 	stw	r4,0(r8)
 8004560:	01000084 	movi	r4,2
 8004564:	41000115 	stw	r4,4(r8)
 8004568:	d8c02015 	stw	r3,128(sp)
 800456c:	d8801f15 	stw	r2,124(sp)
 8004570:	010001c4 	movi	r4,7
 8004574:	2082e816 	blt	r4,r2,8005118 <___svfprintf_internal_r+0x1234>
 8004578:	42000204 	addi	r8,r8,8
 800457c:	d9002c17 	ldw	r4,176(sp)
 8004580:	00802004 	movi	r2,128
 8004584:	20823126 	beq	r4,r2,8004e4c <___svfprintf_internal_r+0xf68>
 8004588:	d9403217 	ldw	r5,200(sp)
 800458c:	2c67c83a 	sub	r19,r5,r17
 8004590:	04c02f0e 	bge	zero,r19,8004650 <___svfprintf_internal_r+0x76c>
 8004594:	05400404 	movi	r21,16
 8004598:	d8801f17 	ldw	r2,124(sp)
 800459c:	acc4260e 	bge	r21,r19,8005638 <___svfprintf_internal_r+0x1754>
 80045a0:	01420074 	movhi	r5,2049
 80045a4:	9809883a 	mov	r4,r19
 80045a8:	295b5484 	addi	r5,r5,27986
 80045ac:	dc002c15 	stw	r16,176(sp)
 80045b0:	8827883a 	mov	r19,r17
 80045b4:	d9402b15 	stw	r5,172(sp)
 80045b8:	048001c4 	movi	r18,7
 80045bc:	dc002f17 	ldw	r16,188(sp)
 80045c0:	2023883a 	mov	r17,r4
 80045c4:	00000306 	br	80045d4 <___svfprintf_internal_r+0x6f0>
 80045c8:	8c7ffc04 	addi	r17,r17,-16
 80045cc:	42000204 	addi	r8,r8,8
 80045d0:	ac40110e 	bge	r21,r17,8004618 <___svfprintf_internal_r+0x734>
 80045d4:	18c00404 	addi	r3,r3,16
 80045d8:	10800044 	addi	r2,r2,1
 80045dc:	45000015 	stw	r20,0(r8)
 80045e0:	45400115 	stw	r21,4(r8)
 80045e4:	d8c02015 	stw	r3,128(sp)
 80045e8:	d8801f15 	stw	r2,124(sp)
 80045ec:	90bff60e 	bge	r18,r2,80045c8 <__alt_data_end+0xfc0045c8>
 80045f0:	8009883a 	mov	r4,r16
 80045f4:	b00b883a 	mov	r5,r22
 80045f8:	b80d883a 	mov	r6,r23
 80045fc:	800c8d40 	call	800c8d4 <__ssprint_r>
 8004600:	103f011e 	bne	r2,zero,8004208 <__alt_data_end+0xfc004208>
 8004604:	8c7ffc04 	addi	r17,r17,-16
 8004608:	d8c02017 	ldw	r3,128(sp)
 800460c:	d8801f17 	ldw	r2,124(sp)
 8004610:	da000404 	addi	r8,sp,16
 8004614:	ac7fef16 	blt	r21,r17,80045d4 <__alt_data_end+0xfc0045d4>
 8004618:	dc002c17 	ldw	r16,176(sp)
 800461c:	8809883a 	mov	r4,r17
 8004620:	9823883a 	mov	r17,r19
 8004624:	2027883a 	mov	r19,r4
 8004628:	d9002b17 	ldw	r4,172(sp)
 800462c:	1cc7883a 	add	r3,r3,r19
 8004630:	10800044 	addi	r2,r2,1
 8004634:	41000015 	stw	r4,0(r8)
 8004638:	44c00115 	stw	r19,4(r8)
 800463c:	d8c02015 	stw	r3,128(sp)
 8004640:	d8801f15 	stw	r2,124(sp)
 8004644:	010001c4 	movi	r4,7
 8004648:	2082a316 	blt	r4,r2,80050d8 <___svfprintf_internal_r+0x11f4>
 800464c:	42000204 	addi	r8,r8,8
 8004650:	e080400c 	andi	r2,fp,256
 8004654:	1001b31e 	bne	r2,zero,8004d24 <___svfprintf_internal_r+0xe40>
 8004658:	d8801f17 	ldw	r2,124(sp)
 800465c:	d9403117 	ldw	r5,196(sp)
 8004660:	1c47883a 	add	r3,r3,r17
 8004664:	10800044 	addi	r2,r2,1
 8004668:	41400015 	stw	r5,0(r8)
 800466c:	44400115 	stw	r17,4(r8)
 8004670:	d8c02015 	stw	r3,128(sp)
 8004674:	d8801f15 	stw	r2,124(sp)
 8004678:	010001c4 	movi	r4,7
 800467c:	20827e16 	blt	r4,r2,8005078 <___svfprintf_internal_r+0x1194>
 8004680:	42000204 	addi	r8,r8,8
 8004684:	e080010c 	andi	r2,fp,4
 8004688:	10003226 	beq	r2,zero,8004754 <___svfprintf_internal_r+0x870>
 800468c:	d8802e17 	ldw	r2,184(sp)
 8004690:	d9002a17 	ldw	r4,168(sp)
 8004694:	1121c83a 	sub	r16,r2,r4
 8004698:	04002e0e 	bge	zero,r16,8004754 <___svfprintf_internal_r+0x870>
 800469c:	04400404 	movi	r17,16
 80046a0:	d8801f17 	ldw	r2,124(sp)
 80046a4:	8c05550e 	bge	r17,r16,8005bfc <___svfprintf_internal_r+0x1d18>
 80046a8:	01020074 	movhi	r4,2049
 80046ac:	211b5884 	addi	r4,r4,28002
 80046b0:	d9003615 	stw	r4,216(sp)
 80046b4:	048001c4 	movi	r18,7
 80046b8:	dcc02f17 	ldw	r19,188(sp)
 80046bc:	00000306 	br	80046cc <___svfprintf_internal_r+0x7e8>
 80046c0:	843ffc04 	addi	r16,r16,-16
 80046c4:	42000204 	addi	r8,r8,8
 80046c8:	8c00130e 	bge	r17,r16,8004718 <___svfprintf_internal_r+0x834>
 80046cc:	01420074 	movhi	r5,2049
 80046d0:	18c00404 	addi	r3,r3,16
 80046d4:	10800044 	addi	r2,r2,1
 80046d8:	295b5884 	addi	r5,r5,28002
 80046dc:	41400015 	stw	r5,0(r8)
 80046e0:	44400115 	stw	r17,4(r8)
 80046e4:	d8c02015 	stw	r3,128(sp)
 80046e8:	d8801f15 	stw	r2,124(sp)
 80046ec:	90bff40e 	bge	r18,r2,80046c0 <__alt_data_end+0xfc0046c0>
 80046f0:	9809883a 	mov	r4,r19
 80046f4:	b00b883a 	mov	r5,r22
 80046f8:	b80d883a 	mov	r6,r23
 80046fc:	800c8d40 	call	800c8d4 <__ssprint_r>
 8004700:	103ec11e 	bne	r2,zero,8004208 <__alt_data_end+0xfc004208>
 8004704:	843ffc04 	addi	r16,r16,-16
 8004708:	d8c02017 	ldw	r3,128(sp)
 800470c:	d8801f17 	ldw	r2,124(sp)
 8004710:	da000404 	addi	r8,sp,16
 8004714:	8c3fed16 	blt	r17,r16,80046cc <__alt_data_end+0xfc0046cc>
 8004718:	d9003617 	ldw	r4,216(sp)
 800471c:	1c07883a 	add	r3,r3,r16
 8004720:	10800044 	addi	r2,r2,1
 8004724:	41000015 	stw	r4,0(r8)
 8004728:	44000115 	stw	r16,4(r8)
 800472c:	d8c02015 	stw	r3,128(sp)
 8004730:	d8801f15 	stw	r2,124(sp)
 8004734:	010001c4 	movi	r4,7
 8004738:	2080060e 	bge	r4,r2,8004754 <___svfprintf_internal_r+0x870>
 800473c:	d9002f17 	ldw	r4,188(sp)
 8004740:	b00b883a 	mov	r5,r22
 8004744:	b80d883a 	mov	r6,r23
 8004748:	800c8d40 	call	800c8d4 <__ssprint_r>
 800474c:	103eae1e 	bne	r2,zero,8004208 <__alt_data_end+0xfc004208>
 8004750:	d8c02017 	ldw	r3,128(sp)
 8004754:	df002a17 	ldw	fp,168(sp)
 8004758:	d9402e17 	ldw	r5,184(sp)
 800475c:	e140010e 	bge	fp,r5,8004764 <___svfprintf_internal_r+0x880>
 8004760:	2839883a 	mov	fp,r5
 8004764:	d8803017 	ldw	r2,192(sp)
 8004768:	1705883a 	add	r2,r2,fp
 800476c:	d8803015 	stw	r2,192(sp)
 8004770:	1802491e 	bne	r3,zero,8005098 <___svfprintf_internal_r+0x11b4>
 8004774:	d8c02917 	ldw	r3,164(sp)
 8004778:	d8001f15 	stw	zero,124(sp)
 800477c:	da000404 	addi	r8,sp,16
 8004780:	18800007 	ldb	r2,0(r3)
 8004784:	103e061e 	bne	r2,zero,8003fa0 <__alt_data_end+0xfc003fa0>
 8004788:	dc002917 	ldw	r16,164(sp)
 800478c:	003e1e06 	br	8004008 <__alt_data_end+0xfc004008>
 8004790:	d9002d17 	ldw	r4,180(sp)
 8004794:	d9402d17 	ldw	r5,180(sp)
 8004798:	da002917 	ldw	r8,164(sp)
 800479c:	21000017 	ldw	r4,0(r4)
 80047a0:	29400117 	ldw	r5,4(r5)
 80047a4:	df002915 	stw	fp,164(sp)
 80047a8:	9839883a 	mov	fp,r19
 80047ac:	dcc02a03 	ldbu	r19,168(sp)
 80047b0:	d9003715 	stw	r4,220(sp)
 80047b4:	d9403815 	stw	r5,224(sp)
 80047b8:	da004015 	stw	r8,256(sp)
 80047bc:	da403f15 	stw	r9,252(sp)
 80047c0:	dcc02785 	stb	r19,158(sp)
 80047c4:	800c7240 	call	800c724 <__fpclassifyd>
 80047c8:	d8c02d17 	ldw	r3,180(sp)
 80047cc:	04400044 	movi	r17,1
 80047d0:	da004017 	ldw	r8,256(sp)
 80047d4:	1c800204 	addi	r18,r3,8
 80047d8:	da403f17 	ldw	r9,252(sp)
 80047dc:	d9003717 	ldw	r4,220(sp)
 80047e0:	d9403817 	ldw	r5,224(sp)
 80047e4:	14433e1e 	bne	r2,r17,80054e0 <___svfprintf_internal_r+0x15fc>
 80047e8:	000d883a 	mov	r6,zero
 80047ec:	000f883a 	mov	r7,zero
 80047f0:	8011c1c0 	call	8011c1c <__ledf2>
 80047f4:	da004017 	ldw	r8,256(sp)
 80047f8:	10050c16 	blt	r2,zero,8005c2c <___svfprintf_internal_r+0x1d48>
 80047fc:	dcc02783 	ldbu	r19,158(sp)
 8004800:	008011c4 	movi	r2,71
 8004804:	1404410e 	bge	r2,r16,800590c <___svfprintf_internal_r+0x1a28>
 8004808:	01420074 	movhi	r5,2049
 800480c:	295b4504 	addi	r5,r5,27924
 8004810:	d9403115 	stw	r5,196(sp)
 8004814:	00c000c4 	movi	r3,3
 8004818:	00bfdfc4 	movi	r2,-129
 800481c:	d8c02a15 	stw	r3,168(sp)
 8004820:	e0b8703a 	and	fp,fp,r2
 8004824:	dc802d15 	stw	r18,180(sp)
 8004828:	1823883a 	mov	r17,r3
 800482c:	d8003215 	stw	zero,200(sp)
 8004830:	d8003415 	stw	zero,208(sp)
 8004834:	003eee06 	br	80043f0 <__alt_data_end+0xfc0043f0>
 8004838:	9cc00214 	ori	r19,r19,8
 800483c:	e005883a 	mov	r2,fp
 8004840:	e4000007 	ldb	r16,0(fp)
 8004844:	003dfe06 	br	8004040 <__alt_data_end+0xfc004040>
 8004848:	da002917 	ldw	r8,164(sp)
 800484c:	df002915 	stw	fp,164(sp)
 8004850:	9f000414 	ori	fp,r19,16
 8004854:	e080080c 	andi	r2,fp,32
 8004858:	1000f226 	beq	r2,zero,8004c24 <___svfprintf_internal_r+0xd40>
 800485c:	d9402d17 	ldw	r5,180(sp)
 8004860:	0005883a 	mov	r2,zero
 8004864:	2c800017 	ldw	r18,0(r5)
 8004868:	2d400117 	ldw	r21,4(r5)
 800486c:	29400204 	addi	r5,r5,8
 8004870:	d9402d15 	stw	r5,180(sp)
 8004874:	9546b03a 	or	r3,r18,r21
 8004878:	d8002785 	stb	zero,158(sp)
 800487c:	da403215 	stw	r9,200(sp)
 8004880:	0027883a 	mov	r19,zero
 8004884:	003eb306 	br	8004354 <__alt_data_end+0xfc004354>
 8004888:	da002917 	ldw	r8,164(sp)
 800488c:	df002915 	stw	fp,164(sp)
 8004890:	9f000414 	ori	fp,r19,16
 8004894:	e080080c 	andi	r2,fp,32
 8004898:	1000d326 	beq	r2,zero,8004be8 <___svfprintf_internal_r+0xd04>
 800489c:	d9002d17 	ldw	r4,180(sp)
 80048a0:	00800044 	movi	r2,1
 80048a4:	24800017 	ldw	r18,0(r4)
 80048a8:	25400117 	ldw	r21,4(r4)
 80048ac:	21000204 	addi	r4,r4,8
 80048b0:	d9002d15 	stw	r4,180(sp)
 80048b4:	9546b03a 	or	r3,r18,r21
 80048b8:	003fef06 	br	8004878 <__alt_data_end+0xfc004878>
 80048bc:	d9402d17 	ldw	r5,180(sp)
 80048c0:	00800c04 	movi	r2,48
 80048c4:	d8802705 	stb	r2,156(sp)
 80048c8:	2c800017 	ldw	r18,0(r5)
 80048cc:	00801e04 	movi	r2,120
 80048d0:	d8802745 	stb	r2,157(sp)
 80048d4:	00820074 	movhi	r2,2049
 80048d8:	109b4d04 	addi	r2,r2,27956
 80048dc:	29400104 	addi	r5,r5,4
 80048e0:	da002917 	ldw	r8,164(sp)
 80048e4:	d8803b15 	stw	r2,236(sp)
 80048e8:	df002915 	stw	fp,164(sp)
 80048ec:	002b883a 	mov	r21,zero
 80048f0:	9f000094 	ori	fp,r19,2
 80048f4:	d9402d15 	stw	r5,180(sp)
 80048f8:	00800084 	movi	r2,2
 80048fc:	04001e04 	movi	r16,120
 8004900:	9007883a 	mov	r3,r18
 8004904:	003fdc06 	br	8004878 <__alt_data_end+0xfc004878>
 8004908:	da002917 	ldw	r8,164(sp)
 800490c:	df002915 	stw	fp,164(sp)
 8004910:	9839883a 	mov	fp,r19
 8004914:	dcc02a03 	ldbu	r19,168(sp)
 8004918:	e080080c 	andi	r2,fp,32
 800491c:	d8c02d17 	ldw	r3,180(sp)
 8004920:	dcc02785 	stb	r19,158(sp)
 8004924:	103e801e 	bne	r2,zero,8004328 <__alt_data_end+0xfc004328>
 8004928:	e080040c 	andi	r2,fp,16
 800492c:	10031f26 	beq	r2,zero,80055ac <___svfprintf_internal_r+0x16c8>
 8004930:	1c800017 	ldw	r18,0(r3)
 8004934:	d9402d17 	ldw	r5,180(sp)
 8004938:	902bd7fa 	srai	r21,r18,31
 800493c:	29400104 	addi	r5,r5,4
 8004940:	d9402d15 	stw	r5,180(sp)
 8004944:	a805883a 	mov	r2,r21
 8004948:	103e7e0e 	bge	r2,zero,8004344 <__alt_data_end+0xfc004344>
 800494c:	04a5c83a 	sub	r18,zero,r18
 8004950:	9004c03a 	cmpne	r2,r18,zero
 8004954:	056bc83a 	sub	r21,zero,r21
 8004958:	a8abc83a 	sub	r21,r21,r2
 800495c:	04c00b44 	movi	r19,45
 8004960:	dcc02785 	stb	r19,158(sp)
 8004964:	da403215 	stw	r9,200(sp)
 8004968:	00800044 	movi	r2,1
 800496c:	9546b03a 	or	r3,r18,r21
 8004970:	003e7806 	br	8004354 <__alt_data_end+0xfc004354>
 8004974:	9cc01014 	ori	r19,r19,64
 8004978:	e005883a 	mov	r2,fp
 800497c:	e4000007 	ldb	r16,0(fp)
 8004980:	003daf06 	br	8004040 <__alt_data_end+0xfc004040>
 8004984:	e4000007 	ldb	r16,0(fp)
 8004988:	00801b04 	movi	r2,108
 800498c:	80837726 	beq	r16,r2,800576c <___svfprintf_internal_r+0x1888>
 8004990:	9cc00414 	ori	r19,r19,16
 8004994:	e005883a 	mov	r2,fp
 8004998:	003da906 	br	8004040 <__alt_data_end+0xfc004040>
 800499c:	da002917 	ldw	r8,164(sp)
 80049a0:	df002915 	stw	fp,164(sp)
 80049a4:	9839883a 	mov	fp,r19
 80049a8:	dcc02a03 	ldbu	r19,168(sp)
 80049ac:	e080080c 	andi	r2,fp,32
 80049b0:	dcc02785 	stb	r19,158(sp)
 80049b4:	1002f126 	beq	r2,zero,800557c <___svfprintf_internal_r+0x1698>
 80049b8:	d9402d17 	ldw	r5,180(sp)
 80049bc:	d9003017 	ldw	r4,192(sp)
 80049c0:	28800017 	ldw	r2,0(r5)
 80049c4:	2007d7fa 	srai	r3,r4,31
 80049c8:	29400104 	addi	r5,r5,4
 80049cc:	d9402d15 	stw	r5,180(sp)
 80049d0:	11000015 	stw	r4,0(r2)
 80049d4:	10c00115 	stw	r3,4(r2)
 80049d8:	003d6e06 	br	8003f94 <__alt_data_end+0xfc003f94>
 80049dc:	da002917 	ldw	r8,164(sp)
 80049e0:	df002915 	stw	fp,164(sp)
 80049e4:	9839883a 	mov	fp,r19
 80049e8:	dcc02a03 	ldbu	r19,168(sp)
 80049ec:	01420074 	movhi	r5,2049
 80049f0:	295b4804 	addi	r5,r5,27936
 80049f4:	dcc02785 	stb	r19,158(sp)
 80049f8:	d9403b15 	stw	r5,236(sp)
 80049fc:	e0c0080c 	andi	r3,fp,32
 8004a00:	d8802d17 	ldw	r2,180(sp)
 8004a04:	18005826 	beq	r3,zero,8004b68 <___svfprintf_internal_r+0xc84>
 8004a08:	d9402d17 	ldw	r5,180(sp)
 8004a0c:	14800017 	ldw	r18,0(r2)
 8004a10:	15400117 	ldw	r21,4(r2)
 8004a14:	29400204 	addi	r5,r5,8
 8004a18:	d9402d15 	stw	r5,180(sp)
 8004a1c:	e080004c 	andi	r2,fp,1
 8004a20:	10020626 	beq	r2,zero,800523c <___svfprintf_internal_r+0x1358>
 8004a24:	9546b03a 	or	r3,r18,r21
 8004a28:	1802f326 	beq	r3,zero,80055f8 <___svfprintf_internal_r+0x1714>
 8004a2c:	00800c04 	movi	r2,48
 8004a30:	d8802705 	stb	r2,156(sp)
 8004a34:	dc002745 	stb	r16,157(sp)
 8004a38:	e7000094 	ori	fp,fp,2
 8004a3c:	00800084 	movi	r2,2
 8004a40:	003f8d06 	br	8004878 <__alt_data_end+0xfc004878>
 8004a44:	d8c02d17 	ldw	r3,180(sp)
 8004a48:	d9002d17 	ldw	r4,180(sp)
 8004a4c:	da002917 	ldw	r8,164(sp)
 8004a50:	18800017 	ldw	r2,0(r3)
 8004a54:	21000104 	addi	r4,r4,4
 8004a58:	00c00044 	movi	r3,1
 8004a5c:	df002915 	stw	fp,164(sp)
 8004a60:	d8c02a15 	stw	r3,168(sp)
 8004a64:	9839883a 	mov	fp,r19
 8004a68:	d8002785 	stb	zero,158(sp)
 8004a6c:	d8801405 	stb	r2,80(sp)
 8004a70:	d9002d15 	stw	r4,180(sp)
 8004a74:	1823883a 	mov	r17,r3
 8004a78:	d8c01404 	addi	r3,sp,80
 8004a7c:	d8003215 	stw	zero,200(sp)
 8004a80:	d8003415 	stw	zero,208(sp)
 8004a84:	d8c03115 	stw	r3,196(sp)
 8004a88:	0005883a 	mov	r2,zero
 8004a8c:	003e5f06 	br	800440c <__alt_data_end+0xfc00440c>
 8004a90:	d8802a07 	ldb	r2,168(sp)
 8004a94:	1002c21e 	bne	r2,zero,80055a0 <___svfprintf_internal_r+0x16bc>
 8004a98:	00c00804 	movi	r3,32
 8004a9c:	d8c02a05 	stb	r3,168(sp)
 8004aa0:	e005883a 	mov	r2,fp
 8004aa4:	e4000007 	ldb	r16,0(fp)
 8004aa8:	003d6506 	br	8004040 <__alt_data_end+0xfc004040>
 8004aac:	9cc00054 	ori	r19,r19,1
 8004ab0:	e005883a 	mov	r2,fp
 8004ab4:	e4000007 	ldb	r16,0(fp)
 8004ab8:	003d6106 	br	8004040 <__alt_data_end+0xfc004040>
 8004abc:	d8c02d17 	ldw	r3,180(sp)
 8004ac0:	d9002d17 	ldw	r4,180(sp)
 8004ac4:	da002917 	ldw	r8,164(sp)
 8004ac8:	18c00017 	ldw	r3,0(r3)
 8004acc:	df002915 	stw	fp,164(sp)
 8004ad0:	d8002785 	stb	zero,158(sp)
 8004ad4:	d8c03115 	stw	r3,196(sp)
 8004ad8:	9839883a 	mov	fp,r19
 8004adc:	24800104 	addi	r18,r4,4
 8004ae0:	18043526 	beq	r3,zero,8005bb8 <___svfprintf_internal_r+0x1cd4>
 8004ae4:	d9003117 	ldw	r4,196(sp)
 8004ae8:	4803e016 	blt	r9,zero,8005a6c <___svfprintf_internal_r+0x1b88>
 8004aec:	480d883a 	mov	r6,r9
 8004af0:	000b883a 	mov	r5,zero
 8004af4:	da004015 	stw	r8,256(sp)
 8004af8:	da403f15 	stw	r9,252(sp)
 8004afc:	800adc00 	call	800adc0 <memchr>
 8004b00:	da004017 	ldw	r8,256(sp)
 8004b04:	da403f17 	ldw	r9,252(sp)
 8004b08:	10045f26 	beq	r2,zero,8005c88 <___svfprintf_internal_r+0x1da4>
 8004b0c:	d8c03117 	ldw	r3,196(sp)
 8004b10:	10e3c83a 	sub	r17,r2,r3
 8004b14:	4c40010e 	bge	r9,r17,8004b1c <___svfprintf_internal_r+0xc38>
 8004b18:	4823883a 	mov	r17,r9
 8004b1c:	8805883a 	mov	r2,r17
 8004b20:	8803d716 	blt	r17,zero,8005a80 <___svfprintf_internal_r+0x1b9c>
 8004b24:	dcc02783 	ldbu	r19,158(sp)
 8004b28:	d8802a15 	stw	r2,168(sp)
 8004b2c:	dc802d15 	stw	r18,180(sp)
 8004b30:	d8003215 	stw	zero,200(sp)
 8004b34:	d8003415 	stw	zero,208(sp)
 8004b38:	003e2d06 	br	80043f0 <__alt_data_end+0xfc0043f0>
 8004b3c:	da002917 	ldw	r8,164(sp)
 8004b40:	df002915 	stw	fp,164(sp)
 8004b44:	9839883a 	mov	fp,r19
 8004b48:	dcc02a03 	ldbu	r19,168(sp)
 8004b4c:	01020074 	movhi	r4,2049
 8004b50:	211b4d04 	addi	r4,r4,27956
 8004b54:	d9003b15 	stw	r4,236(sp)
 8004b58:	dcc02785 	stb	r19,158(sp)
 8004b5c:	e0c0080c 	andi	r3,fp,32
 8004b60:	d8802d17 	ldw	r2,180(sp)
 8004b64:	183fa81e 	bne	r3,zero,8004a08 <__alt_data_end+0xfc004a08>
 8004b68:	e0c0040c 	andi	r3,fp,16
 8004b6c:	18027126 	beq	r3,zero,8005534 <___svfprintf_internal_r+0x1650>
 8004b70:	d8c02d17 	ldw	r3,180(sp)
 8004b74:	14800017 	ldw	r18,0(r2)
 8004b78:	002b883a 	mov	r21,zero
 8004b7c:	18c00104 	addi	r3,r3,4
 8004b80:	d8c02d15 	stw	r3,180(sp)
 8004b84:	003fa506 	br	8004a1c <__alt_data_end+0xfc004a1c>
 8004b88:	9cc00814 	ori	r19,r19,32
 8004b8c:	e005883a 	mov	r2,fp
 8004b90:	e4000007 	ldb	r16,0(fp)
 8004b94:	003d2a06 	br	8004040 <__alt_data_end+0xfc004040>
 8004b98:	d9002d17 	ldw	r4,180(sp)
 8004b9c:	d9402d17 	ldw	r5,180(sp)
 8004ba0:	21000017 	ldw	r4,0(r4)
 8004ba4:	28c00104 	addi	r3,r5,4
 8004ba8:	d9002e15 	stw	r4,184(sp)
 8004bac:	2002e916 	blt	r4,zero,8005754 <___svfprintf_internal_r+0x1870>
 8004bb0:	d8c02d15 	stw	r3,180(sp)
 8004bb4:	e005883a 	mov	r2,fp
 8004bb8:	e4000007 	ldb	r16,0(fp)
 8004bbc:	003d2006 	br	8004040 <__alt_data_end+0xfc004040>
 8004bc0:	00c00ac4 	movi	r3,43
 8004bc4:	d8c02a05 	stb	r3,168(sp)
 8004bc8:	e005883a 	mov	r2,fp
 8004bcc:	e4000007 	ldb	r16,0(fp)
 8004bd0:	003d1b06 	br	8004040 <__alt_data_end+0xfc004040>
 8004bd4:	da002917 	ldw	r8,164(sp)
 8004bd8:	df002915 	stw	fp,164(sp)
 8004bdc:	9839883a 	mov	fp,r19
 8004be0:	e080080c 	andi	r2,fp,32
 8004be4:	103f2d1e 	bne	r2,zero,800489c <__alt_data_end+0xfc00489c>
 8004be8:	e080040c 	andi	r2,fp,16
 8004bec:	10027826 	beq	r2,zero,80055d0 <___svfprintf_internal_r+0x16ec>
 8004bf0:	d9402d17 	ldw	r5,180(sp)
 8004bf4:	002b883a 	mov	r21,zero
 8004bf8:	00800044 	movi	r2,1
 8004bfc:	2c800017 	ldw	r18,0(r5)
 8004c00:	29400104 	addi	r5,r5,4
 8004c04:	d9402d15 	stw	r5,180(sp)
 8004c08:	9007883a 	mov	r3,r18
 8004c0c:	003f1a06 	br	8004878 <__alt_data_end+0xfc004878>
 8004c10:	da002917 	ldw	r8,164(sp)
 8004c14:	df002915 	stw	fp,164(sp)
 8004c18:	9839883a 	mov	fp,r19
 8004c1c:	e080080c 	andi	r2,fp,32
 8004c20:	103f0e1e 	bne	r2,zero,800485c <__alt_data_end+0xfc00485c>
 8004c24:	e080040c 	andi	r2,fp,16
 8004c28:	10024a26 	beq	r2,zero,8005554 <___svfprintf_internal_r+0x1670>
 8004c2c:	d8802d17 	ldw	r2,180(sp)
 8004c30:	002b883a 	mov	r21,zero
 8004c34:	14800017 	ldw	r18,0(r2)
 8004c38:	10800104 	addi	r2,r2,4
 8004c3c:	d8802d15 	stw	r2,180(sp)
 8004c40:	9007883a 	mov	r3,r18
 8004c44:	0005883a 	mov	r2,zero
 8004c48:	003f0b06 	br	8004878 <__alt_data_end+0xfc004878>
 8004c4c:	da002917 	ldw	r8,164(sp)
 8004c50:	df002915 	stw	fp,164(sp)
 8004c54:	9839883a 	mov	fp,r19
 8004c58:	dcc02a03 	ldbu	r19,168(sp)
 8004c5c:	dcc02785 	stb	r19,158(sp)
 8004c60:	803d6326 	beq	r16,zero,80041f0 <__alt_data_end+0xfc0041f0>
 8004c64:	00c00044 	movi	r3,1
 8004c68:	d8c02a15 	stw	r3,168(sp)
 8004c6c:	dc001405 	stb	r16,80(sp)
 8004c70:	d8002785 	stb	zero,158(sp)
 8004c74:	003f7f06 	br	8004a74 <__alt_data_end+0xfc004a74>
 8004c78:	d8c02017 	ldw	r3,128(sp)
 8004c7c:	003e2406 	br	8004510 <__alt_data_end+0xfc004510>
 8004c80:	10803fcc 	andi	r2,r2,255
 8004c84:	00c00044 	movi	r3,1
 8004c88:	10fdba1e 	bne	r2,r3,8004374 <__alt_data_end+0xfc004374>
 8004c8c:	a800021e 	bne	r21,zero,8004c98 <___svfprintf_internal_r+0xdb4>
 8004c90:	00800244 	movi	r2,9
 8004c94:	14801d2e 	bgeu	r2,r18,8004d0c <___svfprintf_internal_r+0xe28>
 8004c98:	dc002a15 	stw	r16,168(sp)
 8004c9c:	b823883a 	mov	r17,r23
 8004ca0:	9021883a 	mov	r16,r18
 8004ca4:	da002b15 	stw	r8,172(sp)
 8004ca8:	a825883a 	mov	r18,r21
 8004cac:	482b883a 	mov	r21,r9
 8004cb0:	8009883a 	mov	r4,r16
 8004cb4:	900b883a 	mov	r5,r18
 8004cb8:	01800284 	movi	r6,10
 8004cbc:	000f883a 	mov	r7,zero
 8004cc0:	80101540 	call	8010154 <__umoddi3>
 8004cc4:	10800c04 	addi	r2,r2,48
 8004cc8:	8c7fffc4 	addi	r17,r17,-1
 8004ccc:	8009883a 	mov	r4,r16
 8004cd0:	900b883a 	mov	r5,r18
 8004cd4:	01800284 	movi	r6,10
 8004cd8:	000f883a 	mov	r7,zero
 8004cdc:	88800005 	stb	r2,0(r17)
 8004ce0:	800fb140 	call	800fb14 <__udivdi3>
 8004ce4:	1021883a 	mov	r16,r2
 8004ce8:	10c4b03a 	or	r2,r2,r3
 8004cec:	1825883a 	mov	r18,r3
 8004cf0:	103fef1e 	bne	r2,zero,8004cb0 <__alt_data_end+0xfc004cb0>
 8004cf4:	dc403115 	stw	r17,196(sp)
 8004cf8:	dc002a17 	ldw	r16,168(sp)
 8004cfc:	da002b17 	ldw	r8,172(sp)
 8004d00:	a813883a 	mov	r9,r21
 8004d04:	bc63c83a 	sub	r17,r23,r17
 8004d08:	003db406 	br	80043dc <__alt_data_end+0xfc0043dc>
 8004d0c:	94800c04 	addi	r18,r18,48
 8004d10:	d8c01dc4 	addi	r3,sp,119
 8004d14:	dc801dc5 	stb	r18,119(sp)
 8004d18:	dc403d17 	ldw	r17,244(sp)
 8004d1c:	d8c03115 	stw	r3,196(sp)
 8004d20:	003dae06 	br	80043dc <__alt_data_end+0xfc0043dc>
 8004d24:	00801944 	movi	r2,101
 8004d28:	14008c0e 	bge	r2,r16,8004f5c <___svfprintf_internal_r+0x1078>
 8004d2c:	d9003717 	ldw	r4,220(sp)
 8004d30:	d9403817 	ldw	r5,224(sp)
 8004d34:	000d883a 	mov	r6,zero
 8004d38:	000f883a 	mov	r7,zero
 8004d3c:	d8c03e15 	stw	r3,248(sp)
 8004d40:	da004015 	stw	r8,256(sp)
 8004d44:	8011ab80 	call	8011ab8 <__eqdf2>
 8004d48:	d8c03e17 	ldw	r3,248(sp)
 8004d4c:	da004017 	ldw	r8,256(sp)
 8004d50:	1000fc1e 	bne	r2,zero,8005144 <___svfprintf_internal_r+0x1260>
 8004d54:	d8801f17 	ldw	r2,124(sp)
 8004d58:	01020074 	movhi	r4,2049
 8004d5c:	211b5404 	addi	r4,r4,27984
 8004d60:	18c00044 	addi	r3,r3,1
 8004d64:	10800044 	addi	r2,r2,1
 8004d68:	41000015 	stw	r4,0(r8)
 8004d6c:	01000044 	movi	r4,1
 8004d70:	41000115 	stw	r4,4(r8)
 8004d74:	d8c02015 	stw	r3,128(sp)
 8004d78:	d8801f15 	stw	r2,124(sp)
 8004d7c:	010001c4 	movi	r4,7
 8004d80:	20823116 	blt	r4,r2,8005648 <___svfprintf_internal_r+0x1764>
 8004d84:	42000204 	addi	r8,r8,8
 8004d88:	d8802617 	ldw	r2,152(sp)
 8004d8c:	d9403317 	ldw	r5,204(sp)
 8004d90:	11400216 	blt	r2,r5,8004d9c <___svfprintf_internal_r+0xeb8>
 8004d94:	e080004c 	andi	r2,fp,1
 8004d98:	103e3a26 	beq	r2,zero,8004684 <__alt_data_end+0xfc004684>
 8004d9c:	d8803917 	ldw	r2,228(sp)
 8004da0:	d9003517 	ldw	r4,212(sp)
 8004da4:	d9403917 	ldw	r5,228(sp)
 8004da8:	1887883a 	add	r3,r3,r2
 8004dac:	d8801f17 	ldw	r2,124(sp)
 8004db0:	41000015 	stw	r4,0(r8)
 8004db4:	41400115 	stw	r5,4(r8)
 8004db8:	10800044 	addi	r2,r2,1
 8004dbc:	d8c02015 	stw	r3,128(sp)
 8004dc0:	d8801f15 	stw	r2,124(sp)
 8004dc4:	010001c4 	movi	r4,7
 8004dc8:	20826c16 	blt	r4,r2,800577c <___svfprintf_internal_r+0x1898>
 8004dcc:	42000204 	addi	r8,r8,8
 8004dd0:	d8803317 	ldw	r2,204(sp)
 8004dd4:	143fffc4 	addi	r16,r2,-1
 8004dd8:	043e2a0e 	bge	zero,r16,8004684 <__alt_data_end+0xfc004684>
 8004ddc:	04400404 	movi	r17,16
 8004de0:	d8801f17 	ldw	r2,124(sp)
 8004de4:	8c00980e 	bge	r17,r16,8005048 <___svfprintf_internal_r+0x1164>
 8004de8:	01420074 	movhi	r5,2049
 8004dec:	295b5484 	addi	r5,r5,27986
 8004df0:	d9402b15 	stw	r5,172(sp)
 8004df4:	04c001c4 	movi	r19,7
 8004df8:	dc802f17 	ldw	r18,188(sp)
 8004dfc:	00000306 	br	8004e0c <___svfprintf_internal_r+0xf28>
 8004e00:	42000204 	addi	r8,r8,8
 8004e04:	843ffc04 	addi	r16,r16,-16
 8004e08:	8c00920e 	bge	r17,r16,8005054 <___svfprintf_internal_r+0x1170>
 8004e0c:	18c00404 	addi	r3,r3,16
 8004e10:	10800044 	addi	r2,r2,1
 8004e14:	45000015 	stw	r20,0(r8)
 8004e18:	44400115 	stw	r17,4(r8)
 8004e1c:	d8c02015 	stw	r3,128(sp)
 8004e20:	d8801f15 	stw	r2,124(sp)
 8004e24:	98bff60e 	bge	r19,r2,8004e00 <__alt_data_end+0xfc004e00>
 8004e28:	9009883a 	mov	r4,r18
 8004e2c:	b00b883a 	mov	r5,r22
 8004e30:	b80d883a 	mov	r6,r23
 8004e34:	800c8d40 	call	800c8d4 <__ssprint_r>
 8004e38:	103cf31e 	bne	r2,zero,8004208 <__alt_data_end+0xfc004208>
 8004e3c:	d8c02017 	ldw	r3,128(sp)
 8004e40:	d8801f17 	ldw	r2,124(sp)
 8004e44:	da000404 	addi	r8,sp,16
 8004e48:	003fee06 	br	8004e04 <__alt_data_end+0xfc004e04>
 8004e4c:	d9402e17 	ldw	r5,184(sp)
 8004e50:	d8802a17 	ldw	r2,168(sp)
 8004e54:	28a7c83a 	sub	r19,r5,r2
 8004e58:	04fdcb0e 	bge	zero,r19,8004588 <__alt_data_end+0xfc004588>
 8004e5c:	05400404 	movi	r21,16
 8004e60:	d8801f17 	ldw	r2,124(sp)
 8004e64:	acc3840e 	bge	r21,r19,8005c78 <___svfprintf_internal_r+0x1d94>
 8004e68:	01420074 	movhi	r5,2049
 8004e6c:	9809883a 	mov	r4,r19
 8004e70:	295b5484 	addi	r5,r5,27986
 8004e74:	dc002c15 	stw	r16,176(sp)
 8004e78:	8827883a 	mov	r19,r17
 8004e7c:	d9402b15 	stw	r5,172(sp)
 8004e80:	048001c4 	movi	r18,7
 8004e84:	dc002f17 	ldw	r16,188(sp)
 8004e88:	2023883a 	mov	r17,r4
 8004e8c:	00000306 	br	8004e9c <___svfprintf_internal_r+0xfb8>
 8004e90:	8c7ffc04 	addi	r17,r17,-16
 8004e94:	42000204 	addi	r8,r8,8
 8004e98:	ac40110e 	bge	r21,r17,8004ee0 <___svfprintf_internal_r+0xffc>
 8004e9c:	18c00404 	addi	r3,r3,16
 8004ea0:	10800044 	addi	r2,r2,1
 8004ea4:	45000015 	stw	r20,0(r8)
 8004ea8:	45400115 	stw	r21,4(r8)
 8004eac:	d8c02015 	stw	r3,128(sp)
 8004eb0:	d8801f15 	stw	r2,124(sp)
 8004eb4:	90bff60e 	bge	r18,r2,8004e90 <__alt_data_end+0xfc004e90>
 8004eb8:	8009883a 	mov	r4,r16
 8004ebc:	b00b883a 	mov	r5,r22
 8004ec0:	b80d883a 	mov	r6,r23
 8004ec4:	800c8d40 	call	800c8d4 <__ssprint_r>
 8004ec8:	103ccf1e 	bne	r2,zero,8004208 <__alt_data_end+0xfc004208>
 8004ecc:	8c7ffc04 	addi	r17,r17,-16
 8004ed0:	d8c02017 	ldw	r3,128(sp)
 8004ed4:	d8801f17 	ldw	r2,124(sp)
 8004ed8:	da000404 	addi	r8,sp,16
 8004edc:	ac7fef16 	blt	r21,r17,8004e9c <__alt_data_end+0xfc004e9c>
 8004ee0:	dc002c17 	ldw	r16,176(sp)
 8004ee4:	8809883a 	mov	r4,r17
 8004ee8:	9823883a 	mov	r17,r19
 8004eec:	2027883a 	mov	r19,r4
 8004ef0:	d9002b17 	ldw	r4,172(sp)
 8004ef4:	1cc7883a 	add	r3,r3,r19
 8004ef8:	10800044 	addi	r2,r2,1
 8004efc:	41000015 	stw	r4,0(r8)
 8004f00:	44c00115 	stw	r19,4(r8)
 8004f04:	d8c02015 	stw	r3,128(sp)
 8004f08:	d8801f15 	stw	r2,124(sp)
 8004f0c:	010001c4 	movi	r4,7
 8004f10:	20816b16 	blt	r4,r2,80054c0 <___svfprintf_internal_r+0x15dc>
 8004f14:	42000204 	addi	r8,r8,8
 8004f18:	003d9b06 	br	8004588 <__alt_data_end+0xfc004588>
 8004f1c:	d9403b17 	ldw	r5,236(sp)
 8004f20:	b807883a 	mov	r3,r23
 8004f24:	908003cc 	andi	r2,r18,15
 8004f28:	a808973a 	slli	r4,r21,28
 8004f2c:	2885883a 	add	r2,r5,r2
 8004f30:	9024d13a 	srli	r18,r18,4
 8004f34:	10800003 	ldbu	r2,0(r2)
 8004f38:	a82ad13a 	srli	r21,r21,4
 8004f3c:	18ffffc4 	addi	r3,r3,-1
 8004f40:	24a4b03a 	or	r18,r4,r18
 8004f44:	18800005 	stb	r2,0(r3)
 8004f48:	9544b03a 	or	r2,r18,r21
 8004f4c:	103ff51e 	bne	r2,zero,8004f24 <__alt_data_end+0xfc004f24>
 8004f50:	d8c03115 	stw	r3,196(sp)
 8004f54:	b8e3c83a 	sub	r17,r23,r3
 8004f58:	003d2006 	br	80043dc <__alt_data_end+0xfc0043dc>
 8004f5c:	d9403317 	ldw	r5,204(sp)
 8004f60:	00800044 	movi	r2,1
 8004f64:	18c00044 	addi	r3,r3,1
 8004f68:	1141360e 	bge	r2,r5,8005444 <___svfprintf_internal_r+0x1560>
 8004f6c:	dc001f17 	ldw	r16,124(sp)
 8004f70:	d8803117 	ldw	r2,196(sp)
 8004f74:	d8c02015 	stw	r3,128(sp)
 8004f78:	84000044 	addi	r16,r16,1
 8004f7c:	40800015 	stw	r2,0(r8)
 8004f80:	00800044 	movi	r2,1
 8004f84:	40800115 	stw	r2,4(r8)
 8004f88:	dc001f15 	stw	r16,124(sp)
 8004f8c:	008001c4 	movi	r2,7
 8004f90:	14013916 	blt	r2,r16,8005478 <___svfprintf_internal_r+0x1594>
 8004f94:	42000204 	addi	r8,r8,8
 8004f98:	d9003917 	ldw	r4,228(sp)
 8004f9c:	d9403517 	ldw	r5,212(sp)
 8004fa0:	84000044 	addi	r16,r16,1
 8004fa4:	1907883a 	add	r3,r3,r4
 8004fa8:	41400015 	stw	r5,0(r8)
 8004fac:	41000115 	stw	r4,4(r8)
 8004fb0:	d8c02015 	stw	r3,128(sp)
 8004fb4:	dc001f15 	stw	r16,124(sp)
 8004fb8:	008001c4 	movi	r2,7
 8004fbc:	14013716 	blt	r2,r16,800549c <___svfprintf_internal_r+0x15b8>
 8004fc0:	44400204 	addi	r17,r8,8
 8004fc4:	d9003717 	ldw	r4,220(sp)
 8004fc8:	d9403817 	ldw	r5,224(sp)
 8004fcc:	000d883a 	mov	r6,zero
 8004fd0:	000f883a 	mov	r7,zero
 8004fd4:	d8c03e15 	stw	r3,248(sp)
 8004fd8:	8011ab80 	call	8011ab8 <__eqdf2>
 8004fdc:	d8c03e17 	ldw	r3,248(sp)
 8004fe0:	10009926 	beq	r2,zero,8005248 <___svfprintf_internal_r+0x1364>
 8004fe4:	d9003317 	ldw	r4,204(sp)
 8004fe8:	d9403117 	ldw	r5,196(sp)
 8004fec:	84000044 	addi	r16,r16,1
 8004ff0:	20bfffc4 	addi	r2,r4,-1
 8004ff4:	1887883a 	add	r3,r3,r2
 8004ff8:	29000044 	addi	r4,r5,1
 8004ffc:	88800115 	stw	r2,4(r17)
 8005000:	89000015 	stw	r4,0(r17)
 8005004:	d8c02015 	stw	r3,128(sp)
 8005008:	dc001f15 	stw	r16,124(sp)
 800500c:	008001c4 	movi	r2,7
 8005010:	1400b716 	blt	r2,r16,80052f0 <___svfprintf_internal_r+0x140c>
 8005014:	8c400204 	addi	r17,r17,8
 8005018:	d9403a17 	ldw	r5,232(sp)
 800501c:	dcc022c4 	addi	r19,sp,139
 8005020:	84000044 	addi	r16,r16,1
 8005024:	28c7883a 	add	r3,r5,r3
 8005028:	8cc00015 	stw	r19,0(r17)
 800502c:	89400115 	stw	r5,4(r17)
 8005030:	d8c02015 	stw	r3,128(sp)
 8005034:	dc001f15 	stw	r16,124(sp)
 8005038:	008001c4 	movi	r2,7
 800503c:	14000e16 	blt	r2,r16,8005078 <___svfprintf_internal_r+0x1194>
 8005040:	8a000204 	addi	r8,r17,8
 8005044:	003d8f06 	br	8004684 <__alt_data_end+0xfc004684>
 8005048:	01020074 	movhi	r4,2049
 800504c:	211b5484 	addi	r4,r4,27986
 8005050:	d9002b15 	stw	r4,172(sp)
 8005054:	d9002b17 	ldw	r4,172(sp)
 8005058:	1c07883a 	add	r3,r3,r16
 800505c:	44000115 	stw	r16,4(r8)
 8005060:	41000015 	stw	r4,0(r8)
 8005064:	10800044 	addi	r2,r2,1
 8005068:	d8c02015 	stw	r3,128(sp)
 800506c:	d8801f15 	stw	r2,124(sp)
 8005070:	010001c4 	movi	r4,7
 8005074:	20bd820e 	bge	r4,r2,8004680 <__alt_data_end+0xfc004680>
 8005078:	d9002f17 	ldw	r4,188(sp)
 800507c:	b00b883a 	mov	r5,r22
 8005080:	b80d883a 	mov	r6,r23
 8005084:	800c8d40 	call	800c8d4 <__ssprint_r>
 8005088:	103c5f1e 	bne	r2,zero,8004208 <__alt_data_end+0xfc004208>
 800508c:	d8c02017 	ldw	r3,128(sp)
 8005090:	da000404 	addi	r8,sp,16
 8005094:	003d7b06 	br	8004684 <__alt_data_end+0xfc004684>
 8005098:	d9002f17 	ldw	r4,188(sp)
 800509c:	b00b883a 	mov	r5,r22
 80050a0:	b80d883a 	mov	r6,r23
 80050a4:	800c8d40 	call	800c8d4 <__ssprint_r>
 80050a8:	103db226 	beq	r2,zero,8004774 <__alt_data_end+0xfc004774>
 80050ac:	003c5606 	br	8004208 <__alt_data_end+0xfc004208>
 80050b0:	10803fcc 	andi	r2,r2,255
 80050b4:	1000201e 	bne	r2,zero,8005138 <___svfprintf_internal_r+0x1254>
 80050b8:	e080004c 	andi	r2,fp,1
 80050bc:	10001e26 	beq	r2,zero,8005138 <___svfprintf_internal_r+0x1254>
 80050c0:	00800c04 	movi	r2,48
 80050c4:	d8c01dc4 	addi	r3,sp,119
 80050c8:	d8801dc5 	stb	r2,119(sp)
 80050cc:	dc403d17 	ldw	r17,244(sp)
 80050d0:	d8c03115 	stw	r3,196(sp)
 80050d4:	003cc106 	br	80043dc <__alt_data_end+0xfc0043dc>
 80050d8:	d9002f17 	ldw	r4,188(sp)
 80050dc:	b00b883a 	mov	r5,r22
 80050e0:	b80d883a 	mov	r6,r23
 80050e4:	800c8d40 	call	800c8d4 <__ssprint_r>
 80050e8:	103c471e 	bne	r2,zero,8004208 <__alt_data_end+0xfc004208>
 80050ec:	d8c02017 	ldw	r3,128(sp)
 80050f0:	da000404 	addi	r8,sp,16
 80050f4:	003d5606 	br	8004650 <__alt_data_end+0xfc004650>
 80050f8:	d9002f17 	ldw	r4,188(sp)
 80050fc:	b00b883a 	mov	r5,r22
 8005100:	b80d883a 	mov	r6,r23
 8005104:	800c8d40 	call	800c8d4 <__ssprint_r>
 8005108:	103c3f1e 	bne	r2,zero,8004208 <__alt_data_end+0xfc004208>
 800510c:	d8c02017 	ldw	r3,128(sp)
 8005110:	da000404 	addi	r8,sp,16
 8005114:	003d0b06 	br	8004544 <__alt_data_end+0xfc004544>
 8005118:	d9002f17 	ldw	r4,188(sp)
 800511c:	b00b883a 	mov	r5,r22
 8005120:	b80d883a 	mov	r6,r23
 8005124:	800c8d40 	call	800c8d4 <__ssprint_r>
 8005128:	103c371e 	bne	r2,zero,8004208 <__alt_data_end+0xfc004208>
 800512c:	d8c02017 	ldw	r3,128(sp)
 8005130:	da000404 	addi	r8,sp,16
 8005134:	003d1106 	br	800457c <__alt_data_end+0xfc00457c>
 8005138:	0023883a 	mov	r17,zero
 800513c:	ddc03115 	stw	r23,196(sp)
 8005140:	003ca606 	br	80043dc <__alt_data_end+0xfc0043dc>
 8005144:	dc002617 	ldw	r16,152(sp)
 8005148:	0401470e 	bge	zero,r16,8005668 <___svfprintf_internal_r+0x1784>
 800514c:	d8803317 	ldw	r2,204(sp)
 8005150:	d9403117 	ldw	r5,196(sp)
 8005154:	d9003417 	ldw	r4,208(sp)
 8005158:	1023883a 	mov	r17,r2
 800515c:	28a1883a 	add	r16,r5,r2
 8005160:	2080010e 	bge	r4,r2,8005168 <___svfprintf_internal_r+0x1284>
 8005164:	2023883a 	mov	r17,r4
 8005168:	04400b0e 	bge	zero,r17,8005198 <___svfprintf_internal_r+0x12b4>
 800516c:	d8801f17 	ldw	r2,124(sp)
 8005170:	d9403117 	ldw	r5,196(sp)
 8005174:	1c47883a 	add	r3,r3,r17
 8005178:	10800044 	addi	r2,r2,1
 800517c:	41400015 	stw	r5,0(r8)
 8005180:	44400115 	stw	r17,4(r8)
 8005184:	d8c02015 	stw	r3,128(sp)
 8005188:	d8801f15 	stw	r2,124(sp)
 800518c:	010001c4 	movi	r4,7
 8005190:	20825f16 	blt	r4,r2,8005b10 <___svfprintf_internal_r+0x1c2c>
 8005194:	42000204 	addi	r8,r8,8
 8005198:	88025b16 	blt	r17,zero,8005b08 <___svfprintf_internal_r+0x1c24>
 800519c:	d8803417 	ldw	r2,208(sp)
 80051a0:	1463c83a 	sub	r17,r2,r17
 80051a4:	0440620e 	bge	zero,r17,8005330 <___svfprintf_internal_r+0x144c>
 80051a8:	04c00404 	movi	r19,16
 80051ac:	d8801f17 	ldw	r2,124(sp)
 80051b0:	9c41130e 	bge	r19,r17,8005600 <___svfprintf_internal_r+0x171c>
 80051b4:	01420074 	movhi	r5,2049
 80051b8:	295b5484 	addi	r5,r5,27986
 80051bc:	d9402b15 	stw	r5,172(sp)
 80051c0:	054001c4 	movi	r21,7
 80051c4:	dc802f17 	ldw	r18,188(sp)
 80051c8:	00000306 	br	80051d8 <___svfprintf_internal_r+0x12f4>
 80051cc:	42000204 	addi	r8,r8,8
 80051d0:	8c7ffc04 	addi	r17,r17,-16
 80051d4:	9c410d0e 	bge	r19,r17,800560c <___svfprintf_internal_r+0x1728>
 80051d8:	18c00404 	addi	r3,r3,16
 80051dc:	10800044 	addi	r2,r2,1
 80051e0:	45000015 	stw	r20,0(r8)
 80051e4:	44c00115 	stw	r19,4(r8)
 80051e8:	d8c02015 	stw	r3,128(sp)
 80051ec:	d8801f15 	stw	r2,124(sp)
 80051f0:	a8bff60e 	bge	r21,r2,80051cc <__alt_data_end+0xfc0051cc>
 80051f4:	9009883a 	mov	r4,r18
 80051f8:	b00b883a 	mov	r5,r22
 80051fc:	b80d883a 	mov	r6,r23
 8005200:	800c8d40 	call	800c8d4 <__ssprint_r>
 8005204:	103c001e 	bne	r2,zero,8004208 <__alt_data_end+0xfc004208>
 8005208:	d8c02017 	ldw	r3,128(sp)
 800520c:	d8801f17 	ldw	r2,124(sp)
 8005210:	da000404 	addi	r8,sp,16
 8005214:	003fee06 	br	80051d0 <__alt_data_end+0xfc0051d0>
 8005218:	d9002f17 	ldw	r4,188(sp)
 800521c:	b00b883a 	mov	r5,r22
 8005220:	b80d883a 	mov	r6,r23
 8005224:	800c8d40 	call	800c8d4 <__ssprint_r>
 8005228:	103bf71e 	bne	r2,zero,8004208 <__alt_data_end+0xfc004208>
 800522c:	d8c02017 	ldw	r3,128(sp)
 8005230:	d8802787 	ldb	r2,158(sp)
 8005234:	da000404 	addi	r8,sp,16
 8005238:	003cb506 	br	8004510 <__alt_data_end+0xfc004510>
 800523c:	00800084 	movi	r2,2
 8005240:	9546b03a 	or	r3,r18,r21
 8005244:	003d8c06 	br	8004878 <__alt_data_end+0xfc004878>
 8005248:	d8803317 	ldw	r2,204(sp)
 800524c:	14ffffc4 	addi	r19,r2,-1
 8005250:	04ff710e 	bge	zero,r19,8005018 <__alt_data_end+0xfc005018>
 8005254:	05400404 	movi	r21,16
 8005258:	acc2f80e 	bge	r21,r19,8005e3c <___svfprintf_internal_r+0x1f58>
 800525c:	01420074 	movhi	r5,2049
 8005260:	295b5484 	addi	r5,r5,27986
 8005264:	d9402b15 	stw	r5,172(sp)
 8005268:	01c001c4 	movi	r7,7
 800526c:	dc802f17 	ldw	r18,188(sp)
 8005270:	00000306 	br	8005280 <___svfprintf_internal_r+0x139c>
 8005274:	9cfffc04 	addi	r19,r19,-16
 8005278:	8c400204 	addi	r17,r17,8
 800527c:	acc0130e 	bge	r21,r19,80052cc <___svfprintf_internal_r+0x13e8>
 8005280:	18c00404 	addi	r3,r3,16
 8005284:	84000044 	addi	r16,r16,1
 8005288:	8d000015 	stw	r20,0(r17)
 800528c:	8d400115 	stw	r21,4(r17)
 8005290:	d8c02015 	stw	r3,128(sp)
 8005294:	dc001f15 	stw	r16,124(sp)
 8005298:	3c3ff60e 	bge	r7,r16,8005274 <__alt_data_end+0xfc005274>
 800529c:	9009883a 	mov	r4,r18
 80052a0:	b00b883a 	mov	r5,r22
 80052a4:	b80d883a 	mov	r6,r23
 80052a8:	d9c03e15 	stw	r7,248(sp)
 80052ac:	800c8d40 	call	800c8d4 <__ssprint_r>
 80052b0:	d9c03e17 	ldw	r7,248(sp)
 80052b4:	103bd41e 	bne	r2,zero,8004208 <__alt_data_end+0xfc004208>
 80052b8:	9cfffc04 	addi	r19,r19,-16
 80052bc:	d8c02017 	ldw	r3,128(sp)
 80052c0:	dc001f17 	ldw	r16,124(sp)
 80052c4:	dc400404 	addi	r17,sp,16
 80052c8:	acffed16 	blt	r21,r19,8005280 <__alt_data_end+0xfc005280>
 80052cc:	d8802b17 	ldw	r2,172(sp)
 80052d0:	1cc7883a 	add	r3,r3,r19
 80052d4:	84000044 	addi	r16,r16,1
 80052d8:	88800015 	stw	r2,0(r17)
 80052dc:	8cc00115 	stw	r19,4(r17)
 80052e0:	d8c02015 	stw	r3,128(sp)
 80052e4:	dc001f15 	stw	r16,124(sp)
 80052e8:	008001c4 	movi	r2,7
 80052ec:	143f490e 	bge	r2,r16,8005014 <__alt_data_end+0xfc005014>
 80052f0:	d9002f17 	ldw	r4,188(sp)
 80052f4:	b00b883a 	mov	r5,r22
 80052f8:	b80d883a 	mov	r6,r23
 80052fc:	800c8d40 	call	800c8d4 <__ssprint_r>
 8005300:	103bc11e 	bne	r2,zero,8004208 <__alt_data_end+0xfc004208>
 8005304:	d8c02017 	ldw	r3,128(sp)
 8005308:	dc001f17 	ldw	r16,124(sp)
 800530c:	dc400404 	addi	r17,sp,16
 8005310:	003f4106 	br	8005018 <__alt_data_end+0xfc005018>
 8005314:	d9002f17 	ldw	r4,188(sp)
 8005318:	b00b883a 	mov	r5,r22
 800531c:	b80d883a 	mov	r6,r23
 8005320:	800c8d40 	call	800c8d4 <__ssprint_r>
 8005324:	103bb81e 	bne	r2,zero,8004208 <__alt_data_end+0xfc004208>
 8005328:	d8c02017 	ldw	r3,128(sp)
 800532c:	da000404 	addi	r8,sp,16
 8005330:	d9403117 	ldw	r5,196(sp)
 8005334:	d9003417 	ldw	r4,208(sp)
 8005338:	d8802617 	ldw	r2,152(sp)
 800533c:	2923883a 	add	r17,r5,r4
 8005340:	d9403317 	ldw	r5,204(sp)
 8005344:	11400216 	blt	r2,r5,8005350 <___svfprintf_internal_r+0x146c>
 8005348:	e100004c 	andi	r4,fp,1
 800534c:	20000d26 	beq	r4,zero,8005384 <___svfprintf_internal_r+0x14a0>
 8005350:	d9003917 	ldw	r4,228(sp)
 8005354:	d9403517 	ldw	r5,212(sp)
 8005358:	1907883a 	add	r3,r3,r4
 800535c:	d9001f17 	ldw	r4,124(sp)
 8005360:	41400015 	stw	r5,0(r8)
 8005364:	d9403917 	ldw	r5,228(sp)
 8005368:	21000044 	addi	r4,r4,1
 800536c:	d8c02015 	stw	r3,128(sp)
 8005370:	41400115 	stw	r5,4(r8)
 8005374:	d9001f15 	stw	r4,124(sp)
 8005378:	014001c4 	movi	r5,7
 800537c:	2901ec16 	blt	r5,r4,8005b30 <___svfprintf_internal_r+0x1c4c>
 8005380:	42000204 	addi	r8,r8,8
 8005384:	d9003317 	ldw	r4,204(sp)
 8005388:	2085c83a 	sub	r2,r4,r2
 800538c:	8449c83a 	sub	r4,r16,r17
 8005390:	1021883a 	mov	r16,r2
 8005394:	2080010e 	bge	r4,r2,800539c <___svfprintf_internal_r+0x14b8>
 8005398:	2021883a 	mov	r16,r4
 800539c:	04000a0e 	bge	zero,r16,80053c8 <___svfprintf_internal_r+0x14e4>
 80053a0:	d9001f17 	ldw	r4,124(sp)
 80053a4:	1c07883a 	add	r3,r3,r16
 80053a8:	44400015 	stw	r17,0(r8)
 80053ac:	21000044 	addi	r4,r4,1
 80053b0:	44000115 	stw	r16,4(r8)
 80053b4:	d8c02015 	stw	r3,128(sp)
 80053b8:	d9001f15 	stw	r4,124(sp)
 80053bc:	014001c4 	movi	r5,7
 80053c0:	2901f216 	blt	r5,r4,8005b8c <___svfprintf_internal_r+0x1ca8>
 80053c4:	42000204 	addi	r8,r8,8
 80053c8:	80020a16 	blt	r16,zero,8005bf4 <___svfprintf_internal_r+0x1d10>
 80053cc:	1421c83a 	sub	r16,r2,r16
 80053d0:	043cac0e 	bge	zero,r16,8004684 <__alt_data_end+0xfc004684>
 80053d4:	04400404 	movi	r17,16
 80053d8:	d8801f17 	ldw	r2,124(sp)
 80053dc:	8c3f1a0e 	bge	r17,r16,8005048 <__alt_data_end+0xfc005048>
 80053e0:	01420074 	movhi	r5,2049
 80053e4:	295b5484 	addi	r5,r5,27986
 80053e8:	d9402b15 	stw	r5,172(sp)
 80053ec:	04c001c4 	movi	r19,7
 80053f0:	dc802f17 	ldw	r18,188(sp)
 80053f4:	00000306 	br	8005404 <___svfprintf_internal_r+0x1520>
 80053f8:	42000204 	addi	r8,r8,8
 80053fc:	843ffc04 	addi	r16,r16,-16
 8005400:	8c3f140e 	bge	r17,r16,8005054 <__alt_data_end+0xfc005054>
 8005404:	18c00404 	addi	r3,r3,16
 8005408:	10800044 	addi	r2,r2,1
 800540c:	45000015 	stw	r20,0(r8)
 8005410:	44400115 	stw	r17,4(r8)
 8005414:	d8c02015 	stw	r3,128(sp)
 8005418:	d8801f15 	stw	r2,124(sp)
 800541c:	98bff60e 	bge	r19,r2,80053f8 <__alt_data_end+0xfc0053f8>
 8005420:	9009883a 	mov	r4,r18
 8005424:	b00b883a 	mov	r5,r22
 8005428:	b80d883a 	mov	r6,r23
 800542c:	800c8d40 	call	800c8d4 <__ssprint_r>
 8005430:	103b751e 	bne	r2,zero,8004208 <__alt_data_end+0xfc004208>
 8005434:	d8c02017 	ldw	r3,128(sp)
 8005438:	d8801f17 	ldw	r2,124(sp)
 800543c:	da000404 	addi	r8,sp,16
 8005440:	003fee06 	br	80053fc <__alt_data_end+0xfc0053fc>
 8005444:	e088703a 	and	r4,fp,r2
 8005448:	203ec81e 	bne	r4,zero,8004f6c <__alt_data_end+0xfc004f6c>
 800544c:	dc001f17 	ldw	r16,124(sp)
 8005450:	d9003117 	ldw	r4,196(sp)
 8005454:	40800115 	stw	r2,4(r8)
 8005458:	84000044 	addi	r16,r16,1
 800545c:	41000015 	stw	r4,0(r8)
 8005460:	d8c02015 	stw	r3,128(sp)
 8005464:	dc001f15 	stw	r16,124(sp)
 8005468:	008001c4 	movi	r2,7
 800546c:	143fa016 	blt	r2,r16,80052f0 <__alt_data_end+0xfc0052f0>
 8005470:	44400204 	addi	r17,r8,8
 8005474:	003ee806 	br	8005018 <__alt_data_end+0xfc005018>
 8005478:	d9002f17 	ldw	r4,188(sp)
 800547c:	b00b883a 	mov	r5,r22
 8005480:	b80d883a 	mov	r6,r23
 8005484:	800c8d40 	call	800c8d4 <__ssprint_r>
 8005488:	103b5f1e 	bne	r2,zero,8004208 <__alt_data_end+0xfc004208>
 800548c:	d8c02017 	ldw	r3,128(sp)
 8005490:	dc001f17 	ldw	r16,124(sp)
 8005494:	da000404 	addi	r8,sp,16
 8005498:	003ebf06 	br	8004f98 <__alt_data_end+0xfc004f98>
 800549c:	d9002f17 	ldw	r4,188(sp)
 80054a0:	b00b883a 	mov	r5,r22
 80054a4:	b80d883a 	mov	r6,r23
 80054a8:	800c8d40 	call	800c8d4 <__ssprint_r>
 80054ac:	103b561e 	bne	r2,zero,8004208 <__alt_data_end+0xfc004208>
 80054b0:	d8c02017 	ldw	r3,128(sp)
 80054b4:	dc001f17 	ldw	r16,124(sp)
 80054b8:	dc400404 	addi	r17,sp,16
 80054bc:	003ec106 	br	8004fc4 <__alt_data_end+0xfc004fc4>
 80054c0:	d9002f17 	ldw	r4,188(sp)
 80054c4:	b00b883a 	mov	r5,r22
 80054c8:	b80d883a 	mov	r6,r23
 80054cc:	800c8d40 	call	800c8d4 <__ssprint_r>
 80054d0:	103b4d1e 	bne	r2,zero,8004208 <__alt_data_end+0xfc004208>
 80054d4:	d8c02017 	ldw	r3,128(sp)
 80054d8:	da000404 	addi	r8,sp,16
 80054dc:	003c2a06 	br	8004588 <__alt_data_end+0xfc004588>
 80054e0:	da004015 	stw	r8,256(sp)
 80054e4:	da403f15 	stw	r9,252(sp)
 80054e8:	800c7240 	call	800c724 <__fpclassifyd>
 80054ec:	da004017 	ldw	r8,256(sp)
 80054f0:	da403f17 	ldw	r9,252(sp)
 80054f4:	1000a91e 	bne	r2,zero,800579c <___svfprintf_internal_r+0x18b8>
 80054f8:	008011c4 	movi	r2,71
 80054fc:	14011016 	blt	r2,r16,8005940 <___svfprintf_internal_r+0x1a5c>
 8005500:	01020074 	movhi	r4,2049
 8005504:	211b4604 	addi	r4,r4,27928
 8005508:	d9003115 	stw	r4,196(sp)
 800550c:	00c000c4 	movi	r3,3
 8005510:	00bfdfc4 	movi	r2,-129
 8005514:	d8c02a15 	stw	r3,168(sp)
 8005518:	e0b8703a 	and	fp,fp,r2
 800551c:	dcc02783 	ldbu	r19,158(sp)
 8005520:	dc802d15 	stw	r18,180(sp)
 8005524:	1823883a 	mov	r17,r3
 8005528:	d8003215 	stw	zero,200(sp)
 800552c:	d8003415 	stw	zero,208(sp)
 8005530:	003baf06 	br	80043f0 <__alt_data_end+0xfc0043f0>
 8005534:	e0c0100c 	andi	r3,fp,64
 8005538:	18012a26 	beq	r3,zero,80059e4 <___svfprintf_internal_r+0x1b00>
 800553c:	d9002d17 	ldw	r4,180(sp)
 8005540:	1480000b 	ldhu	r18,0(r2)
 8005544:	002b883a 	mov	r21,zero
 8005548:	21000104 	addi	r4,r4,4
 800554c:	d9002d15 	stw	r4,180(sp)
 8005550:	003d3206 	br	8004a1c <__alt_data_end+0xfc004a1c>
 8005554:	e080100c 	andi	r2,fp,64
 8005558:	10011326 	beq	r2,zero,80059a8 <___svfprintf_internal_r+0x1ac4>
 800555c:	d8c02d17 	ldw	r3,180(sp)
 8005560:	002b883a 	mov	r21,zero
 8005564:	0005883a 	mov	r2,zero
 8005568:	1c80000b 	ldhu	r18,0(r3)
 800556c:	18c00104 	addi	r3,r3,4
 8005570:	d8c02d15 	stw	r3,180(sp)
 8005574:	9007883a 	mov	r3,r18
 8005578:	003cbf06 	br	8004878 <__alt_data_end+0xfc004878>
 800557c:	e080040c 	andi	r2,fp,16
 8005580:	10011e26 	beq	r2,zero,80059fc <___svfprintf_internal_r+0x1b18>
 8005584:	d9402d17 	ldw	r5,180(sp)
 8005588:	d8c03017 	ldw	r3,192(sp)
 800558c:	28800017 	ldw	r2,0(r5)
 8005590:	29400104 	addi	r5,r5,4
 8005594:	d9402d15 	stw	r5,180(sp)
 8005598:	10c00015 	stw	r3,0(r2)
 800559c:	003a7d06 	br	8003f94 <__alt_data_end+0xfc003f94>
 80055a0:	e4000007 	ldb	r16,0(fp)
 80055a4:	e005883a 	mov	r2,fp
 80055a8:	003aa506 	br	8004040 <__alt_data_end+0xfc004040>
 80055ac:	e080100c 	andi	r2,fp,64
 80055b0:	10010526 	beq	r2,zero,80059c8 <___svfprintf_internal_r+0x1ae4>
 80055b4:	1c80000f 	ldh	r18,0(r3)
 80055b8:	d8802d17 	ldw	r2,180(sp)
 80055bc:	902bd7fa 	srai	r21,r18,31
 80055c0:	10800104 	addi	r2,r2,4
 80055c4:	d8802d15 	stw	r2,180(sp)
 80055c8:	a805883a 	mov	r2,r21
 80055cc:	003b5c06 	br	8004340 <__alt_data_end+0xfc004340>
 80055d0:	e080100c 	andi	r2,fp,64
 80055d4:	1000ec26 	beq	r2,zero,8005988 <___svfprintf_internal_r+0x1aa4>
 80055d8:	d8802d17 	ldw	r2,180(sp)
 80055dc:	002b883a 	mov	r21,zero
 80055e0:	1480000b 	ldhu	r18,0(r2)
 80055e4:	10800104 	addi	r2,r2,4
 80055e8:	d8802d15 	stw	r2,180(sp)
 80055ec:	9007883a 	mov	r3,r18
 80055f0:	00800044 	movi	r2,1
 80055f4:	003ca006 	br	8004878 <__alt_data_end+0xfc004878>
 80055f8:	00800084 	movi	r2,2
 80055fc:	003c9e06 	br	8004878 <__alt_data_end+0xfc004878>
 8005600:	01020074 	movhi	r4,2049
 8005604:	211b5484 	addi	r4,r4,27986
 8005608:	d9002b15 	stw	r4,172(sp)
 800560c:	d9002b17 	ldw	r4,172(sp)
 8005610:	1c47883a 	add	r3,r3,r17
 8005614:	10800044 	addi	r2,r2,1
 8005618:	41000015 	stw	r4,0(r8)
 800561c:	44400115 	stw	r17,4(r8)
 8005620:	d8c02015 	stw	r3,128(sp)
 8005624:	d8801f15 	stw	r2,124(sp)
 8005628:	010001c4 	movi	r4,7
 800562c:	20bf3916 	blt	r4,r2,8005314 <__alt_data_end+0xfc005314>
 8005630:	42000204 	addi	r8,r8,8
 8005634:	003f3e06 	br	8005330 <__alt_data_end+0xfc005330>
 8005638:	01020074 	movhi	r4,2049
 800563c:	211b5484 	addi	r4,r4,27986
 8005640:	d9002b15 	stw	r4,172(sp)
 8005644:	003bf806 	br	8004628 <__alt_data_end+0xfc004628>
 8005648:	d9002f17 	ldw	r4,188(sp)
 800564c:	b00b883a 	mov	r5,r22
 8005650:	b80d883a 	mov	r6,r23
 8005654:	800c8d40 	call	800c8d4 <__ssprint_r>
 8005658:	103aeb1e 	bne	r2,zero,8004208 <__alt_data_end+0xfc004208>
 800565c:	d8c02017 	ldw	r3,128(sp)
 8005660:	da000404 	addi	r8,sp,16
 8005664:	003dc806 	br	8004d88 <__alt_data_end+0xfc004d88>
 8005668:	d8801f17 	ldw	r2,124(sp)
 800566c:	01420074 	movhi	r5,2049
 8005670:	01000044 	movi	r4,1
 8005674:	18c00044 	addi	r3,r3,1
 8005678:	10800044 	addi	r2,r2,1
 800567c:	295b5404 	addi	r5,r5,27984
 8005680:	41000115 	stw	r4,4(r8)
 8005684:	41400015 	stw	r5,0(r8)
 8005688:	d8c02015 	stw	r3,128(sp)
 800568c:	d8801f15 	stw	r2,124(sp)
 8005690:	010001c4 	movi	r4,7
 8005694:	2080ae16 	blt	r4,r2,8005950 <___svfprintf_internal_r+0x1a6c>
 8005698:	42000204 	addi	r8,r8,8
 800569c:	8000041e 	bne	r16,zero,80056b0 <___svfprintf_internal_r+0x17cc>
 80056a0:	d8803317 	ldw	r2,204(sp)
 80056a4:	1000021e 	bne	r2,zero,80056b0 <___svfprintf_internal_r+0x17cc>
 80056a8:	e080004c 	andi	r2,fp,1
 80056ac:	103bf526 	beq	r2,zero,8004684 <__alt_data_end+0xfc004684>
 80056b0:	d9003917 	ldw	r4,228(sp)
 80056b4:	d8801f17 	ldw	r2,124(sp)
 80056b8:	d9403517 	ldw	r5,212(sp)
 80056bc:	1907883a 	add	r3,r3,r4
 80056c0:	10800044 	addi	r2,r2,1
 80056c4:	41000115 	stw	r4,4(r8)
 80056c8:	41400015 	stw	r5,0(r8)
 80056cc:	d8c02015 	stw	r3,128(sp)
 80056d0:	d8801f15 	stw	r2,124(sp)
 80056d4:	010001c4 	movi	r4,7
 80056d8:	2081ac16 	blt	r4,r2,8005d8c <___svfprintf_internal_r+0x1ea8>
 80056dc:	42000204 	addi	r8,r8,8
 80056e0:	0421c83a 	sub	r16,zero,r16
 80056e4:	0400d60e 	bge	zero,r16,8005a40 <___svfprintf_internal_r+0x1b5c>
 80056e8:	04400404 	movi	r17,16
 80056ec:	8c01190e 	bge	r17,r16,8005b54 <___svfprintf_internal_r+0x1c70>
 80056f0:	01420074 	movhi	r5,2049
 80056f4:	295b5484 	addi	r5,r5,27986
 80056f8:	d9402b15 	stw	r5,172(sp)
 80056fc:	04c001c4 	movi	r19,7
 8005700:	dc802f17 	ldw	r18,188(sp)
 8005704:	00000306 	br	8005714 <___svfprintf_internal_r+0x1830>
 8005708:	42000204 	addi	r8,r8,8
 800570c:	843ffc04 	addi	r16,r16,-16
 8005710:	8c01130e 	bge	r17,r16,8005b60 <___svfprintf_internal_r+0x1c7c>
 8005714:	18c00404 	addi	r3,r3,16
 8005718:	10800044 	addi	r2,r2,1
 800571c:	45000015 	stw	r20,0(r8)
 8005720:	44400115 	stw	r17,4(r8)
 8005724:	d8c02015 	stw	r3,128(sp)
 8005728:	d8801f15 	stw	r2,124(sp)
 800572c:	98bff60e 	bge	r19,r2,8005708 <__alt_data_end+0xfc005708>
 8005730:	9009883a 	mov	r4,r18
 8005734:	b00b883a 	mov	r5,r22
 8005738:	b80d883a 	mov	r6,r23
 800573c:	800c8d40 	call	800c8d4 <__ssprint_r>
 8005740:	103ab11e 	bne	r2,zero,8004208 <__alt_data_end+0xfc004208>
 8005744:	d8c02017 	ldw	r3,128(sp)
 8005748:	d8801f17 	ldw	r2,124(sp)
 800574c:	da000404 	addi	r8,sp,16
 8005750:	003fee06 	br	800570c <__alt_data_end+0xfc00570c>
 8005754:	d8802e17 	ldw	r2,184(sp)
 8005758:	d8c02d15 	stw	r3,180(sp)
 800575c:	0085c83a 	sub	r2,zero,r2
 8005760:	d8802e15 	stw	r2,184(sp)
 8005764:	e005883a 	mov	r2,fp
 8005768:	003aba06 	br	8004254 <__alt_data_end+0xfc004254>
 800576c:	e0800044 	addi	r2,fp,1
 8005770:	9cc00814 	ori	r19,r19,32
 8005774:	e4000047 	ldb	r16,1(fp)
 8005778:	003a3106 	br	8004040 <__alt_data_end+0xfc004040>
 800577c:	d9002f17 	ldw	r4,188(sp)
 8005780:	b00b883a 	mov	r5,r22
 8005784:	b80d883a 	mov	r6,r23
 8005788:	800c8d40 	call	800c8d4 <__ssprint_r>
 800578c:	103a9e1e 	bne	r2,zero,8004208 <__alt_data_end+0xfc004208>
 8005790:	d8c02017 	ldw	r3,128(sp)
 8005794:	da000404 	addi	r8,sp,16
 8005798:	003d8d06 	br	8004dd0 <__alt_data_end+0xfc004dd0>
 800579c:	04fff7c4 	movi	r19,-33
 80057a0:	00bfffc4 	movi	r2,-1
 80057a4:	84e6703a 	and	r19,r16,r19
 80057a8:	48807226 	beq	r9,r2,8005974 <___svfprintf_internal_r+0x1a90>
 80057ac:	008011c4 	movi	r2,71
 80057b0:	98818026 	beq	r19,r2,8005db4 <___svfprintf_internal_r+0x1ed0>
 80057b4:	d9003817 	ldw	r4,224(sp)
 80057b8:	e0c04014 	ori	r3,fp,256
 80057bc:	d8c02d15 	stw	r3,180(sp)
 80057c0:	20017f16 	blt	r4,zero,8005dc0 <___svfprintf_internal_r+0x1edc>
 80057c4:	dc403817 	ldw	r17,224(sp)
 80057c8:	d8002a05 	stb	zero,168(sp)
 80057cc:	00801984 	movi	r2,102
 80057d0:	8080ad26 	beq	r16,r2,8005a88 <___svfprintf_internal_r+0x1ba4>
 80057d4:	00801184 	movi	r2,70
 80057d8:	8080ab26 	beq	r16,r2,8005a88 <___svfprintf_internal_r+0x1ba4>
 80057dc:	00801144 	movi	r2,69
 80057e0:	98818426 	beq	r19,r2,8005df4 <___svfprintf_internal_r+0x1f10>
 80057e4:	482b883a 	mov	r21,r9
 80057e8:	d8802604 	addi	r2,sp,152
 80057ec:	d8800115 	stw	r2,4(sp)
 80057f0:	d9002f17 	ldw	r4,188(sp)
 80057f4:	d8802504 	addi	r2,sp,148
 80057f8:	d9403717 	ldw	r5,220(sp)
 80057fc:	d8800215 	stw	r2,8(sp)
 8005800:	d8802104 	addi	r2,sp,132
 8005804:	dd400015 	stw	r21,0(sp)
 8005808:	d8800315 	stw	r2,12(sp)
 800580c:	880d883a 	mov	r6,r17
 8005810:	01c00084 	movi	r7,2
 8005814:	da004015 	stw	r8,256(sp)
 8005818:	da403f15 	stw	r9,252(sp)
 800581c:	80083cc0 	call	80083cc <_dtoa_r>
 8005820:	d8803115 	stw	r2,196(sp)
 8005824:	008019c4 	movi	r2,103
 8005828:	da004017 	ldw	r8,256(sp)
 800582c:	da403f17 	ldw	r9,252(sp)
 8005830:	80800226 	beq	r16,r2,800583c <___svfprintf_internal_r+0x1958>
 8005834:	008011c4 	movi	r2,71
 8005838:	8080a51e 	bne	r16,r2,8005ad0 <___svfprintf_internal_r+0x1bec>
 800583c:	e080004c 	andi	r2,fp,1
 8005840:	10017226 	beq	r2,zero,8005e0c <___svfprintf_internal_r+0x1f28>
 8005844:	d8c03117 	ldw	r3,196(sp)
 8005848:	1d55883a 	add	r10,r3,r21
 800584c:	d9003717 	ldw	r4,220(sp)
 8005850:	880b883a 	mov	r5,r17
 8005854:	000d883a 	mov	r6,zero
 8005858:	000f883a 	mov	r7,zero
 800585c:	da004015 	stw	r8,256(sp)
 8005860:	da403f15 	stw	r9,252(sp)
 8005864:	da803e15 	stw	r10,248(sp)
 8005868:	8011ab80 	call	8011ab8 <__eqdf2>
 800586c:	da004017 	ldw	r8,256(sp)
 8005870:	da403f17 	ldw	r9,252(sp)
 8005874:	da803e17 	ldw	r10,248(sp)
 8005878:	1000fd26 	beq	r2,zero,8005c70 <___svfprintf_internal_r+0x1d8c>
 800587c:	d8802117 	ldw	r2,132(sp)
 8005880:	1280062e 	bgeu	r2,r10,800589c <___svfprintf_internal_r+0x19b8>
 8005884:	01000c04 	movi	r4,48
 8005888:	10c00044 	addi	r3,r2,1
 800588c:	d8c02115 	stw	r3,132(sp)
 8005890:	11000005 	stb	r4,0(r2)
 8005894:	d8802117 	ldw	r2,132(sp)
 8005898:	12bffb36 	bltu	r2,r10,8005888 <__alt_data_end+0xfc005888>
 800589c:	d8c03117 	ldw	r3,196(sp)
 80058a0:	10c5c83a 	sub	r2,r2,r3
 80058a4:	d8803315 	stw	r2,204(sp)
 80058a8:	008011c4 	movi	r2,71
 80058ac:	9880e226 	beq	r19,r2,8005c38 <___svfprintf_internal_r+0x1d54>
 80058b0:	00801944 	movi	r2,101
 80058b4:	1401a30e 	bge	r2,r16,8005f44 <___svfprintf_internal_r+0x2060>
 80058b8:	d8c02617 	ldw	r3,152(sp)
 80058bc:	00801984 	movi	r2,102
 80058c0:	d8c03415 	stw	r3,208(sp)
 80058c4:	80815326 	beq	r16,r2,8005e14 <___svfprintf_internal_r+0x1f30>
 80058c8:	d8c03417 	ldw	r3,208(sp)
 80058cc:	d9003317 	ldw	r4,204(sp)
 80058d0:	19013f16 	blt	r3,r4,8005dd0 <___svfprintf_internal_r+0x1eec>
 80058d4:	e080004c 	andi	r2,fp,1
 80058d8:	10014826 	beq	r2,zero,8005dfc <___svfprintf_internal_r+0x1f18>
 80058dc:	d8c03417 	ldw	r3,208(sp)
 80058e0:	1c400044 	addi	r17,r3,1
 80058e4:	8839883a 	mov	fp,r17
 80058e8:	88014016 	blt	r17,zero,8005dec <___svfprintf_internal_r+0x1f08>
 80058ec:	dd402a07 	ldb	r21,168(sp)
 80058f0:	a800c61e 	bne	r21,zero,8005c0c <___svfprintf_internal_r+0x1d28>
 80058f4:	df002a15 	stw	fp,168(sp)
 80058f8:	dcc02783 	ldbu	r19,158(sp)
 80058fc:	df002d17 	ldw	fp,180(sp)
 8005900:	d8003215 	stw	zero,200(sp)
 8005904:	dc802d15 	stw	r18,180(sp)
 8005908:	003ab906 	br	80043f0 <__alt_data_end+0xfc0043f0>
 800590c:	01020074 	movhi	r4,2049
 8005910:	211b4404 	addi	r4,r4,27920
 8005914:	d9003115 	stw	r4,196(sp)
 8005918:	003bbe06 	br	8004814 <__alt_data_end+0xfc004814>
 800591c:	d9002f17 	ldw	r4,188(sp)
 8005920:	04001004 	movi	r16,64
 8005924:	800b883a 	mov	r5,r16
 8005928:	8002d800 	call	8002d80 <_malloc_r>
 800592c:	b0800015 	stw	r2,0(r22)
 8005930:	b0800415 	stw	r2,16(r22)
 8005934:	10017c26 	beq	r2,zero,8005f28 <___svfprintf_internal_r+0x2044>
 8005938:	b4000515 	stw	r16,20(r22)
 800593c:	00398306 	br	8003f4c <__alt_data_end+0xfc003f4c>
 8005940:	01420074 	movhi	r5,2049
 8005944:	295b4704 	addi	r5,r5,27932
 8005948:	d9403115 	stw	r5,196(sp)
 800594c:	003eef06 	br	800550c <__alt_data_end+0xfc00550c>
 8005950:	d9002f17 	ldw	r4,188(sp)
 8005954:	b00b883a 	mov	r5,r22
 8005958:	b80d883a 	mov	r6,r23
 800595c:	800c8d40 	call	800c8d4 <__ssprint_r>
 8005960:	103a291e 	bne	r2,zero,8004208 <__alt_data_end+0xfc004208>
 8005964:	dc002617 	ldw	r16,152(sp)
 8005968:	d8c02017 	ldw	r3,128(sp)
 800596c:	da000404 	addi	r8,sp,16
 8005970:	003f4a06 	br	800569c <__alt_data_end+0xfc00569c>
 8005974:	02400184 	movi	r9,6
 8005978:	003f8e06 	br	80057b4 <__alt_data_end+0xfc0057b4>
 800597c:	d8c03117 	ldw	r3,196(sp)
 8005980:	b8e3c83a 	sub	r17,r23,r3
 8005984:	003a9506 	br	80043dc <__alt_data_end+0xfc0043dc>
 8005988:	d8c02d17 	ldw	r3,180(sp)
 800598c:	002b883a 	mov	r21,zero
 8005990:	00800044 	movi	r2,1
 8005994:	1c800017 	ldw	r18,0(r3)
 8005998:	18c00104 	addi	r3,r3,4
 800599c:	d8c02d15 	stw	r3,180(sp)
 80059a0:	9007883a 	mov	r3,r18
 80059a4:	003bb406 	br	8004878 <__alt_data_end+0xfc004878>
 80059a8:	d9002d17 	ldw	r4,180(sp)
 80059ac:	002b883a 	mov	r21,zero
 80059b0:	0005883a 	mov	r2,zero
 80059b4:	24800017 	ldw	r18,0(r4)
 80059b8:	21000104 	addi	r4,r4,4
 80059bc:	d9002d15 	stw	r4,180(sp)
 80059c0:	9007883a 	mov	r3,r18
 80059c4:	003bac06 	br	8004878 <__alt_data_end+0xfc004878>
 80059c8:	1c800017 	ldw	r18,0(r3)
 80059cc:	d8c02d17 	ldw	r3,180(sp)
 80059d0:	902bd7fa 	srai	r21,r18,31
 80059d4:	18c00104 	addi	r3,r3,4
 80059d8:	d8c02d15 	stw	r3,180(sp)
 80059dc:	a805883a 	mov	r2,r21
 80059e0:	003a5706 	br	8004340 <__alt_data_end+0xfc004340>
 80059e4:	d9402d17 	ldw	r5,180(sp)
 80059e8:	14800017 	ldw	r18,0(r2)
 80059ec:	002b883a 	mov	r21,zero
 80059f0:	29400104 	addi	r5,r5,4
 80059f4:	d9402d15 	stw	r5,180(sp)
 80059f8:	003c0806 	br	8004a1c <__alt_data_end+0xfc004a1c>
 80059fc:	e080100c 	andi	r2,fp,64
 8005a00:	10009426 	beq	r2,zero,8005c54 <___svfprintf_internal_r+0x1d70>
 8005a04:	d9002d17 	ldw	r4,180(sp)
 8005a08:	d9403017 	ldw	r5,192(sp)
 8005a0c:	20800017 	ldw	r2,0(r4)
 8005a10:	21000104 	addi	r4,r4,4
 8005a14:	d9002d15 	stw	r4,180(sp)
 8005a18:	1140000d 	sth	r5,0(r2)
 8005a1c:	00395d06 	br	8003f94 <__alt_data_end+0xfc003f94>
 8005a20:	d9002f17 	ldw	r4,188(sp)
 8005a24:	b00b883a 	mov	r5,r22
 8005a28:	b80d883a 	mov	r6,r23
 8005a2c:	800c8d40 	call	800c8d4 <__ssprint_r>
 8005a30:	1039f51e 	bne	r2,zero,8004208 <__alt_data_end+0xfc004208>
 8005a34:	d8c02017 	ldw	r3,128(sp)
 8005a38:	d8801f17 	ldw	r2,124(sp)
 8005a3c:	da000404 	addi	r8,sp,16
 8005a40:	d9403317 	ldw	r5,204(sp)
 8005a44:	d9003117 	ldw	r4,196(sp)
 8005a48:	10800044 	addi	r2,r2,1
 8005a4c:	28c7883a 	add	r3,r5,r3
 8005a50:	41000015 	stw	r4,0(r8)
 8005a54:	41400115 	stw	r5,4(r8)
 8005a58:	d8c02015 	stw	r3,128(sp)
 8005a5c:	d8801f15 	stw	r2,124(sp)
 8005a60:	010001c4 	movi	r4,7
 8005a64:	20bb060e 	bge	r4,r2,8004680 <__alt_data_end+0xfc004680>
 8005a68:	003d8306 	br	8005078 <__alt_data_end+0xfc005078>
 8005a6c:	da004015 	stw	r8,256(sp)
 8005a70:	8003e4c0 	call	8003e4c <strlen>
 8005a74:	1023883a 	mov	r17,r2
 8005a78:	da004017 	ldw	r8,256(sp)
 8005a7c:	883c290e 	bge	r17,zero,8004b24 <__alt_data_end+0xfc004b24>
 8005a80:	0005883a 	mov	r2,zero
 8005a84:	003c2706 	br	8004b24 <__alt_data_end+0xfc004b24>
 8005a88:	d8802604 	addi	r2,sp,152
 8005a8c:	d8800115 	stw	r2,4(sp)
 8005a90:	d9002f17 	ldw	r4,188(sp)
 8005a94:	d8802504 	addi	r2,sp,148
 8005a98:	d9403717 	ldw	r5,220(sp)
 8005a9c:	d8800215 	stw	r2,8(sp)
 8005aa0:	d8802104 	addi	r2,sp,132
 8005aa4:	da400015 	stw	r9,0(sp)
 8005aa8:	d8800315 	stw	r2,12(sp)
 8005aac:	880d883a 	mov	r6,r17
 8005ab0:	01c000c4 	movi	r7,3
 8005ab4:	da004015 	stw	r8,256(sp)
 8005ab8:	da403f15 	stw	r9,252(sp)
 8005abc:	80083cc0 	call	80083cc <_dtoa_r>
 8005ac0:	da403f17 	ldw	r9,252(sp)
 8005ac4:	da004017 	ldw	r8,256(sp)
 8005ac8:	d8803115 	stw	r2,196(sp)
 8005acc:	482b883a 	mov	r21,r9
 8005ad0:	d8c03117 	ldw	r3,196(sp)
 8005ad4:	00801184 	movi	r2,70
 8005ad8:	1d55883a 	add	r10,r3,r21
 8005adc:	98bf5b1e 	bne	r19,r2,800584c <__alt_data_end+0xfc00584c>
 8005ae0:	19000007 	ldb	r4,0(r3)
 8005ae4:	00800c04 	movi	r2,48
 8005ae8:	2080d826 	beq	r4,r2,8005e4c <___svfprintf_internal_r+0x1f68>
 8005aec:	d8c02617 	ldw	r3,152(sp)
 8005af0:	50d5883a 	add	r10,r10,r3
 8005af4:	003f5506 	br	800584c <__alt_data_end+0xfc00584c>
 8005af8:	01020074 	movhi	r4,2049
 8005afc:	211b5884 	addi	r4,r4,28002
 8005b00:	d9003615 	stw	r4,216(sp)
 8005b04:	003a7706 	br	80044e4 <__alt_data_end+0xfc0044e4>
 8005b08:	0023883a 	mov	r17,zero
 8005b0c:	003da306 	br	800519c <__alt_data_end+0xfc00519c>
 8005b10:	d9002f17 	ldw	r4,188(sp)
 8005b14:	b00b883a 	mov	r5,r22
 8005b18:	b80d883a 	mov	r6,r23
 8005b1c:	800c8d40 	call	800c8d4 <__ssprint_r>
 8005b20:	1039b91e 	bne	r2,zero,8004208 <__alt_data_end+0xfc004208>
 8005b24:	d8c02017 	ldw	r3,128(sp)
 8005b28:	da000404 	addi	r8,sp,16
 8005b2c:	003d9a06 	br	8005198 <__alt_data_end+0xfc005198>
 8005b30:	d9002f17 	ldw	r4,188(sp)
 8005b34:	b00b883a 	mov	r5,r22
 8005b38:	b80d883a 	mov	r6,r23
 8005b3c:	800c8d40 	call	800c8d4 <__ssprint_r>
 8005b40:	1039b11e 	bne	r2,zero,8004208 <__alt_data_end+0xfc004208>
 8005b44:	d8802617 	ldw	r2,152(sp)
 8005b48:	d8c02017 	ldw	r3,128(sp)
 8005b4c:	da000404 	addi	r8,sp,16
 8005b50:	003e0c06 	br	8005384 <__alt_data_end+0xfc005384>
 8005b54:	01020074 	movhi	r4,2049
 8005b58:	211b5484 	addi	r4,r4,27986
 8005b5c:	d9002b15 	stw	r4,172(sp)
 8005b60:	d9002b17 	ldw	r4,172(sp)
 8005b64:	1c07883a 	add	r3,r3,r16
 8005b68:	10800044 	addi	r2,r2,1
 8005b6c:	41000015 	stw	r4,0(r8)
 8005b70:	44000115 	stw	r16,4(r8)
 8005b74:	d8c02015 	stw	r3,128(sp)
 8005b78:	d8801f15 	stw	r2,124(sp)
 8005b7c:	010001c4 	movi	r4,7
 8005b80:	20bfa716 	blt	r4,r2,8005a20 <__alt_data_end+0xfc005a20>
 8005b84:	42000204 	addi	r8,r8,8
 8005b88:	003fad06 	br	8005a40 <__alt_data_end+0xfc005a40>
 8005b8c:	d9002f17 	ldw	r4,188(sp)
 8005b90:	b00b883a 	mov	r5,r22
 8005b94:	b80d883a 	mov	r6,r23
 8005b98:	800c8d40 	call	800c8d4 <__ssprint_r>
 8005b9c:	10399a1e 	bne	r2,zero,8004208 <__alt_data_end+0xfc004208>
 8005ba0:	d8802617 	ldw	r2,152(sp)
 8005ba4:	d9403317 	ldw	r5,204(sp)
 8005ba8:	d8c02017 	ldw	r3,128(sp)
 8005bac:	da000404 	addi	r8,sp,16
 8005bb0:	2885c83a 	sub	r2,r5,r2
 8005bb4:	003e0406 	br	80053c8 <__alt_data_end+0xfc0053c8>
 8005bb8:	00800184 	movi	r2,6
 8005bbc:	1240012e 	bgeu	r2,r9,8005bc4 <___svfprintf_internal_r+0x1ce0>
 8005bc0:	1013883a 	mov	r9,r2
 8005bc4:	4823883a 	mov	r17,r9
 8005bc8:	4805883a 	mov	r2,r9
 8005bcc:	4800b616 	blt	r9,zero,8005ea8 <___svfprintf_internal_r+0x1fc4>
 8005bd0:	01420074 	movhi	r5,2049
 8005bd4:	295b5204 	addi	r5,r5,27976
 8005bd8:	d8802a15 	stw	r2,168(sp)
 8005bdc:	dc802d15 	stw	r18,180(sp)
 8005be0:	d8003215 	stw	zero,200(sp)
 8005be4:	d8003415 	stw	zero,208(sp)
 8005be8:	d9403115 	stw	r5,196(sp)
 8005bec:	0005883a 	mov	r2,zero
 8005bf0:	003a0606 	br	800440c <__alt_data_end+0xfc00440c>
 8005bf4:	0021883a 	mov	r16,zero
 8005bf8:	003df406 	br	80053cc <__alt_data_end+0xfc0053cc>
 8005bfc:	01420074 	movhi	r5,2049
 8005c00:	295b5884 	addi	r5,r5,28002
 8005c04:	d9403615 	stw	r5,216(sp)
 8005c08:	003ac306 	br	8004718 <__alt_data_end+0xfc004718>
 8005c0c:	00800b44 	movi	r2,45
 8005c10:	d8802785 	stb	r2,158(sp)
 8005c14:	df002a15 	stw	fp,168(sp)
 8005c18:	d8003215 	stw	zero,200(sp)
 8005c1c:	df002d17 	ldw	fp,180(sp)
 8005c20:	00800b44 	movi	r2,45
 8005c24:	dc802d15 	stw	r18,180(sp)
 8005c28:	0039f506 	br	8004400 <__alt_data_end+0xfc004400>
 8005c2c:	04c00b44 	movi	r19,45
 8005c30:	dcc02785 	stb	r19,158(sp)
 8005c34:	003af206 	br	8004800 <__alt_data_end+0xfc004800>
 8005c38:	d8c02617 	ldw	r3,152(sp)
 8005c3c:	00bfff44 	movi	r2,-3
 8005c40:	18801816 	blt	r3,r2,8005ca4 <___svfprintf_internal_r+0x1dc0>
 8005c44:	48c01716 	blt	r9,r3,8005ca4 <___svfprintf_internal_r+0x1dc0>
 8005c48:	d8c03415 	stw	r3,208(sp)
 8005c4c:	040019c4 	movi	r16,103
 8005c50:	003f1d06 	br	80058c8 <__alt_data_end+0xfc0058c8>
 8005c54:	d8c02d17 	ldw	r3,180(sp)
 8005c58:	d9003017 	ldw	r4,192(sp)
 8005c5c:	18800017 	ldw	r2,0(r3)
 8005c60:	18c00104 	addi	r3,r3,4
 8005c64:	d8c02d15 	stw	r3,180(sp)
 8005c68:	11000015 	stw	r4,0(r2)
 8005c6c:	0038c906 	br	8003f94 <__alt_data_end+0xfc003f94>
 8005c70:	5005883a 	mov	r2,r10
 8005c74:	003f0906 	br	800589c <__alt_data_end+0xfc00589c>
 8005c78:	01020074 	movhi	r4,2049
 8005c7c:	211b5484 	addi	r4,r4,27986
 8005c80:	d9002b15 	stw	r4,172(sp)
 8005c84:	003c9a06 	br	8004ef0 <__alt_data_end+0xfc004ef0>
 8005c88:	da402a15 	stw	r9,168(sp)
 8005c8c:	dcc02783 	ldbu	r19,158(sp)
 8005c90:	4823883a 	mov	r17,r9
 8005c94:	dc802d15 	stw	r18,180(sp)
 8005c98:	d8003215 	stw	zero,200(sp)
 8005c9c:	d8003415 	stw	zero,208(sp)
 8005ca0:	0039d306 	br	80043f0 <__alt_data_end+0xfc0043f0>
 8005ca4:	843fff84 	addi	r16,r16,-2
 8005ca8:	1d7fffc4 	addi	r21,r3,-1
 8005cac:	dd402615 	stw	r21,152(sp)
 8005cb0:	dc0022c5 	stb	r16,139(sp)
 8005cb4:	a8008f16 	blt	r21,zero,8005ef4 <___svfprintf_internal_r+0x2010>
 8005cb8:	00800ac4 	movi	r2,43
 8005cbc:	d8802305 	stb	r2,140(sp)
 8005cc0:	00800244 	movi	r2,9
 8005cc4:	1540710e 	bge	r2,r21,8005e8c <___svfprintf_internal_r+0x1fa8>
 8005cc8:	dcc022c4 	addi	r19,sp,139
 8005ccc:	dc002b15 	stw	r16,172(sp)
 8005cd0:	4023883a 	mov	r17,r8
 8005cd4:	9821883a 	mov	r16,r19
 8005cd8:	a809883a 	mov	r4,r21
 8005cdc:	01400284 	movi	r5,10
 8005ce0:	80108300 	call	8010830 <__modsi3>
 8005ce4:	10800c04 	addi	r2,r2,48
 8005ce8:	843fffc4 	addi	r16,r16,-1
 8005cec:	a809883a 	mov	r4,r21
 8005cf0:	01400284 	movi	r5,10
 8005cf4:	80800005 	stb	r2,0(r16)
 8005cf8:	80107dc0 	call	80107dc <__divsi3>
 8005cfc:	01000244 	movi	r4,9
 8005d00:	102b883a 	mov	r21,r2
 8005d04:	20bff416 	blt	r4,r2,8005cd8 <__alt_data_end+0xfc005cd8>
 8005d08:	8811883a 	mov	r8,r17
 8005d0c:	10800c04 	addi	r2,r2,48
 8005d10:	8023883a 	mov	r17,r16
 8005d14:	897fffc4 	addi	r5,r17,-1
 8005d18:	88bfffc5 	stb	r2,-1(r17)
 8005d1c:	dc002b17 	ldw	r16,172(sp)
 8005d20:	2cc08a2e 	bgeu	r5,r19,8005f4c <___svfprintf_internal_r+0x2068>
 8005d24:	d9802384 	addi	r6,sp,142
 8005d28:	344dc83a 	sub	r6,r6,r17
 8005d2c:	d9002344 	addi	r4,sp,141
 8005d30:	998d883a 	add	r6,r19,r6
 8005d34:	00000106 	br	8005d3c <___svfprintf_internal_r+0x1e58>
 8005d38:	28800003 	ldbu	r2,0(r5)
 8005d3c:	20800005 	stb	r2,0(r4)
 8005d40:	21000044 	addi	r4,r4,1
 8005d44:	29400044 	addi	r5,r5,1
 8005d48:	21bffb1e 	bne	r4,r6,8005d38 <__alt_data_end+0xfc005d38>
 8005d4c:	d8802304 	addi	r2,sp,140
 8005d50:	1445c83a 	sub	r2,r2,r17
 8005d54:	d9402344 	addi	r5,sp,141
 8005d58:	2885883a 	add	r2,r5,r2
 8005d5c:	14e7c83a 	sub	r19,r2,r19
 8005d60:	d8803317 	ldw	r2,204(sp)
 8005d64:	d8c03317 	ldw	r3,204(sp)
 8005d68:	dcc03a15 	stw	r19,232(sp)
 8005d6c:	14e3883a 	add	r17,r2,r19
 8005d70:	00800044 	movi	r2,1
 8005d74:	10c0690e 	bge	r2,r3,8005f1c <___svfprintf_internal_r+0x2038>
 8005d78:	8c400044 	addi	r17,r17,1
 8005d7c:	8839883a 	mov	fp,r17
 8005d80:	88006416 	blt	r17,zero,8005f14 <___svfprintf_internal_r+0x2030>
 8005d84:	d8003415 	stw	zero,208(sp)
 8005d88:	003ed806 	br	80058ec <__alt_data_end+0xfc0058ec>
 8005d8c:	d9002f17 	ldw	r4,188(sp)
 8005d90:	b00b883a 	mov	r5,r22
 8005d94:	b80d883a 	mov	r6,r23
 8005d98:	800c8d40 	call	800c8d4 <__ssprint_r>
 8005d9c:	10391a1e 	bne	r2,zero,8004208 <__alt_data_end+0xfc004208>
 8005da0:	dc002617 	ldw	r16,152(sp)
 8005da4:	d8c02017 	ldw	r3,128(sp)
 8005da8:	d8801f17 	ldw	r2,124(sp)
 8005dac:	da000404 	addi	r8,sp,16
 8005db0:	003e4b06 	br	80056e0 <__alt_data_end+0xfc0056e0>
 8005db4:	483e7f1e 	bne	r9,zero,80057b4 <__alt_data_end+0xfc0057b4>
 8005db8:	8813883a 	mov	r9,r17
 8005dbc:	003e7d06 	br	80057b4 <__alt_data_end+0xfc0057b4>
 8005dc0:	00c00b44 	movi	r3,45
 8005dc4:	2460003c 	xorhi	r17,r4,32768
 8005dc8:	d8c02a05 	stb	r3,168(sp)
 8005dcc:	003e7f06 	br	80057cc <__alt_data_end+0xfc0057cc>
 8005dd0:	d8c03417 	ldw	r3,208(sp)
 8005dd4:	00c03e0e 	bge	zero,r3,8005ed0 <___svfprintf_internal_r+0x1fec>
 8005dd8:	04400044 	movi	r17,1
 8005ddc:	d9003317 	ldw	r4,204(sp)
 8005de0:	8923883a 	add	r17,r17,r4
 8005de4:	8839883a 	mov	fp,r17
 8005de8:	883ec00e 	bge	r17,zero,80058ec <__alt_data_end+0xfc0058ec>
 8005dec:	0039883a 	mov	fp,zero
 8005df0:	003ebe06 	br	80058ec <__alt_data_end+0xfc0058ec>
 8005df4:	4d400044 	addi	r21,r9,1
 8005df8:	003e7b06 	br	80057e8 <__alt_data_end+0xfc0057e8>
 8005dfc:	1839883a 	mov	fp,r3
 8005e00:	18004e16 	blt	r3,zero,8005f3c <___svfprintf_internal_r+0x2058>
 8005e04:	dc403417 	ldw	r17,208(sp)
 8005e08:	003eb806 	br	80058ec <__alt_data_end+0xfc0058ec>
 8005e0c:	d8802117 	ldw	r2,132(sp)
 8005e10:	003ea206 	br	800589c <__alt_data_end+0xfc00589c>
 8005e14:	00c0310e 	bge	zero,r3,8005edc <___svfprintf_internal_r+0x1ff8>
 8005e18:	4800021e 	bne	r9,zero,8005e24 <___svfprintf_internal_r+0x1f40>
 8005e1c:	e080004c 	andi	r2,fp,1
 8005e20:	103ff626 	beq	r2,zero,8005dfc <__alt_data_end+0xfc005dfc>
 8005e24:	d8c03417 	ldw	r3,208(sp)
 8005e28:	4a400044 	addi	r9,r9,1
 8005e2c:	1a63883a 	add	r17,r3,r9
 8005e30:	8839883a 	mov	fp,r17
 8005e34:	883ead0e 	bge	r17,zero,80058ec <__alt_data_end+0xfc0058ec>
 8005e38:	003fec06 	br	8005dec <__alt_data_end+0xfc005dec>
 8005e3c:	01020074 	movhi	r4,2049
 8005e40:	211b5484 	addi	r4,r4,27986
 8005e44:	d9002b15 	stw	r4,172(sp)
 8005e48:	003d2006 	br	80052cc <__alt_data_end+0xfc0052cc>
 8005e4c:	d9003717 	ldw	r4,220(sp)
 8005e50:	880b883a 	mov	r5,r17
 8005e54:	000d883a 	mov	r6,zero
 8005e58:	000f883a 	mov	r7,zero
 8005e5c:	da004015 	stw	r8,256(sp)
 8005e60:	da403f15 	stw	r9,252(sp)
 8005e64:	da803e15 	stw	r10,248(sp)
 8005e68:	8011ab80 	call	8011ab8 <__eqdf2>
 8005e6c:	da004017 	ldw	r8,256(sp)
 8005e70:	da403f17 	ldw	r9,252(sp)
 8005e74:	da803e17 	ldw	r10,248(sp)
 8005e78:	103f1c26 	beq	r2,zero,8005aec <__alt_data_end+0xfc005aec>
 8005e7c:	00800044 	movi	r2,1
 8005e80:	1547c83a 	sub	r3,r2,r21
 8005e84:	d8c02615 	stw	r3,152(sp)
 8005e88:	003f1906 	br	8005af0 <__alt_data_end+0xfc005af0>
 8005e8c:	00800c04 	movi	r2,48
 8005e90:	a8c00c04 	addi	r3,r21,48
 8005e94:	d8802345 	stb	r2,141(sp)
 8005e98:	d8c02385 	stb	r3,142(sp)
 8005e9c:	d88023c4 	addi	r2,sp,143
 8005ea0:	dcc022c4 	addi	r19,sp,139
 8005ea4:	003fad06 	br	8005d5c <__alt_data_end+0xfc005d5c>
 8005ea8:	0005883a 	mov	r2,zero
 8005eac:	003f4806 	br	8005bd0 <__alt_data_end+0xfc005bd0>
 8005eb0:	d9402d17 	ldw	r5,180(sp)
 8005eb4:	2a400017 	ldw	r9,0(r5)
 8005eb8:	28c00104 	addi	r3,r5,4
 8005ebc:	d8c02d15 	stw	r3,180(sp)
 8005ec0:	483e2c0e 	bge	r9,zero,8005774 <__alt_data_end+0xfc005774>
 8005ec4:	027fffc4 	movi	r9,-1
 8005ec8:	e4000047 	ldb	r16,1(fp)
 8005ecc:	00385c06 	br	8004040 <__alt_data_end+0xfc004040>
 8005ed0:	04400084 	movi	r17,2
 8005ed4:	88e3c83a 	sub	r17,r17,r3
 8005ed8:	003fc006 	br	8005ddc <__alt_data_end+0xfc005ddc>
 8005edc:	4800091e 	bne	r9,zero,8005f04 <___svfprintf_internal_r+0x2020>
 8005ee0:	e080004c 	andi	r2,fp,1
 8005ee4:	1000071e 	bne	r2,zero,8005f04 <___svfprintf_internal_r+0x2020>
 8005ee8:	07000044 	movi	fp,1
 8005eec:	e023883a 	mov	r17,fp
 8005ef0:	003e7e06 	br	80058ec <__alt_data_end+0xfc0058ec>
 8005ef4:	00800b44 	movi	r2,45
 8005ef8:	056bc83a 	sub	r21,zero,r21
 8005efc:	d8802305 	stb	r2,140(sp)
 8005f00:	003f6f06 	br	8005cc0 <__alt_data_end+0xfc005cc0>
 8005f04:	4c400084 	addi	r17,r9,2
 8005f08:	8839883a 	mov	fp,r17
 8005f0c:	883e770e 	bge	r17,zero,80058ec <__alt_data_end+0xfc0058ec>
 8005f10:	003fb606 	br	8005dec <__alt_data_end+0xfc005dec>
 8005f14:	0039883a 	mov	fp,zero
 8005f18:	003f9a06 	br	8005d84 <__alt_data_end+0xfc005d84>
 8005f1c:	e084703a 	and	r2,fp,r2
 8005f20:	103f9626 	beq	r2,zero,8005d7c <__alt_data_end+0xfc005d7c>
 8005f24:	003f9406 	br	8005d78 <__alt_data_end+0xfc005d78>
 8005f28:	d8c02f17 	ldw	r3,188(sp)
 8005f2c:	00800304 	movi	r2,12
 8005f30:	18800015 	stw	r2,0(r3)
 8005f34:	00bfffc4 	movi	r2,-1
 8005f38:	0038b706 	br	8004218 <__alt_data_end+0xfc004218>
 8005f3c:	0039883a 	mov	fp,zero
 8005f40:	003fb006 	br	8005e04 <__alt_data_end+0xfc005e04>
 8005f44:	d8c02617 	ldw	r3,152(sp)
 8005f48:	003f5706 	br	8005ca8 <__alt_data_end+0xfc005ca8>
 8005f4c:	d8802344 	addi	r2,sp,141
 8005f50:	003f8206 	br	8005d5c <__alt_data_end+0xfc005d5c>

08005f54 <___vfprintf_internal_r>:
 8005f54:	defeb604 	addi	sp,sp,-1320
 8005f58:	dfc14915 	stw	ra,1316(sp)
 8005f5c:	ddc14715 	stw	r23,1308(sp)
 8005f60:	dd814615 	stw	r22,1304(sp)
 8005f64:	202f883a 	mov	r23,r4
 8005f68:	282d883a 	mov	r22,r5
 8005f6c:	d9812a15 	stw	r6,1192(sp)
 8005f70:	d9c12d15 	stw	r7,1204(sp)
 8005f74:	df014815 	stw	fp,1312(sp)
 8005f78:	dd414515 	stw	r21,1300(sp)
 8005f7c:	dd014415 	stw	r20,1296(sp)
 8005f80:	dcc14315 	stw	r19,1292(sp)
 8005f84:	dc814215 	stw	r18,1288(sp)
 8005f88:	dc414115 	stw	r17,1284(sp)
 8005f8c:	dc014015 	stw	r16,1280(sp)
 8005f90:	800abd40 	call	800abd4 <_localeconv_r>
 8005f94:	10800017 	ldw	r2,0(r2)
 8005f98:	1009883a 	mov	r4,r2
 8005f9c:	d8813515 	stw	r2,1236(sp)
 8005fa0:	8003e4c0 	call	8003e4c <strlen>
 8005fa4:	d8813815 	stw	r2,1248(sp)
 8005fa8:	b8000226 	beq	r23,zero,8005fb4 <___vfprintf_internal_r+0x60>
 8005fac:	b8800e17 	ldw	r2,56(r23)
 8005fb0:	10010526 	beq	r2,zero,80063c8 <___vfprintf_internal_r+0x474>
 8005fb4:	b0c0030b 	ldhu	r3,12(r22)
 8005fb8:	1908000c 	andi	r4,r3,8192
 8005fbc:	1805883a 	mov	r2,r3
 8005fc0:	2000071e 	bne	r4,zero,8005fe0 <___vfprintf_internal_r+0x8c>
 8005fc4:	b1001917 	ldw	r4,100(r22)
 8005fc8:	18880014 	ori	r2,r3,8192
 8005fcc:	00f7ffc4 	movi	r3,-8193
 8005fd0:	20c8703a 	and	r4,r4,r3
 8005fd4:	b080030d 	sth	r2,12(r22)
 8005fd8:	1007883a 	mov	r3,r2
 8005fdc:	b1001915 	stw	r4,100(r22)
 8005fe0:	1100020c 	andi	r4,r2,8
 8005fe4:	2000a826 	beq	r4,zero,8006288 <___vfprintf_internal_r+0x334>
 8005fe8:	b1000417 	ldw	r4,16(r22)
 8005fec:	2000a626 	beq	r4,zero,8006288 <___vfprintf_internal_r+0x334>
 8005ff0:	1080068c 	andi	r2,r2,26
 8005ff4:	01000284 	movi	r4,10
 8005ff8:	1100ac26 	beq	r2,r4,80062ac <___vfprintf_internal_r+0x358>
 8005ffc:	d8c10e04 	addi	r3,sp,1080
 8006000:	d9010dc4 	addi	r4,sp,1079
 8006004:	d9400404 	addi	r5,sp,16
 8006008:	05020074 	movhi	r20,2049
 800600c:	1905c83a 	sub	r2,r3,r4
 8006010:	a51b5c84 	addi	r20,r20,28018
 8006014:	d8c12815 	stw	r3,1184(sp)
 8006018:	d9012915 	stw	r4,1188(sp)
 800601c:	d9411e15 	stw	r5,1144(sp)
 8006020:	d8012015 	stw	zero,1152(sp)
 8006024:	d8011f15 	stw	zero,1148(sp)
 8006028:	d8013315 	stw	zero,1228(sp)
 800602c:	d8013715 	stw	zero,1244(sp)
 8006030:	d8013915 	stw	zero,1252(sp)
 8006034:	d8013b15 	stw	zero,1260(sp)
 8006038:	d8013a15 	stw	zero,1256(sp)
 800603c:	d8012f15 	stw	zero,1212(sp)
 8006040:	2811883a 	mov	r8,r5
 8006044:	d8813c15 	stw	r2,1264(sp)
 8006048:	d8c12a17 	ldw	r3,1192(sp)
 800604c:	18800007 	ldb	r2,0(r3)
 8006050:	10021326 	beq	r2,zero,80068a0 <___vfprintf_internal_r+0x94c>
 8006054:	00c00944 	movi	r3,37
 8006058:	dc012a17 	ldw	r16,1192(sp)
 800605c:	10c0021e 	bne	r2,r3,8006068 <___vfprintf_internal_r+0x114>
 8006060:	00001606 	br	80060bc <___vfprintf_internal_r+0x168>
 8006064:	10c08526 	beq	r2,r3,800627c <___vfprintf_internal_r+0x328>
 8006068:	84000044 	addi	r16,r16,1
 800606c:	80800007 	ldb	r2,0(r16)
 8006070:	103ffc1e 	bne	r2,zero,8006064 <__alt_data_end+0xfc006064>
 8006074:	d9012a17 	ldw	r4,1192(sp)
 8006078:	8123c83a 	sub	r17,r16,r4
 800607c:	88000f26 	beq	r17,zero,80060bc <___vfprintf_internal_r+0x168>
 8006080:	d8812a17 	ldw	r2,1192(sp)
 8006084:	d8c12017 	ldw	r3,1152(sp)
 8006088:	44400115 	stw	r17,4(r8)
 800608c:	40800015 	stw	r2,0(r8)
 8006090:	d8811f17 	ldw	r2,1148(sp)
 8006094:	1c47883a 	add	r3,r3,r17
 8006098:	d8c12015 	stw	r3,1152(sp)
 800609c:	10800044 	addi	r2,r2,1
 80060a0:	d8811f15 	stw	r2,1148(sp)
 80060a4:	00c001c4 	movi	r3,7
 80060a8:	1880b516 	blt	r3,r2,8006380 <___vfprintf_internal_r+0x42c>
 80060ac:	42000204 	addi	r8,r8,8
 80060b0:	d8c12f17 	ldw	r3,1212(sp)
 80060b4:	1c47883a 	add	r3,r3,r17
 80060b8:	d8c12f15 	stw	r3,1212(sp)
 80060bc:	80800007 	ldb	r2,0(r16)
 80060c0:	1000b626 	beq	r2,zero,800639c <___vfprintf_internal_r+0x448>
 80060c4:	80800044 	addi	r2,r16,1
 80060c8:	84000047 	ldb	r16,1(r16)
 80060cc:	0027883a 	mov	r19,zero
 80060d0:	0039883a 	mov	fp,zero
 80060d4:	dcc12b05 	stb	r19,1196(sp)
 80060d8:	d8012785 	stb	zero,1182(sp)
 80060dc:	027fffc4 	movi	r9,-1
 80060e0:	d8012e15 	stw	zero,1208(sp)
 80060e4:	04401604 	movi	r17,88
 80060e8:	04800244 	movi	r18,9
 80060ec:	da012a15 	stw	r8,1192(sp)
 80060f0:	e027883a 	mov	r19,fp
 80060f4:	17000044 	addi	fp,r2,1
 80060f8:	80bff804 	addi	r2,r16,-32
 80060fc:	88831236 	bltu	r17,r2,8006d48 <___vfprintf_internal_r+0xdf4>
 8006100:	100490ba 	slli	r2,r2,2
 8006104:	01020034 	movhi	r4,2048
 8006108:	21184604 	addi	r4,r4,24856
 800610c:	1105883a 	add	r2,r2,r4
 8006110:	10800017 	ldw	r2,0(r2)
 8006114:	1000683a 	jmp	r2
 8006118:	08006c64 	muli	zero,at,433
 800611c:	08006d48 	cmpgei	zero,at,437
 8006120:	08006d48 	cmpgei	zero,at,437
 8006124:	08006c80 	call	8006c8 <__alt_mem_sdram_controller-0x77ff938>
 8006128:	08006d48 	cmpgei	zero,at,437
 800612c:	08006d48 	cmpgei	zero,at,437
 8006130:	08006d48 	cmpgei	zero,at,437
 8006134:	08006d48 	cmpgei	zero,at,437
 8006138:	08006d48 	cmpgei	zero,at,437
 800613c:	08006d48 	cmpgei	zero,at,437
 8006140:	08006c90 	cmplti	zero,at,434
 8006144:	08006cb8 	rdprs	zero,at,434
 8006148:	08006d48 	cmpgei	zero,at,437
 800614c:	080063d4 	ori	zero,at,399
 8006150:	080063e4 	muli	zero,at,399
 8006154:	08006d48 	cmpgei	zero,at,437
 8006158:	08006434 	orhi	zero,at,400
 800615c:	08006444 	addi	zero,at,401
 8006160:	08006444 	addi	zero,at,401
 8006164:	08006444 	addi	zero,at,401
 8006168:	08006444 	addi	zero,at,401
 800616c:	08006444 	addi	zero,at,401
 8006170:	08006444 	addi	zero,at,401
 8006174:	08006444 	addi	zero,at,401
 8006178:	08006444 	addi	zero,at,401
 800617c:	08006444 	addi	zero,at,401
 8006180:	08006d48 	cmpgei	zero,at,437
 8006184:	08006d48 	cmpgei	zero,at,437
 8006188:	08006d48 	cmpgei	zero,at,437
 800618c:	08006d48 	cmpgei	zero,at,437
 8006190:	08006d48 	cmpgei	zero,at,437
 8006194:	08006d48 	cmpgei	zero,at,437
 8006198:	08006d48 	cmpgei	zero,at,437
 800619c:	08006d48 	cmpgei	zero,at,437
 80061a0:	08006d48 	cmpgei	zero,at,437
 80061a4:	08006d48 	cmpgei	zero,at,437
 80061a8:	08006488 	cmpgei	zero,at,402
 80061ac:	080068a8 	cmpgeui	zero,at,418
 80061b0:	08006d48 	cmpgei	zero,at,437
 80061b4:	080068a8 	cmpgeui	zero,at,418
 80061b8:	08006d48 	cmpgei	zero,at,437
 80061bc:	08006d48 	cmpgei	zero,at,437
 80061c0:	08006d48 	cmpgei	zero,at,437
 80061c4:	08006d48 	cmpgei	zero,at,437
 80061c8:	08006950 	cmplti	zero,at,421
 80061cc:	08006d48 	cmpgei	zero,at,437
 80061d0:	08006d48 	cmpgei	zero,at,437
 80061d4:	08006960 	cmpeqi	zero,at,421
 80061d8:	08006d48 	cmpgei	zero,at,437
 80061dc:	08006d48 	cmpgei	zero,at,437
 80061e0:	08006d48 	cmpgei	zero,at,437
 80061e4:	08006d48 	cmpgei	zero,at,437
 80061e8:	08006d48 	cmpgei	zero,at,437
 80061ec:	080069a4 	muli	zero,at,422
 80061f0:	08006d48 	cmpgei	zero,at,437
 80061f4:	08006d48 	cmpgei	zero,at,437
 80061f8:	080069dc 	xori	zero,at,423
 80061fc:	08006d48 	cmpgei	zero,at,437
 8006200:	08006d48 	cmpgei	zero,at,437
 8006204:	08006d48 	cmpgei	zero,at,437
 8006208:	08006d48 	cmpgei	zero,at,437
 800620c:	08006d48 	cmpgei	zero,at,437
 8006210:	08006d48 	cmpgei	zero,at,437
 8006214:	08006d48 	cmpgei	zero,at,437
 8006218:	08006d48 	cmpgei	zero,at,437
 800621c:	08006d48 	cmpgei	zero,at,437
 8006220:	08006d48 	cmpgei	zero,at,437
 8006224:	08006c18 	cmpnei	zero,at,432
 8006228:	08006bc4 	addi	zero,at,431
 800622c:	080068a8 	cmpgeui	zero,at,418
 8006230:	080068a8 	cmpgeui	zero,at,418
 8006234:	080068a8 	cmpgeui	zero,at,418
 8006238:	08006c08 	cmpgei	zero,at,432
 800623c:	08006bc4 	addi	zero,at,431
 8006240:	08006d48 	cmpgei	zero,at,437
 8006244:	08006d48 	cmpgei	zero,at,437
 8006248:	08006ae0 	cmpeqi	zero,at,427
 800624c:	08006d48 	cmpgei	zero,at,437
 8006250:	08006af8 	rdprs	zero,at,427
 8006254:	08006b38 	rdprs	zero,at,428
 8006258:	08006b78 	rdprs	zero,at,429
 800625c:	08006a44 	addi	zero,at,425
 8006260:	08006d48 	cmpgei	zero,at,437
 8006264:	08006ccc 	andi	zero,at,435
 8006268:	08006d48 	cmpgei	zero,at,437
 800626c:	08006a54 	ori	zero,at,425
 8006270:	08006d48 	cmpgei	zero,at,437
 8006274:	08006d48 	cmpgei	zero,at,437
 8006278:	08006a94 	ori	zero,at,426
 800627c:	d9412a17 	ldw	r5,1192(sp)
 8006280:	8163c83a 	sub	r17,r16,r5
 8006284:	003f7d06 	br	800607c <__alt_data_end+0xfc00607c>
 8006288:	b809883a 	mov	r4,r23
 800628c:	b00b883a 	mov	r5,r22
 8006290:	80080740 	call	8008074 <__swsetup_r>
 8006294:	10002d1e 	bne	r2,zero,800634c <___vfprintf_internal_r+0x3f8>
 8006298:	b0c0030b 	ldhu	r3,12(r22)
 800629c:	01000284 	movi	r4,10
 80062a0:	1805883a 	mov	r2,r3
 80062a4:	1080068c 	andi	r2,r2,26
 80062a8:	113f541e 	bne	r2,r4,8005ffc <__alt_data_end+0xfc005ffc>
 80062ac:	b080038b 	ldhu	r2,14(r22)
 80062b0:	113fffcc 	andi	r4,r2,65535
 80062b4:	2120001c 	xori	r4,r4,32768
 80062b8:	21200004 	addi	r4,r4,-32768
 80062bc:	203f4f16 	blt	r4,zero,8005ffc <__alt_data_end+0xfc005ffc>
 80062c0:	b2c01917 	ldw	r11,100(r22)
 80062c4:	b2800717 	ldw	r10,28(r22)
 80062c8:	b2400917 	ldw	r9,36(r22)
 80062cc:	d9812a17 	ldw	r6,1192(sp)
 80062d0:	d9c12d17 	ldw	r7,1204(sp)
 80062d4:	02010004 	movi	r8,1024
 80062d8:	18ffff4c 	andi	r3,r3,65533
 80062dc:	d881078d 	sth	r2,1054(sp)
 80062e0:	b809883a 	mov	r4,r23
 80062e4:	d8800404 	addi	r2,sp,16
 80062e8:	d9410404 	addi	r5,sp,1040
 80062ec:	d8c1070d 	sth	r3,1052(sp)
 80062f0:	dac11d15 	stw	r11,1140(sp)
 80062f4:	da810b15 	stw	r10,1068(sp)
 80062f8:	da410d15 	stw	r9,1076(sp)
 80062fc:	d8810415 	stw	r2,1040(sp)
 8006300:	d8810815 	stw	r2,1056(sp)
 8006304:	da010615 	stw	r8,1048(sp)
 8006308:	da010915 	stw	r8,1060(sp)
 800630c:	d8010a15 	stw	zero,1064(sp)
 8006310:	8005f540 	call	8005f54 <___vfprintf_internal_r>
 8006314:	1021883a 	mov	r16,r2
 8006318:	10000416 	blt	r2,zero,800632c <___vfprintf_internal_r+0x3d8>
 800631c:	b809883a 	mov	r4,r23
 8006320:	d9410404 	addi	r5,sp,1040
 8006324:	8009af40 	call	8009af4 <_fflush_r>
 8006328:	1007301e 	bne	r2,zero,8007fec <___vfprintf_internal_r+0x2098>
 800632c:	d881070b 	ldhu	r2,1052(sp)
 8006330:	1080100c 	andi	r2,r2,64
 8006334:	10000326 	beq	r2,zero,8006344 <___vfprintf_internal_r+0x3f0>
 8006338:	b080030b 	ldhu	r2,12(r22)
 800633c:	10801014 	ori	r2,r2,64
 8006340:	b080030d 	sth	r2,12(r22)
 8006344:	8005883a 	mov	r2,r16
 8006348:	00000106 	br	8006350 <___vfprintf_internal_r+0x3fc>
 800634c:	00bfffc4 	movi	r2,-1
 8006350:	dfc14917 	ldw	ra,1316(sp)
 8006354:	df014817 	ldw	fp,1312(sp)
 8006358:	ddc14717 	ldw	r23,1308(sp)
 800635c:	dd814617 	ldw	r22,1304(sp)
 8006360:	dd414517 	ldw	r21,1300(sp)
 8006364:	dd014417 	ldw	r20,1296(sp)
 8006368:	dcc14317 	ldw	r19,1292(sp)
 800636c:	dc814217 	ldw	r18,1288(sp)
 8006370:	dc414117 	ldw	r17,1284(sp)
 8006374:	dc014017 	ldw	r16,1280(sp)
 8006378:	dec14a04 	addi	sp,sp,1320
 800637c:	f800283a 	ret
 8006380:	b809883a 	mov	r4,r23
 8006384:	b00b883a 	mov	r5,r22
 8006388:	d9811e04 	addi	r6,sp,1144
 800638c:	800dd680 	call	800dd68 <__sprint_r>
 8006390:	1000081e 	bne	r2,zero,80063b4 <___vfprintf_internal_r+0x460>
 8006394:	da000404 	addi	r8,sp,16
 8006398:	003f4506 	br	80060b0 <__alt_data_end+0xfc0060b0>
 800639c:	d8812017 	ldw	r2,1152(sp)
 80063a0:	10000426 	beq	r2,zero,80063b4 <___vfprintf_internal_r+0x460>
 80063a4:	b809883a 	mov	r4,r23
 80063a8:	b00b883a 	mov	r5,r22
 80063ac:	d9811e04 	addi	r6,sp,1144
 80063b0:	800dd680 	call	800dd68 <__sprint_r>
 80063b4:	b080030b 	ldhu	r2,12(r22)
 80063b8:	1080100c 	andi	r2,r2,64
 80063bc:	103fe31e 	bne	r2,zero,800634c <__alt_data_end+0xfc00634c>
 80063c0:	d8812f17 	ldw	r2,1212(sp)
 80063c4:	003fe206 	br	8006350 <__alt_data_end+0xfc006350>
 80063c8:	b809883a 	mov	r4,r23
 80063cc:	800a0b00 	call	800a0b0 <__sinit>
 80063d0:	003ef806 	br	8005fb4 <__alt_data_end+0xfc005fb4>
 80063d4:	e005883a 	mov	r2,fp
 80063d8:	9cc00114 	ori	r19,r19,4
 80063dc:	e4000007 	ldb	r16,0(fp)
 80063e0:	003f4406 	br	80060f4 <__alt_data_end+0xfc0060f4>
 80063e4:	e4000007 	ldb	r16,0(fp)
 80063e8:	01000a84 	movi	r4,42
 80063ec:	e0800044 	addi	r2,fp,1
 80063f0:	8106f626 	beq	r16,r4,8007fcc <___vfprintf_internal_r+0x2078>
 80063f4:	857ff404 	addi	r21,r16,-48
 80063f8:	1039883a 	mov	fp,r2
 80063fc:	0013883a 	mov	r9,zero
 8006400:	957f3d36 	bltu	r18,r21,80060f8 <__alt_data_end+0xfc0060f8>
 8006404:	0009883a 	mov	r4,zero
 8006408:	01400284 	movi	r5,10
 800640c:	80027f80 	call	80027f8 <__mulsi3>
 8006410:	e4000007 	ldb	r16,0(fp)
 8006414:	a889883a 	add	r4,r21,r2
 8006418:	e7000044 	addi	fp,fp,1
 800641c:	857ff404 	addi	r21,r16,-48
 8006420:	957ff92e 	bgeu	r18,r21,8006408 <__alt_data_end+0xfc006408>
 8006424:	2013883a 	mov	r9,r4
 8006428:	203f330e 	bge	r4,zero,80060f8 <__alt_data_end+0xfc0060f8>
 800642c:	027fffc4 	movi	r9,-1
 8006430:	003f3106 	br	80060f8 <__alt_data_end+0xfc0060f8>
 8006434:	9cc02014 	ori	r19,r19,128
 8006438:	e005883a 	mov	r2,fp
 800643c:	e4000007 	ldb	r16,0(fp)
 8006440:	003f2c06 	br	80060f4 <__alt_data_end+0xfc0060f4>
 8006444:	857ff404 	addi	r21,r16,-48
 8006448:	d8012e15 	stw	zero,1208(sp)
 800644c:	e021883a 	mov	r16,fp
 8006450:	0009883a 	mov	r4,zero
 8006454:	da412c15 	stw	r9,1200(sp)
 8006458:	01400284 	movi	r5,10
 800645c:	80027f80 	call	80027f8 <__mulsi3>
 8006460:	81400007 	ldb	r5,0(r16)
 8006464:	1549883a 	add	r4,r2,r21
 8006468:	e7000044 	addi	fp,fp,1
 800646c:	2d7ff404 	addi	r21,r5,-48
 8006470:	e021883a 	mov	r16,fp
 8006474:	957ff82e 	bgeu	r18,r21,8006458 <__alt_data_end+0xfc006458>
 8006478:	2821883a 	mov	r16,r5
 800647c:	d9012e15 	stw	r4,1208(sp)
 8006480:	da412c17 	ldw	r9,1200(sp)
 8006484:	003f1c06 	br	80060f8 <__alt_data_end+0xfc0060f8>
 8006488:	da012a17 	ldw	r8,1192(sp)
 800648c:	df012a15 	stw	fp,1192(sp)
 8006490:	9839883a 	mov	fp,r19
 8006494:	dcc12b03 	ldbu	r19,1196(sp)
 8006498:	e7000414 	ori	fp,fp,16
 800649c:	e080080c 	andi	r2,fp,32
 80064a0:	dcc12785 	stb	r19,1182(sp)
 80064a4:	d8c12d17 	ldw	r3,1204(sp)
 80064a8:	1001ce26 	beq	r2,zero,8006be4 <___vfprintf_internal_r+0xc90>
 80064ac:	d9012d17 	ldw	r4,1204(sp)
 80064b0:	18800117 	ldw	r2,4(r3)
 80064b4:	1c800017 	ldw	r18,0(r3)
 80064b8:	21000204 	addi	r4,r4,8
 80064bc:	d9012d15 	stw	r4,1204(sp)
 80064c0:	102b883a 	mov	r21,r2
 80064c4:	10044916 	blt	r2,zero,80075ec <___vfprintf_internal_r+0x1698>
 80064c8:	dcc12783 	ldbu	r19,1182(sp)
 80064cc:	da413215 	stw	r9,1224(sp)
 80064d0:	00800044 	movi	r2,1
 80064d4:	9546b03a 	or	r3,r18,r21
 80064d8:	48000216 	blt	r9,zero,80064e4 <___vfprintf_internal_r+0x590>
 80064dc:	013fdfc4 	movi	r4,-129
 80064e0:	e138703a 	and	fp,fp,r4
 80064e4:	1802251e 	bne	r3,zero,8006d7c <___vfprintf_internal_r+0xe28>
 80064e8:	48031726 	beq	r9,zero,8007148 <___vfprintf_internal_r+0x11f4>
 80064ec:	10803fcc 	andi	r2,r2,255
 80064f0:	00c00044 	movi	r3,1
 80064f4:	10c24526 	beq	r2,r3,8006e0c <___vfprintf_internal_r+0xeb8>
 80064f8:	00c00084 	movi	r3,2
 80064fc:	10c33426 	beq	r2,r3,80071d0 <___vfprintf_internal_r+0x127c>
 8006500:	d8c10e04 	addi	r3,sp,1080
 8006504:	9008d0fa 	srli	r4,r18,3
 8006508:	a80a977a 	slli	r5,r21,29
 800650c:	a82ad0fa 	srli	r21,r21,3
 8006510:	948001cc 	andi	r18,r18,7
 8006514:	90800c04 	addi	r2,r18,48
 8006518:	18ffffc4 	addi	r3,r3,-1
 800651c:	2924b03a 	or	r18,r5,r4
 8006520:	18800005 	stb	r2,0(r3)
 8006524:	9548b03a 	or	r4,r18,r21
 8006528:	203ff61e 	bne	r4,zero,8006504 <__alt_data_end+0xfc006504>
 800652c:	e100004c 	andi	r4,fp,1
 8006530:	d8c13115 	stw	r3,1220(sp)
 8006534:	20039a1e 	bne	r4,zero,80073a0 <___vfprintf_internal_r+0x144c>
 8006538:	d8812817 	ldw	r2,1184(sp)
 800653c:	10e3c83a 	sub	r17,r2,r3
 8006540:	8805883a 	mov	r2,r17
 8006544:	8a40010e 	bge	r17,r9,800654c <___vfprintf_internal_r+0x5f8>
 8006548:	4805883a 	mov	r2,r9
 800654c:	d8812b15 	stw	r2,1196(sp)
 8006550:	d8013415 	stw	zero,1232(sp)
 8006554:	98803fcc 	andi	r2,r19,255
 8006558:	1080201c 	xori	r2,r2,128
 800655c:	10bfe004 	addi	r2,r2,-128
 8006560:	10000326 	beq	r2,zero,8006570 <___vfprintf_internal_r+0x61c>
 8006564:	d8c12b17 	ldw	r3,1196(sp)
 8006568:	18c00044 	addi	r3,r3,1
 800656c:	d8c12b15 	stw	r3,1196(sp)
 8006570:	e0c0008c 	andi	r3,fp,2
 8006574:	d8c12c15 	stw	r3,1200(sp)
 8006578:	18000326 	beq	r3,zero,8006588 <___vfprintf_internal_r+0x634>
 800657c:	d8c12b17 	ldw	r3,1196(sp)
 8006580:	18c00084 	addi	r3,r3,2
 8006584:	d8c12b15 	stw	r3,1196(sp)
 8006588:	e0c0210c 	andi	r3,fp,132
 800658c:	d8c13015 	stw	r3,1216(sp)
 8006590:	1801f81e 	bne	r3,zero,8006d74 <___vfprintf_internal_r+0xe20>
 8006594:	d9012e17 	ldw	r4,1208(sp)
 8006598:	d8c12b17 	ldw	r3,1196(sp)
 800659c:	20ebc83a 	sub	r21,r4,r3
 80065a0:	0541f40e 	bge	zero,r21,8006d74 <___vfprintf_internal_r+0xe20>
 80065a4:	02400404 	movi	r9,16
 80065a8:	d8c12017 	ldw	r3,1152(sp)
 80065ac:	d8811f17 	ldw	r2,1148(sp)
 80065b0:	4d45750e 	bge	r9,r21,8007b88 <___vfprintf_internal_r+0x1c34>
 80065b4:	01420074 	movhi	r5,2049
 80065b8:	295b6084 	addi	r5,r5,28034
 80065bc:	d9413615 	stw	r5,1240(sp)
 80065c0:	4827883a 	mov	r19,r9
 80065c4:	048001c4 	movi	r18,7
 80065c8:	00000306 	br	80065d8 <___vfprintf_internal_r+0x684>
 80065cc:	ad7ffc04 	addi	r21,r21,-16
 80065d0:	42000204 	addi	r8,r8,8
 80065d4:	9d40130e 	bge	r19,r21,8006624 <___vfprintf_internal_r+0x6d0>
 80065d8:	01020074 	movhi	r4,2049
 80065dc:	18c00404 	addi	r3,r3,16
 80065e0:	10800044 	addi	r2,r2,1
 80065e4:	211b6084 	addi	r4,r4,28034
 80065e8:	41000015 	stw	r4,0(r8)
 80065ec:	44c00115 	stw	r19,4(r8)
 80065f0:	d8c12015 	stw	r3,1152(sp)
 80065f4:	d8811f15 	stw	r2,1148(sp)
 80065f8:	90bff40e 	bge	r18,r2,80065cc <__alt_data_end+0xfc0065cc>
 80065fc:	b809883a 	mov	r4,r23
 8006600:	b00b883a 	mov	r5,r22
 8006604:	d9811e04 	addi	r6,sp,1144
 8006608:	800dd680 	call	800dd68 <__sprint_r>
 800660c:	103f691e 	bne	r2,zero,80063b4 <__alt_data_end+0xfc0063b4>
 8006610:	ad7ffc04 	addi	r21,r21,-16
 8006614:	d8c12017 	ldw	r3,1152(sp)
 8006618:	d8811f17 	ldw	r2,1148(sp)
 800661c:	da000404 	addi	r8,sp,16
 8006620:	9d7fed16 	blt	r19,r21,80065d8 <__alt_data_end+0xfc0065d8>
 8006624:	d9413617 	ldw	r5,1240(sp)
 8006628:	a8c7883a 	add	r3,r21,r3
 800662c:	10800044 	addi	r2,r2,1
 8006630:	41400015 	stw	r5,0(r8)
 8006634:	45400115 	stw	r21,4(r8)
 8006638:	d8c12015 	stw	r3,1152(sp)
 800663c:	d8811f15 	stw	r2,1148(sp)
 8006640:	010001c4 	movi	r4,7
 8006644:	20832b16 	blt	r4,r2,80072f4 <___vfprintf_internal_r+0x13a0>
 8006648:	d8812787 	ldb	r2,1182(sp)
 800664c:	42000204 	addi	r8,r8,8
 8006650:	10000c26 	beq	r2,zero,8006684 <___vfprintf_internal_r+0x730>
 8006654:	d8811f17 	ldw	r2,1148(sp)
 8006658:	d9012784 	addi	r4,sp,1182
 800665c:	18c00044 	addi	r3,r3,1
 8006660:	10800044 	addi	r2,r2,1
 8006664:	41000015 	stw	r4,0(r8)
 8006668:	01000044 	movi	r4,1
 800666c:	41000115 	stw	r4,4(r8)
 8006670:	d8c12015 	stw	r3,1152(sp)
 8006674:	d8811f15 	stw	r2,1148(sp)
 8006678:	010001c4 	movi	r4,7
 800667c:	2082c416 	blt	r4,r2,8007190 <___vfprintf_internal_r+0x123c>
 8006680:	42000204 	addi	r8,r8,8
 8006684:	d8812c17 	ldw	r2,1200(sp)
 8006688:	10000c26 	beq	r2,zero,80066bc <___vfprintf_internal_r+0x768>
 800668c:	d8811f17 	ldw	r2,1148(sp)
 8006690:	d9012704 	addi	r4,sp,1180
 8006694:	18c00084 	addi	r3,r3,2
 8006698:	10800044 	addi	r2,r2,1
 800669c:	41000015 	stw	r4,0(r8)
 80066a0:	01000084 	movi	r4,2
 80066a4:	41000115 	stw	r4,4(r8)
 80066a8:	d8c12015 	stw	r3,1152(sp)
 80066ac:	d8811f15 	stw	r2,1148(sp)
 80066b0:	010001c4 	movi	r4,7
 80066b4:	2082be16 	blt	r4,r2,80071b0 <___vfprintf_internal_r+0x125c>
 80066b8:	42000204 	addi	r8,r8,8
 80066bc:	d9013017 	ldw	r4,1216(sp)
 80066c0:	00802004 	movi	r2,128
 80066c4:	20822026 	beq	r4,r2,8006f48 <___vfprintf_internal_r+0xff4>
 80066c8:	d9413217 	ldw	r5,1224(sp)
 80066cc:	2c67c83a 	sub	r19,r5,r17
 80066d0:	04c0260e 	bge	zero,r19,800676c <___vfprintf_internal_r+0x818>
 80066d4:	05400404 	movi	r21,16
 80066d8:	d8811f17 	ldw	r2,1148(sp)
 80066dc:	acc4720e 	bge	r21,r19,80078a8 <___vfprintf_internal_r+0x1954>
 80066e0:	01420074 	movhi	r5,2049
 80066e4:	295b5c84 	addi	r5,r5,28018
 80066e8:	d9412c15 	stw	r5,1200(sp)
 80066ec:	048001c4 	movi	r18,7
 80066f0:	00000306 	br	8006700 <___vfprintf_internal_r+0x7ac>
 80066f4:	9cfffc04 	addi	r19,r19,-16
 80066f8:	42000204 	addi	r8,r8,8
 80066fc:	acc0110e 	bge	r21,r19,8006744 <___vfprintf_internal_r+0x7f0>
 8006700:	18c00404 	addi	r3,r3,16
 8006704:	10800044 	addi	r2,r2,1
 8006708:	45000015 	stw	r20,0(r8)
 800670c:	45400115 	stw	r21,4(r8)
 8006710:	d8c12015 	stw	r3,1152(sp)
 8006714:	d8811f15 	stw	r2,1148(sp)
 8006718:	90bff60e 	bge	r18,r2,80066f4 <__alt_data_end+0xfc0066f4>
 800671c:	b809883a 	mov	r4,r23
 8006720:	b00b883a 	mov	r5,r22
 8006724:	d9811e04 	addi	r6,sp,1144
 8006728:	800dd680 	call	800dd68 <__sprint_r>
 800672c:	103f211e 	bne	r2,zero,80063b4 <__alt_data_end+0xfc0063b4>
 8006730:	9cfffc04 	addi	r19,r19,-16
 8006734:	d8c12017 	ldw	r3,1152(sp)
 8006738:	d8811f17 	ldw	r2,1148(sp)
 800673c:	da000404 	addi	r8,sp,16
 8006740:	acffef16 	blt	r21,r19,8006700 <__alt_data_end+0xfc006700>
 8006744:	d9012c17 	ldw	r4,1200(sp)
 8006748:	1cc7883a 	add	r3,r3,r19
 800674c:	10800044 	addi	r2,r2,1
 8006750:	41000015 	stw	r4,0(r8)
 8006754:	44c00115 	stw	r19,4(r8)
 8006758:	d8c12015 	stw	r3,1152(sp)
 800675c:	d8811f15 	stw	r2,1148(sp)
 8006760:	010001c4 	movi	r4,7
 8006764:	20828216 	blt	r4,r2,8007170 <___vfprintf_internal_r+0x121c>
 8006768:	42000204 	addi	r8,r8,8
 800676c:	e080400c 	andi	r2,fp,256
 8006770:	1001ac1e 	bne	r2,zero,8006e24 <___vfprintf_internal_r+0xed0>
 8006774:	d8811f17 	ldw	r2,1148(sp)
 8006778:	d9413117 	ldw	r5,1220(sp)
 800677c:	1c47883a 	add	r3,r3,r17
 8006780:	10800044 	addi	r2,r2,1
 8006784:	41400015 	stw	r5,0(r8)
 8006788:	44400115 	stw	r17,4(r8)
 800678c:	d8c12015 	stw	r3,1152(sp)
 8006790:	d8811f15 	stw	r2,1148(sp)
 8006794:	010001c4 	movi	r4,7
 8006798:	20825d16 	blt	r4,r2,8007110 <___vfprintf_internal_r+0x11bc>
 800679c:	42000204 	addi	r8,r8,8
 80067a0:	e080010c 	andi	r2,fp,4
 80067a4:	10003126 	beq	r2,zero,800686c <___vfprintf_internal_r+0x918>
 80067a8:	d8812e17 	ldw	r2,1208(sp)
 80067ac:	d9012b17 	ldw	r4,1196(sp)
 80067b0:	1121c83a 	sub	r16,r2,r4
 80067b4:	04002d0e 	bge	zero,r16,800686c <___vfprintf_internal_r+0x918>
 80067b8:	04400404 	movi	r17,16
 80067bc:	d8811f17 	ldw	r2,1148(sp)
 80067c0:	8c05340e 	bge	r17,r16,8007c94 <___vfprintf_internal_r+0x1d40>
 80067c4:	01020074 	movhi	r4,2049
 80067c8:	211b6084 	addi	r4,r4,28034
 80067cc:	d9013615 	stw	r4,1240(sp)
 80067d0:	048001c4 	movi	r18,7
 80067d4:	00000306 	br	80067e4 <___vfprintf_internal_r+0x890>
 80067d8:	843ffc04 	addi	r16,r16,-16
 80067dc:	42000204 	addi	r8,r8,8
 80067e0:	8c00130e 	bge	r17,r16,8006830 <___vfprintf_internal_r+0x8dc>
 80067e4:	01420074 	movhi	r5,2049
 80067e8:	18c00404 	addi	r3,r3,16
 80067ec:	10800044 	addi	r2,r2,1
 80067f0:	295b6084 	addi	r5,r5,28034
 80067f4:	41400015 	stw	r5,0(r8)
 80067f8:	44400115 	stw	r17,4(r8)
 80067fc:	d8c12015 	stw	r3,1152(sp)
 8006800:	d8811f15 	stw	r2,1148(sp)
 8006804:	90bff40e 	bge	r18,r2,80067d8 <__alt_data_end+0xfc0067d8>
 8006808:	b809883a 	mov	r4,r23
 800680c:	b00b883a 	mov	r5,r22
 8006810:	d9811e04 	addi	r6,sp,1144
 8006814:	800dd680 	call	800dd68 <__sprint_r>
 8006818:	103ee61e 	bne	r2,zero,80063b4 <__alt_data_end+0xfc0063b4>
 800681c:	843ffc04 	addi	r16,r16,-16
 8006820:	d8c12017 	ldw	r3,1152(sp)
 8006824:	d8811f17 	ldw	r2,1148(sp)
 8006828:	da000404 	addi	r8,sp,16
 800682c:	8c3fed16 	blt	r17,r16,80067e4 <__alt_data_end+0xfc0067e4>
 8006830:	d9013617 	ldw	r4,1240(sp)
 8006834:	1c07883a 	add	r3,r3,r16
 8006838:	10800044 	addi	r2,r2,1
 800683c:	41000015 	stw	r4,0(r8)
 8006840:	44000115 	stw	r16,4(r8)
 8006844:	d8c12015 	stw	r3,1152(sp)
 8006848:	d8811f15 	stw	r2,1148(sp)
 800684c:	010001c4 	movi	r4,7
 8006850:	2080060e 	bge	r4,r2,800686c <___vfprintf_internal_r+0x918>
 8006854:	b809883a 	mov	r4,r23
 8006858:	b00b883a 	mov	r5,r22
 800685c:	d9811e04 	addi	r6,sp,1144
 8006860:	800dd680 	call	800dd68 <__sprint_r>
 8006864:	103ed31e 	bne	r2,zero,80063b4 <__alt_data_end+0xfc0063b4>
 8006868:	d8c12017 	ldw	r3,1152(sp)
 800686c:	df012b17 	ldw	fp,1196(sp)
 8006870:	d9412e17 	ldw	r5,1208(sp)
 8006874:	e140010e 	bge	fp,r5,800687c <___vfprintf_internal_r+0x928>
 8006878:	2839883a 	mov	fp,r5
 800687c:	d8812f17 	ldw	r2,1212(sp)
 8006880:	1705883a 	add	r2,r2,fp
 8006884:	d8812f15 	stw	r2,1212(sp)
 8006888:	1802291e 	bne	r3,zero,8007130 <___vfprintf_internal_r+0x11dc>
 800688c:	d8c12a17 	ldw	r3,1192(sp)
 8006890:	d8011f15 	stw	zero,1148(sp)
 8006894:	da000404 	addi	r8,sp,16
 8006898:	18800007 	ldb	r2,0(r3)
 800689c:	103ded1e 	bne	r2,zero,8006054 <__alt_data_end+0xfc006054>
 80068a0:	dc012a17 	ldw	r16,1192(sp)
 80068a4:	003e0506 	br	80060bc <__alt_data_end+0xfc0060bc>
 80068a8:	d9012d17 	ldw	r4,1204(sp)
 80068ac:	d9412d17 	ldw	r5,1204(sp)
 80068b0:	da012a17 	ldw	r8,1192(sp)
 80068b4:	21000017 	ldw	r4,0(r4)
 80068b8:	29400117 	ldw	r5,4(r5)
 80068bc:	df012a15 	stw	fp,1192(sp)
 80068c0:	9839883a 	mov	fp,r19
 80068c4:	dcc12b03 	ldbu	r19,1196(sp)
 80068c8:	d9013715 	stw	r4,1244(sp)
 80068cc:	d9413915 	stw	r5,1252(sp)
 80068d0:	da013f15 	stw	r8,1276(sp)
 80068d4:	da413e15 	stw	r9,1272(sp)
 80068d8:	dcc12785 	stb	r19,1182(sp)
 80068dc:	800c7240 	call	800c724 <__fpclassifyd>
 80068e0:	d8c12d17 	ldw	r3,1204(sp)
 80068e4:	04400044 	movi	r17,1
 80068e8:	da013f17 	ldw	r8,1276(sp)
 80068ec:	1c800204 	addi	r18,r3,8
 80068f0:	da413e17 	ldw	r9,1272(sp)
 80068f4:	d9013717 	ldw	r4,1244(sp)
 80068f8:	d9413917 	ldw	r5,1252(sp)
 80068fc:	1443451e 	bne	r2,r17,8007614 <___vfprintf_internal_r+0x16c0>
 8006900:	000d883a 	mov	r6,zero
 8006904:	000f883a 	mov	r7,zero
 8006908:	8011c1c0 	call	8011c1c <__ledf2>
 800690c:	da013f17 	ldw	r8,1276(sp)
 8006910:	1004fe16 	blt	r2,zero,8007d0c <___vfprintf_internal_r+0x1db8>
 8006914:	dcc12783 	ldbu	r19,1182(sp)
 8006918:	008011c4 	movi	r2,71
 800691c:	14045d0e 	bge	r2,r16,8007a94 <___vfprintf_internal_r+0x1b40>
 8006920:	01420074 	movhi	r5,2049
 8006924:	295b4504 	addi	r5,r5,27924
 8006928:	d9413115 	stw	r5,1220(sp)
 800692c:	00c000c4 	movi	r3,3
 8006930:	00bfdfc4 	movi	r2,-129
 8006934:	d8c12b15 	stw	r3,1196(sp)
 8006938:	e0b8703a 	and	fp,fp,r2
 800693c:	dc812d15 	stw	r18,1204(sp)
 8006940:	1823883a 	mov	r17,r3
 8006944:	d8013215 	stw	zero,1224(sp)
 8006948:	d8013415 	stw	zero,1232(sp)
 800694c:	003f0106 	br	8006554 <__alt_data_end+0xfc006554>
 8006950:	9cc00214 	ori	r19,r19,8
 8006954:	e005883a 	mov	r2,fp
 8006958:	e4000007 	ldb	r16,0(fp)
 800695c:	003de506 	br	80060f4 <__alt_data_end+0xfc0060f4>
 8006960:	da012a17 	ldw	r8,1192(sp)
 8006964:	df012a15 	stw	fp,1192(sp)
 8006968:	9f000414 	ori	fp,r19,16
 800696c:	e0c0080c 	andi	r3,fp,32
 8006970:	d8812d17 	ldw	r2,1204(sp)
 8006974:	18007626 	beq	r3,zero,8006b50 <___vfprintf_internal_r+0xbfc>
 8006978:	d9412d17 	ldw	r5,1204(sp)
 800697c:	14800017 	ldw	r18,0(r2)
 8006980:	15400117 	ldw	r21,4(r2)
 8006984:	29400204 	addi	r5,r5,8
 8006988:	d9412d15 	stw	r5,1204(sp)
 800698c:	0005883a 	mov	r2,zero
 8006990:	9546b03a 	or	r3,r18,r21
 8006994:	d8012785 	stb	zero,1182(sp)
 8006998:	da413215 	stw	r9,1224(sp)
 800699c:	0027883a 	mov	r19,zero
 80069a0:	003ecd06 	br	80064d8 <__alt_data_end+0xfc0064d8>
 80069a4:	da012a17 	ldw	r8,1192(sp)
 80069a8:	df012a15 	stw	fp,1192(sp)
 80069ac:	9f000414 	ori	fp,r19,16
 80069b0:	e0c0080c 	andi	r3,fp,32
 80069b4:	d8812d17 	ldw	r2,1204(sp)
 80069b8:	18002c26 	beq	r3,zero,8006a6c <___vfprintf_internal_r+0xb18>
 80069bc:	d9012d17 	ldw	r4,1204(sp)
 80069c0:	14800017 	ldw	r18,0(r2)
 80069c4:	15400117 	ldw	r21,4(r2)
 80069c8:	21000204 	addi	r4,r4,8
 80069cc:	d9012d15 	stw	r4,1204(sp)
 80069d0:	00800044 	movi	r2,1
 80069d4:	9546b03a 	or	r3,r18,r21
 80069d8:	003fee06 	br	8006994 <__alt_data_end+0xfc006994>
 80069dc:	da012a17 	ldw	r8,1192(sp)
 80069e0:	df012a15 	stw	fp,1192(sp)
 80069e4:	9839883a 	mov	fp,r19
 80069e8:	dcc12b03 	ldbu	r19,1196(sp)
 80069ec:	01420074 	movhi	r5,2049
 80069f0:	295b4804 	addi	r5,r5,27936
 80069f4:	dcc12785 	stb	r19,1182(sp)
 80069f8:	d9413b15 	stw	r5,1260(sp)
 80069fc:	e0c0080c 	andi	r3,fp,32
 8006a00:	d8812d17 	ldw	r2,1204(sp)
 8006a04:	18002e26 	beq	r3,zero,8006ac0 <___vfprintf_internal_r+0xb6c>
 8006a08:	d9412d17 	ldw	r5,1204(sp)
 8006a0c:	14800017 	ldw	r18,0(r2)
 8006a10:	15400117 	ldw	r21,4(r2)
 8006a14:	29400204 	addi	r5,r5,8
 8006a18:	d9412d15 	stw	r5,1204(sp)
 8006a1c:	e080004c 	andi	r2,fp,1
 8006a20:	10025c26 	beq	r2,zero,8007394 <___vfprintf_internal_r+0x1440>
 8006a24:	9546b03a 	or	r3,r18,r21
 8006a28:	18038f26 	beq	r3,zero,8007868 <___vfprintf_internal_r+0x1914>
 8006a2c:	00800c04 	movi	r2,48
 8006a30:	d8812705 	stb	r2,1180(sp)
 8006a34:	dc012745 	stb	r16,1181(sp)
 8006a38:	e7000094 	ori	fp,fp,2
 8006a3c:	00800084 	movi	r2,2
 8006a40:	003fd406 	br	8006994 <__alt_data_end+0xfc006994>
 8006a44:	9cc00814 	ori	r19,r19,32
 8006a48:	e005883a 	mov	r2,fp
 8006a4c:	e4000007 	ldb	r16,0(fp)
 8006a50:	003da806 	br	80060f4 <__alt_data_end+0xfc0060f4>
 8006a54:	da012a17 	ldw	r8,1192(sp)
 8006a58:	df012a15 	stw	fp,1192(sp)
 8006a5c:	9839883a 	mov	fp,r19
 8006a60:	e0c0080c 	andi	r3,fp,32
 8006a64:	d8812d17 	ldw	r2,1204(sp)
 8006a68:	183fd41e 	bne	r3,zero,80069bc <__alt_data_end+0xfc0069bc>
 8006a6c:	e0c0040c 	andi	r3,fp,16
 8006a70:	18035f26 	beq	r3,zero,80077f0 <___vfprintf_internal_r+0x189c>
 8006a74:	d9412d17 	ldw	r5,1204(sp)
 8006a78:	14800017 	ldw	r18,0(r2)
 8006a7c:	002b883a 	mov	r21,zero
 8006a80:	29400104 	addi	r5,r5,4
 8006a84:	d9412d15 	stw	r5,1204(sp)
 8006a88:	00800044 	movi	r2,1
 8006a8c:	9007883a 	mov	r3,r18
 8006a90:	003fc006 	br	8006994 <__alt_data_end+0xfc006994>
 8006a94:	da012a17 	ldw	r8,1192(sp)
 8006a98:	df012a15 	stw	fp,1192(sp)
 8006a9c:	9839883a 	mov	fp,r19
 8006aa0:	dcc12b03 	ldbu	r19,1196(sp)
 8006aa4:	01020074 	movhi	r4,2049
 8006aa8:	211b4d04 	addi	r4,r4,27956
 8006aac:	d9013b15 	stw	r4,1260(sp)
 8006ab0:	dcc12785 	stb	r19,1182(sp)
 8006ab4:	e0c0080c 	andi	r3,fp,32
 8006ab8:	d8812d17 	ldw	r2,1204(sp)
 8006abc:	183fd21e 	bne	r3,zero,8006a08 <__alt_data_end+0xfc006a08>
 8006ac0:	e0c0040c 	andi	r3,fp,16
 8006ac4:	18035426 	beq	r3,zero,8007818 <___vfprintf_internal_r+0x18c4>
 8006ac8:	d8c12d17 	ldw	r3,1204(sp)
 8006acc:	14800017 	ldw	r18,0(r2)
 8006ad0:	002b883a 	mov	r21,zero
 8006ad4:	18c00104 	addi	r3,r3,4
 8006ad8:	d8c12d15 	stw	r3,1204(sp)
 8006adc:	003fcf06 	br	8006a1c <__alt_data_end+0xfc006a1c>
 8006ae0:	e4000007 	ldb	r16,0(fp)
 8006ae4:	00801b04 	movi	r2,108
 8006ae8:	8083f726 	beq	r16,r2,8007ac8 <___vfprintf_internal_r+0x1b74>
 8006aec:	9cc00414 	ori	r19,r19,16
 8006af0:	e005883a 	mov	r2,fp
 8006af4:	003d7f06 	br	80060f4 <__alt_data_end+0xfc0060f4>
 8006af8:	da012a17 	ldw	r8,1192(sp)
 8006afc:	df012a15 	stw	fp,1192(sp)
 8006b00:	9839883a 	mov	fp,r19
 8006b04:	dcc12b03 	ldbu	r19,1196(sp)
 8006b08:	e080080c 	andi	r2,fp,32
 8006b0c:	dcc12785 	stb	r19,1182(sp)
 8006b10:	10032226 	beq	r2,zero,800779c <___vfprintf_internal_r+0x1848>
 8006b14:	d9412d17 	ldw	r5,1204(sp)
 8006b18:	d9012f17 	ldw	r4,1212(sp)
 8006b1c:	28800017 	ldw	r2,0(r5)
 8006b20:	2007d7fa 	srai	r3,r4,31
 8006b24:	29400104 	addi	r5,r5,4
 8006b28:	d9412d15 	stw	r5,1204(sp)
 8006b2c:	11000015 	stw	r4,0(r2)
 8006b30:	10c00115 	stw	r3,4(r2)
 8006b34:	003d4406 	br	8006048 <__alt_data_end+0xfc006048>
 8006b38:	da012a17 	ldw	r8,1192(sp)
 8006b3c:	df012a15 	stw	fp,1192(sp)
 8006b40:	9839883a 	mov	fp,r19
 8006b44:	e0c0080c 	andi	r3,fp,32
 8006b48:	d8812d17 	ldw	r2,1204(sp)
 8006b4c:	183f8a1e 	bne	r3,zero,8006978 <__alt_data_end+0xfc006978>
 8006b50:	e0c0040c 	andi	r3,fp,16
 8006b54:	18031c26 	beq	r3,zero,80077c8 <___vfprintf_internal_r+0x1874>
 8006b58:	14800017 	ldw	r18,0(r2)
 8006b5c:	d8812d17 	ldw	r2,1204(sp)
 8006b60:	002b883a 	mov	r21,zero
 8006b64:	9007883a 	mov	r3,r18
 8006b68:	10800104 	addi	r2,r2,4
 8006b6c:	d8812d15 	stw	r2,1204(sp)
 8006b70:	0005883a 	mov	r2,zero
 8006b74:	003f8706 	br	8006994 <__alt_data_end+0xfc006994>
 8006b78:	d9412d17 	ldw	r5,1204(sp)
 8006b7c:	00800c04 	movi	r2,48
 8006b80:	d8812705 	stb	r2,1180(sp)
 8006b84:	2c800017 	ldw	r18,0(r5)
 8006b88:	00801e04 	movi	r2,120
 8006b8c:	d8812745 	stb	r2,1181(sp)
 8006b90:	00820074 	movhi	r2,2049
 8006b94:	109b4d04 	addi	r2,r2,27956
 8006b98:	29400104 	addi	r5,r5,4
 8006b9c:	da012a17 	ldw	r8,1192(sp)
 8006ba0:	d8813b15 	stw	r2,1260(sp)
 8006ba4:	df012a15 	stw	fp,1192(sp)
 8006ba8:	002b883a 	mov	r21,zero
 8006bac:	9f000094 	ori	fp,r19,2
 8006bb0:	d9412d15 	stw	r5,1204(sp)
 8006bb4:	00800084 	movi	r2,2
 8006bb8:	04001e04 	movi	r16,120
 8006bbc:	9007883a 	mov	r3,r18
 8006bc0:	003f7406 	br	8006994 <__alt_data_end+0xfc006994>
 8006bc4:	da012a17 	ldw	r8,1192(sp)
 8006bc8:	df012a15 	stw	fp,1192(sp)
 8006bcc:	9839883a 	mov	fp,r19
 8006bd0:	dcc12b03 	ldbu	r19,1196(sp)
 8006bd4:	e080080c 	andi	r2,fp,32
 8006bd8:	d8c12d17 	ldw	r3,1204(sp)
 8006bdc:	dcc12785 	stb	r19,1182(sp)
 8006be0:	103e321e 	bne	r2,zero,80064ac <__alt_data_end+0xfc0064ac>
 8006be4:	e080040c 	andi	r2,fp,16
 8006be8:	10031326 	beq	r2,zero,8007838 <___vfprintf_internal_r+0x18e4>
 8006bec:	1c800017 	ldw	r18,0(r3)
 8006bf0:	d9412d17 	ldw	r5,1204(sp)
 8006bf4:	902bd7fa 	srai	r21,r18,31
 8006bf8:	29400104 	addi	r5,r5,4
 8006bfc:	d9412d15 	stw	r5,1204(sp)
 8006c00:	a805883a 	mov	r2,r21
 8006c04:	003e2f06 	br	80064c4 <__alt_data_end+0xfc0064c4>
 8006c08:	9cc01014 	ori	r19,r19,64
 8006c0c:	e005883a 	mov	r2,fp
 8006c10:	e4000007 	ldb	r16,0(fp)
 8006c14:	003d3706 	br	80060f4 <__alt_data_end+0xfc0060f4>
 8006c18:	d8c12d17 	ldw	r3,1204(sp)
 8006c1c:	d9012d17 	ldw	r4,1204(sp)
 8006c20:	da012a17 	ldw	r8,1192(sp)
 8006c24:	18800017 	ldw	r2,0(r3)
 8006c28:	21000104 	addi	r4,r4,4
 8006c2c:	00c00044 	movi	r3,1
 8006c30:	df012a15 	stw	fp,1192(sp)
 8006c34:	d8c12b15 	stw	r3,1196(sp)
 8006c38:	9839883a 	mov	fp,r19
 8006c3c:	d8012785 	stb	zero,1182(sp)
 8006c40:	d8810405 	stb	r2,1040(sp)
 8006c44:	d9012d15 	stw	r4,1204(sp)
 8006c48:	1823883a 	mov	r17,r3
 8006c4c:	d8c10404 	addi	r3,sp,1040
 8006c50:	d8013215 	stw	zero,1224(sp)
 8006c54:	d8013415 	stw	zero,1232(sp)
 8006c58:	d8c13115 	stw	r3,1220(sp)
 8006c5c:	0005883a 	mov	r2,zero
 8006c60:	003e4306 	br	8006570 <__alt_data_end+0xfc006570>
 8006c64:	d8812b07 	ldb	r2,1196(sp)
 8006c68:	1002fc1e 	bne	r2,zero,800785c <___vfprintf_internal_r+0x1908>
 8006c6c:	00c00804 	movi	r3,32
 8006c70:	d8c12b05 	stb	r3,1196(sp)
 8006c74:	e005883a 	mov	r2,fp
 8006c78:	e4000007 	ldb	r16,0(fp)
 8006c7c:	003d1d06 	br	80060f4 <__alt_data_end+0xfc0060f4>
 8006c80:	9cc00054 	ori	r19,r19,1
 8006c84:	e005883a 	mov	r2,fp
 8006c88:	e4000007 	ldb	r16,0(fp)
 8006c8c:	003d1906 	br	80060f4 <__alt_data_end+0xfc0060f4>
 8006c90:	d9012d17 	ldw	r4,1204(sp)
 8006c94:	d9412d17 	ldw	r5,1204(sp)
 8006c98:	21000017 	ldw	r4,0(r4)
 8006c9c:	28c00104 	addi	r3,r5,4
 8006ca0:	d9012e15 	stw	r4,1208(sp)
 8006ca4:	20038c16 	blt	r4,zero,8007ad8 <___vfprintf_internal_r+0x1b84>
 8006ca8:	d8c12d15 	stw	r3,1204(sp)
 8006cac:	e005883a 	mov	r2,fp
 8006cb0:	e4000007 	ldb	r16,0(fp)
 8006cb4:	003d0f06 	br	80060f4 <__alt_data_end+0xfc0060f4>
 8006cb8:	00c00ac4 	movi	r3,43
 8006cbc:	d8c12b05 	stb	r3,1196(sp)
 8006cc0:	e005883a 	mov	r2,fp
 8006cc4:	e4000007 	ldb	r16,0(fp)
 8006cc8:	003d0a06 	br	80060f4 <__alt_data_end+0xfc0060f4>
 8006ccc:	d8c12d17 	ldw	r3,1204(sp)
 8006cd0:	d9012d17 	ldw	r4,1204(sp)
 8006cd4:	da012a17 	ldw	r8,1192(sp)
 8006cd8:	18c00017 	ldw	r3,0(r3)
 8006cdc:	df012a15 	stw	fp,1192(sp)
 8006ce0:	d8012785 	stb	zero,1182(sp)
 8006ce4:	d8c13115 	stw	r3,1220(sp)
 8006ce8:	9839883a 	mov	fp,r19
 8006cec:	24800104 	addi	r18,r4,4
 8006cf0:	1803f726 	beq	r3,zero,8007cd0 <___vfprintf_internal_r+0x1d7c>
 8006cf4:	d9013117 	ldw	r4,1220(sp)
 8006cf8:	48038916 	blt	r9,zero,8007b20 <___vfprintf_internal_r+0x1bcc>
 8006cfc:	480d883a 	mov	r6,r9
 8006d00:	000b883a 	mov	r5,zero
 8006d04:	da013f15 	stw	r8,1276(sp)
 8006d08:	da413e15 	stw	r9,1272(sp)
 8006d0c:	800adc00 	call	800adc0 <memchr>
 8006d10:	da013f17 	ldw	r8,1276(sp)
 8006d14:	da413e17 	ldw	r9,1272(sp)
 8006d18:	10045926 	beq	r2,zero,8007e80 <___vfprintf_internal_r+0x1f2c>
 8006d1c:	d8c13117 	ldw	r3,1220(sp)
 8006d20:	10e3c83a 	sub	r17,r2,r3
 8006d24:	4c433516 	blt	r9,r17,80079fc <___vfprintf_internal_r+0x1aa8>
 8006d28:	8805883a 	mov	r2,r17
 8006d2c:	88038116 	blt	r17,zero,8007b34 <___vfprintf_internal_r+0x1be0>
 8006d30:	dcc12783 	ldbu	r19,1182(sp)
 8006d34:	d8812b15 	stw	r2,1196(sp)
 8006d38:	dc812d15 	stw	r18,1204(sp)
 8006d3c:	d8013215 	stw	zero,1224(sp)
 8006d40:	d8013415 	stw	zero,1232(sp)
 8006d44:	003e0306 	br	8006554 <__alt_data_end+0xfc006554>
 8006d48:	da012a17 	ldw	r8,1192(sp)
 8006d4c:	df012a15 	stw	fp,1192(sp)
 8006d50:	9839883a 	mov	fp,r19
 8006d54:	dcc12b03 	ldbu	r19,1196(sp)
 8006d58:	dcc12785 	stb	r19,1182(sp)
 8006d5c:	803d8f26 	beq	r16,zero,800639c <__alt_data_end+0xfc00639c>
 8006d60:	00c00044 	movi	r3,1
 8006d64:	d8c12b15 	stw	r3,1196(sp)
 8006d68:	dc010405 	stb	r16,1040(sp)
 8006d6c:	d8012785 	stb	zero,1182(sp)
 8006d70:	003fb506 	br	8006c48 <__alt_data_end+0xfc006c48>
 8006d74:	d8c12017 	ldw	r3,1152(sp)
 8006d78:	003e3506 	br	8006650 <__alt_data_end+0xfc006650>
 8006d7c:	10803fcc 	andi	r2,r2,255
 8006d80:	00c00044 	movi	r3,1
 8006d84:	10fddc1e 	bne	r2,r3,80064f8 <__alt_data_end+0xfc0064f8>
 8006d88:	a800021e 	bne	r21,zero,8006d94 <___vfprintf_internal_r+0xe40>
 8006d8c:	00800244 	movi	r2,9
 8006d90:	14801e2e 	bgeu	r2,r18,8006e0c <___vfprintf_internal_r+0xeb8>
 8006d94:	dc012b15 	stw	r16,1196(sp)
 8006d98:	dc410e04 	addi	r17,sp,1080
 8006d9c:	9021883a 	mov	r16,r18
 8006da0:	da012c15 	stw	r8,1200(sp)
 8006da4:	a825883a 	mov	r18,r21
 8006da8:	482b883a 	mov	r21,r9
 8006dac:	8009883a 	mov	r4,r16
 8006db0:	900b883a 	mov	r5,r18
 8006db4:	01800284 	movi	r6,10
 8006db8:	000f883a 	mov	r7,zero
 8006dbc:	80101540 	call	8010154 <__umoddi3>
 8006dc0:	10800c04 	addi	r2,r2,48
 8006dc4:	8c7fffc4 	addi	r17,r17,-1
 8006dc8:	8009883a 	mov	r4,r16
 8006dcc:	900b883a 	mov	r5,r18
 8006dd0:	01800284 	movi	r6,10
 8006dd4:	000f883a 	mov	r7,zero
 8006dd8:	88800005 	stb	r2,0(r17)
 8006ddc:	800fb140 	call	800fb14 <__udivdi3>
 8006de0:	1021883a 	mov	r16,r2
 8006de4:	10c4b03a 	or	r2,r2,r3
 8006de8:	1825883a 	mov	r18,r3
 8006dec:	103fef1e 	bne	r2,zero,8006dac <__alt_data_end+0xfc006dac>
 8006df0:	d9012817 	ldw	r4,1184(sp)
 8006df4:	dc413115 	stw	r17,1220(sp)
 8006df8:	dc012b17 	ldw	r16,1196(sp)
 8006dfc:	da012c17 	ldw	r8,1200(sp)
 8006e00:	a813883a 	mov	r9,r21
 8006e04:	2463c83a 	sub	r17,r4,r17
 8006e08:	003dcd06 	br	8006540 <__alt_data_end+0xfc006540>
 8006e0c:	94800c04 	addi	r18,r18,48
 8006e10:	d8c10dc4 	addi	r3,sp,1079
 8006e14:	dc810dc5 	stb	r18,1079(sp)
 8006e18:	dc413c17 	ldw	r17,1264(sp)
 8006e1c:	d8c13115 	stw	r3,1220(sp)
 8006e20:	003dc706 	br	8006540 <__alt_data_end+0xfc006540>
 8006e24:	00801944 	movi	r2,101
 8006e28:	1400720e 	bge	r2,r16,8006ff4 <___vfprintf_internal_r+0x10a0>
 8006e2c:	d9013717 	ldw	r4,1244(sp)
 8006e30:	d9413917 	ldw	r5,1252(sp)
 8006e34:	000d883a 	mov	r6,zero
 8006e38:	000f883a 	mov	r7,zero
 8006e3c:	d8c13d15 	stw	r3,1268(sp)
 8006e40:	da013f15 	stw	r8,1276(sp)
 8006e44:	8011ab80 	call	8011ab8 <__eqdf2>
 8006e48:	d8c13d17 	ldw	r3,1268(sp)
 8006e4c:	da013f17 	ldw	r8,1276(sp)
 8006e50:	1000f41e 	bne	r2,zero,8007224 <___vfprintf_internal_r+0x12d0>
 8006e54:	d8811f17 	ldw	r2,1148(sp)
 8006e58:	01020074 	movhi	r4,2049
 8006e5c:	211b5404 	addi	r4,r4,27984
 8006e60:	18c00044 	addi	r3,r3,1
 8006e64:	10800044 	addi	r2,r2,1
 8006e68:	41000015 	stw	r4,0(r8)
 8006e6c:	01000044 	movi	r4,1
 8006e70:	41000115 	stw	r4,4(r8)
 8006e74:	d8c12015 	stw	r3,1152(sp)
 8006e78:	d8811f15 	stw	r2,1148(sp)
 8006e7c:	010001c4 	movi	r4,7
 8006e80:	20828d16 	blt	r4,r2,80078b8 <___vfprintf_internal_r+0x1964>
 8006e84:	42000204 	addi	r8,r8,8
 8006e88:	d8812617 	ldw	r2,1176(sp)
 8006e8c:	d9413317 	ldw	r5,1228(sp)
 8006e90:	11400216 	blt	r2,r5,8006e9c <___vfprintf_internal_r+0xf48>
 8006e94:	e080004c 	andi	r2,fp,1
 8006e98:	103e4126 	beq	r2,zero,80067a0 <__alt_data_end+0xfc0067a0>
 8006e9c:	d8813817 	ldw	r2,1248(sp)
 8006ea0:	d9013517 	ldw	r4,1236(sp)
 8006ea4:	d9413817 	ldw	r5,1248(sp)
 8006ea8:	1887883a 	add	r3,r3,r2
 8006eac:	d8811f17 	ldw	r2,1148(sp)
 8006eb0:	41000015 	stw	r4,0(r8)
 8006eb4:	41400115 	stw	r5,4(r8)
 8006eb8:	10800044 	addi	r2,r2,1
 8006ebc:	d8c12015 	stw	r3,1152(sp)
 8006ec0:	d8811f15 	stw	r2,1148(sp)
 8006ec4:	010001c4 	movi	r4,7
 8006ec8:	20830916 	blt	r4,r2,8007af0 <___vfprintf_internal_r+0x1b9c>
 8006ecc:	42000204 	addi	r8,r8,8
 8006ed0:	d8813317 	ldw	r2,1228(sp)
 8006ed4:	143fffc4 	addi	r16,r2,-1
 8006ed8:	043e310e 	bge	zero,r16,80067a0 <__alt_data_end+0xfc0067a0>
 8006edc:	04400404 	movi	r17,16
 8006ee0:	d8811f17 	ldw	r2,1148(sp)
 8006ee4:	8c007e0e 	bge	r17,r16,80070e0 <___vfprintf_internal_r+0x118c>
 8006ee8:	01420074 	movhi	r5,2049
 8006eec:	295b5c84 	addi	r5,r5,28018
 8006ef0:	d9412c15 	stw	r5,1200(sp)
 8006ef4:	04c001c4 	movi	r19,7
 8006ef8:	00000306 	br	8006f08 <___vfprintf_internal_r+0xfb4>
 8006efc:	42000204 	addi	r8,r8,8
 8006f00:	843ffc04 	addi	r16,r16,-16
 8006f04:	8c00790e 	bge	r17,r16,80070ec <___vfprintf_internal_r+0x1198>
 8006f08:	18c00404 	addi	r3,r3,16
 8006f0c:	10800044 	addi	r2,r2,1
 8006f10:	45000015 	stw	r20,0(r8)
 8006f14:	44400115 	stw	r17,4(r8)
 8006f18:	d8c12015 	stw	r3,1152(sp)
 8006f1c:	d8811f15 	stw	r2,1148(sp)
 8006f20:	98bff60e 	bge	r19,r2,8006efc <__alt_data_end+0xfc006efc>
 8006f24:	b809883a 	mov	r4,r23
 8006f28:	b00b883a 	mov	r5,r22
 8006f2c:	d9811e04 	addi	r6,sp,1144
 8006f30:	800dd680 	call	800dd68 <__sprint_r>
 8006f34:	103d1f1e 	bne	r2,zero,80063b4 <__alt_data_end+0xfc0063b4>
 8006f38:	d8c12017 	ldw	r3,1152(sp)
 8006f3c:	d8811f17 	ldw	r2,1148(sp)
 8006f40:	da000404 	addi	r8,sp,16
 8006f44:	003fee06 	br	8006f00 <__alt_data_end+0xfc006f00>
 8006f48:	d9412e17 	ldw	r5,1208(sp)
 8006f4c:	d8812b17 	ldw	r2,1196(sp)
 8006f50:	28a7c83a 	sub	r19,r5,r2
 8006f54:	04fddc0e 	bge	zero,r19,80066c8 <__alt_data_end+0xfc0066c8>
 8006f58:	05400404 	movi	r21,16
 8006f5c:	d8811f17 	ldw	r2,1148(sp)
 8006f60:	acc3870e 	bge	r21,r19,8007d80 <___vfprintf_internal_r+0x1e2c>
 8006f64:	01420074 	movhi	r5,2049
 8006f68:	295b5c84 	addi	r5,r5,28018
 8006f6c:	d9412c15 	stw	r5,1200(sp)
 8006f70:	048001c4 	movi	r18,7
 8006f74:	00000306 	br	8006f84 <___vfprintf_internal_r+0x1030>
 8006f78:	9cfffc04 	addi	r19,r19,-16
 8006f7c:	42000204 	addi	r8,r8,8
 8006f80:	acc0110e 	bge	r21,r19,8006fc8 <___vfprintf_internal_r+0x1074>
 8006f84:	18c00404 	addi	r3,r3,16
 8006f88:	10800044 	addi	r2,r2,1
 8006f8c:	45000015 	stw	r20,0(r8)
 8006f90:	45400115 	stw	r21,4(r8)
 8006f94:	d8c12015 	stw	r3,1152(sp)
 8006f98:	d8811f15 	stw	r2,1148(sp)
 8006f9c:	90bff60e 	bge	r18,r2,8006f78 <__alt_data_end+0xfc006f78>
 8006fa0:	b809883a 	mov	r4,r23
 8006fa4:	b00b883a 	mov	r5,r22
 8006fa8:	d9811e04 	addi	r6,sp,1144
 8006fac:	800dd680 	call	800dd68 <__sprint_r>
 8006fb0:	103d001e 	bne	r2,zero,80063b4 <__alt_data_end+0xfc0063b4>
 8006fb4:	9cfffc04 	addi	r19,r19,-16
 8006fb8:	d8c12017 	ldw	r3,1152(sp)
 8006fbc:	d8811f17 	ldw	r2,1148(sp)
 8006fc0:	da000404 	addi	r8,sp,16
 8006fc4:	acffef16 	blt	r21,r19,8006f84 <__alt_data_end+0xfc006f84>
 8006fc8:	d9012c17 	ldw	r4,1200(sp)
 8006fcc:	1cc7883a 	add	r3,r3,r19
 8006fd0:	10800044 	addi	r2,r2,1
 8006fd4:	41000015 	stw	r4,0(r8)
 8006fd8:	44c00115 	stw	r19,4(r8)
 8006fdc:	d8c12015 	stw	r3,1152(sp)
 8006fe0:	d8811f15 	stw	r2,1148(sp)
 8006fe4:	010001c4 	movi	r4,7
 8006fe8:	20817816 	blt	r4,r2,80075cc <___vfprintf_internal_r+0x1678>
 8006fec:	42000204 	addi	r8,r8,8
 8006ff0:	003db506 	br	80066c8 <__alt_data_end+0xfc0066c8>
 8006ff4:	d9413317 	ldw	r5,1228(sp)
 8006ff8:	00800044 	movi	r2,1
 8006ffc:	18c00044 	addi	r3,r3,1
 8007000:	11413e0e 	bge	r2,r5,80074fc <___vfprintf_internal_r+0x15a8>
 8007004:	dc011f17 	ldw	r16,1148(sp)
 8007008:	d8813117 	ldw	r2,1220(sp)
 800700c:	d8c12015 	stw	r3,1152(sp)
 8007010:	84000044 	addi	r16,r16,1
 8007014:	40800015 	stw	r2,0(r8)
 8007018:	00800044 	movi	r2,1
 800701c:	40800115 	stw	r2,4(r8)
 8007020:	dc011f15 	stw	r16,1148(sp)
 8007024:	008001c4 	movi	r2,7
 8007028:	14015616 	blt	r2,r16,8007584 <___vfprintf_internal_r+0x1630>
 800702c:	42000204 	addi	r8,r8,8
 8007030:	d9013817 	ldw	r4,1248(sp)
 8007034:	d9413517 	ldw	r5,1236(sp)
 8007038:	84000044 	addi	r16,r16,1
 800703c:	1907883a 	add	r3,r3,r4
 8007040:	41400015 	stw	r5,0(r8)
 8007044:	41000115 	stw	r4,4(r8)
 8007048:	d8c12015 	stw	r3,1152(sp)
 800704c:	dc011f15 	stw	r16,1148(sp)
 8007050:	008001c4 	movi	r2,7
 8007054:	14015416 	blt	r2,r16,80075a8 <___vfprintf_internal_r+0x1654>
 8007058:	44400204 	addi	r17,r8,8
 800705c:	d9013717 	ldw	r4,1244(sp)
 8007060:	d9413917 	ldw	r5,1252(sp)
 8007064:	000d883a 	mov	r6,zero
 8007068:	000f883a 	mov	r7,zero
 800706c:	d8c13d15 	stw	r3,1268(sp)
 8007070:	8011ab80 	call	8011ab8 <__eqdf2>
 8007074:	d8c13d17 	ldw	r3,1268(sp)
 8007078:	1000a726 	beq	r2,zero,8007318 <___vfprintf_internal_r+0x13c4>
 800707c:	d9013317 	ldw	r4,1228(sp)
 8007080:	d9413117 	ldw	r5,1220(sp)
 8007084:	84000044 	addi	r16,r16,1
 8007088:	20bfffc4 	addi	r2,r4,-1
 800708c:	1887883a 	add	r3,r3,r2
 8007090:	29000044 	addi	r4,r5,1
 8007094:	88800115 	stw	r2,4(r17)
 8007098:	89000015 	stw	r4,0(r17)
 800709c:	d8c12015 	stw	r3,1152(sp)
 80070a0:	dc011f15 	stw	r16,1148(sp)
 80070a4:	008001c4 	movi	r2,7
 80070a8:	14012d16 	blt	r2,r16,8007560 <___vfprintf_internal_r+0x160c>
 80070ac:	8c400204 	addi	r17,r17,8
 80070b0:	d9413a17 	ldw	r5,1256(sp)
 80070b4:	dcc122c4 	addi	r19,sp,1163
 80070b8:	84000044 	addi	r16,r16,1
 80070bc:	28c7883a 	add	r3,r5,r3
 80070c0:	8cc00015 	stw	r19,0(r17)
 80070c4:	89400115 	stw	r5,4(r17)
 80070c8:	d8c12015 	stw	r3,1152(sp)
 80070cc:	dc011f15 	stw	r16,1148(sp)
 80070d0:	008001c4 	movi	r2,7
 80070d4:	14000e16 	blt	r2,r16,8007110 <___vfprintf_internal_r+0x11bc>
 80070d8:	8a000204 	addi	r8,r17,8
 80070dc:	003db006 	br	80067a0 <__alt_data_end+0xfc0067a0>
 80070e0:	01020074 	movhi	r4,2049
 80070e4:	211b5c84 	addi	r4,r4,28018
 80070e8:	d9012c15 	stw	r4,1200(sp)
 80070ec:	d9012c17 	ldw	r4,1200(sp)
 80070f0:	1c07883a 	add	r3,r3,r16
 80070f4:	44000115 	stw	r16,4(r8)
 80070f8:	41000015 	stw	r4,0(r8)
 80070fc:	10800044 	addi	r2,r2,1
 8007100:	d8c12015 	stw	r3,1152(sp)
 8007104:	d8811f15 	stw	r2,1148(sp)
 8007108:	010001c4 	movi	r4,7
 800710c:	20bda30e 	bge	r4,r2,800679c <__alt_data_end+0xfc00679c>
 8007110:	b809883a 	mov	r4,r23
 8007114:	b00b883a 	mov	r5,r22
 8007118:	d9811e04 	addi	r6,sp,1144
 800711c:	800dd680 	call	800dd68 <__sprint_r>
 8007120:	103ca41e 	bne	r2,zero,80063b4 <__alt_data_end+0xfc0063b4>
 8007124:	d8c12017 	ldw	r3,1152(sp)
 8007128:	da000404 	addi	r8,sp,16
 800712c:	003d9c06 	br	80067a0 <__alt_data_end+0xfc0067a0>
 8007130:	b809883a 	mov	r4,r23
 8007134:	b00b883a 	mov	r5,r22
 8007138:	d9811e04 	addi	r6,sp,1144
 800713c:	800dd680 	call	800dd68 <__sprint_r>
 8007140:	103dd226 	beq	r2,zero,800688c <__alt_data_end+0xfc00688c>
 8007144:	003c9b06 	br	80063b4 <__alt_data_end+0xfc0063b4>
 8007148:	10803fcc 	andi	r2,r2,255
 800714c:	1000311e 	bne	r2,zero,8007214 <___vfprintf_internal_r+0x12c0>
 8007150:	e080004c 	andi	r2,fp,1
 8007154:	10002f26 	beq	r2,zero,8007214 <___vfprintf_internal_r+0x12c0>
 8007158:	00800c04 	movi	r2,48
 800715c:	d8c10dc4 	addi	r3,sp,1079
 8007160:	d8810dc5 	stb	r2,1079(sp)
 8007164:	dc413c17 	ldw	r17,1264(sp)
 8007168:	d8c13115 	stw	r3,1220(sp)
 800716c:	003cf406 	br	8006540 <__alt_data_end+0xfc006540>
 8007170:	b809883a 	mov	r4,r23
 8007174:	b00b883a 	mov	r5,r22
 8007178:	d9811e04 	addi	r6,sp,1144
 800717c:	800dd680 	call	800dd68 <__sprint_r>
 8007180:	103c8c1e 	bne	r2,zero,80063b4 <__alt_data_end+0xfc0063b4>
 8007184:	d8c12017 	ldw	r3,1152(sp)
 8007188:	da000404 	addi	r8,sp,16
 800718c:	003d7706 	br	800676c <__alt_data_end+0xfc00676c>
 8007190:	b809883a 	mov	r4,r23
 8007194:	b00b883a 	mov	r5,r22
 8007198:	d9811e04 	addi	r6,sp,1144
 800719c:	800dd680 	call	800dd68 <__sprint_r>
 80071a0:	103c841e 	bne	r2,zero,80063b4 <__alt_data_end+0xfc0063b4>
 80071a4:	d8c12017 	ldw	r3,1152(sp)
 80071a8:	da000404 	addi	r8,sp,16
 80071ac:	003d3506 	br	8006684 <__alt_data_end+0xfc006684>
 80071b0:	b809883a 	mov	r4,r23
 80071b4:	b00b883a 	mov	r5,r22
 80071b8:	d9811e04 	addi	r6,sp,1144
 80071bc:	800dd680 	call	800dd68 <__sprint_r>
 80071c0:	103c7c1e 	bne	r2,zero,80063b4 <__alt_data_end+0xfc0063b4>
 80071c4:	d8c12017 	ldw	r3,1152(sp)
 80071c8:	da000404 	addi	r8,sp,16
 80071cc:	003d3b06 	br	80066bc <__alt_data_end+0xfc0066bc>
 80071d0:	d9413b17 	ldw	r5,1260(sp)
 80071d4:	d8c10e04 	addi	r3,sp,1080
 80071d8:	908003cc 	andi	r2,r18,15
 80071dc:	a808973a 	slli	r4,r21,28
 80071e0:	2885883a 	add	r2,r5,r2
 80071e4:	9024d13a 	srli	r18,r18,4
 80071e8:	10800003 	ldbu	r2,0(r2)
 80071ec:	a82ad13a 	srli	r21,r21,4
 80071f0:	18ffffc4 	addi	r3,r3,-1
 80071f4:	24a4b03a 	or	r18,r4,r18
 80071f8:	18800005 	stb	r2,0(r3)
 80071fc:	9544b03a 	or	r2,r18,r21
 8007200:	103ff51e 	bne	r2,zero,80071d8 <__alt_data_end+0xfc0071d8>
 8007204:	d9412817 	ldw	r5,1184(sp)
 8007208:	d8c13115 	stw	r3,1220(sp)
 800720c:	28e3c83a 	sub	r17,r5,r3
 8007210:	003ccb06 	br	8006540 <__alt_data_end+0xfc006540>
 8007214:	d8c10e04 	addi	r3,sp,1080
 8007218:	0023883a 	mov	r17,zero
 800721c:	d8c13115 	stw	r3,1220(sp)
 8007220:	003cc706 	br	8006540 <__alt_data_end+0xfc006540>
 8007224:	dc012617 	ldw	r16,1176(sp)
 8007228:	0401ab0e 	bge	zero,r16,80078d8 <___vfprintf_internal_r+0x1984>
 800722c:	d8813317 	ldw	r2,1228(sp)
 8007230:	d9413117 	ldw	r5,1220(sp)
 8007234:	d9013417 	ldw	r4,1232(sp)
 8007238:	1023883a 	mov	r17,r2
 800723c:	28a1883a 	add	r16,r5,r2
 8007240:	2080010e 	bge	r4,r2,8007248 <___vfprintf_internal_r+0x12f4>
 8007244:	2023883a 	mov	r17,r4
 8007248:	04400b0e 	bge	zero,r17,8007278 <___vfprintf_internal_r+0x1324>
 800724c:	d8811f17 	ldw	r2,1148(sp)
 8007250:	d9413117 	ldw	r5,1220(sp)
 8007254:	1c47883a 	add	r3,r3,r17
 8007258:	10800044 	addi	r2,r2,1
 800725c:	41400015 	stw	r5,0(r8)
 8007260:	44400115 	stw	r17,4(r8)
 8007264:	d8c12015 	stw	r3,1152(sp)
 8007268:	d8811f15 	stw	r2,1148(sp)
 800726c:	010001c4 	movi	r4,7
 8007270:	20826716 	blt	r4,r2,8007c10 <___vfprintf_internal_r+0x1cbc>
 8007274:	42000204 	addi	r8,r8,8
 8007278:	88026316 	blt	r17,zero,8007c08 <___vfprintf_internal_r+0x1cb4>
 800727c:	d8813417 	ldw	r2,1232(sp)
 8007280:	1463c83a 	sub	r17,r2,r17
 8007284:	0440590e 	bge	zero,r17,80073ec <___vfprintf_internal_r+0x1498>
 8007288:	04c00404 	movi	r19,16
 800728c:	d8811f17 	ldw	r2,1148(sp)
 8007290:	9c41770e 	bge	r19,r17,8007870 <___vfprintf_internal_r+0x191c>
 8007294:	01420074 	movhi	r5,2049
 8007298:	295b5c84 	addi	r5,r5,28018
 800729c:	d9412c15 	stw	r5,1200(sp)
 80072a0:	054001c4 	movi	r21,7
 80072a4:	00000306 	br	80072b4 <___vfprintf_internal_r+0x1360>
 80072a8:	42000204 	addi	r8,r8,8
 80072ac:	8c7ffc04 	addi	r17,r17,-16
 80072b0:	9c41720e 	bge	r19,r17,800787c <___vfprintf_internal_r+0x1928>
 80072b4:	18c00404 	addi	r3,r3,16
 80072b8:	10800044 	addi	r2,r2,1
 80072bc:	45000015 	stw	r20,0(r8)
 80072c0:	44c00115 	stw	r19,4(r8)
 80072c4:	d8c12015 	stw	r3,1152(sp)
 80072c8:	d8811f15 	stw	r2,1148(sp)
 80072cc:	a8bff60e 	bge	r21,r2,80072a8 <__alt_data_end+0xfc0072a8>
 80072d0:	b809883a 	mov	r4,r23
 80072d4:	b00b883a 	mov	r5,r22
 80072d8:	d9811e04 	addi	r6,sp,1144
 80072dc:	800dd680 	call	800dd68 <__sprint_r>
 80072e0:	103c341e 	bne	r2,zero,80063b4 <__alt_data_end+0xfc0063b4>
 80072e4:	d8c12017 	ldw	r3,1152(sp)
 80072e8:	d8811f17 	ldw	r2,1148(sp)
 80072ec:	da000404 	addi	r8,sp,16
 80072f0:	003fee06 	br	80072ac <__alt_data_end+0xfc0072ac>
 80072f4:	b809883a 	mov	r4,r23
 80072f8:	b00b883a 	mov	r5,r22
 80072fc:	d9811e04 	addi	r6,sp,1144
 8007300:	800dd680 	call	800dd68 <__sprint_r>
 8007304:	103c2b1e 	bne	r2,zero,80063b4 <__alt_data_end+0xfc0063b4>
 8007308:	d8c12017 	ldw	r3,1152(sp)
 800730c:	d8812787 	ldb	r2,1182(sp)
 8007310:	da000404 	addi	r8,sp,16
 8007314:	003cce06 	br	8006650 <__alt_data_end+0xfc006650>
 8007318:	d8813317 	ldw	r2,1228(sp)
 800731c:	14ffffc4 	addi	r19,r2,-1
 8007320:	04ff630e 	bge	zero,r19,80070b0 <__alt_data_end+0xfc0070b0>
 8007324:	05400404 	movi	r21,16
 8007328:	acc0810e 	bge	r21,r19,8007530 <___vfprintf_internal_r+0x15dc>
 800732c:	01420074 	movhi	r5,2049
 8007330:	295b5c84 	addi	r5,r5,28018
 8007334:	d9412c15 	stw	r5,1200(sp)
 8007338:	01c001c4 	movi	r7,7
 800733c:	00000306 	br	800734c <___vfprintf_internal_r+0x13f8>
 8007340:	8c400204 	addi	r17,r17,8
 8007344:	9cfffc04 	addi	r19,r19,-16
 8007348:	acc07c0e 	bge	r21,r19,800753c <___vfprintf_internal_r+0x15e8>
 800734c:	18c00404 	addi	r3,r3,16
 8007350:	84000044 	addi	r16,r16,1
 8007354:	8d000015 	stw	r20,0(r17)
 8007358:	8d400115 	stw	r21,4(r17)
 800735c:	d8c12015 	stw	r3,1152(sp)
 8007360:	dc011f15 	stw	r16,1148(sp)
 8007364:	3c3ff60e 	bge	r7,r16,8007340 <__alt_data_end+0xfc007340>
 8007368:	b809883a 	mov	r4,r23
 800736c:	b00b883a 	mov	r5,r22
 8007370:	d9811e04 	addi	r6,sp,1144
 8007374:	d9c13d15 	stw	r7,1268(sp)
 8007378:	800dd680 	call	800dd68 <__sprint_r>
 800737c:	d9c13d17 	ldw	r7,1268(sp)
 8007380:	103c0c1e 	bne	r2,zero,80063b4 <__alt_data_end+0xfc0063b4>
 8007384:	d8c12017 	ldw	r3,1152(sp)
 8007388:	dc011f17 	ldw	r16,1148(sp)
 800738c:	dc400404 	addi	r17,sp,16
 8007390:	003fec06 	br	8007344 <__alt_data_end+0xfc007344>
 8007394:	00800084 	movi	r2,2
 8007398:	9546b03a 	or	r3,r18,r21
 800739c:	003d7d06 	br	8006994 <__alt_data_end+0xfc006994>
 80073a0:	10803fcc 	andi	r2,r2,255
 80073a4:	1080201c 	xori	r2,r2,128
 80073a8:	10bfe004 	addi	r2,r2,-128
 80073ac:	01000c04 	movi	r4,48
 80073b0:	1101d726 	beq	r2,r4,8007b10 <___vfprintf_internal_r+0x1bbc>
 80073b4:	d9413117 	ldw	r5,1220(sp)
 80073b8:	d8812817 	ldw	r2,1184(sp)
 80073bc:	193fffc5 	stb	r4,-1(r3)
 80073c0:	297fffc4 	addi	r5,r5,-1
 80073c4:	d9413115 	stw	r5,1220(sp)
 80073c8:	1163c83a 	sub	r17,r2,r5
 80073cc:	003c5c06 	br	8006540 <__alt_data_end+0xfc006540>
 80073d0:	b809883a 	mov	r4,r23
 80073d4:	b00b883a 	mov	r5,r22
 80073d8:	d9811e04 	addi	r6,sp,1144
 80073dc:	800dd680 	call	800dd68 <__sprint_r>
 80073e0:	103bf41e 	bne	r2,zero,80063b4 <__alt_data_end+0xfc0063b4>
 80073e4:	d8c12017 	ldw	r3,1152(sp)
 80073e8:	da000404 	addi	r8,sp,16
 80073ec:	d9413117 	ldw	r5,1220(sp)
 80073f0:	d9013417 	ldw	r4,1232(sp)
 80073f4:	d8812617 	ldw	r2,1176(sp)
 80073f8:	2923883a 	add	r17,r5,r4
 80073fc:	d9413317 	ldw	r5,1228(sp)
 8007400:	11400216 	blt	r2,r5,800740c <___vfprintf_internal_r+0x14b8>
 8007404:	e100004c 	andi	r4,fp,1
 8007408:	20000d26 	beq	r4,zero,8007440 <___vfprintf_internal_r+0x14ec>
 800740c:	d9013817 	ldw	r4,1248(sp)
 8007410:	d9413517 	ldw	r5,1236(sp)
 8007414:	1907883a 	add	r3,r3,r4
 8007418:	d9011f17 	ldw	r4,1148(sp)
 800741c:	41400015 	stw	r5,0(r8)
 8007420:	d9413817 	ldw	r5,1248(sp)
 8007424:	21000044 	addi	r4,r4,1
 8007428:	d8c12015 	stw	r3,1152(sp)
 800742c:	41400115 	stw	r5,4(r8)
 8007430:	d9011f15 	stw	r4,1148(sp)
 8007434:	014001c4 	movi	r5,7
 8007438:	2901fd16 	blt	r5,r4,8007c30 <___vfprintf_internal_r+0x1cdc>
 800743c:	42000204 	addi	r8,r8,8
 8007440:	d9013317 	ldw	r4,1228(sp)
 8007444:	2085c83a 	sub	r2,r4,r2
 8007448:	8449c83a 	sub	r4,r16,r17
 800744c:	1021883a 	mov	r16,r2
 8007450:	2080010e 	bge	r4,r2,8007458 <___vfprintf_internal_r+0x1504>
 8007454:	2021883a 	mov	r16,r4
 8007458:	04000a0e 	bge	zero,r16,8007484 <___vfprintf_internal_r+0x1530>
 800745c:	d9011f17 	ldw	r4,1148(sp)
 8007460:	1c07883a 	add	r3,r3,r16
 8007464:	44400015 	stw	r17,0(r8)
 8007468:	21000044 	addi	r4,r4,1
 800746c:	44000115 	stw	r16,4(r8)
 8007470:	d8c12015 	stw	r3,1152(sp)
 8007474:	d9011f15 	stw	r4,1148(sp)
 8007478:	014001c4 	movi	r5,7
 800747c:	29020916 	blt	r5,r4,8007ca4 <___vfprintf_internal_r+0x1d50>
 8007480:	42000204 	addi	r8,r8,8
 8007484:	80020116 	blt	r16,zero,8007c8c <___vfprintf_internal_r+0x1d38>
 8007488:	1421c83a 	sub	r16,r2,r16
 800748c:	043cc40e 	bge	zero,r16,80067a0 <__alt_data_end+0xfc0067a0>
 8007490:	04400404 	movi	r17,16
 8007494:	d8811f17 	ldw	r2,1148(sp)
 8007498:	8c3f110e 	bge	r17,r16,80070e0 <__alt_data_end+0xfc0070e0>
 800749c:	01420074 	movhi	r5,2049
 80074a0:	295b5c84 	addi	r5,r5,28018
 80074a4:	d9412c15 	stw	r5,1200(sp)
 80074a8:	04c001c4 	movi	r19,7
 80074ac:	00000306 	br	80074bc <___vfprintf_internal_r+0x1568>
 80074b0:	42000204 	addi	r8,r8,8
 80074b4:	843ffc04 	addi	r16,r16,-16
 80074b8:	8c3f0c0e 	bge	r17,r16,80070ec <__alt_data_end+0xfc0070ec>
 80074bc:	18c00404 	addi	r3,r3,16
 80074c0:	10800044 	addi	r2,r2,1
 80074c4:	45000015 	stw	r20,0(r8)
 80074c8:	44400115 	stw	r17,4(r8)
 80074cc:	d8c12015 	stw	r3,1152(sp)
 80074d0:	d8811f15 	stw	r2,1148(sp)
 80074d4:	98bff60e 	bge	r19,r2,80074b0 <__alt_data_end+0xfc0074b0>
 80074d8:	b809883a 	mov	r4,r23
 80074dc:	b00b883a 	mov	r5,r22
 80074e0:	d9811e04 	addi	r6,sp,1144
 80074e4:	800dd680 	call	800dd68 <__sprint_r>
 80074e8:	103bb21e 	bne	r2,zero,80063b4 <__alt_data_end+0xfc0063b4>
 80074ec:	d8c12017 	ldw	r3,1152(sp)
 80074f0:	d8811f17 	ldw	r2,1148(sp)
 80074f4:	da000404 	addi	r8,sp,16
 80074f8:	003fee06 	br	80074b4 <__alt_data_end+0xfc0074b4>
 80074fc:	e088703a 	and	r4,fp,r2
 8007500:	203ec01e 	bne	r4,zero,8007004 <__alt_data_end+0xfc007004>
 8007504:	dc011f17 	ldw	r16,1148(sp)
 8007508:	d9013117 	ldw	r4,1220(sp)
 800750c:	40800115 	stw	r2,4(r8)
 8007510:	84000044 	addi	r16,r16,1
 8007514:	41000015 	stw	r4,0(r8)
 8007518:	d8c12015 	stw	r3,1152(sp)
 800751c:	dc011f15 	stw	r16,1148(sp)
 8007520:	008001c4 	movi	r2,7
 8007524:	14000e16 	blt	r2,r16,8007560 <___vfprintf_internal_r+0x160c>
 8007528:	44400204 	addi	r17,r8,8
 800752c:	003ee006 	br	80070b0 <__alt_data_end+0xfc0070b0>
 8007530:	01020074 	movhi	r4,2049
 8007534:	211b5c84 	addi	r4,r4,28018
 8007538:	d9012c15 	stw	r4,1200(sp)
 800753c:	d8812c17 	ldw	r2,1200(sp)
 8007540:	1cc7883a 	add	r3,r3,r19
 8007544:	84000044 	addi	r16,r16,1
 8007548:	88800015 	stw	r2,0(r17)
 800754c:	8cc00115 	stw	r19,4(r17)
 8007550:	d8c12015 	stw	r3,1152(sp)
 8007554:	dc011f15 	stw	r16,1148(sp)
 8007558:	008001c4 	movi	r2,7
 800755c:	143ed30e 	bge	r2,r16,80070ac <__alt_data_end+0xfc0070ac>
 8007560:	b809883a 	mov	r4,r23
 8007564:	b00b883a 	mov	r5,r22
 8007568:	d9811e04 	addi	r6,sp,1144
 800756c:	800dd680 	call	800dd68 <__sprint_r>
 8007570:	103b901e 	bne	r2,zero,80063b4 <__alt_data_end+0xfc0063b4>
 8007574:	d8c12017 	ldw	r3,1152(sp)
 8007578:	dc011f17 	ldw	r16,1148(sp)
 800757c:	dc400404 	addi	r17,sp,16
 8007580:	003ecb06 	br	80070b0 <__alt_data_end+0xfc0070b0>
 8007584:	b809883a 	mov	r4,r23
 8007588:	b00b883a 	mov	r5,r22
 800758c:	d9811e04 	addi	r6,sp,1144
 8007590:	800dd680 	call	800dd68 <__sprint_r>
 8007594:	103b871e 	bne	r2,zero,80063b4 <__alt_data_end+0xfc0063b4>
 8007598:	d8c12017 	ldw	r3,1152(sp)
 800759c:	dc011f17 	ldw	r16,1148(sp)
 80075a0:	da000404 	addi	r8,sp,16
 80075a4:	003ea206 	br	8007030 <__alt_data_end+0xfc007030>
 80075a8:	b809883a 	mov	r4,r23
 80075ac:	b00b883a 	mov	r5,r22
 80075b0:	d9811e04 	addi	r6,sp,1144
 80075b4:	800dd680 	call	800dd68 <__sprint_r>
 80075b8:	103b7e1e 	bne	r2,zero,80063b4 <__alt_data_end+0xfc0063b4>
 80075bc:	d8c12017 	ldw	r3,1152(sp)
 80075c0:	dc011f17 	ldw	r16,1148(sp)
 80075c4:	dc400404 	addi	r17,sp,16
 80075c8:	003ea406 	br	800705c <__alt_data_end+0xfc00705c>
 80075cc:	b809883a 	mov	r4,r23
 80075d0:	b00b883a 	mov	r5,r22
 80075d4:	d9811e04 	addi	r6,sp,1144
 80075d8:	800dd680 	call	800dd68 <__sprint_r>
 80075dc:	103b751e 	bne	r2,zero,80063b4 <__alt_data_end+0xfc0063b4>
 80075e0:	d8c12017 	ldw	r3,1152(sp)
 80075e4:	da000404 	addi	r8,sp,16
 80075e8:	003c3706 	br	80066c8 <__alt_data_end+0xfc0066c8>
 80075ec:	04a5c83a 	sub	r18,zero,r18
 80075f0:	9004c03a 	cmpne	r2,r18,zero
 80075f4:	056bc83a 	sub	r21,zero,r21
 80075f8:	a8abc83a 	sub	r21,r21,r2
 80075fc:	04c00b44 	movi	r19,45
 8007600:	dcc12785 	stb	r19,1182(sp)
 8007604:	da413215 	stw	r9,1224(sp)
 8007608:	00800044 	movi	r2,1
 800760c:	9546b03a 	or	r3,r18,r21
 8007610:	003bb106 	br	80064d8 <__alt_data_end+0xfc0064d8>
 8007614:	da013f15 	stw	r8,1276(sp)
 8007618:	da413e15 	stw	r9,1272(sp)
 800761c:	800c7240 	call	800c724 <__fpclassifyd>
 8007620:	da013f17 	ldw	r8,1276(sp)
 8007624:	da413e17 	ldw	r9,1272(sp)
 8007628:	1000e526 	beq	r2,zero,80079c0 <___vfprintf_internal_r+0x1a6c>
 800762c:	04fff7c4 	movi	r19,-33
 8007630:	00bfffc4 	movi	r2,-1
 8007634:	84e6703a 	and	r19,r16,r19
 8007638:	48822926 	beq	r9,r2,8007ee0 <___vfprintf_internal_r+0x1f8c>
 800763c:	008011c4 	movi	r2,71
 8007640:	98821626 	beq	r19,r2,8007e9c <___vfprintf_internal_r+0x1f48>
 8007644:	d9013917 	ldw	r4,1252(sp)
 8007648:	e0c04014 	ori	r3,fp,256
 800764c:	d8c12d15 	stw	r3,1204(sp)
 8007650:	20021f16 	blt	r4,zero,8007ed0 <___vfprintf_internal_r+0x1f7c>
 8007654:	dc413917 	ldw	r17,1252(sp)
 8007658:	d8012b05 	stb	zero,1196(sp)
 800765c:	00801984 	movi	r2,102
 8007660:	80814d26 	beq	r16,r2,8007b98 <___vfprintf_internal_r+0x1c44>
 8007664:	00801184 	movi	r2,70
 8007668:	80814b26 	beq	r16,r2,8007b98 <___vfprintf_internal_r+0x1c44>
 800766c:	00801144 	movi	r2,69
 8007670:	98821d26 	beq	r19,r2,8007ee8 <___vfprintf_internal_r+0x1f94>
 8007674:	482b883a 	mov	r21,r9
 8007678:	d8812604 	addi	r2,sp,1176
 800767c:	d8800115 	stw	r2,4(sp)
 8007680:	d9413717 	ldw	r5,1244(sp)
 8007684:	d8812504 	addi	r2,sp,1172
 8007688:	d8800215 	stw	r2,8(sp)
 800768c:	d8812104 	addi	r2,sp,1156
 8007690:	dd400015 	stw	r21,0(sp)
 8007694:	d8800315 	stw	r2,12(sp)
 8007698:	b809883a 	mov	r4,r23
 800769c:	880d883a 	mov	r6,r17
 80076a0:	01c00084 	movi	r7,2
 80076a4:	da013f15 	stw	r8,1276(sp)
 80076a8:	da413e15 	stw	r9,1272(sp)
 80076ac:	80083cc0 	call	80083cc <_dtoa_r>
 80076b0:	d8813115 	stw	r2,1220(sp)
 80076b4:	008019c4 	movi	r2,103
 80076b8:	da013f17 	ldw	r8,1276(sp)
 80076bc:	da413e17 	ldw	r9,1272(sp)
 80076c0:	80800226 	beq	r16,r2,80076cc <___vfprintf_internal_r+0x1778>
 80076c4:	008011c4 	movi	r2,71
 80076c8:	8081451e 	bne	r16,r2,8007be0 <___vfprintf_internal_r+0x1c8c>
 80076cc:	e080004c 	andi	r2,fp,1
 80076d0:	10021e26 	beq	r2,zero,8007f4c <___vfprintf_internal_r+0x1ff8>
 80076d4:	d8c13117 	ldw	r3,1220(sp)
 80076d8:	1d55883a 	add	r10,r3,r21
 80076dc:	d9013717 	ldw	r4,1244(sp)
 80076e0:	880b883a 	mov	r5,r17
 80076e4:	000d883a 	mov	r6,zero
 80076e8:	000f883a 	mov	r7,zero
 80076ec:	da013f15 	stw	r8,1276(sp)
 80076f0:	da413e15 	stw	r9,1272(sp)
 80076f4:	da813d15 	stw	r10,1268(sp)
 80076f8:	8011ab80 	call	8011ab8 <__eqdf2>
 80076fc:	da013f17 	ldw	r8,1276(sp)
 8007700:	da413e17 	ldw	r9,1272(sp)
 8007704:	da813d17 	ldw	r10,1268(sp)
 8007708:	1001a126 	beq	r2,zero,8007d90 <___vfprintf_internal_r+0x1e3c>
 800770c:	d8812117 	ldw	r2,1156(sp)
 8007710:	1280062e 	bgeu	r2,r10,800772c <___vfprintf_internal_r+0x17d8>
 8007714:	01000c04 	movi	r4,48
 8007718:	10c00044 	addi	r3,r2,1
 800771c:	d8c12115 	stw	r3,1156(sp)
 8007720:	11000005 	stb	r4,0(r2)
 8007724:	d8812117 	ldw	r2,1156(sp)
 8007728:	12bffb36 	bltu	r2,r10,8007718 <__alt_data_end+0xfc007718>
 800772c:	d8c13117 	ldw	r3,1220(sp)
 8007730:	10c5c83a 	sub	r2,r2,r3
 8007734:	d8813315 	stw	r2,1228(sp)
 8007738:	008011c4 	movi	r2,71
 800773c:	98818926 	beq	r19,r2,8007d64 <___vfprintf_internal_r+0x1e10>
 8007740:	00801944 	movi	r2,101
 8007744:	14023c0e 	bge	r2,r16,8008038 <___vfprintf_internal_r+0x20e4>
 8007748:	d8c12617 	ldw	r3,1176(sp)
 800774c:	00801984 	movi	r2,102
 8007750:	d8c13415 	stw	r3,1232(sp)
 8007754:	8081ef26 	beq	r16,r2,8007f14 <___vfprintf_internal_r+0x1fc0>
 8007758:	d8c13417 	ldw	r3,1232(sp)
 800775c:	d9013317 	ldw	r4,1228(sp)
 8007760:	1901e316 	blt	r3,r4,8007ef0 <___vfprintf_internal_r+0x1f9c>
 8007764:	e080004c 	andi	r2,fp,1
 8007768:	1001f426 	beq	r2,zero,8007f3c <___vfprintf_internal_r+0x1fe8>
 800776c:	d8c13417 	ldw	r3,1232(sp)
 8007770:	1c400044 	addi	r17,r3,1
 8007774:	8839883a 	mov	fp,r17
 8007778:	8801e416 	blt	r17,zero,8007f0c <___vfprintf_internal_r+0x1fb8>
 800777c:	dd412b07 	ldb	r21,1196(sp)
 8007780:	a801701e 	bne	r21,zero,8007d44 <___vfprintf_internal_r+0x1df0>
 8007784:	df012b15 	stw	fp,1196(sp)
 8007788:	dcc12783 	ldbu	r19,1182(sp)
 800778c:	df012d17 	ldw	fp,1204(sp)
 8007790:	d8013215 	stw	zero,1224(sp)
 8007794:	dc812d15 	stw	r18,1204(sp)
 8007798:	003b6e06 	br	8006554 <__alt_data_end+0xfc006554>
 800779c:	e080040c 	andi	r2,fp,16
 80077a0:	1000b51e 	bne	r2,zero,8007a78 <___vfprintf_internal_r+0x1b24>
 80077a4:	e080100c 	andi	r2,fp,64
 80077a8:	10015b26 	beq	r2,zero,8007d18 <___vfprintf_internal_r+0x1dc4>
 80077ac:	d9012d17 	ldw	r4,1204(sp)
 80077b0:	d9412f17 	ldw	r5,1212(sp)
 80077b4:	20800017 	ldw	r2,0(r4)
 80077b8:	21000104 	addi	r4,r4,4
 80077bc:	d9012d15 	stw	r4,1204(sp)
 80077c0:	1140000d 	sth	r5,0(r2)
 80077c4:	003a2006 	br	8006048 <__alt_data_end+0xfc006048>
 80077c8:	e0c0100c 	andi	r3,fp,64
 80077cc:	1800a226 	beq	r3,zero,8007a58 <___vfprintf_internal_r+0x1b04>
 80077d0:	d8c12d17 	ldw	r3,1204(sp)
 80077d4:	1480000b 	ldhu	r18,0(r2)
 80077d8:	002b883a 	mov	r21,zero
 80077dc:	18c00104 	addi	r3,r3,4
 80077e0:	d8c12d15 	stw	r3,1204(sp)
 80077e4:	0005883a 	mov	r2,zero
 80077e8:	9007883a 	mov	r3,r18
 80077ec:	003c6906 	br	8006994 <__alt_data_end+0xfc006994>
 80077f0:	e0c0100c 	andi	r3,fp,64
 80077f4:	18009026 	beq	r3,zero,8007a38 <___vfprintf_internal_r+0x1ae4>
 80077f8:	1480000b 	ldhu	r18,0(r2)
 80077fc:	d8812d17 	ldw	r2,1204(sp)
 8007800:	002b883a 	mov	r21,zero
 8007804:	9007883a 	mov	r3,r18
 8007808:	10800104 	addi	r2,r2,4
 800780c:	d8812d15 	stw	r2,1204(sp)
 8007810:	00800044 	movi	r2,1
 8007814:	003c5f06 	br	8006994 <__alt_data_end+0xfc006994>
 8007818:	e0c0100c 	andi	r3,fp,64
 800781c:	18008026 	beq	r3,zero,8007a20 <___vfprintf_internal_r+0x1acc>
 8007820:	d9012d17 	ldw	r4,1204(sp)
 8007824:	1480000b 	ldhu	r18,0(r2)
 8007828:	002b883a 	mov	r21,zero
 800782c:	21000104 	addi	r4,r4,4
 8007830:	d9012d15 	stw	r4,1204(sp)
 8007834:	003c7906 	br	8006a1c <__alt_data_end+0xfc006a1c>
 8007838:	e080100c 	andi	r2,fp,64
 800783c:	10007126 	beq	r2,zero,8007a04 <___vfprintf_internal_r+0x1ab0>
 8007840:	1c80000f 	ldh	r18,0(r3)
 8007844:	d8812d17 	ldw	r2,1204(sp)
 8007848:	902bd7fa 	srai	r21,r18,31
 800784c:	10800104 	addi	r2,r2,4
 8007850:	d8812d15 	stw	r2,1204(sp)
 8007854:	a805883a 	mov	r2,r21
 8007858:	003b1a06 	br	80064c4 <__alt_data_end+0xfc0064c4>
 800785c:	e4000007 	ldb	r16,0(fp)
 8007860:	e005883a 	mov	r2,fp
 8007864:	003a2306 	br	80060f4 <__alt_data_end+0xfc0060f4>
 8007868:	00800084 	movi	r2,2
 800786c:	003c4906 	br	8006994 <__alt_data_end+0xfc006994>
 8007870:	01020074 	movhi	r4,2049
 8007874:	211b5c84 	addi	r4,r4,28018
 8007878:	d9012c15 	stw	r4,1200(sp)
 800787c:	d9012c17 	ldw	r4,1200(sp)
 8007880:	1c47883a 	add	r3,r3,r17
 8007884:	10800044 	addi	r2,r2,1
 8007888:	41000015 	stw	r4,0(r8)
 800788c:	44400115 	stw	r17,4(r8)
 8007890:	d8c12015 	stw	r3,1152(sp)
 8007894:	d8811f15 	stw	r2,1148(sp)
 8007898:	010001c4 	movi	r4,7
 800789c:	20becc16 	blt	r4,r2,80073d0 <__alt_data_end+0xfc0073d0>
 80078a0:	42000204 	addi	r8,r8,8
 80078a4:	003ed106 	br	80073ec <__alt_data_end+0xfc0073ec>
 80078a8:	01020074 	movhi	r4,2049
 80078ac:	211b5c84 	addi	r4,r4,28018
 80078b0:	d9012c15 	stw	r4,1200(sp)
 80078b4:	003ba306 	br	8006744 <__alt_data_end+0xfc006744>
 80078b8:	b809883a 	mov	r4,r23
 80078bc:	b00b883a 	mov	r5,r22
 80078c0:	d9811e04 	addi	r6,sp,1144
 80078c4:	800dd680 	call	800dd68 <__sprint_r>
 80078c8:	103aba1e 	bne	r2,zero,80063b4 <__alt_data_end+0xfc0063b4>
 80078cc:	d8c12017 	ldw	r3,1152(sp)
 80078d0:	da000404 	addi	r8,sp,16
 80078d4:	003d6c06 	br	8006e88 <__alt_data_end+0xfc006e88>
 80078d8:	d8811f17 	ldw	r2,1148(sp)
 80078dc:	01420074 	movhi	r5,2049
 80078e0:	01000044 	movi	r4,1
 80078e4:	18c00044 	addi	r3,r3,1
 80078e8:	10800044 	addi	r2,r2,1
 80078ec:	295b5404 	addi	r5,r5,27984
 80078f0:	41000115 	stw	r4,4(r8)
 80078f4:	41400015 	stw	r5,0(r8)
 80078f8:	d8c12015 	stw	r3,1152(sp)
 80078fc:	d8811f15 	stw	r2,1148(sp)
 8007900:	010001c4 	movi	r4,7
 8007904:	20806716 	blt	r4,r2,8007aa4 <___vfprintf_internal_r+0x1b50>
 8007908:	42000204 	addi	r8,r8,8
 800790c:	8000041e 	bne	r16,zero,8007920 <___vfprintf_internal_r+0x19cc>
 8007910:	d8813317 	ldw	r2,1228(sp)
 8007914:	1000021e 	bne	r2,zero,8007920 <___vfprintf_internal_r+0x19cc>
 8007918:	e080004c 	andi	r2,fp,1
 800791c:	103ba026 	beq	r2,zero,80067a0 <__alt_data_end+0xfc0067a0>
 8007920:	d9013817 	ldw	r4,1248(sp)
 8007924:	d8811f17 	ldw	r2,1148(sp)
 8007928:	d9413517 	ldw	r5,1236(sp)
 800792c:	1907883a 	add	r3,r3,r4
 8007930:	10800044 	addi	r2,r2,1
 8007934:	41000115 	stw	r4,4(r8)
 8007938:	41400015 	stw	r5,0(r8)
 800793c:	d8c12015 	stw	r3,1152(sp)
 8007940:	d8811f15 	stw	r2,1148(sp)
 8007944:	010001c4 	movi	r4,7
 8007948:	20815716 	blt	r4,r2,8007ea8 <___vfprintf_internal_r+0x1f54>
 800794c:	42000204 	addi	r8,r8,8
 8007950:	0421c83a 	sub	r16,zero,r16
 8007954:	0400810e 	bge	zero,r16,8007b5c <___vfprintf_internal_r+0x1c08>
 8007958:	04400404 	movi	r17,16
 800795c:	8c00bd0e 	bge	r17,r16,8007c54 <___vfprintf_internal_r+0x1d00>
 8007960:	01420074 	movhi	r5,2049
 8007964:	295b5c84 	addi	r5,r5,28018
 8007968:	d9412c15 	stw	r5,1200(sp)
 800796c:	04c001c4 	movi	r19,7
 8007970:	00000306 	br	8007980 <___vfprintf_internal_r+0x1a2c>
 8007974:	42000204 	addi	r8,r8,8
 8007978:	843ffc04 	addi	r16,r16,-16
 800797c:	8c00b80e 	bge	r17,r16,8007c60 <___vfprintf_internal_r+0x1d0c>
 8007980:	18c00404 	addi	r3,r3,16
 8007984:	10800044 	addi	r2,r2,1
 8007988:	45000015 	stw	r20,0(r8)
 800798c:	44400115 	stw	r17,4(r8)
 8007990:	d8c12015 	stw	r3,1152(sp)
 8007994:	d8811f15 	stw	r2,1148(sp)
 8007998:	98bff60e 	bge	r19,r2,8007974 <__alt_data_end+0xfc007974>
 800799c:	b809883a 	mov	r4,r23
 80079a0:	b00b883a 	mov	r5,r22
 80079a4:	d9811e04 	addi	r6,sp,1144
 80079a8:	800dd680 	call	800dd68 <__sprint_r>
 80079ac:	103a811e 	bne	r2,zero,80063b4 <__alt_data_end+0xfc0063b4>
 80079b0:	d8c12017 	ldw	r3,1152(sp)
 80079b4:	d8811f17 	ldw	r2,1148(sp)
 80079b8:	da000404 	addi	r8,sp,16
 80079bc:	003fee06 	br	8007978 <__alt_data_end+0xfc007978>
 80079c0:	008011c4 	movi	r2,71
 80079c4:	1400db16 	blt	r2,r16,8007d34 <___vfprintf_internal_r+0x1de0>
 80079c8:	01020074 	movhi	r4,2049
 80079cc:	211b4604 	addi	r4,r4,27928
 80079d0:	d9013115 	stw	r4,1220(sp)
 80079d4:	00c000c4 	movi	r3,3
 80079d8:	00bfdfc4 	movi	r2,-129
 80079dc:	d8c12b15 	stw	r3,1196(sp)
 80079e0:	e0b8703a 	and	fp,fp,r2
 80079e4:	dcc12783 	ldbu	r19,1182(sp)
 80079e8:	dc812d15 	stw	r18,1204(sp)
 80079ec:	1823883a 	mov	r17,r3
 80079f0:	d8013215 	stw	zero,1224(sp)
 80079f4:	d8013415 	stw	zero,1232(sp)
 80079f8:	003ad606 	br	8006554 <__alt_data_end+0xfc006554>
 80079fc:	4823883a 	mov	r17,r9
 8007a00:	003cc906 	br	8006d28 <__alt_data_end+0xfc006d28>
 8007a04:	1c800017 	ldw	r18,0(r3)
 8007a08:	d8c12d17 	ldw	r3,1204(sp)
 8007a0c:	902bd7fa 	srai	r21,r18,31
 8007a10:	18c00104 	addi	r3,r3,4
 8007a14:	d8c12d15 	stw	r3,1204(sp)
 8007a18:	a805883a 	mov	r2,r21
 8007a1c:	003aa906 	br	80064c4 <__alt_data_end+0xfc0064c4>
 8007a20:	d9412d17 	ldw	r5,1204(sp)
 8007a24:	14800017 	ldw	r18,0(r2)
 8007a28:	002b883a 	mov	r21,zero
 8007a2c:	29400104 	addi	r5,r5,4
 8007a30:	d9412d15 	stw	r5,1204(sp)
 8007a34:	003bf906 	br	8006a1c <__alt_data_end+0xfc006a1c>
 8007a38:	d8c12d17 	ldw	r3,1204(sp)
 8007a3c:	14800017 	ldw	r18,0(r2)
 8007a40:	002b883a 	mov	r21,zero
 8007a44:	18c00104 	addi	r3,r3,4
 8007a48:	d8c12d15 	stw	r3,1204(sp)
 8007a4c:	00800044 	movi	r2,1
 8007a50:	9007883a 	mov	r3,r18
 8007a54:	003bcf06 	br	8006994 <__alt_data_end+0xfc006994>
 8007a58:	d9012d17 	ldw	r4,1204(sp)
 8007a5c:	14800017 	ldw	r18,0(r2)
 8007a60:	002b883a 	mov	r21,zero
 8007a64:	21000104 	addi	r4,r4,4
 8007a68:	d9012d15 	stw	r4,1204(sp)
 8007a6c:	0005883a 	mov	r2,zero
 8007a70:	9007883a 	mov	r3,r18
 8007a74:	003bc706 	br	8006994 <__alt_data_end+0xfc006994>
 8007a78:	d9412d17 	ldw	r5,1204(sp)
 8007a7c:	d8c12f17 	ldw	r3,1212(sp)
 8007a80:	28800017 	ldw	r2,0(r5)
 8007a84:	29400104 	addi	r5,r5,4
 8007a88:	d9412d15 	stw	r5,1204(sp)
 8007a8c:	10c00015 	stw	r3,0(r2)
 8007a90:	00396d06 	br	8006048 <__alt_data_end+0xfc006048>
 8007a94:	01020074 	movhi	r4,2049
 8007a98:	211b4404 	addi	r4,r4,27920
 8007a9c:	d9013115 	stw	r4,1220(sp)
 8007aa0:	003ba206 	br	800692c <__alt_data_end+0xfc00692c>
 8007aa4:	b809883a 	mov	r4,r23
 8007aa8:	b00b883a 	mov	r5,r22
 8007aac:	d9811e04 	addi	r6,sp,1144
 8007ab0:	800dd680 	call	800dd68 <__sprint_r>
 8007ab4:	103a3f1e 	bne	r2,zero,80063b4 <__alt_data_end+0xfc0063b4>
 8007ab8:	dc012617 	ldw	r16,1176(sp)
 8007abc:	d8c12017 	ldw	r3,1152(sp)
 8007ac0:	da000404 	addi	r8,sp,16
 8007ac4:	003f9106 	br	800790c <__alt_data_end+0xfc00790c>
 8007ac8:	e0800044 	addi	r2,fp,1
 8007acc:	9cc00814 	ori	r19,r19,32
 8007ad0:	e4000047 	ldb	r16,1(fp)
 8007ad4:	00398706 	br	80060f4 <__alt_data_end+0xfc0060f4>
 8007ad8:	d8812e17 	ldw	r2,1208(sp)
 8007adc:	d8c12d15 	stw	r3,1204(sp)
 8007ae0:	0085c83a 	sub	r2,zero,r2
 8007ae4:	d8812e15 	stw	r2,1208(sp)
 8007ae8:	e005883a 	mov	r2,fp
 8007aec:	003a3a06 	br	80063d8 <__alt_data_end+0xfc0063d8>
 8007af0:	b809883a 	mov	r4,r23
 8007af4:	b00b883a 	mov	r5,r22
 8007af8:	d9811e04 	addi	r6,sp,1144
 8007afc:	800dd680 	call	800dd68 <__sprint_r>
 8007b00:	103a2c1e 	bne	r2,zero,80063b4 <__alt_data_end+0xfc0063b4>
 8007b04:	d8c12017 	ldw	r3,1152(sp)
 8007b08:	da000404 	addi	r8,sp,16
 8007b0c:	003cf006 	br	8006ed0 <__alt_data_end+0xfc006ed0>
 8007b10:	d8c12817 	ldw	r3,1184(sp)
 8007b14:	d9013117 	ldw	r4,1220(sp)
 8007b18:	1923c83a 	sub	r17,r3,r4
 8007b1c:	003a8806 	br	8006540 <__alt_data_end+0xfc006540>
 8007b20:	da013f15 	stw	r8,1276(sp)
 8007b24:	8003e4c0 	call	8003e4c <strlen>
 8007b28:	1023883a 	mov	r17,r2
 8007b2c:	da013f17 	ldw	r8,1276(sp)
 8007b30:	883c7f0e 	bge	r17,zero,8006d30 <__alt_data_end+0xfc006d30>
 8007b34:	0005883a 	mov	r2,zero
 8007b38:	003c7d06 	br	8006d30 <__alt_data_end+0xfc006d30>
 8007b3c:	b809883a 	mov	r4,r23
 8007b40:	b00b883a 	mov	r5,r22
 8007b44:	d9811e04 	addi	r6,sp,1144
 8007b48:	800dd680 	call	800dd68 <__sprint_r>
 8007b4c:	103a191e 	bne	r2,zero,80063b4 <__alt_data_end+0xfc0063b4>
 8007b50:	d8c12017 	ldw	r3,1152(sp)
 8007b54:	d8811f17 	ldw	r2,1148(sp)
 8007b58:	da000404 	addi	r8,sp,16
 8007b5c:	d9413317 	ldw	r5,1228(sp)
 8007b60:	d9013117 	ldw	r4,1220(sp)
 8007b64:	10800044 	addi	r2,r2,1
 8007b68:	28c7883a 	add	r3,r5,r3
 8007b6c:	41000015 	stw	r4,0(r8)
 8007b70:	41400115 	stw	r5,4(r8)
 8007b74:	d8c12015 	stw	r3,1152(sp)
 8007b78:	d8811f15 	stw	r2,1148(sp)
 8007b7c:	010001c4 	movi	r4,7
 8007b80:	20bb060e 	bge	r4,r2,800679c <__alt_data_end+0xfc00679c>
 8007b84:	003d6206 	br	8007110 <__alt_data_end+0xfc007110>
 8007b88:	01020074 	movhi	r4,2049
 8007b8c:	211b6084 	addi	r4,r4,28034
 8007b90:	d9013615 	stw	r4,1240(sp)
 8007b94:	003aa306 	br	8006624 <__alt_data_end+0xfc006624>
 8007b98:	d8812604 	addi	r2,sp,1176
 8007b9c:	d8800115 	stw	r2,4(sp)
 8007ba0:	d9413717 	ldw	r5,1244(sp)
 8007ba4:	d8812504 	addi	r2,sp,1172
 8007ba8:	d8800215 	stw	r2,8(sp)
 8007bac:	d8812104 	addi	r2,sp,1156
 8007bb0:	da400015 	stw	r9,0(sp)
 8007bb4:	d8800315 	stw	r2,12(sp)
 8007bb8:	b809883a 	mov	r4,r23
 8007bbc:	880d883a 	mov	r6,r17
 8007bc0:	01c000c4 	movi	r7,3
 8007bc4:	da013f15 	stw	r8,1276(sp)
 8007bc8:	da413e15 	stw	r9,1272(sp)
 8007bcc:	80083cc0 	call	80083cc <_dtoa_r>
 8007bd0:	da413e17 	ldw	r9,1272(sp)
 8007bd4:	da013f17 	ldw	r8,1276(sp)
 8007bd8:	d8813115 	stw	r2,1220(sp)
 8007bdc:	482b883a 	mov	r21,r9
 8007be0:	d8c13117 	ldw	r3,1220(sp)
 8007be4:	00801184 	movi	r2,70
 8007be8:	1d55883a 	add	r10,r3,r21
 8007bec:	98bebb1e 	bne	r19,r2,80076dc <__alt_data_end+0xfc0076dc>
 8007bf0:	19000007 	ldb	r4,0(r3)
 8007bf4:	00800c04 	movi	r2,48
 8007bf8:	2080dd26 	beq	r4,r2,8007f70 <___vfprintf_internal_r+0x201c>
 8007bfc:	d8c12617 	ldw	r3,1176(sp)
 8007c00:	50d5883a 	add	r10,r10,r3
 8007c04:	003eb506 	br	80076dc <__alt_data_end+0xfc0076dc>
 8007c08:	0023883a 	mov	r17,zero
 8007c0c:	003d9b06 	br	800727c <__alt_data_end+0xfc00727c>
 8007c10:	b809883a 	mov	r4,r23
 8007c14:	b00b883a 	mov	r5,r22
 8007c18:	d9811e04 	addi	r6,sp,1144
 8007c1c:	800dd680 	call	800dd68 <__sprint_r>
 8007c20:	1039e41e 	bne	r2,zero,80063b4 <__alt_data_end+0xfc0063b4>
 8007c24:	d8c12017 	ldw	r3,1152(sp)
 8007c28:	da000404 	addi	r8,sp,16
 8007c2c:	003d9206 	br	8007278 <__alt_data_end+0xfc007278>
 8007c30:	b809883a 	mov	r4,r23
 8007c34:	b00b883a 	mov	r5,r22
 8007c38:	d9811e04 	addi	r6,sp,1144
 8007c3c:	800dd680 	call	800dd68 <__sprint_r>
 8007c40:	1039dc1e 	bne	r2,zero,80063b4 <__alt_data_end+0xfc0063b4>
 8007c44:	d8812617 	ldw	r2,1176(sp)
 8007c48:	d8c12017 	ldw	r3,1152(sp)
 8007c4c:	da000404 	addi	r8,sp,16
 8007c50:	003dfb06 	br	8007440 <__alt_data_end+0xfc007440>
 8007c54:	01020074 	movhi	r4,2049
 8007c58:	211b5c84 	addi	r4,r4,28018
 8007c5c:	d9012c15 	stw	r4,1200(sp)
 8007c60:	d9012c17 	ldw	r4,1200(sp)
 8007c64:	1c07883a 	add	r3,r3,r16
 8007c68:	10800044 	addi	r2,r2,1
 8007c6c:	41000015 	stw	r4,0(r8)
 8007c70:	44000115 	stw	r16,4(r8)
 8007c74:	d8c12015 	stw	r3,1152(sp)
 8007c78:	d8811f15 	stw	r2,1148(sp)
 8007c7c:	010001c4 	movi	r4,7
 8007c80:	20bfae16 	blt	r4,r2,8007b3c <__alt_data_end+0xfc007b3c>
 8007c84:	42000204 	addi	r8,r8,8
 8007c88:	003fb406 	br	8007b5c <__alt_data_end+0xfc007b5c>
 8007c8c:	0021883a 	mov	r16,zero
 8007c90:	003dfd06 	br	8007488 <__alt_data_end+0xfc007488>
 8007c94:	01420074 	movhi	r5,2049
 8007c98:	295b6084 	addi	r5,r5,28034
 8007c9c:	d9413615 	stw	r5,1240(sp)
 8007ca0:	003ae306 	br	8006830 <__alt_data_end+0xfc006830>
 8007ca4:	b809883a 	mov	r4,r23
 8007ca8:	b00b883a 	mov	r5,r22
 8007cac:	d9811e04 	addi	r6,sp,1144
 8007cb0:	800dd680 	call	800dd68 <__sprint_r>
 8007cb4:	1039bf1e 	bne	r2,zero,80063b4 <__alt_data_end+0xfc0063b4>
 8007cb8:	d8812617 	ldw	r2,1176(sp)
 8007cbc:	d9413317 	ldw	r5,1228(sp)
 8007cc0:	d8c12017 	ldw	r3,1152(sp)
 8007cc4:	da000404 	addi	r8,sp,16
 8007cc8:	2885c83a 	sub	r2,r5,r2
 8007ccc:	003ded06 	br	8007484 <__alt_data_end+0xfc007484>
 8007cd0:	00800184 	movi	r2,6
 8007cd4:	1240012e 	bgeu	r2,r9,8007cdc <___vfprintf_internal_r+0x1d88>
 8007cd8:	1013883a 	mov	r9,r2
 8007cdc:	4823883a 	mov	r17,r9
 8007ce0:	4805883a 	mov	r2,r9
 8007ce4:	4800b216 	blt	r9,zero,8007fb0 <___vfprintf_internal_r+0x205c>
 8007ce8:	01420074 	movhi	r5,2049
 8007cec:	295b5204 	addi	r5,r5,27976
 8007cf0:	d8812b15 	stw	r2,1196(sp)
 8007cf4:	dc812d15 	stw	r18,1204(sp)
 8007cf8:	d8013215 	stw	zero,1224(sp)
 8007cfc:	d8013415 	stw	zero,1232(sp)
 8007d00:	d9413115 	stw	r5,1220(sp)
 8007d04:	0005883a 	mov	r2,zero
 8007d08:	003a1906 	br	8006570 <__alt_data_end+0xfc006570>
 8007d0c:	04c00b44 	movi	r19,45
 8007d10:	dcc12785 	stb	r19,1182(sp)
 8007d14:	003b0006 	br	8006918 <__alt_data_end+0xfc006918>
 8007d18:	d8c12d17 	ldw	r3,1204(sp)
 8007d1c:	d9012f17 	ldw	r4,1212(sp)
 8007d20:	18800017 	ldw	r2,0(r3)
 8007d24:	18c00104 	addi	r3,r3,4
 8007d28:	d8c12d15 	stw	r3,1204(sp)
 8007d2c:	11000015 	stw	r4,0(r2)
 8007d30:	0038c506 	br	8006048 <__alt_data_end+0xfc006048>
 8007d34:	01420074 	movhi	r5,2049
 8007d38:	295b4704 	addi	r5,r5,27932
 8007d3c:	d9413115 	stw	r5,1220(sp)
 8007d40:	003f2406 	br	80079d4 <__alt_data_end+0xfc0079d4>
 8007d44:	00800b44 	movi	r2,45
 8007d48:	d8812785 	stb	r2,1182(sp)
 8007d4c:	df012b15 	stw	fp,1196(sp)
 8007d50:	d8013215 	stw	zero,1224(sp)
 8007d54:	df012d17 	ldw	fp,1204(sp)
 8007d58:	00800b44 	movi	r2,45
 8007d5c:	dc812d15 	stw	r18,1204(sp)
 8007d60:	003a0006 	br	8006564 <__alt_data_end+0xfc006564>
 8007d64:	d8c12617 	ldw	r3,1176(sp)
 8007d68:	00bfff44 	movi	r2,-3
 8007d6c:	18800a16 	blt	r3,r2,8007d98 <___vfprintf_internal_r+0x1e44>
 8007d70:	48c00916 	blt	r9,r3,8007d98 <___vfprintf_internal_r+0x1e44>
 8007d74:	d8c13415 	stw	r3,1232(sp)
 8007d78:	040019c4 	movi	r16,103
 8007d7c:	003e7606 	br	8007758 <__alt_data_end+0xfc007758>
 8007d80:	01020074 	movhi	r4,2049
 8007d84:	211b5c84 	addi	r4,r4,28018
 8007d88:	d9012c15 	stw	r4,1200(sp)
 8007d8c:	003c8e06 	br	8006fc8 <__alt_data_end+0xfc006fc8>
 8007d90:	5005883a 	mov	r2,r10
 8007d94:	003e6506 	br	800772c <__alt_data_end+0xfc00772c>
 8007d98:	843fff84 	addi	r16,r16,-2
 8007d9c:	1d7fffc4 	addi	r21,r3,-1
 8007da0:	dd412615 	stw	r21,1176(sp)
 8007da4:	dc0122c5 	stb	r16,1163(sp)
 8007da8:	a8009216 	blt	r21,zero,8007ff4 <___vfprintf_internal_r+0x20a0>
 8007dac:	00800ac4 	movi	r2,43
 8007db0:	d8812305 	stb	r2,1164(sp)
 8007db4:	00800244 	movi	r2,9
 8007db8:	1540660e 	bge	r2,r21,8007f54 <___vfprintf_internal_r+0x2000>
 8007dbc:	dcc122c4 	addi	r19,sp,1163
 8007dc0:	dc012c15 	stw	r16,1200(sp)
 8007dc4:	4023883a 	mov	r17,r8
 8007dc8:	9821883a 	mov	r16,r19
 8007dcc:	a809883a 	mov	r4,r21
 8007dd0:	01400284 	movi	r5,10
 8007dd4:	80108300 	call	8010830 <__modsi3>
 8007dd8:	10800c04 	addi	r2,r2,48
 8007ddc:	843fffc4 	addi	r16,r16,-1
 8007de0:	a809883a 	mov	r4,r21
 8007de4:	01400284 	movi	r5,10
 8007de8:	80800005 	stb	r2,0(r16)
 8007dec:	80107dc0 	call	80107dc <__divsi3>
 8007df0:	01000244 	movi	r4,9
 8007df4:	102b883a 	mov	r21,r2
 8007df8:	20bff416 	blt	r4,r2,8007dcc <__alt_data_end+0xfc007dcc>
 8007dfc:	8811883a 	mov	r8,r17
 8007e00:	10800c04 	addi	r2,r2,48
 8007e04:	8023883a 	mov	r17,r16
 8007e08:	897fffc4 	addi	r5,r17,-1
 8007e0c:	88bfffc5 	stb	r2,-1(r17)
 8007e10:	dc012c17 	ldw	r16,1200(sp)
 8007e14:	2cc08a2e 	bgeu	r5,r19,8008040 <___vfprintf_internal_r+0x20ec>
 8007e18:	d9812384 	addi	r6,sp,1166
 8007e1c:	344dc83a 	sub	r6,r6,r17
 8007e20:	d9012344 	addi	r4,sp,1165
 8007e24:	998d883a 	add	r6,r19,r6
 8007e28:	00000106 	br	8007e30 <___vfprintf_internal_r+0x1edc>
 8007e2c:	28800003 	ldbu	r2,0(r5)
 8007e30:	20800005 	stb	r2,0(r4)
 8007e34:	21000044 	addi	r4,r4,1
 8007e38:	29400044 	addi	r5,r5,1
 8007e3c:	21bffb1e 	bne	r4,r6,8007e2c <__alt_data_end+0xfc007e2c>
 8007e40:	d8812304 	addi	r2,sp,1164
 8007e44:	1445c83a 	sub	r2,r2,r17
 8007e48:	d9412344 	addi	r5,sp,1165
 8007e4c:	2885883a 	add	r2,r5,r2
 8007e50:	14e7c83a 	sub	r19,r2,r19
 8007e54:	d8813317 	ldw	r2,1228(sp)
 8007e58:	d8c13317 	ldw	r3,1228(sp)
 8007e5c:	dcc13a15 	stw	r19,1256(sp)
 8007e60:	14e3883a 	add	r17,r2,r19
 8007e64:	00800044 	movi	r2,1
 8007e68:	10c0550e 	bge	r2,r3,8007fc0 <___vfprintf_internal_r+0x206c>
 8007e6c:	8c400044 	addi	r17,r17,1
 8007e70:	8839883a 	mov	fp,r17
 8007e74:	88005016 	blt	r17,zero,8007fb8 <___vfprintf_internal_r+0x2064>
 8007e78:	d8013415 	stw	zero,1232(sp)
 8007e7c:	003e3f06 	br	800777c <__alt_data_end+0xfc00777c>
 8007e80:	da412b15 	stw	r9,1196(sp)
 8007e84:	dcc12783 	ldbu	r19,1182(sp)
 8007e88:	4823883a 	mov	r17,r9
 8007e8c:	dc812d15 	stw	r18,1204(sp)
 8007e90:	d8013215 	stw	zero,1224(sp)
 8007e94:	d8013415 	stw	zero,1232(sp)
 8007e98:	0039ae06 	br	8006554 <__alt_data_end+0xfc006554>
 8007e9c:	483de91e 	bne	r9,zero,8007644 <__alt_data_end+0xfc007644>
 8007ea0:	8813883a 	mov	r9,r17
 8007ea4:	003de706 	br	8007644 <__alt_data_end+0xfc007644>
 8007ea8:	b809883a 	mov	r4,r23
 8007eac:	b00b883a 	mov	r5,r22
 8007eb0:	d9811e04 	addi	r6,sp,1144
 8007eb4:	800dd680 	call	800dd68 <__sprint_r>
 8007eb8:	10393e1e 	bne	r2,zero,80063b4 <__alt_data_end+0xfc0063b4>
 8007ebc:	dc012617 	ldw	r16,1176(sp)
 8007ec0:	d8c12017 	ldw	r3,1152(sp)
 8007ec4:	d8811f17 	ldw	r2,1148(sp)
 8007ec8:	da000404 	addi	r8,sp,16
 8007ecc:	003ea006 	br	8007950 <__alt_data_end+0xfc007950>
 8007ed0:	00c00b44 	movi	r3,45
 8007ed4:	2460003c 	xorhi	r17,r4,32768
 8007ed8:	d8c12b05 	stb	r3,1196(sp)
 8007edc:	003ddf06 	br	800765c <__alt_data_end+0xfc00765c>
 8007ee0:	02400184 	movi	r9,6
 8007ee4:	003dd706 	br	8007644 <__alt_data_end+0xfc007644>
 8007ee8:	4d400044 	addi	r21,r9,1
 8007eec:	003de206 	br	8007678 <__alt_data_end+0xfc007678>
 8007ef0:	d8c13417 	ldw	r3,1232(sp)
 8007ef4:	00c0490e 	bge	zero,r3,800801c <___vfprintf_internal_r+0x20c8>
 8007ef8:	04400044 	movi	r17,1
 8007efc:	d9013317 	ldw	r4,1228(sp)
 8007f00:	8923883a 	add	r17,r17,r4
 8007f04:	8839883a 	mov	fp,r17
 8007f08:	883e1c0e 	bge	r17,zero,800777c <__alt_data_end+0xfc00777c>
 8007f0c:	0039883a 	mov	fp,zero
 8007f10:	003e1a06 	br	800777c <__alt_data_end+0xfc00777c>
 8007f14:	00c03b0e 	bge	zero,r3,8008004 <___vfprintf_internal_r+0x20b0>
 8007f18:	4800021e 	bne	r9,zero,8007f24 <___vfprintf_internal_r+0x1fd0>
 8007f1c:	e080004c 	andi	r2,fp,1
 8007f20:	10000626 	beq	r2,zero,8007f3c <___vfprintf_internal_r+0x1fe8>
 8007f24:	d8c13417 	ldw	r3,1232(sp)
 8007f28:	4a400044 	addi	r9,r9,1
 8007f2c:	1a63883a 	add	r17,r3,r9
 8007f30:	8839883a 	mov	fp,r17
 8007f34:	883e110e 	bge	r17,zero,800777c <__alt_data_end+0xfc00777c>
 8007f38:	003ff406 	br	8007f0c <__alt_data_end+0xfc007f0c>
 8007f3c:	1839883a 	mov	fp,r3
 8007f40:	18004116 	blt	r3,zero,8008048 <___vfprintf_internal_r+0x20f4>
 8007f44:	dc413417 	ldw	r17,1232(sp)
 8007f48:	003e0c06 	br	800777c <__alt_data_end+0xfc00777c>
 8007f4c:	d8812117 	ldw	r2,1156(sp)
 8007f50:	003df606 	br	800772c <__alt_data_end+0xfc00772c>
 8007f54:	00800c04 	movi	r2,48
 8007f58:	a8c00c04 	addi	r3,r21,48
 8007f5c:	d8812345 	stb	r2,1165(sp)
 8007f60:	d8c12385 	stb	r3,1166(sp)
 8007f64:	d88123c4 	addi	r2,sp,1167
 8007f68:	dcc122c4 	addi	r19,sp,1163
 8007f6c:	003fb806 	br	8007e50 <__alt_data_end+0xfc007e50>
 8007f70:	d9013717 	ldw	r4,1244(sp)
 8007f74:	880b883a 	mov	r5,r17
 8007f78:	000d883a 	mov	r6,zero
 8007f7c:	000f883a 	mov	r7,zero
 8007f80:	da013f15 	stw	r8,1276(sp)
 8007f84:	da413e15 	stw	r9,1272(sp)
 8007f88:	da813d15 	stw	r10,1268(sp)
 8007f8c:	8011ab80 	call	8011ab8 <__eqdf2>
 8007f90:	da013f17 	ldw	r8,1276(sp)
 8007f94:	da413e17 	ldw	r9,1272(sp)
 8007f98:	da813d17 	ldw	r10,1268(sp)
 8007f9c:	103f1726 	beq	r2,zero,8007bfc <__alt_data_end+0xfc007bfc>
 8007fa0:	00800044 	movi	r2,1
 8007fa4:	1547c83a 	sub	r3,r2,r21
 8007fa8:	d8c12615 	stw	r3,1176(sp)
 8007fac:	003f1406 	br	8007c00 <__alt_data_end+0xfc007c00>
 8007fb0:	0005883a 	mov	r2,zero
 8007fb4:	003f4c06 	br	8007ce8 <__alt_data_end+0xfc007ce8>
 8007fb8:	0039883a 	mov	fp,zero
 8007fbc:	003fae06 	br	8007e78 <__alt_data_end+0xfc007e78>
 8007fc0:	e084703a 	and	r2,fp,r2
 8007fc4:	103faa26 	beq	r2,zero,8007e70 <__alt_data_end+0xfc007e70>
 8007fc8:	003fa806 	br	8007e6c <__alt_data_end+0xfc007e6c>
 8007fcc:	d9412d17 	ldw	r5,1204(sp)
 8007fd0:	2a400017 	ldw	r9,0(r5)
 8007fd4:	28c00104 	addi	r3,r5,4
 8007fd8:	d8c12d15 	stw	r3,1204(sp)
 8007fdc:	483ebc0e 	bge	r9,zero,8007ad0 <__alt_data_end+0xfc007ad0>
 8007fe0:	027fffc4 	movi	r9,-1
 8007fe4:	e4000047 	ldb	r16,1(fp)
 8007fe8:	00384206 	br	80060f4 <__alt_data_end+0xfc0060f4>
 8007fec:	043fffc4 	movi	r16,-1
 8007ff0:	0038ce06 	br	800632c <__alt_data_end+0xfc00632c>
 8007ff4:	00800b44 	movi	r2,45
 8007ff8:	056bc83a 	sub	r21,zero,r21
 8007ffc:	d8812305 	stb	r2,1164(sp)
 8008000:	003f6c06 	br	8007db4 <__alt_data_end+0xfc007db4>
 8008004:	4800081e 	bne	r9,zero,8008028 <___vfprintf_internal_r+0x20d4>
 8008008:	e080004c 	andi	r2,fp,1
 800800c:	1000061e 	bne	r2,zero,8008028 <___vfprintf_internal_r+0x20d4>
 8008010:	07000044 	movi	fp,1
 8008014:	e023883a 	mov	r17,fp
 8008018:	003dd806 	br	800777c <__alt_data_end+0xfc00777c>
 800801c:	04400084 	movi	r17,2
 8008020:	88e3c83a 	sub	r17,r17,r3
 8008024:	003fb506 	br	8007efc <__alt_data_end+0xfc007efc>
 8008028:	4c400084 	addi	r17,r9,2
 800802c:	8839883a 	mov	fp,r17
 8008030:	883dd20e 	bge	r17,zero,800777c <__alt_data_end+0xfc00777c>
 8008034:	003fb506 	br	8007f0c <__alt_data_end+0xfc007f0c>
 8008038:	d8c12617 	ldw	r3,1176(sp)
 800803c:	003f5706 	br	8007d9c <__alt_data_end+0xfc007d9c>
 8008040:	d8812344 	addi	r2,sp,1165
 8008044:	003f8206 	br	8007e50 <__alt_data_end+0xfc007e50>
 8008048:	0039883a 	mov	fp,zero
 800804c:	003fbd06 	br	8007f44 <__alt_data_end+0xfc007f44>

08008050 <__vfprintf_internal>:
 8008050:	2007883a 	mov	r3,r4
 8008054:	010200b4 	movhi	r4,2050
 8008058:	21232e04 	addi	r4,r4,-29512
 800805c:	21000017 	ldw	r4,0(r4)
 8008060:	2805883a 	mov	r2,r5
 8008064:	300f883a 	mov	r7,r6
 8008068:	180b883a 	mov	r5,r3
 800806c:	100d883a 	mov	r6,r2
 8008070:	8005f541 	jmpi	8005f54 <___vfprintf_internal_r>

08008074 <__swsetup_r>:
 8008074:	008200b4 	movhi	r2,2050
 8008078:	defffd04 	addi	sp,sp,-12
 800807c:	10a32e04 	addi	r2,r2,-29512
 8008080:	dc400115 	stw	r17,4(sp)
 8008084:	2023883a 	mov	r17,r4
 8008088:	11000017 	ldw	r4,0(r2)
 800808c:	dc000015 	stw	r16,0(sp)
 8008090:	dfc00215 	stw	ra,8(sp)
 8008094:	2821883a 	mov	r16,r5
 8008098:	20000226 	beq	r4,zero,80080a4 <__swsetup_r+0x30>
 800809c:	20c00e17 	ldw	r3,56(r4)
 80080a0:	18002e26 	beq	r3,zero,800815c <__swsetup_r+0xe8>
 80080a4:	8080030b 	ldhu	r2,12(r16)
 80080a8:	10c0020c 	andi	r3,r2,8
 80080ac:	100d883a 	mov	r6,r2
 80080b0:	18000f26 	beq	r3,zero,80080f0 <__swsetup_r+0x7c>
 80080b4:	80c00417 	ldw	r3,16(r16)
 80080b8:	18001526 	beq	r3,zero,8008110 <__swsetup_r+0x9c>
 80080bc:	1100004c 	andi	r4,r2,1
 80080c0:	20001c1e 	bne	r4,zero,8008134 <__swsetup_r+0xc0>
 80080c4:	1080008c 	andi	r2,r2,2
 80080c8:	1000261e 	bne	r2,zero,8008164 <__swsetup_r+0xf0>
 80080cc:	80800517 	ldw	r2,20(r16)
 80080d0:	80800215 	stw	r2,8(r16)
 80080d4:	18001c26 	beq	r3,zero,8008148 <__swsetup_r+0xd4>
 80080d8:	0005883a 	mov	r2,zero
 80080dc:	dfc00217 	ldw	ra,8(sp)
 80080e0:	dc400117 	ldw	r17,4(sp)
 80080e4:	dc000017 	ldw	r16,0(sp)
 80080e8:	dec00304 	addi	sp,sp,12
 80080ec:	f800283a 	ret
 80080f0:	3080040c 	andi	r2,r6,16
 80080f4:	10001726 	beq	r2,zero,8008154 <__swsetup_r+0xe0>
 80080f8:	3080010c 	andi	r2,r6,4
 80080fc:	10001b1e 	bne	r2,zero,800816c <__swsetup_r+0xf8>
 8008100:	80c00417 	ldw	r3,16(r16)
 8008104:	30800214 	ori	r2,r6,8
 8008108:	8080030d 	sth	r2,12(r16)
 800810c:	183feb1e 	bne	r3,zero,80080bc <__alt_data_end+0xfc0080bc>
 8008110:	1140a00c 	andi	r5,r2,640
 8008114:	01008004 	movi	r4,512
 8008118:	293fe826 	beq	r5,r4,80080bc <__alt_data_end+0xfc0080bc>
 800811c:	8809883a 	mov	r4,r17
 8008120:	800b883a 	mov	r5,r16
 8008124:	800ac080 	call	800ac08 <__smakebuf_r>
 8008128:	8080030b 	ldhu	r2,12(r16)
 800812c:	80c00417 	ldw	r3,16(r16)
 8008130:	003fe206 	br	80080bc <__alt_data_end+0xfc0080bc>
 8008134:	80800517 	ldw	r2,20(r16)
 8008138:	80000215 	stw	zero,8(r16)
 800813c:	0085c83a 	sub	r2,zero,r2
 8008140:	80800615 	stw	r2,24(r16)
 8008144:	183fe41e 	bne	r3,zero,80080d8 <__alt_data_end+0xfc0080d8>
 8008148:	8080030b 	ldhu	r2,12(r16)
 800814c:	1080200c 	andi	r2,r2,128
 8008150:	103fe226 	beq	r2,zero,80080dc <__alt_data_end+0xfc0080dc>
 8008154:	00bfffc4 	movi	r2,-1
 8008158:	003fe006 	br	80080dc <__alt_data_end+0xfc0080dc>
 800815c:	800a0b00 	call	800a0b0 <__sinit>
 8008160:	003fd006 	br	80080a4 <__alt_data_end+0xfc0080a4>
 8008164:	0005883a 	mov	r2,zero
 8008168:	003fd906 	br	80080d0 <__alt_data_end+0xfc0080d0>
 800816c:	81400c17 	ldw	r5,48(r16)
 8008170:	28000626 	beq	r5,zero,800818c <__swsetup_r+0x118>
 8008174:	80801004 	addi	r2,r16,64
 8008178:	28800326 	beq	r5,r2,8008188 <__swsetup_r+0x114>
 800817c:	8809883a 	mov	r4,r17
 8008180:	800a2240 	call	800a224 <_free_r>
 8008184:	8180030b 	ldhu	r6,12(r16)
 8008188:	80000c15 	stw	zero,48(r16)
 800818c:	80c00417 	ldw	r3,16(r16)
 8008190:	00bff6c4 	movi	r2,-37
 8008194:	118c703a 	and	r6,r2,r6
 8008198:	80000115 	stw	zero,4(r16)
 800819c:	80c00015 	stw	r3,0(r16)
 80081a0:	003fd806 	br	8008104 <__alt_data_end+0xfc008104>

080081a4 <quorem>:
 80081a4:	defff204 	addi	sp,sp,-56
 80081a8:	ddc00b15 	stw	r23,44(sp)
 80081ac:	20800417 	ldw	r2,16(r4)
 80081b0:	2dc00417 	ldw	r23,16(r5)
 80081b4:	dfc00d15 	stw	ra,52(sp)
 80081b8:	df000c15 	stw	fp,48(sp)
 80081bc:	dd800a15 	stw	r22,40(sp)
 80081c0:	dd400915 	stw	r21,36(sp)
 80081c4:	dd000815 	stw	r20,32(sp)
 80081c8:	dcc00715 	stw	r19,28(sp)
 80081cc:	dc800615 	stw	r18,24(sp)
 80081d0:	dc400515 	stw	r17,20(sp)
 80081d4:	dc000415 	stw	r16,16(sp)
 80081d8:	15c07a16 	blt	r2,r23,80083c4 <quorem+0x220>
 80081dc:	bdffffc4 	addi	r23,r23,-1
 80081e0:	bde9883a 	add	r20,r23,r23
 80081e4:	28c00504 	addi	r3,r5,20
 80081e8:	a529883a 	add	r20,r20,r20
 80081ec:	1d39883a 	add	fp,r3,r20
 80081f0:	24c00504 	addi	r19,r4,20
 80081f4:	d9400215 	stw	r5,8(sp)
 80081f8:	9d29883a 	add	r20,r19,r20
 80081fc:	e1400017 	ldw	r5,0(fp)
 8008200:	d9000015 	stw	r4,0(sp)
 8008204:	a1000017 	ldw	r4,0(r20)
 8008208:	29400044 	addi	r5,r5,1
 800820c:	d8c00115 	stw	r3,4(sp)
 8008210:	dd000315 	stw	r20,12(sp)
 8008214:	801088c0 	call	801088c <__udivsi3>
 8008218:	1025883a 	mov	r18,r2
 800821c:	10003026 	beq	r2,zero,80082e0 <quorem+0x13c>
 8008220:	dc400117 	ldw	r17,4(sp)
 8008224:	9829883a 	mov	r20,r19
 8008228:	002d883a 	mov	r22,zero
 800822c:	0021883a 	mov	r16,zero
 8008230:	8d400017 	ldw	r21,0(r17)
 8008234:	900b883a 	mov	r5,r18
 8008238:	8c400104 	addi	r17,r17,4
 800823c:	a93fffcc 	andi	r4,r21,65535
 8008240:	80027f80 	call	80027f8 <__mulsi3>
 8008244:	a808d43a 	srli	r4,r21,16
 8008248:	900b883a 	mov	r5,r18
 800824c:	b0ad883a 	add	r22,r22,r2
 8008250:	80027f80 	call	80027f8 <__mulsi3>
 8008254:	a1000017 	ldw	r4,0(r20)
 8008258:	b00cd43a 	srli	r6,r22,16
 800825c:	b0ffffcc 	andi	r3,r22,65535
 8008260:	217fffcc 	andi	r5,r4,65535
 8008264:	2c21883a 	add	r16,r5,r16
 8008268:	80c7c83a 	sub	r3,r16,r3
 800826c:	2008d43a 	srli	r4,r4,16
 8008270:	3085883a 	add	r2,r6,r2
 8008274:	1821d43a 	srai	r16,r3,16
 8008278:	117fffcc 	andi	r5,r2,65535
 800827c:	2149c83a 	sub	r4,r4,r5
 8008280:	2421883a 	add	r16,r4,r16
 8008284:	8008943a 	slli	r4,r16,16
 8008288:	18ffffcc 	andi	r3,r3,65535
 800828c:	102cd43a 	srli	r22,r2,16
 8008290:	20c8b03a 	or	r4,r4,r3
 8008294:	a1000015 	stw	r4,0(r20)
 8008298:	8021d43a 	srai	r16,r16,16
 800829c:	a5000104 	addi	r20,r20,4
 80082a0:	e47fe32e 	bgeu	fp,r17,8008230 <__alt_data_end+0xfc008230>
 80082a4:	d8c00317 	ldw	r3,12(sp)
 80082a8:	18800017 	ldw	r2,0(r3)
 80082ac:	10000c1e 	bne	r2,zero,80082e0 <quorem+0x13c>
 80082b0:	18bfff04 	addi	r2,r3,-4
 80082b4:	9880082e 	bgeu	r19,r2,80082d8 <quorem+0x134>
 80082b8:	18ffff17 	ldw	r3,-4(r3)
 80082bc:	18000326 	beq	r3,zero,80082cc <quorem+0x128>
 80082c0:	00000506 	br	80082d8 <quorem+0x134>
 80082c4:	10c00017 	ldw	r3,0(r2)
 80082c8:	1800031e 	bne	r3,zero,80082d8 <quorem+0x134>
 80082cc:	10bfff04 	addi	r2,r2,-4
 80082d0:	bdffffc4 	addi	r23,r23,-1
 80082d4:	98bffb36 	bltu	r19,r2,80082c4 <__alt_data_end+0xfc0082c4>
 80082d8:	d8c00017 	ldw	r3,0(sp)
 80082dc:	1dc00415 	stw	r23,16(r3)
 80082e0:	d9000017 	ldw	r4,0(sp)
 80082e4:	d9400217 	ldw	r5,8(sp)
 80082e8:	800bab80 	call	800bab8 <__mcmp>
 80082ec:	10002816 	blt	r2,zero,8008390 <quorem+0x1ec>
 80082f0:	dc400117 	ldw	r17,4(sp)
 80082f4:	94800044 	addi	r18,r18,1
 80082f8:	980d883a 	mov	r6,r19
 80082fc:	0007883a 	mov	r3,zero
 8008300:	31000017 	ldw	r4,0(r6)
 8008304:	89400017 	ldw	r5,0(r17)
 8008308:	31800104 	addi	r6,r6,4
 800830c:	20bfffcc 	andi	r2,r4,65535
 8008310:	10c7883a 	add	r3,r2,r3
 8008314:	28bfffcc 	andi	r2,r5,65535
 8008318:	1885c83a 	sub	r2,r3,r2
 800831c:	280ad43a 	srli	r5,r5,16
 8008320:	2008d43a 	srli	r4,r4,16
 8008324:	1007d43a 	srai	r3,r2,16
 8008328:	10bfffcc 	andi	r2,r2,65535
 800832c:	2149c83a 	sub	r4,r4,r5
 8008330:	20c9883a 	add	r4,r4,r3
 8008334:	200a943a 	slli	r5,r4,16
 8008338:	8c400104 	addi	r17,r17,4
 800833c:	2007d43a 	srai	r3,r4,16
 8008340:	2884b03a 	or	r2,r5,r2
 8008344:	30bfff15 	stw	r2,-4(r6)
 8008348:	e47fed2e 	bgeu	fp,r17,8008300 <__alt_data_end+0xfc008300>
 800834c:	bdc5883a 	add	r2,r23,r23
 8008350:	1085883a 	add	r2,r2,r2
 8008354:	9887883a 	add	r3,r19,r2
 8008358:	18800017 	ldw	r2,0(r3)
 800835c:	10000c1e 	bne	r2,zero,8008390 <quorem+0x1ec>
 8008360:	18bfff04 	addi	r2,r3,-4
 8008364:	9880082e 	bgeu	r19,r2,8008388 <quorem+0x1e4>
 8008368:	18ffff17 	ldw	r3,-4(r3)
 800836c:	18000326 	beq	r3,zero,800837c <quorem+0x1d8>
 8008370:	00000506 	br	8008388 <quorem+0x1e4>
 8008374:	10c00017 	ldw	r3,0(r2)
 8008378:	1800031e 	bne	r3,zero,8008388 <quorem+0x1e4>
 800837c:	10bfff04 	addi	r2,r2,-4
 8008380:	bdffffc4 	addi	r23,r23,-1
 8008384:	98bffb36 	bltu	r19,r2,8008374 <__alt_data_end+0xfc008374>
 8008388:	d8c00017 	ldw	r3,0(sp)
 800838c:	1dc00415 	stw	r23,16(r3)
 8008390:	9005883a 	mov	r2,r18
 8008394:	dfc00d17 	ldw	ra,52(sp)
 8008398:	df000c17 	ldw	fp,48(sp)
 800839c:	ddc00b17 	ldw	r23,44(sp)
 80083a0:	dd800a17 	ldw	r22,40(sp)
 80083a4:	dd400917 	ldw	r21,36(sp)
 80083a8:	dd000817 	ldw	r20,32(sp)
 80083ac:	dcc00717 	ldw	r19,28(sp)
 80083b0:	dc800617 	ldw	r18,24(sp)
 80083b4:	dc400517 	ldw	r17,20(sp)
 80083b8:	dc000417 	ldw	r16,16(sp)
 80083bc:	dec00e04 	addi	sp,sp,56
 80083c0:	f800283a 	ret
 80083c4:	0005883a 	mov	r2,zero
 80083c8:	003ff206 	br	8008394 <__alt_data_end+0xfc008394>

080083cc <_dtoa_r>:
 80083cc:	20801017 	ldw	r2,64(r4)
 80083d0:	deffde04 	addi	sp,sp,-136
 80083d4:	dd401d15 	stw	r21,116(sp)
 80083d8:	dcc01b15 	stw	r19,108(sp)
 80083dc:	dc801a15 	stw	r18,104(sp)
 80083e0:	dc401915 	stw	r17,100(sp)
 80083e4:	dc001815 	stw	r16,96(sp)
 80083e8:	dfc02115 	stw	ra,132(sp)
 80083ec:	df002015 	stw	fp,128(sp)
 80083f0:	ddc01f15 	stw	r23,124(sp)
 80083f4:	dd801e15 	stw	r22,120(sp)
 80083f8:	dd001c15 	stw	r20,112(sp)
 80083fc:	d9c00315 	stw	r7,12(sp)
 8008400:	2021883a 	mov	r16,r4
 8008404:	302b883a 	mov	r21,r6
 8008408:	2825883a 	mov	r18,r5
 800840c:	dc402417 	ldw	r17,144(sp)
 8008410:	3027883a 	mov	r19,r6
 8008414:	10000826 	beq	r2,zero,8008438 <_dtoa_r+0x6c>
 8008418:	21801117 	ldw	r6,68(r4)
 800841c:	00c00044 	movi	r3,1
 8008420:	100b883a 	mov	r5,r2
 8008424:	1986983a 	sll	r3,r3,r6
 8008428:	11800115 	stw	r6,4(r2)
 800842c:	10c00215 	stw	r3,8(r2)
 8008430:	800b1e40 	call	800b1e4 <_Bfree>
 8008434:	80001015 	stw	zero,64(r16)
 8008438:	a8002d16 	blt	r21,zero,80084f0 <_dtoa_r+0x124>
 800843c:	88000015 	stw	zero,0(r17)
 8008440:	a8dffc2c 	andhi	r3,r21,32752
 8008444:	009ffc34 	movhi	r2,32752
 8008448:	18801b26 	beq	r3,r2,80084b8 <_dtoa_r+0xec>
 800844c:	9009883a 	mov	r4,r18
 8008450:	980b883a 	mov	r5,r19
 8008454:	000d883a 	mov	r6,zero
 8008458:	000f883a 	mov	r7,zero
 800845c:	8011ab80 	call	8011ab8 <__eqdf2>
 8008460:	10002a1e 	bne	r2,zero,800850c <_dtoa_r+0x140>
 8008464:	d8c02317 	ldw	r3,140(sp)
 8008468:	d9002517 	ldw	r4,148(sp)
 800846c:	00800044 	movi	r2,1
 8008470:	18800015 	stw	r2,0(r3)
 8008474:	2001a226 	beq	r4,zero,8008b00 <_dtoa_r+0x734>
 8008478:	00820074 	movhi	r2,2049
 800847c:	109b5444 	addi	r2,r2,27985
 8008480:	20800015 	stw	r2,0(r4)
 8008484:	10bfffc4 	addi	r2,r2,-1
 8008488:	dfc02117 	ldw	ra,132(sp)
 800848c:	df002017 	ldw	fp,128(sp)
 8008490:	ddc01f17 	ldw	r23,124(sp)
 8008494:	dd801e17 	ldw	r22,120(sp)
 8008498:	dd401d17 	ldw	r21,116(sp)
 800849c:	dd001c17 	ldw	r20,112(sp)
 80084a0:	dcc01b17 	ldw	r19,108(sp)
 80084a4:	dc801a17 	ldw	r18,104(sp)
 80084a8:	dc401917 	ldw	r17,100(sp)
 80084ac:	dc001817 	ldw	r16,96(sp)
 80084b0:	dec02204 	addi	sp,sp,136
 80084b4:	f800283a 	ret
 80084b8:	d8c02317 	ldw	r3,140(sp)
 80084bc:	0089c3c4 	movi	r2,9999
 80084c0:	18800015 	stw	r2,0(r3)
 80084c4:	90017c26 	beq	r18,zero,8008ab8 <_dtoa_r+0x6ec>
 80084c8:	00820074 	movhi	r2,2049
 80084cc:	109b6804 	addi	r2,r2,28064
 80084d0:	d9002517 	ldw	r4,148(sp)
 80084d4:	203fec26 	beq	r4,zero,8008488 <__alt_data_end+0xfc008488>
 80084d8:	10c000c7 	ldb	r3,3(r2)
 80084dc:	18017d1e 	bne	r3,zero,8008ad4 <_dtoa_r+0x708>
 80084e0:	10c000c4 	addi	r3,r2,3
 80084e4:	d9802517 	ldw	r6,148(sp)
 80084e8:	30c00015 	stw	r3,0(r6)
 80084ec:	003fe606 	br	8008488 <__alt_data_end+0xfc008488>
 80084f0:	04e00034 	movhi	r19,32768
 80084f4:	9cffffc4 	addi	r19,r19,-1
 80084f8:	00800044 	movi	r2,1
 80084fc:	ace6703a 	and	r19,r21,r19
 8008500:	88800015 	stw	r2,0(r17)
 8008504:	982b883a 	mov	r21,r19
 8008508:	003fcd06 	br	8008440 <__alt_data_end+0xfc008440>
 800850c:	d8800204 	addi	r2,sp,8
 8008510:	a822d53a 	srli	r17,r21,20
 8008514:	d8800015 	stw	r2,0(sp)
 8008518:	8009883a 	mov	r4,r16
 800851c:	900b883a 	mov	r5,r18
 8008520:	980d883a 	mov	r6,r19
 8008524:	d9c00104 	addi	r7,sp,4
 8008528:	800be2c0 	call	800be2c <__d2b>
 800852c:	1039883a 	mov	fp,r2
 8008530:	88016a1e 	bne	r17,zero,8008adc <_dtoa_r+0x710>
 8008534:	dd000217 	ldw	r20,8(sp)
 8008538:	dc400117 	ldw	r17,4(sp)
 800853c:	00befbc4 	movi	r2,-1041
 8008540:	a463883a 	add	r17,r20,r17
 8008544:	8882ea16 	blt	r17,r2,80090f0 <_dtoa_r+0xd24>
 8008548:	00bf0384 	movi	r2,-1010
 800854c:	1445c83a 	sub	r2,r2,r17
 8008550:	89010484 	addi	r4,r17,1042
 8008554:	a8aa983a 	sll	r21,r21,r2
 8008558:	9108d83a 	srl	r4,r18,r4
 800855c:	a908b03a 	or	r4,r21,r4
 8008560:	8012f900 	call	8012f90 <__floatunsidf>
 8008564:	017f8434 	movhi	r5,65040
 8008568:	01800044 	movi	r6,1
 800856c:	1009883a 	mov	r4,r2
 8008570:	194b883a 	add	r5,r3,r5
 8008574:	8c7fffc4 	addi	r17,r17,-1
 8008578:	d9800f15 	stw	r6,60(sp)
 800857c:	000d883a 	mov	r6,zero
 8008580:	01cffe34 	movhi	r7,16376
 8008584:	80125680 	call	8012568 <__subdf3>
 8008588:	0198dbf4 	movhi	r6,25455
 800858c:	01cff4f4 	movhi	r7,16339
 8008590:	1009883a 	mov	r4,r2
 8008594:	180b883a 	mov	r5,r3
 8008598:	3190d844 	addi	r6,r6,17249
 800859c:	39e1e9c4 	addi	r7,r7,-30809
 80085a0:	8011cfc0 	call	8011cfc <__muldf3>
 80085a4:	01a2d874 	movhi	r6,35681
 80085a8:	01cff1f4 	movhi	r7,16327
 80085ac:	180b883a 	mov	r5,r3
 80085b0:	31b22cc4 	addi	r6,r6,-14157
 80085b4:	39e28a04 	addi	r7,r7,-30168
 80085b8:	1009883a 	mov	r4,r2
 80085bc:	801089c0 	call	801089c <__adddf3>
 80085c0:	8809883a 	mov	r4,r17
 80085c4:	102d883a 	mov	r22,r2
 80085c8:	182b883a 	mov	r21,r3
 80085cc:	8012ec00 	call	8012ec0 <__floatsidf>
 80085d0:	019427f4 	movhi	r6,20639
 80085d4:	01cff4f4 	movhi	r7,16339
 80085d8:	1009883a 	mov	r4,r2
 80085dc:	180b883a 	mov	r5,r3
 80085e0:	319e7ec4 	addi	r6,r6,31227
 80085e4:	39d104c4 	addi	r7,r7,17427
 80085e8:	8011cfc0 	call	8011cfc <__muldf3>
 80085ec:	b009883a 	mov	r4,r22
 80085f0:	a80b883a 	mov	r5,r21
 80085f4:	100d883a 	mov	r6,r2
 80085f8:	180f883a 	mov	r7,r3
 80085fc:	801089c0 	call	801089c <__adddf3>
 8008600:	1009883a 	mov	r4,r2
 8008604:	180b883a 	mov	r5,r3
 8008608:	102d883a 	mov	r22,r2
 800860c:	182b883a 	mov	r21,r3
 8008610:	8012e380 	call	8012e38 <__fixdfsi>
 8008614:	b009883a 	mov	r4,r22
 8008618:	a80b883a 	mov	r5,r21
 800861c:	000d883a 	mov	r6,zero
 8008620:	000f883a 	mov	r7,zero
 8008624:	d8800515 	stw	r2,20(sp)
 8008628:	8011c1c0 	call	8011c1c <__ledf2>
 800862c:	10023116 	blt	r2,zero,8008ef4 <_dtoa_r+0xb28>
 8008630:	d8c00517 	ldw	r3,20(sp)
 8008634:	00800584 	movi	r2,22
 8008638:	10c21f36 	bltu	r2,r3,8008eb8 <_dtoa_r+0xaec>
 800863c:	180490fa 	slli	r2,r3,3
 8008640:	00c20074 	movhi	r3,2049
 8008644:	18db8404 	addi	r3,r3,28176
 8008648:	1885883a 	add	r2,r3,r2
 800864c:	11000017 	ldw	r4,0(r2)
 8008650:	11400117 	ldw	r5,4(r2)
 8008654:	900d883a 	mov	r6,r18
 8008658:	980f883a 	mov	r7,r19
 800865c:	8011b3c0 	call	8011b3c <__gedf2>
 8008660:	0082a70e 	bge	zero,r2,8009100 <_dtoa_r+0xd34>
 8008664:	d9000517 	ldw	r4,20(sp)
 8008668:	d8000c15 	stw	zero,48(sp)
 800866c:	213fffc4 	addi	r4,r4,-1
 8008670:	d9000515 	stw	r4,20(sp)
 8008674:	a463c83a 	sub	r17,r20,r17
 8008678:	8dbfffc4 	addi	r22,r17,-1
 800867c:	b0021916 	blt	r22,zero,8008ee4 <_dtoa_r+0xb18>
 8008680:	d8000815 	stw	zero,32(sp)
 8008684:	d8800517 	ldw	r2,20(sp)
 8008688:	10020e16 	blt	r2,zero,8008ec4 <_dtoa_r+0xaf8>
 800868c:	b0ad883a 	add	r22,r22,r2
 8008690:	d8800a15 	stw	r2,40(sp)
 8008694:	d8000915 	stw	zero,36(sp)
 8008698:	d8c00317 	ldw	r3,12(sp)
 800869c:	00800244 	movi	r2,9
 80086a0:	10c11a36 	bltu	r2,r3,8008b0c <_dtoa_r+0x740>
 80086a4:	00800144 	movi	r2,5
 80086a8:	10c4fc0e 	bge	r2,r3,8009a9c <_dtoa_r+0x16d0>
 80086ac:	18ffff04 	addi	r3,r3,-4
 80086b0:	d8c00315 	stw	r3,12(sp)
 80086b4:	0029883a 	mov	r20,zero
 80086b8:	d9800317 	ldw	r6,12(sp)
 80086bc:	008000c4 	movi	r2,3
 80086c0:	3083bd26 	beq	r6,r2,80095b8 <_dtoa_r+0x11ec>
 80086c4:	1183670e 	bge	r2,r6,8009464 <_dtoa_r+0x1098>
 80086c8:	d8c00317 	ldw	r3,12(sp)
 80086cc:	00800104 	movi	r2,4
 80086d0:	1882e726 	beq	r3,r2,8009270 <_dtoa_r+0xea4>
 80086d4:	00800144 	movi	r2,5
 80086d8:	1884f21e 	bne	r3,r2,8009aa4 <_dtoa_r+0x16d8>
 80086dc:	00800044 	movi	r2,1
 80086e0:	d8800b15 	stw	r2,44(sp)
 80086e4:	d8c02217 	ldw	r3,136(sp)
 80086e8:	d9000517 	ldw	r4,20(sp)
 80086ec:	1907883a 	add	r3,r3,r4
 80086f0:	19800044 	addi	r6,r3,1
 80086f4:	d8c00d15 	stw	r3,52(sp)
 80086f8:	d9800615 	stw	r6,24(sp)
 80086fc:	0183c30e 	bge	zero,r6,800960c <_dtoa_r+0x1240>
 8008700:	d9800617 	ldw	r6,24(sp)
 8008704:	3023883a 	mov	r17,r6
 8008708:	80001115 	stw	zero,68(r16)
 800870c:	008005c4 	movi	r2,23
 8008710:	1184f62e 	bgeu	r2,r6,8009aec <_dtoa_r+0x1720>
 8008714:	00c00044 	movi	r3,1
 8008718:	00800104 	movi	r2,4
 800871c:	1085883a 	add	r2,r2,r2
 8008720:	11000504 	addi	r4,r2,20
 8008724:	180b883a 	mov	r5,r3
 8008728:	18c00044 	addi	r3,r3,1
 800872c:	313ffb2e 	bgeu	r6,r4,800871c <__alt_data_end+0xfc00871c>
 8008730:	81401115 	stw	r5,68(r16)
 8008734:	8009883a 	mov	r4,r16
 8008738:	800b13c0 	call	800b13c <_Balloc>
 800873c:	d8800715 	stw	r2,28(sp)
 8008740:	80801015 	stw	r2,64(r16)
 8008744:	00800384 	movi	r2,14
 8008748:	1440fd36 	bltu	r2,r17,8008b40 <_dtoa_r+0x774>
 800874c:	a000fc26 	beq	r20,zero,8008b40 <_dtoa_r+0x774>
 8008750:	d8800517 	ldw	r2,20(sp)
 8008754:	0083b90e 	bge	zero,r2,800963c <_dtoa_r+0x1270>
 8008758:	d8c00517 	ldw	r3,20(sp)
 800875c:	108003cc 	andi	r2,r2,15
 8008760:	100490fa 	slli	r2,r2,3
 8008764:	182fd13a 	srai	r23,r3,4
 8008768:	00c20074 	movhi	r3,2049
 800876c:	18db8404 	addi	r3,r3,28176
 8008770:	1885883a 	add	r2,r3,r2
 8008774:	b8c0040c 	andi	r3,r23,16
 8008778:	12c00017 	ldw	r11,0(r2)
 800877c:	12800117 	ldw	r10,4(r2)
 8008780:	18039726 	beq	r3,zero,80095e0 <_dtoa_r+0x1214>
 8008784:	00820074 	movhi	r2,2049
 8008788:	109b7a04 	addi	r2,r2,28136
 800878c:	11800817 	ldw	r6,32(r2)
 8008790:	11c00917 	ldw	r7,36(r2)
 8008794:	9009883a 	mov	r4,r18
 8008798:	980b883a 	mov	r5,r19
 800879c:	da801615 	stw	r10,88(sp)
 80087a0:	dac01515 	stw	r11,84(sp)
 80087a4:	80111380 	call	8011138 <__divdf3>
 80087a8:	da801617 	ldw	r10,88(sp)
 80087ac:	dac01517 	ldw	r11,84(sp)
 80087b0:	bdc003cc 	andi	r23,r23,15
 80087b4:	044000c4 	movi	r17,3
 80087b8:	d8800e15 	stw	r2,56(sp)
 80087bc:	182b883a 	mov	r21,r3
 80087c0:	b8001126 	beq	r23,zero,8008808 <_dtoa_r+0x43c>
 80087c4:	05020074 	movhi	r20,2049
 80087c8:	a51b7a04 	addi	r20,r20,28136
 80087cc:	5805883a 	mov	r2,r11
 80087d0:	5007883a 	mov	r3,r10
 80087d4:	b980004c 	andi	r6,r23,1
 80087d8:	1009883a 	mov	r4,r2
 80087dc:	b82fd07a 	srai	r23,r23,1
 80087e0:	180b883a 	mov	r5,r3
 80087e4:	30000426 	beq	r6,zero,80087f8 <_dtoa_r+0x42c>
 80087e8:	a1800017 	ldw	r6,0(r20)
 80087ec:	a1c00117 	ldw	r7,4(r20)
 80087f0:	8c400044 	addi	r17,r17,1
 80087f4:	8011cfc0 	call	8011cfc <__muldf3>
 80087f8:	a5000204 	addi	r20,r20,8
 80087fc:	b83ff51e 	bne	r23,zero,80087d4 <__alt_data_end+0xfc0087d4>
 8008800:	1017883a 	mov	r11,r2
 8008804:	1815883a 	mov	r10,r3
 8008808:	d9000e17 	ldw	r4,56(sp)
 800880c:	a80b883a 	mov	r5,r21
 8008810:	580d883a 	mov	r6,r11
 8008814:	500f883a 	mov	r7,r10
 8008818:	80111380 	call	8011138 <__divdf3>
 800881c:	1029883a 	mov	r20,r2
 8008820:	182b883a 	mov	r21,r3
 8008824:	d9800c17 	ldw	r6,48(sp)
 8008828:	30000626 	beq	r6,zero,8008844 <_dtoa_r+0x478>
 800882c:	a009883a 	mov	r4,r20
 8008830:	a80b883a 	mov	r5,r21
 8008834:	000d883a 	mov	r6,zero
 8008838:	01cffc34 	movhi	r7,16368
 800883c:	8011c1c0 	call	8011c1c <__ledf2>
 8008840:	10043216 	blt	r2,zero,800990c <_dtoa_r+0x1540>
 8008844:	8809883a 	mov	r4,r17
 8008848:	8012ec00 	call	8012ec0 <__floatsidf>
 800884c:	1009883a 	mov	r4,r2
 8008850:	180b883a 	mov	r5,r3
 8008854:	a00d883a 	mov	r6,r20
 8008858:	a80f883a 	mov	r7,r21
 800885c:	8011cfc0 	call	8011cfc <__muldf3>
 8008860:	000d883a 	mov	r6,zero
 8008864:	1009883a 	mov	r4,r2
 8008868:	180b883a 	mov	r5,r3
 800886c:	01d00734 	movhi	r7,16412
 8008870:	801089c0 	call	801089c <__adddf3>
 8008874:	1023883a 	mov	r17,r2
 8008878:	d9800617 	ldw	r6,24(sp)
 800887c:	00bf3034 	movhi	r2,64704
 8008880:	1885883a 	add	r2,r3,r2
 8008884:	d8800e15 	stw	r2,56(sp)
 8008888:	30032e26 	beq	r6,zero,8009544 <_dtoa_r+0x1178>
 800888c:	d8c00517 	ldw	r3,20(sp)
 8008890:	da800617 	ldw	r10,24(sp)
 8008894:	d8c01215 	stw	r3,72(sp)
 8008898:	d9000b17 	ldw	r4,44(sp)
 800889c:	2003b026 	beq	r4,zero,8009760 <_dtoa_r+0x1394>
 80088a0:	50bfffc4 	addi	r2,r10,-1
 80088a4:	100490fa 	slli	r2,r2,3
 80088a8:	00c20074 	movhi	r3,2049
 80088ac:	18db8404 	addi	r3,r3,28176
 80088b0:	1885883a 	add	r2,r3,r2
 80088b4:	11800017 	ldw	r6,0(r2)
 80088b8:	11c00117 	ldw	r7,4(r2)
 80088bc:	d8800717 	ldw	r2,28(sp)
 80088c0:	0009883a 	mov	r4,zero
 80088c4:	014ff834 	movhi	r5,16352
 80088c8:	da801615 	stw	r10,88(sp)
 80088cc:	15c00044 	addi	r23,r2,1
 80088d0:	80111380 	call	8011138 <__divdf3>
 80088d4:	d9c00e17 	ldw	r7,56(sp)
 80088d8:	880d883a 	mov	r6,r17
 80088dc:	1009883a 	mov	r4,r2
 80088e0:	180b883a 	mov	r5,r3
 80088e4:	80125680 	call	8012568 <__subdf3>
 80088e8:	a80b883a 	mov	r5,r21
 80088ec:	a009883a 	mov	r4,r20
 80088f0:	d8c01015 	stw	r3,64(sp)
 80088f4:	d8800e15 	stw	r2,56(sp)
 80088f8:	8012e380 	call	8012e38 <__fixdfsi>
 80088fc:	1009883a 	mov	r4,r2
 8008900:	d8801715 	stw	r2,92(sp)
 8008904:	8012ec00 	call	8012ec0 <__floatsidf>
 8008908:	a009883a 	mov	r4,r20
 800890c:	a80b883a 	mov	r5,r21
 8008910:	100d883a 	mov	r6,r2
 8008914:	180f883a 	mov	r7,r3
 8008918:	80125680 	call	8012568 <__subdf3>
 800891c:	da001717 	ldw	r8,92(sp)
 8008920:	1829883a 	mov	r20,r3
 8008924:	d8c00717 	ldw	r3,28(sp)
 8008928:	d9000e17 	ldw	r4,56(sp)
 800892c:	d9401017 	ldw	r5,64(sp)
 8008930:	42000c04 	addi	r8,r8,48
 8008934:	1023883a 	mov	r17,r2
 8008938:	1a000005 	stb	r8,0(r3)
 800893c:	880d883a 	mov	r6,r17
 8008940:	a00f883a 	mov	r7,r20
 8008944:	402b883a 	mov	r21,r8
 8008948:	8011b3c0 	call	8011b3c <__gedf2>
 800894c:	00844516 	blt	zero,r2,8009a64 <_dtoa_r+0x1698>
 8008950:	0009883a 	mov	r4,zero
 8008954:	014ffc34 	movhi	r5,16368
 8008958:	880d883a 	mov	r6,r17
 800895c:	a00f883a 	mov	r7,r20
 8008960:	80125680 	call	8012568 <__subdf3>
 8008964:	d9000e17 	ldw	r4,56(sp)
 8008968:	d9401017 	ldw	r5,64(sp)
 800896c:	100d883a 	mov	r6,r2
 8008970:	180f883a 	mov	r7,r3
 8008974:	8011b3c0 	call	8011b3c <__gedf2>
 8008978:	da801617 	ldw	r10,88(sp)
 800897c:	00843616 	blt	zero,r2,8009a58 <_dtoa_r+0x168c>
 8008980:	00800044 	movi	r2,1
 8008984:	12806e0e 	bge	r2,r10,8008b40 <_dtoa_r+0x774>
 8008988:	d9000717 	ldw	r4,28(sp)
 800898c:	dd801315 	stw	r22,76(sp)
 8008990:	dc001115 	stw	r16,68(sp)
 8008994:	2295883a 	add	r10,r4,r10
 8008998:	dcc01415 	stw	r19,80(sp)
 800899c:	502d883a 	mov	r22,r10
 80089a0:	dcc01017 	ldw	r19,64(sp)
 80089a4:	b821883a 	mov	r16,r23
 80089a8:	dc801015 	stw	r18,64(sp)
 80089ac:	dc800e17 	ldw	r18,56(sp)
 80089b0:	00000906 	br	80089d8 <_dtoa_r+0x60c>
 80089b4:	80125680 	call	8012568 <__subdf3>
 80089b8:	1009883a 	mov	r4,r2
 80089bc:	180b883a 	mov	r5,r3
 80089c0:	900d883a 	mov	r6,r18
 80089c4:	980f883a 	mov	r7,r19
 80089c8:	8011c1c0 	call	8011c1c <__ledf2>
 80089cc:	10040e16 	blt	r2,zero,8009a08 <_dtoa_r+0x163c>
 80089d0:	b821883a 	mov	r16,r23
 80089d4:	bd841026 	beq	r23,r22,8009a18 <_dtoa_r+0x164c>
 80089d8:	9009883a 	mov	r4,r18
 80089dc:	980b883a 	mov	r5,r19
 80089e0:	000d883a 	mov	r6,zero
 80089e4:	01d00934 	movhi	r7,16420
 80089e8:	8011cfc0 	call	8011cfc <__muldf3>
 80089ec:	000d883a 	mov	r6,zero
 80089f0:	01d00934 	movhi	r7,16420
 80089f4:	8809883a 	mov	r4,r17
 80089f8:	a00b883a 	mov	r5,r20
 80089fc:	1025883a 	mov	r18,r2
 8008a00:	1827883a 	mov	r19,r3
 8008a04:	8011cfc0 	call	8011cfc <__muldf3>
 8008a08:	180b883a 	mov	r5,r3
 8008a0c:	1009883a 	mov	r4,r2
 8008a10:	1823883a 	mov	r17,r3
 8008a14:	1029883a 	mov	r20,r2
 8008a18:	8012e380 	call	8012e38 <__fixdfsi>
 8008a1c:	1009883a 	mov	r4,r2
 8008a20:	102b883a 	mov	r21,r2
 8008a24:	8012ec00 	call	8012ec0 <__floatsidf>
 8008a28:	a009883a 	mov	r4,r20
 8008a2c:	880b883a 	mov	r5,r17
 8008a30:	100d883a 	mov	r6,r2
 8008a34:	180f883a 	mov	r7,r3
 8008a38:	80125680 	call	8012568 <__subdf3>
 8008a3c:	ad400c04 	addi	r21,r21,48
 8008a40:	1009883a 	mov	r4,r2
 8008a44:	180b883a 	mov	r5,r3
 8008a48:	900d883a 	mov	r6,r18
 8008a4c:	980f883a 	mov	r7,r19
 8008a50:	85400005 	stb	r21,0(r16)
 8008a54:	1023883a 	mov	r17,r2
 8008a58:	1829883a 	mov	r20,r3
 8008a5c:	8011c1c0 	call	8011c1c <__ledf2>
 8008a60:	bdc00044 	addi	r23,r23,1
 8008a64:	0009883a 	mov	r4,zero
 8008a68:	014ffc34 	movhi	r5,16368
 8008a6c:	880d883a 	mov	r6,r17
 8008a70:	a00f883a 	mov	r7,r20
 8008a74:	103fcf0e 	bge	r2,zero,80089b4 <__alt_data_end+0xfc0089b4>
 8008a78:	d9801217 	ldw	r6,72(sp)
 8008a7c:	dc001117 	ldw	r16,68(sp)
 8008a80:	d9800515 	stw	r6,20(sp)
 8008a84:	8009883a 	mov	r4,r16
 8008a88:	e00b883a 	mov	r5,fp
 8008a8c:	800b1e40 	call	800b1e4 <_Bfree>
 8008a90:	d8c00517 	ldw	r3,20(sp)
 8008a94:	d9002317 	ldw	r4,140(sp)
 8008a98:	d9802517 	ldw	r6,148(sp)
 8008a9c:	b8000005 	stb	zero,0(r23)
 8008aa0:	18800044 	addi	r2,r3,1
 8008aa4:	20800015 	stw	r2,0(r4)
 8008aa8:	30027226 	beq	r6,zero,8009474 <_dtoa_r+0x10a8>
 8008aac:	35c00015 	stw	r23,0(r6)
 8008ab0:	d8800717 	ldw	r2,28(sp)
 8008ab4:	003e7406 	br	8008488 <__alt_data_end+0xfc008488>
 8008ab8:	00800434 	movhi	r2,16
 8008abc:	10bfffc4 	addi	r2,r2,-1
 8008ac0:	a8aa703a 	and	r21,r21,r2
 8008ac4:	a83e801e 	bne	r21,zero,80084c8 <__alt_data_end+0xfc0084c8>
 8008ac8:	00820074 	movhi	r2,2049
 8008acc:	109b6504 	addi	r2,r2,28052
 8008ad0:	003e7f06 	br	80084d0 <__alt_data_end+0xfc0084d0>
 8008ad4:	10c00204 	addi	r3,r2,8
 8008ad8:	003e8206 	br	80084e4 <__alt_data_end+0xfc0084e4>
 8008adc:	01400434 	movhi	r5,16
 8008ae0:	297fffc4 	addi	r5,r5,-1
 8008ae4:	994a703a 	and	r5,r19,r5
 8008ae8:	9009883a 	mov	r4,r18
 8008aec:	8c7f0044 	addi	r17,r17,-1023
 8008af0:	294ffc34 	orhi	r5,r5,16368
 8008af4:	dd000217 	ldw	r20,8(sp)
 8008af8:	d8000f15 	stw	zero,60(sp)
 8008afc:	003e9f06 	br	800857c <__alt_data_end+0xfc00857c>
 8008b00:	00820074 	movhi	r2,2049
 8008b04:	109b5404 	addi	r2,r2,27984
 8008b08:	003e5f06 	br	8008488 <__alt_data_end+0xfc008488>
 8008b0c:	80001115 	stw	zero,68(r16)
 8008b10:	8009883a 	mov	r4,r16
 8008b14:	000b883a 	mov	r5,zero
 8008b18:	800b13c0 	call	800b13c <_Balloc>
 8008b1c:	01bfffc4 	movi	r6,-1
 8008b20:	d8800715 	stw	r2,28(sp)
 8008b24:	80801015 	stw	r2,64(r16)
 8008b28:	00800044 	movi	r2,1
 8008b2c:	d9800615 	stw	r6,24(sp)
 8008b30:	d8800b15 	stw	r2,44(sp)
 8008b34:	d8002215 	stw	zero,136(sp)
 8008b38:	d9800d15 	stw	r6,52(sp)
 8008b3c:	d8000315 	stw	zero,12(sp)
 8008b40:	d8800117 	ldw	r2,4(sp)
 8008b44:	10008e16 	blt	r2,zero,8008d80 <_dtoa_r+0x9b4>
 8008b48:	d9000517 	ldw	r4,20(sp)
 8008b4c:	00c00384 	movi	r3,14
 8008b50:	19008b16 	blt	r3,r4,8008d80 <_dtoa_r+0x9b4>
 8008b54:	200490fa 	slli	r2,r4,3
 8008b58:	00c20074 	movhi	r3,2049
 8008b5c:	d9802217 	ldw	r6,136(sp)
 8008b60:	18db8404 	addi	r3,r3,28176
 8008b64:	1885883a 	add	r2,r3,r2
 8008b68:	14400017 	ldw	r17,0(r2)
 8008b6c:	15000117 	ldw	r20,4(r2)
 8008b70:	3001c716 	blt	r6,zero,8009290 <_dtoa_r+0xec4>
 8008b74:	880d883a 	mov	r6,r17
 8008b78:	a00f883a 	mov	r7,r20
 8008b7c:	9009883a 	mov	r4,r18
 8008b80:	980b883a 	mov	r5,r19
 8008b84:	80111380 	call	8011138 <__divdf3>
 8008b88:	180b883a 	mov	r5,r3
 8008b8c:	1009883a 	mov	r4,r2
 8008b90:	8012e380 	call	8012e38 <__fixdfsi>
 8008b94:	1009883a 	mov	r4,r2
 8008b98:	102d883a 	mov	r22,r2
 8008b9c:	8012ec00 	call	8012ec0 <__floatsidf>
 8008ba0:	1009883a 	mov	r4,r2
 8008ba4:	180b883a 	mov	r5,r3
 8008ba8:	880d883a 	mov	r6,r17
 8008bac:	a00f883a 	mov	r7,r20
 8008bb0:	8011cfc0 	call	8011cfc <__muldf3>
 8008bb4:	9009883a 	mov	r4,r18
 8008bb8:	980b883a 	mov	r5,r19
 8008bbc:	100d883a 	mov	r6,r2
 8008bc0:	180f883a 	mov	r7,r3
 8008bc4:	80125680 	call	8012568 <__subdf3>
 8008bc8:	d9000717 	ldw	r4,28(sp)
 8008bcc:	d9800617 	ldw	r6,24(sp)
 8008bd0:	180b883a 	mov	r5,r3
 8008bd4:	b0c00c04 	addi	r3,r22,48
 8008bd8:	20c00005 	stb	r3,0(r4)
 8008bdc:	25c00044 	addi	r23,r4,1
 8008be0:	01000044 	movi	r4,1
 8008be4:	1011883a 	mov	r8,r2
 8008be8:	2807883a 	mov	r3,r5
 8008bec:	31003d26 	beq	r6,r4,8008ce4 <_dtoa_r+0x918>
 8008bf0:	000d883a 	mov	r6,zero
 8008bf4:	01d00934 	movhi	r7,16420
 8008bf8:	1009883a 	mov	r4,r2
 8008bfc:	8011cfc0 	call	8011cfc <__muldf3>
 8008c00:	1009883a 	mov	r4,r2
 8008c04:	180b883a 	mov	r5,r3
 8008c08:	000d883a 	mov	r6,zero
 8008c0c:	000f883a 	mov	r7,zero
 8008c10:	1027883a 	mov	r19,r2
 8008c14:	182b883a 	mov	r21,r3
 8008c18:	8011ab80 	call	8011ab8 <__eqdf2>
 8008c1c:	103f9926 	beq	r2,zero,8008a84 <__alt_data_end+0xfc008a84>
 8008c20:	d8c00617 	ldw	r3,24(sp)
 8008c24:	d9000717 	ldw	r4,28(sp)
 8008c28:	b825883a 	mov	r18,r23
 8008c2c:	18bfffc4 	addi	r2,r3,-1
 8008c30:	20ad883a 	add	r22,r4,r2
 8008c34:	dc000315 	stw	r16,12(sp)
 8008c38:	00000a06 	br	8008c64 <_dtoa_r+0x898>
 8008c3c:	8011cfc0 	call	8011cfc <__muldf3>
 8008c40:	1009883a 	mov	r4,r2
 8008c44:	180b883a 	mov	r5,r3
 8008c48:	000d883a 	mov	r6,zero
 8008c4c:	000f883a 	mov	r7,zero
 8008c50:	1027883a 	mov	r19,r2
 8008c54:	182b883a 	mov	r21,r3
 8008c58:	b825883a 	mov	r18,r23
 8008c5c:	8011ab80 	call	8011ab8 <__eqdf2>
 8008c60:	10022626 	beq	r2,zero,80094fc <_dtoa_r+0x1130>
 8008c64:	880d883a 	mov	r6,r17
 8008c68:	a00f883a 	mov	r7,r20
 8008c6c:	9809883a 	mov	r4,r19
 8008c70:	a80b883a 	mov	r5,r21
 8008c74:	80111380 	call	8011138 <__divdf3>
 8008c78:	180b883a 	mov	r5,r3
 8008c7c:	1009883a 	mov	r4,r2
 8008c80:	8012e380 	call	8012e38 <__fixdfsi>
 8008c84:	1009883a 	mov	r4,r2
 8008c88:	1021883a 	mov	r16,r2
 8008c8c:	8012ec00 	call	8012ec0 <__floatsidf>
 8008c90:	1009883a 	mov	r4,r2
 8008c94:	180b883a 	mov	r5,r3
 8008c98:	880d883a 	mov	r6,r17
 8008c9c:	a00f883a 	mov	r7,r20
 8008ca0:	8011cfc0 	call	8011cfc <__muldf3>
 8008ca4:	9809883a 	mov	r4,r19
 8008ca8:	a80b883a 	mov	r5,r21
 8008cac:	100d883a 	mov	r6,r2
 8008cb0:	180f883a 	mov	r7,r3
 8008cb4:	80125680 	call	8012568 <__subdf3>
 8008cb8:	82000c04 	addi	r8,r16,48
 8008cbc:	92000005 	stb	r8,0(r18)
 8008cc0:	1009883a 	mov	r4,r2
 8008cc4:	180b883a 	mov	r5,r3
 8008cc8:	000d883a 	mov	r6,zero
 8008ccc:	01d00934 	movhi	r7,16420
 8008cd0:	1011883a 	mov	r8,r2
 8008cd4:	bdc00044 	addi	r23,r23,1
 8008cd8:	95bfd81e 	bne	r18,r22,8008c3c <__alt_data_end+0xfc008c3c>
 8008cdc:	802d883a 	mov	r22,r16
 8008ce0:	dc000317 	ldw	r16,12(sp)
 8008ce4:	4009883a 	mov	r4,r8
 8008ce8:	180b883a 	mov	r5,r3
 8008cec:	400d883a 	mov	r6,r8
 8008cf0:	180f883a 	mov	r7,r3
 8008cf4:	801089c0 	call	801089c <__adddf3>
 8008cf8:	8809883a 	mov	r4,r17
 8008cfc:	a00b883a 	mov	r5,r20
 8008d00:	100d883a 	mov	r6,r2
 8008d04:	180f883a 	mov	r7,r3
 8008d08:	1027883a 	mov	r19,r2
 8008d0c:	1825883a 	mov	r18,r3
 8008d10:	8011c1c0 	call	8011c1c <__ledf2>
 8008d14:	10000816 	blt	r2,zero,8008d38 <_dtoa_r+0x96c>
 8008d18:	8809883a 	mov	r4,r17
 8008d1c:	a00b883a 	mov	r5,r20
 8008d20:	980d883a 	mov	r6,r19
 8008d24:	900f883a 	mov	r7,r18
 8008d28:	8011ab80 	call	8011ab8 <__eqdf2>
 8008d2c:	103f551e 	bne	r2,zero,8008a84 <__alt_data_end+0xfc008a84>
 8008d30:	b580004c 	andi	r22,r22,1
 8008d34:	b03f5326 	beq	r22,zero,8008a84 <__alt_data_end+0xfc008a84>
 8008d38:	bd7fffc3 	ldbu	r21,-1(r23)
 8008d3c:	b8bfffc4 	addi	r2,r23,-1
 8008d40:	1007883a 	mov	r3,r2
 8008d44:	01400e44 	movi	r5,57
 8008d48:	d9800717 	ldw	r6,28(sp)
 8008d4c:	00000506 	br	8008d64 <_dtoa_r+0x998>
 8008d50:	18ffffc4 	addi	r3,r3,-1
 8008d54:	30825e26 	beq	r6,r2,80096d0 <_dtoa_r+0x1304>
 8008d58:	1d400003 	ldbu	r21,0(r3)
 8008d5c:	102f883a 	mov	r23,r2
 8008d60:	10bfffc4 	addi	r2,r2,-1
 8008d64:	a9003fcc 	andi	r4,r21,255
 8008d68:	2100201c 	xori	r4,r4,128
 8008d6c:	213fe004 	addi	r4,r4,-128
 8008d70:	217ff726 	beq	r4,r5,8008d50 <__alt_data_end+0xfc008d50>
 8008d74:	aa000044 	addi	r8,r21,1
 8008d78:	12000005 	stb	r8,0(r2)
 8008d7c:	003f4106 	br	8008a84 <__alt_data_end+0xfc008a84>
 8008d80:	d8c00b17 	ldw	r3,44(sp)
 8008d84:	18006726 	beq	r3,zero,8008f24 <_dtoa_r+0xb58>
 8008d88:	d9000317 	ldw	r4,12(sp)
 8008d8c:	00c00044 	movi	r3,1
 8008d90:	19016a0e 	bge	r3,r4,800933c <_dtoa_r+0xf70>
 8008d94:	d8800617 	ldw	r2,24(sp)
 8008d98:	d8c00917 	ldw	r3,36(sp)
 8008d9c:	157fffc4 	addi	r21,r2,-1
 8008da0:	1d420716 	blt	r3,r21,80095c0 <_dtoa_r+0x11f4>
 8008da4:	1d6bc83a 	sub	r21,r3,r21
 8008da8:	d8800617 	ldw	r2,24(sp)
 8008dac:	1002c716 	blt	r2,zero,80098cc <_dtoa_r+0x1500>
 8008db0:	dd000817 	ldw	r20,32(sp)
 8008db4:	d8800617 	ldw	r2,24(sp)
 8008db8:	d9800817 	ldw	r6,32(sp)
 8008dbc:	8009883a 	mov	r4,r16
 8008dc0:	01400044 	movi	r5,1
 8008dc4:	308d883a 	add	r6,r6,r2
 8008dc8:	d9800815 	stw	r6,32(sp)
 8008dcc:	b0ad883a 	add	r22,r22,r2
 8008dd0:	800b5640 	call	800b564 <__i2b>
 8008dd4:	1023883a 	mov	r17,r2
 8008dd8:	a0000826 	beq	r20,zero,8008dfc <_dtoa_r+0xa30>
 8008ddc:	0580070e 	bge	zero,r22,8008dfc <_dtoa_r+0xa30>
 8008de0:	b005883a 	mov	r2,r22
 8008de4:	a5812016 	blt	r20,r22,8009268 <_dtoa_r+0xe9c>
 8008de8:	d8c00817 	ldw	r3,32(sp)
 8008dec:	a0a9c83a 	sub	r20,r20,r2
 8008df0:	b0adc83a 	sub	r22,r22,r2
 8008df4:	1887c83a 	sub	r3,r3,r2
 8008df8:	d8c00815 	stw	r3,32(sp)
 8008dfc:	d9000917 	ldw	r4,36(sp)
 8008e00:	0100140e 	bge	zero,r4,8008e54 <_dtoa_r+0xa88>
 8008e04:	d9800b17 	ldw	r6,44(sp)
 8008e08:	3001e526 	beq	r6,zero,80095a0 <_dtoa_r+0x11d4>
 8008e0c:	05400e0e 	bge	zero,r21,8008e48 <_dtoa_r+0xa7c>
 8008e10:	880b883a 	mov	r5,r17
 8008e14:	8009883a 	mov	r4,r16
 8008e18:	a80d883a 	mov	r6,r21
 8008e1c:	800b8300 	call	800b830 <__pow5mult>
 8008e20:	e00d883a 	mov	r6,fp
 8008e24:	8009883a 	mov	r4,r16
 8008e28:	100b883a 	mov	r5,r2
 8008e2c:	1023883a 	mov	r17,r2
 8008e30:	800b5a00 	call	800b5a0 <__multiply>
 8008e34:	102f883a 	mov	r23,r2
 8008e38:	e00b883a 	mov	r5,fp
 8008e3c:	8009883a 	mov	r4,r16
 8008e40:	800b1e40 	call	800b1e4 <_Bfree>
 8008e44:	b839883a 	mov	fp,r23
 8008e48:	d8800917 	ldw	r2,36(sp)
 8008e4c:	154dc83a 	sub	r6,r2,r21
 8008e50:	3001281e 	bne	r6,zero,80092f4 <_dtoa_r+0xf28>
 8008e54:	05c00044 	movi	r23,1
 8008e58:	8009883a 	mov	r4,r16
 8008e5c:	b80b883a 	mov	r5,r23
 8008e60:	800b5640 	call	800b564 <__i2b>
 8008e64:	d8c00a17 	ldw	r3,40(sp)
 8008e68:	102b883a 	mov	r21,r2
 8008e6c:	00c0310e 	bge	zero,r3,8008f34 <_dtoa_r+0xb68>
 8008e70:	8009883a 	mov	r4,r16
 8008e74:	100b883a 	mov	r5,r2
 8008e78:	180d883a 	mov	r6,r3
 8008e7c:	800b8300 	call	800b830 <__pow5mult>
 8008e80:	d9000317 	ldw	r4,12(sp)
 8008e84:	102b883a 	mov	r21,r2
 8008e88:	b9011f0e 	bge	r23,r4,8009308 <_dtoa_r+0xf3c>
 8008e8c:	0027883a 	mov	r19,zero
 8008e90:	a8800417 	ldw	r2,16(r21)
 8008e94:	10800104 	addi	r2,r2,4
 8008e98:	1085883a 	add	r2,r2,r2
 8008e9c:	1085883a 	add	r2,r2,r2
 8008ea0:	a885883a 	add	r2,r21,r2
 8008ea4:	11000017 	ldw	r4,0(r2)
 8008ea8:	800b44c0 	call	800b44c <__hi0bits>
 8008eac:	00c00804 	movi	r3,32
 8008eb0:	1885c83a 	sub	r2,r3,r2
 8008eb4:	00002506 	br	8008f4c <_dtoa_r+0xb80>
 8008eb8:	01800044 	movi	r6,1
 8008ebc:	d9800c15 	stw	r6,48(sp)
 8008ec0:	003dec06 	br	8008674 <__alt_data_end+0xfc008674>
 8008ec4:	d8c00817 	ldw	r3,32(sp)
 8008ec8:	d9000517 	ldw	r4,20(sp)
 8008ecc:	d8000a15 	stw	zero,40(sp)
 8008ed0:	1907c83a 	sub	r3,r3,r4
 8008ed4:	010dc83a 	sub	r6,zero,r4
 8008ed8:	d8c00815 	stw	r3,32(sp)
 8008edc:	d9800915 	stw	r6,36(sp)
 8008ee0:	003ded06 	br	8008698 <__alt_data_end+0xfc008698>
 8008ee4:	05adc83a 	sub	r22,zero,r22
 8008ee8:	dd800815 	stw	r22,32(sp)
 8008eec:	002d883a 	mov	r22,zero
 8008ef0:	003de406 	br	8008684 <__alt_data_end+0xfc008684>
 8008ef4:	d9000517 	ldw	r4,20(sp)
 8008ef8:	8012ec00 	call	8012ec0 <__floatsidf>
 8008efc:	1009883a 	mov	r4,r2
 8008f00:	180b883a 	mov	r5,r3
 8008f04:	b00d883a 	mov	r6,r22
 8008f08:	a80f883a 	mov	r7,r21
 8008f0c:	8011ab80 	call	8011ab8 <__eqdf2>
 8008f10:	103dc726 	beq	r2,zero,8008630 <__alt_data_end+0xfc008630>
 8008f14:	d8800517 	ldw	r2,20(sp)
 8008f18:	10bfffc4 	addi	r2,r2,-1
 8008f1c:	d8800515 	stw	r2,20(sp)
 8008f20:	003dc306 	br	8008630 <__alt_data_end+0xfc008630>
 8008f24:	dd400917 	ldw	r21,36(sp)
 8008f28:	dd000817 	ldw	r20,32(sp)
 8008f2c:	0023883a 	mov	r17,zero
 8008f30:	003fa906 	br	8008dd8 <__alt_data_end+0xfc008dd8>
 8008f34:	d9800317 	ldw	r6,12(sp)
 8008f38:	b981670e 	bge	r23,r6,80094d8 <_dtoa_r+0x110c>
 8008f3c:	0027883a 	mov	r19,zero
 8008f40:	d8c00a17 	ldw	r3,40(sp)
 8008f44:	183fd21e 	bne	r3,zero,8008e90 <__alt_data_end+0xfc008e90>
 8008f48:	00800044 	movi	r2,1
 8008f4c:	1585883a 	add	r2,r2,r22
 8008f50:	108007cc 	andi	r2,r2,31
 8008f54:	10005f26 	beq	r2,zero,80090d4 <_dtoa_r+0xd08>
 8008f58:	00c00804 	movi	r3,32
 8008f5c:	1887c83a 	sub	r3,r3,r2
 8008f60:	01000104 	movi	r4,4
 8008f64:	20c2dd0e 	bge	r4,r3,8009adc <_dtoa_r+0x1710>
 8008f68:	d9000817 	ldw	r4,32(sp)
 8008f6c:	00c00704 	movi	r3,28
 8008f70:	1885c83a 	sub	r2,r3,r2
 8008f74:	2089883a 	add	r4,r4,r2
 8008f78:	d9000815 	stw	r4,32(sp)
 8008f7c:	a0a9883a 	add	r20,r20,r2
 8008f80:	b0ad883a 	add	r22,r22,r2
 8008f84:	d8800817 	ldw	r2,32(sp)
 8008f88:	0080050e 	bge	zero,r2,8008fa0 <_dtoa_r+0xbd4>
 8008f8c:	e00b883a 	mov	r5,fp
 8008f90:	8009883a 	mov	r4,r16
 8008f94:	100d883a 	mov	r6,r2
 8008f98:	800b9700 	call	800b970 <__lshift>
 8008f9c:	1039883a 	mov	fp,r2
 8008fa0:	0580050e 	bge	zero,r22,8008fb8 <_dtoa_r+0xbec>
 8008fa4:	a80b883a 	mov	r5,r21
 8008fa8:	8009883a 	mov	r4,r16
 8008fac:	b00d883a 	mov	r6,r22
 8008fb0:	800b9700 	call	800b970 <__lshift>
 8008fb4:	102b883a 	mov	r21,r2
 8008fb8:	d8c00c17 	ldw	r3,48(sp)
 8008fbc:	1801161e 	bne	r3,zero,8009418 <_dtoa_r+0x104c>
 8008fc0:	d8c00617 	ldw	r3,24(sp)
 8008fc4:	00c12d0e 	bge	zero,r3,800947c <_dtoa_r+0x10b0>
 8008fc8:	d8c00b17 	ldw	r3,44(sp)
 8008fcc:	1800571e 	bne	r3,zero,800912c <_dtoa_r+0xd60>
 8008fd0:	dc800717 	ldw	r18,28(sp)
 8008fd4:	dcc00617 	ldw	r19,24(sp)
 8008fd8:	9029883a 	mov	r20,r18
 8008fdc:	00000206 	br	8008fe8 <_dtoa_r+0xc1c>
 8008fe0:	800b20c0 	call	800b20c <__multadd>
 8008fe4:	1039883a 	mov	fp,r2
 8008fe8:	e009883a 	mov	r4,fp
 8008fec:	a80b883a 	mov	r5,r21
 8008ff0:	80081a40 	call	80081a4 <quorem>
 8008ff4:	10800c04 	addi	r2,r2,48
 8008ff8:	90800005 	stb	r2,0(r18)
 8008ffc:	94800044 	addi	r18,r18,1
 8009000:	9507c83a 	sub	r3,r18,r20
 8009004:	8009883a 	mov	r4,r16
 8009008:	e00b883a 	mov	r5,fp
 800900c:	01800284 	movi	r6,10
 8009010:	000f883a 	mov	r7,zero
 8009014:	1cfff216 	blt	r3,r19,8008fe0 <__alt_data_end+0xfc008fe0>
 8009018:	1011883a 	mov	r8,r2
 800901c:	d8800617 	ldw	r2,24(sp)
 8009020:	00822e0e 	bge	zero,r2,80098dc <_dtoa_r+0x1510>
 8009024:	d9000717 	ldw	r4,28(sp)
 8009028:	0025883a 	mov	r18,zero
 800902c:	20af883a 	add	r23,r4,r2
 8009030:	e00b883a 	mov	r5,fp
 8009034:	01800044 	movi	r6,1
 8009038:	8009883a 	mov	r4,r16
 800903c:	da001715 	stw	r8,92(sp)
 8009040:	800b9700 	call	800b970 <__lshift>
 8009044:	1009883a 	mov	r4,r2
 8009048:	a80b883a 	mov	r5,r21
 800904c:	1039883a 	mov	fp,r2
 8009050:	800bab80 	call	800bab8 <__mcmp>
 8009054:	da001717 	ldw	r8,92(sp)
 8009058:	00816e0e 	bge	zero,r2,8009614 <_dtoa_r+0x1248>
 800905c:	b93fffc3 	ldbu	r4,-1(r23)
 8009060:	b8bfffc4 	addi	r2,r23,-1
 8009064:	1007883a 	mov	r3,r2
 8009068:	01800e44 	movi	r6,57
 800906c:	d9c00717 	ldw	r7,28(sp)
 8009070:	00000506 	br	8009088 <_dtoa_r+0xcbc>
 8009074:	18ffffc4 	addi	r3,r3,-1
 8009078:	38811926 	beq	r7,r2,80094e0 <_dtoa_r+0x1114>
 800907c:	19000003 	ldbu	r4,0(r3)
 8009080:	102f883a 	mov	r23,r2
 8009084:	10bfffc4 	addi	r2,r2,-1
 8009088:	21403fcc 	andi	r5,r4,255
 800908c:	2940201c 	xori	r5,r5,128
 8009090:	297fe004 	addi	r5,r5,-128
 8009094:	29bff726 	beq	r5,r6,8009074 <__alt_data_end+0xfc009074>
 8009098:	21000044 	addi	r4,r4,1
 800909c:	11000005 	stb	r4,0(r2)
 80090a0:	8009883a 	mov	r4,r16
 80090a4:	a80b883a 	mov	r5,r21
 80090a8:	800b1e40 	call	800b1e4 <_Bfree>
 80090ac:	883e7526 	beq	r17,zero,8008a84 <__alt_data_end+0xfc008a84>
 80090b0:	90000426 	beq	r18,zero,80090c4 <_dtoa_r+0xcf8>
 80090b4:	94400326 	beq	r18,r17,80090c4 <_dtoa_r+0xcf8>
 80090b8:	8009883a 	mov	r4,r16
 80090bc:	900b883a 	mov	r5,r18
 80090c0:	800b1e40 	call	800b1e4 <_Bfree>
 80090c4:	8009883a 	mov	r4,r16
 80090c8:	880b883a 	mov	r5,r17
 80090cc:	800b1e40 	call	800b1e4 <_Bfree>
 80090d0:	003e6c06 	br	8008a84 <__alt_data_end+0xfc008a84>
 80090d4:	00800704 	movi	r2,28
 80090d8:	d9800817 	ldw	r6,32(sp)
 80090dc:	a0a9883a 	add	r20,r20,r2
 80090e0:	b0ad883a 	add	r22,r22,r2
 80090e4:	308d883a 	add	r6,r6,r2
 80090e8:	d9800815 	stw	r6,32(sp)
 80090ec:	003fa506 	br	8008f84 <__alt_data_end+0xfc008f84>
 80090f0:	013efb84 	movi	r4,-1042
 80090f4:	246bc83a 	sub	r21,r4,r17
 80090f8:	9548983a 	sll	r4,r18,r21
 80090fc:	003d1806 	br	8008560 <__alt_data_end+0xfc008560>
 8009100:	d8000c15 	stw	zero,48(sp)
 8009104:	003d5b06 	br	8008674 <__alt_data_end+0xfc008674>
 8009108:	880b883a 	mov	r5,r17
 800910c:	8009883a 	mov	r4,r16
 8009110:	01800284 	movi	r6,10
 8009114:	000f883a 	mov	r7,zero
 8009118:	800b20c0 	call	800b20c <__multadd>
 800911c:	1023883a 	mov	r17,r2
 8009120:	d8800d17 	ldw	r2,52(sp)
 8009124:	0082550e 	bge	zero,r2,8009a7c <_dtoa_r+0x16b0>
 8009128:	d8800615 	stw	r2,24(sp)
 800912c:	0500050e 	bge	zero,r20,8009144 <_dtoa_r+0xd78>
 8009130:	880b883a 	mov	r5,r17
 8009134:	8009883a 	mov	r4,r16
 8009138:	a00d883a 	mov	r6,r20
 800913c:	800b9700 	call	800b970 <__lshift>
 8009140:	1023883a 	mov	r17,r2
 8009144:	98016a1e 	bne	r19,zero,80096f0 <_dtoa_r+0x1324>
 8009148:	8829883a 	mov	r20,r17
 800914c:	d9000617 	ldw	r4,24(sp)
 8009150:	dcc00717 	ldw	r19,28(sp)
 8009154:	9480004c 	andi	r18,r18,1
 8009158:	20bfffc4 	addi	r2,r4,-1
 800915c:	9885883a 	add	r2,r19,r2
 8009160:	d8800415 	stw	r2,16(sp)
 8009164:	dc800615 	stw	r18,24(sp)
 8009168:	e009883a 	mov	r4,fp
 800916c:	a80b883a 	mov	r5,r21
 8009170:	80081a40 	call	80081a4 <quorem>
 8009174:	e009883a 	mov	r4,fp
 8009178:	880b883a 	mov	r5,r17
 800917c:	102f883a 	mov	r23,r2
 8009180:	800bab80 	call	800bab8 <__mcmp>
 8009184:	8009883a 	mov	r4,r16
 8009188:	a80b883a 	mov	r5,r21
 800918c:	a00d883a 	mov	r6,r20
 8009190:	102d883a 	mov	r22,r2
 8009194:	800bb180 	call	800bb18 <__mdiff>
 8009198:	1007883a 	mov	r3,r2
 800919c:	10800317 	ldw	r2,12(r2)
 80091a0:	bc800c04 	addi	r18,r23,48
 80091a4:	1000971e 	bne	r2,zero,8009404 <_dtoa_r+0x1038>
 80091a8:	180b883a 	mov	r5,r3
 80091ac:	e009883a 	mov	r4,fp
 80091b0:	d8c01515 	stw	r3,84(sp)
 80091b4:	800bab80 	call	800bab8 <__mcmp>
 80091b8:	d8c01517 	ldw	r3,84(sp)
 80091bc:	8009883a 	mov	r4,r16
 80091c0:	d8801515 	stw	r2,84(sp)
 80091c4:	180b883a 	mov	r5,r3
 80091c8:	800b1e40 	call	800b1e4 <_Bfree>
 80091cc:	d8801517 	ldw	r2,84(sp)
 80091d0:	1000041e 	bne	r2,zero,80091e4 <_dtoa_r+0xe18>
 80091d4:	d9800317 	ldw	r6,12(sp)
 80091d8:	3000021e 	bne	r6,zero,80091e4 <_dtoa_r+0xe18>
 80091dc:	d8c00617 	ldw	r3,24(sp)
 80091e0:	18007626 	beq	r3,zero,80093bc <_dtoa_r+0xff0>
 80091e4:	b0005b16 	blt	r22,zero,8009354 <_dtoa_r+0xf88>
 80091e8:	b000041e 	bne	r22,zero,80091fc <_dtoa_r+0xe30>
 80091ec:	d9000317 	ldw	r4,12(sp)
 80091f0:	2000021e 	bne	r4,zero,80091fc <_dtoa_r+0xe30>
 80091f4:	d8c00617 	ldw	r3,24(sp)
 80091f8:	18005626 	beq	r3,zero,8009354 <_dtoa_r+0xf88>
 80091fc:	00814d16 	blt	zero,r2,8009734 <_dtoa_r+0x1368>
 8009200:	d8c00417 	ldw	r3,16(sp)
 8009204:	9d800044 	addi	r22,r19,1
 8009208:	9c800005 	stb	r18,0(r19)
 800920c:	b02f883a 	mov	r23,r22
 8009210:	98c14c26 	beq	r19,r3,8009744 <_dtoa_r+0x1378>
 8009214:	e00b883a 	mov	r5,fp
 8009218:	8009883a 	mov	r4,r16
 800921c:	01800284 	movi	r6,10
 8009220:	000f883a 	mov	r7,zero
 8009224:	800b20c0 	call	800b20c <__multadd>
 8009228:	1039883a 	mov	fp,r2
 800922c:	8d006d26 	beq	r17,r20,80093e4 <_dtoa_r+0x1018>
 8009230:	880b883a 	mov	r5,r17
 8009234:	01800284 	movi	r6,10
 8009238:	000f883a 	mov	r7,zero
 800923c:	8009883a 	mov	r4,r16
 8009240:	800b20c0 	call	800b20c <__multadd>
 8009244:	a00b883a 	mov	r5,r20
 8009248:	8009883a 	mov	r4,r16
 800924c:	01800284 	movi	r6,10
 8009250:	000f883a 	mov	r7,zero
 8009254:	1023883a 	mov	r17,r2
 8009258:	800b20c0 	call	800b20c <__multadd>
 800925c:	1029883a 	mov	r20,r2
 8009260:	b027883a 	mov	r19,r22
 8009264:	003fc006 	br	8009168 <__alt_data_end+0xfc009168>
 8009268:	a005883a 	mov	r2,r20
 800926c:	003ede06 	br	8008de8 <__alt_data_end+0xfc008de8>
 8009270:	01000044 	movi	r4,1
 8009274:	d9000b15 	stw	r4,44(sp)
 8009278:	d9802217 	ldw	r6,136(sp)
 800927c:	0180dc0e 	bge	zero,r6,80095f0 <_dtoa_r+0x1224>
 8009280:	3023883a 	mov	r17,r6
 8009284:	d9800d15 	stw	r6,52(sp)
 8009288:	d9800615 	stw	r6,24(sp)
 800928c:	003d1e06 	br	8008708 <__alt_data_end+0xfc008708>
 8009290:	d8800617 	ldw	r2,24(sp)
 8009294:	00be3716 	blt	zero,r2,8008b74 <__alt_data_end+0xfc008b74>
 8009298:	1000be1e 	bne	r2,zero,8009594 <_dtoa_r+0x11c8>
 800929c:	8809883a 	mov	r4,r17
 80092a0:	a00b883a 	mov	r5,r20
 80092a4:	000d883a 	mov	r6,zero
 80092a8:	01d00534 	movhi	r7,16404
 80092ac:	8011cfc0 	call	8011cfc <__muldf3>
 80092b0:	1009883a 	mov	r4,r2
 80092b4:	180b883a 	mov	r5,r3
 80092b8:	900d883a 	mov	r6,r18
 80092bc:	980f883a 	mov	r7,r19
 80092c0:	8011b3c0 	call	8011b3c <__gedf2>
 80092c4:	002b883a 	mov	r21,zero
 80092c8:	0023883a 	mov	r17,zero
 80092cc:	10007a16 	blt	r2,zero,80094b8 <_dtoa_r+0x10ec>
 80092d0:	d9002217 	ldw	r4,136(sp)
 80092d4:	ddc00717 	ldw	r23,28(sp)
 80092d8:	0108303a 	nor	r4,zero,r4
 80092dc:	d9000515 	stw	r4,20(sp)
 80092e0:	8009883a 	mov	r4,r16
 80092e4:	a80b883a 	mov	r5,r21
 80092e8:	800b1e40 	call	800b1e4 <_Bfree>
 80092ec:	883f751e 	bne	r17,zero,80090c4 <__alt_data_end+0xfc0090c4>
 80092f0:	003de406 	br	8008a84 <__alt_data_end+0xfc008a84>
 80092f4:	e00b883a 	mov	r5,fp
 80092f8:	8009883a 	mov	r4,r16
 80092fc:	800b8300 	call	800b830 <__pow5mult>
 8009300:	1039883a 	mov	fp,r2
 8009304:	003ed306 	br	8008e54 <__alt_data_end+0xfc008e54>
 8009308:	903ee01e 	bne	r18,zero,8008e8c <__alt_data_end+0xfc008e8c>
 800930c:	00800434 	movhi	r2,16
 8009310:	10bfffc4 	addi	r2,r2,-1
 8009314:	9884703a 	and	r2,r19,r2
 8009318:	103f081e 	bne	r2,zero,8008f3c <__alt_data_end+0xfc008f3c>
 800931c:	9cdffc2c 	andhi	r19,r19,32752
 8009320:	983f0626 	beq	r19,zero,8008f3c <__alt_data_end+0xfc008f3c>
 8009324:	d8800817 	ldw	r2,32(sp)
 8009328:	b5800044 	addi	r22,r22,1
 800932c:	04c00044 	movi	r19,1
 8009330:	10800044 	addi	r2,r2,1
 8009334:	d8800815 	stw	r2,32(sp)
 8009338:	003f0106 	br	8008f40 <__alt_data_end+0xfc008f40>
 800933c:	d9800f17 	ldw	r6,60(sp)
 8009340:	30016826 	beq	r6,zero,80098e4 <_dtoa_r+0x1518>
 8009344:	10810cc4 	addi	r2,r2,1075
 8009348:	dd400917 	ldw	r21,36(sp)
 800934c:	dd000817 	ldw	r20,32(sp)
 8009350:	003e9906 	br	8008db8 <__alt_data_end+0xfc008db8>
 8009354:	9011883a 	mov	r8,r18
 8009358:	4007883a 	mov	r3,r8
 800935c:	e02d883a 	mov	r22,fp
 8009360:	0080100e 	bge	zero,r2,80093a4 <_dtoa_r+0xfd8>
 8009364:	01800044 	movi	r6,1
 8009368:	8009883a 	mov	r4,r16
 800936c:	e00b883a 	mov	r5,fp
 8009370:	da001515 	stw	r8,84(sp)
 8009374:	da001715 	stw	r8,92(sp)
 8009378:	800b9700 	call	800b970 <__lshift>
 800937c:	1009883a 	mov	r4,r2
 8009380:	a80b883a 	mov	r5,r21
 8009384:	102d883a 	mov	r22,r2
 8009388:	800bab80 	call	800bab8 <__mcmp>
 800938c:	d8c01517 	ldw	r3,84(sp)
 8009390:	da001717 	ldw	r8,92(sp)
 8009394:	0081a50e 	bge	zero,r2,8009a2c <_dtoa_r+0x1660>
 8009398:	00800e44 	movi	r2,57
 800939c:	40817b26 	beq	r8,r2,800998c <_dtoa_r+0x15c0>
 80093a0:	40c00044 	addi	r3,r8,1
 80093a4:	8825883a 	mov	r18,r17
 80093a8:	9dc00044 	addi	r23,r19,1
 80093ac:	98c00005 	stb	r3,0(r19)
 80093b0:	a023883a 	mov	r17,r20
 80093b4:	b039883a 	mov	fp,r22
 80093b8:	003f3906 	br	80090a0 <__alt_data_end+0xfc0090a0>
 80093bc:	00800e44 	movi	r2,57
 80093c0:	9011883a 	mov	r8,r18
 80093c4:	90817226 	beq	r18,r2,8009990 <_dtoa_r+0x15c4>
 80093c8:	0580010e 	bge	zero,r22,80093d0 <_dtoa_r+0x1004>
 80093cc:	ba000c44 	addi	r8,r23,49
 80093d0:	8825883a 	mov	r18,r17
 80093d4:	9dc00044 	addi	r23,r19,1
 80093d8:	9a000005 	stb	r8,0(r19)
 80093dc:	a023883a 	mov	r17,r20
 80093e0:	003f2f06 	br	80090a0 <__alt_data_end+0xfc0090a0>
 80093e4:	880b883a 	mov	r5,r17
 80093e8:	8009883a 	mov	r4,r16
 80093ec:	01800284 	movi	r6,10
 80093f0:	000f883a 	mov	r7,zero
 80093f4:	800b20c0 	call	800b20c <__multadd>
 80093f8:	1023883a 	mov	r17,r2
 80093fc:	1029883a 	mov	r20,r2
 8009400:	003f9706 	br	8009260 <__alt_data_end+0xfc009260>
 8009404:	8009883a 	mov	r4,r16
 8009408:	180b883a 	mov	r5,r3
 800940c:	800b1e40 	call	800b1e4 <_Bfree>
 8009410:	00800044 	movi	r2,1
 8009414:	003f7306 	br	80091e4 <__alt_data_end+0xfc0091e4>
 8009418:	e009883a 	mov	r4,fp
 800941c:	a80b883a 	mov	r5,r21
 8009420:	800bab80 	call	800bab8 <__mcmp>
 8009424:	103ee60e 	bge	r2,zero,8008fc0 <__alt_data_end+0xfc008fc0>
 8009428:	8009883a 	mov	r4,r16
 800942c:	e00b883a 	mov	r5,fp
 8009430:	01800284 	movi	r6,10
 8009434:	000f883a 	mov	r7,zero
 8009438:	800b20c0 	call	800b20c <__multadd>
 800943c:	d9000517 	ldw	r4,20(sp)
 8009440:	d9800b17 	ldw	r6,44(sp)
 8009444:	1039883a 	mov	fp,r2
 8009448:	213fffc4 	addi	r4,r4,-1
 800944c:	d9000515 	stw	r4,20(sp)
 8009450:	303f2d1e 	bne	r6,zero,8009108 <__alt_data_end+0xfc009108>
 8009454:	d9000d17 	ldw	r4,52(sp)
 8009458:	0101780e 	bge	zero,r4,8009a3c <_dtoa_r+0x1670>
 800945c:	d9000615 	stw	r4,24(sp)
 8009460:	003edb06 	br	8008fd0 <__alt_data_end+0xfc008fd0>
 8009464:	00800084 	movi	r2,2
 8009468:	30818e1e 	bne	r6,r2,8009aa4 <_dtoa_r+0x16d8>
 800946c:	d8000b15 	stw	zero,44(sp)
 8009470:	003f8106 	br	8009278 <__alt_data_end+0xfc009278>
 8009474:	d8800717 	ldw	r2,28(sp)
 8009478:	003c0306 	br	8008488 <__alt_data_end+0xfc008488>
 800947c:	d9000317 	ldw	r4,12(sp)
 8009480:	00800084 	movi	r2,2
 8009484:	113ed00e 	bge	r2,r4,8008fc8 <__alt_data_end+0xfc008fc8>
 8009488:	d8c00617 	ldw	r3,24(sp)
 800948c:	183f901e 	bne	r3,zero,80092d0 <__alt_data_end+0xfc0092d0>
 8009490:	a80b883a 	mov	r5,r21
 8009494:	8009883a 	mov	r4,r16
 8009498:	01800144 	movi	r6,5
 800949c:	000f883a 	mov	r7,zero
 80094a0:	800b20c0 	call	800b20c <__multadd>
 80094a4:	e009883a 	mov	r4,fp
 80094a8:	100b883a 	mov	r5,r2
 80094ac:	102b883a 	mov	r21,r2
 80094b0:	800bab80 	call	800bab8 <__mcmp>
 80094b4:	00bf860e 	bge	zero,r2,80092d0 <__alt_data_end+0xfc0092d0>
 80094b8:	d9800717 	ldw	r6,28(sp)
 80094bc:	00800c44 	movi	r2,49
 80094c0:	30800005 	stb	r2,0(r6)
 80094c4:	d8800517 	ldw	r2,20(sp)
 80094c8:	35c00044 	addi	r23,r6,1
 80094cc:	10800044 	addi	r2,r2,1
 80094d0:	d8800515 	stw	r2,20(sp)
 80094d4:	003f8206 	br	80092e0 <__alt_data_end+0xfc0092e0>
 80094d8:	903e981e 	bne	r18,zero,8008f3c <__alt_data_end+0xfc008f3c>
 80094dc:	003f8b06 	br	800930c <__alt_data_end+0xfc00930c>
 80094e0:	d9800517 	ldw	r6,20(sp)
 80094e4:	d8c00717 	ldw	r3,28(sp)
 80094e8:	00800c44 	movi	r2,49
 80094ec:	31800044 	addi	r6,r6,1
 80094f0:	d9800515 	stw	r6,20(sp)
 80094f4:	18800005 	stb	r2,0(r3)
 80094f8:	003ee906 	br	80090a0 <__alt_data_end+0xfc0090a0>
 80094fc:	dc000317 	ldw	r16,12(sp)
 8009500:	003d6006 	br	8008a84 <__alt_data_end+0xfc008a84>
 8009504:	8809883a 	mov	r4,r17
 8009508:	8012ec00 	call	8012ec0 <__floatsidf>
 800950c:	a009883a 	mov	r4,r20
 8009510:	a80b883a 	mov	r5,r21
 8009514:	100d883a 	mov	r6,r2
 8009518:	180f883a 	mov	r7,r3
 800951c:	8011cfc0 	call	8011cfc <__muldf3>
 8009520:	1009883a 	mov	r4,r2
 8009524:	180b883a 	mov	r5,r3
 8009528:	000d883a 	mov	r6,zero
 800952c:	01d00734 	movhi	r7,16412
 8009530:	801089c0 	call	801089c <__adddf3>
 8009534:	1023883a 	mov	r17,r2
 8009538:	00bf3034 	movhi	r2,64704
 800953c:	1885883a 	add	r2,r3,r2
 8009540:	d8800e15 	stw	r2,56(sp)
 8009544:	a009883a 	mov	r4,r20
 8009548:	a80b883a 	mov	r5,r21
 800954c:	000d883a 	mov	r6,zero
 8009550:	01d00534 	movhi	r7,16404
 8009554:	80125680 	call	8012568 <__subdf3>
 8009558:	d9c00e17 	ldw	r7,56(sp)
 800955c:	1009883a 	mov	r4,r2
 8009560:	180b883a 	mov	r5,r3
 8009564:	880d883a 	mov	r6,r17
 8009568:	102b883a 	mov	r21,r2
 800956c:	1829883a 	mov	r20,r3
 8009570:	8011b3c0 	call	8011b3c <__gedf2>
 8009574:	00807716 	blt	zero,r2,8009754 <_dtoa_r+0x1388>
 8009578:	d8800e17 	ldw	r2,56(sp)
 800957c:	a809883a 	mov	r4,r21
 8009580:	a00b883a 	mov	r5,r20
 8009584:	11e0003c 	xorhi	r7,r2,32768
 8009588:	880d883a 	mov	r6,r17
 800958c:	8011c1c0 	call	8011c1c <__ledf2>
 8009590:	103d6b0e 	bge	r2,zero,8008b40 <__alt_data_end+0xfc008b40>
 8009594:	002b883a 	mov	r21,zero
 8009598:	0023883a 	mov	r17,zero
 800959c:	003f4c06 	br	80092d0 <__alt_data_end+0xfc0092d0>
 80095a0:	d9800917 	ldw	r6,36(sp)
 80095a4:	e00b883a 	mov	r5,fp
 80095a8:	8009883a 	mov	r4,r16
 80095ac:	800b8300 	call	800b830 <__pow5mult>
 80095b0:	1039883a 	mov	fp,r2
 80095b4:	003e2706 	br	8008e54 <__alt_data_end+0xfc008e54>
 80095b8:	d8000b15 	stw	zero,44(sp)
 80095bc:	003c4906 	br	80086e4 <__alt_data_end+0xfc0086e4>
 80095c0:	d9000917 	ldw	r4,36(sp)
 80095c4:	d9800a17 	ldw	r6,40(sp)
 80095c8:	dd400915 	stw	r21,36(sp)
 80095cc:	a905c83a 	sub	r2,r21,r4
 80095d0:	308d883a 	add	r6,r6,r2
 80095d4:	d9800a15 	stw	r6,40(sp)
 80095d8:	002b883a 	mov	r21,zero
 80095dc:	003df206 	br	8008da8 <__alt_data_end+0xfc008da8>
 80095e0:	dc800e15 	stw	r18,56(sp)
 80095e4:	982b883a 	mov	r21,r19
 80095e8:	04400084 	movi	r17,2
 80095ec:	003c7406 	br	80087c0 <__alt_data_end+0xfc0087c0>
 80095f0:	04400044 	movi	r17,1
 80095f4:	dc400d15 	stw	r17,52(sp)
 80095f8:	dc400615 	stw	r17,24(sp)
 80095fc:	dc402215 	stw	r17,136(sp)
 8009600:	80001115 	stw	zero,68(r16)
 8009604:	000b883a 	mov	r5,zero
 8009608:	003c4a06 	br	8008734 <__alt_data_end+0xfc008734>
 800960c:	3023883a 	mov	r17,r6
 8009610:	003ffb06 	br	8009600 <__alt_data_end+0xfc009600>
 8009614:	1000021e 	bne	r2,zero,8009620 <_dtoa_r+0x1254>
 8009618:	4200004c 	andi	r8,r8,1
 800961c:	403e8f1e 	bne	r8,zero,800905c <__alt_data_end+0xfc00905c>
 8009620:	01000c04 	movi	r4,48
 8009624:	00000106 	br	800962c <_dtoa_r+0x1260>
 8009628:	102f883a 	mov	r23,r2
 800962c:	b8bfffc4 	addi	r2,r23,-1
 8009630:	10c00007 	ldb	r3,0(r2)
 8009634:	193ffc26 	beq	r3,r4,8009628 <__alt_data_end+0xfc009628>
 8009638:	003e9906 	br	80090a0 <__alt_data_end+0xfc0090a0>
 800963c:	d9000517 	ldw	r4,20(sp)
 8009640:	012fc83a 	sub	r23,zero,r4
 8009644:	b800ad26 	beq	r23,zero,80098fc <_dtoa_r+0x1530>
 8009648:	b88003cc 	andi	r2,r23,15
 800964c:	100490fa 	slli	r2,r2,3
 8009650:	00c20074 	movhi	r3,2049
 8009654:	18db8404 	addi	r3,r3,28176
 8009658:	1885883a 	add	r2,r3,r2
 800965c:	11800017 	ldw	r6,0(r2)
 8009660:	11c00117 	ldw	r7,4(r2)
 8009664:	b82fd13a 	srai	r23,r23,4
 8009668:	9009883a 	mov	r4,r18
 800966c:	980b883a 	mov	r5,r19
 8009670:	8011cfc0 	call	8011cfc <__muldf3>
 8009674:	1029883a 	mov	r20,r2
 8009678:	182b883a 	mov	r21,r3
 800967c:	b800f426 	beq	r23,zero,8009a50 <_dtoa_r+0x1684>
 8009680:	02020074 	movhi	r8,2049
 8009684:	421b7a04 	addi	r8,r8,28136
 8009688:	8029883a 	mov	r20,r16
 800968c:	04400084 	movi	r17,2
 8009690:	4021883a 	mov	r16,r8
 8009694:	b980004c 	andi	r6,r23,1
 8009698:	1009883a 	mov	r4,r2
 800969c:	b82fd07a 	srai	r23,r23,1
 80096a0:	180b883a 	mov	r5,r3
 80096a4:	30000426 	beq	r6,zero,80096b8 <_dtoa_r+0x12ec>
 80096a8:	81800017 	ldw	r6,0(r16)
 80096ac:	81c00117 	ldw	r7,4(r16)
 80096b0:	8c400044 	addi	r17,r17,1
 80096b4:	8011cfc0 	call	8011cfc <__muldf3>
 80096b8:	84000204 	addi	r16,r16,8
 80096bc:	b83ff51e 	bne	r23,zero,8009694 <__alt_data_end+0xfc009694>
 80096c0:	a021883a 	mov	r16,r20
 80096c4:	182b883a 	mov	r21,r3
 80096c8:	1029883a 	mov	r20,r2
 80096cc:	003c5506 	br	8008824 <__alt_data_end+0xfc008824>
 80096d0:	d9800517 	ldw	r6,20(sp)
 80096d4:	d9000717 	ldw	r4,28(sp)
 80096d8:	00c00c04 	movi	r3,48
 80096dc:	31800044 	addi	r6,r6,1
 80096e0:	d9800515 	stw	r6,20(sp)
 80096e4:	20c00005 	stb	r3,0(r4)
 80096e8:	02000c44 	movi	r8,49
 80096ec:	003da206 	br	8008d78 <__alt_data_end+0xfc008d78>
 80096f0:	89400117 	ldw	r5,4(r17)
 80096f4:	8009883a 	mov	r4,r16
 80096f8:	800b13c0 	call	800b13c <_Balloc>
 80096fc:	89800417 	ldw	r6,16(r17)
 8009700:	11000304 	addi	r4,r2,12
 8009704:	89400304 	addi	r5,r17,12
 8009708:	31800084 	addi	r6,r6,2
 800970c:	318d883a 	add	r6,r6,r6
 8009710:	318d883a 	add	r6,r6,r6
 8009714:	1027883a 	mov	r19,r2
 8009718:	800aea80 	call	800aea8 <memcpy>
 800971c:	8009883a 	mov	r4,r16
 8009720:	980b883a 	mov	r5,r19
 8009724:	01800044 	movi	r6,1
 8009728:	800b9700 	call	800b970 <__lshift>
 800972c:	1029883a 	mov	r20,r2
 8009730:	003e8606 	br	800914c <__alt_data_end+0xfc00914c>
 8009734:	00800e44 	movi	r2,57
 8009738:	90809526 	beq	r18,r2,8009990 <_dtoa_r+0x15c4>
 800973c:	92000044 	addi	r8,r18,1
 8009740:	003f2306 	br	80093d0 <__alt_data_end+0xfc0093d0>
 8009744:	9011883a 	mov	r8,r18
 8009748:	8825883a 	mov	r18,r17
 800974c:	a023883a 	mov	r17,r20
 8009750:	003e3706 	br	8009030 <__alt_data_end+0xfc009030>
 8009754:	002b883a 	mov	r21,zero
 8009758:	0023883a 	mov	r17,zero
 800975c:	003f5606 	br	80094b8 <__alt_data_end+0xfc0094b8>
 8009760:	51bfffc4 	addi	r6,r10,-1
 8009764:	300490fa 	slli	r2,r6,3
 8009768:	00c20074 	movhi	r3,2049
 800976c:	18db8404 	addi	r3,r3,28176
 8009770:	1885883a 	add	r2,r3,r2
 8009774:	d9c00e17 	ldw	r7,56(sp)
 8009778:	11000017 	ldw	r4,0(r2)
 800977c:	11400117 	ldw	r5,4(r2)
 8009780:	d8800717 	ldw	r2,28(sp)
 8009784:	d9801015 	stw	r6,64(sp)
 8009788:	880d883a 	mov	r6,r17
 800978c:	da801615 	stw	r10,88(sp)
 8009790:	15c00044 	addi	r23,r2,1
 8009794:	8011cfc0 	call	8011cfc <__muldf3>
 8009798:	a80b883a 	mov	r5,r21
 800979c:	a009883a 	mov	r4,r20
 80097a0:	d8c01115 	stw	r3,68(sp)
 80097a4:	d8800e15 	stw	r2,56(sp)
 80097a8:	8012e380 	call	8012e38 <__fixdfsi>
 80097ac:	1009883a 	mov	r4,r2
 80097b0:	1023883a 	mov	r17,r2
 80097b4:	8012ec00 	call	8012ec0 <__floatsidf>
 80097b8:	a009883a 	mov	r4,r20
 80097bc:	a80b883a 	mov	r5,r21
 80097c0:	100d883a 	mov	r6,r2
 80097c4:	180f883a 	mov	r7,r3
 80097c8:	80125680 	call	8012568 <__subdf3>
 80097cc:	1813883a 	mov	r9,r3
 80097d0:	d8c00717 	ldw	r3,28(sp)
 80097d4:	8c400c04 	addi	r17,r17,48
 80097d8:	1011883a 	mov	r8,r2
 80097dc:	1c400005 	stb	r17,0(r3)
 80097e0:	da801617 	ldw	r10,88(sp)
 80097e4:	00800044 	movi	r2,1
 80097e8:	50802326 	beq	r10,r2,8009878 <_dtoa_r+0x14ac>
 80097ec:	d8800717 	ldw	r2,28(sp)
 80097f0:	b82b883a 	mov	r21,r23
 80097f4:	dc001315 	stw	r16,76(sp)
 80097f8:	12a9883a 	add	r20,r2,r10
 80097fc:	4807883a 	mov	r3,r9
 8009800:	4005883a 	mov	r2,r8
 8009804:	dc801415 	stw	r18,80(sp)
 8009808:	000d883a 	mov	r6,zero
 800980c:	01d00934 	movhi	r7,16420
 8009810:	1009883a 	mov	r4,r2
 8009814:	180b883a 	mov	r5,r3
 8009818:	8011cfc0 	call	8011cfc <__muldf3>
 800981c:	180b883a 	mov	r5,r3
 8009820:	1009883a 	mov	r4,r2
 8009824:	1821883a 	mov	r16,r3
 8009828:	1025883a 	mov	r18,r2
 800982c:	8012e380 	call	8012e38 <__fixdfsi>
 8009830:	1009883a 	mov	r4,r2
 8009834:	1023883a 	mov	r17,r2
 8009838:	8012ec00 	call	8012ec0 <__floatsidf>
 800983c:	9009883a 	mov	r4,r18
 8009840:	800b883a 	mov	r5,r16
 8009844:	100d883a 	mov	r6,r2
 8009848:	180f883a 	mov	r7,r3
 800984c:	8c400c04 	addi	r17,r17,48
 8009850:	80125680 	call	8012568 <__subdf3>
 8009854:	ad400044 	addi	r21,r21,1
 8009858:	ac7fffc5 	stb	r17,-1(r21)
 800985c:	ad3fea1e 	bne	r21,r20,8009808 <__alt_data_end+0xfc009808>
 8009860:	1813883a 	mov	r9,r3
 8009864:	d8c01017 	ldw	r3,64(sp)
 8009868:	dc001317 	ldw	r16,76(sp)
 800986c:	dc801417 	ldw	r18,80(sp)
 8009870:	1011883a 	mov	r8,r2
 8009874:	b8ef883a 	add	r23,r23,r3
 8009878:	d9000e17 	ldw	r4,56(sp)
 800987c:	d9401117 	ldw	r5,68(sp)
 8009880:	000d883a 	mov	r6,zero
 8009884:	01cff834 	movhi	r7,16352
 8009888:	da001715 	stw	r8,92(sp)
 800988c:	da401515 	stw	r9,84(sp)
 8009890:	801089c0 	call	801089c <__adddf3>
 8009894:	da001717 	ldw	r8,92(sp)
 8009898:	da401517 	ldw	r9,84(sp)
 800989c:	1009883a 	mov	r4,r2
 80098a0:	400d883a 	mov	r6,r8
 80098a4:	480f883a 	mov	r7,r9
 80098a8:	180b883a 	mov	r5,r3
 80098ac:	8011c1c0 	call	8011c1c <__ledf2>
 80098b0:	da001717 	ldw	r8,92(sp)
 80098b4:	da401517 	ldw	r9,84(sp)
 80098b8:	10003b0e 	bge	r2,zero,80099a8 <_dtoa_r+0x15dc>
 80098bc:	d9001217 	ldw	r4,72(sp)
 80098c0:	bd7fffc3 	ldbu	r21,-1(r23)
 80098c4:	d9000515 	stw	r4,20(sp)
 80098c8:	003d1c06 	br	8008d3c <__alt_data_end+0xfc008d3c>
 80098cc:	d8c00817 	ldw	r3,32(sp)
 80098d0:	18a9c83a 	sub	r20,r3,r2
 80098d4:	0005883a 	mov	r2,zero
 80098d8:	003d3706 	br	8008db8 <__alt_data_end+0xfc008db8>
 80098dc:	00800044 	movi	r2,1
 80098e0:	003dd006 	br	8009024 <__alt_data_end+0xfc009024>
 80098e4:	d8c00217 	ldw	r3,8(sp)
 80098e8:	00800d84 	movi	r2,54
 80098ec:	dd400917 	ldw	r21,36(sp)
 80098f0:	10c5c83a 	sub	r2,r2,r3
 80098f4:	dd000817 	ldw	r20,32(sp)
 80098f8:	003d2f06 	br	8008db8 <__alt_data_end+0xfc008db8>
 80098fc:	9029883a 	mov	r20,r18
 8009900:	982b883a 	mov	r21,r19
 8009904:	04400084 	movi	r17,2
 8009908:	003bc606 	br	8008824 <__alt_data_end+0xfc008824>
 800990c:	d8800617 	ldw	r2,24(sp)
 8009910:	103efc26 	beq	r2,zero,8009504 <__alt_data_end+0xfc009504>
 8009914:	d8c00d17 	ldw	r3,52(sp)
 8009918:	00fc890e 	bge	zero,r3,8008b40 <__alt_data_end+0xfc008b40>
 800991c:	a80b883a 	mov	r5,r21
 8009920:	a009883a 	mov	r4,r20
 8009924:	000d883a 	mov	r6,zero
 8009928:	01d00934 	movhi	r7,16420
 800992c:	8011cfc0 	call	8011cfc <__muldf3>
 8009930:	89000044 	addi	r4,r17,1
 8009934:	1029883a 	mov	r20,r2
 8009938:	182b883a 	mov	r21,r3
 800993c:	8012ec00 	call	8012ec0 <__floatsidf>
 8009940:	a009883a 	mov	r4,r20
 8009944:	a80b883a 	mov	r5,r21
 8009948:	100d883a 	mov	r6,r2
 800994c:	180f883a 	mov	r7,r3
 8009950:	8011cfc0 	call	8011cfc <__muldf3>
 8009954:	1009883a 	mov	r4,r2
 8009958:	180b883a 	mov	r5,r3
 800995c:	000d883a 	mov	r6,zero
 8009960:	01d00734 	movhi	r7,16412
 8009964:	801089c0 	call	801089c <__adddf3>
 8009968:	d9000517 	ldw	r4,20(sp)
 800996c:	1023883a 	mov	r17,r2
 8009970:	00bf3034 	movhi	r2,64704
 8009974:	213fffc4 	addi	r4,r4,-1
 8009978:	1885883a 	add	r2,r3,r2
 800997c:	d9001215 	stw	r4,72(sp)
 8009980:	d8800e15 	stw	r2,56(sp)
 8009984:	da800d17 	ldw	r10,52(sp)
 8009988:	003bc306 	br	8008898 <__alt_data_end+0xfc008898>
 800998c:	b039883a 	mov	fp,r22
 8009990:	01000e44 	movi	r4,57
 8009994:	8825883a 	mov	r18,r17
 8009998:	9dc00044 	addi	r23,r19,1
 800999c:	99000005 	stb	r4,0(r19)
 80099a0:	a023883a 	mov	r17,r20
 80099a4:	003dae06 	br	8009060 <__alt_data_end+0xfc009060>
 80099a8:	d9800e17 	ldw	r6,56(sp)
 80099ac:	d9c01117 	ldw	r7,68(sp)
 80099b0:	0009883a 	mov	r4,zero
 80099b4:	014ff834 	movhi	r5,16352
 80099b8:	da001715 	stw	r8,92(sp)
 80099bc:	da401515 	stw	r9,84(sp)
 80099c0:	80125680 	call	8012568 <__subdf3>
 80099c4:	da001717 	ldw	r8,92(sp)
 80099c8:	da401517 	ldw	r9,84(sp)
 80099cc:	1009883a 	mov	r4,r2
 80099d0:	180b883a 	mov	r5,r3
 80099d4:	400d883a 	mov	r6,r8
 80099d8:	480f883a 	mov	r7,r9
 80099dc:	8011b3c0 	call	8011b3c <__gedf2>
 80099e0:	00bc570e 	bge	zero,r2,8008b40 <__alt_data_end+0xfc008b40>
 80099e4:	01000c04 	movi	r4,48
 80099e8:	00000106 	br	80099f0 <_dtoa_r+0x1624>
 80099ec:	102f883a 	mov	r23,r2
 80099f0:	b8bfffc4 	addi	r2,r23,-1
 80099f4:	10c00007 	ldb	r3,0(r2)
 80099f8:	193ffc26 	beq	r3,r4,80099ec <__alt_data_end+0xfc0099ec>
 80099fc:	d9801217 	ldw	r6,72(sp)
 8009a00:	d9800515 	stw	r6,20(sp)
 8009a04:	003c1f06 	br	8008a84 <__alt_data_end+0xfc008a84>
 8009a08:	d8801217 	ldw	r2,72(sp)
 8009a0c:	dc001117 	ldw	r16,68(sp)
 8009a10:	d8800515 	stw	r2,20(sp)
 8009a14:	003cc906 	br	8008d3c <__alt_data_end+0xfc008d3c>
 8009a18:	dd801317 	ldw	r22,76(sp)
 8009a1c:	dc001117 	ldw	r16,68(sp)
 8009a20:	dcc01417 	ldw	r19,80(sp)
 8009a24:	dc801017 	ldw	r18,64(sp)
 8009a28:	003c4506 	br	8008b40 <__alt_data_end+0xfc008b40>
 8009a2c:	103e5d1e 	bne	r2,zero,80093a4 <__alt_data_end+0xfc0093a4>
 8009a30:	4080004c 	andi	r2,r8,1
 8009a34:	103e5b26 	beq	r2,zero,80093a4 <__alt_data_end+0xfc0093a4>
 8009a38:	003e5706 	br	8009398 <__alt_data_end+0xfc009398>
 8009a3c:	d8c00317 	ldw	r3,12(sp)
 8009a40:	00800084 	movi	r2,2
 8009a44:	10c00a16 	blt	r2,r3,8009a70 <_dtoa_r+0x16a4>
 8009a48:	d9000d17 	ldw	r4,52(sp)
 8009a4c:	003e8306 	br	800945c <__alt_data_end+0xfc00945c>
 8009a50:	04400084 	movi	r17,2
 8009a54:	003b7306 	br	8008824 <__alt_data_end+0xfc008824>
 8009a58:	d9801217 	ldw	r6,72(sp)
 8009a5c:	d9800515 	stw	r6,20(sp)
 8009a60:	003cb606 	br	8008d3c <__alt_data_end+0xfc008d3c>
 8009a64:	d9001217 	ldw	r4,72(sp)
 8009a68:	d9000515 	stw	r4,20(sp)
 8009a6c:	003c0506 	br	8008a84 <__alt_data_end+0xfc008a84>
 8009a70:	d9800d17 	ldw	r6,52(sp)
 8009a74:	d9800615 	stw	r6,24(sp)
 8009a78:	003e8306 	br	8009488 <__alt_data_end+0xfc009488>
 8009a7c:	d9800317 	ldw	r6,12(sp)
 8009a80:	00800084 	movi	r2,2
 8009a84:	11800216 	blt	r2,r6,8009a90 <_dtoa_r+0x16c4>
 8009a88:	d8800d17 	ldw	r2,52(sp)
 8009a8c:	003da606 	br	8009128 <__alt_data_end+0xfc009128>
 8009a90:	d8800d17 	ldw	r2,52(sp)
 8009a94:	d8800615 	stw	r2,24(sp)
 8009a98:	003e7b06 	br	8009488 <__alt_data_end+0xfc009488>
 8009a9c:	05000044 	movi	r20,1
 8009aa0:	003b0506 	br	80086b8 <__alt_data_end+0xfc0086b8>
 8009aa4:	8009883a 	mov	r4,r16
 8009aa8:	80001115 	stw	zero,68(r16)
 8009aac:	000b883a 	mov	r5,zero
 8009ab0:	800b13c0 	call	800b13c <_Balloc>
 8009ab4:	d8800715 	stw	r2,28(sp)
 8009ab8:	d8c00717 	ldw	r3,28(sp)
 8009abc:	00bfffc4 	movi	r2,-1
 8009ac0:	01000044 	movi	r4,1
 8009ac4:	d8800615 	stw	r2,24(sp)
 8009ac8:	80c01015 	stw	r3,64(r16)
 8009acc:	d9000b15 	stw	r4,44(sp)
 8009ad0:	d8002215 	stw	zero,136(sp)
 8009ad4:	d8800d15 	stw	r2,52(sp)
 8009ad8:	003c1906 	br	8008b40 <__alt_data_end+0xfc008b40>
 8009adc:	193d2926 	beq	r3,r4,8008f84 <__alt_data_end+0xfc008f84>
 8009ae0:	00c00f04 	movi	r3,60
 8009ae4:	1885c83a 	sub	r2,r3,r2
 8009ae8:	003d7b06 	br	80090d8 <__alt_data_end+0xfc0090d8>
 8009aec:	000b883a 	mov	r5,zero
 8009af0:	003b1006 	br	8008734 <__alt_data_end+0xfc008734>

08009af4 <_fflush_r>:
 8009af4:	defffb04 	addi	sp,sp,-20
 8009af8:	dcc00315 	stw	r19,12(sp)
 8009afc:	dc000015 	stw	r16,0(sp)
 8009b00:	dfc00415 	stw	ra,16(sp)
 8009b04:	dc800215 	stw	r18,8(sp)
 8009b08:	dc400115 	stw	r17,4(sp)
 8009b0c:	2027883a 	mov	r19,r4
 8009b10:	2821883a 	mov	r16,r5
 8009b14:	20000226 	beq	r4,zero,8009b20 <_fflush_r+0x2c>
 8009b18:	20800e17 	ldw	r2,56(r4)
 8009b1c:	10005326 	beq	r2,zero,8009c6c <_fflush_r+0x178>
 8009b20:	8080030b 	ldhu	r2,12(r16)
 8009b24:	10ffffcc 	andi	r3,r2,65535
 8009b28:	18e0001c 	xori	r3,r3,32768
 8009b2c:	18e00004 	addi	r3,r3,-32768
 8009b30:	18002c26 	beq	r3,zero,8009be4 <_fflush_r+0xf0>
 8009b34:	10c0020c 	andi	r3,r2,8
 8009b38:	1800321e 	bne	r3,zero,8009c04 <_fflush_r+0x110>
 8009b3c:	80c00117 	ldw	r3,4(r16)
 8009b40:	10820014 	ori	r2,r2,2048
 8009b44:	8080030d 	sth	r2,12(r16)
 8009b48:	00c0570e 	bge	zero,r3,8009ca8 <_fflush_r+0x1b4>
 8009b4c:	82000a17 	ldw	r8,40(r16)
 8009b50:	40002426 	beq	r8,zero,8009be4 <_fflush_r+0xf0>
 8009b54:	9c400017 	ldw	r17,0(r19)
 8009b58:	10c4000c 	andi	r3,r2,4096
 8009b5c:	98000015 	stw	zero,0(r19)
 8009b60:	18004626 	beq	r3,zero,8009c7c <_fflush_r+0x188>
 8009b64:	81801417 	ldw	r6,80(r16)
 8009b68:	10c0010c 	andi	r3,r2,4
 8009b6c:	18000626 	beq	r3,zero,8009b88 <_fflush_r+0x94>
 8009b70:	80c00117 	ldw	r3,4(r16)
 8009b74:	80800c17 	ldw	r2,48(r16)
 8009b78:	30cdc83a 	sub	r6,r6,r3
 8009b7c:	10000226 	beq	r2,zero,8009b88 <_fflush_r+0x94>
 8009b80:	80800f17 	ldw	r2,60(r16)
 8009b84:	308dc83a 	sub	r6,r6,r2
 8009b88:	81400717 	ldw	r5,28(r16)
 8009b8c:	9809883a 	mov	r4,r19
 8009b90:	000f883a 	mov	r7,zero
 8009b94:	403ee83a 	callr	r8
 8009b98:	00ffffc4 	movi	r3,-1
 8009b9c:	10c04526 	beq	r2,r3,8009cb4 <_fflush_r+0x1c0>
 8009ba0:	80c0030b 	ldhu	r3,12(r16)
 8009ba4:	81000417 	ldw	r4,16(r16)
 8009ba8:	80000115 	stw	zero,4(r16)
 8009bac:	197dffcc 	andi	r5,r3,63487
 8009bb0:	8140030d 	sth	r5,12(r16)
 8009bb4:	81000015 	stw	r4,0(r16)
 8009bb8:	18c4000c 	andi	r3,r3,4096
 8009bbc:	18000126 	beq	r3,zero,8009bc4 <_fflush_r+0xd0>
 8009bc0:	80801415 	stw	r2,80(r16)
 8009bc4:	81400c17 	ldw	r5,48(r16)
 8009bc8:	9c400015 	stw	r17,0(r19)
 8009bcc:	28000526 	beq	r5,zero,8009be4 <_fflush_r+0xf0>
 8009bd0:	80801004 	addi	r2,r16,64
 8009bd4:	28800226 	beq	r5,r2,8009be0 <_fflush_r+0xec>
 8009bd8:	9809883a 	mov	r4,r19
 8009bdc:	800a2240 	call	800a224 <_free_r>
 8009be0:	80000c15 	stw	zero,48(r16)
 8009be4:	0005883a 	mov	r2,zero
 8009be8:	dfc00417 	ldw	ra,16(sp)
 8009bec:	dcc00317 	ldw	r19,12(sp)
 8009bf0:	dc800217 	ldw	r18,8(sp)
 8009bf4:	dc400117 	ldw	r17,4(sp)
 8009bf8:	dc000017 	ldw	r16,0(sp)
 8009bfc:	dec00504 	addi	sp,sp,20
 8009c00:	f800283a 	ret
 8009c04:	84800417 	ldw	r18,16(r16)
 8009c08:	903ff626 	beq	r18,zero,8009be4 <__alt_data_end+0xfc009be4>
 8009c0c:	84400017 	ldw	r17,0(r16)
 8009c10:	108000cc 	andi	r2,r2,3
 8009c14:	84800015 	stw	r18,0(r16)
 8009c18:	8ca3c83a 	sub	r17,r17,r18
 8009c1c:	10001526 	beq	r2,zero,8009c74 <_fflush_r+0x180>
 8009c20:	0005883a 	mov	r2,zero
 8009c24:	80800215 	stw	r2,8(r16)
 8009c28:	04400316 	blt	zero,r17,8009c38 <_fflush_r+0x144>
 8009c2c:	003fed06 	br	8009be4 <__alt_data_end+0xfc009be4>
 8009c30:	90a5883a 	add	r18,r18,r2
 8009c34:	047feb0e 	bge	zero,r17,8009be4 <__alt_data_end+0xfc009be4>
 8009c38:	80800917 	ldw	r2,36(r16)
 8009c3c:	81400717 	ldw	r5,28(r16)
 8009c40:	880f883a 	mov	r7,r17
 8009c44:	900d883a 	mov	r6,r18
 8009c48:	9809883a 	mov	r4,r19
 8009c4c:	103ee83a 	callr	r2
 8009c50:	88a3c83a 	sub	r17,r17,r2
 8009c54:	00bff616 	blt	zero,r2,8009c30 <__alt_data_end+0xfc009c30>
 8009c58:	80c0030b 	ldhu	r3,12(r16)
 8009c5c:	00bfffc4 	movi	r2,-1
 8009c60:	18c01014 	ori	r3,r3,64
 8009c64:	80c0030d 	sth	r3,12(r16)
 8009c68:	003fdf06 	br	8009be8 <__alt_data_end+0xfc009be8>
 8009c6c:	800a0b00 	call	800a0b0 <__sinit>
 8009c70:	003fab06 	br	8009b20 <__alt_data_end+0xfc009b20>
 8009c74:	80800517 	ldw	r2,20(r16)
 8009c78:	003fea06 	br	8009c24 <__alt_data_end+0xfc009c24>
 8009c7c:	81400717 	ldw	r5,28(r16)
 8009c80:	000d883a 	mov	r6,zero
 8009c84:	9809883a 	mov	r4,r19
 8009c88:	01c00044 	movi	r7,1
 8009c8c:	403ee83a 	callr	r8
 8009c90:	100d883a 	mov	r6,r2
 8009c94:	00bfffc4 	movi	r2,-1
 8009c98:	30801326 	beq	r6,r2,8009ce8 <_fflush_r+0x1f4>
 8009c9c:	8080030b 	ldhu	r2,12(r16)
 8009ca0:	82000a17 	ldw	r8,40(r16)
 8009ca4:	003fb006 	br	8009b68 <__alt_data_end+0xfc009b68>
 8009ca8:	80c00f17 	ldw	r3,60(r16)
 8009cac:	00ffa716 	blt	zero,r3,8009b4c <__alt_data_end+0xfc009b4c>
 8009cb0:	003fcc06 	br	8009be4 <__alt_data_end+0xfc009be4>
 8009cb4:	98c00017 	ldw	r3,0(r19)
 8009cb8:	183fb926 	beq	r3,zero,8009ba0 <__alt_data_end+0xfc009ba0>
 8009cbc:	01000744 	movi	r4,29
 8009cc0:	19000226 	beq	r3,r4,8009ccc <_fflush_r+0x1d8>
 8009cc4:	01000584 	movi	r4,22
 8009cc8:	1900101e 	bne	r3,r4,8009d0c <_fflush_r+0x218>
 8009ccc:	8080030b 	ldhu	r2,12(r16)
 8009cd0:	80c00417 	ldw	r3,16(r16)
 8009cd4:	80000115 	stw	zero,4(r16)
 8009cd8:	10bdffcc 	andi	r2,r2,63487
 8009cdc:	8080030d 	sth	r2,12(r16)
 8009ce0:	80c00015 	stw	r3,0(r16)
 8009ce4:	003fb706 	br	8009bc4 <__alt_data_end+0xfc009bc4>
 8009ce8:	98800017 	ldw	r2,0(r19)
 8009cec:	103feb26 	beq	r2,zero,8009c9c <__alt_data_end+0xfc009c9c>
 8009cf0:	00c00744 	movi	r3,29
 8009cf4:	10c00226 	beq	r2,r3,8009d00 <_fflush_r+0x20c>
 8009cf8:	00c00584 	movi	r3,22
 8009cfc:	10ffd61e 	bne	r2,r3,8009c58 <__alt_data_end+0xfc009c58>
 8009d00:	9c400015 	stw	r17,0(r19)
 8009d04:	0005883a 	mov	r2,zero
 8009d08:	003fb706 	br	8009be8 <__alt_data_end+0xfc009be8>
 8009d0c:	80c0030b 	ldhu	r3,12(r16)
 8009d10:	18c01014 	ori	r3,r3,64
 8009d14:	80c0030d 	sth	r3,12(r16)
 8009d18:	003fb306 	br	8009be8 <__alt_data_end+0xfc009be8>

08009d1c <fflush>:
 8009d1c:	20000526 	beq	r4,zero,8009d34 <fflush+0x18>
 8009d20:	008200b4 	movhi	r2,2050
 8009d24:	10a32e04 	addi	r2,r2,-29512
 8009d28:	200b883a 	mov	r5,r4
 8009d2c:	11000017 	ldw	r4,0(r2)
 8009d30:	8009af41 	jmpi	8009af4 <_fflush_r>
 8009d34:	008200b4 	movhi	r2,2050
 8009d38:	10a32d04 	addi	r2,r2,-29516
 8009d3c:	11000017 	ldw	r4,0(r2)
 8009d40:	01420074 	movhi	r5,2049
 8009d44:	2966bd04 	addi	r5,r5,-25868
 8009d48:	800aa701 	jmpi	800aa70 <_fwalk_reent>

08009d4c <__fp_lock>:
 8009d4c:	0005883a 	mov	r2,zero
 8009d50:	f800283a 	ret

08009d54 <__fp_unlock>:
 8009d54:	0005883a 	mov	r2,zero
 8009d58:	f800283a 	ret

08009d5c <_cleanup_r>:
 8009d5c:	01420074 	movhi	r5,2049
 8009d60:	297d1404 	addi	r5,r5,-2992
 8009d64:	800a9b81 	jmpi	800a9b8 <_fwalk>

08009d68 <__sinit.part.1>:
 8009d68:	defff604 	addi	sp,sp,-40
 8009d6c:	00c20074 	movhi	r3,2049
 8009d70:	dfc00915 	stw	ra,36(sp)
 8009d74:	df000815 	stw	fp,32(sp)
 8009d78:	ddc00715 	stw	r23,28(sp)
 8009d7c:	dd800615 	stw	r22,24(sp)
 8009d80:	dd400515 	stw	r21,20(sp)
 8009d84:	dd000415 	stw	r20,16(sp)
 8009d88:	dcc00315 	stw	r19,12(sp)
 8009d8c:	dc800215 	stw	r18,8(sp)
 8009d90:	dc400115 	stw	r17,4(sp)
 8009d94:	dc000015 	stw	r16,0(sp)
 8009d98:	18e75704 	addi	r3,r3,-25252
 8009d9c:	24000117 	ldw	r16,4(r4)
 8009da0:	20c00f15 	stw	r3,60(r4)
 8009da4:	07000044 	movi	fp,1
 8009da8:	00c000c4 	movi	r3,3
 8009dac:	2080bb04 	addi	r2,r4,748
 8009db0:	20c0b915 	stw	r3,740(r4)
 8009db4:	27000e15 	stw	fp,56(r4)
 8009db8:	2080ba15 	stw	r2,744(r4)
 8009dbc:	2000b815 	stw	zero,736(r4)
 8009dc0:	05c00204 	movi	r23,8
 8009dc4:	00800104 	movi	r2,4
 8009dc8:	2025883a 	mov	r18,r4
 8009dcc:	b80d883a 	mov	r6,r23
 8009dd0:	81001704 	addi	r4,r16,92
 8009dd4:	000b883a 	mov	r5,zero
 8009dd8:	80000015 	stw	zero,0(r16)
 8009ddc:	80000115 	stw	zero,4(r16)
 8009de0:	80000215 	stw	zero,8(r16)
 8009de4:	8080030d 	sth	r2,12(r16)
 8009de8:	80001915 	stw	zero,100(r16)
 8009dec:	8000038d 	sth	zero,14(r16)
 8009df0:	80000415 	stw	zero,16(r16)
 8009df4:	80000515 	stw	zero,20(r16)
 8009df8:	80000615 	stw	zero,24(r16)
 8009dfc:	80035280 	call	8003528 <memset>
 8009e00:	05820074 	movhi	r22,2049
 8009e04:	94400217 	ldw	r17,8(r18)
 8009e08:	05420074 	movhi	r21,2049
 8009e0c:	05020074 	movhi	r20,2049
 8009e10:	04c20074 	movhi	r19,2049
 8009e14:	b5b1e604 	addi	r22,r22,-14440
 8009e18:	ad71fd04 	addi	r21,r21,-14348
 8009e1c:	a5321c04 	addi	r20,r20,-14224
 8009e20:	9cf23304 	addi	r19,r19,-14132
 8009e24:	85800815 	stw	r22,32(r16)
 8009e28:	85400915 	stw	r21,36(r16)
 8009e2c:	85000a15 	stw	r20,40(r16)
 8009e30:	84c00b15 	stw	r19,44(r16)
 8009e34:	84000715 	stw	r16,28(r16)
 8009e38:	00800284 	movi	r2,10
 8009e3c:	89001704 	addi	r4,r17,92
 8009e40:	b80d883a 	mov	r6,r23
 8009e44:	000b883a 	mov	r5,zero
 8009e48:	88000015 	stw	zero,0(r17)
 8009e4c:	88000115 	stw	zero,4(r17)
 8009e50:	88000215 	stw	zero,8(r17)
 8009e54:	8880030d 	sth	r2,12(r17)
 8009e58:	88001915 	stw	zero,100(r17)
 8009e5c:	8f00038d 	sth	fp,14(r17)
 8009e60:	88000415 	stw	zero,16(r17)
 8009e64:	88000515 	stw	zero,20(r17)
 8009e68:	88000615 	stw	zero,24(r17)
 8009e6c:	80035280 	call	8003528 <memset>
 8009e70:	94000317 	ldw	r16,12(r18)
 8009e74:	00800484 	movi	r2,18
 8009e78:	8c400715 	stw	r17,28(r17)
 8009e7c:	8d800815 	stw	r22,32(r17)
 8009e80:	8d400915 	stw	r21,36(r17)
 8009e84:	8d000a15 	stw	r20,40(r17)
 8009e88:	8cc00b15 	stw	r19,44(r17)
 8009e8c:	8080030d 	sth	r2,12(r16)
 8009e90:	00800084 	movi	r2,2
 8009e94:	80000015 	stw	zero,0(r16)
 8009e98:	80000115 	stw	zero,4(r16)
 8009e9c:	80000215 	stw	zero,8(r16)
 8009ea0:	80001915 	stw	zero,100(r16)
 8009ea4:	8080038d 	sth	r2,14(r16)
 8009ea8:	80000415 	stw	zero,16(r16)
 8009eac:	80000515 	stw	zero,20(r16)
 8009eb0:	80000615 	stw	zero,24(r16)
 8009eb4:	81001704 	addi	r4,r16,92
 8009eb8:	000b883a 	mov	r5,zero
 8009ebc:	b80d883a 	mov	r6,r23
 8009ec0:	80035280 	call	8003528 <memset>
 8009ec4:	84000715 	stw	r16,28(r16)
 8009ec8:	85800815 	stw	r22,32(r16)
 8009ecc:	85400915 	stw	r21,36(r16)
 8009ed0:	85000a15 	stw	r20,40(r16)
 8009ed4:	84c00b15 	stw	r19,44(r16)
 8009ed8:	dfc00917 	ldw	ra,36(sp)
 8009edc:	df000817 	ldw	fp,32(sp)
 8009ee0:	ddc00717 	ldw	r23,28(sp)
 8009ee4:	dd800617 	ldw	r22,24(sp)
 8009ee8:	dd400517 	ldw	r21,20(sp)
 8009eec:	dd000417 	ldw	r20,16(sp)
 8009ef0:	dcc00317 	ldw	r19,12(sp)
 8009ef4:	dc800217 	ldw	r18,8(sp)
 8009ef8:	dc400117 	ldw	r17,4(sp)
 8009efc:	dc000017 	ldw	r16,0(sp)
 8009f00:	dec00a04 	addi	sp,sp,40
 8009f04:	f800283a 	ret

08009f08 <__sfmoreglue>:
 8009f08:	defffc04 	addi	sp,sp,-16
 8009f0c:	dc800215 	stw	r18,8(sp)
 8009f10:	2825883a 	mov	r18,r5
 8009f14:	dc000015 	stw	r16,0(sp)
 8009f18:	01401a04 	movi	r5,104
 8009f1c:	2021883a 	mov	r16,r4
 8009f20:	9009883a 	mov	r4,r18
 8009f24:	dfc00315 	stw	ra,12(sp)
 8009f28:	dc400115 	stw	r17,4(sp)
 8009f2c:	80027f80 	call	80027f8 <__mulsi3>
 8009f30:	8009883a 	mov	r4,r16
 8009f34:	11400304 	addi	r5,r2,12
 8009f38:	1023883a 	mov	r17,r2
 8009f3c:	8002d800 	call	8002d80 <_malloc_r>
 8009f40:	1021883a 	mov	r16,r2
 8009f44:	10000726 	beq	r2,zero,8009f64 <__sfmoreglue+0x5c>
 8009f48:	11000304 	addi	r4,r2,12
 8009f4c:	10000015 	stw	zero,0(r2)
 8009f50:	14800115 	stw	r18,4(r2)
 8009f54:	11000215 	stw	r4,8(r2)
 8009f58:	000b883a 	mov	r5,zero
 8009f5c:	880d883a 	mov	r6,r17
 8009f60:	80035280 	call	8003528 <memset>
 8009f64:	8005883a 	mov	r2,r16
 8009f68:	dfc00317 	ldw	ra,12(sp)
 8009f6c:	dc800217 	ldw	r18,8(sp)
 8009f70:	dc400117 	ldw	r17,4(sp)
 8009f74:	dc000017 	ldw	r16,0(sp)
 8009f78:	dec00404 	addi	sp,sp,16
 8009f7c:	f800283a 	ret

08009f80 <__sfp>:
 8009f80:	008200b4 	movhi	r2,2050
 8009f84:	defffb04 	addi	sp,sp,-20
 8009f88:	10a32d04 	addi	r2,r2,-29516
 8009f8c:	dc800215 	stw	r18,8(sp)
 8009f90:	14800017 	ldw	r18,0(r2)
 8009f94:	dcc00315 	stw	r19,12(sp)
 8009f98:	dfc00415 	stw	ra,16(sp)
 8009f9c:	90800e17 	ldw	r2,56(r18)
 8009fa0:	dc400115 	stw	r17,4(sp)
 8009fa4:	dc000015 	stw	r16,0(sp)
 8009fa8:	2027883a 	mov	r19,r4
 8009fac:	1000021e 	bne	r2,zero,8009fb8 <__sfp+0x38>
 8009fb0:	9009883a 	mov	r4,r18
 8009fb4:	8009d680 	call	8009d68 <__sinit.part.1>
 8009fb8:	9480b804 	addi	r18,r18,736
 8009fbc:	047fffc4 	movi	r17,-1
 8009fc0:	91400117 	ldw	r5,4(r18)
 8009fc4:	94000217 	ldw	r16,8(r18)
 8009fc8:	297fffc4 	addi	r5,r5,-1
 8009fcc:	28000a16 	blt	r5,zero,8009ff8 <__sfp+0x78>
 8009fd0:	8080030f 	ldh	r2,12(r16)
 8009fd4:	10000c26 	beq	r2,zero,800a008 <__sfp+0x88>
 8009fd8:	80c01d04 	addi	r3,r16,116
 8009fdc:	00000206 	br	8009fe8 <__sfp+0x68>
 8009fe0:	18bfe60f 	ldh	r2,-104(r3)
 8009fe4:	10000826 	beq	r2,zero,800a008 <__sfp+0x88>
 8009fe8:	297fffc4 	addi	r5,r5,-1
 8009fec:	1c3ffd04 	addi	r16,r3,-12
 8009ff0:	18c01a04 	addi	r3,r3,104
 8009ff4:	2c7ffa1e 	bne	r5,r17,8009fe0 <__alt_data_end+0xfc009fe0>
 8009ff8:	90800017 	ldw	r2,0(r18)
 8009ffc:	10001d26 	beq	r2,zero,800a074 <__sfp+0xf4>
 800a000:	1025883a 	mov	r18,r2
 800a004:	003fee06 	br	8009fc0 <__alt_data_end+0xfc009fc0>
 800a008:	00bfffc4 	movi	r2,-1
 800a00c:	8080038d 	sth	r2,14(r16)
 800a010:	00800044 	movi	r2,1
 800a014:	8080030d 	sth	r2,12(r16)
 800a018:	80001915 	stw	zero,100(r16)
 800a01c:	80000015 	stw	zero,0(r16)
 800a020:	80000215 	stw	zero,8(r16)
 800a024:	80000115 	stw	zero,4(r16)
 800a028:	80000415 	stw	zero,16(r16)
 800a02c:	80000515 	stw	zero,20(r16)
 800a030:	80000615 	stw	zero,24(r16)
 800a034:	81001704 	addi	r4,r16,92
 800a038:	000b883a 	mov	r5,zero
 800a03c:	01800204 	movi	r6,8
 800a040:	80035280 	call	8003528 <memset>
 800a044:	8005883a 	mov	r2,r16
 800a048:	80000c15 	stw	zero,48(r16)
 800a04c:	80000d15 	stw	zero,52(r16)
 800a050:	80001115 	stw	zero,68(r16)
 800a054:	80001215 	stw	zero,72(r16)
 800a058:	dfc00417 	ldw	ra,16(sp)
 800a05c:	dcc00317 	ldw	r19,12(sp)
 800a060:	dc800217 	ldw	r18,8(sp)
 800a064:	dc400117 	ldw	r17,4(sp)
 800a068:	dc000017 	ldw	r16,0(sp)
 800a06c:	dec00504 	addi	sp,sp,20
 800a070:	f800283a 	ret
 800a074:	9809883a 	mov	r4,r19
 800a078:	01400104 	movi	r5,4
 800a07c:	8009f080 	call	8009f08 <__sfmoreglue>
 800a080:	90800015 	stw	r2,0(r18)
 800a084:	103fde1e 	bne	r2,zero,800a000 <__alt_data_end+0xfc00a000>
 800a088:	00800304 	movi	r2,12
 800a08c:	98800015 	stw	r2,0(r19)
 800a090:	0005883a 	mov	r2,zero
 800a094:	003ff006 	br	800a058 <__alt_data_end+0xfc00a058>

0800a098 <_cleanup>:
 800a098:	008200b4 	movhi	r2,2050
 800a09c:	10a32d04 	addi	r2,r2,-29516
 800a0a0:	11000017 	ldw	r4,0(r2)
 800a0a4:	01420074 	movhi	r5,2049
 800a0a8:	297d1404 	addi	r5,r5,-2992
 800a0ac:	800a9b81 	jmpi	800a9b8 <_fwalk>

0800a0b0 <__sinit>:
 800a0b0:	20800e17 	ldw	r2,56(r4)
 800a0b4:	10000126 	beq	r2,zero,800a0bc <__sinit+0xc>
 800a0b8:	f800283a 	ret
 800a0bc:	8009d681 	jmpi	8009d68 <__sinit.part.1>

0800a0c0 <__sfp_lock_acquire>:
 800a0c0:	f800283a 	ret

0800a0c4 <__sfp_lock_release>:
 800a0c4:	f800283a 	ret

0800a0c8 <__sinit_lock_acquire>:
 800a0c8:	f800283a 	ret

0800a0cc <__sinit_lock_release>:
 800a0cc:	f800283a 	ret

0800a0d0 <__fp_lock_all>:
 800a0d0:	008200b4 	movhi	r2,2050
 800a0d4:	10a32e04 	addi	r2,r2,-29512
 800a0d8:	11000017 	ldw	r4,0(r2)
 800a0dc:	01420074 	movhi	r5,2049
 800a0e0:	29675304 	addi	r5,r5,-25268
 800a0e4:	800a9b81 	jmpi	800a9b8 <_fwalk>

0800a0e8 <__fp_unlock_all>:
 800a0e8:	008200b4 	movhi	r2,2050
 800a0ec:	10a32e04 	addi	r2,r2,-29512
 800a0f0:	11000017 	ldw	r4,0(r2)
 800a0f4:	01420074 	movhi	r5,2049
 800a0f8:	29675504 	addi	r5,r5,-25260
 800a0fc:	800a9b81 	jmpi	800a9b8 <_fwalk>

0800a100 <_malloc_trim_r>:
 800a100:	defffb04 	addi	sp,sp,-20
 800a104:	dcc00315 	stw	r19,12(sp)
 800a108:	04c20074 	movhi	r19,2049
 800a10c:	dc800215 	stw	r18,8(sp)
 800a110:	dc400115 	stw	r17,4(sp)
 800a114:	dc000015 	stw	r16,0(sp)
 800a118:	dfc00415 	stw	ra,16(sp)
 800a11c:	2821883a 	mov	r16,r5
 800a120:	9cdc2404 	addi	r19,r19,28816
 800a124:	2025883a 	mov	r18,r4
 800a128:	801384c0 	call	801384c <__malloc_lock>
 800a12c:	98800217 	ldw	r2,8(r19)
 800a130:	14400117 	ldw	r17,4(r2)
 800a134:	00bfff04 	movi	r2,-4
 800a138:	88a2703a 	and	r17,r17,r2
 800a13c:	8c21c83a 	sub	r16,r17,r16
 800a140:	8403fbc4 	addi	r16,r16,4079
 800a144:	8020d33a 	srli	r16,r16,12
 800a148:	0083ffc4 	movi	r2,4095
 800a14c:	843fffc4 	addi	r16,r16,-1
 800a150:	8020933a 	slli	r16,r16,12
 800a154:	1400060e 	bge	r2,r16,800a170 <_malloc_trim_r+0x70>
 800a158:	9009883a 	mov	r4,r18
 800a15c:	000b883a 	mov	r5,zero
 800a160:	80037800 	call	8003780 <_sbrk_r>
 800a164:	98c00217 	ldw	r3,8(r19)
 800a168:	1c47883a 	add	r3,r3,r17
 800a16c:	10c00a26 	beq	r2,r3,800a198 <_malloc_trim_r+0x98>
 800a170:	9009883a 	mov	r4,r18
 800a174:	801386c0 	call	801386c <__malloc_unlock>
 800a178:	0005883a 	mov	r2,zero
 800a17c:	dfc00417 	ldw	ra,16(sp)
 800a180:	dcc00317 	ldw	r19,12(sp)
 800a184:	dc800217 	ldw	r18,8(sp)
 800a188:	dc400117 	ldw	r17,4(sp)
 800a18c:	dc000017 	ldw	r16,0(sp)
 800a190:	dec00504 	addi	sp,sp,20
 800a194:	f800283a 	ret
 800a198:	9009883a 	mov	r4,r18
 800a19c:	040bc83a 	sub	r5,zero,r16
 800a1a0:	80037800 	call	8003780 <_sbrk_r>
 800a1a4:	00ffffc4 	movi	r3,-1
 800a1a8:	10c00d26 	beq	r2,r3,800a1e0 <_malloc_trim_r+0xe0>
 800a1ac:	00c200b4 	movhi	r3,2050
 800a1b0:	18ecad04 	addi	r3,r3,-19788
 800a1b4:	18800017 	ldw	r2,0(r3)
 800a1b8:	99000217 	ldw	r4,8(r19)
 800a1bc:	8c23c83a 	sub	r17,r17,r16
 800a1c0:	8c400054 	ori	r17,r17,1
 800a1c4:	1421c83a 	sub	r16,r2,r16
 800a1c8:	24400115 	stw	r17,4(r4)
 800a1cc:	9009883a 	mov	r4,r18
 800a1d0:	1c000015 	stw	r16,0(r3)
 800a1d4:	801386c0 	call	801386c <__malloc_unlock>
 800a1d8:	00800044 	movi	r2,1
 800a1dc:	003fe706 	br	800a17c <__alt_data_end+0xfc00a17c>
 800a1e0:	9009883a 	mov	r4,r18
 800a1e4:	000b883a 	mov	r5,zero
 800a1e8:	80037800 	call	8003780 <_sbrk_r>
 800a1ec:	99000217 	ldw	r4,8(r19)
 800a1f0:	014003c4 	movi	r5,15
 800a1f4:	1107c83a 	sub	r3,r2,r4
 800a1f8:	28ffdd0e 	bge	r5,r3,800a170 <__alt_data_end+0xfc00a170>
 800a1fc:	014200b4 	movhi	r5,2050
 800a200:	29632b04 	addi	r5,r5,-29524
 800a204:	29400017 	ldw	r5,0(r5)
 800a208:	18c00054 	ori	r3,r3,1
 800a20c:	20c00115 	stw	r3,4(r4)
 800a210:	00c200b4 	movhi	r3,2050
 800a214:	1145c83a 	sub	r2,r2,r5
 800a218:	18ecad04 	addi	r3,r3,-19788
 800a21c:	18800015 	stw	r2,0(r3)
 800a220:	003fd306 	br	800a170 <__alt_data_end+0xfc00a170>

0800a224 <_free_r>:
 800a224:	28004c26 	beq	r5,zero,800a358 <_free_r+0x134>
 800a228:	defffd04 	addi	sp,sp,-12
 800a22c:	dc400115 	stw	r17,4(sp)
 800a230:	dc000015 	stw	r16,0(sp)
 800a234:	2023883a 	mov	r17,r4
 800a238:	2821883a 	mov	r16,r5
 800a23c:	dfc00215 	stw	ra,8(sp)
 800a240:	801384c0 	call	801384c <__malloc_lock>
 800a244:	813fff17 	ldw	r4,-4(r16)
 800a248:	00bfff84 	movi	r2,-2
 800a24c:	02420074 	movhi	r9,2049
 800a250:	81bffe04 	addi	r6,r16,-8
 800a254:	2084703a 	and	r2,r4,r2
 800a258:	4a5c2404 	addi	r9,r9,28816
 800a25c:	308b883a 	add	r5,r6,r2
 800a260:	2a000117 	ldw	r8,4(r5)
 800a264:	49c00217 	ldw	r7,8(r9)
 800a268:	00ffff04 	movi	r3,-4
 800a26c:	40c6703a 	and	r3,r8,r3
 800a270:	39405326 	beq	r7,r5,800a3c0 <_free_r+0x19c>
 800a274:	28c00115 	stw	r3,4(r5)
 800a278:	2100004c 	andi	r4,r4,1
 800a27c:	2000091e 	bne	r4,zero,800a2a4 <_free_r+0x80>
 800a280:	81fffe17 	ldw	r7,-8(r16)
 800a284:	4a000204 	addi	r8,r9,8
 800a288:	31cdc83a 	sub	r6,r6,r7
 800a28c:	31000217 	ldw	r4,8(r6)
 800a290:	11c5883a 	add	r2,r2,r7
 800a294:	22006126 	beq	r4,r8,800a41c <_free_r+0x1f8>
 800a298:	31c00317 	ldw	r7,12(r6)
 800a29c:	21c00315 	stw	r7,12(r4)
 800a2a0:	39000215 	stw	r4,8(r7)
 800a2a4:	28c9883a 	add	r4,r5,r3
 800a2a8:	21c00117 	ldw	r7,4(r4)
 800a2ac:	39c0004c 	andi	r7,r7,1
 800a2b0:	38000d1e 	bne	r7,zero,800a2e8 <_free_r+0xc4>
 800a2b4:	29000217 	ldw	r4,8(r5)
 800a2b8:	10c5883a 	add	r2,r2,r3
 800a2bc:	00c20074 	movhi	r3,2049
 800a2c0:	18dc2604 	addi	r3,r3,28824
 800a2c4:	20c07526 	beq	r4,r3,800a49c <_free_r+0x278>
 800a2c8:	29c00317 	ldw	r7,12(r5)
 800a2cc:	11400054 	ori	r5,r2,1
 800a2d0:	3087883a 	add	r3,r6,r2
 800a2d4:	21c00315 	stw	r7,12(r4)
 800a2d8:	39000215 	stw	r4,8(r7)
 800a2dc:	31400115 	stw	r5,4(r6)
 800a2e0:	18800015 	stw	r2,0(r3)
 800a2e4:	00000406 	br	800a2f8 <_free_r+0xd4>
 800a2e8:	10c00054 	ori	r3,r2,1
 800a2ec:	30c00115 	stw	r3,4(r6)
 800a2f0:	3087883a 	add	r3,r6,r2
 800a2f4:	18800015 	stw	r2,0(r3)
 800a2f8:	00c07fc4 	movi	r3,511
 800a2fc:	18801736 	bltu	r3,r2,800a35c <_free_r+0x138>
 800a300:	1004d0fa 	srli	r2,r2,3
 800a304:	01400044 	movi	r5,1
 800a308:	49000117 	ldw	r4,4(r9)
 800a30c:	1087883a 	add	r3,r2,r2
 800a310:	18c7883a 	add	r3,r3,r3
 800a314:	1005d0ba 	srai	r2,r2,2
 800a318:	18c7883a 	add	r3,r3,r3
 800a31c:	1a47883a 	add	r3,r3,r9
 800a320:	19c00217 	ldw	r7,8(r3)
 800a324:	2884983a 	sll	r2,r5,r2
 800a328:	30c00315 	stw	r3,12(r6)
 800a32c:	31c00215 	stw	r7,8(r6)
 800a330:	1104b03a 	or	r2,r2,r4
 800a334:	19800215 	stw	r6,8(r3)
 800a338:	48800115 	stw	r2,4(r9)
 800a33c:	39800315 	stw	r6,12(r7)
 800a340:	8809883a 	mov	r4,r17
 800a344:	dfc00217 	ldw	ra,8(sp)
 800a348:	dc400117 	ldw	r17,4(sp)
 800a34c:	dc000017 	ldw	r16,0(sp)
 800a350:	dec00304 	addi	sp,sp,12
 800a354:	801386c1 	jmpi	801386c <__malloc_unlock>
 800a358:	f800283a 	ret
 800a35c:	1006d27a 	srli	r3,r2,9
 800a360:	01000104 	movi	r4,4
 800a364:	20c04036 	bltu	r4,r3,800a468 <_free_r+0x244>
 800a368:	1006d1ba 	srli	r3,r2,6
 800a36c:	19400e04 	addi	r5,r3,56
 800a370:	2947883a 	add	r3,r5,r5
 800a374:	18c7883a 	add	r3,r3,r3
 800a378:	18c7883a 	add	r3,r3,r3
 800a37c:	1a49883a 	add	r4,r3,r9
 800a380:	20c00217 	ldw	r3,8(r4)
 800a384:	01c20074 	movhi	r7,2049
 800a388:	39dc2404 	addi	r7,r7,28816
 800a38c:	19003b26 	beq	r3,r4,800a47c <_free_r+0x258>
 800a390:	01ffff04 	movi	r7,-4
 800a394:	19400117 	ldw	r5,4(r3)
 800a398:	29ca703a 	and	r5,r5,r7
 800a39c:	1140022e 	bgeu	r2,r5,800a3a8 <_free_r+0x184>
 800a3a0:	18c00217 	ldw	r3,8(r3)
 800a3a4:	20fffb1e 	bne	r4,r3,800a394 <__alt_data_end+0xfc00a394>
 800a3a8:	18800317 	ldw	r2,12(r3)
 800a3ac:	30800315 	stw	r2,12(r6)
 800a3b0:	30c00215 	stw	r3,8(r6)
 800a3b4:	11800215 	stw	r6,8(r2)
 800a3b8:	19800315 	stw	r6,12(r3)
 800a3bc:	003fe006 	br	800a340 <__alt_data_end+0xfc00a340>
 800a3c0:	2100004c 	andi	r4,r4,1
 800a3c4:	1885883a 	add	r2,r3,r2
 800a3c8:	2000071e 	bne	r4,zero,800a3e8 <_free_r+0x1c4>
 800a3cc:	817ffe17 	ldw	r5,-8(r16)
 800a3d0:	314dc83a 	sub	r6,r6,r5
 800a3d4:	30c00317 	ldw	r3,12(r6)
 800a3d8:	31000217 	ldw	r4,8(r6)
 800a3dc:	1145883a 	add	r2,r2,r5
 800a3e0:	20c00315 	stw	r3,12(r4)
 800a3e4:	19000215 	stw	r4,8(r3)
 800a3e8:	10c00054 	ori	r3,r2,1
 800a3ec:	30c00115 	stw	r3,4(r6)
 800a3f0:	00c200b4 	movhi	r3,2050
 800a3f4:	18e32c04 	addi	r3,r3,-29520
 800a3f8:	18c00017 	ldw	r3,0(r3)
 800a3fc:	49800215 	stw	r6,8(r9)
 800a400:	10ffcf36 	bltu	r2,r3,800a340 <__alt_data_end+0xfc00a340>
 800a404:	008200b4 	movhi	r2,2050
 800a408:	10aa6104 	addi	r2,r2,-22140
 800a40c:	11400017 	ldw	r5,0(r2)
 800a410:	8809883a 	mov	r4,r17
 800a414:	800a1000 	call	800a100 <_malloc_trim_r>
 800a418:	003fc906 	br	800a340 <__alt_data_end+0xfc00a340>
 800a41c:	28c9883a 	add	r4,r5,r3
 800a420:	21000117 	ldw	r4,4(r4)
 800a424:	2100004c 	andi	r4,r4,1
 800a428:	20000a1e 	bne	r4,zero,800a454 <_free_r+0x230>
 800a42c:	29000317 	ldw	r4,12(r5)
 800a430:	29400217 	ldw	r5,8(r5)
 800a434:	10c5883a 	add	r2,r2,r3
 800a438:	10c00054 	ori	r3,r2,1
 800a43c:	29000315 	stw	r4,12(r5)
 800a440:	21400215 	stw	r5,8(r4)
 800a444:	30c00115 	stw	r3,4(r6)
 800a448:	308d883a 	add	r6,r6,r2
 800a44c:	30800015 	stw	r2,0(r6)
 800a450:	003fbb06 	br	800a340 <__alt_data_end+0xfc00a340>
 800a454:	10c00054 	ori	r3,r2,1
 800a458:	30c00115 	stw	r3,4(r6)
 800a45c:	308d883a 	add	r6,r6,r2
 800a460:	30800015 	stw	r2,0(r6)
 800a464:	003fb606 	br	800a340 <__alt_data_end+0xfc00a340>
 800a468:	01000504 	movi	r4,20
 800a46c:	20c01436 	bltu	r4,r3,800a4c0 <_free_r+0x29c>
 800a470:	194016c4 	addi	r5,r3,91
 800a474:	2947883a 	add	r3,r5,r5
 800a478:	003fbe06 	br	800a374 <__alt_data_end+0xfc00a374>
 800a47c:	280bd0ba 	srai	r5,r5,2
 800a480:	00800044 	movi	r2,1
 800a484:	39000117 	ldw	r4,4(r7)
 800a488:	114a983a 	sll	r5,r2,r5
 800a48c:	1805883a 	mov	r2,r3
 800a490:	2908b03a 	or	r4,r5,r4
 800a494:	39000115 	stw	r4,4(r7)
 800a498:	003fc406 	br	800a3ac <__alt_data_end+0xfc00a3ac>
 800a49c:	49800515 	stw	r6,20(r9)
 800a4a0:	49800415 	stw	r6,16(r9)
 800a4a4:	10c00054 	ori	r3,r2,1
 800a4a8:	31000315 	stw	r4,12(r6)
 800a4ac:	31000215 	stw	r4,8(r6)
 800a4b0:	30c00115 	stw	r3,4(r6)
 800a4b4:	308d883a 	add	r6,r6,r2
 800a4b8:	30800015 	stw	r2,0(r6)
 800a4bc:	003fa006 	br	800a340 <__alt_data_end+0xfc00a340>
 800a4c0:	01001504 	movi	r4,84
 800a4c4:	20c00436 	bltu	r4,r3,800a4d8 <_free_r+0x2b4>
 800a4c8:	1006d33a 	srli	r3,r2,12
 800a4cc:	19401b84 	addi	r5,r3,110
 800a4d0:	2947883a 	add	r3,r5,r5
 800a4d4:	003fa706 	br	800a374 <__alt_data_end+0xfc00a374>
 800a4d8:	01005504 	movi	r4,340
 800a4dc:	20c00436 	bltu	r4,r3,800a4f0 <_free_r+0x2cc>
 800a4e0:	1006d3fa 	srli	r3,r2,15
 800a4e4:	19401dc4 	addi	r5,r3,119
 800a4e8:	2947883a 	add	r3,r5,r5
 800a4ec:	003fa106 	br	800a374 <__alt_data_end+0xfc00a374>
 800a4f0:	01015504 	movi	r4,1364
 800a4f4:	20c00436 	bltu	r4,r3,800a508 <_free_r+0x2e4>
 800a4f8:	1006d4ba 	srli	r3,r2,18
 800a4fc:	19401f04 	addi	r5,r3,124
 800a500:	2947883a 	add	r3,r5,r5
 800a504:	003f9b06 	br	800a374 <__alt_data_end+0xfc00a374>
 800a508:	00c03f04 	movi	r3,252
 800a50c:	01401f84 	movi	r5,126
 800a510:	003f9806 	br	800a374 <__alt_data_end+0xfc00a374>

0800a514 <__sfvwrite_r>:
 800a514:	30800217 	ldw	r2,8(r6)
 800a518:	10004526 	beq	r2,zero,800a630 <__sfvwrite_r+0x11c>
 800a51c:	28c0030b 	ldhu	r3,12(r5)
 800a520:	defff404 	addi	sp,sp,-48
 800a524:	dd400715 	stw	r21,28(sp)
 800a528:	dcc00515 	stw	r19,20(sp)
 800a52c:	dc000215 	stw	r16,8(sp)
 800a530:	dfc00b15 	stw	ra,44(sp)
 800a534:	df000a15 	stw	fp,40(sp)
 800a538:	ddc00915 	stw	r23,36(sp)
 800a53c:	dd800815 	stw	r22,32(sp)
 800a540:	dd000615 	stw	r20,24(sp)
 800a544:	dc800415 	stw	r18,16(sp)
 800a548:	dc400315 	stw	r17,12(sp)
 800a54c:	1880020c 	andi	r2,r3,8
 800a550:	2821883a 	mov	r16,r5
 800a554:	202b883a 	mov	r21,r4
 800a558:	3027883a 	mov	r19,r6
 800a55c:	10002526 	beq	r2,zero,800a5f4 <__sfvwrite_r+0xe0>
 800a560:	28800417 	ldw	r2,16(r5)
 800a564:	10002326 	beq	r2,zero,800a5f4 <__sfvwrite_r+0xe0>
 800a568:	1880008c 	andi	r2,r3,2
 800a56c:	9c400017 	ldw	r17,0(r19)
 800a570:	10003126 	beq	r2,zero,800a638 <__sfvwrite_r+0x124>
 800a574:	0029883a 	mov	r20,zero
 800a578:	0025883a 	mov	r18,zero
 800a57c:	05810004 	movi	r22,1024
 800a580:	a00d883a 	mov	r6,r20
 800a584:	a809883a 	mov	r4,r21
 800a588:	90002526 	beq	r18,zero,800a620 <__sfvwrite_r+0x10c>
 800a58c:	900f883a 	mov	r7,r18
 800a590:	81400717 	ldw	r5,28(r16)
 800a594:	b480012e 	bgeu	r22,r18,800a59c <__sfvwrite_r+0x88>
 800a598:	01c10004 	movi	r7,1024
 800a59c:	80800917 	ldw	r2,36(r16)
 800a5a0:	103ee83a 	callr	r2
 800a5a4:	0080510e 	bge	zero,r2,800a6ec <__sfvwrite_r+0x1d8>
 800a5a8:	98c00217 	ldw	r3,8(r19)
 800a5ac:	a0a9883a 	add	r20,r20,r2
 800a5b0:	90a5c83a 	sub	r18,r18,r2
 800a5b4:	1885c83a 	sub	r2,r3,r2
 800a5b8:	98800215 	stw	r2,8(r19)
 800a5bc:	103ff01e 	bne	r2,zero,800a580 <__alt_data_end+0xfc00a580>
 800a5c0:	0005883a 	mov	r2,zero
 800a5c4:	dfc00b17 	ldw	ra,44(sp)
 800a5c8:	df000a17 	ldw	fp,40(sp)
 800a5cc:	ddc00917 	ldw	r23,36(sp)
 800a5d0:	dd800817 	ldw	r22,32(sp)
 800a5d4:	dd400717 	ldw	r21,28(sp)
 800a5d8:	dd000617 	ldw	r20,24(sp)
 800a5dc:	dcc00517 	ldw	r19,20(sp)
 800a5e0:	dc800417 	ldw	r18,16(sp)
 800a5e4:	dc400317 	ldw	r17,12(sp)
 800a5e8:	dc000217 	ldw	r16,8(sp)
 800a5ec:	dec00c04 	addi	sp,sp,48
 800a5f0:	f800283a 	ret
 800a5f4:	a809883a 	mov	r4,r21
 800a5f8:	800b883a 	mov	r5,r16
 800a5fc:	80080740 	call	8008074 <__swsetup_r>
 800a600:	80c0030b 	ldhu	r3,12(r16)
 800a604:	103fd826 	beq	r2,zero,800a568 <__alt_data_end+0xfc00a568>
 800a608:	18c01014 	ori	r3,r3,64
 800a60c:	80c0030d 	sth	r3,12(r16)
 800a610:	00c00244 	movi	r3,9
 800a614:	00bfffc4 	movi	r2,-1
 800a618:	a8c00015 	stw	r3,0(r21)
 800a61c:	003fe906 	br	800a5c4 <__alt_data_end+0xfc00a5c4>
 800a620:	8d000017 	ldw	r20,0(r17)
 800a624:	8c800117 	ldw	r18,4(r17)
 800a628:	8c400204 	addi	r17,r17,8
 800a62c:	003fd406 	br	800a580 <__alt_data_end+0xfc00a580>
 800a630:	0005883a 	mov	r2,zero
 800a634:	f800283a 	ret
 800a638:	1880004c 	andi	r2,r3,1
 800a63c:	1000301e 	bne	r2,zero,800a700 <__sfvwrite_r+0x1ec>
 800a640:	002f883a 	mov	r23,zero
 800a644:	0025883a 	mov	r18,zero
 800a648:	90001c26 	beq	r18,zero,800a6bc <__sfvwrite_r+0x1a8>
 800a64c:	1880800c 	andi	r2,r3,512
 800a650:	85000217 	ldw	r20,8(r16)
 800a654:	10006c26 	beq	r2,zero,800a808 <__sfvwrite_r+0x2f4>
 800a658:	a02d883a 	mov	r22,r20
 800a65c:	95008536 	bltu	r18,r20,800a874 <__sfvwrite_r+0x360>
 800a660:	1881200c 	andi	r2,r3,1152
 800a664:	10009d1e 	bne	r2,zero,800a8dc <__sfvwrite_r+0x3c8>
 800a668:	81000017 	ldw	r4,0(r16)
 800a66c:	a039883a 	mov	fp,r20
 800a670:	9029883a 	mov	r20,r18
 800a674:	b80b883a 	mov	r5,r23
 800a678:	b00d883a 	mov	r6,r22
 800a67c:	800afe00 	call	800afe0 <memmove>
 800a680:	80c00217 	ldw	r3,8(r16)
 800a684:	81000017 	ldw	r4,0(r16)
 800a688:	9005883a 	mov	r2,r18
 800a68c:	1f39c83a 	sub	fp,r3,fp
 800a690:	258f883a 	add	r7,r4,r22
 800a694:	87000215 	stw	fp,8(r16)
 800a698:	81c00015 	stw	r7,0(r16)
 800a69c:	98c00217 	ldw	r3,8(r19)
 800a6a0:	b8af883a 	add	r23,r23,r2
 800a6a4:	90a5c83a 	sub	r18,r18,r2
 800a6a8:	1d05c83a 	sub	r2,r3,r20
 800a6ac:	98800215 	stw	r2,8(r19)
 800a6b0:	103fc326 	beq	r2,zero,800a5c0 <__alt_data_end+0xfc00a5c0>
 800a6b4:	80c0030b 	ldhu	r3,12(r16)
 800a6b8:	903fe41e 	bne	r18,zero,800a64c <__alt_data_end+0xfc00a64c>
 800a6bc:	8dc00017 	ldw	r23,0(r17)
 800a6c0:	8c800117 	ldw	r18,4(r17)
 800a6c4:	8c400204 	addi	r17,r17,8
 800a6c8:	003fdf06 	br	800a648 <__alt_data_end+0xfc00a648>
 800a6cc:	800c1840 	call	800c184 <_realloc_r>
 800a6d0:	102d883a 	mov	r22,r2
 800a6d4:	1000a01e 	bne	r2,zero,800a958 <__sfvwrite_r+0x444>
 800a6d8:	81400417 	ldw	r5,16(r16)
 800a6dc:	a809883a 	mov	r4,r21
 800a6e0:	800a2240 	call	800a224 <_free_r>
 800a6e4:	00800304 	movi	r2,12
 800a6e8:	a8800015 	stw	r2,0(r21)
 800a6ec:	80c0030b 	ldhu	r3,12(r16)
 800a6f0:	00bfffc4 	movi	r2,-1
 800a6f4:	18c01014 	ori	r3,r3,64
 800a6f8:	80c0030d 	sth	r3,12(r16)
 800a6fc:	003fb106 	br	800a5c4 <__alt_data_end+0xfc00a5c4>
 800a700:	0029883a 	mov	r20,zero
 800a704:	0011883a 	mov	r8,zero
 800a708:	0039883a 	mov	fp,zero
 800a70c:	0025883a 	mov	r18,zero
 800a710:	90001f26 	beq	r18,zero,800a790 <__sfvwrite_r+0x27c>
 800a714:	40006826 	beq	r8,zero,800a8b8 <__sfvwrite_r+0x3a4>
 800a718:	a02f883a 	mov	r23,r20
 800a71c:	9500012e 	bgeu	r18,r20,800a724 <__sfvwrite_r+0x210>
 800a720:	902f883a 	mov	r23,r18
 800a724:	81000017 	ldw	r4,0(r16)
 800a728:	80800417 	ldw	r2,16(r16)
 800a72c:	b82d883a 	mov	r22,r23
 800a730:	81800217 	ldw	r6,8(r16)
 800a734:	81c00517 	ldw	r7,20(r16)
 800a738:	1100022e 	bgeu	r2,r4,800a744 <__sfvwrite_r+0x230>
 800a73c:	31c7883a 	add	r3,r6,r7
 800a740:	1dc01816 	blt	r3,r23,800a7a4 <__sfvwrite_r+0x290>
 800a744:	b9c03f16 	blt	r23,r7,800a844 <__sfvwrite_r+0x330>
 800a748:	80800917 	ldw	r2,36(r16)
 800a74c:	81400717 	ldw	r5,28(r16)
 800a750:	a809883a 	mov	r4,r21
 800a754:	da000115 	stw	r8,4(sp)
 800a758:	e00d883a 	mov	r6,fp
 800a75c:	103ee83a 	callr	r2
 800a760:	102d883a 	mov	r22,r2
 800a764:	da000117 	ldw	r8,4(sp)
 800a768:	00bfe00e 	bge	zero,r2,800a6ec <__alt_data_end+0xfc00a6ec>
 800a76c:	a5a9c83a 	sub	r20,r20,r22
 800a770:	a0001f26 	beq	r20,zero,800a7f0 <__sfvwrite_r+0x2dc>
 800a774:	98800217 	ldw	r2,8(r19)
 800a778:	e5b9883a 	add	fp,fp,r22
 800a77c:	95a5c83a 	sub	r18,r18,r22
 800a780:	15adc83a 	sub	r22,r2,r22
 800a784:	9d800215 	stw	r22,8(r19)
 800a788:	b03f8d26 	beq	r22,zero,800a5c0 <__alt_data_end+0xfc00a5c0>
 800a78c:	903fe11e 	bne	r18,zero,800a714 <__alt_data_end+0xfc00a714>
 800a790:	8f000017 	ldw	fp,0(r17)
 800a794:	8c800117 	ldw	r18,4(r17)
 800a798:	0011883a 	mov	r8,zero
 800a79c:	8c400204 	addi	r17,r17,8
 800a7a0:	003fdb06 	br	800a710 <__alt_data_end+0xfc00a710>
 800a7a4:	180d883a 	mov	r6,r3
 800a7a8:	e00b883a 	mov	r5,fp
 800a7ac:	da000115 	stw	r8,4(sp)
 800a7b0:	d8c00015 	stw	r3,0(sp)
 800a7b4:	800afe00 	call	800afe0 <memmove>
 800a7b8:	d8c00017 	ldw	r3,0(sp)
 800a7bc:	80800017 	ldw	r2,0(r16)
 800a7c0:	a809883a 	mov	r4,r21
 800a7c4:	800b883a 	mov	r5,r16
 800a7c8:	10c5883a 	add	r2,r2,r3
 800a7cc:	80800015 	stw	r2,0(r16)
 800a7d0:	d8c00015 	stw	r3,0(sp)
 800a7d4:	8009af40 	call	8009af4 <_fflush_r>
 800a7d8:	d8c00017 	ldw	r3,0(sp)
 800a7dc:	da000117 	ldw	r8,4(sp)
 800a7e0:	103fc21e 	bne	r2,zero,800a6ec <__alt_data_end+0xfc00a6ec>
 800a7e4:	182d883a 	mov	r22,r3
 800a7e8:	a5a9c83a 	sub	r20,r20,r22
 800a7ec:	a03fe11e 	bne	r20,zero,800a774 <__alt_data_end+0xfc00a774>
 800a7f0:	a809883a 	mov	r4,r21
 800a7f4:	800b883a 	mov	r5,r16
 800a7f8:	8009af40 	call	8009af4 <_fflush_r>
 800a7fc:	103fbb1e 	bne	r2,zero,800a6ec <__alt_data_end+0xfc00a6ec>
 800a800:	0011883a 	mov	r8,zero
 800a804:	003fdb06 	br	800a774 <__alt_data_end+0xfc00a774>
 800a808:	81000017 	ldw	r4,0(r16)
 800a80c:	80800417 	ldw	r2,16(r16)
 800a810:	1100012e 	bgeu	r2,r4,800a818 <__sfvwrite_r+0x304>
 800a814:	a4805a36 	bltu	r20,r18,800a980 <__sfvwrite_r+0x46c>
 800a818:	81c00517 	ldw	r7,20(r16)
 800a81c:	91c01a36 	bltu	r18,r7,800a888 <__sfvwrite_r+0x374>
 800a820:	80800917 	ldw	r2,36(r16)
 800a824:	81400717 	ldw	r5,28(r16)
 800a828:	a809883a 	mov	r4,r21
 800a82c:	b80d883a 	mov	r6,r23
 800a830:	103ee83a 	callr	r2
 800a834:	1029883a 	mov	r20,r2
 800a838:	00bfac0e 	bge	zero,r2,800a6ec <__alt_data_end+0xfc00a6ec>
 800a83c:	a005883a 	mov	r2,r20
 800a840:	003f9606 	br	800a69c <__alt_data_end+0xfc00a69c>
 800a844:	b80d883a 	mov	r6,r23
 800a848:	e00b883a 	mov	r5,fp
 800a84c:	da000115 	stw	r8,4(sp)
 800a850:	800afe00 	call	800afe0 <memmove>
 800a854:	80800217 	ldw	r2,8(r16)
 800a858:	80c00017 	ldw	r3,0(r16)
 800a85c:	da000117 	ldw	r8,4(sp)
 800a860:	15c5c83a 	sub	r2,r2,r23
 800a864:	1def883a 	add	r23,r3,r23
 800a868:	80800215 	stw	r2,8(r16)
 800a86c:	85c00015 	stw	r23,0(r16)
 800a870:	003fbe06 	br	800a76c <__alt_data_end+0xfc00a76c>
 800a874:	81000017 	ldw	r4,0(r16)
 800a878:	9039883a 	mov	fp,r18
 800a87c:	9029883a 	mov	r20,r18
 800a880:	902d883a 	mov	r22,r18
 800a884:	003f7b06 	br	800a674 <__alt_data_end+0xfc00a674>
 800a888:	b80b883a 	mov	r5,r23
 800a88c:	900d883a 	mov	r6,r18
 800a890:	800afe00 	call	800afe0 <memmove>
 800a894:	80c00217 	ldw	r3,8(r16)
 800a898:	80800017 	ldw	r2,0(r16)
 800a89c:	9029883a 	mov	r20,r18
 800a8a0:	1c87c83a 	sub	r3,r3,r18
 800a8a4:	1485883a 	add	r2,r2,r18
 800a8a8:	80800015 	stw	r2,0(r16)
 800a8ac:	80c00215 	stw	r3,8(r16)
 800a8b0:	9005883a 	mov	r2,r18
 800a8b4:	003f7906 	br	800a69c <__alt_data_end+0xfc00a69c>
 800a8b8:	e009883a 	mov	r4,fp
 800a8bc:	01400284 	movi	r5,10
 800a8c0:	900d883a 	mov	r6,r18
 800a8c4:	800adc00 	call	800adc0 <memchr>
 800a8c8:	10003826 	beq	r2,zero,800a9ac <__sfvwrite_r+0x498>
 800a8cc:	10800044 	addi	r2,r2,1
 800a8d0:	1729c83a 	sub	r20,r2,fp
 800a8d4:	02000044 	movi	r8,1
 800a8d8:	003f8f06 	br	800a718 <__alt_data_end+0xfc00a718>
 800a8dc:	80800517 	ldw	r2,20(r16)
 800a8e0:	81400417 	ldw	r5,16(r16)
 800a8e4:	87000017 	ldw	fp,0(r16)
 800a8e8:	10a9883a 	add	r20,r2,r2
 800a8ec:	a085883a 	add	r2,r20,r2
 800a8f0:	1028d7fa 	srli	r20,r2,31
 800a8f4:	e179c83a 	sub	fp,fp,r5
 800a8f8:	e1000044 	addi	r4,fp,1
 800a8fc:	a085883a 	add	r2,r20,r2
 800a900:	1029d07a 	srai	r20,r2,1
 800a904:	2485883a 	add	r2,r4,r18
 800a908:	a00d883a 	mov	r6,r20
 800a90c:	a080022e 	bgeu	r20,r2,800a918 <__sfvwrite_r+0x404>
 800a910:	1029883a 	mov	r20,r2
 800a914:	100d883a 	mov	r6,r2
 800a918:	18c1000c 	andi	r3,r3,1024
 800a91c:	a809883a 	mov	r4,r21
 800a920:	183f6a26 	beq	r3,zero,800a6cc <__alt_data_end+0xfc00a6cc>
 800a924:	300b883a 	mov	r5,r6
 800a928:	8002d800 	call	8002d80 <_malloc_r>
 800a92c:	102d883a 	mov	r22,r2
 800a930:	103f6c26 	beq	r2,zero,800a6e4 <__alt_data_end+0xfc00a6e4>
 800a934:	81400417 	ldw	r5,16(r16)
 800a938:	1009883a 	mov	r4,r2
 800a93c:	e00d883a 	mov	r6,fp
 800a940:	800aea80 	call	800aea8 <memcpy>
 800a944:	8080030b 	ldhu	r2,12(r16)
 800a948:	00fedfc4 	movi	r3,-1153
 800a94c:	10c4703a 	and	r2,r2,r3
 800a950:	10802014 	ori	r2,r2,128
 800a954:	8080030d 	sth	r2,12(r16)
 800a958:	b709883a 	add	r4,r22,fp
 800a95c:	a707c83a 	sub	r3,r20,fp
 800a960:	85800415 	stw	r22,16(r16)
 800a964:	85000515 	stw	r20,20(r16)
 800a968:	81000015 	stw	r4,0(r16)
 800a96c:	9039883a 	mov	fp,r18
 800a970:	80c00215 	stw	r3,8(r16)
 800a974:	9029883a 	mov	r20,r18
 800a978:	902d883a 	mov	r22,r18
 800a97c:	003f3d06 	br	800a674 <__alt_data_end+0xfc00a674>
 800a980:	b80b883a 	mov	r5,r23
 800a984:	a00d883a 	mov	r6,r20
 800a988:	800afe00 	call	800afe0 <memmove>
 800a98c:	80800017 	ldw	r2,0(r16)
 800a990:	a809883a 	mov	r4,r21
 800a994:	800b883a 	mov	r5,r16
 800a998:	1505883a 	add	r2,r2,r20
 800a99c:	80800015 	stw	r2,0(r16)
 800a9a0:	8009af40 	call	8009af4 <_fflush_r>
 800a9a4:	103fa526 	beq	r2,zero,800a83c <__alt_data_end+0xfc00a83c>
 800a9a8:	003f5006 	br	800a6ec <__alt_data_end+0xfc00a6ec>
 800a9ac:	95000044 	addi	r20,r18,1
 800a9b0:	02000044 	movi	r8,1
 800a9b4:	003f5806 	br	800a718 <__alt_data_end+0xfc00a718>

0800a9b8 <_fwalk>:
 800a9b8:	defff804 	addi	sp,sp,-32
 800a9bc:	dd400515 	stw	r21,20(sp)
 800a9c0:	2540b804 	addi	r21,r4,736
 800a9c4:	dd800615 	stw	r22,24(sp)
 800a9c8:	dd000415 	stw	r20,16(sp)
 800a9cc:	dfc00715 	stw	ra,28(sp)
 800a9d0:	dcc00315 	stw	r19,12(sp)
 800a9d4:	dc800215 	stw	r18,8(sp)
 800a9d8:	dc400115 	stw	r17,4(sp)
 800a9dc:	dc000015 	stw	r16,0(sp)
 800a9e0:	2829883a 	mov	r20,r5
 800a9e4:	002d883a 	mov	r22,zero
 800a9e8:	800a0c00 	call	800a0c0 <__sfp_lock_acquire>
 800a9ec:	a8001426 	beq	r21,zero,800aa40 <_fwalk+0x88>
 800a9f0:	04ffffc4 	movi	r19,-1
 800a9f4:	ac400117 	ldw	r17,4(r21)
 800a9f8:	ac800217 	ldw	r18,8(r21)
 800a9fc:	8c7fffc4 	addi	r17,r17,-1
 800aa00:	88000d16 	blt	r17,zero,800aa38 <_fwalk+0x80>
 800aa04:	94000304 	addi	r16,r18,12
 800aa08:	94800384 	addi	r18,r18,14
 800aa0c:	80c0000f 	ldh	r3,0(r16)
 800aa10:	8c7fffc4 	addi	r17,r17,-1
 800aa14:	813ffd04 	addi	r4,r16,-12
 800aa18:	18000426 	beq	r3,zero,800aa2c <_fwalk+0x74>
 800aa1c:	90c0000f 	ldh	r3,0(r18)
 800aa20:	1cc00226 	beq	r3,r19,800aa2c <_fwalk+0x74>
 800aa24:	a03ee83a 	callr	r20
 800aa28:	b0acb03a 	or	r22,r22,r2
 800aa2c:	84001a04 	addi	r16,r16,104
 800aa30:	94801a04 	addi	r18,r18,104
 800aa34:	8cfff51e 	bne	r17,r19,800aa0c <__alt_data_end+0xfc00aa0c>
 800aa38:	ad400017 	ldw	r21,0(r21)
 800aa3c:	a83fed1e 	bne	r21,zero,800a9f4 <__alt_data_end+0xfc00a9f4>
 800aa40:	800a0c40 	call	800a0c4 <__sfp_lock_release>
 800aa44:	b005883a 	mov	r2,r22
 800aa48:	dfc00717 	ldw	ra,28(sp)
 800aa4c:	dd800617 	ldw	r22,24(sp)
 800aa50:	dd400517 	ldw	r21,20(sp)
 800aa54:	dd000417 	ldw	r20,16(sp)
 800aa58:	dcc00317 	ldw	r19,12(sp)
 800aa5c:	dc800217 	ldw	r18,8(sp)
 800aa60:	dc400117 	ldw	r17,4(sp)
 800aa64:	dc000017 	ldw	r16,0(sp)
 800aa68:	dec00804 	addi	sp,sp,32
 800aa6c:	f800283a 	ret

0800aa70 <_fwalk_reent>:
 800aa70:	defff804 	addi	sp,sp,-32
 800aa74:	dd400515 	stw	r21,20(sp)
 800aa78:	2540b804 	addi	r21,r4,736
 800aa7c:	dd800615 	stw	r22,24(sp)
 800aa80:	dd000415 	stw	r20,16(sp)
 800aa84:	dcc00315 	stw	r19,12(sp)
 800aa88:	dfc00715 	stw	ra,28(sp)
 800aa8c:	dc800215 	stw	r18,8(sp)
 800aa90:	dc400115 	stw	r17,4(sp)
 800aa94:	dc000015 	stw	r16,0(sp)
 800aa98:	2027883a 	mov	r19,r4
 800aa9c:	2829883a 	mov	r20,r5
 800aaa0:	002d883a 	mov	r22,zero
 800aaa4:	800a0c00 	call	800a0c0 <__sfp_lock_acquire>
 800aaa8:	a8001326 	beq	r21,zero,800aaf8 <_fwalk_reent+0x88>
 800aaac:	04bfffc4 	movi	r18,-1
 800aab0:	ac400117 	ldw	r17,4(r21)
 800aab4:	ac000217 	ldw	r16,8(r21)
 800aab8:	8c7fffc4 	addi	r17,r17,-1
 800aabc:	88000c16 	blt	r17,zero,800aaf0 <_fwalk_reent+0x80>
 800aac0:	84000304 	addi	r16,r16,12
 800aac4:	80c0000f 	ldh	r3,0(r16)
 800aac8:	8c7fffc4 	addi	r17,r17,-1
 800aacc:	817ffd04 	addi	r5,r16,-12
 800aad0:	18000526 	beq	r3,zero,800aae8 <_fwalk_reent+0x78>
 800aad4:	80c0008f 	ldh	r3,2(r16)
 800aad8:	9809883a 	mov	r4,r19
 800aadc:	1c800226 	beq	r3,r18,800aae8 <_fwalk_reent+0x78>
 800aae0:	a03ee83a 	callr	r20
 800aae4:	b0acb03a 	or	r22,r22,r2
 800aae8:	84001a04 	addi	r16,r16,104
 800aaec:	8cbff51e 	bne	r17,r18,800aac4 <__alt_data_end+0xfc00aac4>
 800aaf0:	ad400017 	ldw	r21,0(r21)
 800aaf4:	a83fee1e 	bne	r21,zero,800aab0 <__alt_data_end+0xfc00aab0>
 800aaf8:	800a0c40 	call	800a0c4 <__sfp_lock_release>
 800aafc:	b005883a 	mov	r2,r22
 800ab00:	dfc00717 	ldw	ra,28(sp)
 800ab04:	dd800617 	ldw	r22,24(sp)
 800ab08:	dd400517 	ldw	r21,20(sp)
 800ab0c:	dd000417 	ldw	r20,16(sp)
 800ab10:	dcc00317 	ldw	r19,12(sp)
 800ab14:	dc800217 	ldw	r18,8(sp)
 800ab18:	dc400117 	ldw	r17,4(sp)
 800ab1c:	dc000017 	ldw	r16,0(sp)
 800ab20:	dec00804 	addi	sp,sp,32
 800ab24:	f800283a 	ret

0800ab28 <_setlocale_r>:
 800ab28:	30001b26 	beq	r6,zero,800ab98 <_setlocale_r+0x70>
 800ab2c:	01420074 	movhi	r5,2049
 800ab30:	defffe04 	addi	sp,sp,-8
 800ab34:	295b6a04 	addi	r5,r5,28072
 800ab38:	3009883a 	mov	r4,r6
 800ab3c:	dc000015 	stw	r16,0(sp)
 800ab40:	dfc00115 	stw	ra,4(sp)
 800ab44:	3021883a 	mov	r16,r6
 800ab48:	8003d180 	call	8003d18 <strcmp>
 800ab4c:	1000061e 	bne	r2,zero,800ab68 <_setlocale_r+0x40>
 800ab50:	00820074 	movhi	r2,2049
 800ab54:	109b6904 	addi	r2,r2,28068
 800ab58:	dfc00117 	ldw	ra,4(sp)
 800ab5c:	dc000017 	ldw	r16,0(sp)
 800ab60:	dec00204 	addi	sp,sp,8
 800ab64:	f800283a 	ret
 800ab68:	01420074 	movhi	r5,2049
 800ab6c:	295b6904 	addi	r5,r5,28068
 800ab70:	8009883a 	mov	r4,r16
 800ab74:	8003d180 	call	8003d18 <strcmp>
 800ab78:	103ff526 	beq	r2,zero,800ab50 <__alt_data_end+0xfc00ab50>
 800ab7c:	01420074 	movhi	r5,2049
 800ab80:	295b4c04 	addi	r5,r5,27952
 800ab84:	8009883a 	mov	r4,r16
 800ab88:	8003d180 	call	8003d18 <strcmp>
 800ab8c:	103ff026 	beq	r2,zero,800ab50 <__alt_data_end+0xfc00ab50>
 800ab90:	0005883a 	mov	r2,zero
 800ab94:	003ff006 	br	800ab58 <__alt_data_end+0xfc00ab58>
 800ab98:	00820074 	movhi	r2,2049
 800ab9c:	109b6904 	addi	r2,r2,28068
 800aba0:	f800283a 	ret

0800aba4 <__locale_charset>:
 800aba4:	00820074 	movhi	r2,2049
 800aba8:	109e3704 	addi	r2,r2,30940
 800abac:	f800283a 	ret

0800abb0 <__locale_mb_cur_max>:
 800abb0:	008200b4 	movhi	r2,2050
 800abb4:	10a32f04 	addi	r2,r2,-29508
 800abb8:	10800017 	ldw	r2,0(r2)
 800abbc:	f800283a 	ret

0800abc0 <__locale_msgcharset>:
 800abc0:	00820074 	movhi	r2,2049
 800abc4:	109e2f04 	addi	r2,r2,30908
 800abc8:	f800283a 	ret

0800abcc <__locale_cjk_lang>:
 800abcc:	0005883a 	mov	r2,zero
 800abd0:	f800283a 	ret

0800abd4 <_localeconv_r>:
 800abd4:	00820074 	movhi	r2,2049
 800abd8:	109e3f04 	addi	r2,r2,30972
 800abdc:	f800283a 	ret

0800abe0 <setlocale>:
 800abe0:	00c200b4 	movhi	r3,2050
 800abe4:	18e32e04 	addi	r3,r3,-29512
 800abe8:	2005883a 	mov	r2,r4
 800abec:	19000017 	ldw	r4,0(r3)
 800abf0:	280d883a 	mov	r6,r5
 800abf4:	100b883a 	mov	r5,r2
 800abf8:	800ab281 	jmpi	800ab28 <_setlocale_r>

0800abfc <localeconv>:
 800abfc:	00820074 	movhi	r2,2049
 800ac00:	109e3f04 	addi	r2,r2,30972
 800ac04:	f800283a 	ret

0800ac08 <__smakebuf_r>:
 800ac08:	2880030b 	ldhu	r2,12(r5)
 800ac0c:	10c0008c 	andi	r3,r2,2
 800ac10:	1800401e 	bne	r3,zero,800ad14 <__smakebuf_r+0x10c>
 800ac14:	deffec04 	addi	sp,sp,-80
 800ac18:	dc000f15 	stw	r16,60(sp)
 800ac1c:	2821883a 	mov	r16,r5
 800ac20:	2940038f 	ldh	r5,14(r5)
 800ac24:	dc401015 	stw	r17,64(sp)
 800ac28:	dfc01315 	stw	ra,76(sp)
 800ac2c:	dcc01215 	stw	r19,72(sp)
 800ac30:	dc801115 	stw	r18,68(sp)
 800ac34:	2023883a 	mov	r17,r4
 800ac38:	28001b16 	blt	r5,zero,800aca8 <__smakebuf_r+0xa0>
 800ac3c:	d80d883a 	mov	r6,sp
 800ac40:	800f6400 	call	800f640 <_fstat_r>
 800ac44:	10001716 	blt	r2,zero,800aca4 <__smakebuf_r+0x9c>
 800ac48:	d8800117 	ldw	r2,4(sp)
 800ac4c:	00e00014 	movui	r3,32768
 800ac50:	10bc000c 	andi	r2,r2,61440
 800ac54:	10c03726 	beq	r2,r3,800ad34 <__smakebuf_r+0x12c>
 800ac58:	80c0030b 	ldhu	r3,12(r16)
 800ac5c:	18c20014 	ori	r3,r3,2048
 800ac60:	80c0030d 	sth	r3,12(r16)
 800ac64:	00c80004 	movi	r3,8192
 800ac68:	10c03c1e 	bne	r2,r3,800ad5c <__smakebuf_r+0x154>
 800ac6c:	8140038f 	ldh	r5,14(r16)
 800ac70:	8809883a 	mov	r4,r17
 800ac74:	800f6980 	call	800f698 <_isatty_r>
 800ac78:	10004e26 	beq	r2,zero,800adb4 <__smakebuf_r+0x1ac>
 800ac7c:	8080030b 	ldhu	r2,12(r16)
 800ac80:	04c00044 	movi	r19,1
 800ac84:	80c010c4 	addi	r3,r16,67
 800ac88:	14c4b03a 	or	r2,r2,r19
 800ac8c:	8080030d 	sth	r2,12(r16)
 800ac90:	80c00015 	stw	r3,0(r16)
 800ac94:	80c00415 	stw	r3,16(r16)
 800ac98:	84c00515 	stw	r19,20(r16)
 800ac9c:	04810004 	movi	r18,1024
 800aca0:	00000706 	br	800acc0 <__smakebuf_r+0xb8>
 800aca4:	8080030b 	ldhu	r2,12(r16)
 800aca8:	10c0200c 	andi	r3,r2,128
 800acac:	18001f1e 	bne	r3,zero,800ad2c <__smakebuf_r+0x124>
 800acb0:	04810004 	movi	r18,1024
 800acb4:	10820014 	ori	r2,r2,2048
 800acb8:	8080030d 	sth	r2,12(r16)
 800acbc:	0027883a 	mov	r19,zero
 800acc0:	8809883a 	mov	r4,r17
 800acc4:	900b883a 	mov	r5,r18
 800acc8:	8002d800 	call	8002d80 <_malloc_r>
 800accc:	10002e26 	beq	r2,zero,800ad88 <__smakebuf_r+0x180>
 800acd0:	80c0030b 	ldhu	r3,12(r16)
 800acd4:	01020074 	movhi	r4,2049
 800acd8:	21275704 	addi	r4,r4,-25252
 800acdc:	89000f15 	stw	r4,60(r17)
 800ace0:	18c02014 	ori	r3,r3,128
 800ace4:	80c0030d 	sth	r3,12(r16)
 800ace8:	80800015 	stw	r2,0(r16)
 800acec:	80800415 	stw	r2,16(r16)
 800acf0:	84800515 	stw	r18,20(r16)
 800acf4:	98001c1e 	bne	r19,zero,800ad68 <__smakebuf_r+0x160>
 800acf8:	dfc01317 	ldw	ra,76(sp)
 800acfc:	dcc01217 	ldw	r19,72(sp)
 800ad00:	dc801117 	ldw	r18,68(sp)
 800ad04:	dc401017 	ldw	r17,64(sp)
 800ad08:	dc000f17 	ldw	r16,60(sp)
 800ad0c:	dec01404 	addi	sp,sp,80
 800ad10:	f800283a 	ret
 800ad14:	288010c4 	addi	r2,r5,67
 800ad18:	28800015 	stw	r2,0(r5)
 800ad1c:	28800415 	stw	r2,16(r5)
 800ad20:	00800044 	movi	r2,1
 800ad24:	28800515 	stw	r2,20(r5)
 800ad28:	f800283a 	ret
 800ad2c:	04801004 	movi	r18,64
 800ad30:	003fe006 	br	800acb4 <__alt_data_end+0xfc00acb4>
 800ad34:	81000a17 	ldw	r4,40(r16)
 800ad38:	00c20074 	movhi	r3,2049
 800ad3c:	18f21c04 	addi	r3,r3,-14224
 800ad40:	20ffc51e 	bne	r4,r3,800ac58 <__alt_data_end+0xfc00ac58>
 800ad44:	80c0030b 	ldhu	r3,12(r16)
 800ad48:	01010004 	movi	r4,1024
 800ad4c:	81001315 	stw	r4,76(r16)
 800ad50:	1906b03a 	or	r3,r3,r4
 800ad54:	80c0030d 	sth	r3,12(r16)
 800ad58:	003fc206 	br	800ac64 <__alt_data_end+0xfc00ac64>
 800ad5c:	0027883a 	mov	r19,zero
 800ad60:	04810004 	movi	r18,1024
 800ad64:	003fd606 	br	800acc0 <__alt_data_end+0xfc00acc0>
 800ad68:	8140038f 	ldh	r5,14(r16)
 800ad6c:	8809883a 	mov	r4,r17
 800ad70:	800f6980 	call	800f698 <_isatty_r>
 800ad74:	103fe026 	beq	r2,zero,800acf8 <__alt_data_end+0xfc00acf8>
 800ad78:	8080030b 	ldhu	r2,12(r16)
 800ad7c:	10800054 	ori	r2,r2,1
 800ad80:	8080030d 	sth	r2,12(r16)
 800ad84:	003fdc06 	br	800acf8 <__alt_data_end+0xfc00acf8>
 800ad88:	8080030b 	ldhu	r2,12(r16)
 800ad8c:	10c0800c 	andi	r3,r2,512
 800ad90:	183fd91e 	bne	r3,zero,800acf8 <__alt_data_end+0xfc00acf8>
 800ad94:	10800094 	ori	r2,r2,2
 800ad98:	80c010c4 	addi	r3,r16,67
 800ad9c:	8080030d 	sth	r2,12(r16)
 800ada0:	00800044 	movi	r2,1
 800ada4:	80c00015 	stw	r3,0(r16)
 800ada8:	80c00415 	stw	r3,16(r16)
 800adac:	80800515 	stw	r2,20(r16)
 800adb0:	003fd106 	br	800acf8 <__alt_data_end+0xfc00acf8>
 800adb4:	04c00044 	movi	r19,1
 800adb8:	04810004 	movi	r18,1024
 800adbc:	003fc006 	br	800acc0 <__alt_data_end+0xfc00acc0>

0800adc0 <memchr>:
 800adc0:	208000cc 	andi	r2,r4,3
 800adc4:	280f883a 	mov	r7,r5
 800adc8:	10003526 	beq	r2,zero,800aea0 <memchr+0xe0>
 800adcc:	30bfffc4 	addi	r2,r6,-1
 800add0:	30001b26 	beq	r6,zero,800ae40 <memchr+0x80>
 800add4:	21800003 	ldbu	r6,0(r4)
 800add8:	28c03fcc 	andi	r3,r5,255
 800addc:	30c01a26 	beq	r6,r3,800ae48 <memchr+0x88>
 800ade0:	180d883a 	mov	r6,r3
 800ade4:	00000406 	br	800adf8 <memchr+0x38>
 800ade8:	10001526 	beq	r2,zero,800ae40 <memchr+0x80>
 800adec:	20c00003 	ldbu	r3,0(r4)
 800adf0:	10bfffc4 	addi	r2,r2,-1
 800adf4:	19801426 	beq	r3,r6,800ae48 <memchr+0x88>
 800adf8:	21000044 	addi	r4,r4,1
 800adfc:	20c000cc 	andi	r3,r4,3
 800ae00:	183ff91e 	bne	r3,zero,800ade8 <__alt_data_end+0xfc00ade8>
 800ae04:	024000c4 	movi	r9,3
 800ae08:	48801136 	bltu	r9,r2,800ae50 <memchr+0x90>
 800ae0c:	10000c26 	beq	r2,zero,800ae40 <memchr+0x80>
 800ae10:	20c00003 	ldbu	r3,0(r4)
 800ae14:	29403fcc 	andi	r5,r5,255
 800ae18:	19400b26 	beq	r3,r5,800ae48 <memchr+0x88>
 800ae1c:	20c00044 	addi	r3,r4,1
 800ae20:	2085883a 	add	r2,r4,r2
 800ae24:	39803fcc 	andi	r6,r7,255
 800ae28:	00000306 	br	800ae38 <memchr+0x78>
 800ae2c:	18c00044 	addi	r3,r3,1
 800ae30:	197fffc3 	ldbu	r5,-1(r3)
 800ae34:	29800426 	beq	r5,r6,800ae48 <memchr+0x88>
 800ae38:	1809883a 	mov	r4,r3
 800ae3c:	18bffb1e 	bne	r3,r2,800ae2c <__alt_data_end+0xfc00ae2c>
 800ae40:	0005883a 	mov	r2,zero
 800ae44:	f800283a 	ret
 800ae48:	2005883a 	mov	r2,r4
 800ae4c:	f800283a 	ret
 800ae50:	28c03fcc 	andi	r3,r5,255
 800ae54:	1810923a 	slli	r8,r3,8
 800ae58:	02ffbff4 	movhi	r11,65279
 800ae5c:	02a02074 	movhi	r10,32897
 800ae60:	40c6b03a 	or	r3,r8,r3
 800ae64:	1810943a 	slli	r8,r3,16
 800ae68:	5affbfc4 	addi	r11,r11,-257
 800ae6c:	52a02004 	addi	r10,r10,-32640
 800ae70:	40d0b03a 	or	r8,r8,r3
 800ae74:	20c00017 	ldw	r3,0(r4)
 800ae78:	40c6f03a 	xor	r3,r8,r3
 800ae7c:	1acd883a 	add	r6,r3,r11
 800ae80:	00c6303a 	nor	r3,zero,r3
 800ae84:	30c6703a 	and	r3,r6,r3
 800ae88:	1a86703a 	and	r3,r3,r10
 800ae8c:	183fdf1e 	bne	r3,zero,800ae0c <__alt_data_end+0xfc00ae0c>
 800ae90:	10bfff04 	addi	r2,r2,-4
 800ae94:	21000104 	addi	r4,r4,4
 800ae98:	48bff636 	bltu	r9,r2,800ae74 <__alt_data_end+0xfc00ae74>
 800ae9c:	003fdb06 	br	800ae0c <__alt_data_end+0xfc00ae0c>
 800aea0:	3005883a 	mov	r2,r6
 800aea4:	003fd706 	br	800ae04 <__alt_data_end+0xfc00ae04>

0800aea8 <memcpy>:
 800aea8:	deffff04 	addi	sp,sp,-4
 800aeac:	dc000015 	stw	r16,0(sp)
 800aeb0:	00c003c4 	movi	r3,15
 800aeb4:	2005883a 	mov	r2,r4
 800aeb8:	1980432e 	bgeu	r3,r6,800afc8 <memcpy+0x120>
 800aebc:	2146b03a 	or	r3,r4,r5
 800aec0:	18c000cc 	andi	r3,r3,3
 800aec4:	1800421e 	bne	r3,zero,800afd0 <memcpy+0x128>
 800aec8:	343ffc04 	addi	r16,r6,-16
 800aecc:	8020d13a 	srli	r16,r16,4
 800aed0:	28c00104 	addi	r3,r5,4
 800aed4:	23400104 	addi	r13,r4,4
 800aed8:	801e913a 	slli	r15,r16,4
 800aedc:	2b000204 	addi	r12,r5,8
 800aee0:	22c00204 	addi	r11,r4,8
 800aee4:	7bc00504 	addi	r15,r15,20
 800aee8:	2a800304 	addi	r10,r5,12
 800aeec:	22400304 	addi	r9,r4,12
 800aef0:	2bdf883a 	add	r15,r5,r15
 800aef4:	2811883a 	mov	r8,r5
 800aef8:	200f883a 	mov	r7,r4
 800aefc:	41000017 	ldw	r4,0(r8)
 800af00:	39c00404 	addi	r7,r7,16
 800af04:	18c00404 	addi	r3,r3,16
 800af08:	393ffc15 	stw	r4,-16(r7)
 800af0c:	1bbffc17 	ldw	r14,-16(r3)
 800af10:	6b400404 	addi	r13,r13,16
 800af14:	5ac00404 	addi	r11,r11,16
 800af18:	6bbffc15 	stw	r14,-16(r13)
 800af1c:	63800017 	ldw	r14,0(r12)
 800af20:	4a400404 	addi	r9,r9,16
 800af24:	42000404 	addi	r8,r8,16
 800af28:	5bbffc15 	stw	r14,-16(r11)
 800af2c:	53800017 	ldw	r14,0(r10)
 800af30:	63000404 	addi	r12,r12,16
 800af34:	52800404 	addi	r10,r10,16
 800af38:	4bbffc15 	stw	r14,-16(r9)
 800af3c:	1bffef1e 	bne	r3,r15,800aefc <__alt_data_end+0xfc00aefc>
 800af40:	81c00044 	addi	r7,r16,1
 800af44:	380e913a 	slli	r7,r7,4
 800af48:	310003cc 	andi	r4,r6,15
 800af4c:	02c000c4 	movi	r11,3
 800af50:	11c7883a 	add	r3,r2,r7
 800af54:	29cb883a 	add	r5,r5,r7
 800af58:	59001f2e 	bgeu	r11,r4,800afd8 <memcpy+0x130>
 800af5c:	1813883a 	mov	r9,r3
 800af60:	2811883a 	mov	r8,r5
 800af64:	200f883a 	mov	r7,r4
 800af68:	42800017 	ldw	r10,0(r8)
 800af6c:	4a400104 	addi	r9,r9,4
 800af70:	39ffff04 	addi	r7,r7,-4
 800af74:	4abfff15 	stw	r10,-4(r9)
 800af78:	42000104 	addi	r8,r8,4
 800af7c:	59fffa36 	bltu	r11,r7,800af68 <__alt_data_end+0xfc00af68>
 800af80:	213fff04 	addi	r4,r4,-4
 800af84:	2008d0ba 	srli	r4,r4,2
 800af88:	318000cc 	andi	r6,r6,3
 800af8c:	21000044 	addi	r4,r4,1
 800af90:	2109883a 	add	r4,r4,r4
 800af94:	2109883a 	add	r4,r4,r4
 800af98:	1907883a 	add	r3,r3,r4
 800af9c:	290b883a 	add	r5,r5,r4
 800afa0:	30000626 	beq	r6,zero,800afbc <memcpy+0x114>
 800afa4:	198d883a 	add	r6,r3,r6
 800afa8:	29c00003 	ldbu	r7,0(r5)
 800afac:	18c00044 	addi	r3,r3,1
 800afb0:	29400044 	addi	r5,r5,1
 800afb4:	19ffffc5 	stb	r7,-1(r3)
 800afb8:	19bffb1e 	bne	r3,r6,800afa8 <__alt_data_end+0xfc00afa8>
 800afbc:	dc000017 	ldw	r16,0(sp)
 800afc0:	dec00104 	addi	sp,sp,4
 800afc4:	f800283a 	ret
 800afc8:	2007883a 	mov	r3,r4
 800afcc:	003ff406 	br	800afa0 <__alt_data_end+0xfc00afa0>
 800afd0:	2007883a 	mov	r3,r4
 800afd4:	003ff306 	br	800afa4 <__alt_data_end+0xfc00afa4>
 800afd8:	200d883a 	mov	r6,r4
 800afdc:	003ff006 	br	800afa0 <__alt_data_end+0xfc00afa0>

0800afe0 <memmove>:
 800afe0:	2005883a 	mov	r2,r4
 800afe4:	29000b2e 	bgeu	r5,r4,800b014 <memmove+0x34>
 800afe8:	298f883a 	add	r7,r5,r6
 800afec:	21c0092e 	bgeu	r4,r7,800b014 <memmove+0x34>
 800aff0:	2187883a 	add	r3,r4,r6
 800aff4:	198bc83a 	sub	r5,r3,r6
 800aff8:	30004b26 	beq	r6,zero,800b128 <memmove+0x148>
 800affc:	39ffffc4 	addi	r7,r7,-1
 800b000:	39000003 	ldbu	r4,0(r7)
 800b004:	18ffffc4 	addi	r3,r3,-1
 800b008:	19000005 	stb	r4,0(r3)
 800b00c:	197ffb1e 	bne	r3,r5,800affc <__alt_data_end+0xfc00affc>
 800b010:	f800283a 	ret
 800b014:	00c003c4 	movi	r3,15
 800b018:	1980412e 	bgeu	r3,r6,800b120 <memmove+0x140>
 800b01c:	1146b03a 	or	r3,r2,r5
 800b020:	18c000cc 	andi	r3,r3,3
 800b024:	1800411e 	bne	r3,zero,800b12c <memmove+0x14c>
 800b028:	33fffc04 	addi	r15,r6,-16
 800b02c:	781ed13a 	srli	r15,r15,4
 800b030:	28c00104 	addi	r3,r5,4
 800b034:	13400104 	addi	r13,r2,4
 800b038:	781c913a 	slli	r14,r15,4
 800b03c:	2b000204 	addi	r12,r5,8
 800b040:	12c00204 	addi	r11,r2,8
 800b044:	73800504 	addi	r14,r14,20
 800b048:	2a800304 	addi	r10,r5,12
 800b04c:	12400304 	addi	r9,r2,12
 800b050:	2b9d883a 	add	r14,r5,r14
 800b054:	2811883a 	mov	r8,r5
 800b058:	100f883a 	mov	r7,r2
 800b05c:	41000017 	ldw	r4,0(r8)
 800b060:	39c00404 	addi	r7,r7,16
 800b064:	18c00404 	addi	r3,r3,16
 800b068:	393ffc15 	stw	r4,-16(r7)
 800b06c:	193ffc17 	ldw	r4,-16(r3)
 800b070:	6b400404 	addi	r13,r13,16
 800b074:	5ac00404 	addi	r11,r11,16
 800b078:	693ffc15 	stw	r4,-16(r13)
 800b07c:	61000017 	ldw	r4,0(r12)
 800b080:	4a400404 	addi	r9,r9,16
 800b084:	42000404 	addi	r8,r8,16
 800b088:	593ffc15 	stw	r4,-16(r11)
 800b08c:	51000017 	ldw	r4,0(r10)
 800b090:	63000404 	addi	r12,r12,16
 800b094:	52800404 	addi	r10,r10,16
 800b098:	493ffc15 	stw	r4,-16(r9)
 800b09c:	1bbfef1e 	bne	r3,r14,800b05c <__alt_data_end+0xfc00b05c>
 800b0a0:	79000044 	addi	r4,r15,1
 800b0a4:	2008913a 	slli	r4,r4,4
 800b0a8:	328003cc 	andi	r10,r6,15
 800b0ac:	02c000c4 	movi	r11,3
 800b0b0:	1107883a 	add	r3,r2,r4
 800b0b4:	290b883a 	add	r5,r5,r4
 800b0b8:	5a801e2e 	bgeu	r11,r10,800b134 <memmove+0x154>
 800b0bc:	1813883a 	mov	r9,r3
 800b0c0:	2811883a 	mov	r8,r5
 800b0c4:	500f883a 	mov	r7,r10
 800b0c8:	41000017 	ldw	r4,0(r8)
 800b0cc:	4a400104 	addi	r9,r9,4
 800b0d0:	39ffff04 	addi	r7,r7,-4
 800b0d4:	493fff15 	stw	r4,-4(r9)
 800b0d8:	42000104 	addi	r8,r8,4
 800b0dc:	59fffa36 	bltu	r11,r7,800b0c8 <__alt_data_end+0xfc00b0c8>
 800b0e0:	513fff04 	addi	r4,r10,-4
 800b0e4:	2008d0ba 	srli	r4,r4,2
 800b0e8:	318000cc 	andi	r6,r6,3
 800b0ec:	21000044 	addi	r4,r4,1
 800b0f0:	2109883a 	add	r4,r4,r4
 800b0f4:	2109883a 	add	r4,r4,r4
 800b0f8:	1907883a 	add	r3,r3,r4
 800b0fc:	290b883a 	add	r5,r5,r4
 800b100:	30000926 	beq	r6,zero,800b128 <memmove+0x148>
 800b104:	198d883a 	add	r6,r3,r6
 800b108:	29c00003 	ldbu	r7,0(r5)
 800b10c:	18c00044 	addi	r3,r3,1
 800b110:	29400044 	addi	r5,r5,1
 800b114:	19ffffc5 	stb	r7,-1(r3)
 800b118:	19bffb1e 	bne	r3,r6,800b108 <__alt_data_end+0xfc00b108>
 800b11c:	f800283a 	ret
 800b120:	1007883a 	mov	r3,r2
 800b124:	003ff606 	br	800b100 <__alt_data_end+0xfc00b100>
 800b128:	f800283a 	ret
 800b12c:	1007883a 	mov	r3,r2
 800b130:	003ff406 	br	800b104 <__alt_data_end+0xfc00b104>
 800b134:	500d883a 	mov	r6,r10
 800b138:	003ff106 	br	800b100 <__alt_data_end+0xfc00b100>

0800b13c <_Balloc>:
 800b13c:	20801317 	ldw	r2,76(r4)
 800b140:	defffc04 	addi	sp,sp,-16
 800b144:	dc400115 	stw	r17,4(sp)
 800b148:	dc000015 	stw	r16,0(sp)
 800b14c:	dfc00315 	stw	ra,12(sp)
 800b150:	dc800215 	stw	r18,8(sp)
 800b154:	2023883a 	mov	r17,r4
 800b158:	2821883a 	mov	r16,r5
 800b15c:	10000f26 	beq	r2,zero,800b19c <_Balloc+0x60>
 800b160:	8407883a 	add	r3,r16,r16
 800b164:	18c7883a 	add	r3,r3,r3
 800b168:	10c7883a 	add	r3,r2,r3
 800b16c:	18800017 	ldw	r2,0(r3)
 800b170:	10001126 	beq	r2,zero,800b1b8 <_Balloc+0x7c>
 800b174:	11000017 	ldw	r4,0(r2)
 800b178:	19000015 	stw	r4,0(r3)
 800b17c:	10000415 	stw	zero,16(r2)
 800b180:	10000315 	stw	zero,12(r2)
 800b184:	dfc00317 	ldw	ra,12(sp)
 800b188:	dc800217 	ldw	r18,8(sp)
 800b18c:	dc400117 	ldw	r17,4(sp)
 800b190:	dc000017 	ldw	r16,0(sp)
 800b194:	dec00404 	addi	sp,sp,16
 800b198:	f800283a 	ret
 800b19c:	01400104 	movi	r5,4
 800b1a0:	01800844 	movi	r6,33
 800b1a4:	800f2780 	call	800f278 <_calloc_r>
 800b1a8:	88801315 	stw	r2,76(r17)
 800b1ac:	103fec1e 	bne	r2,zero,800b160 <__alt_data_end+0xfc00b160>
 800b1b0:	0005883a 	mov	r2,zero
 800b1b4:	003ff306 	br	800b184 <__alt_data_end+0xfc00b184>
 800b1b8:	01400044 	movi	r5,1
 800b1bc:	2c24983a 	sll	r18,r5,r16
 800b1c0:	8809883a 	mov	r4,r17
 800b1c4:	91800144 	addi	r6,r18,5
 800b1c8:	318d883a 	add	r6,r6,r6
 800b1cc:	318d883a 	add	r6,r6,r6
 800b1d0:	800f2780 	call	800f278 <_calloc_r>
 800b1d4:	103ff626 	beq	r2,zero,800b1b0 <__alt_data_end+0xfc00b1b0>
 800b1d8:	14000115 	stw	r16,4(r2)
 800b1dc:	14800215 	stw	r18,8(r2)
 800b1e0:	003fe606 	br	800b17c <__alt_data_end+0xfc00b17c>

0800b1e4 <_Bfree>:
 800b1e4:	28000826 	beq	r5,zero,800b208 <_Bfree+0x24>
 800b1e8:	28c00117 	ldw	r3,4(r5)
 800b1ec:	20801317 	ldw	r2,76(r4)
 800b1f0:	18c7883a 	add	r3,r3,r3
 800b1f4:	18c7883a 	add	r3,r3,r3
 800b1f8:	10c5883a 	add	r2,r2,r3
 800b1fc:	10c00017 	ldw	r3,0(r2)
 800b200:	28c00015 	stw	r3,0(r5)
 800b204:	11400015 	stw	r5,0(r2)
 800b208:	f800283a 	ret

0800b20c <__multadd>:
 800b20c:	defff704 	addi	sp,sp,-36
 800b210:	dc800215 	stw	r18,8(sp)
 800b214:	2c800417 	ldw	r18,16(r5)
 800b218:	ddc00715 	stw	r23,28(sp)
 800b21c:	dd800615 	stw	r22,24(sp)
 800b220:	dd000415 	stw	r20,16(sp)
 800b224:	dcc00315 	stw	r19,12(sp)
 800b228:	dc400115 	stw	r17,4(sp)
 800b22c:	dc000015 	stw	r16,0(sp)
 800b230:	dfc00815 	stw	ra,32(sp)
 800b234:	dd400515 	stw	r21,20(sp)
 800b238:	2827883a 	mov	r19,r5
 800b23c:	2029883a 	mov	r20,r4
 800b240:	3023883a 	mov	r17,r6
 800b244:	3821883a 	mov	r16,r7
 800b248:	2d800504 	addi	r22,r5,20
 800b24c:	002f883a 	mov	r23,zero
 800b250:	b5400017 	ldw	r21,0(r22)
 800b254:	880b883a 	mov	r5,r17
 800b258:	bdc00044 	addi	r23,r23,1
 800b25c:	a93fffcc 	andi	r4,r21,65535
 800b260:	80027f80 	call	80027f8 <__mulsi3>
 800b264:	1421883a 	add	r16,r2,r16
 800b268:	a808d43a 	srli	r4,r21,16
 800b26c:	802ad43a 	srli	r21,r16,16
 800b270:	880b883a 	mov	r5,r17
 800b274:	80027f80 	call	80027f8 <__mulsi3>
 800b278:	a88f883a 	add	r7,r21,r2
 800b27c:	3804943a 	slli	r2,r7,16
 800b280:	80ffffcc 	andi	r3,r16,65535
 800b284:	b5800104 	addi	r22,r22,4
 800b288:	10c7883a 	add	r3,r2,r3
 800b28c:	b0ffff15 	stw	r3,-4(r22)
 800b290:	3820d43a 	srli	r16,r7,16
 800b294:	bcbfee16 	blt	r23,r18,800b250 <__alt_data_end+0xfc00b250>
 800b298:	80000926 	beq	r16,zero,800b2c0 <__multadd+0xb4>
 800b29c:	98800217 	ldw	r2,8(r19)
 800b2a0:	9080130e 	bge	r18,r2,800b2f0 <__multadd+0xe4>
 800b2a4:	90800144 	addi	r2,r18,5
 800b2a8:	1085883a 	add	r2,r2,r2
 800b2ac:	1085883a 	add	r2,r2,r2
 800b2b0:	9885883a 	add	r2,r19,r2
 800b2b4:	14000015 	stw	r16,0(r2)
 800b2b8:	94800044 	addi	r18,r18,1
 800b2bc:	9c800415 	stw	r18,16(r19)
 800b2c0:	9805883a 	mov	r2,r19
 800b2c4:	dfc00817 	ldw	ra,32(sp)
 800b2c8:	ddc00717 	ldw	r23,28(sp)
 800b2cc:	dd800617 	ldw	r22,24(sp)
 800b2d0:	dd400517 	ldw	r21,20(sp)
 800b2d4:	dd000417 	ldw	r20,16(sp)
 800b2d8:	dcc00317 	ldw	r19,12(sp)
 800b2dc:	dc800217 	ldw	r18,8(sp)
 800b2e0:	dc400117 	ldw	r17,4(sp)
 800b2e4:	dc000017 	ldw	r16,0(sp)
 800b2e8:	dec00904 	addi	sp,sp,36
 800b2ec:	f800283a 	ret
 800b2f0:	99400117 	ldw	r5,4(r19)
 800b2f4:	a009883a 	mov	r4,r20
 800b2f8:	29400044 	addi	r5,r5,1
 800b2fc:	800b13c0 	call	800b13c <_Balloc>
 800b300:	99800417 	ldw	r6,16(r19)
 800b304:	99400304 	addi	r5,r19,12
 800b308:	11000304 	addi	r4,r2,12
 800b30c:	31800084 	addi	r6,r6,2
 800b310:	318d883a 	add	r6,r6,r6
 800b314:	318d883a 	add	r6,r6,r6
 800b318:	1023883a 	mov	r17,r2
 800b31c:	800aea80 	call	800aea8 <memcpy>
 800b320:	99000117 	ldw	r4,4(r19)
 800b324:	a0c01317 	ldw	r3,76(r20)
 800b328:	2109883a 	add	r4,r4,r4
 800b32c:	2109883a 	add	r4,r4,r4
 800b330:	1907883a 	add	r3,r3,r4
 800b334:	18800017 	ldw	r2,0(r3)
 800b338:	98800015 	stw	r2,0(r19)
 800b33c:	1cc00015 	stw	r19,0(r3)
 800b340:	8827883a 	mov	r19,r17
 800b344:	003fd706 	br	800b2a4 <__alt_data_end+0xfc00b2a4>

0800b348 <__s2b>:
 800b348:	defff904 	addi	sp,sp,-28
 800b34c:	dc400115 	stw	r17,4(sp)
 800b350:	dc000015 	stw	r16,0(sp)
 800b354:	2023883a 	mov	r17,r4
 800b358:	2821883a 	mov	r16,r5
 800b35c:	39000204 	addi	r4,r7,8
 800b360:	01400244 	movi	r5,9
 800b364:	dcc00315 	stw	r19,12(sp)
 800b368:	dc800215 	stw	r18,8(sp)
 800b36c:	dfc00615 	stw	ra,24(sp)
 800b370:	dd400515 	stw	r21,20(sp)
 800b374:	dd000415 	stw	r20,16(sp)
 800b378:	3825883a 	mov	r18,r7
 800b37c:	3027883a 	mov	r19,r6
 800b380:	80107dc0 	call	80107dc <__divsi3>
 800b384:	00c00044 	movi	r3,1
 800b388:	000b883a 	mov	r5,zero
 800b38c:	1880030e 	bge	r3,r2,800b39c <__s2b+0x54>
 800b390:	18c7883a 	add	r3,r3,r3
 800b394:	29400044 	addi	r5,r5,1
 800b398:	18bffd16 	blt	r3,r2,800b390 <__alt_data_end+0xfc00b390>
 800b39c:	8809883a 	mov	r4,r17
 800b3a0:	800b13c0 	call	800b13c <_Balloc>
 800b3a4:	d8c00717 	ldw	r3,28(sp)
 800b3a8:	10c00515 	stw	r3,20(r2)
 800b3ac:	00c00044 	movi	r3,1
 800b3b0:	10c00415 	stw	r3,16(r2)
 800b3b4:	00c00244 	movi	r3,9
 800b3b8:	1cc0210e 	bge	r3,r19,800b440 <__s2b+0xf8>
 800b3bc:	80eb883a 	add	r21,r16,r3
 800b3c0:	a829883a 	mov	r20,r21
 800b3c4:	84e1883a 	add	r16,r16,r19
 800b3c8:	a1c00007 	ldb	r7,0(r20)
 800b3cc:	8809883a 	mov	r4,r17
 800b3d0:	a5000044 	addi	r20,r20,1
 800b3d4:	100b883a 	mov	r5,r2
 800b3d8:	01800284 	movi	r6,10
 800b3dc:	39fff404 	addi	r7,r7,-48
 800b3e0:	800b20c0 	call	800b20c <__multadd>
 800b3e4:	a43ff81e 	bne	r20,r16,800b3c8 <__alt_data_end+0xfc00b3c8>
 800b3e8:	ace1883a 	add	r16,r21,r19
 800b3ec:	843ffe04 	addi	r16,r16,-8
 800b3f0:	9c800a0e 	bge	r19,r18,800b41c <__s2b+0xd4>
 800b3f4:	94e5c83a 	sub	r18,r18,r19
 800b3f8:	84a5883a 	add	r18,r16,r18
 800b3fc:	81c00007 	ldb	r7,0(r16)
 800b400:	8809883a 	mov	r4,r17
 800b404:	84000044 	addi	r16,r16,1
 800b408:	100b883a 	mov	r5,r2
 800b40c:	01800284 	movi	r6,10
 800b410:	39fff404 	addi	r7,r7,-48
 800b414:	800b20c0 	call	800b20c <__multadd>
 800b418:	84bff81e 	bne	r16,r18,800b3fc <__alt_data_end+0xfc00b3fc>
 800b41c:	dfc00617 	ldw	ra,24(sp)
 800b420:	dd400517 	ldw	r21,20(sp)
 800b424:	dd000417 	ldw	r20,16(sp)
 800b428:	dcc00317 	ldw	r19,12(sp)
 800b42c:	dc800217 	ldw	r18,8(sp)
 800b430:	dc400117 	ldw	r17,4(sp)
 800b434:	dc000017 	ldw	r16,0(sp)
 800b438:	dec00704 	addi	sp,sp,28
 800b43c:	f800283a 	ret
 800b440:	84000284 	addi	r16,r16,10
 800b444:	1827883a 	mov	r19,r3
 800b448:	003fe906 	br	800b3f0 <__alt_data_end+0xfc00b3f0>

0800b44c <__hi0bits>:
 800b44c:	20bfffec 	andhi	r2,r4,65535
 800b450:	1000141e 	bne	r2,zero,800b4a4 <__hi0bits+0x58>
 800b454:	2008943a 	slli	r4,r4,16
 800b458:	00800404 	movi	r2,16
 800b45c:	20ffc02c 	andhi	r3,r4,65280
 800b460:	1800021e 	bne	r3,zero,800b46c <__hi0bits+0x20>
 800b464:	2008923a 	slli	r4,r4,8
 800b468:	10800204 	addi	r2,r2,8
 800b46c:	20fc002c 	andhi	r3,r4,61440
 800b470:	1800021e 	bne	r3,zero,800b47c <__hi0bits+0x30>
 800b474:	2008913a 	slli	r4,r4,4
 800b478:	10800104 	addi	r2,r2,4
 800b47c:	20f0002c 	andhi	r3,r4,49152
 800b480:	1800031e 	bne	r3,zero,800b490 <__hi0bits+0x44>
 800b484:	2109883a 	add	r4,r4,r4
 800b488:	10800084 	addi	r2,r2,2
 800b48c:	2109883a 	add	r4,r4,r4
 800b490:	20000316 	blt	r4,zero,800b4a0 <__hi0bits+0x54>
 800b494:	2110002c 	andhi	r4,r4,16384
 800b498:	2000041e 	bne	r4,zero,800b4ac <__hi0bits+0x60>
 800b49c:	00800804 	movi	r2,32
 800b4a0:	f800283a 	ret
 800b4a4:	0005883a 	mov	r2,zero
 800b4a8:	003fec06 	br	800b45c <__alt_data_end+0xfc00b45c>
 800b4ac:	10800044 	addi	r2,r2,1
 800b4b0:	f800283a 	ret

0800b4b4 <__lo0bits>:
 800b4b4:	20c00017 	ldw	r3,0(r4)
 800b4b8:	188001cc 	andi	r2,r3,7
 800b4bc:	10000826 	beq	r2,zero,800b4e0 <__lo0bits+0x2c>
 800b4c0:	1880004c 	andi	r2,r3,1
 800b4c4:	1000211e 	bne	r2,zero,800b54c <__lo0bits+0x98>
 800b4c8:	1880008c 	andi	r2,r3,2
 800b4cc:	1000211e 	bne	r2,zero,800b554 <__lo0bits+0xa0>
 800b4d0:	1806d0ba 	srli	r3,r3,2
 800b4d4:	00800084 	movi	r2,2
 800b4d8:	20c00015 	stw	r3,0(r4)
 800b4dc:	f800283a 	ret
 800b4e0:	18bfffcc 	andi	r2,r3,65535
 800b4e4:	10001326 	beq	r2,zero,800b534 <__lo0bits+0x80>
 800b4e8:	0005883a 	mov	r2,zero
 800b4ec:	19403fcc 	andi	r5,r3,255
 800b4f0:	2800021e 	bne	r5,zero,800b4fc <__lo0bits+0x48>
 800b4f4:	1806d23a 	srli	r3,r3,8
 800b4f8:	10800204 	addi	r2,r2,8
 800b4fc:	194003cc 	andi	r5,r3,15
 800b500:	2800021e 	bne	r5,zero,800b50c <__lo0bits+0x58>
 800b504:	1806d13a 	srli	r3,r3,4
 800b508:	10800104 	addi	r2,r2,4
 800b50c:	194000cc 	andi	r5,r3,3
 800b510:	2800021e 	bne	r5,zero,800b51c <__lo0bits+0x68>
 800b514:	1806d0ba 	srli	r3,r3,2
 800b518:	10800084 	addi	r2,r2,2
 800b51c:	1940004c 	andi	r5,r3,1
 800b520:	2800081e 	bne	r5,zero,800b544 <__lo0bits+0x90>
 800b524:	1806d07a 	srli	r3,r3,1
 800b528:	1800051e 	bne	r3,zero,800b540 <__lo0bits+0x8c>
 800b52c:	00800804 	movi	r2,32
 800b530:	f800283a 	ret
 800b534:	1806d43a 	srli	r3,r3,16
 800b538:	00800404 	movi	r2,16
 800b53c:	003feb06 	br	800b4ec <__alt_data_end+0xfc00b4ec>
 800b540:	10800044 	addi	r2,r2,1
 800b544:	20c00015 	stw	r3,0(r4)
 800b548:	f800283a 	ret
 800b54c:	0005883a 	mov	r2,zero
 800b550:	f800283a 	ret
 800b554:	1806d07a 	srli	r3,r3,1
 800b558:	00800044 	movi	r2,1
 800b55c:	20c00015 	stw	r3,0(r4)
 800b560:	f800283a 	ret

0800b564 <__i2b>:
 800b564:	defffd04 	addi	sp,sp,-12
 800b568:	dc000015 	stw	r16,0(sp)
 800b56c:	04000044 	movi	r16,1
 800b570:	dc400115 	stw	r17,4(sp)
 800b574:	2823883a 	mov	r17,r5
 800b578:	800b883a 	mov	r5,r16
 800b57c:	dfc00215 	stw	ra,8(sp)
 800b580:	800b13c0 	call	800b13c <_Balloc>
 800b584:	14400515 	stw	r17,20(r2)
 800b588:	14000415 	stw	r16,16(r2)
 800b58c:	dfc00217 	ldw	ra,8(sp)
 800b590:	dc400117 	ldw	r17,4(sp)
 800b594:	dc000017 	ldw	r16,0(sp)
 800b598:	dec00304 	addi	sp,sp,12
 800b59c:	f800283a 	ret

0800b5a0 <__multiply>:
 800b5a0:	deffef04 	addi	sp,sp,-68
 800b5a4:	dc400815 	stw	r17,32(sp)
 800b5a8:	dc000715 	stw	r16,28(sp)
 800b5ac:	2c400417 	ldw	r17,16(r5)
 800b5b0:	34000417 	ldw	r16,16(r6)
 800b5b4:	dd800d15 	stw	r22,52(sp)
 800b5b8:	dc800915 	stw	r18,36(sp)
 800b5bc:	dfc01015 	stw	ra,64(sp)
 800b5c0:	df000f15 	stw	fp,60(sp)
 800b5c4:	ddc00e15 	stw	r23,56(sp)
 800b5c8:	dd400c15 	stw	r21,48(sp)
 800b5cc:	dd000b15 	stw	r20,44(sp)
 800b5d0:	dcc00a15 	stw	r19,40(sp)
 800b5d4:	2825883a 	mov	r18,r5
 800b5d8:	302d883a 	mov	r22,r6
 800b5dc:	8c009116 	blt	r17,r16,800b824 <__multiply+0x284>
 800b5e0:	8005883a 	mov	r2,r16
 800b5e4:	8821883a 	mov	r16,r17
 800b5e8:	1023883a 	mov	r17,r2
 800b5ec:	90800217 	ldw	r2,8(r18)
 800b5f0:	8447883a 	add	r3,r16,r17
 800b5f4:	d8c00215 	stw	r3,8(sp)
 800b5f8:	91400117 	ldw	r5,4(r18)
 800b5fc:	10c0010e 	bge	r2,r3,800b604 <__multiply+0x64>
 800b600:	29400044 	addi	r5,r5,1
 800b604:	800b13c0 	call	800b13c <_Balloc>
 800b608:	d8c00217 	ldw	r3,8(sp)
 800b60c:	d8800615 	stw	r2,24(sp)
 800b610:	18eb883a 	add	r21,r3,r3
 800b614:	ad6b883a 	add	r21,r21,r21
 800b618:	10c00504 	addi	r3,r2,20
 800b61c:	1d6b883a 	add	r21,r3,r21
 800b620:	d8c00115 	stw	r3,4(sp)
 800b624:	dd400315 	stw	r21,12(sp)
 800b628:	1805883a 	mov	r2,r3
 800b62c:	1d40042e 	bgeu	r3,r21,800b640 <__multiply+0xa0>
 800b630:	d8c00317 	ldw	r3,12(sp)
 800b634:	10000015 	stw	zero,0(r2)
 800b638:	10800104 	addi	r2,r2,4
 800b63c:	10fffc36 	bltu	r2,r3,800b630 <__alt_data_end+0xfc00b630>
 800b640:	8c63883a 	add	r17,r17,r17
 800b644:	b5800504 	addi	r22,r22,20
 800b648:	8c63883a 	add	r17,r17,r17
 800b64c:	94800504 	addi	r18,r18,20
 800b650:	8421883a 	add	r16,r16,r16
 800b654:	b463883a 	add	r17,r22,r17
 800b658:	8421883a 	add	r16,r16,r16
 800b65c:	dd800015 	stw	r22,0(sp)
 800b660:	dc800415 	stw	r18,16(sp)
 800b664:	dc400515 	stw	r17,20(sp)
 800b668:	9429883a 	add	r20,r18,r16
 800b66c:	b4404f2e 	bgeu	r22,r17,800b7ac <__multiply+0x20c>
 800b670:	d8c00017 	ldw	r3,0(sp)
 800b674:	1c800017 	ldw	r18,0(r3)
 800b678:	943fffcc 	andi	r16,r18,65535
 800b67c:	80001e26 	beq	r16,zero,800b6f8 <__multiply+0x158>
 800b680:	dd800117 	ldw	r22,4(sp)
 800b684:	dd400417 	ldw	r21,16(sp)
 800b688:	0025883a 	mov	r18,zero
 800b68c:	adc00017 	ldw	r23,0(r21)
 800b690:	b4c00017 	ldw	r19,0(r22)
 800b694:	800b883a 	mov	r5,r16
 800b698:	b93fffcc 	andi	r4,r23,65535
 800b69c:	80027f80 	call	80027f8 <__mulsi3>
 800b6a0:	9c7fffcc 	andi	r17,r19,65535
 800b6a4:	8885883a 	add	r2,r17,r2
 800b6a8:	b808d43a 	srli	r4,r23,16
 800b6ac:	14a3883a 	add	r17,r2,r18
 800b6b0:	9826d43a 	srli	r19,r19,16
 800b6b4:	8824d43a 	srli	r18,r17,16
 800b6b8:	800b883a 	mov	r5,r16
 800b6bc:	80027f80 	call	80027f8 <__mulsi3>
 800b6c0:	9885883a 	add	r2,r19,r2
 800b6c4:	14a7883a 	add	r19,r2,r18
 800b6c8:	88ffffcc 	andi	r3,r17,65535
 800b6cc:	9822943a 	slli	r17,r19,16
 800b6d0:	ad400104 	addi	r21,r21,4
 800b6d4:	b005883a 	mov	r2,r22
 800b6d8:	88c6b03a 	or	r3,r17,r3
 800b6dc:	b0c00015 	stw	r3,0(r22)
 800b6e0:	9824d43a 	srli	r18,r19,16
 800b6e4:	b5800104 	addi	r22,r22,4
 800b6e8:	ad3fe836 	bltu	r21,r20,800b68c <__alt_data_end+0xfc00b68c>
 800b6ec:	d8c00017 	ldw	r3,0(sp)
 800b6f0:	14800115 	stw	r18,4(r2)
 800b6f4:	1c800017 	ldw	r18,0(r3)
 800b6f8:	9024d43a 	srli	r18,r18,16
 800b6fc:	90002226 	beq	r18,zero,800b788 <__multiply+0x1e8>
 800b700:	d8c00117 	ldw	r3,4(sp)
 800b704:	dd800417 	ldw	r22,16(sp)
 800b708:	002f883a 	mov	r23,zero
 800b70c:	1f000017 	ldw	fp,0(r3)
 800b710:	1823883a 	mov	r17,r3
 800b714:	182b883a 	mov	r21,r3
 800b718:	e021883a 	mov	r16,fp
 800b71c:	00000106 	br	800b724 <__multiply+0x184>
 800b720:	982b883a 	mov	r21,r19
 800b724:	b100000b 	ldhu	r4,0(r22)
 800b728:	8020d43a 	srli	r16,r16,16
 800b72c:	900b883a 	mov	r5,r18
 800b730:	80027f80 	call	80027f8 <__mulsi3>
 800b734:	1405883a 	add	r2,r2,r16
 800b738:	15ef883a 	add	r23,r2,r23
 800b73c:	b804943a 	slli	r2,r23,16
 800b740:	e0ffffcc 	andi	r3,fp,65535
 800b744:	8c400104 	addi	r17,r17,4
 800b748:	10c6b03a 	or	r3,r2,r3
 800b74c:	88ffff15 	stw	r3,-4(r17)
 800b750:	b5800104 	addi	r22,r22,4
 800b754:	b13fff17 	ldw	r4,-4(r22)
 800b758:	acc00104 	addi	r19,r21,4
 800b75c:	900b883a 	mov	r5,r18
 800b760:	2008d43a 	srli	r4,r4,16
 800b764:	9c000017 	ldw	r16,0(r19)
 800b768:	80027f80 	call	80027f8 <__mulsi3>
 800b76c:	b806d43a 	srli	r3,r23,16
 800b770:	813fffcc 	andi	r4,r16,65535
 800b774:	1105883a 	add	r2,r2,r4
 800b778:	10f9883a 	add	fp,r2,r3
 800b77c:	e02ed43a 	srli	r23,fp,16
 800b780:	b53fe736 	bltu	r22,r20,800b720 <__alt_data_end+0xfc00b720>
 800b784:	af000115 	stw	fp,4(r21)
 800b788:	d8c00017 	ldw	r3,0(sp)
 800b78c:	d9000517 	ldw	r4,20(sp)
 800b790:	18c00104 	addi	r3,r3,4
 800b794:	d8c00015 	stw	r3,0(sp)
 800b798:	d8c00117 	ldw	r3,4(sp)
 800b79c:	18c00104 	addi	r3,r3,4
 800b7a0:	d8c00115 	stw	r3,4(sp)
 800b7a4:	d8c00017 	ldw	r3,0(sp)
 800b7a8:	193fb136 	bltu	r3,r4,800b670 <__alt_data_end+0xfc00b670>
 800b7ac:	d8c00217 	ldw	r3,8(sp)
 800b7b0:	00c00c0e 	bge	zero,r3,800b7e4 <__multiply+0x244>
 800b7b4:	d8c00317 	ldw	r3,12(sp)
 800b7b8:	18bfff17 	ldw	r2,-4(r3)
 800b7bc:	1d7fff04 	addi	r21,r3,-4
 800b7c0:	10000326 	beq	r2,zero,800b7d0 <__multiply+0x230>
 800b7c4:	00000706 	br	800b7e4 <__multiply+0x244>
 800b7c8:	a8800017 	ldw	r2,0(r21)
 800b7cc:	1000051e 	bne	r2,zero,800b7e4 <__multiply+0x244>
 800b7d0:	d8c00217 	ldw	r3,8(sp)
 800b7d4:	ad7fff04 	addi	r21,r21,-4
 800b7d8:	18ffffc4 	addi	r3,r3,-1
 800b7dc:	d8c00215 	stw	r3,8(sp)
 800b7e0:	183ff91e 	bne	r3,zero,800b7c8 <__alt_data_end+0xfc00b7c8>
 800b7e4:	d8c00617 	ldw	r3,24(sp)
 800b7e8:	d9000217 	ldw	r4,8(sp)
 800b7ec:	1805883a 	mov	r2,r3
 800b7f0:	19000415 	stw	r4,16(r3)
 800b7f4:	dfc01017 	ldw	ra,64(sp)
 800b7f8:	df000f17 	ldw	fp,60(sp)
 800b7fc:	ddc00e17 	ldw	r23,56(sp)
 800b800:	dd800d17 	ldw	r22,52(sp)
 800b804:	dd400c17 	ldw	r21,48(sp)
 800b808:	dd000b17 	ldw	r20,44(sp)
 800b80c:	dcc00a17 	ldw	r19,40(sp)
 800b810:	dc800917 	ldw	r18,36(sp)
 800b814:	dc400817 	ldw	r17,32(sp)
 800b818:	dc000717 	ldw	r16,28(sp)
 800b81c:	dec01104 	addi	sp,sp,68
 800b820:	f800283a 	ret
 800b824:	3025883a 	mov	r18,r6
 800b828:	282d883a 	mov	r22,r5
 800b82c:	003f6f06 	br	800b5ec <__alt_data_end+0xfc00b5ec>

0800b830 <__pow5mult>:
 800b830:	defffa04 	addi	sp,sp,-24
 800b834:	dcc00315 	stw	r19,12(sp)
 800b838:	dc800215 	stw	r18,8(sp)
 800b83c:	dc000015 	stw	r16,0(sp)
 800b840:	dfc00515 	stw	ra,20(sp)
 800b844:	dd000415 	stw	r20,16(sp)
 800b848:	dc400115 	stw	r17,4(sp)
 800b84c:	308000cc 	andi	r2,r6,3
 800b850:	3021883a 	mov	r16,r6
 800b854:	2027883a 	mov	r19,r4
 800b858:	2825883a 	mov	r18,r5
 800b85c:	10002e1e 	bne	r2,zero,800b918 <__pow5mult+0xe8>
 800b860:	8021d0ba 	srai	r16,r16,2
 800b864:	80001a26 	beq	r16,zero,800b8d0 <__pow5mult+0xa0>
 800b868:	9c401217 	ldw	r17,72(r19)
 800b86c:	8800061e 	bne	r17,zero,800b888 <__pow5mult+0x58>
 800b870:	00003406 	br	800b944 <__pow5mult+0x114>
 800b874:	8021d07a 	srai	r16,r16,1
 800b878:	80001526 	beq	r16,zero,800b8d0 <__pow5mult+0xa0>
 800b87c:	88800017 	ldw	r2,0(r17)
 800b880:	10001c26 	beq	r2,zero,800b8f4 <__pow5mult+0xc4>
 800b884:	1023883a 	mov	r17,r2
 800b888:	80c0004c 	andi	r3,r16,1
 800b88c:	183ff926 	beq	r3,zero,800b874 <__alt_data_end+0xfc00b874>
 800b890:	900b883a 	mov	r5,r18
 800b894:	880d883a 	mov	r6,r17
 800b898:	9809883a 	mov	r4,r19
 800b89c:	800b5a00 	call	800b5a0 <__multiply>
 800b8a0:	90001b26 	beq	r18,zero,800b910 <__pow5mult+0xe0>
 800b8a4:	91c00117 	ldw	r7,4(r18)
 800b8a8:	98c01317 	ldw	r3,76(r19)
 800b8ac:	8021d07a 	srai	r16,r16,1
 800b8b0:	39cf883a 	add	r7,r7,r7
 800b8b4:	39cf883a 	add	r7,r7,r7
 800b8b8:	19c7883a 	add	r3,r3,r7
 800b8bc:	19000017 	ldw	r4,0(r3)
 800b8c0:	91000015 	stw	r4,0(r18)
 800b8c4:	1c800015 	stw	r18,0(r3)
 800b8c8:	1025883a 	mov	r18,r2
 800b8cc:	803feb1e 	bne	r16,zero,800b87c <__alt_data_end+0xfc00b87c>
 800b8d0:	9005883a 	mov	r2,r18
 800b8d4:	dfc00517 	ldw	ra,20(sp)
 800b8d8:	dd000417 	ldw	r20,16(sp)
 800b8dc:	dcc00317 	ldw	r19,12(sp)
 800b8e0:	dc800217 	ldw	r18,8(sp)
 800b8e4:	dc400117 	ldw	r17,4(sp)
 800b8e8:	dc000017 	ldw	r16,0(sp)
 800b8ec:	dec00604 	addi	sp,sp,24
 800b8f0:	f800283a 	ret
 800b8f4:	9809883a 	mov	r4,r19
 800b8f8:	880b883a 	mov	r5,r17
 800b8fc:	880d883a 	mov	r6,r17
 800b900:	800b5a00 	call	800b5a0 <__multiply>
 800b904:	88800015 	stw	r2,0(r17)
 800b908:	10000015 	stw	zero,0(r2)
 800b90c:	003fdd06 	br	800b884 <__alt_data_end+0xfc00b884>
 800b910:	1025883a 	mov	r18,r2
 800b914:	003fd706 	br	800b874 <__alt_data_end+0xfc00b874>
 800b918:	10bfffc4 	addi	r2,r2,-1
 800b91c:	1085883a 	add	r2,r2,r2
 800b920:	00c20074 	movhi	r3,2049
 800b924:	18db6d04 	addi	r3,r3,28084
 800b928:	1085883a 	add	r2,r2,r2
 800b92c:	1885883a 	add	r2,r3,r2
 800b930:	11800017 	ldw	r6,0(r2)
 800b934:	000f883a 	mov	r7,zero
 800b938:	800b20c0 	call	800b20c <__multadd>
 800b93c:	1025883a 	mov	r18,r2
 800b940:	003fc706 	br	800b860 <__alt_data_end+0xfc00b860>
 800b944:	05000044 	movi	r20,1
 800b948:	9809883a 	mov	r4,r19
 800b94c:	a00b883a 	mov	r5,r20
 800b950:	800b13c0 	call	800b13c <_Balloc>
 800b954:	1023883a 	mov	r17,r2
 800b958:	00809c44 	movi	r2,625
 800b95c:	88800515 	stw	r2,20(r17)
 800b960:	8d000415 	stw	r20,16(r17)
 800b964:	9c401215 	stw	r17,72(r19)
 800b968:	88000015 	stw	zero,0(r17)
 800b96c:	003fc606 	br	800b888 <__alt_data_end+0xfc00b888>

0800b970 <__lshift>:
 800b970:	defff904 	addi	sp,sp,-28
 800b974:	dd000415 	stw	r20,16(sp)
 800b978:	dcc00315 	stw	r19,12(sp)
 800b97c:	3029d17a 	srai	r20,r6,5
 800b980:	2cc00417 	ldw	r19,16(r5)
 800b984:	28800217 	ldw	r2,8(r5)
 800b988:	dd400515 	stw	r21,20(sp)
 800b98c:	a4e7883a 	add	r19,r20,r19
 800b990:	dc800215 	stw	r18,8(sp)
 800b994:	dc400115 	stw	r17,4(sp)
 800b998:	dc000015 	stw	r16,0(sp)
 800b99c:	dfc00615 	stw	ra,24(sp)
 800b9a0:	9c000044 	addi	r16,r19,1
 800b9a4:	2823883a 	mov	r17,r5
 800b9a8:	302b883a 	mov	r21,r6
 800b9ac:	2025883a 	mov	r18,r4
 800b9b0:	29400117 	ldw	r5,4(r5)
 800b9b4:	1400030e 	bge	r2,r16,800b9c4 <__lshift+0x54>
 800b9b8:	1085883a 	add	r2,r2,r2
 800b9bc:	29400044 	addi	r5,r5,1
 800b9c0:	143ffd16 	blt	r2,r16,800b9b8 <__alt_data_end+0xfc00b9b8>
 800b9c4:	9009883a 	mov	r4,r18
 800b9c8:	800b13c0 	call	800b13c <_Balloc>
 800b9cc:	11c00504 	addi	r7,r2,20
 800b9d0:	0500090e 	bge	zero,r20,800b9f8 <__lshift+0x88>
 800b9d4:	3811883a 	mov	r8,r7
 800b9d8:	0007883a 	mov	r3,zero
 800b9dc:	40000015 	stw	zero,0(r8)
 800b9e0:	18c00044 	addi	r3,r3,1
 800b9e4:	42000104 	addi	r8,r8,4
 800b9e8:	1d3ffc1e 	bne	r3,r20,800b9dc <__alt_data_end+0xfc00b9dc>
 800b9ec:	18c7883a 	add	r3,r3,r3
 800b9f0:	18c7883a 	add	r3,r3,r3
 800b9f4:	38cf883a 	add	r7,r7,r3
 800b9f8:	89000417 	ldw	r4,16(r17)
 800b9fc:	88c00504 	addi	r3,r17,20
 800ba00:	a98007cc 	andi	r6,r21,31
 800ba04:	2109883a 	add	r4,r4,r4
 800ba08:	2109883a 	add	r4,r4,r4
 800ba0c:	1909883a 	add	r4,r3,r4
 800ba10:	30002326 	beq	r6,zero,800baa0 <__lshift+0x130>
 800ba14:	01400804 	movi	r5,32
 800ba18:	298bc83a 	sub	r5,r5,r6
 800ba1c:	0013883a 	mov	r9,zero
 800ba20:	1a000017 	ldw	r8,0(r3)
 800ba24:	3815883a 	mov	r10,r7
 800ba28:	39c00104 	addi	r7,r7,4
 800ba2c:	4190983a 	sll	r8,r8,r6
 800ba30:	18c00104 	addi	r3,r3,4
 800ba34:	4a10b03a 	or	r8,r9,r8
 800ba38:	3a3fff15 	stw	r8,-4(r7)
 800ba3c:	1a3fff17 	ldw	r8,-4(r3)
 800ba40:	4152d83a 	srl	r9,r8,r5
 800ba44:	193ff636 	bltu	r3,r4,800ba20 <__alt_data_end+0xfc00ba20>
 800ba48:	52400115 	stw	r9,4(r10)
 800ba4c:	48000126 	beq	r9,zero,800ba54 <__lshift+0xe4>
 800ba50:	9c000084 	addi	r16,r19,2
 800ba54:	89000117 	ldw	r4,4(r17)
 800ba58:	90c01317 	ldw	r3,76(r18)
 800ba5c:	843fffc4 	addi	r16,r16,-1
 800ba60:	2109883a 	add	r4,r4,r4
 800ba64:	2109883a 	add	r4,r4,r4
 800ba68:	1907883a 	add	r3,r3,r4
 800ba6c:	19000017 	ldw	r4,0(r3)
 800ba70:	14000415 	stw	r16,16(r2)
 800ba74:	89000015 	stw	r4,0(r17)
 800ba78:	1c400015 	stw	r17,0(r3)
 800ba7c:	dfc00617 	ldw	ra,24(sp)
 800ba80:	dd400517 	ldw	r21,20(sp)
 800ba84:	dd000417 	ldw	r20,16(sp)
 800ba88:	dcc00317 	ldw	r19,12(sp)
 800ba8c:	dc800217 	ldw	r18,8(sp)
 800ba90:	dc400117 	ldw	r17,4(sp)
 800ba94:	dc000017 	ldw	r16,0(sp)
 800ba98:	dec00704 	addi	sp,sp,28
 800ba9c:	f800283a 	ret
 800baa0:	19400017 	ldw	r5,0(r3)
 800baa4:	39c00104 	addi	r7,r7,4
 800baa8:	18c00104 	addi	r3,r3,4
 800baac:	397fff15 	stw	r5,-4(r7)
 800bab0:	193ffb36 	bltu	r3,r4,800baa0 <__alt_data_end+0xfc00baa0>
 800bab4:	003fe706 	br	800ba54 <__alt_data_end+0xfc00ba54>

0800bab8 <__mcmp>:
 800bab8:	20800417 	ldw	r2,16(r4)
 800babc:	28c00417 	ldw	r3,16(r5)
 800bac0:	10c5c83a 	sub	r2,r2,r3
 800bac4:	1000111e 	bne	r2,zero,800bb0c <__mcmp+0x54>
 800bac8:	18c7883a 	add	r3,r3,r3
 800bacc:	18c7883a 	add	r3,r3,r3
 800bad0:	21000504 	addi	r4,r4,20
 800bad4:	29400504 	addi	r5,r5,20
 800bad8:	20c5883a 	add	r2,r4,r3
 800badc:	28cb883a 	add	r5,r5,r3
 800bae0:	00000106 	br	800bae8 <__mcmp+0x30>
 800bae4:	20800a2e 	bgeu	r4,r2,800bb10 <__mcmp+0x58>
 800bae8:	10bfff04 	addi	r2,r2,-4
 800baec:	297fff04 	addi	r5,r5,-4
 800baf0:	11800017 	ldw	r6,0(r2)
 800baf4:	28c00017 	ldw	r3,0(r5)
 800baf8:	30fffa26 	beq	r6,r3,800bae4 <__alt_data_end+0xfc00bae4>
 800bafc:	30c00236 	bltu	r6,r3,800bb08 <__mcmp+0x50>
 800bb00:	00800044 	movi	r2,1
 800bb04:	f800283a 	ret
 800bb08:	00bfffc4 	movi	r2,-1
 800bb0c:	f800283a 	ret
 800bb10:	0005883a 	mov	r2,zero
 800bb14:	f800283a 	ret

0800bb18 <__mdiff>:
 800bb18:	defffb04 	addi	sp,sp,-20
 800bb1c:	dc000015 	stw	r16,0(sp)
 800bb20:	2821883a 	mov	r16,r5
 800bb24:	dcc00315 	stw	r19,12(sp)
 800bb28:	300b883a 	mov	r5,r6
 800bb2c:	2027883a 	mov	r19,r4
 800bb30:	8009883a 	mov	r4,r16
 800bb34:	dc800215 	stw	r18,8(sp)
 800bb38:	dfc00415 	stw	ra,16(sp)
 800bb3c:	dc400115 	stw	r17,4(sp)
 800bb40:	3025883a 	mov	r18,r6
 800bb44:	800bab80 	call	800bab8 <__mcmp>
 800bb48:	10005226 	beq	r2,zero,800bc94 <__mdiff+0x17c>
 800bb4c:	10004c16 	blt	r2,zero,800bc80 <__mdiff+0x168>
 800bb50:	0023883a 	mov	r17,zero
 800bb54:	81400117 	ldw	r5,4(r16)
 800bb58:	9809883a 	mov	r4,r19
 800bb5c:	800b13c0 	call	800b13c <_Balloc>
 800bb60:	83400417 	ldw	r13,16(r16)
 800bb64:	93800417 	ldw	r14,16(r18)
 800bb68:	81000504 	addi	r4,r16,20
 800bb6c:	6b59883a 	add	r12,r13,r13
 800bb70:	739d883a 	add	r14,r14,r14
 800bb74:	6319883a 	add	r12,r12,r12
 800bb78:	91800504 	addi	r6,r18,20
 800bb7c:	739d883a 	add	r14,r14,r14
 800bb80:	14400315 	stw	r17,12(r2)
 800bb84:	2319883a 	add	r12,r4,r12
 800bb88:	339d883a 	add	r14,r6,r14
 800bb8c:	12400504 	addi	r9,r2,20
 800bb90:	0007883a 	mov	r3,zero
 800bb94:	22000017 	ldw	r8,0(r4)
 800bb98:	32800017 	ldw	r10,0(r6)
 800bb9c:	4ac00104 	addi	r11,r9,4
 800bba0:	41ffffcc 	andi	r7,r8,65535
 800bba4:	38c7883a 	add	r3,r7,r3
 800bba8:	51ffffcc 	andi	r7,r10,65535
 800bbac:	19cfc83a 	sub	r7,r3,r7
 800bbb0:	4010d43a 	srli	r8,r8,16
 800bbb4:	5014d43a 	srli	r10,r10,16
 800bbb8:	3807d43a 	srai	r3,r7,16
 800bbbc:	39ffffcc 	andi	r7,r7,65535
 800bbc0:	4291c83a 	sub	r8,r8,r10
 800bbc4:	40c7883a 	add	r3,r8,r3
 800bbc8:	1810943a 	slli	r8,r3,16
 800bbcc:	31800104 	addi	r6,r6,4
 800bbd0:	21000104 	addi	r4,r4,4
 800bbd4:	41ceb03a 	or	r7,r8,r7
 800bbd8:	49c00015 	stw	r7,0(r9)
 800bbdc:	1807d43a 	srai	r3,r3,16
 800bbe0:	580b883a 	mov	r5,r11
 800bbe4:	5813883a 	mov	r9,r11
 800bbe8:	33bfea36 	bltu	r6,r14,800bb94 <__alt_data_end+0xfc00bb94>
 800bbec:	2011883a 	mov	r8,r4
 800bbf0:	2300152e 	bgeu	r4,r12,800bc48 <__mdiff+0x130>
 800bbf4:	21400017 	ldw	r5,0(r4)
 800bbf8:	4a400104 	addi	r9,r9,4
 800bbfc:	21000104 	addi	r4,r4,4
 800bc00:	29ffffcc 	andi	r7,r5,65535
 800bc04:	38c7883a 	add	r3,r7,r3
 800bc08:	280ad43a 	srli	r5,r5,16
 800bc0c:	180dd43a 	srai	r6,r3,16
 800bc10:	19ffffcc 	andi	r7,r3,65535
 800bc14:	3147883a 	add	r3,r6,r5
 800bc18:	180a943a 	slli	r5,r3,16
 800bc1c:	1807d43a 	srai	r3,r3,16
 800bc20:	29ceb03a 	or	r7,r5,r7
 800bc24:	49ffff15 	stw	r7,-4(r9)
 800bc28:	233ff236 	bltu	r4,r12,800bbf4 <__alt_data_end+0xfc00bbf4>
 800bc2c:	0206303a 	nor	r3,zero,r8
 800bc30:	1b07883a 	add	r3,r3,r12
 800bc34:	1806d0ba 	srli	r3,r3,2
 800bc38:	18c00044 	addi	r3,r3,1
 800bc3c:	18c7883a 	add	r3,r3,r3
 800bc40:	18c7883a 	add	r3,r3,r3
 800bc44:	58cb883a 	add	r5,r11,r3
 800bc48:	28ffff04 	addi	r3,r5,-4
 800bc4c:	3800041e 	bne	r7,zero,800bc60 <__mdiff+0x148>
 800bc50:	18ffff04 	addi	r3,r3,-4
 800bc54:	19000017 	ldw	r4,0(r3)
 800bc58:	6b7fffc4 	addi	r13,r13,-1
 800bc5c:	203ffc26 	beq	r4,zero,800bc50 <__alt_data_end+0xfc00bc50>
 800bc60:	13400415 	stw	r13,16(r2)
 800bc64:	dfc00417 	ldw	ra,16(sp)
 800bc68:	dcc00317 	ldw	r19,12(sp)
 800bc6c:	dc800217 	ldw	r18,8(sp)
 800bc70:	dc400117 	ldw	r17,4(sp)
 800bc74:	dc000017 	ldw	r16,0(sp)
 800bc78:	dec00504 	addi	sp,sp,20
 800bc7c:	f800283a 	ret
 800bc80:	8005883a 	mov	r2,r16
 800bc84:	04400044 	movi	r17,1
 800bc88:	9021883a 	mov	r16,r18
 800bc8c:	1025883a 	mov	r18,r2
 800bc90:	003fb006 	br	800bb54 <__alt_data_end+0xfc00bb54>
 800bc94:	9809883a 	mov	r4,r19
 800bc98:	000b883a 	mov	r5,zero
 800bc9c:	800b13c0 	call	800b13c <_Balloc>
 800bca0:	00c00044 	movi	r3,1
 800bca4:	10c00415 	stw	r3,16(r2)
 800bca8:	10000515 	stw	zero,20(r2)
 800bcac:	003fed06 	br	800bc64 <__alt_data_end+0xfc00bc64>

0800bcb0 <__ulp>:
 800bcb0:	295ffc2c 	andhi	r5,r5,32752
 800bcb4:	00bf3034 	movhi	r2,64704
 800bcb8:	2887883a 	add	r3,r5,r2
 800bcbc:	00c0020e 	bge	zero,r3,800bcc8 <__ulp+0x18>
 800bcc0:	0005883a 	mov	r2,zero
 800bcc4:	f800283a 	ret
 800bcc8:	00c7c83a 	sub	r3,zero,r3
 800bccc:	180bd53a 	srai	r5,r3,20
 800bcd0:	008004c4 	movi	r2,19
 800bcd4:	11400a0e 	bge	r2,r5,800bd00 <__ulp+0x50>
 800bcd8:	00800c84 	movi	r2,50
 800bcdc:	0007883a 	mov	r3,zero
 800bce0:	11400516 	blt	r2,r5,800bcf8 <__ulp+0x48>
 800bce4:	00800cc4 	movi	r2,51
 800bce8:	114bc83a 	sub	r5,r2,r5
 800bcec:	00800044 	movi	r2,1
 800bcf0:	1144983a 	sll	r2,r2,r5
 800bcf4:	f800283a 	ret
 800bcf8:	00800044 	movi	r2,1
 800bcfc:	f800283a 	ret
 800bd00:	00800234 	movhi	r2,8
 800bd04:	1147d83a 	sra	r3,r2,r5
 800bd08:	0005883a 	mov	r2,zero
 800bd0c:	f800283a 	ret

0800bd10 <__b2d>:
 800bd10:	defffa04 	addi	sp,sp,-24
 800bd14:	dc000015 	stw	r16,0(sp)
 800bd18:	24000417 	ldw	r16,16(r4)
 800bd1c:	dc400115 	stw	r17,4(sp)
 800bd20:	24400504 	addi	r17,r4,20
 800bd24:	8421883a 	add	r16,r16,r16
 800bd28:	8421883a 	add	r16,r16,r16
 800bd2c:	8c21883a 	add	r16,r17,r16
 800bd30:	dc800215 	stw	r18,8(sp)
 800bd34:	84bfff17 	ldw	r18,-4(r16)
 800bd38:	dd000415 	stw	r20,16(sp)
 800bd3c:	dcc00315 	stw	r19,12(sp)
 800bd40:	9009883a 	mov	r4,r18
 800bd44:	2829883a 	mov	r20,r5
 800bd48:	dfc00515 	stw	ra,20(sp)
 800bd4c:	800b44c0 	call	800b44c <__hi0bits>
 800bd50:	00c00804 	movi	r3,32
 800bd54:	1887c83a 	sub	r3,r3,r2
 800bd58:	a0c00015 	stw	r3,0(r20)
 800bd5c:	00c00284 	movi	r3,10
 800bd60:	84ffff04 	addi	r19,r16,-4
 800bd64:	18801216 	blt	r3,r2,800bdb0 <__b2d+0xa0>
 800bd68:	014002c4 	movi	r5,11
 800bd6c:	2889c83a 	sub	r4,r5,r2
 800bd70:	9106d83a 	srl	r3,r18,r4
 800bd74:	18cffc34 	orhi	r3,r3,16368
 800bd78:	8cc0282e 	bgeu	r17,r19,800be1c <__b2d+0x10c>
 800bd7c:	817ffe17 	ldw	r5,-8(r16)
 800bd80:	290ad83a 	srl	r5,r5,r4
 800bd84:	10800544 	addi	r2,r2,21
 800bd88:	9084983a 	sll	r2,r18,r2
 800bd8c:	2884b03a 	or	r2,r5,r2
 800bd90:	dfc00517 	ldw	ra,20(sp)
 800bd94:	dd000417 	ldw	r20,16(sp)
 800bd98:	dcc00317 	ldw	r19,12(sp)
 800bd9c:	dc800217 	ldw	r18,8(sp)
 800bda0:	dc400117 	ldw	r17,4(sp)
 800bda4:	dc000017 	ldw	r16,0(sp)
 800bda8:	dec00604 	addi	sp,sp,24
 800bdac:	f800283a 	ret
 800bdb0:	113ffd44 	addi	r4,r2,-11
 800bdb4:	8cc00f2e 	bgeu	r17,r19,800bdf4 <__b2d+0xe4>
 800bdb8:	81bffe04 	addi	r6,r16,-8
 800bdbc:	817ffe17 	ldw	r5,-8(r16)
 800bdc0:	20001326 	beq	r4,zero,800be10 <__b2d+0x100>
 800bdc4:	00c00ac4 	movi	r3,43
 800bdc8:	1885c83a 	sub	r2,r3,r2
 800bdcc:	2886d83a 	srl	r3,r5,r2
 800bdd0:	9124983a 	sll	r18,r18,r4
 800bdd4:	90e4b03a 	or	r18,r18,r3
 800bdd8:	90cffc34 	orhi	r3,r18,16368
 800bddc:	8980112e 	bgeu	r17,r6,800be24 <__b2d+0x114>
 800bde0:	81bffd17 	ldw	r6,-12(r16)
 800bde4:	308cd83a 	srl	r6,r6,r2
 800bde8:	2904983a 	sll	r2,r5,r4
 800bdec:	1184b03a 	or	r2,r2,r6
 800bdf0:	003fe706 	br	800bd90 <__alt_data_end+0xfc00bd90>
 800bdf4:	20000526 	beq	r4,zero,800be0c <__b2d+0xfc>
 800bdf8:	9124983a 	sll	r18,r18,r4
 800bdfc:	000d883a 	mov	r6,zero
 800be00:	000b883a 	mov	r5,zero
 800be04:	90cffc34 	orhi	r3,r18,16368
 800be08:	003ff706 	br	800bde8 <__alt_data_end+0xfc00bde8>
 800be0c:	000b883a 	mov	r5,zero
 800be10:	90cffc34 	orhi	r3,r18,16368
 800be14:	2805883a 	mov	r2,r5
 800be18:	003fdd06 	br	800bd90 <__alt_data_end+0xfc00bd90>
 800be1c:	000b883a 	mov	r5,zero
 800be20:	003fd806 	br	800bd84 <__alt_data_end+0xfc00bd84>
 800be24:	000d883a 	mov	r6,zero
 800be28:	003fef06 	br	800bde8 <__alt_data_end+0xfc00bde8>

0800be2c <__d2b>:
 800be2c:	defff704 	addi	sp,sp,-36
 800be30:	dc000215 	stw	r16,8(sp)
 800be34:	3021883a 	mov	r16,r6
 800be38:	dc400315 	stw	r17,12(sp)
 800be3c:	8022907a 	slli	r17,r16,1
 800be40:	dd400715 	stw	r21,28(sp)
 800be44:	282b883a 	mov	r21,r5
 800be48:	01400044 	movi	r5,1
 800be4c:	dd000615 	stw	r20,24(sp)
 800be50:	dcc00515 	stw	r19,20(sp)
 800be54:	dc800415 	stw	r18,16(sp)
 800be58:	dfc00815 	stw	ra,32(sp)
 800be5c:	3829883a 	mov	r20,r7
 800be60:	dc800917 	ldw	r18,36(sp)
 800be64:	8822d57a 	srli	r17,r17,21
 800be68:	800b13c0 	call	800b13c <_Balloc>
 800be6c:	1027883a 	mov	r19,r2
 800be70:	00800434 	movhi	r2,16
 800be74:	10bfffc4 	addi	r2,r2,-1
 800be78:	808c703a 	and	r6,r16,r2
 800be7c:	88000126 	beq	r17,zero,800be84 <__d2b+0x58>
 800be80:	31800434 	orhi	r6,r6,16
 800be84:	d9800015 	stw	r6,0(sp)
 800be88:	a8001f26 	beq	r21,zero,800bf08 <__d2b+0xdc>
 800be8c:	d9000104 	addi	r4,sp,4
 800be90:	dd400115 	stw	r21,4(sp)
 800be94:	800b4b40 	call	800b4b4 <__lo0bits>
 800be98:	d8c00017 	ldw	r3,0(sp)
 800be9c:	1000291e 	bne	r2,zero,800bf44 <__d2b+0x118>
 800bea0:	d9000117 	ldw	r4,4(sp)
 800bea4:	99000515 	stw	r4,20(r19)
 800bea8:	1820c03a 	cmpne	r16,r3,zero
 800beac:	84000044 	addi	r16,r16,1
 800beb0:	98c00615 	stw	r3,24(r19)
 800beb4:	9c000415 	stw	r16,16(r19)
 800beb8:	88001b1e 	bne	r17,zero,800bf28 <__d2b+0xfc>
 800bebc:	800690ba 	slli	r3,r16,2
 800bec0:	10bef384 	addi	r2,r2,-1074
 800bec4:	a0800015 	stw	r2,0(r20)
 800bec8:	98c5883a 	add	r2,r19,r3
 800becc:	11000417 	ldw	r4,16(r2)
 800bed0:	8020917a 	slli	r16,r16,5
 800bed4:	800b44c0 	call	800b44c <__hi0bits>
 800bed8:	8085c83a 	sub	r2,r16,r2
 800bedc:	90800015 	stw	r2,0(r18)
 800bee0:	9805883a 	mov	r2,r19
 800bee4:	dfc00817 	ldw	ra,32(sp)
 800bee8:	dd400717 	ldw	r21,28(sp)
 800beec:	dd000617 	ldw	r20,24(sp)
 800bef0:	dcc00517 	ldw	r19,20(sp)
 800bef4:	dc800417 	ldw	r18,16(sp)
 800bef8:	dc400317 	ldw	r17,12(sp)
 800befc:	dc000217 	ldw	r16,8(sp)
 800bf00:	dec00904 	addi	sp,sp,36
 800bf04:	f800283a 	ret
 800bf08:	d809883a 	mov	r4,sp
 800bf0c:	800b4b40 	call	800b4b4 <__lo0bits>
 800bf10:	d8c00017 	ldw	r3,0(sp)
 800bf14:	04000044 	movi	r16,1
 800bf18:	9c000415 	stw	r16,16(r19)
 800bf1c:	98c00515 	stw	r3,20(r19)
 800bf20:	10800804 	addi	r2,r2,32
 800bf24:	883fe526 	beq	r17,zero,800bebc <__alt_data_end+0xfc00bebc>
 800bf28:	8c7ef344 	addi	r17,r17,-1075
 800bf2c:	88a3883a 	add	r17,r17,r2
 800bf30:	00c00d44 	movi	r3,53
 800bf34:	a4400015 	stw	r17,0(r20)
 800bf38:	1885c83a 	sub	r2,r3,r2
 800bf3c:	90800015 	stw	r2,0(r18)
 800bf40:	003fe706 	br	800bee0 <__alt_data_end+0xfc00bee0>
 800bf44:	01000804 	movi	r4,32
 800bf48:	2089c83a 	sub	r4,r4,r2
 800bf4c:	1908983a 	sll	r4,r3,r4
 800bf50:	d9400117 	ldw	r5,4(sp)
 800bf54:	1886d83a 	srl	r3,r3,r2
 800bf58:	2148b03a 	or	r4,r4,r5
 800bf5c:	99000515 	stw	r4,20(r19)
 800bf60:	d8c00015 	stw	r3,0(sp)
 800bf64:	003fd006 	br	800bea8 <__alt_data_end+0xfc00bea8>

0800bf68 <__ratio>:
 800bf68:	defff904 	addi	sp,sp,-28
 800bf6c:	dc400315 	stw	r17,12(sp)
 800bf70:	2823883a 	mov	r17,r5
 800bf74:	d9400104 	addi	r5,sp,4
 800bf78:	dfc00615 	stw	ra,24(sp)
 800bf7c:	dcc00515 	stw	r19,20(sp)
 800bf80:	dc800415 	stw	r18,16(sp)
 800bf84:	2027883a 	mov	r19,r4
 800bf88:	dc000215 	stw	r16,8(sp)
 800bf8c:	800bd100 	call	800bd10 <__b2d>
 800bf90:	8809883a 	mov	r4,r17
 800bf94:	d80b883a 	mov	r5,sp
 800bf98:	1025883a 	mov	r18,r2
 800bf9c:	1821883a 	mov	r16,r3
 800bfa0:	800bd100 	call	800bd10 <__b2d>
 800bfa4:	8a400417 	ldw	r9,16(r17)
 800bfa8:	9a000417 	ldw	r8,16(r19)
 800bfac:	100d883a 	mov	r6,r2
 800bfb0:	d8800017 	ldw	r2,0(sp)
 800bfb4:	4251c83a 	sub	r8,r8,r9
 800bfb8:	4012917a 	slli	r9,r8,5
 800bfbc:	da000117 	ldw	r8,4(sp)
 800bfc0:	4091c83a 	sub	r8,r8,r2
 800bfc4:	4251883a 	add	r8,r8,r9
 800bfc8:	02000d0e 	bge	zero,r8,800c000 <__ratio+0x98>
 800bfcc:	4010953a 	slli	r8,r8,20
 800bfd0:	4421883a 	add	r16,r8,r16
 800bfd4:	9009883a 	mov	r4,r18
 800bfd8:	800b883a 	mov	r5,r16
 800bfdc:	180f883a 	mov	r7,r3
 800bfe0:	80111380 	call	8011138 <__divdf3>
 800bfe4:	dfc00617 	ldw	ra,24(sp)
 800bfe8:	dcc00517 	ldw	r19,20(sp)
 800bfec:	dc800417 	ldw	r18,16(sp)
 800bff0:	dc400317 	ldw	r17,12(sp)
 800bff4:	dc000217 	ldw	r16,8(sp)
 800bff8:	dec00704 	addi	sp,sp,28
 800bffc:	f800283a 	ret
 800c000:	4010953a 	slli	r8,r8,20
 800c004:	1a07c83a 	sub	r3,r3,r8
 800c008:	003ff206 	br	800bfd4 <__alt_data_end+0xfc00bfd4>

0800c00c <_mprec_log10>:
 800c00c:	defffe04 	addi	sp,sp,-8
 800c010:	dc000015 	stw	r16,0(sp)
 800c014:	dfc00115 	stw	ra,4(sp)
 800c018:	008005c4 	movi	r2,23
 800c01c:	2021883a 	mov	r16,r4
 800c020:	11000d0e 	bge	r2,r4,800c058 <_mprec_log10+0x4c>
 800c024:	0005883a 	mov	r2,zero
 800c028:	00cffc34 	movhi	r3,16368
 800c02c:	843fffc4 	addi	r16,r16,-1
 800c030:	1009883a 	mov	r4,r2
 800c034:	180b883a 	mov	r5,r3
 800c038:	000d883a 	mov	r6,zero
 800c03c:	01d00934 	movhi	r7,16420
 800c040:	8011cfc0 	call	8011cfc <__muldf3>
 800c044:	803ff91e 	bne	r16,zero,800c02c <__alt_data_end+0xfc00c02c>
 800c048:	dfc00117 	ldw	ra,4(sp)
 800c04c:	dc000017 	ldw	r16,0(sp)
 800c050:	dec00204 	addi	sp,sp,8
 800c054:	f800283a 	ret
 800c058:	202090fa 	slli	r16,r4,3
 800c05c:	00820074 	movhi	r2,2049
 800c060:	109b8404 	addi	r2,r2,28176
 800c064:	1421883a 	add	r16,r2,r16
 800c068:	80800017 	ldw	r2,0(r16)
 800c06c:	80c00117 	ldw	r3,4(r16)
 800c070:	dfc00117 	ldw	ra,4(sp)
 800c074:	dc000017 	ldw	r16,0(sp)
 800c078:	dec00204 	addi	sp,sp,8
 800c07c:	f800283a 	ret

0800c080 <__copybits>:
 800c080:	297fffc4 	addi	r5,r5,-1
 800c084:	280fd17a 	srai	r7,r5,5
 800c088:	30c00417 	ldw	r3,16(r6)
 800c08c:	30800504 	addi	r2,r6,20
 800c090:	39c00044 	addi	r7,r7,1
 800c094:	18c7883a 	add	r3,r3,r3
 800c098:	39cf883a 	add	r7,r7,r7
 800c09c:	18c7883a 	add	r3,r3,r3
 800c0a0:	39cf883a 	add	r7,r7,r7
 800c0a4:	10c7883a 	add	r3,r2,r3
 800c0a8:	21cf883a 	add	r7,r4,r7
 800c0ac:	10c00d2e 	bgeu	r2,r3,800c0e4 <__copybits+0x64>
 800c0b0:	200b883a 	mov	r5,r4
 800c0b4:	12000017 	ldw	r8,0(r2)
 800c0b8:	29400104 	addi	r5,r5,4
 800c0bc:	10800104 	addi	r2,r2,4
 800c0c0:	2a3fff15 	stw	r8,-4(r5)
 800c0c4:	10fffb36 	bltu	r2,r3,800c0b4 <__alt_data_end+0xfc00c0b4>
 800c0c8:	1985c83a 	sub	r2,r3,r6
 800c0cc:	10bffac4 	addi	r2,r2,-21
 800c0d0:	1004d0ba 	srli	r2,r2,2
 800c0d4:	10800044 	addi	r2,r2,1
 800c0d8:	1085883a 	add	r2,r2,r2
 800c0dc:	1085883a 	add	r2,r2,r2
 800c0e0:	2089883a 	add	r4,r4,r2
 800c0e4:	21c0032e 	bgeu	r4,r7,800c0f4 <__copybits+0x74>
 800c0e8:	20000015 	stw	zero,0(r4)
 800c0ec:	21000104 	addi	r4,r4,4
 800c0f0:	21fffd36 	bltu	r4,r7,800c0e8 <__alt_data_end+0xfc00c0e8>
 800c0f4:	f800283a 	ret

0800c0f8 <__any_on>:
 800c0f8:	20c00417 	ldw	r3,16(r4)
 800c0fc:	2805d17a 	srai	r2,r5,5
 800c100:	21000504 	addi	r4,r4,20
 800c104:	18800d0e 	bge	r3,r2,800c13c <__any_on+0x44>
 800c108:	18c7883a 	add	r3,r3,r3
 800c10c:	18c7883a 	add	r3,r3,r3
 800c110:	20c7883a 	add	r3,r4,r3
 800c114:	20c0192e 	bgeu	r4,r3,800c17c <__any_on+0x84>
 800c118:	18bfff17 	ldw	r2,-4(r3)
 800c11c:	18ffff04 	addi	r3,r3,-4
 800c120:	1000041e 	bne	r2,zero,800c134 <__any_on+0x3c>
 800c124:	20c0142e 	bgeu	r4,r3,800c178 <__any_on+0x80>
 800c128:	18ffff04 	addi	r3,r3,-4
 800c12c:	19400017 	ldw	r5,0(r3)
 800c130:	283ffc26 	beq	r5,zero,800c124 <__alt_data_end+0xfc00c124>
 800c134:	00800044 	movi	r2,1
 800c138:	f800283a 	ret
 800c13c:	10c00a0e 	bge	r2,r3,800c168 <__any_on+0x70>
 800c140:	1085883a 	add	r2,r2,r2
 800c144:	1085883a 	add	r2,r2,r2
 800c148:	294007cc 	andi	r5,r5,31
 800c14c:	2087883a 	add	r3,r4,r2
 800c150:	283ff026 	beq	r5,zero,800c114 <__alt_data_end+0xfc00c114>
 800c154:	19800017 	ldw	r6,0(r3)
 800c158:	3144d83a 	srl	r2,r6,r5
 800c15c:	114a983a 	sll	r5,r2,r5
 800c160:	29bff41e 	bne	r5,r6,800c134 <__alt_data_end+0xfc00c134>
 800c164:	003feb06 	br	800c114 <__alt_data_end+0xfc00c114>
 800c168:	1085883a 	add	r2,r2,r2
 800c16c:	1085883a 	add	r2,r2,r2
 800c170:	2087883a 	add	r3,r4,r2
 800c174:	003fe706 	br	800c114 <__alt_data_end+0xfc00c114>
 800c178:	f800283a 	ret
 800c17c:	0005883a 	mov	r2,zero
 800c180:	f800283a 	ret

0800c184 <_realloc_r>:
 800c184:	defff604 	addi	sp,sp,-40
 800c188:	dcc00315 	stw	r19,12(sp)
 800c18c:	dc400115 	stw	r17,4(sp)
 800c190:	dfc00915 	stw	ra,36(sp)
 800c194:	df000815 	stw	fp,32(sp)
 800c198:	ddc00715 	stw	r23,28(sp)
 800c19c:	dd800615 	stw	r22,24(sp)
 800c1a0:	dd400515 	stw	r21,20(sp)
 800c1a4:	dd000415 	stw	r20,16(sp)
 800c1a8:	dc800215 	stw	r18,8(sp)
 800c1ac:	dc000015 	stw	r16,0(sp)
 800c1b0:	2827883a 	mov	r19,r5
 800c1b4:	3023883a 	mov	r17,r6
 800c1b8:	2800bf26 	beq	r5,zero,800c4b8 <_realloc_r+0x334>
 800c1bc:	2025883a 	mov	r18,r4
 800c1c0:	801384c0 	call	801384c <__malloc_lock>
 800c1c4:	98ffff17 	ldw	r3,-4(r19)
 800c1c8:	01bfff04 	movi	r6,-4
 800c1cc:	890002c4 	addi	r4,r17,11
 800c1d0:	01c00584 	movi	r7,22
 800c1d4:	9d7ffe04 	addi	r21,r19,-8
 800c1d8:	19a0703a 	and	r16,r3,r6
 800c1dc:	39003f2e 	bgeu	r7,r4,800c2dc <_realloc_r+0x158>
 800c1e0:	053ffe04 	movi	r20,-8
 800c1e4:	2528703a 	and	r20,r4,r20
 800c1e8:	a00f883a 	mov	r7,r20
 800c1ec:	a0008216 	blt	r20,zero,800c3f8 <_realloc_r+0x274>
 800c1f0:	a4408136 	bltu	r20,r17,800c3f8 <_realloc_r+0x274>
 800c1f4:	81c03c0e 	bge	r16,r7,800c2e8 <_realloc_r+0x164>
 800c1f8:	07020074 	movhi	fp,2049
 800c1fc:	e71c2404 	addi	fp,fp,28816
 800c200:	e1000217 	ldw	r4,8(fp)
 800c204:	ac05883a 	add	r2,r21,r16
 800c208:	2080bf26 	beq	r4,r2,800c508 <_realloc_r+0x384>
 800c20c:	11000117 	ldw	r4,4(r2)
 800c210:	023fff84 	movi	r8,-2
 800c214:	2210703a 	and	r8,r4,r8
 800c218:	1211883a 	add	r8,r2,r8
 800c21c:	41400117 	ldw	r5,4(r8)
 800c220:	2940004c 	andi	r5,r5,1
 800c224:	28004a1e 	bne	r5,zero,800c350 <_realloc_r+0x1cc>
 800c228:	017fff04 	movi	r5,-4
 800c22c:	2148703a 	and	r4,r4,r5
 800c230:	2409883a 	add	r4,r4,r16
 800c234:	21c0ad0e 	bge	r4,r7,800c4ec <_realloc_r+0x368>
 800c238:	18c0004c 	andi	r3,r3,1
 800c23c:	18007f1e 	bne	r3,zero,800c43c <_realloc_r+0x2b8>
 800c240:	9dfffe17 	ldw	r23,-8(r19)
 800c244:	adefc83a 	sub	r23,r21,r23
 800c248:	bd800117 	ldw	r22,4(r23)
 800c24c:	b14a703a 	and	r5,r22,r5
 800c250:	216d883a 	add	r22,r4,r5
 800c254:	b1c04516 	blt	r22,r7,800c36c <_realloc_r+0x1e8>
 800c258:	10c00317 	ldw	r3,12(r2)
 800c25c:	10800217 	ldw	r2,8(r2)
 800c260:	81bfff04 	addi	r6,r16,-4
 800c264:	bc400204 	addi	r17,r23,8
 800c268:	10c00315 	stw	r3,12(r2)
 800c26c:	18800215 	stw	r2,8(r3)
 800c270:	b9400217 	ldw	r5,8(r23)
 800c274:	b8c00317 	ldw	r3,12(r23)
 800c278:	00800904 	movi	r2,36
 800c27c:	28c00315 	stw	r3,12(r5)
 800c280:	19400215 	stw	r5,8(r3)
 800c284:	1180ef36 	bltu	r2,r6,800c644 <_realloc_r+0x4c0>
 800c288:	008004c4 	movi	r2,19
 800c28c:	1180da2e 	bgeu	r2,r6,800c5f8 <_realloc_r+0x474>
 800c290:	98800017 	ldw	r2,0(r19)
 800c294:	b8800215 	stw	r2,8(r23)
 800c298:	98800117 	ldw	r2,4(r19)
 800c29c:	b8800315 	stw	r2,12(r23)
 800c2a0:	008006c4 	movi	r2,27
 800c2a4:	1180fc2e 	bgeu	r2,r6,800c698 <_realloc_r+0x514>
 800c2a8:	98800217 	ldw	r2,8(r19)
 800c2ac:	b8800415 	stw	r2,16(r23)
 800c2b0:	98800317 	ldw	r2,12(r19)
 800c2b4:	b8800515 	stw	r2,20(r23)
 800c2b8:	00800904 	movi	r2,36
 800c2bc:	3080421e 	bne	r6,r2,800c3c8 <_realloc_r+0x244>
 800c2c0:	98800417 	ldw	r2,16(r19)
 800c2c4:	9cc00604 	addi	r19,r19,24
 800c2c8:	b8c00804 	addi	r3,r23,32
 800c2cc:	b8800615 	stw	r2,24(r23)
 800c2d0:	98bfff17 	ldw	r2,-4(r19)
 800c2d4:	b8800715 	stw	r2,28(r23)
 800c2d8:	00003d06 	br	800c3d0 <_realloc_r+0x24c>
 800c2dc:	01c00404 	movi	r7,16
 800c2e0:	3829883a 	mov	r20,r7
 800c2e4:	003fc206 	br	800c1f0 <__alt_data_end+0xfc00c1f0>
 800c2e8:	9823883a 	mov	r17,r19
 800c2ec:	850fc83a 	sub	r7,r16,r20
 800c2f0:	008003c4 	movi	r2,15
 800c2f4:	18c0004c 	andi	r3,r3,1
 800c2f8:	11c04336 	bltu	r2,r7,800c408 <_realloc_r+0x284>
 800c2fc:	1c06b03a 	or	r3,r3,r16
 800c300:	a8c00115 	stw	r3,4(r21)
 800c304:	ac21883a 	add	r16,r21,r16
 800c308:	80c00117 	ldw	r3,4(r16)
 800c30c:	18c00054 	ori	r3,r3,1
 800c310:	80c00115 	stw	r3,4(r16)
 800c314:	9009883a 	mov	r4,r18
 800c318:	801386c0 	call	801386c <__malloc_unlock>
 800c31c:	8805883a 	mov	r2,r17
 800c320:	dfc00917 	ldw	ra,36(sp)
 800c324:	df000817 	ldw	fp,32(sp)
 800c328:	ddc00717 	ldw	r23,28(sp)
 800c32c:	dd800617 	ldw	r22,24(sp)
 800c330:	dd400517 	ldw	r21,20(sp)
 800c334:	dd000417 	ldw	r20,16(sp)
 800c338:	dcc00317 	ldw	r19,12(sp)
 800c33c:	dc800217 	ldw	r18,8(sp)
 800c340:	dc400117 	ldw	r17,4(sp)
 800c344:	dc000017 	ldw	r16,0(sp)
 800c348:	dec00a04 	addi	sp,sp,40
 800c34c:	f800283a 	ret
 800c350:	18c0004c 	andi	r3,r3,1
 800c354:	1800391e 	bne	r3,zero,800c43c <_realloc_r+0x2b8>
 800c358:	9dfffe17 	ldw	r23,-8(r19)
 800c35c:	00bfff04 	movi	r2,-4
 800c360:	adefc83a 	sub	r23,r21,r23
 800c364:	b9400117 	ldw	r5,4(r23)
 800c368:	288a703a 	and	r5,r5,r2
 800c36c:	2c2d883a 	add	r22,r5,r16
 800c370:	b1c03216 	blt	r22,r7,800c43c <_realloc_r+0x2b8>
 800c374:	b8800317 	ldw	r2,12(r23)
 800c378:	b8c00217 	ldw	r3,8(r23)
 800c37c:	81bfff04 	addi	r6,r16,-4
 800c380:	01000904 	movi	r4,36
 800c384:	18800315 	stw	r2,12(r3)
 800c388:	10c00215 	stw	r3,8(r2)
 800c38c:	bc400204 	addi	r17,r23,8
 800c390:	2180ac36 	bltu	r4,r6,800c644 <_realloc_r+0x4c0>
 800c394:	008004c4 	movi	r2,19
 800c398:	1180972e 	bgeu	r2,r6,800c5f8 <_realloc_r+0x474>
 800c39c:	98800017 	ldw	r2,0(r19)
 800c3a0:	b8800215 	stw	r2,8(r23)
 800c3a4:	98800117 	ldw	r2,4(r19)
 800c3a8:	b8800315 	stw	r2,12(r23)
 800c3ac:	008006c4 	movi	r2,27
 800c3b0:	1180b92e 	bgeu	r2,r6,800c698 <_realloc_r+0x514>
 800c3b4:	98800217 	ldw	r2,8(r19)
 800c3b8:	b8800415 	stw	r2,16(r23)
 800c3bc:	98800317 	ldw	r2,12(r19)
 800c3c0:	b8800515 	stw	r2,20(r23)
 800c3c4:	313fbe26 	beq	r6,r4,800c2c0 <__alt_data_end+0xfc00c2c0>
 800c3c8:	b8c00604 	addi	r3,r23,24
 800c3cc:	9cc00404 	addi	r19,r19,16
 800c3d0:	98800017 	ldw	r2,0(r19)
 800c3d4:	b021883a 	mov	r16,r22
 800c3d8:	b82b883a 	mov	r21,r23
 800c3dc:	18800015 	stw	r2,0(r3)
 800c3e0:	98800117 	ldw	r2,4(r19)
 800c3e4:	18800115 	stw	r2,4(r3)
 800c3e8:	98800217 	ldw	r2,8(r19)
 800c3ec:	18800215 	stw	r2,8(r3)
 800c3f0:	b8c00117 	ldw	r3,4(r23)
 800c3f4:	003fbd06 	br	800c2ec <__alt_data_end+0xfc00c2ec>
 800c3f8:	00800304 	movi	r2,12
 800c3fc:	90800015 	stw	r2,0(r18)
 800c400:	0005883a 	mov	r2,zero
 800c404:	003fc606 	br	800c320 <__alt_data_end+0xfc00c320>
 800c408:	1d06b03a 	or	r3,r3,r20
 800c40c:	ad0b883a 	add	r5,r21,r20
 800c410:	a8c00115 	stw	r3,4(r21)
 800c414:	38800054 	ori	r2,r7,1
 800c418:	28800115 	stw	r2,4(r5)
 800c41c:	29cf883a 	add	r7,r5,r7
 800c420:	38800117 	ldw	r2,4(r7)
 800c424:	9009883a 	mov	r4,r18
 800c428:	29400204 	addi	r5,r5,8
 800c42c:	10800054 	ori	r2,r2,1
 800c430:	38800115 	stw	r2,4(r7)
 800c434:	800a2240 	call	800a224 <_free_r>
 800c438:	003fb606 	br	800c314 <__alt_data_end+0xfc00c314>
 800c43c:	880b883a 	mov	r5,r17
 800c440:	9009883a 	mov	r4,r18
 800c444:	8002d800 	call	8002d80 <_malloc_r>
 800c448:	1023883a 	mov	r17,r2
 800c44c:	1000aa26 	beq	r2,zero,800c6f8 <_realloc_r+0x574>
 800c450:	98ffff17 	ldw	r3,-4(r19)
 800c454:	113ffe04 	addi	r4,r2,-8
 800c458:	00bfff84 	movi	r2,-2
 800c45c:	1884703a 	and	r2,r3,r2
 800c460:	a885883a 	add	r2,r21,r2
 800c464:	20808626 	beq	r4,r2,800c680 <_realloc_r+0x4fc>
 800c468:	81bfff04 	addi	r6,r16,-4
 800c46c:	00800904 	movi	r2,36
 800c470:	11807036 	bltu	r2,r6,800c634 <_realloc_r+0x4b0>
 800c474:	00c004c4 	movi	r3,19
 800c478:	19805636 	bltu	r3,r6,800c5d4 <_realloc_r+0x450>
 800c47c:	8805883a 	mov	r2,r17
 800c480:	9807883a 	mov	r3,r19
 800c484:	19000017 	ldw	r4,0(r3)
 800c488:	11000015 	stw	r4,0(r2)
 800c48c:	19000117 	ldw	r4,4(r3)
 800c490:	11000115 	stw	r4,4(r2)
 800c494:	18c00217 	ldw	r3,8(r3)
 800c498:	10c00215 	stw	r3,8(r2)
 800c49c:	980b883a 	mov	r5,r19
 800c4a0:	9009883a 	mov	r4,r18
 800c4a4:	800a2240 	call	800a224 <_free_r>
 800c4a8:	9009883a 	mov	r4,r18
 800c4ac:	801386c0 	call	801386c <__malloc_unlock>
 800c4b0:	8805883a 	mov	r2,r17
 800c4b4:	003f9a06 	br	800c320 <__alt_data_end+0xfc00c320>
 800c4b8:	300b883a 	mov	r5,r6
 800c4bc:	dfc00917 	ldw	ra,36(sp)
 800c4c0:	df000817 	ldw	fp,32(sp)
 800c4c4:	ddc00717 	ldw	r23,28(sp)
 800c4c8:	dd800617 	ldw	r22,24(sp)
 800c4cc:	dd400517 	ldw	r21,20(sp)
 800c4d0:	dd000417 	ldw	r20,16(sp)
 800c4d4:	dcc00317 	ldw	r19,12(sp)
 800c4d8:	dc800217 	ldw	r18,8(sp)
 800c4dc:	dc400117 	ldw	r17,4(sp)
 800c4e0:	dc000017 	ldw	r16,0(sp)
 800c4e4:	dec00a04 	addi	sp,sp,40
 800c4e8:	8002d801 	jmpi	8002d80 <_malloc_r>
 800c4ec:	11400317 	ldw	r5,12(r2)
 800c4f0:	10800217 	ldw	r2,8(r2)
 800c4f4:	9823883a 	mov	r17,r19
 800c4f8:	2021883a 	mov	r16,r4
 800c4fc:	11400315 	stw	r5,12(r2)
 800c500:	28800215 	stw	r2,8(r5)
 800c504:	003f7906 	br	800c2ec <__alt_data_end+0xfc00c2ec>
 800c508:	21000117 	ldw	r4,4(r4)
 800c50c:	00bfff04 	movi	r2,-4
 800c510:	a1800404 	addi	r6,r20,16
 800c514:	2088703a 	and	r4,r4,r2
 800c518:	2409883a 	add	r4,r4,r16
 800c51c:	2180380e 	bge	r4,r6,800c600 <_realloc_r+0x47c>
 800c520:	18c0004c 	andi	r3,r3,1
 800c524:	183fc51e 	bne	r3,zero,800c43c <__alt_data_end+0xfc00c43c>
 800c528:	9dfffe17 	ldw	r23,-8(r19)
 800c52c:	adefc83a 	sub	r23,r21,r23
 800c530:	b9400117 	ldw	r5,4(r23)
 800c534:	288a703a 	and	r5,r5,r2
 800c538:	216d883a 	add	r22,r4,r5
 800c53c:	b1bf8b16 	blt	r22,r6,800c36c <__alt_data_end+0xfc00c36c>
 800c540:	b8800317 	ldw	r2,12(r23)
 800c544:	b8c00217 	ldw	r3,8(r23)
 800c548:	81bfff04 	addi	r6,r16,-4
 800c54c:	01000904 	movi	r4,36
 800c550:	18800315 	stw	r2,12(r3)
 800c554:	10c00215 	stw	r3,8(r2)
 800c558:	bc400204 	addi	r17,r23,8
 800c55c:	21805a36 	bltu	r4,r6,800c6c8 <_realloc_r+0x544>
 800c560:	008004c4 	movi	r2,19
 800c564:	1180562e 	bgeu	r2,r6,800c6c0 <_realloc_r+0x53c>
 800c568:	98800017 	ldw	r2,0(r19)
 800c56c:	b8800215 	stw	r2,8(r23)
 800c570:	98800117 	ldw	r2,4(r19)
 800c574:	b8800315 	stw	r2,12(r23)
 800c578:	008006c4 	movi	r2,27
 800c57c:	11805636 	bltu	r2,r6,800c6d8 <_realloc_r+0x554>
 800c580:	b8800404 	addi	r2,r23,16
 800c584:	9cc00204 	addi	r19,r19,8
 800c588:	98c00017 	ldw	r3,0(r19)
 800c58c:	10c00015 	stw	r3,0(r2)
 800c590:	98c00117 	ldw	r3,4(r19)
 800c594:	10c00115 	stw	r3,4(r2)
 800c598:	98c00217 	ldw	r3,8(r19)
 800c59c:	10c00215 	stw	r3,8(r2)
 800c5a0:	bd07883a 	add	r3,r23,r20
 800c5a4:	b505c83a 	sub	r2,r22,r20
 800c5a8:	e0c00215 	stw	r3,8(fp)
 800c5ac:	10800054 	ori	r2,r2,1
 800c5b0:	18800115 	stw	r2,4(r3)
 800c5b4:	b8800117 	ldw	r2,4(r23)
 800c5b8:	9009883a 	mov	r4,r18
 800c5bc:	1080004c 	andi	r2,r2,1
 800c5c0:	a0a8b03a 	or	r20,r20,r2
 800c5c4:	bd000115 	stw	r20,4(r23)
 800c5c8:	801386c0 	call	801386c <__malloc_unlock>
 800c5cc:	8805883a 	mov	r2,r17
 800c5d0:	003f5306 	br	800c320 <__alt_data_end+0xfc00c320>
 800c5d4:	98c00017 	ldw	r3,0(r19)
 800c5d8:	88c00015 	stw	r3,0(r17)
 800c5dc:	98c00117 	ldw	r3,4(r19)
 800c5e0:	88c00115 	stw	r3,4(r17)
 800c5e4:	00c006c4 	movi	r3,27
 800c5e8:	19801d36 	bltu	r3,r6,800c660 <_realloc_r+0x4dc>
 800c5ec:	88800204 	addi	r2,r17,8
 800c5f0:	98c00204 	addi	r3,r19,8
 800c5f4:	003fa306 	br	800c484 <__alt_data_end+0xfc00c484>
 800c5f8:	8807883a 	mov	r3,r17
 800c5fc:	003f7406 	br	800c3d0 <__alt_data_end+0xfc00c3d0>
 800c600:	ad2b883a 	add	r21,r21,r20
 800c604:	2505c83a 	sub	r2,r4,r20
 800c608:	e5400215 	stw	r21,8(fp)
 800c60c:	10800054 	ori	r2,r2,1
 800c610:	a8800115 	stw	r2,4(r21)
 800c614:	98bfff17 	ldw	r2,-4(r19)
 800c618:	9009883a 	mov	r4,r18
 800c61c:	1080004c 	andi	r2,r2,1
 800c620:	a0a8b03a 	or	r20,r20,r2
 800c624:	9d3fff15 	stw	r20,-4(r19)
 800c628:	801386c0 	call	801386c <__malloc_unlock>
 800c62c:	9805883a 	mov	r2,r19
 800c630:	003f3b06 	br	800c320 <__alt_data_end+0xfc00c320>
 800c634:	8809883a 	mov	r4,r17
 800c638:	980b883a 	mov	r5,r19
 800c63c:	800afe00 	call	800afe0 <memmove>
 800c640:	003f9606 	br	800c49c <__alt_data_end+0xfc00c49c>
 800c644:	8809883a 	mov	r4,r17
 800c648:	980b883a 	mov	r5,r19
 800c64c:	800afe00 	call	800afe0 <memmove>
 800c650:	b8c00117 	ldw	r3,4(r23)
 800c654:	b021883a 	mov	r16,r22
 800c658:	b82b883a 	mov	r21,r23
 800c65c:	003f2306 	br	800c2ec <__alt_data_end+0xfc00c2ec>
 800c660:	98c00217 	ldw	r3,8(r19)
 800c664:	88c00215 	stw	r3,8(r17)
 800c668:	98c00317 	ldw	r3,12(r19)
 800c66c:	88c00315 	stw	r3,12(r17)
 800c670:	30800c26 	beq	r6,r2,800c6a4 <_realloc_r+0x520>
 800c674:	88800404 	addi	r2,r17,16
 800c678:	98c00404 	addi	r3,r19,16
 800c67c:	003f8106 	br	800c484 <__alt_data_end+0xfc00c484>
 800c680:	893fff17 	ldw	r4,-4(r17)
 800c684:	00bfff04 	movi	r2,-4
 800c688:	9823883a 	mov	r17,r19
 800c68c:	2084703a 	and	r2,r4,r2
 800c690:	80a1883a 	add	r16,r16,r2
 800c694:	003f1506 	br	800c2ec <__alt_data_end+0xfc00c2ec>
 800c698:	b8c00404 	addi	r3,r23,16
 800c69c:	9cc00204 	addi	r19,r19,8
 800c6a0:	003f4b06 	br	800c3d0 <__alt_data_end+0xfc00c3d0>
 800c6a4:	99000417 	ldw	r4,16(r19)
 800c6a8:	88800604 	addi	r2,r17,24
 800c6ac:	98c00604 	addi	r3,r19,24
 800c6b0:	89000415 	stw	r4,16(r17)
 800c6b4:	99000517 	ldw	r4,20(r19)
 800c6b8:	89000515 	stw	r4,20(r17)
 800c6bc:	003f7106 	br	800c484 <__alt_data_end+0xfc00c484>
 800c6c0:	8805883a 	mov	r2,r17
 800c6c4:	003fb006 	br	800c588 <__alt_data_end+0xfc00c588>
 800c6c8:	8809883a 	mov	r4,r17
 800c6cc:	980b883a 	mov	r5,r19
 800c6d0:	800afe00 	call	800afe0 <memmove>
 800c6d4:	003fb206 	br	800c5a0 <__alt_data_end+0xfc00c5a0>
 800c6d8:	98800217 	ldw	r2,8(r19)
 800c6dc:	b8800415 	stw	r2,16(r23)
 800c6e0:	98800317 	ldw	r2,12(r19)
 800c6e4:	b8800515 	stw	r2,20(r23)
 800c6e8:	31000726 	beq	r6,r4,800c708 <_realloc_r+0x584>
 800c6ec:	b8800604 	addi	r2,r23,24
 800c6f0:	9cc00404 	addi	r19,r19,16
 800c6f4:	003fa406 	br	800c588 <__alt_data_end+0xfc00c588>
 800c6f8:	9009883a 	mov	r4,r18
 800c6fc:	801386c0 	call	801386c <__malloc_unlock>
 800c700:	0005883a 	mov	r2,zero
 800c704:	003f0606 	br	800c320 <__alt_data_end+0xfc00c320>
 800c708:	98c00417 	ldw	r3,16(r19)
 800c70c:	9cc00604 	addi	r19,r19,24
 800c710:	b8800804 	addi	r2,r23,32
 800c714:	b8c00615 	stw	r3,24(r23)
 800c718:	98ffff17 	ldw	r3,-4(r19)
 800c71c:	b8c00715 	stw	r3,28(r23)
 800c720:	003f9906 	br	800c588 <__alt_data_end+0xfc00c588>

0800c724 <__fpclassifyd>:
 800c724:	00a00034 	movhi	r2,32768
 800c728:	10bfffc4 	addi	r2,r2,-1
 800c72c:	2884703a 	and	r2,r5,r2
 800c730:	10000726 	beq	r2,zero,800c750 <__fpclassifyd+0x2c>
 800c734:	00fffc34 	movhi	r3,65520
 800c738:	019ff834 	movhi	r6,32736
 800c73c:	28c7883a 	add	r3,r5,r3
 800c740:	31bfffc4 	addi	r6,r6,-1
 800c744:	30c00536 	bltu	r6,r3,800c75c <__fpclassifyd+0x38>
 800c748:	00800104 	movi	r2,4
 800c74c:	f800283a 	ret
 800c750:	2000021e 	bne	r4,zero,800c75c <__fpclassifyd+0x38>
 800c754:	00800084 	movi	r2,2
 800c758:	f800283a 	ret
 800c75c:	00dffc34 	movhi	r3,32752
 800c760:	019ff834 	movhi	r6,32736
 800c764:	28cb883a 	add	r5,r5,r3
 800c768:	31bfffc4 	addi	r6,r6,-1
 800c76c:	317ff62e 	bgeu	r6,r5,800c748 <__alt_data_end+0xfc00c748>
 800c770:	01400434 	movhi	r5,16
 800c774:	297fffc4 	addi	r5,r5,-1
 800c778:	28800236 	bltu	r5,r2,800c784 <__fpclassifyd+0x60>
 800c77c:	008000c4 	movi	r2,3
 800c780:	f800283a 	ret
 800c784:	10c00226 	beq	r2,r3,800c790 <__fpclassifyd+0x6c>
 800c788:	0005883a 	mov	r2,zero
 800c78c:	f800283a 	ret
 800c790:	2005003a 	cmpeq	r2,r4,zero
 800c794:	f800283a 	ret

0800c798 <__sread>:
 800c798:	defffe04 	addi	sp,sp,-8
 800c79c:	dc000015 	stw	r16,0(sp)
 800c7a0:	2821883a 	mov	r16,r5
 800c7a4:	2940038f 	ldh	r5,14(r5)
 800c7a8:	dfc00115 	stw	ra,4(sp)
 800c7ac:	800f7480 	call	800f748 <_read_r>
 800c7b0:	10000716 	blt	r2,zero,800c7d0 <__sread+0x38>
 800c7b4:	80c01417 	ldw	r3,80(r16)
 800c7b8:	1887883a 	add	r3,r3,r2
 800c7bc:	80c01415 	stw	r3,80(r16)
 800c7c0:	dfc00117 	ldw	ra,4(sp)
 800c7c4:	dc000017 	ldw	r16,0(sp)
 800c7c8:	dec00204 	addi	sp,sp,8
 800c7cc:	f800283a 	ret
 800c7d0:	80c0030b 	ldhu	r3,12(r16)
 800c7d4:	18fbffcc 	andi	r3,r3,61439
 800c7d8:	80c0030d 	sth	r3,12(r16)
 800c7dc:	dfc00117 	ldw	ra,4(sp)
 800c7e0:	dc000017 	ldw	r16,0(sp)
 800c7e4:	dec00204 	addi	sp,sp,8
 800c7e8:	f800283a 	ret

0800c7ec <__seofread>:
 800c7ec:	0005883a 	mov	r2,zero
 800c7f0:	f800283a 	ret

0800c7f4 <__swrite>:
 800c7f4:	2880030b 	ldhu	r2,12(r5)
 800c7f8:	defffb04 	addi	sp,sp,-20
 800c7fc:	dcc00315 	stw	r19,12(sp)
 800c800:	dc800215 	stw	r18,8(sp)
 800c804:	dc400115 	stw	r17,4(sp)
 800c808:	dc000015 	stw	r16,0(sp)
 800c80c:	dfc00415 	stw	ra,16(sp)
 800c810:	10c0400c 	andi	r3,r2,256
 800c814:	2821883a 	mov	r16,r5
 800c818:	2027883a 	mov	r19,r4
 800c81c:	3025883a 	mov	r18,r6
 800c820:	3823883a 	mov	r17,r7
 800c824:	18000526 	beq	r3,zero,800c83c <__swrite+0x48>
 800c828:	2940038f 	ldh	r5,14(r5)
 800c82c:	000d883a 	mov	r6,zero
 800c830:	01c00084 	movi	r7,2
 800c834:	800f6ec0 	call	800f6ec <_lseek_r>
 800c838:	8080030b 	ldhu	r2,12(r16)
 800c83c:	8140038f 	ldh	r5,14(r16)
 800c840:	10bbffcc 	andi	r2,r2,61439
 800c844:	9809883a 	mov	r4,r19
 800c848:	900d883a 	mov	r6,r18
 800c84c:	880f883a 	mov	r7,r17
 800c850:	8080030d 	sth	r2,12(r16)
 800c854:	dfc00417 	ldw	ra,16(sp)
 800c858:	dcc00317 	ldw	r19,12(sp)
 800c85c:	dc800217 	ldw	r18,8(sp)
 800c860:	dc400117 	ldw	r17,4(sp)
 800c864:	dc000017 	ldw	r16,0(sp)
 800c868:	dec00504 	addi	sp,sp,20
 800c86c:	800f1c81 	jmpi	800f1c8 <_write_r>

0800c870 <__sseek>:
 800c870:	defffe04 	addi	sp,sp,-8
 800c874:	dc000015 	stw	r16,0(sp)
 800c878:	2821883a 	mov	r16,r5
 800c87c:	2940038f 	ldh	r5,14(r5)
 800c880:	dfc00115 	stw	ra,4(sp)
 800c884:	800f6ec0 	call	800f6ec <_lseek_r>
 800c888:	00ffffc4 	movi	r3,-1
 800c88c:	10c00826 	beq	r2,r3,800c8b0 <__sseek+0x40>
 800c890:	80c0030b 	ldhu	r3,12(r16)
 800c894:	80801415 	stw	r2,80(r16)
 800c898:	18c40014 	ori	r3,r3,4096
 800c89c:	80c0030d 	sth	r3,12(r16)
 800c8a0:	dfc00117 	ldw	ra,4(sp)
 800c8a4:	dc000017 	ldw	r16,0(sp)
 800c8a8:	dec00204 	addi	sp,sp,8
 800c8ac:	f800283a 	ret
 800c8b0:	80c0030b 	ldhu	r3,12(r16)
 800c8b4:	18fbffcc 	andi	r3,r3,61439
 800c8b8:	80c0030d 	sth	r3,12(r16)
 800c8bc:	dfc00117 	ldw	ra,4(sp)
 800c8c0:	dc000017 	ldw	r16,0(sp)
 800c8c4:	dec00204 	addi	sp,sp,8
 800c8c8:	f800283a 	ret

0800c8cc <__sclose>:
 800c8cc:	2940038f 	ldh	r5,14(r5)
 800c8d0:	800f2241 	jmpi	800f224 <_close_r>

0800c8d4 <__ssprint_r>:
 800c8d4:	30800217 	ldw	r2,8(r6)
 800c8d8:	defff604 	addi	sp,sp,-40
 800c8dc:	ddc00715 	stw	r23,28(sp)
 800c8e0:	dcc00315 	stw	r19,12(sp)
 800c8e4:	dfc00915 	stw	ra,36(sp)
 800c8e8:	df000815 	stw	fp,32(sp)
 800c8ec:	dd800615 	stw	r22,24(sp)
 800c8f0:	dd400515 	stw	r21,20(sp)
 800c8f4:	dd000415 	stw	r20,16(sp)
 800c8f8:	dc800215 	stw	r18,8(sp)
 800c8fc:	dc400115 	stw	r17,4(sp)
 800c900:	dc000015 	stw	r16,0(sp)
 800c904:	3027883a 	mov	r19,r6
 800c908:	35c00017 	ldw	r23,0(r6)
 800c90c:	10005526 	beq	r2,zero,800ca64 <__ssprint_r+0x190>
 800c910:	2029883a 	mov	r20,r4
 800c914:	29000017 	ldw	r4,0(r5)
 800c918:	2821883a 	mov	r16,r5
 800c91c:	0039883a 	mov	fp,zero
 800c920:	0023883a 	mov	r17,zero
 800c924:	88003926 	beq	r17,zero,800ca0c <__ssprint_r+0x138>
 800c928:	84800217 	ldw	r18,8(r16)
 800c92c:	902d883a 	mov	r22,r18
 800c930:	8c803a36 	bltu	r17,r18,800ca1c <__ssprint_r+0x148>
 800c934:	80c0030b 	ldhu	r3,12(r16)
 800c938:	1881200c 	andi	r2,r3,1152
 800c93c:	10002626 	beq	r2,zero,800c9d8 <__ssprint_r+0x104>
 800c940:	80800517 	ldw	r2,20(r16)
 800c944:	81400417 	ldw	r5,16(r16)
 800c948:	89c00044 	addi	r7,r17,1
 800c94c:	108d883a 	add	r6,r2,r2
 800c950:	3085883a 	add	r2,r6,r2
 800c954:	100cd7fa 	srli	r6,r2,31
 800c958:	216dc83a 	sub	r22,r4,r5
 800c95c:	3d89883a 	add	r4,r7,r22
 800c960:	3085883a 	add	r2,r6,r2
 800c964:	1025d07a 	srai	r18,r2,1
 800c968:	900d883a 	mov	r6,r18
 800c96c:	9100022e 	bgeu	r18,r4,800c978 <__ssprint_r+0xa4>
 800c970:	2025883a 	mov	r18,r4
 800c974:	200d883a 	mov	r6,r4
 800c978:	18c1000c 	andi	r3,r3,1024
 800c97c:	a009883a 	mov	r4,r20
 800c980:	18002926 	beq	r3,zero,800ca28 <__ssprint_r+0x154>
 800c984:	300b883a 	mov	r5,r6
 800c988:	8002d800 	call	8002d80 <_malloc_r>
 800c98c:	102b883a 	mov	r21,r2
 800c990:	10002b26 	beq	r2,zero,800ca40 <__ssprint_r+0x16c>
 800c994:	81400417 	ldw	r5,16(r16)
 800c998:	1009883a 	mov	r4,r2
 800c99c:	b00d883a 	mov	r6,r22
 800c9a0:	800aea80 	call	800aea8 <memcpy>
 800c9a4:	8080030b 	ldhu	r2,12(r16)
 800c9a8:	00fedfc4 	movi	r3,-1153
 800c9ac:	10c4703a 	and	r2,r2,r3
 800c9b0:	10802014 	ori	r2,r2,128
 800c9b4:	8080030d 	sth	r2,12(r16)
 800c9b8:	ad89883a 	add	r4,r21,r22
 800c9bc:	95adc83a 	sub	r22,r18,r22
 800c9c0:	84800515 	stw	r18,20(r16)
 800c9c4:	85800215 	stw	r22,8(r16)
 800c9c8:	85400415 	stw	r21,16(r16)
 800c9cc:	81000015 	stw	r4,0(r16)
 800c9d0:	8825883a 	mov	r18,r17
 800c9d4:	882d883a 	mov	r22,r17
 800c9d8:	e00b883a 	mov	r5,fp
 800c9dc:	b00d883a 	mov	r6,r22
 800c9e0:	800afe00 	call	800afe0 <memmove>
 800c9e4:	80c00217 	ldw	r3,8(r16)
 800c9e8:	81000017 	ldw	r4,0(r16)
 800c9ec:	98800217 	ldw	r2,8(r19)
 800c9f0:	1ca5c83a 	sub	r18,r3,r18
 800c9f4:	2589883a 	add	r4,r4,r22
 800c9f8:	84800215 	stw	r18,8(r16)
 800c9fc:	81000015 	stw	r4,0(r16)
 800ca00:	1463c83a 	sub	r17,r2,r17
 800ca04:	9c400215 	stw	r17,8(r19)
 800ca08:	88001626 	beq	r17,zero,800ca64 <__ssprint_r+0x190>
 800ca0c:	bf000017 	ldw	fp,0(r23)
 800ca10:	bc400117 	ldw	r17,4(r23)
 800ca14:	bdc00204 	addi	r23,r23,8
 800ca18:	003fc206 	br	800c924 <__alt_data_end+0xfc00c924>
 800ca1c:	8825883a 	mov	r18,r17
 800ca20:	882d883a 	mov	r22,r17
 800ca24:	003fec06 	br	800c9d8 <__alt_data_end+0xfc00c9d8>
 800ca28:	800c1840 	call	800c184 <_realloc_r>
 800ca2c:	102b883a 	mov	r21,r2
 800ca30:	103fe11e 	bne	r2,zero,800c9b8 <__alt_data_end+0xfc00c9b8>
 800ca34:	81400417 	ldw	r5,16(r16)
 800ca38:	a009883a 	mov	r4,r20
 800ca3c:	800a2240 	call	800a224 <_free_r>
 800ca40:	80c0030b 	ldhu	r3,12(r16)
 800ca44:	00800304 	movi	r2,12
 800ca48:	a0800015 	stw	r2,0(r20)
 800ca4c:	18c01014 	ori	r3,r3,64
 800ca50:	80c0030d 	sth	r3,12(r16)
 800ca54:	00bfffc4 	movi	r2,-1
 800ca58:	98000215 	stw	zero,8(r19)
 800ca5c:	98000115 	stw	zero,4(r19)
 800ca60:	00000206 	br	800ca6c <__ssprint_r+0x198>
 800ca64:	98000115 	stw	zero,4(r19)
 800ca68:	0005883a 	mov	r2,zero
 800ca6c:	dfc00917 	ldw	ra,36(sp)
 800ca70:	df000817 	ldw	fp,32(sp)
 800ca74:	ddc00717 	ldw	r23,28(sp)
 800ca78:	dd800617 	ldw	r22,24(sp)
 800ca7c:	dd400517 	ldw	r21,20(sp)
 800ca80:	dd000417 	ldw	r20,16(sp)
 800ca84:	dcc00317 	ldw	r19,12(sp)
 800ca88:	dc800217 	ldw	r18,8(sp)
 800ca8c:	dc400117 	ldw	r17,4(sp)
 800ca90:	dc000017 	ldw	r16,0(sp)
 800ca94:	dec00a04 	addi	sp,sp,40
 800ca98:	f800283a 	ret

0800ca9c <___svfiprintf_internal_r>:
 800ca9c:	2880030b 	ldhu	r2,12(r5)
 800caa0:	deffc804 	addi	sp,sp,-224
 800caa4:	dd403315 	stw	r21,204(sp)
 800caa8:	dfc03715 	stw	ra,220(sp)
 800caac:	df003615 	stw	fp,216(sp)
 800cab0:	ddc03515 	stw	r23,212(sp)
 800cab4:	dd803415 	stw	r22,208(sp)
 800cab8:	dd003215 	stw	r20,200(sp)
 800cabc:	dcc03115 	stw	r19,196(sp)
 800cac0:	dc803015 	stw	r18,192(sp)
 800cac4:	dc402f15 	stw	r17,188(sp)
 800cac8:	dc002e15 	stw	r16,184(sp)
 800cacc:	d9402215 	stw	r5,136(sp)
 800cad0:	d9002915 	stw	r4,164(sp)
 800cad4:	1080200c 	andi	r2,r2,128
 800cad8:	d9c02415 	stw	r7,144(sp)
 800cadc:	302b883a 	mov	r21,r6
 800cae0:	10000226 	beq	r2,zero,800caec <___svfiprintf_internal_r+0x50>
 800cae4:	28800417 	ldw	r2,16(r5)
 800cae8:	10042526 	beq	r2,zero,800db80 <___svfiprintf_internal_r+0x10e4>
 800caec:	d8801a04 	addi	r2,sp,104
 800caf0:	d8c019c4 	addi	r3,sp,103
 800caf4:	dc402917 	ldw	r17,164(sp)
 800caf8:	04c20074 	movhi	r19,2049
 800cafc:	10c9c83a 	sub	r4,r2,r3
 800cb00:	9cdbb604 	addi	r19,r19,28376
 800cb04:	d8801e15 	stw	r2,120(sp)
 800cb08:	d8c01f15 	stw	r3,124(sp)
 800cb0c:	dec01a15 	stw	sp,104(sp)
 800cb10:	d8001c15 	stw	zero,112(sp)
 800cb14:	d8001b15 	stw	zero,108(sp)
 800cb18:	d8002a15 	stw	zero,168(sp)
 800cb1c:	d8002615 	stw	zero,152(sp)
 800cb20:	d811883a 	mov	r8,sp
 800cb24:	d9002c15 	stw	r4,176(sp)
 800cb28:	a8800007 	ldb	r2,0(r21)
 800cb2c:	1002af26 	beq	r2,zero,800d5ec <___svfiprintf_internal_r+0xb50>
 800cb30:	01000944 	movi	r4,37
 800cb34:	1102ad26 	beq	r2,r4,800d5ec <___svfiprintf_internal_r+0xb50>
 800cb38:	a805883a 	mov	r2,r21
 800cb3c:	00000106 	br	800cb44 <___svfiprintf_internal_r+0xa8>
 800cb40:	19000326 	beq	r3,r4,800cb50 <___svfiprintf_internal_r+0xb4>
 800cb44:	10800044 	addi	r2,r2,1
 800cb48:	10c00007 	ldb	r3,0(r2)
 800cb4c:	183ffc1e 	bne	r3,zero,800cb40 <__alt_data_end+0xfc00cb40>
 800cb50:	1561c83a 	sub	r16,r2,r21
 800cb54:	1025883a 	mov	r18,r2
 800cb58:	80000e26 	beq	r16,zero,800cb94 <___svfiprintf_internal_r+0xf8>
 800cb5c:	d8c01c17 	ldw	r3,112(sp)
 800cb60:	d8801b17 	ldw	r2,108(sp)
 800cb64:	45400015 	stw	r21,0(r8)
 800cb68:	1c07883a 	add	r3,r3,r16
 800cb6c:	10800044 	addi	r2,r2,1
 800cb70:	d8c01c15 	stw	r3,112(sp)
 800cb74:	44000115 	stw	r16,4(r8)
 800cb78:	d8801b15 	stw	r2,108(sp)
 800cb7c:	00c001c4 	movi	r3,7
 800cb80:	18832616 	blt	r3,r2,800d81c <___svfiprintf_internal_r+0xd80>
 800cb84:	42000204 	addi	r8,r8,8
 800cb88:	d9402617 	ldw	r5,152(sp)
 800cb8c:	2c0b883a 	add	r5,r5,r16
 800cb90:	d9402615 	stw	r5,152(sp)
 800cb94:	90800007 	ldb	r2,0(r18)
 800cb98:	1002b226 	beq	r2,zero,800d664 <___svfiprintf_internal_r+0xbc8>
 800cb9c:	00bfffc4 	movi	r2,-1
 800cba0:	95400044 	addi	r21,r18,1
 800cba4:	91800047 	ldb	r6,1(r18)
 800cba8:	d8001d85 	stb	zero,118(sp)
 800cbac:	002d883a 	mov	r22,zero
 800cbb0:	d8802015 	stw	r2,128(sp)
 800cbb4:	d8002315 	stw	zero,140(sp)
 800cbb8:	0021883a 	mov	r16,zero
 800cbbc:	04801604 	movi	r18,88
 800cbc0:	05000244 	movi	r20,9
 800cbc4:	402f883a 	mov	r23,r8
 800cbc8:	ad400044 	addi	r21,r21,1
 800cbcc:	30bff804 	addi	r2,r6,-32
 800cbd0:	9081ae36 	bltu	r18,r2,800d28c <___svfiprintf_internal_r+0x7f0>
 800cbd4:	100490ba 	slli	r2,r2,2
 800cbd8:	00c20074 	movhi	r3,2049
 800cbdc:	18f2fb04 	addi	r3,r3,-13332
 800cbe0:	10c5883a 	add	r2,r2,r3
 800cbe4:	10800017 	ldw	r2,0(r2)
 800cbe8:	1000683a 	jmp	r2
 800cbec:	0800cd9c 	xori	zero,at,822
 800cbf0:	0800d28c 	andi	zero,at,842
 800cbf4:	0800d28c 	andi	zero,at,842
 800cbf8:	0800cd90 	cmplti	zero,at,822
 800cbfc:	0800d28c 	andi	zero,at,842
 800cc00:	0800d28c 	andi	zero,at,842
 800cc04:	0800d28c 	andi	zero,at,842
 800cc08:	0800d28c 	andi	zero,at,842
 800cc0c:	0800d28c 	andi	zero,at,842
 800cc10:	0800d28c 	andi	zero,at,842
 800cc14:	0800cd50 	cmplti	zero,at,821
 800cc18:	0800cd84 	addi	zero,at,822
 800cc1c:	0800d28c 	andi	zero,at,842
 800cc20:	0800cd78 	rdprs	zero,at,821
 800cc24:	0800d2c0 	call	800d2c <__alt_mem_sdram_controller-0x77ff2d4>
 800cc28:	0800d28c 	andi	zero,at,842
 800cc2c:	0800d2b4 	orhi	zero,at,842
 800cc30:	0800d248 	cmpgei	zero,at,841
 800cc34:	0800d248 	cmpgei	zero,at,841
 800cc38:	0800d248 	cmpgei	zero,at,841
 800cc3c:	0800d248 	cmpgei	zero,at,841
 800cc40:	0800d248 	cmpgei	zero,at,841
 800cc44:	0800d248 	cmpgei	zero,at,841
 800cc48:	0800d248 	cmpgei	zero,at,841
 800cc4c:	0800d248 	cmpgei	zero,at,841
 800cc50:	0800d248 	cmpgei	zero,at,841
 800cc54:	0800d28c 	andi	zero,at,842
 800cc58:	0800d28c 	andi	zero,at,842
 800cc5c:	0800d28c 	andi	zero,at,842
 800cc60:	0800d28c 	andi	zero,at,842
 800cc64:	0800d28c 	andi	zero,at,842
 800cc68:	0800d28c 	andi	zero,at,842
 800cc6c:	0800d28c 	andi	zero,at,842
 800cc70:	0800d28c 	andi	zero,at,842
 800cc74:	0800d28c 	andi	zero,at,842
 800cc78:	0800d28c 	andi	zero,at,842
 800cc7c:	0800d1dc 	xori	zero,at,839
 800cc80:	0800d28c 	andi	zero,at,842
 800cc84:	0800d28c 	andi	zero,at,842
 800cc88:	0800d28c 	andi	zero,at,842
 800cc8c:	0800d28c 	andi	zero,at,842
 800cc90:	0800d28c 	andi	zero,at,842
 800cc94:	0800d28c 	andi	zero,at,842
 800cc98:	0800d28c 	andi	zero,at,842
 800cc9c:	0800d28c 	andi	zero,at,842
 800cca0:	0800d28c 	andi	zero,at,842
 800cca4:	0800d28c 	andi	zero,at,842
 800cca8:	0800d34c 	andi	zero,at,845
 800ccac:	0800d28c 	andi	zero,at,842
 800ccb0:	0800d28c 	andi	zero,at,842
 800ccb4:	0800d28c 	andi	zero,at,842
 800ccb8:	0800d28c 	andi	zero,at,842
 800ccbc:	0800d28c 	andi	zero,at,842
 800ccc0:	0800d308 	cmpgei	zero,at,844
 800ccc4:	0800d28c 	andi	zero,at,842
 800ccc8:	0800d28c 	andi	zero,at,842
 800cccc:	0800d194 	ori	zero,at,838
 800ccd0:	0800d28c 	andi	zero,at,842
 800ccd4:	0800d28c 	andi	zero,at,842
 800ccd8:	0800d28c 	andi	zero,at,842
 800ccdc:	0800d28c 	andi	zero,at,842
 800cce0:	0800d28c 	andi	zero,at,842
 800cce4:	0800d28c 	andi	zero,at,842
 800cce8:	0800d28c 	andi	zero,at,842
 800ccec:	0800d28c 	andi	zero,at,842
 800ccf0:	0800d28c 	andi	zero,at,842
 800ccf4:	0800d28c 	andi	zero,at,842
 800ccf8:	0800d05c 	xori	zero,at,833
 800ccfc:	0800d000 	call	800d00 <__alt_mem_sdram_controller-0x77ff300>
 800cd00:	0800d28c 	andi	zero,at,842
 800cd04:	0800d28c 	andi	zero,at,842
 800cd08:	0800d28c 	andi	zero,at,842
 800cd0c:	0800cff4 	orhi	zero,at,831
 800cd10:	0800d000 	call	800d00 <__alt_mem_sdram_controller-0x77ff300>
 800cd14:	0800d28c 	andi	zero,at,842
 800cd18:	0800d28c 	andi	zero,at,842
 800cd1c:	0800d044 	addi	zero,at,833
 800cd20:	0800d28c 	andi	zero,at,842
 800cd24:	0800cfc0 	call	800cfc <__alt_mem_sdram_controller-0x77ff304>
 800cd28:	0800cf90 	cmplti	zero,at,830
 800cd2c:	0800cf48 	cmpgei	zero,at,829
 800cd30:	0800cf3c 	xorhi	zero,at,828
 800cd34:	0800d28c 	andi	zero,at,842
 800cd38:	0800ced4 	ori	zero,at,827
 800cd3c:	0800d28c 	andi	zero,at,842
 800cd40:	0800ce04 	addi	zero,at,824
 800cd44:	0800d28c 	andi	zero,at,842
 800cd48:	0800d28c 	andi	zero,at,842
 800cd4c:	0800cdb8 	rdprs	zero,at,822
 800cd50:	d9402417 	ldw	r5,144(sp)
 800cd54:	d8c02417 	ldw	r3,144(sp)
 800cd58:	29400017 	ldw	r5,0(r5)
 800cd5c:	18800104 	addi	r2,r3,4
 800cd60:	d9402315 	stw	r5,140(sp)
 800cd64:	2802f70e 	bge	r5,zero,800d944 <___svfiprintf_internal_r+0xea8>
 800cd68:	d9002317 	ldw	r4,140(sp)
 800cd6c:	d8802415 	stw	r2,144(sp)
 800cd70:	0109c83a 	sub	r4,zero,r4
 800cd74:	d9002315 	stw	r4,140(sp)
 800cd78:	84000114 	ori	r16,r16,4
 800cd7c:	a9800007 	ldb	r6,0(r21)
 800cd80:	003f9106 	br	800cbc8 <__alt_data_end+0xfc00cbc8>
 800cd84:	05800ac4 	movi	r22,43
 800cd88:	a9800007 	ldb	r6,0(r21)
 800cd8c:	003f8e06 	br	800cbc8 <__alt_data_end+0xfc00cbc8>
 800cd90:	84000054 	ori	r16,r16,1
 800cd94:	a9800007 	ldb	r6,0(r21)
 800cd98:	003f8b06 	br	800cbc8 <__alt_data_end+0xfc00cbc8>
 800cd9c:	b0803fcc 	andi	r2,r22,255
 800cda0:	1080201c 	xori	r2,r2,128
 800cda4:	10bfe004 	addi	r2,r2,-128
 800cda8:	1003221e 	bne	r2,zero,800da34 <___svfiprintf_internal_r+0xf98>
 800cdac:	05800804 	movi	r22,32
 800cdb0:	a9800007 	ldb	r6,0(r21)
 800cdb4:	003f8406 	br	800cbc8 <__alt_data_end+0xfc00cbc8>
 800cdb8:	01420074 	movhi	r5,2049
 800cdbc:	295b4d04 	addi	r5,r5,27956
 800cdc0:	d9402a15 	stw	r5,168(sp)
 800cdc4:	dd801d85 	stb	r22,118(sp)
 800cdc8:	80c0080c 	andi	r3,r16,32
 800cdcc:	b811883a 	mov	r8,r23
 800cdd0:	d8802417 	ldw	r2,144(sp)
 800cdd4:	1800f726 	beq	r3,zero,800d1b4 <___svfiprintf_internal_r+0x718>
 800cdd8:	d8c02417 	ldw	r3,144(sp)
 800cddc:	14800017 	ldw	r18,0(r2)
 800cde0:	15800117 	ldw	r22,4(r2)
 800cde4:	18c00204 	addi	r3,r3,8
 800cde8:	d8c02415 	stw	r3,144(sp)
 800cdec:	8080004c 	andi	r2,r16,1
 800cdf0:	1002bd26 	beq	r2,zero,800d8e8 <___svfiprintf_internal_r+0xe4c>
 800cdf4:	9586b03a 	or	r3,r18,r22
 800cdf8:	1803081e 	bne	r3,zero,800da1c <___svfiprintf_internal_r+0xf80>
 800cdfc:	00800084 	movi	r2,2
 800ce00:	00000b06 	br	800ce30 <___svfiprintf_internal_r+0x394>
 800ce04:	80c0080c 	andi	r3,r16,32
 800ce08:	b811883a 	mov	r8,r23
 800ce0c:	d8802417 	ldw	r2,144(sp)
 800ce10:	18014226 	beq	r3,zero,800d31c <___svfiprintf_internal_r+0x880>
 800ce14:	d9402417 	ldw	r5,144(sp)
 800ce18:	14800017 	ldw	r18,0(r2)
 800ce1c:	15800117 	ldw	r22,4(r2)
 800ce20:	29400204 	addi	r5,r5,8
 800ce24:	d9402415 	stw	r5,144(sp)
 800ce28:	00800044 	movi	r2,1
 800ce2c:	9586b03a 	or	r3,r18,r22
 800ce30:	dd002017 	ldw	r20,128(sp)
 800ce34:	d8001d85 	stb	zero,118(sp)
 800ce38:	002f883a 	mov	r23,zero
 800ce3c:	d9002017 	ldw	r4,128(sp)
 800ce40:	20000216 	blt	r4,zero,800ce4c <___svfiprintf_internal_r+0x3b0>
 800ce44:	013fdfc4 	movi	r4,-129
 800ce48:	8120703a 	and	r16,r16,r4
 800ce4c:	1801e91e 	bne	r3,zero,800d5f4 <___svfiprintf_internal_r+0xb58>
 800ce50:	d9402017 	ldw	r5,128(sp)
 800ce54:	28025f26 	beq	r5,zero,800d7d4 <___svfiprintf_internal_r+0xd38>
 800ce58:	10803fcc 	andi	r2,r2,255
 800ce5c:	00c00044 	movi	r3,1
 800ce60:	10c2b226 	beq	r2,r3,800d92c <___svfiprintf_internal_r+0xe90>
 800ce64:	00c00084 	movi	r3,2
 800ce68:	10c27c26 	beq	r2,r3,800d85c <___svfiprintf_internal_r+0xdc0>
 800ce6c:	d8c01a04 	addi	r3,sp,104
 800ce70:	9008d0fa 	srli	r4,r18,3
 800ce74:	b00a977a 	slli	r5,r22,29
 800ce78:	b02cd0fa 	srli	r22,r22,3
 800ce7c:	948001cc 	andi	r18,r18,7
 800ce80:	90800c04 	addi	r2,r18,48
 800ce84:	18ffffc4 	addi	r3,r3,-1
 800ce88:	2924b03a 	or	r18,r5,r4
 800ce8c:	18800005 	stb	r2,0(r3)
 800ce90:	9588b03a 	or	r4,r18,r22
 800ce94:	203ff61e 	bne	r4,zero,800ce70 <__alt_data_end+0xfc00ce70>
 800ce98:	8100004c 	andi	r4,r16,1
 800ce9c:	d8c02715 	stw	r3,156(sp)
 800cea0:	20029d26 	beq	r4,zero,800d918 <___svfiprintf_internal_r+0xe7c>
 800cea4:	10803fcc 	andi	r2,r2,255
 800cea8:	1080201c 	xori	r2,r2,128
 800ceac:	10bfe004 	addi	r2,r2,-128
 800ceb0:	01000c04 	movi	r4,48
 800ceb4:	11031826 	beq	r2,r4,800db18 <___svfiprintf_internal_r+0x107c>
 800ceb8:	d9402717 	ldw	r5,156(sp)
 800cebc:	d8801e17 	ldw	r2,120(sp)
 800cec0:	193fffc5 	stb	r4,-1(r3)
 800cec4:	297fffc4 	addi	r5,r5,-1
 800cec8:	d9402715 	stw	r5,156(sp)
 800cecc:	1169c83a 	sub	r20,r2,r5
 800ced0:	00024606 	br	800d7ec <___svfiprintf_internal_r+0xd50>
 800ced4:	d9402417 	ldw	r5,144(sp)
 800ced8:	d8802417 	ldw	r2,144(sp)
 800cedc:	d8001d85 	stb	zero,118(sp)
 800cee0:	29400017 	ldw	r5,0(r5)
 800cee4:	b811883a 	mov	r8,r23
 800cee8:	15800104 	addi	r22,r2,4
 800ceec:	d9402715 	stw	r5,156(sp)
 800cef0:	28031826 	beq	r5,zero,800db54 <___svfiprintf_internal_r+0x10b8>
 800cef4:	d9002017 	ldw	r4,128(sp)
 800cef8:	20030b16 	blt	r4,zero,800db28 <___svfiprintf_internal_r+0x108c>
 800cefc:	d9002717 	ldw	r4,156(sp)
 800cf00:	d9802017 	ldw	r6,128(sp)
 800cf04:	000b883a 	mov	r5,zero
 800cf08:	ddc02d15 	stw	r23,180(sp)
 800cf0c:	800adc00 	call	800adc0 <memchr>
 800cf10:	da002d17 	ldw	r8,180(sp)
 800cf14:	10033926 	beq	r2,zero,800dbfc <___svfiprintf_internal_r+0x1160>
 800cf18:	d8c02717 	ldw	r3,156(sp)
 800cf1c:	d9002017 	ldw	r4,128(sp)
 800cf20:	10e9c83a 	sub	r20,r2,r3
 800cf24:	2500010e 	bge	r4,r20,800cf2c <___svfiprintf_internal_r+0x490>
 800cf28:	2029883a 	mov	r20,r4
 800cf2c:	ddc01d83 	ldbu	r23,118(sp)
 800cf30:	dd802415 	stw	r22,144(sp)
 800cf34:	d8002015 	stw	zero,128(sp)
 800cf38:	00022c06 	br	800d7ec <___svfiprintf_internal_r+0xd50>
 800cf3c:	84000814 	ori	r16,r16,32
 800cf40:	a9800007 	ldb	r6,0(r21)
 800cf44:	003f2006 	br	800cbc8 <__alt_data_end+0xfc00cbc8>
 800cf48:	d8802417 	ldw	r2,144(sp)
 800cf4c:	d8c02417 	ldw	r3,144(sp)
 800cf50:	01020074 	movhi	r4,2049
 800cf54:	14800017 	ldw	r18,0(r2)
 800cf58:	00800c04 	movi	r2,48
 800cf5c:	18c00104 	addi	r3,r3,4
 800cf60:	d8801d05 	stb	r2,116(sp)
 800cf64:	211b4d04 	addi	r4,r4,27956
 800cf68:	00801e04 	movi	r2,120
 800cf6c:	d8801d45 	stb	r2,117(sp)
 800cf70:	d8c02415 	stw	r3,144(sp)
 800cf74:	b811883a 	mov	r8,r23
 800cf78:	002d883a 	mov	r22,zero
 800cf7c:	84000094 	ori	r16,r16,2
 800cf80:	d9002a15 	stw	r4,168(sp)
 800cf84:	00800084 	movi	r2,2
 800cf88:	9007883a 	mov	r3,r18
 800cf8c:	003fa806 	br	800ce30 <__alt_data_end+0xfc00ce30>
 800cf90:	80c0080c 	andi	r3,r16,32
 800cf94:	b811883a 	mov	r8,r23
 800cf98:	d8802417 	ldw	r2,144(sp)
 800cf9c:	1800f026 	beq	r3,zero,800d360 <___svfiprintf_internal_r+0x8c4>
 800cfa0:	14800017 	ldw	r18,0(r2)
 800cfa4:	15800117 	ldw	r22,4(r2)
 800cfa8:	d8802417 	ldw	r2,144(sp)
 800cfac:	9586b03a 	or	r3,r18,r22
 800cfb0:	10800204 	addi	r2,r2,8
 800cfb4:	d8802415 	stw	r2,144(sp)
 800cfb8:	0005883a 	mov	r2,zero
 800cfbc:	003f9c06 	br	800ce30 <__alt_data_end+0xfc00ce30>
 800cfc0:	dd801d85 	stb	r22,118(sp)
 800cfc4:	8080080c 	andi	r2,r16,32
 800cfc8:	b811883a 	mov	r8,r23
 800cfcc:	10028a1e 	bne	r2,zero,800d9f8 <___svfiprintf_internal_r+0xf5c>
 800cfd0:	8080040c 	andi	r2,r16,16
 800cfd4:	1002c726 	beq	r2,zero,800daf4 <___svfiprintf_internal_r+0x1058>
 800cfd8:	d8c02417 	ldw	r3,144(sp)
 800cfdc:	d9002617 	ldw	r4,152(sp)
 800cfe0:	18800017 	ldw	r2,0(r3)
 800cfe4:	18c00104 	addi	r3,r3,4
 800cfe8:	d8c02415 	stw	r3,144(sp)
 800cfec:	11000015 	stw	r4,0(r2)
 800cff0:	003ecd06 	br	800cb28 <__alt_data_end+0xfc00cb28>
 800cff4:	84001014 	ori	r16,r16,64
 800cff8:	a9800007 	ldb	r6,0(r21)
 800cffc:	003ef206 	br	800cbc8 <__alt_data_end+0xfc00cbc8>
 800d000:	dd801d85 	stb	r22,118(sp)
 800d004:	8080080c 	andi	r2,r16,32
 800d008:	b811883a 	mov	r8,r23
 800d00c:	d8c02417 	ldw	r3,144(sp)
 800d010:	10007826 	beq	r2,zero,800d1f4 <___svfiprintf_internal_r+0x758>
 800d014:	d9002417 	ldw	r4,144(sp)
 800d018:	18800117 	ldw	r2,4(r3)
 800d01c:	1c800017 	ldw	r18,0(r3)
 800d020:	21000204 	addi	r4,r4,8
 800d024:	d9002415 	stw	r4,144(sp)
 800d028:	102d883a 	mov	r22,r2
 800d02c:	10007c16 	blt	r2,zero,800d220 <___svfiprintf_internal_r+0x784>
 800d030:	ddc01d83 	ldbu	r23,118(sp)
 800d034:	dd002017 	ldw	r20,128(sp)
 800d038:	00800044 	movi	r2,1
 800d03c:	9586b03a 	or	r3,r18,r22
 800d040:	003f7e06 	br	800ce3c <__alt_data_end+0xfc00ce3c>
 800d044:	a9800007 	ldb	r6,0(r21)
 800d048:	01001b04 	movi	r4,108
 800d04c:	a805883a 	mov	r2,r21
 800d050:	31027a26 	beq	r6,r4,800da3c <___svfiprintf_internal_r+0xfa0>
 800d054:	84000414 	ori	r16,r16,16
 800d058:	003edb06 	br	800cbc8 <__alt_data_end+0xfc00cbc8>
 800d05c:	d9402417 	ldw	r5,144(sp)
 800d060:	04800044 	movi	r18,1
 800d064:	d8c01004 	addi	r3,sp,64
 800d068:	28800017 	ldw	r2,0(r5)
 800d06c:	29400104 	addi	r5,r5,4
 800d070:	b811883a 	mov	r8,r23
 800d074:	d8001d85 	stb	zero,118(sp)
 800d078:	d8801005 	stb	r2,64(sp)
 800d07c:	d9402415 	stw	r5,144(sp)
 800d080:	9029883a 	mov	r20,r18
 800d084:	d8c02715 	stw	r3,156(sp)
 800d088:	d8002015 	stw	zero,128(sp)
 800d08c:	80c0008c 	andi	r3,r16,2
 800d090:	d8c02115 	stw	r3,132(sp)
 800d094:	18000126 	beq	r3,zero,800d09c <___svfiprintf_internal_r+0x600>
 800d098:	94800084 	addi	r18,r18,2
 800d09c:	80c0210c 	andi	r3,r16,132
 800d0a0:	d8c02515 	stw	r3,148(sp)
 800d0a4:	1800ba1e 	bne	r3,zero,800d390 <___svfiprintf_internal_r+0x8f4>
 800d0a8:	d9002317 	ldw	r4,140(sp)
 800d0ac:	24b9c83a 	sub	fp,r4,r18
 800d0b0:	0700b70e 	bge	zero,fp,800d390 <___svfiprintf_internal_r+0x8f4>
 800d0b4:	02400404 	movi	r9,16
 800d0b8:	d8c01c17 	ldw	r3,112(sp)
 800d0bc:	d8801b17 	ldw	r2,108(sp)
 800d0c0:	4f02c00e 	bge	r9,fp,800dbc4 <___svfiprintf_internal_r+0x1128>
 800d0c4:	01020074 	movhi	r4,2049
 800d0c8:	211bba04 	addi	r4,r4,28392
 800d0cc:	d9002815 	stw	r4,160(sp)
 800d0d0:	a809883a 	mov	r4,r21
 800d0d4:	dc002b15 	stw	r16,172(sp)
 800d0d8:	a02b883a 	mov	r21,r20
 800d0dc:	482f883a 	mov	r23,r9
 800d0e0:	9029883a 	mov	r20,r18
 800d0e4:	058001c4 	movi	r22,7
 800d0e8:	e025883a 	mov	r18,fp
 800d0ec:	dc002217 	ldw	r16,136(sp)
 800d0f0:	2039883a 	mov	fp,r4
 800d0f4:	00000306 	br	800d104 <___svfiprintf_internal_r+0x668>
 800d0f8:	94bffc04 	addi	r18,r18,-16
 800d0fc:	42000204 	addi	r8,r8,8
 800d100:	bc80130e 	bge	r23,r18,800d150 <___svfiprintf_internal_r+0x6b4>
 800d104:	01420074 	movhi	r5,2049
 800d108:	18c00404 	addi	r3,r3,16
 800d10c:	10800044 	addi	r2,r2,1
 800d110:	295bba04 	addi	r5,r5,28392
 800d114:	41400015 	stw	r5,0(r8)
 800d118:	45c00115 	stw	r23,4(r8)
 800d11c:	d8c01c15 	stw	r3,112(sp)
 800d120:	d8801b15 	stw	r2,108(sp)
 800d124:	b0bff40e 	bge	r22,r2,800d0f8 <__alt_data_end+0xfc00d0f8>
 800d128:	8809883a 	mov	r4,r17
 800d12c:	800b883a 	mov	r5,r16
 800d130:	d9801a04 	addi	r6,sp,104
 800d134:	800c8d40 	call	800c8d4 <__ssprint_r>
 800d138:	1001501e 	bne	r2,zero,800d67c <___svfiprintf_internal_r+0xbe0>
 800d13c:	94bffc04 	addi	r18,r18,-16
 800d140:	d8c01c17 	ldw	r3,112(sp)
 800d144:	d8801b17 	ldw	r2,108(sp)
 800d148:	d811883a 	mov	r8,sp
 800d14c:	bcbfed16 	blt	r23,r18,800d104 <__alt_data_end+0xfc00d104>
 800d150:	dc002b17 	ldw	r16,172(sp)
 800d154:	e009883a 	mov	r4,fp
 800d158:	9039883a 	mov	fp,r18
 800d15c:	a025883a 	mov	r18,r20
 800d160:	a829883a 	mov	r20,r21
 800d164:	202b883a 	mov	r21,r4
 800d168:	d9002817 	ldw	r4,160(sp)
 800d16c:	e0c7883a 	add	r3,fp,r3
 800d170:	10800044 	addi	r2,r2,1
 800d174:	41000015 	stw	r4,0(r8)
 800d178:	47000115 	stw	fp,4(r8)
 800d17c:	d8c01c15 	stw	r3,112(sp)
 800d180:	d8801b15 	stw	r2,108(sp)
 800d184:	010001c4 	movi	r4,7
 800d188:	2081da16 	blt	r4,r2,800d8f4 <___svfiprintf_internal_r+0xe58>
 800d18c:	42000204 	addi	r8,r8,8
 800d190:	00008106 	br	800d398 <___svfiprintf_internal_r+0x8fc>
 800d194:	01020074 	movhi	r4,2049
 800d198:	211b4804 	addi	r4,r4,27936
 800d19c:	dd801d85 	stb	r22,118(sp)
 800d1a0:	d9002a15 	stw	r4,168(sp)
 800d1a4:	80c0080c 	andi	r3,r16,32
 800d1a8:	b811883a 	mov	r8,r23
 800d1ac:	d8802417 	ldw	r2,144(sp)
 800d1b0:	183f091e 	bne	r3,zero,800cdd8 <__alt_data_end+0xfc00cdd8>
 800d1b4:	80c0040c 	andi	r3,r16,16
 800d1b8:	1801f21e 	bne	r3,zero,800d984 <___svfiprintf_internal_r+0xee8>
 800d1bc:	80c0100c 	andi	r3,r16,64
 800d1c0:	18024626 	beq	r3,zero,800dadc <___svfiprintf_internal_r+0x1040>
 800d1c4:	d9402417 	ldw	r5,144(sp)
 800d1c8:	1480000b 	ldhu	r18,0(r2)
 800d1cc:	002d883a 	mov	r22,zero
 800d1d0:	29400104 	addi	r5,r5,4
 800d1d4:	d9402415 	stw	r5,144(sp)
 800d1d8:	003f0406 	br	800cdec <__alt_data_end+0xfc00cdec>
 800d1dc:	84000414 	ori	r16,r16,16
 800d1e0:	dd801d85 	stb	r22,118(sp)
 800d1e4:	8080080c 	andi	r2,r16,32
 800d1e8:	b811883a 	mov	r8,r23
 800d1ec:	d8c02417 	ldw	r3,144(sp)
 800d1f0:	103f881e 	bne	r2,zero,800d014 <__alt_data_end+0xfc00d014>
 800d1f4:	8080040c 	andi	r2,r16,16
 800d1f8:	1001f81e 	bne	r2,zero,800d9dc <___svfiprintf_internal_r+0xf40>
 800d1fc:	8080100c 	andi	r2,r16,64
 800d200:	10021f26 	beq	r2,zero,800da80 <___svfiprintf_internal_r+0xfe4>
 800d204:	1c80000f 	ldh	r18,0(r3)
 800d208:	d8802417 	ldw	r2,144(sp)
 800d20c:	902dd7fa 	srai	r22,r18,31
 800d210:	10800104 	addi	r2,r2,4
 800d214:	d8802415 	stw	r2,144(sp)
 800d218:	b005883a 	mov	r2,r22
 800d21c:	103f840e 	bge	r2,zero,800d030 <__alt_data_end+0xfc00d030>
 800d220:	04a5c83a 	sub	r18,zero,r18
 800d224:	9004c03a 	cmpne	r2,r18,zero
 800d228:	05adc83a 	sub	r22,zero,r22
 800d22c:	b0adc83a 	sub	r22,r22,r2
 800d230:	05c00b44 	movi	r23,45
 800d234:	ddc01d85 	stb	r23,118(sp)
 800d238:	dd002017 	ldw	r20,128(sp)
 800d23c:	00800044 	movi	r2,1
 800d240:	9586b03a 	or	r3,r18,r22
 800d244:	003efd06 	br	800ce3c <__alt_data_end+0xfc00ce3c>
 800d248:	dc002115 	stw	r16,132(sp)
 800d24c:	d8002315 	stw	zero,140(sp)
 800d250:	373ff404 	addi	fp,r6,-48
 800d254:	0009883a 	mov	r4,zero
 800d258:	a821883a 	mov	r16,r21
 800d25c:	01400284 	movi	r5,10
 800d260:	80027f80 	call	80027f8 <__mulsi3>
 800d264:	81800007 	ldb	r6,0(r16)
 800d268:	1709883a 	add	r4,r2,fp
 800d26c:	ad400044 	addi	r21,r21,1
 800d270:	373ff404 	addi	fp,r6,-48
 800d274:	a821883a 	mov	r16,r21
 800d278:	a73ff82e 	bgeu	r20,fp,800d25c <__alt_data_end+0xfc00d25c>
 800d27c:	d9002315 	stw	r4,140(sp)
 800d280:	30bff804 	addi	r2,r6,-32
 800d284:	dc002117 	ldw	r16,132(sp)
 800d288:	90be522e 	bgeu	r18,r2,800cbd4 <__alt_data_end+0xfc00cbd4>
 800d28c:	dd801d85 	stb	r22,118(sp)
 800d290:	b811883a 	mov	r8,r23
 800d294:	3000f326 	beq	r6,zero,800d664 <___svfiprintf_internal_r+0xbc8>
 800d298:	04800044 	movi	r18,1
 800d29c:	d8c01004 	addi	r3,sp,64
 800d2a0:	d9801005 	stb	r6,64(sp)
 800d2a4:	d8001d85 	stb	zero,118(sp)
 800d2a8:	9029883a 	mov	r20,r18
 800d2ac:	d8c02715 	stw	r3,156(sp)
 800d2b0:	003f7506 	br	800d088 <__alt_data_end+0xfc00d088>
 800d2b4:	84002014 	ori	r16,r16,128
 800d2b8:	a9800007 	ldb	r6,0(r21)
 800d2bc:	003e4206 	br	800cbc8 <__alt_data_end+0xfc00cbc8>
 800d2c0:	a9800007 	ldb	r6,0(r21)
 800d2c4:	01400a84 	movi	r5,42
 800d2c8:	a8800044 	addi	r2,r21,1
 800d2cc:	31425226 	beq	r6,r5,800dc18 <___svfiprintf_internal_r+0x117c>
 800d2d0:	373ff404 	addi	fp,r6,-48
 800d2d4:	102b883a 	mov	r21,r2
 800d2d8:	0009883a 	mov	r4,zero
 800d2dc:	a7024536 	bltu	r20,fp,800dbf4 <___svfiprintf_internal_r+0x1158>
 800d2e0:	01400284 	movi	r5,10
 800d2e4:	80027f80 	call	80027f8 <__mulsi3>
 800d2e8:	a9800007 	ldb	r6,0(r21)
 800d2ec:	e089883a 	add	r4,fp,r2
 800d2f0:	ad400044 	addi	r21,r21,1
 800d2f4:	373ff404 	addi	fp,r6,-48
 800d2f8:	a73ff92e 	bgeu	r20,fp,800d2e0 <__alt_data_end+0xfc00d2e0>
 800d2fc:	20021316 	blt	r4,zero,800db4c <___svfiprintf_internal_r+0x10b0>
 800d300:	d9002015 	stw	r4,128(sp)
 800d304:	003e3106 	br	800cbcc <__alt_data_end+0xfc00cbcc>
 800d308:	84000414 	ori	r16,r16,16
 800d30c:	80c0080c 	andi	r3,r16,32
 800d310:	b811883a 	mov	r8,r23
 800d314:	d8802417 	ldw	r2,144(sp)
 800d318:	183ebe1e 	bne	r3,zero,800ce14 <__alt_data_end+0xfc00ce14>
 800d31c:	80c0040c 	andi	r3,r16,16
 800d320:	18019e1e 	bne	r3,zero,800d99c <___svfiprintf_internal_r+0xf00>
 800d324:	80c0100c 	andi	r3,r16,64
 800d328:	1801dc26 	beq	r3,zero,800da9c <___svfiprintf_internal_r+0x1000>
 800d32c:	d8c02417 	ldw	r3,144(sp)
 800d330:	1480000b 	ldhu	r18,0(r2)
 800d334:	002d883a 	mov	r22,zero
 800d338:	18c00104 	addi	r3,r3,4
 800d33c:	d8c02415 	stw	r3,144(sp)
 800d340:	00800044 	movi	r2,1
 800d344:	9007883a 	mov	r3,r18
 800d348:	003eb906 	br	800ce30 <__alt_data_end+0xfc00ce30>
 800d34c:	84000414 	ori	r16,r16,16
 800d350:	80c0080c 	andi	r3,r16,32
 800d354:	b811883a 	mov	r8,r23
 800d358:	d8802417 	ldw	r2,144(sp)
 800d35c:	183f101e 	bne	r3,zero,800cfa0 <__alt_data_end+0xfc00cfa0>
 800d360:	80c0040c 	andi	r3,r16,16
 800d364:	1801951e 	bne	r3,zero,800d9bc <___svfiprintf_internal_r+0xf20>
 800d368:	80c0100c 	andi	r3,r16,64
 800d36c:	1801d326 	beq	r3,zero,800dabc <___svfiprintf_internal_r+0x1020>
 800d370:	d9002417 	ldw	r4,144(sp)
 800d374:	1480000b 	ldhu	r18,0(r2)
 800d378:	002d883a 	mov	r22,zero
 800d37c:	21000104 	addi	r4,r4,4
 800d380:	d9002415 	stw	r4,144(sp)
 800d384:	0005883a 	mov	r2,zero
 800d388:	9007883a 	mov	r3,r18
 800d38c:	003ea806 	br	800ce30 <__alt_data_end+0xfc00ce30>
 800d390:	d8c01c17 	ldw	r3,112(sp)
 800d394:	d8801b17 	ldw	r2,108(sp)
 800d398:	d9001d87 	ldb	r4,118(sp)
 800d39c:	20000b26 	beq	r4,zero,800d3cc <___svfiprintf_internal_r+0x930>
 800d3a0:	d9001d84 	addi	r4,sp,118
 800d3a4:	18c00044 	addi	r3,r3,1
 800d3a8:	10800044 	addi	r2,r2,1
 800d3ac:	41000015 	stw	r4,0(r8)
 800d3b0:	01000044 	movi	r4,1
 800d3b4:	41000115 	stw	r4,4(r8)
 800d3b8:	d8c01c15 	stw	r3,112(sp)
 800d3bc:	d8801b15 	stw	r2,108(sp)
 800d3c0:	010001c4 	movi	r4,7
 800d3c4:	20813616 	blt	r4,r2,800d8a0 <___svfiprintf_internal_r+0xe04>
 800d3c8:	42000204 	addi	r8,r8,8
 800d3cc:	d9402117 	ldw	r5,132(sp)
 800d3d0:	28000b26 	beq	r5,zero,800d400 <___svfiprintf_internal_r+0x964>
 800d3d4:	d9001d04 	addi	r4,sp,116
 800d3d8:	18c00084 	addi	r3,r3,2
 800d3dc:	10800044 	addi	r2,r2,1
 800d3e0:	41000015 	stw	r4,0(r8)
 800d3e4:	01000084 	movi	r4,2
 800d3e8:	41000115 	stw	r4,4(r8)
 800d3ec:	d8c01c15 	stw	r3,112(sp)
 800d3f0:	d8801b15 	stw	r2,108(sp)
 800d3f4:	010001c4 	movi	r4,7
 800d3f8:	20813216 	blt	r4,r2,800d8c4 <___svfiprintf_internal_r+0xe28>
 800d3fc:	42000204 	addi	r8,r8,8
 800d400:	d9402517 	ldw	r5,148(sp)
 800d404:	01002004 	movi	r4,128
 800d408:	2900ad26 	beq	r5,r4,800d6c0 <___svfiprintf_internal_r+0xc24>
 800d40c:	d9002017 	ldw	r4,128(sp)
 800d410:	252fc83a 	sub	r23,r4,r20
 800d414:	05c0330e 	bge	zero,r23,800d4e4 <___svfiprintf_internal_r+0xa48>
 800d418:	01c00404 	movi	r7,16
 800d41c:	3dc1940e 	bge	r7,r23,800da70 <___svfiprintf_internal_r+0xfd4>
 800d420:	01020074 	movhi	r4,2049
 800d424:	211bb604 	addi	r4,r4,28376
 800d428:	d9002115 	stw	r4,132(sp)
 800d42c:	a809883a 	mov	r4,r21
 800d430:	dc002015 	stw	r16,128(sp)
 800d434:	a02b883a 	mov	r21,r20
 800d438:	3839883a 	mov	fp,r7
 800d43c:	9029883a 	mov	r20,r18
 800d440:	058001c4 	movi	r22,7
 800d444:	b825883a 	mov	r18,r23
 800d448:	dc002217 	ldw	r16,136(sp)
 800d44c:	202f883a 	mov	r23,r4
 800d450:	00000306 	br	800d460 <___svfiprintf_internal_r+0x9c4>
 800d454:	94bffc04 	addi	r18,r18,-16
 800d458:	42000204 	addi	r8,r8,8
 800d45c:	e480110e 	bge	fp,r18,800d4a4 <___svfiprintf_internal_r+0xa08>
 800d460:	18c00404 	addi	r3,r3,16
 800d464:	10800044 	addi	r2,r2,1
 800d468:	44c00015 	stw	r19,0(r8)
 800d46c:	47000115 	stw	fp,4(r8)
 800d470:	d8c01c15 	stw	r3,112(sp)
 800d474:	d8801b15 	stw	r2,108(sp)
 800d478:	b0bff60e 	bge	r22,r2,800d454 <__alt_data_end+0xfc00d454>
 800d47c:	8809883a 	mov	r4,r17
 800d480:	800b883a 	mov	r5,r16
 800d484:	d9801a04 	addi	r6,sp,104
 800d488:	800c8d40 	call	800c8d4 <__ssprint_r>
 800d48c:	10007b1e 	bne	r2,zero,800d67c <___svfiprintf_internal_r+0xbe0>
 800d490:	94bffc04 	addi	r18,r18,-16
 800d494:	d8c01c17 	ldw	r3,112(sp)
 800d498:	d8801b17 	ldw	r2,108(sp)
 800d49c:	d811883a 	mov	r8,sp
 800d4a0:	e4bfef16 	blt	fp,r18,800d460 <__alt_data_end+0xfc00d460>
 800d4a4:	dc002017 	ldw	r16,128(sp)
 800d4a8:	b809883a 	mov	r4,r23
 800d4ac:	902f883a 	mov	r23,r18
 800d4b0:	a025883a 	mov	r18,r20
 800d4b4:	a829883a 	mov	r20,r21
 800d4b8:	202b883a 	mov	r21,r4
 800d4bc:	d9402117 	ldw	r5,132(sp)
 800d4c0:	1dc7883a 	add	r3,r3,r23
 800d4c4:	10800044 	addi	r2,r2,1
 800d4c8:	41400015 	stw	r5,0(r8)
 800d4cc:	45c00115 	stw	r23,4(r8)
 800d4d0:	d8c01c15 	stw	r3,112(sp)
 800d4d4:	d8801b15 	stw	r2,108(sp)
 800d4d8:	010001c4 	movi	r4,7
 800d4dc:	2080d616 	blt	r4,r2,800d838 <___svfiprintf_internal_r+0xd9c>
 800d4e0:	42000204 	addi	r8,r8,8
 800d4e4:	d9002717 	ldw	r4,156(sp)
 800d4e8:	a0c7883a 	add	r3,r20,r3
 800d4ec:	10800044 	addi	r2,r2,1
 800d4f0:	41000015 	stw	r4,0(r8)
 800d4f4:	45000115 	stw	r20,4(r8)
 800d4f8:	d8c01c15 	stw	r3,112(sp)
 800d4fc:	d8801b15 	stw	r2,108(sp)
 800d500:	010001c4 	movi	r4,7
 800d504:	2080a516 	blt	r4,r2,800d79c <___svfiprintf_internal_r+0xd00>
 800d508:	42000204 	addi	r8,r8,8
 800d50c:	8400010c 	andi	r16,r16,4
 800d510:	80002b26 	beq	r16,zero,800d5c0 <___svfiprintf_internal_r+0xb24>
 800d514:	d9402317 	ldw	r5,140(sp)
 800d518:	2ca1c83a 	sub	r16,r5,r18
 800d51c:	0400280e 	bge	zero,r16,800d5c0 <___svfiprintf_internal_r+0xb24>
 800d520:	05000404 	movi	r20,16
 800d524:	d8801b17 	ldw	r2,108(sp)
 800d528:	a401aa0e 	bge	r20,r16,800dbd4 <___svfiprintf_internal_r+0x1138>
 800d52c:	01420074 	movhi	r5,2049
 800d530:	295bba04 	addi	r5,r5,28392
 800d534:	d9402815 	stw	r5,160(sp)
 800d538:	058001c4 	movi	r22,7
 800d53c:	ddc02217 	ldw	r23,136(sp)
 800d540:	00000306 	br	800d550 <___svfiprintf_internal_r+0xab4>
 800d544:	843ffc04 	addi	r16,r16,-16
 800d548:	42000204 	addi	r8,r8,8
 800d54c:	a400130e 	bge	r20,r16,800d59c <___svfiprintf_internal_r+0xb00>
 800d550:	01020074 	movhi	r4,2049
 800d554:	18c00404 	addi	r3,r3,16
 800d558:	10800044 	addi	r2,r2,1
 800d55c:	211bba04 	addi	r4,r4,28392
 800d560:	41000015 	stw	r4,0(r8)
 800d564:	45000115 	stw	r20,4(r8)
 800d568:	d8c01c15 	stw	r3,112(sp)
 800d56c:	d8801b15 	stw	r2,108(sp)
 800d570:	b0bff40e 	bge	r22,r2,800d544 <__alt_data_end+0xfc00d544>
 800d574:	8809883a 	mov	r4,r17
 800d578:	b80b883a 	mov	r5,r23
 800d57c:	d9801a04 	addi	r6,sp,104
 800d580:	800c8d40 	call	800c8d4 <__ssprint_r>
 800d584:	10003d1e 	bne	r2,zero,800d67c <___svfiprintf_internal_r+0xbe0>
 800d588:	843ffc04 	addi	r16,r16,-16
 800d58c:	d8c01c17 	ldw	r3,112(sp)
 800d590:	d8801b17 	ldw	r2,108(sp)
 800d594:	d811883a 	mov	r8,sp
 800d598:	a43fed16 	blt	r20,r16,800d550 <__alt_data_end+0xfc00d550>
 800d59c:	d9402817 	ldw	r5,160(sp)
 800d5a0:	1c07883a 	add	r3,r3,r16
 800d5a4:	10800044 	addi	r2,r2,1
 800d5a8:	41400015 	stw	r5,0(r8)
 800d5ac:	44000115 	stw	r16,4(r8)
 800d5b0:	d8c01c15 	stw	r3,112(sp)
 800d5b4:	d8801b15 	stw	r2,108(sp)
 800d5b8:	010001c4 	movi	r4,7
 800d5bc:	2080e416 	blt	r4,r2,800d950 <___svfiprintf_internal_r+0xeb4>
 800d5c0:	d8802317 	ldw	r2,140(sp)
 800d5c4:	9080010e 	bge	r18,r2,800d5cc <___svfiprintf_internal_r+0xb30>
 800d5c8:	1025883a 	mov	r18,r2
 800d5cc:	d9002617 	ldw	r4,152(sp)
 800d5d0:	2489883a 	add	r4,r4,r18
 800d5d4:	d9002615 	stw	r4,152(sp)
 800d5d8:	1800781e 	bne	r3,zero,800d7bc <___svfiprintf_internal_r+0xd20>
 800d5dc:	a8800007 	ldb	r2,0(r21)
 800d5e0:	d8001b15 	stw	zero,108(sp)
 800d5e4:	d811883a 	mov	r8,sp
 800d5e8:	103d511e 	bne	r2,zero,800cb30 <__alt_data_end+0xfc00cb30>
 800d5ec:	a825883a 	mov	r18,r21
 800d5f0:	003d6806 	br	800cb94 <__alt_data_end+0xfc00cb94>
 800d5f4:	10803fcc 	andi	r2,r2,255
 800d5f8:	00c00044 	movi	r3,1
 800d5fc:	10fe191e 	bne	r2,r3,800ce64 <__alt_data_end+0xfc00ce64>
 800d600:	b000c826 	beq	r22,zero,800d924 <___svfiprintf_internal_r+0xe88>
 800d604:	df001a04 	addi	fp,sp,104
 800d608:	4029883a 	mov	r20,r8
 800d60c:	9009883a 	mov	r4,r18
 800d610:	b00b883a 	mov	r5,r22
 800d614:	01800284 	movi	r6,10
 800d618:	000f883a 	mov	r7,zero
 800d61c:	80101540 	call	8010154 <__umoddi3>
 800d620:	10800c04 	addi	r2,r2,48
 800d624:	e73fffc4 	addi	fp,fp,-1
 800d628:	9009883a 	mov	r4,r18
 800d62c:	b00b883a 	mov	r5,r22
 800d630:	01800284 	movi	r6,10
 800d634:	000f883a 	mov	r7,zero
 800d638:	e0800005 	stb	r2,0(fp)
 800d63c:	800fb140 	call	800fb14 <__udivdi3>
 800d640:	1025883a 	mov	r18,r2
 800d644:	10c4b03a 	or	r2,r2,r3
 800d648:	182d883a 	mov	r22,r3
 800d64c:	103fef1e 	bne	r2,zero,800d60c <__alt_data_end+0xfc00d60c>
 800d650:	d9001e17 	ldw	r4,120(sp)
 800d654:	a011883a 	mov	r8,r20
 800d658:	df002715 	stw	fp,156(sp)
 800d65c:	2729c83a 	sub	r20,r4,fp
 800d660:	00006206 	br	800d7ec <___svfiprintf_internal_r+0xd50>
 800d664:	d8801c17 	ldw	r2,112(sp)
 800d668:	10000426 	beq	r2,zero,800d67c <___svfiprintf_internal_r+0xbe0>
 800d66c:	d9002917 	ldw	r4,164(sp)
 800d670:	d9402217 	ldw	r5,136(sp)
 800d674:	d9801a04 	addi	r6,sp,104
 800d678:	800c8d40 	call	800c8d4 <__ssprint_r>
 800d67c:	d9402217 	ldw	r5,136(sp)
 800d680:	2880030b 	ldhu	r2,12(r5)
 800d684:	1080100c 	andi	r2,r2,64
 800d688:	1000621e 	bne	r2,zero,800d814 <___svfiprintf_internal_r+0xd78>
 800d68c:	d8802617 	ldw	r2,152(sp)
 800d690:	dfc03717 	ldw	ra,220(sp)
 800d694:	df003617 	ldw	fp,216(sp)
 800d698:	ddc03517 	ldw	r23,212(sp)
 800d69c:	dd803417 	ldw	r22,208(sp)
 800d6a0:	dd403317 	ldw	r21,204(sp)
 800d6a4:	dd003217 	ldw	r20,200(sp)
 800d6a8:	dcc03117 	ldw	r19,196(sp)
 800d6ac:	dc803017 	ldw	r18,192(sp)
 800d6b0:	dc402f17 	ldw	r17,188(sp)
 800d6b4:	dc002e17 	ldw	r16,184(sp)
 800d6b8:	dec03804 	addi	sp,sp,224
 800d6bc:	f800283a 	ret
 800d6c0:	d9002317 	ldw	r4,140(sp)
 800d6c4:	24afc83a 	sub	r23,r4,r18
 800d6c8:	05ff500e 	bge	zero,r23,800d40c <__alt_data_end+0xfc00d40c>
 800d6cc:	01c00404 	movi	r7,16
 800d6d0:	3dc1440e 	bge	r7,r23,800dbe4 <___svfiprintf_internal_r+0x1148>
 800d6d4:	01020074 	movhi	r4,2049
 800d6d8:	211bb604 	addi	r4,r4,28376
 800d6dc:	d9002115 	stw	r4,132(sp)
 800d6e0:	a809883a 	mov	r4,r21
 800d6e4:	dc002515 	stw	r16,148(sp)
 800d6e8:	a02b883a 	mov	r21,r20
 800d6ec:	3839883a 	mov	fp,r7
 800d6f0:	9029883a 	mov	r20,r18
 800d6f4:	058001c4 	movi	r22,7
 800d6f8:	b825883a 	mov	r18,r23
 800d6fc:	dc002217 	ldw	r16,136(sp)
 800d700:	202f883a 	mov	r23,r4
 800d704:	00000306 	br	800d714 <___svfiprintf_internal_r+0xc78>
 800d708:	94bffc04 	addi	r18,r18,-16
 800d70c:	42000204 	addi	r8,r8,8
 800d710:	e480110e 	bge	fp,r18,800d758 <___svfiprintf_internal_r+0xcbc>
 800d714:	18c00404 	addi	r3,r3,16
 800d718:	10800044 	addi	r2,r2,1
 800d71c:	44c00015 	stw	r19,0(r8)
 800d720:	47000115 	stw	fp,4(r8)
 800d724:	d8c01c15 	stw	r3,112(sp)
 800d728:	d8801b15 	stw	r2,108(sp)
 800d72c:	b0bff60e 	bge	r22,r2,800d708 <__alt_data_end+0xfc00d708>
 800d730:	8809883a 	mov	r4,r17
 800d734:	800b883a 	mov	r5,r16
 800d738:	d9801a04 	addi	r6,sp,104
 800d73c:	800c8d40 	call	800c8d4 <__ssprint_r>
 800d740:	103fce1e 	bne	r2,zero,800d67c <__alt_data_end+0xfc00d67c>
 800d744:	94bffc04 	addi	r18,r18,-16
 800d748:	d8c01c17 	ldw	r3,112(sp)
 800d74c:	d8801b17 	ldw	r2,108(sp)
 800d750:	d811883a 	mov	r8,sp
 800d754:	e4bfef16 	blt	fp,r18,800d714 <__alt_data_end+0xfc00d714>
 800d758:	dc002517 	ldw	r16,148(sp)
 800d75c:	b809883a 	mov	r4,r23
 800d760:	902f883a 	mov	r23,r18
 800d764:	a025883a 	mov	r18,r20
 800d768:	a829883a 	mov	r20,r21
 800d76c:	202b883a 	mov	r21,r4
 800d770:	d9402117 	ldw	r5,132(sp)
 800d774:	1dc7883a 	add	r3,r3,r23
 800d778:	10800044 	addi	r2,r2,1
 800d77c:	41400015 	stw	r5,0(r8)
 800d780:	45c00115 	stw	r23,4(r8)
 800d784:	d8c01c15 	stw	r3,112(sp)
 800d788:	d8801b15 	stw	r2,108(sp)
 800d78c:	010001c4 	movi	r4,7
 800d790:	2080ae16 	blt	r4,r2,800da4c <___svfiprintf_internal_r+0xfb0>
 800d794:	42000204 	addi	r8,r8,8
 800d798:	003f1c06 	br	800d40c <__alt_data_end+0xfc00d40c>
 800d79c:	d9402217 	ldw	r5,136(sp)
 800d7a0:	8809883a 	mov	r4,r17
 800d7a4:	d9801a04 	addi	r6,sp,104
 800d7a8:	800c8d40 	call	800c8d4 <__ssprint_r>
 800d7ac:	103fb31e 	bne	r2,zero,800d67c <__alt_data_end+0xfc00d67c>
 800d7b0:	d8c01c17 	ldw	r3,112(sp)
 800d7b4:	d811883a 	mov	r8,sp
 800d7b8:	003f5406 	br	800d50c <__alt_data_end+0xfc00d50c>
 800d7bc:	d9402217 	ldw	r5,136(sp)
 800d7c0:	8809883a 	mov	r4,r17
 800d7c4:	d9801a04 	addi	r6,sp,104
 800d7c8:	800c8d40 	call	800c8d4 <__ssprint_r>
 800d7cc:	103f8326 	beq	r2,zero,800d5dc <__alt_data_end+0xfc00d5dc>
 800d7d0:	003faa06 	br	800d67c <__alt_data_end+0xfc00d67c>
 800d7d4:	10803fcc 	andi	r2,r2,255
 800d7d8:	1000021e 	bne	r2,zero,800d7e4 <___svfiprintf_internal_r+0xd48>
 800d7dc:	8080004c 	andi	r2,r16,1
 800d7e0:	1000621e 	bne	r2,zero,800d96c <___svfiprintf_internal_r+0xed0>
 800d7e4:	d8c01a04 	addi	r3,sp,104
 800d7e8:	d8c02715 	stw	r3,156(sp)
 800d7ec:	d9002017 	ldw	r4,128(sp)
 800d7f0:	a025883a 	mov	r18,r20
 800d7f4:	a100010e 	bge	r20,r4,800d7fc <___svfiprintf_internal_r+0xd60>
 800d7f8:	2025883a 	mov	r18,r4
 800d7fc:	bdc03fcc 	andi	r23,r23,255
 800d800:	bdc0201c 	xori	r23,r23,128
 800d804:	bdffe004 	addi	r23,r23,-128
 800d808:	b83e2026 	beq	r23,zero,800d08c <__alt_data_end+0xfc00d08c>
 800d80c:	94800044 	addi	r18,r18,1
 800d810:	003e1e06 	br	800d08c <__alt_data_end+0xfc00d08c>
 800d814:	00bfffc4 	movi	r2,-1
 800d818:	003f9d06 	br	800d690 <__alt_data_end+0xfc00d690>
 800d81c:	d9402217 	ldw	r5,136(sp)
 800d820:	8809883a 	mov	r4,r17
 800d824:	d9801a04 	addi	r6,sp,104
 800d828:	800c8d40 	call	800c8d4 <__ssprint_r>
 800d82c:	103f931e 	bne	r2,zero,800d67c <__alt_data_end+0xfc00d67c>
 800d830:	d811883a 	mov	r8,sp
 800d834:	003cd406 	br	800cb88 <__alt_data_end+0xfc00cb88>
 800d838:	d9402217 	ldw	r5,136(sp)
 800d83c:	8809883a 	mov	r4,r17
 800d840:	d9801a04 	addi	r6,sp,104
 800d844:	800c8d40 	call	800c8d4 <__ssprint_r>
 800d848:	103f8c1e 	bne	r2,zero,800d67c <__alt_data_end+0xfc00d67c>
 800d84c:	d8c01c17 	ldw	r3,112(sp)
 800d850:	d8801b17 	ldw	r2,108(sp)
 800d854:	d811883a 	mov	r8,sp
 800d858:	003f2206 	br	800d4e4 <__alt_data_end+0xfc00d4e4>
 800d85c:	d9002a17 	ldw	r4,168(sp)
 800d860:	df001a04 	addi	fp,sp,104
 800d864:	908003cc 	andi	r2,r18,15
 800d868:	b006973a 	slli	r3,r22,28
 800d86c:	2085883a 	add	r2,r4,r2
 800d870:	9024d13a 	srli	r18,r18,4
 800d874:	10800003 	ldbu	r2,0(r2)
 800d878:	b02cd13a 	srli	r22,r22,4
 800d87c:	e73fffc4 	addi	fp,fp,-1
 800d880:	1ca4b03a 	or	r18,r3,r18
 800d884:	e0800005 	stb	r2,0(fp)
 800d888:	9584b03a 	or	r2,r18,r22
 800d88c:	103ff51e 	bne	r2,zero,800d864 <__alt_data_end+0xfc00d864>
 800d890:	d9401e17 	ldw	r5,120(sp)
 800d894:	df002715 	stw	fp,156(sp)
 800d898:	2f29c83a 	sub	r20,r5,fp
 800d89c:	003fd306 	br	800d7ec <__alt_data_end+0xfc00d7ec>
 800d8a0:	d9402217 	ldw	r5,136(sp)
 800d8a4:	8809883a 	mov	r4,r17
 800d8a8:	d9801a04 	addi	r6,sp,104
 800d8ac:	800c8d40 	call	800c8d4 <__ssprint_r>
 800d8b0:	103f721e 	bne	r2,zero,800d67c <__alt_data_end+0xfc00d67c>
 800d8b4:	d8c01c17 	ldw	r3,112(sp)
 800d8b8:	d8801b17 	ldw	r2,108(sp)
 800d8bc:	d811883a 	mov	r8,sp
 800d8c0:	003ec206 	br	800d3cc <__alt_data_end+0xfc00d3cc>
 800d8c4:	d9402217 	ldw	r5,136(sp)
 800d8c8:	8809883a 	mov	r4,r17
 800d8cc:	d9801a04 	addi	r6,sp,104
 800d8d0:	800c8d40 	call	800c8d4 <__ssprint_r>
 800d8d4:	103f691e 	bne	r2,zero,800d67c <__alt_data_end+0xfc00d67c>
 800d8d8:	d8c01c17 	ldw	r3,112(sp)
 800d8dc:	d8801b17 	ldw	r2,108(sp)
 800d8e0:	d811883a 	mov	r8,sp
 800d8e4:	003ec606 	br	800d400 <__alt_data_end+0xfc00d400>
 800d8e8:	00800084 	movi	r2,2
 800d8ec:	9586b03a 	or	r3,r18,r22
 800d8f0:	003d4f06 	br	800ce30 <__alt_data_end+0xfc00ce30>
 800d8f4:	d9402217 	ldw	r5,136(sp)
 800d8f8:	8809883a 	mov	r4,r17
 800d8fc:	d9801a04 	addi	r6,sp,104
 800d900:	800c8d40 	call	800c8d4 <__ssprint_r>
 800d904:	103f5d1e 	bne	r2,zero,800d67c <__alt_data_end+0xfc00d67c>
 800d908:	d8c01c17 	ldw	r3,112(sp)
 800d90c:	d8801b17 	ldw	r2,108(sp)
 800d910:	d811883a 	mov	r8,sp
 800d914:	003ea006 	br	800d398 <__alt_data_end+0xfc00d398>
 800d918:	d8801e17 	ldw	r2,120(sp)
 800d91c:	10e9c83a 	sub	r20,r2,r3
 800d920:	003fb206 	br	800d7ec <__alt_data_end+0xfc00d7ec>
 800d924:	00800244 	movi	r2,9
 800d928:	14bf3636 	bltu	r2,r18,800d604 <__alt_data_end+0xfc00d604>
 800d92c:	94800c04 	addi	r18,r18,48
 800d930:	d8c019c4 	addi	r3,sp,103
 800d934:	dc8019c5 	stb	r18,103(sp)
 800d938:	dd002c17 	ldw	r20,176(sp)
 800d93c:	d8c02715 	stw	r3,156(sp)
 800d940:	003faa06 	br	800d7ec <__alt_data_end+0xfc00d7ec>
 800d944:	d8802415 	stw	r2,144(sp)
 800d948:	a9800007 	ldb	r6,0(r21)
 800d94c:	003c9e06 	br	800cbc8 <__alt_data_end+0xfc00cbc8>
 800d950:	d9402217 	ldw	r5,136(sp)
 800d954:	8809883a 	mov	r4,r17
 800d958:	d9801a04 	addi	r6,sp,104
 800d95c:	800c8d40 	call	800c8d4 <__ssprint_r>
 800d960:	103f461e 	bne	r2,zero,800d67c <__alt_data_end+0xfc00d67c>
 800d964:	d8c01c17 	ldw	r3,112(sp)
 800d968:	003f1506 	br	800d5c0 <__alt_data_end+0xfc00d5c0>
 800d96c:	00800c04 	movi	r2,48
 800d970:	d8c019c4 	addi	r3,sp,103
 800d974:	d88019c5 	stb	r2,103(sp)
 800d978:	dd002c17 	ldw	r20,176(sp)
 800d97c:	d8c02715 	stw	r3,156(sp)
 800d980:	003f9a06 	br	800d7ec <__alt_data_end+0xfc00d7ec>
 800d984:	d9002417 	ldw	r4,144(sp)
 800d988:	14800017 	ldw	r18,0(r2)
 800d98c:	002d883a 	mov	r22,zero
 800d990:	21000104 	addi	r4,r4,4
 800d994:	d9002415 	stw	r4,144(sp)
 800d998:	003d1406 	br	800cdec <__alt_data_end+0xfc00cdec>
 800d99c:	14800017 	ldw	r18,0(r2)
 800d9a0:	d8802417 	ldw	r2,144(sp)
 800d9a4:	002d883a 	mov	r22,zero
 800d9a8:	9007883a 	mov	r3,r18
 800d9ac:	10800104 	addi	r2,r2,4
 800d9b0:	d8802415 	stw	r2,144(sp)
 800d9b4:	00800044 	movi	r2,1
 800d9b8:	003d1d06 	br	800ce30 <__alt_data_end+0xfc00ce30>
 800d9bc:	d8c02417 	ldw	r3,144(sp)
 800d9c0:	14800017 	ldw	r18,0(r2)
 800d9c4:	002d883a 	mov	r22,zero
 800d9c8:	18c00104 	addi	r3,r3,4
 800d9cc:	d8c02415 	stw	r3,144(sp)
 800d9d0:	0005883a 	mov	r2,zero
 800d9d4:	9007883a 	mov	r3,r18
 800d9d8:	003d1506 	br	800ce30 <__alt_data_end+0xfc00ce30>
 800d9dc:	1c800017 	ldw	r18,0(r3)
 800d9e0:	d9402417 	ldw	r5,144(sp)
 800d9e4:	902dd7fa 	srai	r22,r18,31
 800d9e8:	29400104 	addi	r5,r5,4
 800d9ec:	d9402415 	stw	r5,144(sp)
 800d9f0:	b005883a 	mov	r2,r22
 800d9f4:	003d8d06 	br	800d02c <__alt_data_end+0xfc00d02c>
 800d9f8:	d9002417 	ldw	r4,144(sp)
 800d9fc:	d9402617 	ldw	r5,152(sp)
 800da00:	20800017 	ldw	r2,0(r4)
 800da04:	2807d7fa 	srai	r3,r5,31
 800da08:	21000104 	addi	r4,r4,4
 800da0c:	d9002415 	stw	r4,144(sp)
 800da10:	11400015 	stw	r5,0(r2)
 800da14:	10c00115 	stw	r3,4(r2)
 800da18:	003c4306 	br	800cb28 <__alt_data_end+0xfc00cb28>
 800da1c:	00800c04 	movi	r2,48
 800da20:	d8801d05 	stb	r2,116(sp)
 800da24:	d9801d45 	stb	r6,117(sp)
 800da28:	84000094 	ori	r16,r16,2
 800da2c:	00800084 	movi	r2,2
 800da30:	003cff06 	br	800ce30 <__alt_data_end+0xfc00ce30>
 800da34:	a9800007 	ldb	r6,0(r21)
 800da38:	003c6306 	br	800cbc8 <__alt_data_end+0xfc00cbc8>
 800da3c:	ad400044 	addi	r21,r21,1
 800da40:	84000814 	ori	r16,r16,32
 800da44:	11800047 	ldb	r6,1(r2)
 800da48:	003c5f06 	br	800cbc8 <__alt_data_end+0xfc00cbc8>
 800da4c:	d9402217 	ldw	r5,136(sp)
 800da50:	8809883a 	mov	r4,r17
 800da54:	d9801a04 	addi	r6,sp,104
 800da58:	800c8d40 	call	800c8d4 <__ssprint_r>
 800da5c:	103f071e 	bne	r2,zero,800d67c <__alt_data_end+0xfc00d67c>
 800da60:	d8c01c17 	ldw	r3,112(sp)
 800da64:	d8801b17 	ldw	r2,108(sp)
 800da68:	d811883a 	mov	r8,sp
 800da6c:	003e6706 	br	800d40c <__alt_data_end+0xfc00d40c>
 800da70:	01420074 	movhi	r5,2049
 800da74:	295bb604 	addi	r5,r5,28376
 800da78:	d9402115 	stw	r5,132(sp)
 800da7c:	003e8f06 	br	800d4bc <__alt_data_end+0xfc00d4bc>
 800da80:	1c800017 	ldw	r18,0(r3)
 800da84:	d8c02417 	ldw	r3,144(sp)
 800da88:	902dd7fa 	srai	r22,r18,31
 800da8c:	18c00104 	addi	r3,r3,4
 800da90:	d8c02415 	stw	r3,144(sp)
 800da94:	b005883a 	mov	r2,r22
 800da98:	003d6406 	br	800d02c <__alt_data_end+0xfc00d02c>
 800da9c:	d9002417 	ldw	r4,144(sp)
 800daa0:	14800017 	ldw	r18,0(r2)
 800daa4:	002d883a 	mov	r22,zero
 800daa8:	21000104 	addi	r4,r4,4
 800daac:	d9002415 	stw	r4,144(sp)
 800dab0:	00800044 	movi	r2,1
 800dab4:	9007883a 	mov	r3,r18
 800dab8:	003cdd06 	br	800ce30 <__alt_data_end+0xfc00ce30>
 800dabc:	d9402417 	ldw	r5,144(sp)
 800dac0:	14800017 	ldw	r18,0(r2)
 800dac4:	002d883a 	mov	r22,zero
 800dac8:	29400104 	addi	r5,r5,4
 800dacc:	d9402415 	stw	r5,144(sp)
 800dad0:	0005883a 	mov	r2,zero
 800dad4:	9007883a 	mov	r3,r18
 800dad8:	003cd506 	br	800ce30 <__alt_data_end+0xfc00ce30>
 800dadc:	14800017 	ldw	r18,0(r2)
 800dae0:	d8802417 	ldw	r2,144(sp)
 800dae4:	002d883a 	mov	r22,zero
 800dae8:	10800104 	addi	r2,r2,4
 800daec:	d8802415 	stw	r2,144(sp)
 800daf0:	003cbe06 	br	800cdec <__alt_data_end+0xfc00cdec>
 800daf4:	8400100c 	andi	r16,r16,64
 800daf8:	80002b26 	beq	r16,zero,800dba8 <___svfiprintf_internal_r+0x110c>
 800dafc:	d9402417 	ldw	r5,144(sp)
 800db00:	d8c02617 	ldw	r3,152(sp)
 800db04:	28800017 	ldw	r2,0(r5)
 800db08:	29400104 	addi	r5,r5,4
 800db0c:	d9402415 	stw	r5,144(sp)
 800db10:	10c0000d 	sth	r3,0(r2)
 800db14:	003c0406 	br	800cb28 <__alt_data_end+0xfc00cb28>
 800db18:	d8c01e17 	ldw	r3,120(sp)
 800db1c:	d9002717 	ldw	r4,156(sp)
 800db20:	1929c83a 	sub	r20,r3,r4
 800db24:	003f3106 	br	800d7ec <__alt_data_end+0xfc00d7ec>
 800db28:	d9002717 	ldw	r4,156(sp)
 800db2c:	ddc02d15 	stw	r23,180(sp)
 800db30:	8003e4c0 	call	8003e4c <strlen>
 800db34:	1029883a 	mov	r20,r2
 800db38:	ddc01d83 	ldbu	r23,118(sp)
 800db3c:	dd802415 	stw	r22,144(sp)
 800db40:	d8002015 	stw	zero,128(sp)
 800db44:	da002d17 	ldw	r8,180(sp)
 800db48:	003f2806 	br	800d7ec <__alt_data_end+0xfc00d7ec>
 800db4c:	013fffc4 	movi	r4,-1
 800db50:	003deb06 	br	800d300 <__alt_data_end+0xfc00d300>
 800db54:	dd002017 	ldw	r20,128(sp)
 800db58:	00800184 	movi	r2,6
 800db5c:	1500012e 	bgeu	r2,r20,800db64 <___svfiprintf_internal_r+0x10c8>
 800db60:	1029883a 	mov	r20,r2
 800db64:	a025883a 	mov	r18,r20
 800db68:	a0002916 	blt	r20,zero,800dc10 <___svfiprintf_internal_r+0x1174>
 800db6c:	00c20074 	movhi	r3,2049
 800db70:	18db5204 	addi	r3,r3,27976
 800db74:	dd802415 	stw	r22,144(sp)
 800db78:	d8c02715 	stw	r3,156(sp)
 800db7c:	003d4206 	br	800d088 <__alt_data_end+0xfc00d088>
 800db80:	04001004 	movi	r16,64
 800db84:	800b883a 	mov	r5,r16
 800db88:	8002d800 	call	8002d80 <_malloc_r>
 800db8c:	d8c02217 	ldw	r3,136(sp)
 800db90:	18800015 	stw	r2,0(r3)
 800db94:	18800415 	stw	r2,16(r3)
 800db98:	10002b26 	beq	r2,zero,800dc48 <___svfiprintf_internal_r+0x11ac>
 800db9c:	d9402217 	ldw	r5,136(sp)
 800dba0:	2c000515 	stw	r16,20(r5)
 800dba4:	003bd106 	br	800caec <__alt_data_end+0xfc00caec>
 800dba8:	d9002417 	ldw	r4,144(sp)
 800dbac:	d9402617 	ldw	r5,152(sp)
 800dbb0:	20800017 	ldw	r2,0(r4)
 800dbb4:	21000104 	addi	r4,r4,4
 800dbb8:	d9002415 	stw	r4,144(sp)
 800dbbc:	11400015 	stw	r5,0(r2)
 800dbc0:	003bd906 	br	800cb28 <__alt_data_end+0xfc00cb28>
 800dbc4:	01420074 	movhi	r5,2049
 800dbc8:	295bba04 	addi	r5,r5,28392
 800dbcc:	d9402815 	stw	r5,160(sp)
 800dbd0:	003d6506 	br	800d168 <__alt_data_end+0xfc00d168>
 800dbd4:	01020074 	movhi	r4,2049
 800dbd8:	211bba04 	addi	r4,r4,28392
 800dbdc:	d9002815 	stw	r4,160(sp)
 800dbe0:	003e6e06 	br	800d59c <__alt_data_end+0xfc00d59c>
 800dbe4:	01420074 	movhi	r5,2049
 800dbe8:	295bb604 	addi	r5,r5,28376
 800dbec:	d9402115 	stw	r5,132(sp)
 800dbf0:	003edf06 	br	800d770 <__alt_data_end+0xfc00d770>
 800dbf4:	d8002015 	stw	zero,128(sp)
 800dbf8:	003bf406 	br	800cbcc <__alt_data_end+0xfc00cbcc>
 800dbfc:	dd002017 	ldw	r20,128(sp)
 800dc00:	ddc01d83 	ldbu	r23,118(sp)
 800dc04:	dd802415 	stw	r22,144(sp)
 800dc08:	d8002015 	stw	zero,128(sp)
 800dc0c:	003ef706 	br	800d7ec <__alt_data_end+0xfc00d7ec>
 800dc10:	0025883a 	mov	r18,zero
 800dc14:	003fd506 	br	800db6c <__alt_data_end+0xfc00db6c>
 800dc18:	d8c02417 	ldw	r3,144(sp)
 800dc1c:	a809883a 	mov	r4,r21
 800dc20:	102b883a 	mov	r21,r2
 800dc24:	18c00017 	ldw	r3,0(r3)
 800dc28:	d8c02015 	stw	r3,128(sp)
 800dc2c:	d8c02417 	ldw	r3,144(sp)
 800dc30:	d8802017 	ldw	r2,128(sp)
 800dc34:	19400104 	addi	r5,r3,4
 800dc38:	d9402415 	stw	r5,144(sp)
 800dc3c:	10000716 	blt	r2,zero,800dc5c <___svfiprintf_internal_r+0x11c0>
 800dc40:	21800047 	ldb	r6,1(r4)
 800dc44:	003be006 	br	800cbc8 <__alt_data_end+0xfc00cbc8>
 800dc48:	d9002917 	ldw	r4,164(sp)
 800dc4c:	00800304 	movi	r2,12
 800dc50:	20800015 	stw	r2,0(r4)
 800dc54:	00bfffc4 	movi	r2,-1
 800dc58:	003e8d06 	br	800d690 <__alt_data_end+0xfc00d690>
 800dc5c:	00ffffc4 	movi	r3,-1
 800dc60:	d8c02015 	stw	r3,128(sp)
 800dc64:	21800047 	ldb	r6,1(r4)
 800dc68:	003bd706 	br	800cbc8 <__alt_data_end+0xfc00cbc8>

0800dc6c <__sprint_r.part.0>:
 800dc6c:	28801917 	ldw	r2,100(r5)
 800dc70:	defff604 	addi	sp,sp,-40
 800dc74:	dd400515 	stw	r21,20(sp)
 800dc78:	dcc00315 	stw	r19,12(sp)
 800dc7c:	dfc00915 	stw	ra,36(sp)
 800dc80:	df000815 	stw	fp,32(sp)
 800dc84:	ddc00715 	stw	r23,28(sp)
 800dc88:	dd800615 	stw	r22,24(sp)
 800dc8c:	dd000415 	stw	r20,16(sp)
 800dc90:	dc800215 	stw	r18,8(sp)
 800dc94:	dc400115 	stw	r17,4(sp)
 800dc98:	dc000015 	stw	r16,0(sp)
 800dc9c:	1088000c 	andi	r2,r2,8192
 800dca0:	2827883a 	mov	r19,r5
 800dca4:	302b883a 	mov	r21,r6
 800dca8:	10002d26 	beq	r2,zero,800dd60 <__sprint_r.part.0+0xf4>
 800dcac:	30800217 	ldw	r2,8(r6)
 800dcb0:	35800017 	ldw	r22,0(r6)
 800dcb4:	10002826 	beq	r2,zero,800dd58 <__sprint_r.part.0+0xec>
 800dcb8:	2029883a 	mov	r20,r4
 800dcbc:	b5c00104 	addi	r23,r22,4
 800dcc0:	04bfffc4 	movi	r18,-1
 800dcc4:	bc400017 	ldw	r17,0(r23)
 800dcc8:	b4000017 	ldw	r16,0(r22)
 800dccc:	0039883a 	mov	fp,zero
 800dcd0:	8822d0ba 	srli	r17,r17,2
 800dcd4:	04400316 	blt	zero,r17,800dce4 <__sprint_r.part.0+0x78>
 800dcd8:	00001706 	br	800dd38 <__sprint_r.part.0+0xcc>
 800dcdc:	84000104 	addi	r16,r16,4
 800dce0:	8f001526 	beq	r17,fp,800dd38 <__sprint_r.part.0+0xcc>
 800dce4:	81400017 	ldw	r5,0(r16)
 800dce8:	a009883a 	mov	r4,r20
 800dcec:	980d883a 	mov	r6,r19
 800dcf0:	800f4640 	call	800f464 <_fputwc_r>
 800dcf4:	e7000044 	addi	fp,fp,1
 800dcf8:	14bff81e 	bne	r2,r18,800dcdc <__alt_data_end+0xfc00dcdc>
 800dcfc:	9005883a 	mov	r2,r18
 800dd00:	a8000215 	stw	zero,8(r21)
 800dd04:	a8000115 	stw	zero,4(r21)
 800dd08:	dfc00917 	ldw	ra,36(sp)
 800dd0c:	df000817 	ldw	fp,32(sp)
 800dd10:	ddc00717 	ldw	r23,28(sp)
 800dd14:	dd800617 	ldw	r22,24(sp)
 800dd18:	dd400517 	ldw	r21,20(sp)
 800dd1c:	dd000417 	ldw	r20,16(sp)
 800dd20:	dcc00317 	ldw	r19,12(sp)
 800dd24:	dc800217 	ldw	r18,8(sp)
 800dd28:	dc400117 	ldw	r17,4(sp)
 800dd2c:	dc000017 	ldw	r16,0(sp)
 800dd30:	dec00a04 	addi	sp,sp,40
 800dd34:	f800283a 	ret
 800dd38:	a8c00217 	ldw	r3,8(r21)
 800dd3c:	8c63883a 	add	r17,r17,r17
 800dd40:	8c63883a 	add	r17,r17,r17
 800dd44:	1c45c83a 	sub	r2,r3,r17
 800dd48:	a8800215 	stw	r2,8(r21)
 800dd4c:	b5800204 	addi	r22,r22,8
 800dd50:	bdc00204 	addi	r23,r23,8
 800dd54:	103fdb1e 	bne	r2,zero,800dcc4 <__alt_data_end+0xfc00dcc4>
 800dd58:	0005883a 	mov	r2,zero
 800dd5c:	003fe806 	br	800dd00 <__alt_data_end+0xfc00dd00>
 800dd60:	800a5140 	call	800a514 <__sfvwrite_r>
 800dd64:	003fe606 	br	800dd00 <__alt_data_end+0xfc00dd00>

0800dd68 <__sprint_r>:
 800dd68:	30c00217 	ldw	r3,8(r6)
 800dd6c:	18000126 	beq	r3,zero,800dd74 <__sprint_r+0xc>
 800dd70:	800dc6c1 	jmpi	800dc6c <__sprint_r.part.0>
 800dd74:	30000115 	stw	zero,4(r6)
 800dd78:	0005883a 	mov	r2,zero
 800dd7c:	f800283a 	ret

0800dd80 <___vfiprintf_internal_r>:
 800dd80:	defeca04 	addi	sp,sp,-1240
 800dd84:	dcc12f15 	stw	r19,1212(sp)
 800dd88:	dfc13515 	stw	ra,1236(sp)
 800dd8c:	df013415 	stw	fp,1232(sp)
 800dd90:	ddc13315 	stw	r23,1228(sp)
 800dd94:	dd813215 	stw	r22,1224(sp)
 800dd98:	dd413115 	stw	r21,1220(sp)
 800dd9c:	dd013015 	stw	r20,1216(sp)
 800dda0:	dc812e15 	stw	r18,1208(sp)
 800dda4:	dc412d15 	stw	r17,1204(sp)
 800dda8:	dc012c15 	stw	r16,1200(sp)
 800ddac:	d9012115 	stw	r4,1156(sp)
 800ddb0:	d9412015 	stw	r5,1152(sp)
 800ddb4:	d9c12315 	stw	r7,1164(sp)
 800ddb8:	3027883a 	mov	r19,r6
 800ddbc:	20000226 	beq	r4,zero,800ddc8 <___vfiprintf_internal_r+0x48>
 800ddc0:	20800e17 	ldw	r2,56(r4)
 800ddc4:	1000f726 	beq	r2,zero,800e1a4 <___vfiprintf_internal_r+0x424>
 800ddc8:	d8812017 	ldw	r2,1152(sp)
 800ddcc:	10c0030b 	ldhu	r3,12(r2)
 800ddd0:	1908000c 	andi	r4,r3,8192
 800ddd4:	1805883a 	mov	r2,r3
 800ddd8:	2000081e 	bne	r4,zero,800ddfc <___vfiprintf_internal_r+0x7c>
 800dddc:	d9412017 	ldw	r5,1152(sp)
 800dde0:	18880014 	ori	r2,r3,8192
 800dde4:	00f7ffc4 	movi	r3,-8193
 800dde8:	29001917 	ldw	r4,100(r5)
 800ddec:	2880030d 	sth	r2,12(r5)
 800ddf0:	20c8703a 	and	r4,r4,r3
 800ddf4:	29001915 	stw	r4,100(r5)
 800ddf8:	1007883a 	mov	r3,r2
 800ddfc:	1100020c 	andi	r4,r2,8
 800de00:	2000a726 	beq	r4,zero,800e0a0 <___vfiprintf_internal_r+0x320>
 800de04:	d9412017 	ldw	r5,1152(sp)
 800de08:	29000417 	ldw	r4,16(r5)
 800de0c:	2000a426 	beq	r4,zero,800e0a0 <___vfiprintf_internal_r+0x320>
 800de10:	1080068c 	andi	r2,r2,26
 800de14:	01000284 	movi	r4,10
 800de18:	1100ab26 	beq	r2,r4,800e0c8 <___vfiprintf_internal_r+0x348>
 800de1c:	d9010a04 	addi	r4,sp,1064
 800de20:	d94109c4 	addi	r5,sp,1063
 800de24:	07020074 	movhi	fp,2049
 800de28:	04420074 	movhi	r17,2049
 800de2c:	2145c83a 	sub	r2,r4,r5
 800de30:	e71bc204 	addi	fp,fp,28424
 800de34:	8c5bbe04 	addi	r17,r17,28408
 800de38:	d9011e15 	stw	r4,1144(sp)
 800de3c:	d9411f15 	stw	r5,1148(sp)
 800de40:	dec11a15 	stw	sp,1128(sp)
 800de44:	d8011c15 	stw	zero,1136(sp)
 800de48:	d8011b15 	stw	zero,1132(sp)
 800de4c:	d8012715 	stw	zero,1180(sp)
 800de50:	d8012515 	stw	zero,1172(sp)
 800de54:	d811883a 	mov	r8,sp
 800de58:	d8812815 	stw	r2,1184(sp)
 800de5c:	982f883a 	mov	r23,r19
 800de60:	b8800007 	ldb	r2,0(r23)
 800de64:	1003b026 	beq	r2,zero,800ed28 <___vfiprintf_internal_r+0xfa8>
 800de68:	01000944 	movi	r4,37
 800de6c:	1103ae26 	beq	r2,r4,800ed28 <___vfiprintf_internal_r+0xfa8>
 800de70:	b805883a 	mov	r2,r23
 800de74:	00000106 	br	800de7c <___vfiprintf_internal_r+0xfc>
 800de78:	19000326 	beq	r3,r4,800de88 <___vfiprintf_internal_r+0x108>
 800de7c:	10800044 	addi	r2,r2,1
 800de80:	10c00007 	ldb	r3,0(r2)
 800de84:	183ffc1e 	bne	r3,zero,800de78 <__alt_data_end+0xfc00de78>
 800de88:	15e1c83a 	sub	r16,r2,r23
 800de8c:	1029883a 	mov	r20,r2
 800de90:	80001026 	beq	r16,zero,800ded4 <___vfiprintf_internal_r+0x154>
 800de94:	d8c11c17 	ldw	r3,1136(sp)
 800de98:	d8811b17 	ldw	r2,1132(sp)
 800de9c:	45c00015 	stw	r23,0(r8)
 800dea0:	80c7883a 	add	r3,r16,r3
 800dea4:	10800044 	addi	r2,r2,1
 800dea8:	44000115 	stw	r16,4(r8)
 800deac:	d8c11c15 	stw	r3,1136(sp)
 800deb0:	d8811b15 	stw	r2,1132(sp)
 800deb4:	010001c4 	movi	r4,7
 800deb8:	2080740e 	bge	r4,r2,800e08c <___vfiprintf_internal_r+0x30c>
 800debc:	1803a71e 	bne	r3,zero,800ed5c <___vfiprintf_internal_r+0xfdc>
 800dec0:	d8c12517 	ldw	r3,1172(sp)
 800dec4:	d8011b15 	stw	zero,1132(sp)
 800dec8:	d811883a 	mov	r8,sp
 800decc:	1c07883a 	add	r3,r3,r16
 800ded0:	d8c12515 	stw	r3,1172(sp)
 800ded4:	a0800007 	ldb	r2,0(r20)
 800ded8:	1002bf26 	beq	r2,zero,800e9d8 <___vfiprintf_internal_r+0xc58>
 800dedc:	a5c00044 	addi	r23,r20,1
 800dee0:	a1800047 	ldb	r6,1(r20)
 800dee4:	d8011d85 	stb	zero,1142(sp)
 800dee8:	d8012205 	stb	zero,1160(sp)
 800deec:	043fffc4 	movi	r16,-1
 800def0:	d8012415 	stw	zero,1168(sp)
 800def4:	0025883a 	mov	r18,zero
 800def8:	05001604 	movi	r20,88
 800defc:	05400244 	movi	r21,9
 800df00:	4027883a 	mov	r19,r8
 800df04:	bdc00044 	addi	r23,r23,1
 800df08:	30bff804 	addi	r2,r6,-32
 800df0c:	a0825636 	bltu	r20,r2,800e868 <___vfiprintf_internal_r+0xae8>
 800df10:	100490ba 	slli	r2,r2,2
 800df14:	01020074 	movhi	r4,2049
 800df18:	2137ca04 	addi	r4,r4,-8408
 800df1c:	1105883a 	add	r2,r2,r4
 800df20:	10800017 	ldw	r2,0(r2)
 800df24:	1000683a 	jmp	r2
 800df28:	0800e7f8 	rdprs	zero,at,927
 800df2c:	0800e868 	cmpgeui	zero,at,929
 800df30:	0800e868 	cmpgeui	zero,at,929
 800df34:	0800e85c 	xori	zero,at,929
 800df38:	0800e868 	cmpgeui	zero,at,929
 800df3c:	0800e868 	cmpgeui	zero,at,929
 800df40:	0800e868 	cmpgeui	zero,at,929
 800df44:	0800e868 	cmpgeui	zero,at,929
 800df48:	0800e868 	cmpgeui	zero,at,929
 800df4c:	0800e868 	cmpgeui	zero,at,929
 800df50:	0800e5e8 	cmpgeui	zero,at,919
 800df54:	0800e810 	cmplti	zero,at,928
 800df58:	0800e868 	cmpgeui	zero,at,929
 800df5c:	0800e1bc 	xorhi	zero,at,902
 800df60:	0800e60c 	andi	zero,at,920
 800df64:	0800e868 	cmpgeui	zero,at,929
 800df68:	0800e1c8 	cmpgei	zero,at,903
 800df6c:	0800e1d4 	ori	zero,at,903
 800df70:	0800e1d4 	ori	zero,at,903
 800df74:	0800e1d4 	ori	zero,at,903
 800df78:	0800e1d4 	ori	zero,at,903
 800df7c:	0800e1d4 	ori	zero,at,903
 800df80:	0800e1d4 	ori	zero,at,903
 800df84:	0800e1d4 	ori	zero,at,903
 800df88:	0800e1d4 	ori	zero,at,903
 800df8c:	0800e1d4 	ori	zero,at,903
 800df90:	0800e868 	cmpgeui	zero,at,929
 800df94:	0800e868 	cmpgeui	zero,at,929
 800df98:	0800e868 	cmpgeui	zero,at,929
 800df9c:	0800e868 	cmpgeui	zero,at,929
 800dfa0:	0800e868 	cmpgeui	zero,at,929
 800dfa4:	0800e868 	cmpgeui	zero,at,929
 800dfa8:	0800e868 	cmpgeui	zero,at,929
 800dfac:	0800e868 	cmpgeui	zero,at,929
 800dfb0:	0800e868 	cmpgeui	zero,at,929
 800dfb4:	0800e868 	cmpgeui	zero,at,929
 800dfb8:	0800e214 	ori	zero,at,904
 800dfbc:	0800e868 	cmpgeui	zero,at,929
 800dfc0:	0800e868 	cmpgeui	zero,at,929
 800dfc4:	0800e868 	cmpgeui	zero,at,929
 800dfc8:	0800e868 	cmpgeui	zero,at,929
 800dfcc:	0800e868 	cmpgeui	zero,at,929
 800dfd0:	0800e868 	cmpgeui	zero,at,929
 800dfd4:	0800e868 	cmpgeui	zero,at,929
 800dfd8:	0800e868 	cmpgeui	zero,at,929
 800dfdc:	0800e868 	cmpgeui	zero,at,929
 800dfe0:	0800e868 	cmpgeui	zero,at,929
 800dfe4:	0800e504 	addi	zero,at,916
 800dfe8:	0800e868 	cmpgeui	zero,at,929
 800dfec:	0800e868 	cmpgeui	zero,at,929
 800dff0:	0800e868 	cmpgeui	zero,at,929
 800dff4:	0800e868 	cmpgeui	zero,at,929
 800dff8:	0800e868 	cmpgeui	zero,at,929
 800dffc:	0800e544 	addi	zero,at,917
 800e000:	0800e868 	cmpgeui	zero,at,929
 800e004:	0800e868 	cmpgeui	zero,at,929
 800e008:	0800e588 	cmpgei	zero,at,918
 800e00c:	0800e868 	cmpgeui	zero,at,929
 800e010:	0800e868 	cmpgeui	zero,at,929
 800e014:	0800e868 	cmpgeui	zero,at,929
 800e018:	0800e868 	cmpgeui	zero,at,929
 800e01c:	0800e868 	cmpgeui	zero,at,929
 800e020:	0800e868 	cmpgeui	zero,at,929
 800e024:	0800e868 	cmpgeui	zero,at,929
 800e028:	0800e868 	cmpgeui	zero,at,929
 800e02c:	0800e868 	cmpgeui	zero,at,929
 800e030:	0800e868 	cmpgeui	zero,at,929
 800e034:	0800e4d0 	cmplti	zero,at,915
 800e038:	0800e820 	cmpeqi	zero,at,928
 800e03c:	0800e868 	cmpgeui	zero,at,929
 800e040:	0800e868 	cmpgeui	zero,at,929
 800e044:	0800e868 	cmpgeui	zero,at,929
 800e048:	0800e65c 	xori	zero,at,921
 800e04c:	0800e820 	cmpeqi	zero,at,928
 800e050:	0800e868 	cmpgeui	zero,at,929
 800e054:	0800e868 	cmpgeui	zero,at,929
 800e058:	0800e574 	orhi	zero,at,917
 800e05c:	0800e868 	cmpgeui	zero,at,929
 800e060:	0800e7c0 	call	800e7c <__alt_mem_sdram_controller-0x77ff184>
 800e064:	0800e748 	cmpgei	zero,at,925
 800e068:	0800e77c 	xorhi	zero,at,925
 800e06c:	0800e668 	cmpgeui	zero,at,921
 800e070:	0800e868 	cmpgeui	zero,at,929
 800e074:	0800e674 	orhi	zero,at,921
 800e078:	0800e868 	cmpgeui	zero,at,929
 800e07c:	0800e6d0 	cmplti	zero,at,923
 800e080:	0800e868 	cmpgeui	zero,at,929
 800e084:	0800e868 	cmpgeui	zero,at,929
 800e088:	0800e704 	addi	zero,at,924
 800e08c:	42000204 	addi	r8,r8,8
 800e090:	d8c12517 	ldw	r3,1172(sp)
 800e094:	1c07883a 	add	r3,r3,r16
 800e098:	d8c12515 	stw	r3,1172(sp)
 800e09c:	003f8d06 	br	800ded4 <__alt_data_end+0xfc00ded4>
 800e0a0:	d9012117 	ldw	r4,1156(sp)
 800e0a4:	d9412017 	ldw	r5,1152(sp)
 800e0a8:	80080740 	call	8008074 <__swsetup_r>
 800e0ac:	1000301e 	bne	r2,zero,800e170 <___vfiprintf_internal_r+0x3f0>
 800e0b0:	d8812017 	ldw	r2,1152(sp)
 800e0b4:	01000284 	movi	r4,10
 800e0b8:	10c0030b 	ldhu	r3,12(r2)
 800e0bc:	1805883a 	mov	r2,r3
 800e0c0:	1080068c 	andi	r2,r2,26
 800e0c4:	113f551e 	bne	r2,r4,800de1c <__alt_data_end+0xfc00de1c>
 800e0c8:	d9012017 	ldw	r4,1152(sp)
 800e0cc:	2080038b 	ldhu	r2,14(r4)
 800e0d0:	113fffcc 	andi	r4,r2,65535
 800e0d4:	2120001c 	xori	r4,r4,32768
 800e0d8:	21200004 	addi	r4,r4,-32768
 800e0dc:	203f4f16 	blt	r4,zero,800de1c <__alt_data_end+0xfc00de1c>
 800e0e0:	d9412017 	ldw	r5,1152(sp)
 800e0e4:	d9012117 	ldw	r4,1156(sp)
 800e0e8:	d9c12317 	ldw	r7,1164(sp)
 800e0ec:	2b001917 	ldw	r12,100(r5)
 800e0f0:	2ac00717 	ldw	r11,28(r5)
 800e0f4:	2a800917 	ldw	r10,36(r5)
 800e0f8:	02010004 	movi	r8,1024
 800e0fc:	18ffff4c 	andi	r3,r3,65533
 800e100:	da0b883a 	add	r5,sp,r8
 800e104:	980d883a 	mov	r6,r19
 800e108:	d8c1030d 	sth	r3,1036(sp)
 800e10c:	db011915 	stw	r12,1124(sp)
 800e110:	d881038d 	sth	r2,1038(sp)
 800e114:	dac10715 	stw	r11,1052(sp)
 800e118:	da810915 	stw	r10,1060(sp)
 800e11c:	dec10015 	stw	sp,1024(sp)
 800e120:	dec10415 	stw	sp,1040(sp)
 800e124:	da010215 	stw	r8,1032(sp)
 800e128:	da010515 	stw	r8,1044(sp)
 800e12c:	d8010615 	stw	zero,1048(sp)
 800e130:	800dd800 	call	800dd80 <___vfiprintf_internal_r>
 800e134:	1021883a 	mov	r16,r2
 800e138:	10000416 	blt	r2,zero,800e14c <___vfiprintf_internal_r+0x3cc>
 800e13c:	d9012117 	ldw	r4,1156(sp)
 800e140:	d9410004 	addi	r5,sp,1024
 800e144:	8009af40 	call	8009af4 <_fflush_r>
 800e148:	10040f1e 	bne	r2,zero,800f188 <___vfiprintf_internal_r+0x1408>
 800e14c:	d881030b 	ldhu	r2,1036(sp)
 800e150:	1080100c 	andi	r2,r2,64
 800e154:	10000426 	beq	r2,zero,800e168 <___vfiprintf_internal_r+0x3e8>
 800e158:	d8c12017 	ldw	r3,1152(sp)
 800e15c:	1880030b 	ldhu	r2,12(r3)
 800e160:	10801014 	ori	r2,r2,64
 800e164:	1880030d 	sth	r2,12(r3)
 800e168:	8005883a 	mov	r2,r16
 800e16c:	00000106 	br	800e174 <___vfiprintf_internal_r+0x3f4>
 800e170:	00bfffc4 	movi	r2,-1
 800e174:	dfc13517 	ldw	ra,1236(sp)
 800e178:	df013417 	ldw	fp,1232(sp)
 800e17c:	ddc13317 	ldw	r23,1228(sp)
 800e180:	dd813217 	ldw	r22,1224(sp)
 800e184:	dd413117 	ldw	r21,1220(sp)
 800e188:	dd013017 	ldw	r20,1216(sp)
 800e18c:	dcc12f17 	ldw	r19,1212(sp)
 800e190:	dc812e17 	ldw	r18,1208(sp)
 800e194:	dc412d17 	ldw	r17,1204(sp)
 800e198:	dc012c17 	ldw	r16,1200(sp)
 800e19c:	dec13604 	addi	sp,sp,1240
 800e1a0:	f800283a 	ret
 800e1a4:	800a0b00 	call	800a0b0 <__sinit>
 800e1a8:	003f0706 	br	800ddc8 <__alt_data_end+0xfc00ddc8>
 800e1ac:	d8c12417 	ldw	r3,1168(sp)
 800e1b0:	d8812315 	stw	r2,1164(sp)
 800e1b4:	00c7c83a 	sub	r3,zero,r3
 800e1b8:	d8c12415 	stw	r3,1168(sp)
 800e1bc:	94800114 	ori	r18,r18,4
 800e1c0:	b9800007 	ldb	r6,0(r23)
 800e1c4:	003f4f06 	br	800df04 <__alt_data_end+0xfc00df04>
 800e1c8:	94802014 	ori	r18,r18,128
 800e1cc:	b9800007 	ldb	r6,0(r23)
 800e1d0:	003f4c06 	br	800df04 <__alt_data_end+0xfc00df04>
 800e1d4:	dc012615 	stw	r16,1176(sp)
 800e1d8:	d8012415 	stw	zero,1168(sp)
 800e1dc:	35bff404 	addi	r22,r6,-48
 800e1e0:	0009883a 	mov	r4,zero
 800e1e4:	b821883a 	mov	r16,r23
 800e1e8:	01400284 	movi	r5,10
 800e1ec:	80027f80 	call	80027f8 <__mulsi3>
 800e1f0:	81800007 	ldb	r6,0(r16)
 800e1f4:	1589883a 	add	r4,r2,r22
 800e1f8:	bdc00044 	addi	r23,r23,1
 800e1fc:	35bff404 	addi	r22,r6,-48
 800e200:	b821883a 	mov	r16,r23
 800e204:	adbff82e 	bgeu	r21,r22,800e1e8 <__alt_data_end+0xfc00e1e8>
 800e208:	d9012415 	stw	r4,1168(sp)
 800e20c:	dc012617 	ldw	r16,1176(sp)
 800e210:	003f3d06 	br	800df08 <__alt_data_end+0xfc00df08>
 800e214:	d8c12203 	ldbu	r3,1160(sp)
 800e218:	94800414 	ori	r18,r18,16
 800e21c:	9080080c 	andi	r2,r18,32
 800e220:	d8c11d85 	stb	r3,1142(sp)
 800e224:	9811883a 	mov	r8,r19
 800e228:	d8c12317 	ldw	r3,1164(sp)
 800e22c:	10018226 	beq	r2,zero,800e838 <___vfiprintf_internal_r+0xab8>
 800e230:	d9012317 	ldw	r4,1164(sp)
 800e234:	18800117 	ldw	r2,4(r3)
 800e238:	1cc00017 	ldw	r19,0(r3)
 800e23c:	21000204 	addi	r4,r4,8
 800e240:	d9012315 	stw	r4,1164(sp)
 800e244:	102b883a 	mov	r21,r2
 800e248:	10030016 	blt	r2,zero,800ee4c <___vfiprintf_internal_r+0x10cc>
 800e24c:	dd811d83 	ldbu	r22,1142(sp)
 800e250:	8029883a 	mov	r20,r16
 800e254:	00800044 	movi	r2,1
 800e258:	9d46b03a 	or	r3,r19,r21
 800e25c:	80000216 	blt	r16,zero,800e268 <___vfiprintf_internal_r+0x4e8>
 800e260:	013fdfc4 	movi	r4,-129
 800e264:	9124703a 	and	r18,r18,r4
 800e268:	1801b41e 	bne	r3,zero,800e93c <___vfiprintf_internal_r+0xbbc>
 800e26c:	80028126 	beq	r16,zero,800ec74 <___vfiprintf_internal_r+0xef4>
 800e270:	10803fcc 	andi	r2,r2,255
 800e274:	00c00044 	movi	r3,1
 800e278:	10c1d126 	beq	r2,r3,800e9c0 <___vfiprintf_internal_r+0xc40>
 800e27c:	00c00084 	movi	r3,2
 800e280:	10c28626 	beq	r2,r3,800ec9c <___vfiprintf_internal_r+0xf1c>
 800e284:	d8c10a04 	addi	r3,sp,1064
 800e288:	9808d0fa 	srli	r4,r19,3
 800e28c:	a80a977a 	slli	r5,r21,29
 800e290:	a82ad0fa 	srli	r21,r21,3
 800e294:	9cc001cc 	andi	r19,r19,7
 800e298:	98800c04 	addi	r2,r19,48
 800e29c:	18ffffc4 	addi	r3,r3,-1
 800e2a0:	2926b03a 	or	r19,r5,r4
 800e2a4:	18800005 	stb	r2,0(r3)
 800e2a8:	9d48b03a 	or	r4,r19,r21
 800e2ac:	203ff61e 	bne	r4,zero,800e288 <__alt_data_end+0xfc00e288>
 800e2b0:	9100004c 	andi	r4,r18,1
 800e2b4:	d8c12215 	stw	r3,1160(sp)
 800e2b8:	2002b31e 	bne	r4,zero,800ed88 <___vfiprintf_internal_r+0x1008>
 800e2bc:	d9411e17 	ldw	r5,1144(sp)
 800e2c0:	28e9c83a 	sub	r20,r5,r3
 800e2c4:	a02b883a 	mov	r21,r20
 800e2c8:	a400010e 	bge	r20,r16,800e2d0 <___vfiprintf_internal_r+0x550>
 800e2cc:	802b883a 	mov	r21,r16
 800e2d0:	b5803fcc 	andi	r22,r22,255
 800e2d4:	b580201c 	xori	r22,r22,128
 800e2d8:	b5bfe004 	addi	r22,r22,-128
 800e2dc:	b0000126 	beq	r22,zero,800e2e4 <___vfiprintf_internal_r+0x564>
 800e2e0:	ad400044 	addi	r21,r21,1
 800e2e4:	9280008c 	andi	r10,r18,2
 800e2e8:	50000126 	beq	r10,zero,800e2f0 <___vfiprintf_internal_r+0x570>
 800e2ec:	ad400084 	addi	r21,r21,2
 800e2f0:	9580210c 	andi	r22,r18,132
 800e2f4:	b001751e 	bne	r22,zero,800e8cc <___vfiprintf_internal_r+0xb4c>
 800e2f8:	d9012417 	ldw	r4,1168(sp)
 800e2fc:	2567c83a 	sub	r19,r4,r21
 800e300:	04c1720e 	bge	zero,r19,800e8cc <___vfiprintf_internal_r+0xb4c>
 800e304:	01c00404 	movi	r7,16
 800e308:	d8c11c17 	ldw	r3,1136(sp)
 800e30c:	3cc36b0e 	bge	r7,r19,800f0bc <___vfiprintf_internal_r+0x133c>
 800e310:	00820074 	movhi	r2,2049
 800e314:	109bc204 	addi	r2,r2,28424
 800e318:	dc012915 	stw	r16,1188(sp)
 800e31c:	d9011b17 	ldw	r4,1132(sp)
 800e320:	9821883a 	mov	r16,r19
 800e324:	d8812615 	stw	r2,1176(sp)
 800e328:	030001c4 	movi	r12,7
 800e32c:	5027883a 	mov	r19,r10
 800e330:	00000506 	br	800e348 <___vfiprintf_internal_r+0x5c8>
 800e334:	21400084 	addi	r5,r4,2
 800e338:	42000204 	addi	r8,r8,8
 800e33c:	1009883a 	mov	r4,r2
 800e340:	843ffc04 	addi	r16,r16,-16
 800e344:	3c000d0e 	bge	r7,r16,800e37c <___vfiprintf_internal_r+0x5fc>
 800e348:	18c00404 	addi	r3,r3,16
 800e34c:	20800044 	addi	r2,r4,1
 800e350:	47000015 	stw	fp,0(r8)
 800e354:	41c00115 	stw	r7,4(r8)
 800e358:	d8c11c15 	stw	r3,1136(sp)
 800e35c:	d8811b15 	stw	r2,1132(sp)
 800e360:	60bff40e 	bge	r12,r2,800e334 <__alt_data_end+0xfc00e334>
 800e364:	18014b1e 	bne	r3,zero,800e894 <___vfiprintf_internal_r+0xb14>
 800e368:	843ffc04 	addi	r16,r16,-16
 800e36c:	0009883a 	mov	r4,zero
 800e370:	01400044 	movi	r5,1
 800e374:	d811883a 	mov	r8,sp
 800e378:	3c3ff316 	blt	r7,r16,800e348 <__alt_data_end+0xfc00e348>
 800e37c:	9815883a 	mov	r10,r19
 800e380:	8027883a 	mov	r19,r16
 800e384:	dc012917 	ldw	r16,1188(sp)
 800e388:	d9012617 	ldw	r4,1176(sp)
 800e38c:	98c7883a 	add	r3,r19,r3
 800e390:	44c00115 	stw	r19,4(r8)
 800e394:	41000015 	stw	r4,0(r8)
 800e398:	d8c11c15 	stw	r3,1136(sp)
 800e39c:	d9411b15 	stw	r5,1132(sp)
 800e3a0:	008001c4 	movi	r2,7
 800e3a4:	11425116 	blt	r2,r5,800ecec <___vfiprintf_internal_r+0xf6c>
 800e3a8:	d9011d87 	ldb	r4,1142(sp)
 800e3ac:	42000204 	addi	r8,r8,8
 800e3b0:	28800044 	addi	r2,r5,1
 800e3b4:	20014a1e 	bne	r4,zero,800e8e0 <___vfiprintf_internal_r+0xb60>
 800e3b8:	50000c26 	beq	r10,zero,800e3ec <___vfiprintf_internal_r+0x66c>
 800e3bc:	d9011d04 	addi	r4,sp,1140
 800e3c0:	18c00084 	addi	r3,r3,2
 800e3c4:	41000015 	stw	r4,0(r8)
 800e3c8:	01000084 	movi	r4,2
 800e3cc:	41000115 	stw	r4,4(r8)
 800e3d0:	d8c11c15 	stw	r3,1136(sp)
 800e3d4:	d8811b15 	stw	r2,1132(sp)
 800e3d8:	010001c4 	movi	r4,7
 800e3dc:	20822016 	blt	r4,r2,800ec60 <___vfiprintf_internal_r+0xee0>
 800e3e0:	100b883a 	mov	r5,r2
 800e3e4:	42000204 	addi	r8,r8,8
 800e3e8:	10800044 	addi	r2,r2,1
 800e3ec:	01002004 	movi	r4,128
 800e3f0:	b101de26 	beq	r22,r4,800eb6c <___vfiprintf_internal_r+0xdec>
 800e3f4:	8521c83a 	sub	r16,r16,r20
 800e3f8:	0400230e 	bge	zero,r16,800e488 <___vfiprintf_internal_r+0x708>
 800e3fc:	04c00404 	movi	r19,16
 800e400:	9c030d0e 	bge	r19,r16,800f038 <___vfiprintf_internal_r+0x12b8>
 800e404:	00820074 	movhi	r2,2049
 800e408:	109bbe04 	addi	r2,r2,28408
 800e40c:	d8812615 	stw	r2,1176(sp)
 800e410:	058001c4 	movi	r22,7
 800e414:	00000506 	br	800e42c <___vfiprintf_internal_r+0x6ac>
 800e418:	28800084 	addi	r2,r5,2
 800e41c:	42000204 	addi	r8,r8,8
 800e420:	200b883a 	mov	r5,r4
 800e424:	843ffc04 	addi	r16,r16,-16
 800e428:	9c000d0e 	bge	r19,r16,800e460 <___vfiprintf_internal_r+0x6e0>
 800e42c:	18c00404 	addi	r3,r3,16
 800e430:	29000044 	addi	r4,r5,1
 800e434:	44400015 	stw	r17,0(r8)
 800e438:	44c00115 	stw	r19,4(r8)
 800e43c:	d8c11c15 	stw	r3,1136(sp)
 800e440:	d9011b15 	stw	r4,1132(sp)
 800e444:	b13ff40e 	bge	r22,r4,800e418 <__alt_data_end+0xfc00e418>
 800e448:	1801321e 	bne	r3,zero,800e914 <___vfiprintf_internal_r+0xb94>
 800e44c:	843ffc04 	addi	r16,r16,-16
 800e450:	000b883a 	mov	r5,zero
 800e454:	00800044 	movi	r2,1
 800e458:	d811883a 	mov	r8,sp
 800e45c:	9c3ff316 	blt	r19,r16,800e42c <__alt_data_end+0xfc00e42c>
 800e460:	d9012617 	ldw	r4,1176(sp)
 800e464:	1c07883a 	add	r3,r3,r16
 800e468:	44000115 	stw	r16,4(r8)
 800e46c:	41000015 	stw	r4,0(r8)
 800e470:	d8c11c15 	stw	r3,1136(sp)
 800e474:	d8811b15 	stw	r2,1132(sp)
 800e478:	010001c4 	movi	r4,7
 800e47c:	20816216 	blt	r4,r2,800ea08 <___vfiprintf_internal_r+0xc88>
 800e480:	42000204 	addi	r8,r8,8
 800e484:	10800044 	addi	r2,r2,1
 800e488:	d9012217 	ldw	r4,1160(sp)
 800e48c:	1d07883a 	add	r3,r3,r20
 800e490:	45000115 	stw	r20,4(r8)
 800e494:	41000015 	stw	r4,0(r8)
 800e498:	d8c11c15 	stw	r3,1136(sp)
 800e49c:	d8811b15 	stw	r2,1132(sp)
 800e4a0:	010001c4 	movi	r4,7
 800e4a4:	2081610e 	bge	r4,r2,800ea2c <___vfiprintf_internal_r+0xcac>
 800e4a8:	1802211e 	bne	r3,zero,800ed30 <___vfiprintf_internal_r+0xfb0>
 800e4ac:	d8011b15 	stw	zero,1132(sp)
 800e4b0:	9480010c 	andi	r18,r18,4
 800e4b4:	9002171e 	bne	r18,zero,800ed14 <___vfiprintf_internal_r+0xf94>
 800e4b8:	d9412417 	ldw	r5,1168(sp)
 800e4bc:	a9433716 	blt	r21,r5,800f19c <___vfiprintf_internal_r+0x141c>
 800e4c0:	d8812517 	ldw	r2,1172(sp)
 800e4c4:	1545883a 	add	r2,r2,r21
 800e4c8:	d8812515 	stw	r2,1172(sp)
 800e4cc:	00019a06 	br	800eb38 <___vfiprintf_internal_r+0xdb8>
 800e4d0:	d8c12317 	ldw	r3,1164(sp)
 800e4d4:	05400044 	movi	r21,1
 800e4d8:	9811883a 	mov	r8,r19
 800e4dc:	18800017 	ldw	r2,0(r3)
 800e4e0:	18c00104 	addi	r3,r3,4
 800e4e4:	d8c12315 	stw	r3,1164(sp)
 800e4e8:	d8c10004 	addi	r3,sp,1024
 800e4ec:	d8011d85 	stb	zero,1142(sp)
 800e4f0:	d8810005 	stb	r2,1024(sp)
 800e4f4:	a829883a 	mov	r20,r21
 800e4f8:	d8c12215 	stw	r3,1160(sp)
 800e4fc:	0021883a 	mov	r16,zero
 800e500:	003f7806 	br	800e2e4 <__alt_data_end+0xfc00e2e4>
 800e504:	94800414 	ori	r18,r18,16
 800e508:	9080080c 	andi	r2,r18,32
 800e50c:	9811883a 	mov	r8,r19
 800e510:	10009026 	beq	r2,zero,800e754 <___vfiprintf_internal_r+0x9d4>
 800e514:	d8812317 	ldw	r2,1164(sp)
 800e518:	d8c12317 	ldw	r3,1164(sp)
 800e51c:	14c00017 	ldw	r19,0(r2)
 800e520:	15400117 	ldw	r21,4(r2)
 800e524:	18c00204 	addi	r3,r3,8
 800e528:	d8c12315 	stw	r3,1164(sp)
 800e52c:	0005883a 	mov	r2,zero
 800e530:	9d46b03a 	or	r3,r19,r21
 800e534:	d8011d85 	stb	zero,1142(sp)
 800e538:	8029883a 	mov	r20,r16
 800e53c:	002d883a 	mov	r22,zero
 800e540:	003f4606 	br	800e25c <__alt_data_end+0xfc00e25c>
 800e544:	94800414 	ori	r18,r18,16
 800e548:	9080080c 	andi	r2,r18,32
 800e54c:	9811883a 	mov	r8,r19
 800e550:	10006226 	beq	r2,zero,800e6dc <___vfiprintf_internal_r+0x95c>
 800e554:	d9012317 	ldw	r4,1164(sp)
 800e558:	00800044 	movi	r2,1
 800e55c:	24c00017 	ldw	r19,0(r4)
 800e560:	25400117 	ldw	r21,4(r4)
 800e564:	21000204 	addi	r4,r4,8
 800e568:	d9012315 	stw	r4,1164(sp)
 800e56c:	9d46b03a 	or	r3,r19,r21
 800e570:	003ff006 	br	800e534 <__alt_data_end+0xfc00e534>
 800e574:	b9800007 	ldb	r6,0(r23)
 800e578:	00801b04 	movi	r2,108
 800e57c:	3082b226 	beq	r6,r2,800f048 <___vfiprintf_internal_r+0x12c8>
 800e580:	94800414 	ori	r18,r18,16
 800e584:	003e5f06 	br	800df04 <__alt_data_end+0xfc00df04>
 800e588:	d8c12203 	ldbu	r3,1160(sp)
 800e58c:	01020074 	movhi	r4,2049
 800e590:	211b4804 	addi	r4,r4,27936
 800e594:	d8c11d85 	stb	r3,1142(sp)
 800e598:	d9012715 	stw	r4,1180(sp)
 800e59c:	90c0080c 	andi	r3,r18,32
 800e5a0:	9811883a 	mov	r8,r19
 800e5a4:	d8812317 	ldw	r2,1164(sp)
 800e5a8:	18005f26 	beq	r3,zero,800e728 <___vfiprintf_internal_r+0x9a8>
 800e5ac:	d9012317 	ldw	r4,1164(sp)
 800e5b0:	14c00017 	ldw	r19,0(r2)
 800e5b4:	15400117 	ldw	r21,4(r2)
 800e5b8:	21000204 	addi	r4,r4,8
 800e5bc:	d9012315 	stw	r4,1164(sp)
 800e5c0:	9080004c 	andi	r2,r18,1
 800e5c4:	1001e226 	beq	r2,zero,800ed50 <___vfiprintf_internal_r+0xfd0>
 800e5c8:	9d46b03a 	or	r3,r19,r21
 800e5cc:	18024e26 	beq	r3,zero,800ef08 <___vfiprintf_internal_r+0x1188>
 800e5d0:	00800c04 	movi	r2,48
 800e5d4:	d8811d05 	stb	r2,1140(sp)
 800e5d8:	d9811d45 	stb	r6,1141(sp)
 800e5dc:	94800094 	ori	r18,r18,2
 800e5e0:	00800084 	movi	r2,2
 800e5e4:	003fd306 	br	800e534 <__alt_data_end+0xfc00e534>
 800e5e8:	d9012317 	ldw	r4,1164(sp)
 800e5ec:	d9412317 	ldw	r5,1164(sp)
 800e5f0:	21000017 	ldw	r4,0(r4)
 800e5f4:	28800104 	addi	r2,r5,4
 800e5f8:	d9012415 	stw	r4,1168(sp)
 800e5fc:	203eeb16 	blt	r4,zero,800e1ac <__alt_data_end+0xfc00e1ac>
 800e600:	d8812315 	stw	r2,1164(sp)
 800e604:	b9800007 	ldb	r6,0(r23)
 800e608:	003e3e06 	br	800df04 <__alt_data_end+0xfc00df04>
 800e60c:	b9800007 	ldb	r6,0(r23)
 800e610:	01000a84 	movi	r4,42
 800e614:	b8800044 	addi	r2,r23,1
 800e618:	3102d226 	beq	r6,r4,800f164 <___vfiprintf_internal_r+0x13e4>
 800e61c:	35bff404 	addi	r22,r6,-48
 800e620:	102f883a 	mov	r23,r2
 800e624:	0021883a 	mov	r16,zero
 800e628:	adbe3736 	bltu	r21,r22,800df08 <__alt_data_end+0xfc00df08>
 800e62c:	0009883a 	mov	r4,zero
 800e630:	01400284 	movi	r5,10
 800e634:	80027f80 	call	80027f8 <__mulsi3>
 800e638:	b9800007 	ldb	r6,0(r23)
 800e63c:	b089883a 	add	r4,r22,r2
 800e640:	bdc00044 	addi	r23,r23,1
 800e644:	35bff404 	addi	r22,r6,-48
 800e648:	adbff92e 	bgeu	r21,r22,800e630 <__alt_data_end+0xfc00e630>
 800e64c:	2021883a 	mov	r16,r4
 800e650:	203e2d0e 	bge	r4,zero,800df08 <__alt_data_end+0xfc00df08>
 800e654:	043fffc4 	movi	r16,-1
 800e658:	003e2b06 	br	800df08 <__alt_data_end+0xfc00df08>
 800e65c:	94801014 	ori	r18,r18,64
 800e660:	b9800007 	ldb	r6,0(r23)
 800e664:	003e2706 	br	800df04 <__alt_data_end+0xfc00df04>
 800e668:	94800814 	ori	r18,r18,32
 800e66c:	b9800007 	ldb	r6,0(r23)
 800e670:	003e2406 	br	800df04 <__alt_data_end+0xfc00df04>
 800e674:	d9412317 	ldw	r5,1164(sp)
 800e678:	d8812317 	ldw	r2,1164(sp)
 800e67c:	d8011d85 	stb	zero,1142(sp)
 800e680:	29400017 	ldw	r5,0(r5)
 800e684:	9811883a 	mov	r8,r19
 800e688:	14c00104 	addi	r19,r2,4
 800e68c:	d9412215 	stw	r5,1160(sp)
 800e690:	28029026 	beq	r5,zero,800f0d4 <___vfiprintf_internal_r+0x1354>
 800e694:	d9012217 	ldw	r4,1160(sp)
 800e698:	80027616 	blt	r16,zero,800f074 <___vfiprintf_internal_r+0x12f4>
 800e69c:	000b883a 	mov	r5,zero
 800e6a0:	800d883a 	mov	r6,r16
 800e6a4:	da012a15 	stw	r8,1192(sp)
 800e6a8:	800adc00 	call	800adc0 <memchr>
 800e6ac:	da012a17 	ldw	r8,1192(sp)
 800e6b0:	1002a026 	beq	r2,zero,800f134 <___vfiprintf_internal_r+0x13b4>
 800e6b4:	d8c12217 	ldw	r3,1160(sp)
 800e6b8:	10e9c83a 	sub	r20,r2,r3
 800e6bc:	85023816 	blt	r16,r20,800efa0 <___vfiprintf_internal_r+0x1220>
 800e6c0:	dd811d83 	ldbu	r22,1142(sp)
 800e6c4:	dcc12315 	stw	r19,1164(sp)
 800e6c8:	0021883a 	mov	r16,zero
 800e6cc:	003efd06 	br	800e2c4 <__alt_data_end+0xfc00e2c4>
 800e6d0:	9080080c 	andi	r2,r18,32
 800e6d4:	9811883a 	mov	r8,r19
 800e6d8:	103f9e1e 	bne	r2,zero,800e554 <__alt_data_end+0xfc00e554>
 800e6dc:	9080040c 	andi	r2,r18,16
 800e6e0:	10021726 	beq	r2,zero,800ef40 <___vfiprintf_internal_r+0x11c0>
 800e6e4:	d9412317 	ldw	r5,1164(sp)
 800e6e8:	002b883a 	mov	r21,zero
 800e6ec:	00800044 	movi	r2,1
 800e6f0:	2cc00017 	ldw	r19,0(r5)
 800e6f4:	29400104 	addi	r5,r5,4
 800e6f8:	d9412315 	stw	r5,1164(sp)
 800e6fc:	9807883a 	mov	r3,r19
 800e700:	003f8c06 	br	800e534 <__alt_data_end+0xfc00e534>
 800e704:	d8c12203 	ldbu	r3,1160(sp)
 800e708:	01020074 	movhi	r4,2049
 800e70c:	211b4d04 	addi	r4,r4,27956
 800e710:	d8c11d85 	stb	r3,1142(sp)
 800e714:	d9012715 	stw	r4,1180(sp)
 800e718:	90c0080c 	andi	r3,r18,32
 800e71c:	9811883a 	mov	r8,r19
 800e720:	d8812317 	ldw	r2,1164(sp)
 800e724:	183fa11e 	bne	r3,zero,800e5ac <__alt_data_end+0xfc00e5ac>
 800e728:	90c0040c 	andi	r3,r18,16
 800e72c:	1801e526 	beq	r3,zero,800eec4 <___vfiprintf_internal_r+0x1144>
 800e730:	d9412317 	ldw	r5,1164(sp)
 800e734:	14c00017 	ldw	r19,0(r2)
 800e738:	002b883a 	mov	r21,zero
 800e73c:	29400104 	addi	r5,r5,4
 800e740:	d9412315 	stw	r5,1164(sp)
 800e744:	003f9e06 	br	800e5c0 <__alt_data_end+0xfc00e5c0>
 800e748:	9080080c 	andi	r2,r18,32
 800e74c:	9811883a 	mov	r8,r19
 800e750:	103f701e 	bne	r2,zero,800e514 <__alt_data_end+0xfc00e514>
 800e754:	9080040c 	andi	r2,r18,16
 800e758:	1001ef26 	beq	r2,zero,800ef18 <___vfiprintf_internal_r+0x1198>
 800e75c:	d9012317 	ldw	r4,1164(sp)
 800e760:	002b883a 	mov	r21,zero
 800e764:	0005883a 	mov	r2,zero
 800e768:	24c00017 	ldw	r19,0(r4)
 800e76c:	21000104 	addi	r4,r4,4
 800e770:	d9012315 	stw	r4,1164(sp)
 800e774:	9807883a 	mov	r3,r19
 800e778:	003f6e06 	br	800e534 <__alt_data_end+0xfc00e534>
 800e77c:	d8c12317 	ldw	r3,1164(sp)
 800e780:	9811883a 	mov	r8,r19
 800e784:	00800c04 	movi	r2,48
 800e788:	1cc00017 	ldw	r19,0(r3)
 800e78c:	01020074 	movhi	r4,2049
 800e790:	18c00104 	addi	r3,r3,4
 800e794:	d8811d05 	stb	r2,1140(sp)
 800e798:	211b4d04 	addi	r4,r4,27956
 800e79c:	00801e04 	movi	r2,120
 800e7a0:	d8811d45 	stb	r2,1141(sp)
 800e7a4:	d8c12315 	stw	r3,1164(sp)
 800e7a8:	002b883a 	mov	r21,zero
 800e7ac:	94800094 	ori	r18,r18,2
 800e7b0:	d9012715 	stw	r4,1180(sp)
 800e7b4:	00800084 	movi	r2,2
 800e7b8:	9807883a 	mov	r3,r19
 800e7bc:	003f5d06 	br	800e534 <__alt_data_end+0xfc00e534>
 800e7c0:	d8c12203 	ldbu	r3,1160(sp)
 800e7c4:	9080080c 	andi	r2,r18,32
 800e7c8:	9811883a 	mov	r8,r19
 800e7cc:	d8c11d85 	stb	r3,1142(sp)
 800e7d0:	1001b126 	beq	r2,zero,800ee98 <___vfiprintf_internal_r+0x1118>
 800e7d4:	d9012317 	ldw	r4,1164(sp)
 800e7d8:	d9412517 	ldw	r5,1172(sp)
 800e7dc:	20800017 	ldw	r2,0(r4)
 800e7e0:	2807d7fa 	srai	r3,r5,31
 800e7e4:	21000104 	addi	r4,r4,4
 800e7e8:	d9012315 	stw	r4,1164(sp)
 800e7ec:	11400015 	stw	r5,0(r2)
 800e7f0:	10c00115 	stw	r3,4(r2)
 800e7f4:	003d9a06 	br	800de60 <__alt_data_end+0xfc00de60>
 800e7f8:	d8812207 	ldb	r2,1160(sp)
 800e7fc:	1001c41e 	bne	r2,zero,800ef10 <___vfiprintf_internal_r+0x1190>
 800e800:	00c00804 	movi	r3,32
 800e804:	d8c12205 	stb	r3,1160(sp)
 800e808:	b9800007 	ldb	r6,0(r23)
 800e80c:	003dbd06 	br	800df04 <__alt_data_end+0xfc00df04>
 800e810:	00c00ac4 	movi	r3,43
 800e814:	d8c12205 	stb	r3,1160(sp)
 800e818:	b9800007 	ldb	r6,0(r23)
 800e81c:	003db906 	br	800df04 <__alt_data_end+0xfc00df04>
 800e820:	d8c12203 	ldbu	r3,1160(sp)
 800e824:	9080080c 	andi	r2,r18,32
 800e828:	9811883a 	mov	r8,r19
 800e82c:	d8c11d85 	stb	r3,1142(sp)
 800e830:	d8c12317 	ldw	r3,1164(sp)
 800e834:	103e7e1e 	bne	r2,zero,800e230 <__alt_data_end+0xfc00e230>
 800e838:	9080040c 	andi	r2,r18,16
 800e83c:	1001a926 	beq	r2,zero,800eee4 <___vfiprintf_internal_r+0x1164>
 800e840:	1cc00017 	ldw	r19,0(r3)
 800e844:	d9412317 	ldw	r5,1164(sp)
 800e848:	982bd7fa 	srai	r21,r19,31
 800e84c:	29400104 	addi	r5,r5,4
 800e850:	d9412315 	stw	r5,1164(sp)
 800e854:	a805883a 	mov	r2,r21
 800e858:	003e7b06 	br	800e248 <__alt_data_end+0xfc00e248>
 800e85c:	94800054 	ori	r18,r18,1
 800e860:	b9800007 	ldb	r6,0(r23)
 800e864:	003da706 	br	800df04 <__alt_data_end+0xfc00df04>
 800e868:	d8c12203 	ldbu	r3,1160(sp)
 800e86c:	9811883a 	mov	r8,r19
 800e870:	d8c11d85 	stb	r3,1142(sp)
 800e874:	30005826 	beq	r6,zero,800e9d8 <___vfiprintf_internal_r+0xc58>
 800e878:	05400044 	movi	r21,1
 800e87c:	d8c10004 	addi	r3,sp,1024
 800e880:	d9810005 	stb	r6,1024(sp)
 800e884:	d8011d85 	stb	zero,1142(sp)
 800e888:	a829883a 	mov	r20,r21
 800e88c:	d8c12215 	stw	r3,1160(sp)
 800e890:	003f1a06 	br	800e4fc <__alt_data_end+0xfc00e4fc>
 800e894:	d9012117 	ldw	r4,1156(sp)
 800e898:	d9412017 	ldw	r5,1152(sp)
 800e89c:	d9811a04 	addi	r6,sp,1128
 800e8a0:	d9c12a15 	stw	r7,1192(sp)
 800e8a4:	db012b15 	stw	r12,1196(sp)
 800e8a8:	800dc6c0 	call	800dc6c <__sprint_r.part.0>
 800e8ac:	d9c12a17 	ldw	r7,1192(sp)
 800e8b0:	db012b17 	ldw	r12,1196(sp)
 800e8b4:	10004e1e 	bne	r2,zero,800e9f0 <___vfiprintf_internal_r+0xc70>
 800e8b8:	d9011b17 	ldw	r4,1132(sp)
 800e8bc:	d8c11c17 	ldw	r3,1136(sp)
 800e8c0:	d811883a 	mov	r8,sp
 800e8c4:	21400044 	addi	r5,r4,1
 800e8c8:	003e9d06 	br	800e340 <__alt_data_end+0xfc00e340>
 800e8cc:	d9411b17 	ldw	r5,1132(sp)
 800e8d0:	d8c11c17 	ldw	r3,1136(sp)
 800e8d4:	28800044 	addi	r2,r5,1
 800e8d8:	d9011d87 	ldb	r4,1142(sp)
 800e8dc:	203eb626 	beq	r4,zero,800e3b8 <__alt_data_end+0xfc00e3b8>
 800e8e0:	01000044 	movi	r4,1
 800e8e4:	d9411d84 	addi	r5,sp,1142
 800e8e8:	1907883a 	add	r3,r3,r4
 800e8ec:	41400015 	stw	r5,0(r8)
 800e8f0:	41000115 	stw	r4,4(r8)
 800e8f4:	d8c11c15 	stw	r3,1136(sp)
 800e8f8:	d8811b15 	stw	r2,1132(sp)
 800e8fc:	014001c4 	movi	r5,7
 800e900:	2880ce16 	blt	r5,r2,800ec3c <___vfiprintf_internal_r+0xebc>
 800e904:	100b883a 	mov	r5,r2
 800e908:	42000204 	addi	r8,r8,8
 800e90c:	10800044 	addi	r2,r2,1
 800e910:	003ea906 	br	800e3b8 <__alt_data_end+0xfc00e3b8>
 800e914:	d9012117 	ldw	r4,1156(sp)
 800e918:	d9412017 	ldw	r5,1152(sp)
 800e91c:	d9811a04 	addi	r6,sp,1128
 800e920:	800dc6c0 	call	800dc6c <__sprint_r.part.0>
 800e924:	1000321e 	bne	r2,zero,800e9f0 <___vfiprintf_internal_r+0xc70>
 800e928:	d9411b17 	ldw	r5,1132(sp)
 800e92c:	d8c11c17 	ldw	r3,1136(sp)
 800e930:	d811883a 	mov	r8,sp
 800e934:	28800044 	addi	r2,r5,1
 800e938:	003eba06 	br	800e424 <__alt_data_end+0xfc00e424>
 800e93c:	10803fcc 	andi	r2,r2,255
 800e940:	00c00044 	movi	r3,1
 800e944:	10fe4d1e 	bne	r2,r3,800e27c <__alt_data_end+0xfc00e27c>
 800e948:	a800021e 	bne	r21,zero,800e954 <___vfiprintf_internal_r+0xbd4>
 800e94c:	00800244 	movi	r2,9
 800e950:	14c01b2e 	bgeu	r2,r19,800e9c0 <___vfiprintf_internal_r+0xc40>
 800e954:	dc012215 	stw	r16,1160(sp)
 800e958:	dd010a04 	addi	r20,sp,1064
 800e95c:	a821883a 	mov	r16,r21
 800e960:	402b883a 	mov	r21,r8
 800e964:	9809883a 	mov	r4,r19
 800e968:	800b883a 	mov	r5,r16
 800e96c:	01800284 	movi	r6,10
 800e970:	000f883a 	mov	r7,zero
 800e974:	80101540 	call	8010154 <__umoddi3>
 800e978:	10800c04 	addi	r2,r2,48
 800e97c:	a53fffc4 	addi	r20,r20,-1
 800e980:	9809883a 	mov	r4,r19
 800e984:	800b883a 	mov	r5,r16
 800e988:	01800284 	movi	r6,10
 800e98c:	000f883a 	mov	r7,zero
 800e990:	a0800005 	stb	r2,0(r20)
 800e994:	800fb140 	call	800fb14 <__udivdi3>
 800e998:	1027883a 	mov	r19,r2
 800e99c:	10c4b03a 	or	r2,r2,r3
 800e9a0:	1821883a 	mov	r16,r3
 800e9a4:	103fef1e 	bne	r2,zero,800e964 <__alt_data_end+0xfc00e964>
 800e9a8:	d9011e17 	ldw	r4,1144(sp)
 800e9ac:	dc012217 	ldw	r16,1160(sp)
 800e9b0:	a811883a 	mov	r8,r21
 800e9b4:	dd012215 	stw	r20,1160(sp)
 800e9b8:	2529c83a 	sub	r20,r4,r20
 800e9bc:	003e4106 	br	800e2c4 <__alt_data_end+0xfc00e2c4>
 800e9c0:	9cc00c04 	addi	r19,r19,48
 800e9c4:	d8c109c4 	addi	r3,sp,1063
 800e9c8:	dcc109c5 	stb	r19,1063(sp)
 800e9cc:	dd012817 	ldw	r20,1184(sp)
 800e9d0:	d8c12215 	stw	r3,1160(sp)
 800e9d4:	003e3b06 	br	800e2c4 <__alt_data_end+0xfc00e2c4>
 800e9d8:	d8811c17 	ldw	r2,1136(sp)
 800e9dc:	10000426 	beq	r2,zero,800e9f0 <___vfiprintf_internal_r+0xc70>
 800e9e0:	d9012117 	ldw	r4,1156(sp)
 800e9e4:	d9412017 	ldw	r5,1152(sp)
 800e9e8:	d9811a04 	addi	r6,sp,1128
 800e9ec:	800dc6c0 	call	800dc6c <__sprint_r.part.0>
 800e9f0:	d9412017 	ldw	r5,1152(sp)
 800e9f4:	2880030b 	ldhu	r2,12(r5)
 800e9f8:	1080100c 	andi	r2,r2,64
 800e9fc:	103ddc1e 	bne	r2,zero,800e170 <__alt_data_end+0xfc00e170>
 800ea00:	d8812517 	ldw	r2,1172(sp)
 800ea04:	003ddb06 	br	800e174 <__alt_data_end+0xfc00e174>
 800ea08:	1801061e 	bne	r3,zero,800ee24 <___vfiprintf_internal_r+0x10a4>
 800ea0c:	d8c12217 	ldw	r3,1160(sp)
 800ea10:	00800044 	movi	r2,1
 800ea14:	dd000115 	stw	r20,4(sp)
 800ea18:	d8c00015 	stw	r3,0(sp)
 800ea1c:	dd011c15 	stw	r20,1136(sp)
 800ea20:	d8811b15 	stw	r2,1132(sp)
 800ea24:	a007883a 	mov	r3,r20
 800ea28:	d811883a 	mov	r8,sp
 800ea2c:	42000204 	addi	r8,r8,8
 800ea30:	9480010c 	andi	r18,r18,4
 800ea34:	90003426 	beq	r18,zero,800eb08 <___vfiprintf_internal_r+0xd88>
 800ea38:	d9412417 	ldw	r5,1168(sp)
 800ea3c:	2d65c83a 	sub	r18,r5,r21
 800ea40:	0480310e 	bge	zero,r18,800eb08 <___vfiprintf_internal_r+0xd88>
 800ea44:	04000404 	movi	r16,16
 800ea48:	8481ad0e 	bge	r16,r18,800f100 <___vfiprintf_internal_r+0x1380>
 800ea4c:	01420074 	movhi	r5,2049
 800ea50:	295bc204 	addi	r5,r5,28424
 800ea54:	d9011b17 	ldw	r4,1132(sp)
 800ea58:	d9412615 	stw	r5,1176(sp)
 800ea5c:	04c001c4 	movi	r19,7
 800ea60:	dd012117 	ldw	r20,1156(sp)
 800ea64:	dd812017 	ldw	r22,1152(sp)
 800ea68:	00000506 	br	800ea80 <___vfiprintf_internal_r+0xd00>
 800ea6c:	21400084 	addi	r5,r4,2
 800ea70:	42000204 	addi	r8,r8,8
 800ea74:	1009883a 	mov	r4,r2
 800ea78:	94bffc04 	addi	r18,r18,-16
 800ea7c:	84800d0e 	bge	r16,r18,800eab4 <___vfiprintf_internal_r+0xd34>
 800ea80:	18c00404 	addi	r3,r3,16
 800ea84:	20800044 	addi	r2,r4,1
 800ea88:	47000015 	stw	fp,0(r8)
 800ea8c:	44000115 	stw	r16,4(r8)
 800ea90:	d8c11c15 	stw	r3,1136(sp)
 800ea94:	d8811b15 	stw	r2,1132(sp)
 800ea98:	98bff40e 	bge	r19,r2,800ea6c <__alt_data_end+0xfc00ea6c>
 800ea9c:	1800291e 	bne	r3,zero,800eb44 <___vfiprintf_internal_r+0xdc4>
 800eaa0:	94bffc04 	addi	r18,r18,-16
 800eaa4:	0009883a 	mov	r4,zero
 800eaa8:	01400044 	movi	r5,1
 800eaac:	d811883a 	mov	r8,sp
 800eab0:	84bff316 	blt	r16,r18,800ea80 <__alt_data_end+0xfc00ea80>
 800eab4:	d8812617 	ldw	r2,1176(sp)
 800eab8:	1c87883a 	add	r3,r3,r18
 800eabc:	44800115 	stw	r18,4(r8)
 800eac0:	40800015 	stw	r2,0(r8)
 800eac4:	d8c11c15 	stw	r3,1136(sp)
 800eac8:	d9411b15 	stw	r5,1132(sp)
 800eacc:	008001c4 	movi	r2,7
 800ead0:	11400d0e 	bge	r2,r5,800eb08 <___vfiprintf_internal_r+0xd88>
 800ead4:	1800061e 	bne	r3,zero,800eaf0 <___vfiprintf_internal_r+0xd70>
 800ead8:	d8c12417 	ldw	r3,1168(sp)
 800eadc:	a8c12e16 	blt	r21,r3,800ef98 <___vfiprintf_internal_r+0x1218>
 800eae0:	d9012517 	ldw	r4,1172(sp)
 800eae4:	2549883a 	add	r4,r4,r21
 800eae8:	d9012515 	stw	r4,1172(sp)
 800eaec:	00001206 	br	800eb38 <___vfiprintf_internal_r+0xdb8>
 800eaf0:	d9012117 	ldw	r4,1156(sp)
 800eaf4:	d9412017 	ldw	r5,1152(sp)
 800eaf8:	d9811a04 	addi	r6,sp,1128
 800eafc:	800dc6c0 	call	800dc6c <__sprint_r.part.0>
 800eb00:	103fbb1e 	bne	r2,zero,800e9f0 <__alt_data_end+0xfc00e9f0>
 800eb04:	d8c11c17 	ldw	r3,1136(sp)
 800eb08:	d8812417 	ldw	r2,1168(sp)
 800eb0c:	a880010e 	bge	r21,r2,800eb14 <___vfiprintf_internal_r+0xd94>
 800eb10:	102b883a 	mov	r21,r2
 800eb14:	d9012517 	ldw	r4,1172(sp)
 800eb18:	2549883a 	add	r4,r4,r21
 800eb1c:	d9012515 	stw	r4,1172(sp)
 800eb20:	18000526 	beq	r3,zero,800eb38 <___vfiprintf_internal_r+0xdb8>
 800eb24:	d9012117 	ldw	r4,1156(sp)
 800eb28:	d9412017 	ldw	r5,1152(sp)
 800eb2c:	d9811a04 	addi	r6,sp,1128
 800eb30:	800dc6c0 	call	800dc6c <__sprint_r.part.0>
 800eb34:	103fae1e 	bne	r2,zero,800e9f0 <__alt_data_end+0xfc00e9f0>
 800eb38:	d8011b15 	stw	zero,1132(sp)
 800eb3c:	d811883a 	mov	r8,sp
 800eb40:	003cc706 	br	800de60 <__alt_data_end+0xfc00de60>
 800eb44:	a009883a 	mov	r4,r20
 800eb48:	b00b883a 	mov	r5,r22
 800eb4c:	d9811a04 	addi	r6,sp,1128
 800eb50:	800dc6c0 	call	800dc6c <__sprint_r.part.0>
 800eb54:	103fa61e 	bne	r2,zero,800e9f0 <__alt_data_end+0xfc00e9f0>
 800eb58:	d9011b17 	ldw	r4,1132(sp)
 800eb5c:	d8c11c17 	ldw	r3,1136(sp)
 800eb60:	d811883a 	mov	r8,sp
 800eb64:	21400044 	addi	r5,r4,1
 800eb68:	003fc306 	br	800ea78 <__alt_data_end+0xfc00ea78>
 800eb6c:	d9012417 	ldw	r4,1168(sp)
 800eb70:	256dc83a 	sub	r22,r4,r21
 800eb74:	05be1f0e 	bge	zero,r22,800e3f4 <__alt_data_end+0xfc00e3f4>
 800eb78:	04c00404 	movi	r19,16
 800eb7c:	9d81720e 	bge	r19,r22,800f148 <___vfiprintf_internal_r+0x13c8>
 800eb80:	00820074 	movhi	r2,2049
 800eb84:	109bbe04 	addi	r2,r2,28408
 800eb88:	d8812615 	stw	r2,1176(sp)
 800eb8c:	028001c4 	movi	r10,7
 800eb90:	00000506 	br	800eba8 <___vfiprintf_internal_r+0xe28>
 800eb94:	29000084 	addi	r4,r5,2
 800eb98:	42000204 	addi	r8,r8,8
 800eb9c:	100b883a 	mov	r5,r2
 800eba0:	b5bffc04 	addi	r22,r22,-16
 800eba4:	9d800d0e 	bge	r19,r22,800ebdc <___vfiprintf_internal_r+0xe5c>
 800eba8:	18c00404 	addi	r3,r3,16
 800ebac:	28800044 	addi	r2,r5,1
 800ebb0:	44400015 	stw	r17,0(r8)
 800ebb4:	44c00115 	stw	r19,4(r8)
 800ebb8:	d8c11c15 	stw	r3,1136(sp)
 800ebbc:	d8811b15 	stw	r2,1132(sp)
 800ebc0:	50bff40e 	bge	r10,r2,800eb94 <__alt_data_end+0xfc00eb94>
 800ebc4:	1800111e 	bne	r3,zero,800ec0c <___vfiprintf_internal_r+0xe8c>
 800ebc8:	b5bffc04 	addi	r22,r22,-16
 800ebcc:	000b883a 	mov	r5,zero
 800ebd0:	01000044 	movi	r4,1
 800ebd4:	d811883a 	mov	r8,sp
 800ebd8:	9dbff316 	blt	r19,r22,800eba8 <__alt_data_end+0xfc00eba8>
 800ebdc:	d9412617 	ldw	r5,1176(sp)
 800ebe0:	1d87883a 	add	r3,r3,r22
 800ebe4:	45800115 	stw	r22,4(r8)
 800ebe8:	41400015 	stw	r5,0(r8)
 800ebec:	d8c11c15 	stw	r3,1136(sp)
 800ebf0:	d9011b15 	stw	r4,1132(sp)
 800ebf4:	008001c4 	movi	r2,7
 800ebf8:	11008516 	blt	r2,r4,800ee10 <___vfiprintf_internal_r+0x1090>
 800ebfc:	42000204 	addi	r8,r8,8
 800ec00:	20800044 	addi	r2,r4,1
 800ec04:	200b883a 	mov	r5,r4
 800ec08:	003dfa06 	br	800e3f4 <__alt_data_end+0xfc00e3f4>
 800ec0c:	d9012117 	ldw	r4,1156(sp)
 800ec10:	d9412017 	ldw	r5,1152(sp)
 800ec14:	d9811a04 	addi	r6,sp,1128
 800ec18:	da812a15 	stw	r10,1192(sp)
 800ec1c:	800dc6c0 	call	800dc6c <__sprint_r.part.0>
 800ec20:	da812a17 	ldw	r10,1192(sp)
 800ec24:	103f721e 	bne	r2,zero,800e9f0 <__alt_data_end+0xfc00e9f0>
 800ec28:	d9411b17 	ldw	r5,1132(sp)
 800ec2c:	d8c11c17 	ldw	r3,1136(sp)
 800ec30:	d811883a 	mov	r8,sp
 800ec34:	29000044 	addi	r4,r5,1
 800ec38:	003fd906 	br	800eba0 <__alt_data_end+0xfc00eba0>
 800ec3c:	1800681e 	bne	r3,zero,800ede0 <___vfiprintf_internal_r+0x1060>
 800ec40:	50004d26 	beq	r10,zero,800ed78 <___vfiprintf_internal_r+0xff8>
 800ec44:	d8811d04 	addi	r2,sp,1140
 800ec48:	00c00084 	movi	r3,2
 800ec4c:	d8800015 	stw	r2,0(sp)
 800ec50:	d8c00115 	stw	r3,4(sp)
 800ec54:	2005883a 	mov	r2,r4
 800ec58:	d811883a 	mov	r8,sp
 800ec5c:	003de006 	br	800e3e0 <__alt_data_end+0xfc00e3e0>
 800ec60:	1800551e 	bne	r3,zero,800edb8 <___vfiprintf_internal_r+0x1038>
 800ec64:	000b883a 	mov	r5,zero
 800ec68:	00800044 	movi	r2,1
 800ec6c:	d811883a 	mov	r8,sp
 800ec70:	003dde06 	br	800e3ec <__alt_data_end+0xfc00e3ec>
 800ec74:	10803fcc 	andi	r2,r2,255
 800ec78:	1000191e 	bne	r2,zero,800ece0 <___vfiprintf_internal_r+0xf60>
 800ec7c:	9080004c 	andi	r2,r18,1
 800ec80:	10001726 	beq	r2,zero,800ece0 <___vfiprintf_internal_r+0xf60>
 800ec84:	00800c04 	movi	r2,48
 800ec88:	d8c109c4 	addi	r3,sp,1063
 800ec8c:	d88109c5 	stb	r2,1063(sp)
 800ec90:	dd012817 	ldw	r20,1184(sp)
 800ec94:	d8c12215 	stw	r3,1160(sp)
 800ec98:	003d8a06 	br	800e2c4 <__alt_data_end+0xfc00e2c4>
 800ec9c:	d9012717 	ldw	r4,1180(sp)
 800eca0:	dd010a04 	addi	r20,sp,1064
 800eca4:	988003cc 	andi	r2,r19,15
 800eca8:	a806973a 	slli	r3,r21,28
 800ecac:	2085883a 	add	r2,r4,r2
 800ecb0:	9826d13a 	srli	r19,r19,4
 800ecb4:	10800003 	ldbu	r2,0(r2)
 800ecb8:	a82ad13a 	srli	r21,r21,4
 800ecbc:	a53fffc4 	addi	r20,r20,-1
 800ecc0:	1ce6b03a 	or	r19,r3,r19
 800ecc4:	a0800005 	stb	r2,0(r20)
 800ecc8:	9d44b03a 	or	r2,r19,r21
 800eccc:	103ff51e 	bne	r2,zero,800eca4 <__alt_data_end+0xfc00eca4>
 800ecd0:	d9411e17 	ldw	r5,1144(sp)
 800ecd4:	dd012215 	stw	r20,1160(sp)
 800ecd8:	2d29c83a 	sub	r20,r5,r20
 800ecdc:	003d7906 	br	800e2c4 <__alt_data_end+0xfc00e2c4>
 800ece0:	d8c10a04 	addi	r3,sp,1064
 800ece4:	d8c12215 	stw	r3,1160(sp)
 800ece8:	003d7606 	br	800e2c4 <__alt_data_end+0xfc00e2c4>
 800ecec:	18009e1e 	bne	r3,zero,800ef68 <___vfiprintf_internal_r+0x11e8>
 800ecf0:	d8811d87 	ldb	r2,1142(sp)
 800ecf4:	10005f26 	beq	r2,zero,800ee74 <___vfiprintf_internal_r+0x10f4>
 800ecf8:	00c00044 	movi	r3,1
 800ecfc:	d9011d84 	addi	r4,sp,1142
 800ed00:	1805883a 	mov	r2,r3
 800ed04:	d9000015 	stw	r4,0(sp)
 800ed08:	d8c00115 	stw	r3,4(sp)
 800ed0c:	d811883a 	mov	r8,sp
 800ed10:	003efc06 	br	800e904 <__alt_data_end+0xfc00e904>
 800ed14:	d9412417 	ldw	r5,1168(sp)
 800ed18:	d811883a 	mov	r8,sp
 800ed1c:	2d65c83a 	sub	r18,r5,r21
 800ed20:	04bf4816 	blt	zero,r18,800ea44 <__alt_data_end+0xfc00ea44>
 800ed24:	003f6c06 	br	800ead8 <__alt_data_end+0xfc00ead8>
 800ed28:	b829883a 	mov	r20,r23
 800ed2c:	003c6906 	br	800ded4 <__alt_data_end+0xfc00ded4>
 800ed30:	d9012117 	ldw	r4,1156(sp)
 800ed34:	d9412017 	ldw	r5,1152(sp)
 800ed38:	d9811a04 	addi	r6,sp,1128
 800ed3c:	800dc6c0 	call	800dc6c <__sprint_r.part.0>
 800ed40:	103f2b1e 	bne	r2,zero,800e9f0 <__alt_data_end+0xfc00e9f0>
 800ed44:	d8c11c17 	ldw	r3,1136(sp)
 800ed48:	d811883a 	mov	r8,sp
 800ed4c:	003f3806 	br	800ea30 <__alt_data_end+0xfc00ea30>
 800ed50:	00800084 	movi	r2,2
 800ed54:	9d46b03a 	or	r3,r19,r21
 800ed58:	003df606 	br	800e534 <__alt_data_end+0xfc00e534>
 800ed5c:	d9012117 	ldw	r4,1156(sp)
 800ed60:	d9412017 	ldw	r5,1152(sp)
 800ed64:	d9811a04 	addi	r6,sp,1128
 800ed68:	800dc6c0 	call	800dc6c <__sprint_r.part.0>
 800ed6c:	103f201e 	bne	r2,zero,800e9f0 <__alt_data_end+0xfc00e9f0>
 800ed70:	d811883a 	mov	r8,sp
 800ed74:	003cc606 	br	800e090 <__alt_data_end+0xfc00e090>
 800ed78:	000b883a 	mov	r5,zero
 800ed7c:	2005883a 	mov	r2,r4
 800ed80:	d811883a 	mov	r8,sp
 800ed84:	003d9906 	br	800e3ec <__alt_data_end+0xfc00e3ec>
 800ed88:	10803fcc 	andi	r2,r2,255
 800ed8c:	1080201c 	xori	r2,r2,128
 800ed90:	10bfe004 	addi	r2,r2,-128
 800ed94:	01000c04 	movi	r4,48
 800ed98:	1100b226 	beq	r2,r4,800f064 <___vfiprintf_internal_r+0x12e4>
 800ed9c:	d9412217 	ldw	r5,1160(sp)
 800eda0:	d8811e17 	ldw	r2,1144(sp)
 800eda4:	193fffc5 	stb	r4,-1(r3)
 800eda8:	297fffc4 	addi	r5,r5,-1
 800edac:	d9412215 	stw	r5,1160(sp)
 800edb0:	1169c83a 	sub	r20,r2,r5
 800edb4:	003d4306 	br	800e2c4 <__alt_data_end+0xfc00e2c4>
 800edb8:	d9012117 	ldw	r4,1156(sp)
 800edbc:	d9412017 	ldw	r5,1152(sp)
 800edc0:	d9811a04 	addi	r6,sp,1128
 800edc4:	800dc6c0 	call	800dc6c <__sprint_r.part.0>
 800edc8:	103f091e 	bne	r2,zero,800e9f0 <__alt_data_end+0xfc00e9f0>
 800edcc:	d9411b17 	ldw	r5,1132(sp)
 800edd0:	d8c11c17 	ldw	r3,1136(sp)
 800edd4:	d811883a 	mov	r8,sp
 800edd8:	28800044 	addi	r2,r5,1
 800eddc:	003d8306 	br	800e3ec <__alt_data_end+0xfc00e3ec>
 800ede0:	d9012117 	ldw	r4,1156(sp)
 800ede4:	d9412017 	ldw	r5,1152(sp)
 800ede8:	d9811a04 	addi	r6,sp,1128
 800edec:	da812a15 	stw	r10,1192(sp)
 800edf0:	800dc6c0 	call	800dc6c <__sprint_r.part.0>
 800edf4:	da812a17 	ldw	r10,1192(sp)
 800edf8:	103efd1e 	bne	r2,zero,800e9f0 <__alt_data_end+0xfc00e9f0>
 800edfc:	d9411b17 	ldw	r5,1132(sp)
 800ee00:	d8c11c17 	ldw	r3,1136(sp)
 800ee04:	d811883a 	mov	r8,sp
 800ee08:	28800044 	addi	r2,r5,1
 800ee0c:	003d6a06 	br	800e3b8 <__alt_data_end+0xfc00e3b8>
 800ee10:	1800a01e 	bne	r3,zero,800f094 <___vfiprintf_internal_r+0x1314>
 800ee14:	000b883a 	mov	r5,zero
 800ee18:	00800044 	movi	r2,1
 800ee1c:	d811883a 	mov	r8,sp
 800ee20:	003d7406 	br	800e3f4 <__alt_data_end+0xfc00e3f4>
 800ee24:	d9012117 	ldw	r4,1156(sp)
 800ee28:	d9412017 	ldw	r5,1152(sp)
 800ee2c:	d9811a04 	addi	r6,sp,1128
 800ee30:	800dc6c0 	call	800dc6c <__sprint_r.part.0>
 800ee34:	103eee1e 	bne	r2,zero,800e9f0 <__alt_data_end+0xfc00e9f0>
 800ee38:	d8811b17 	ldw	r2,1132(sp)
 800ee3c:	d8c11c17 	ldw	r3,1136(sp)
 800ee40:	d811883a 	mov	r8,sp
 800ee44:	10800044 	addi	r2,r2,1
 800ee48:	003d8f06 	br	800e488 <__alt_data_end+0xfc00e488>
 800ee4c:	04e7c83a 	sub	r19,zero,r19
 800ee50:	9804c03a 	cmpne	r2,r19,zero
 800ee54:	056bc83a 	sub	r21,zero,r21
 800ee58:	a8abc83a 	sub	r21,r21,r2
 800ee5c:	05800b44 	movi	r22,45
 800ee60:	dd811d85 	stb	r22,1142(sp)
 800ee64:	8029883a 	mov	r20,r16
 800ee68:	00800044 	movi	r2,1
 800ee6c:	9d46b03a 	or	r3,r19,r21
 800ee70:	003cfa06 	br	800e25c <__alt_data_end+0xfc00e25c>
 800ee74:	000b883a 	mov	r5,zero
 800ee78:	00800044 	movi	r2,1
 800ee7c:	d811883a 	mov	r8,sp
 800ee80:	503d5a26 	beq	r10,zero,800e3ec <__alt_data_end+0xfc00e3ec>
 800ee84:	00c00084 	movi	r3,2
 800ee88:	d9011d04 	addi	r4,sp,1140
 800ee8c:	d9000015 	stw	r4,0(sp)
 800ee90:	d8c00115 	stw	r3,4(sp)
 800ee94:	003d5206 	br	800e3e0 <__alt_data_end+0xfc00e3e0>
 800ee98:	9080040c 	andi	r2,r18,16
 800ee9c:	1000421e 	bne	r2,zero,800efa8 <___vfiprintf_internal_r+0x1228>
 800eea0:	9480100c 	andi	r18,r18,64
 800eea4:	90009c26 	beq	r18,zero,800f118 <___vfiprintf_internal_r+0x1398>
 800eea8:	d9412317 	ldw	r5,1164(sp)
 800eeac:	d8c12517 	ldw	r3,1172(sp)
 800eeb0:	28800017 	ldw	r2,0(r5)
 800eeb4:	29400104 	addi	r5,r5,4
 800eeb8:	d9412315 	stw	r5,1164(sp)
 800eebc:	10c0000d 	sth	r3,0(r2)
 800eec0:	003be706 	br	800de60 <__alt_data_end+0xfc00de60>
 800eec4:	90c0100c 	andi	r3,r18,64
 800eec8:	18003e26 	beq	r3,zero,800efc4 <___vfiprintf_internal_r+0x1244>
 800eecc:	d8c12317 	ldw	r3,1164(sp)
 800eed0:	14c0000b 	ldhu	r19,0(r2)
 800eed4:	002b883a 	mov	r21,zero
 800eed8:	18c00104 	addi	r3,r3,4
 800eedc:	d8c12315 	stw	r3,1164(sp)
 800eee0:	003db706 	br	800e5c0 <__alt_data_end+0xfc00e5c0>
 800eee4:	9080100c 	andi	r2,r18,64
 800eee8:	10004c26 	beq	r2,zero,800f01c <___vfiprintf_internal_r+0x129c>
 800eeec:	1cc0000f 	ldh	r19,0(r3)
 800eef0:	d8812317 	ldw	r2,1164(sp)
 800eef4:	982bd7fa 	srai	r21,r19,31
 800eef8:	10800104 	addi	r2,r2,4
 800eefc:	d8812315 	stw	r2,1164(sp)
 800ef00:	a805883a 	mov	r2,r21
 800ef04:	003cd006 	br	800e248 <__alt_data_end+0xfc00e248>
 800ef08:	00800084 	movi	r2,2
 800ef0c:	003d8906 	br	800e534 <__alt_data_end+0xfc00e534>
 800ef10:	b9800007 	ldb	r6,0(r23)
 800ef14:	003bfb06 	br	800df04 <__alt_data_end+0xfc00df04>
 800ef18:	9080100c 	andi	r2,r18,64
 800ef1c:	10003726 	beq	r2,zero,800effc <___vfiprintf_internal_r+0x127c>
 800ef20:	d9412317 	ldw	r5,1164(sp)
 800ef24:	002b883a 	mov	r21,zero
 800ef28:	0005883a 	mov	r2,zero
 800ef2c:	2cc0000b 	ldhu	r19,0(r5)
 800ef30:	29400104 	addi	r5,r5,4
 800ef34:	d9412315 	stw	r5,1164(sp)
 800ef38:	9807883a 	mov	r3,r19
 800ef3c:	003d7d06 	br	800e534 <__alt_data_end+0xfc00e534>
 800ef40:	9080100c 	andi	r2,r18,64
 800ef44:	10002526 	beq	r2,zero,800efdc <___vfiprintf_internal_r+0x125c>
 800ef48:	d8812317 	ldw	r2,1164(sp)
 800ef4c:	002b883a 	mov	r21,zero
 800ef50:	14c0000b 	ldhu	r19,0(r2)
 800ef54:	10800104 	addi	r2,r2,4
 800ef58:	d8812315 	stw	r2,1164(sp)
 800ef5c:	9807883a 	mov	r3,r19
 800ef60:	00800044 	movi	r2,1
 800ef64:	003d7306 	br	800e534 <__alt_data_end+0xfc00e534>
 800ef68:	d9012117 	ldw	r4,1156(sp)
 800ef6c:	d9412017 	ldw	r5,1152(sp)
 800ef70:	d9811a04 	addi	r6,sp,1128
 800ef74:	da812a15 	stw	r10,1192(sp)
 800ef78:	800dc6c0 	call	800dc6c <__sprint_r.part.0>
 800ef7c:	da812a17 	ldw	r10,1192(sp)
 800ef80:	103e9b1e 	bne	r2,zero,800e9f0 <__alt_data_end+0xfc00e9f0>
 800ef84:	d9411b17 	ldw	r5,1132(sp)
 800ef88:	d8c11c17 	ldw	r3,1136(sp)
 800ef8c:	d811883a 	mov	r8,sp
 800ef90:	28800044 	addi	r2,r5,1
 800ef94:	003e5006 	br	800e8d8 <__alt_data_end+0xfc00e8d8>
 800ef98:	182b883a 	mov	r21,r3
 800ef9c:	003ed006 	br	800eae0 <__alt_data_end+0xfc00eae0>
 800efa0:	8029883a 	mov	r20,r16
 800efa4:	003dc606 	br	800e6c0 <__alt_data_end+0xfc00e6c0>
 800efa8:	d8c12317 	ldw	r3,1164(sp)
 800efac:	d9012517 	ldw	r4,1172(sp)
 800efb0:	18800017 	ldw	r2,0(r3)
 800efb4:	18c00104 	addi	r3,r3,4
 800efb8:	d8c12315 	stw	r3,1164(sp)
 800efbc:	11000015 	stw	r4,0(r2)
 800efc0:	003ba706 	br	800de60 <__alt_data_end+0xfc00de60>
 800efc4:	d9012317 	ldw	r4,1164(sp)
 800efc8:	14c00017 	ldw	r19,0(r2)
 800efcc:	002b883a 	mov	r21,zero
 800efd0:	21000104 	addi	r4,r4,4
 800efd4:	d9012315 	stw	r4,1164(sp)
 800efd8:	003d7906 	br	800e5c0 <__alt_data_end+0xfc00e5c0>
 800efdc:	d8c12317 	ldw	r3,1164(sp)
 800efe0:	002b883a 	mov	r21,zero
 800efe4:	00800044 	movi	r2,1
 800efe8:	1cc00017 	ldw	r19,0(r3)
 800efec:	18c00104 	addi	r3,r3,4
 800eff0:	d8c12315 	stw	r3,1164(sp)
 800eff4:	9807883a 	mov	r3,r19
 800eff8:	003d4e06 	br	800e534 <__alt_data_end+0xfc00e534>
 800effc:	d8812317 	ldw	r2,1164(sp)
 800f000:	002b883a 	mov	r21,zero
 800f004:	14c00017 	ldw	r19,0(r2)
 800f008:	10800104 	addi	r2,r2,4
 800f00c:	d8812315 	stw	r2,1164(sp)
 800f010:	9807883a 	mov	r3,r19
 800f014:	0005883a 	mov	r2,zero
 800f018:	003d4606 	br	800e534 <__alt_data_end+0xfc00e534>
 800f01c:	1cc00017 	ldw	r19,0(r3)
 800f020:	d8c12317 	ldw	r3,1164(sp)
 800f024:	982bd7fa 	srai	r21,r19,31
 800f028:	18c00104 	addi	r3,r3,4
 800f02c:	d8c12315 	stw	r3,1164(sp)
 800f030:	a805883a 	mov	r2,r21
 800f034:	003c8406 	br	800e248 <__alt_data_end+0xfc00e248>
 800f038:	01020074 	movhi	r4,2049
 800f03c:	211bbe04 	addi	r4,r4,28408
 800f040:	d9012615 	stw	r4,1176(sp)
 800f044:	003d0606 	br	800e460 <__alt_data_end+0xfc00e460>
 800f048:	b9800043 	ldbu	r6,1(r23)
 800f04c:	94800814 	ori	r18,r18,32
 800f050:	bdc00044 	addi	r23,r23,1
 800f054:	31803fcc 	andi	r6,r6,255
 800f058:	3180201c 	xori	r6,r6,128
 800f05c:	31bfe004 	addi	r6,r6,-128
 800f060:	003ba806 	br	800df04 <__alt_data_end+0xfc00df04>
 800f064:	d8811e17 	ldw	r2,1144(sp)
 800f068:	d8c12217 	ldw	r3,1160(sp)
 800f06c:	10e9c83a 	sub	r20,r2,r3
 800f070:	003c9406 	br	800e2c4 <__alt_data_end+0xfc00e2c4>
 800f074:	da012a15 	stw	r8,1192(sp)
 800f078:	8003e4c0 	call	8003e4c <strlen>
 800f07c:	1029883a 	mov	r20,r2
 800f080:	dd811d83 	ldbu	r22,1142(sp)
 800f084:	dcc12315 	stw	r19,1164(sp)
 800f088:	0021883a 	mov	r16,zero
 800f08c:	da012a17 	ldw	r8,1192(sp)
 800f090:	003c8c06 	br	800e2c4 <__alt_data_end+0xfc00e2c4>
 800f094:	d9012117 	ldw	r4,1156(sp)
 800f098:	d9412017 	ldw	r5,1152(sp)
 800f09c:	d9811a04 	addi	r6,sp,1128
 800f0a0:	800dc6c0 	call	800dc6c <__sprint_r.part.0>
 800f0a4:	103e521e 	bne	r2,zero,800e9f0 <__alt_data_end+0xfc00e9f0>
 800f0a8:	d9411b17 	ldw	r5,1132(sp)
 800f0ac:	d8c11c17 	ldw	r3,1136(sp)
 800f0b0:	d811883a 	mov	r8,sp
 800f0b4:	28800044 	addi	r2,r5,1
 800f0b8:	003cce06 	br	800e3f4 <__alt_data_end+0xfc00e3f4>
 800f0bc:	01420074 	movhi	r5,2049
 800f0c0:	295bc204 	addi	r5,r5,28424
 800f0c4:	d9412615 	stw	r5,1176(sp)
 800f0c8:	d9411b17 	ldw	r5,1132(sp)
 800f0cc:	29400044 	addi	r5,r5,1
 800f0d0:	003cad06 	br	800e388 <__alt_data_end+0xfc00e388>
 800f0d4:	00800184 	movi	r2,6
 800f0d8:	1400012e 	bgeu	r2,r16,800f0e0 <___vfiprintf_internal_r+0x1360>
 800f0dc:	1021883a 	mov	r16,r2
 800f0e0:	8029883a 	mov	r20,r16
 800f0e4:	802b883a 	mov	r21,r16
 800f0e8:	80001c16 	blt	r16,zero,800f15c <___vfiprintf_internal_r+0x13dc>
 800f0ec:	00c20074 	movhi	r3,2049
 800f0f0:	18db5204 	addi	r3,r3,27976
 800f0f4:	dcc12315 	stw	r19,1164(sp)
 800f0f8:	d8c12215 	stw	r3,1160(sp)
 800f0fc:	003cff06 	br	800e4fc <__alt_data_end+0xfc00e4fc>
 800f100:	d9411b17 	ldw	r5,1132(sp)
 800f104:	00820074 	movhi	r2,2049
 800f108:	109bc204 	addi	r2,r2,28424
 800f10c:	d8812615 	stw	r2,1176(sp)
 800f110:	29400044 	addi	r5,r5,1
 800f114:	003e6706 	br	800eab4 <__alt_data_end+0xfc00eab4>
 800f118:	d9012317 	ldw	r4,1164(sp)
 800f11c:	d9412517 	ldw	r5,1172(sp)
 800f120:	20800017 	ldw	r2,0(r4)
 800f124:	21000104 	addi	r4,r4,4
 800f128:	d9012315 	stw	r4,1164(sp)
 800f12c:	11400015 	stw	r5,0(r2)
 800f130:	003b4b06 	br	800de60 <__alt_data_end+0xfc00de60>
 800f134:	8029883a 	mov	r20,r16
 800f138:	dd811d83 	ldbu	r22,1142(sp)
 800f13c:	dcc12315 	stw	r19,1164(sp)
 800f140:	0021883a 	mov	r16,zero
 800f144:	003c5f06 	br	800e2c4 <__alt_data_end+0xfc00e2c4>
 800f148:	01020074 	movhi	r4,2049
 800f14c:	211bbe04 	addi	r4,r4,28408
 800f150:	d9012615 	stw	r4,1176(sp)
 800f154:	1009883a 	mov	r4,r2
 800f158:	003ea006 	br	800ebdc <__alt_data_end+0xfc00ebdc>
 800f15c:	002b883a 	mov	r21,zero
 800f160:	003fe206 	br	800f0ec <__alt_data_end+0xfc00f0ec>
 800f164:	d9412317 	ldw	r5,1164(sp)
 800f168:	b807883a 	mov	r3,r23
 800f16c:	102f883a 	mov	r23,r2
 800f170:	2c000017 	ldw	r16,0(r5)
 800f174:	29000104 	addi	r4,r5,4
 800f178:	d9012315 	stw	r4,1164(sp)
 800f17c:	80000416 	blt	r16,zero,800f190 <___vfiprintf_internal_r+0x1410>
 800f180:	19800047 	ldb	r6,1(r3)
 800f184:	003b5f06 	br	800df04 <__alt_data_end+0xfc00df04>
 800f188:	043fffc4 	movi	r16,-1
 800f18c:	003bef06 	br	800e14c <__alt_data_end+0xfc00e14c>
 800f190:	043fffc4 	movi	r16,-1
 800f194:	19800047 	ldb	r6,1(r3)
 800f198:	003b5a06 	br	800df04 <__alt_data_end+0xfc00df04>
 800f19c:	282b883a 	mov	r21,r5
 800f1a0:	003cc706 	br	800e4c0 <__alt_data_end+0xfc00e4c0>

0800f1a4 <__vfiprintf_internal>:
 800f1a4:	2007883a 	mov	r3,r4
 800f1a8:	010200b4 	movhi	r4,2050
 800f1ac:	21232e04 	addi	r4,r4,-29512
 800f1b0:	21000017 	ldw	r4,0(r4)
 800f1b4:	2805883a 	mov	r2,r5
 800f1b8:	300f883a 	mov	r7,r6
 800f1bc:	180b883a 	mov	r5,r3
 800f1c0:	100d883a 	mov	r6,r2
 800f1c4:	800dd801 	jmpi	800dd80 <___vfiprintf_internal_r>

0800f1c8 <_write_r>:
 800f1c8:	defffd04 	addi	sp,sp,-12
 800f1cc:	dc000015 	stw	r16,0(sp)
 800f1d0:	040200b4 	movhi	r16,2050
 800f1d4:	dc400115 	stw	r17,4(sp)
 800f1d8:	842a6204 	addi	r16,r16,-22136
 800f1dc:	2023883a 	mov	r17,r4
 800f1e0:	2809883a 	mov	r4,r5
 800f1e4:	300b883a 	mov	r5,r6
 800f1e8:	380d883a 	mov	r6,r7
 800f1ec:	dfc00215 	stw	ra,8(sp)
 800f1f0:	80000015 	stw	zero,0(r16)
 800f1f4:	8013b600 	call	8013b60 <write>
 800f1f8:	00ffffc4 	movi	r3,-1
 800f1fc:	10c00526 	beq	r2,r3,800f214 <_write_r+0x4c>
 800f200:	dfc00217 	ldw	ra,8(sp)
 800f204:	dc400117 	ldw	r17,4(sp)
 800f208:	dc000017 	ldw	r16,0(sp)
 800f20c:	dec00304 	addi	sp,sp,12
 800f210:	f800283a 	ret
 800f214:	80c00017 	ldw	r3,0(r16)
 800f218:	183ff926 	beq	r3,zero,800f200 <__alt_data_end+0xfc00f200>
 800f21c:	88c00015 	stw	r3,0(r17)
 800f220:	003ff706 	br	800f200 <__alt_data_end+0xfc00f200>

0800f224 <_close_r>:
 800f224:	defffd04 	addi	sp,sp,-12
 800f228:	dc000015 	stw	r16,0(sp)
 800f22c:	040200b4 	movhi	r16,2050
 800f230:	dc400115 	stw	r17,4(sp)
 800f234:	842a6204 	addi	r16,r16,-22136
 800f238:	2023883a 	mov	r17,r4
 800f23c:	2809883a 	mov	r4,r5
 800f240:	dfc00215 	stw	ra,8(sp)
 800f244:	80000015 	stw	zero,0(r16)
 800f248:	80130e80 	call	80130e8 <close>
 800f24c:	00ffffc4 	movi	r3,-1
 800f250:	10c00526 	beq	r2,r3,800f268 <_close_r+0x44>
 800f254:	dfc00217 	ldw	ra,8(sp)
 800f258:	dc400117 	ldw	r17,4(sp)
 800f25c:	dc000017 	ldw	r16,0(sp)
 800f260:	dec00304 	addi	sp,sp,12
 800f264:	f800283a 	ret
 800f268:	80c00017 	ldw	r3,0(r16)
 800f26c:	183ff926 	beq	r3,zero,800f254 <__alt_data_end+0xfc00f254>
 800f270:	88c00015 	stw	r3,0(r17)
 800f274:	003ff706 	br	800f254 <__alt_data_end+0xfc00f254>

0800f278 <_calloc_r>:
 800f278:	defffe04 	addi	sp,sp,-8
 800f27c:	dc000015 	stw	r16,0(sp)
 800f280:	2021883a 	mov	r16,r4
 800f284:	2809883a 	mov	r4,r5
 800f288:	300b883a 	mov	r5,r6
 800f28c:	dfc00115 	stw	ra,4(sp)
 800f290:	80027f80 	call	80027f8 <__mulsi3>
 800f294:	8009883a 	mov	r4,r16
 800f298:	100b883a 	mov	r5,r2
 800f29c:	8002d800 	call	8002d80 <_malloc_r>
 800f2a0:	1021883a 	mov	r16,r2
 800f2a4:	10002826 	beq	r2,zero,800f348 <_calloc_r+0xd0>
 800f2a8:	11bfff17 	ldw	r6,-4(r2)
 800f2ac:	00bfff04 	movi	r2,-4
 800f2b0:	00c00904 	movi	r3,36
 800f2b4:	308c703a 	and	r6,r6,r2
 800f2b8:	308d883a 	add	r6,r6,r2
 800f2bc:	19801436 	bltu	r3,r6,800f310 <_calloc_r+0x98>
 800f2c0:	008004c4 	movi	r2,19
 800f2c4:	11800936 	bltu	r2,r6,800f2ec <_calloc_r+0x74>
 800f2c8:	8005883a 	mov	r2,r16
 800f2cc:	10000015 	stw	zero,0(r2)
 800f2d0:	10000115 	stw	zero,4(r2)
 800f2d4:	10000215 	stw	zero,8(r2)
 800f2d8:	8005883a 	mov	r2,r16
 800f2dc:	dfc00117 	ldw	ra,4(sp)
 800f2e0:	dc000017 	ldw	r16,0(sp)
 800f2e4:	dec00204 	addi	sp,sp,8
 800f2e8:	f800283a 	ret
 800f2ec:	80000015 	stw	zero,0(r16)
 800f2f0:	80000115 	stw	zero,4(r16)
 800f2f4:	008006c4 	movi	r2,27
 800f2f8:	11800d2e 	bgeu	r2,r6,800f330 <_calloc_r+0xb8>
 800f2fc:	80000215 	stw	zero,8(r16)
 800f300:	80000315 	stw	zero,12(r16)
 800f304:	30c00c26 	beq	r6,r3,800f338 <_calloc_r+0xc0>
 800f308:	80800404 	addi	r2,r16,16
 800f30c:	003fef06 	br	800f2cc <__alt_data_end+0xfc00f2cc>
 800f310:	8009883a 	mov	r4,r16
 800f314:	000b883a 	mov	r5,zero
 800f318:	80035280 	call	8003528 <memset>
 800f31c:	8005883a 	mov	r2,r16
 800f320:	dfc00117 	ldw	ra,4(sp)
 800f324:	dc000017 	ldw	r16,0(sp)
 800f328:	dec00204 	addi	sp,sp,8
 800f32c:	f800283a 	ret
 800f330:	80800204 	addi	r2,r16,8
 800f334:	003fe506 	br	800f2cc <__alt_data_end+0xfc00f2cc>
 800f338:	80000415 	stw	zero,16(r16)
 800f33c:	80800604 	addi	r2,r16,24
 800f340:	80000515 	stw	zero,20(r16)
 800f344:	003fe106 	br	800f2cc <__alt_data_end+0xfc00f2cc>
 800f348:	0005883a 	mov	r2,zero
 800f34c:	003fe306 	br	800f2dc <__alt_data_end+0xfc00f2dc>

0800f350 <_fclose_r>:
 800f350:	28003226 	beq	r5,zero,800f41c <_fclose_r+0xcc>
 800f354:	defffc04 	addi	sp,sp,-16
 800f358:	dc400115 	stw	r17,4(sp)
 800f35c:	2023883a 	mov	r17,r4
 800f360:	dc000015 	stw	r16,0(sp)
 800f364:	dfc00315 	stw	ra,12(sp)
 800f368:	dc800215 	stw	r18,8(sp)
 800f36c:	2821883a 	mov	r16,r5
 800f370:	800a0c00 	call	800a0c0 <__sfp_lock_acquire>
 800f374:	88000226 	beq	r17,zero,800f380 <_fclose_r+0x30>
 800f378:	88800e17 	ldw	r2,56(r17)
 800f37c:	10002926 	beq	r2,zero,800f424 <_fclose_r+0xd4>
 800f380:	8080030f 	ldh	r2,12(r16)
 800f384:	10002226 	beq	r2,zero,800f410 <_fclose_r+0xc0>
 800f388:	8809883a 	mov	r4,r17
 800f38c:	800b883a 	mov	r5,r16
 800f390:	8009af40 	call	8009af4 <_fflush_r>
 800f394:	1025883a 	mov	r18,r2
 800f398:	80800b17 	ldw	r2,44(r16)
 800f39c:	10000426 	beq	r2,zero,800f3b0 <_fclose_r+0x60>
 800f3a0:	81400717 	ldw	r5,28(r16)
 800f3a4:	8809883a 	mov	r4,r17
 800f3a8:	103ee83a 	callr	r2
 800f3ac:	10002616 	blt	r2,zero,800f448 <_fclose_r+0xf8>
 800f3b0:	8080030b 	ldhu	r2,12(r16)
 800f3b4:	1080200c 	andi	r2,r2,128
 800f3b8:	10001f1e 	bne	r2,zero,800f438 <_fclose_r+0xe8>
 800f3bc:	81400c17 	ldw	r5,48(r16)
 800f3c0:	28000526 	beq	r5,zero,800f3d8 <_fclose_r+0x88>
 800f3c4:	80801004 	addi	r2,r16,64
 800f3c8:	28800226 	beq	r5,r2,800f3d4 <_fclose_r+0x84>
 800f3cc:	8809883a 	mov	r4,r17
 800f3d0:	800a2240 	call	800a224 <_free_r>
 800f3d4:	80000c15 	stw	zero,48(r16)
 800f3d8:	81401117 	ldw	r5,68(r16)
 800f3dc:	28000326 	beq	r5,zero,800f3ec <_fclose_r+0x9c>
 800f3e0:	8809883a 	mov	r4,r17
 800f3e4:	800a2240 	call	800a224 <_free_r>
 800f3e8:	80001115 	stw	zero,68(r16)
 800f3ec:	8000030d 	sth	zero,12(r16)
 800f3f0:	800a0c40 	call	800a0c4 <__sfp_lock_release>
 800f3f4:	9005883a 	mov	r2,r18
 800f3f8:	dfc00317 	ldw	ra,12(sp)
 800f3fc:	dc800217 	ldw	r18,8(sp)
 800f400:	dc400117 	ldw	r17,4(sp)
 800f404:	dc000017 	ldw	r16,0(sp)
 800f408:	dec00404 	addi	sp,sp,16
 800f40c:	f800283a 	ret
 800f410:	800a0c40 	call	800a0c4 <__sfp_lock_release>
 800f414:	0005883a 	mov	r2,zero
 800f418:	003ff706 	br	800f3f8 <__alt_data_end+0xfc00f3f8>
 800f41c:	0005883a 	mov	r2,zero
 800f420:	f800283a 	ret
 800f424:	8809883a 	mov	r4,r17
 800f428:	800a0b00 	call	800a0b0 <__sinit>
 800f42c:	8080030f 	ldh	r2,12(r16)
 800f430:	103fd51e 	bne	r2,zero,800f388 <__alt_data_end+0xfc00f388>
 800f434:	003ff606 	br	800f410 <__alt_data_end+0xfc00f410>
 800f438:	81400417 	ldw	r5,16(r16)
 800f43c:	8809883a 	mov	r4,r17
 800f440:	800a2240 	call	800a224 <_free_r>
 800f444:	003fdd06 	br	800f3bc <__alt_data_end+0xfc00f3bc>
 800f448:	04bfffc4 	movi	r18,-1
 800f44c:	003fd806 	br	800f3b0 <__alt_data_end+0xfc00f3b0>

0800f450 <fclose>:
 800f450:	008200b4 	movhi	r2,2050
 800f454:	10a32e04 	addi	r2,r2,-29512
 800f458:	200b883a 	mov	r5,r4
 800f45c:	11000017 	ldw	r4,0(r2)
 800f460:	800f3501 	jmpi	800f350 <_fclose_r>

0800f464 <_fputwc_r>:
 800f464:	3080030b 	ldhu	r2,12(r6)
 800f468:	defff804 	addi	sp,sp,-32
 800f46c:	dcc00415 	stw	r19,16(sp)
 800f470:	dc800315 	stw	r18,12(sp)
 800f474:	dc000115 	stw	r16,4(sp)
 800f478:	dfc00715 	stw	ra,28(sp)
 800f47c:	dd400615 	stw	r21,24(sp)
 800f480:	dd000515 	stw	r20,20(sp)
 800f484:	dc400215 	stw	r17,8(sp)
 800f488:	10c8000c 	andi	r3,r2,8192
 800f48c:	3021883a 	mov	r16,r6
 800f490:	2027883a 	mov	r19,r4
 800f494:	2825883a 	mov	r18,r5
 800f498:	1800051e 	bne	r3,zero,800f4b0 <_fputwc_r+0x4c>
 800f49c:	30c01917 	ldw	r3,100(r6)
 800f4a0:	10880014 	ori	r2,r2,8192
 800f4a4:	3080030d 	sth	r2,12(r6)
 800f4a8:	18880014 	ori	r2,r3,8192
 800f4ac:	30801915 	stw	r2,100(r6)
 800f4b0:	800abb00 	call	800abb0 <__locale_mb_cur_max>
 800f4b4:	00c00044 	movi	r3,1
 800f4b8:	10c03e26 	beq	r2,r3,800f5b4 <_fputwc_r+0x150>
 800f4bc:	9809883a 	mov	r4,r19
 800f4c0:	d80b883a 	mov	r5,sp
 800f4c4:	900d883a 	mov	r6,r18
 800f4c8:	81c01704 	addi	r7,r16,92
 800f4cc:	800f9140 	call	800f914 <_wcrtomb_r>
 800f4d0:	1029883a 	mov	r20,r2
 800f4d4:	00bfffc4 	movi	r2,-1
 800f4d8:	a0802026 	beq	r20,r2,800f55c <_fputwc_r+0xf8>
 800f4dc:	d9400003 	ldbu	r5,0(sp)
 800f4e0:	a0001c26 	beq	r20,zero,800f554 <_fputwc_r+0xf0>
 800f4e4:	0023883a 	mov	r17,zero
 800f4e8:	05400284 	movi	r21,10
 800f4ec:	00000906 	br	800f514 <_fputwc_r+0xb0>
 800f4f0:	80800017 	ldw	r2,0(r16)
 800f4f4:	11400005 	stb	r5,0(r2)
 800f4f8:	80c00017 	ldw	r3,0(r16)
 800f4fc:	18c00044 	addi	r3,r3,1
 800f500:	80c00015 	stw	r3,0(r16)
 800f504:	8c400044 	addi	r17,r17,1
 800f508:	dc45883a 	add	r2,sp,r17
 800f50c:	8d00112e 	bgeu	r17,r20,800f554 <_fputwc_r+0xf0>
 800f510:	11400003 	ldbu	r5,0(r2)
 800f514:	80c00217 	ldw	r3,8(r16)
 800f518:	18ffffc4 	addi	r3,r3,-1
 800f51c:	80c00215 	stw	r3,8(r16)
 800f520:	183ff30e 	bge	r3,zero,800f4f0 <__alt_data_end+0xfc00f4f0>
 800f524:	80800617 	ldw	r2,24(r16)
 800f528:	18801916 	blt	r3,r2,800f590 <_fputwc_r+0x12c>
 800f52c:	80800017 	ldw	r2,0(r16)
 800f530:	11400005 	stb	r5,0(r2)
 800f534:	80800017 	ldw	r2,0(r16)
 800f538:	10c00003 	ldbu	r3,0(r2)
 800f53c:	10800044 	addi	r2,r2,1
 800f540:	1d402326 	beq	r3,r21,800f5d0 <_fputwc_r+0x16c>
 800f544:	80800015 	stw	r2,0(r16)
 800f548:	8c400044 	addi	r17,r17,1
 800f54c:	dc45883a 	add	r2,sp,r17
 800f550:	8d3fef36 	bltu	r17,r20,800f510 <__alt_data_end+0xfc00f510>
 800f554:	9005883a 	mov	r2,r18
 800f558:	00000406 	br	800f56c <_fputwc_r+0x108>
 800f55c:	80c0030b 	ldhu	r3,12(r16)
 800f560:	a005883a 	mov	r2,r20
 800f564:	18c01014 	ori	r3,r3,64
 800f568:	80c0030d 	sth	r3,12(r16)
 800f56c:	dfc00717 	ldw	ra,28(sp)
 800f570:	dd400617 	ldw	r21,24(sp)
 800f574:	dd000517 	ldw	r20,20(sp)
 800f578:	dcc00417 	ldw	r19,16(sp)
 800f57c:	dc800317 	ldw	r18,12(sp)
 800f580:	dc400217 	ldw	r17,8(sp)
 800f584:	dc000117 	ldw	r16,4(sp)
 800f588:	dec00804 	addi	sp,sp,32
 800f58c:	f800283a 	ret
 800f590:	9809883a 	mov	r4,r19
 800f594:	29403fcc 	andi	r5,r5,255
 800f598:	800d883a 	mov	r6,r16
 800f59c:	800f7a40 	call	800f7a4 <__swbuf_r>
 800f5a0:	10bfffe0 	cmpeqi	r2,r2,-1
 800f5a4:	10803fcc 	andi	r2,r2,255
 800f5a8:	103fd626 	beq	r2,zero,800f504 <__alt_data_end+0xfc00f504>
 800f5ac:	00bfffc4 	movi	r2,-1
 800f5b0:	003fee06 	br	800f56c <__alt_data_end+0xfc00f56c>
 800f5b4:	90ffffc4 	addi	r3,r18,-1
 800f5b8:	01003f84 	movi	r4,254
 800f5bc:	20ffbf36 	bltu	r4,r3,800f4bc <__alt_data_end+0xfc00f4bc>
 800f5c0:	900b883a 	mov	r5,r18
 800f5c4:	dc800005 	stb	r18,0(sp)
 800f5c8:	1029883a 	mov	r20,r2
 800f5cc:	003fc506 	br	800f4e4 <__alt_data_end+0xfc00f4e4>
 800f5d0:	9809883a 	mov	r4,r19
 800f5d4:	a80b883a 	mov	r5,r21
 800f5d8:	800d883a 	mov	r6,r16
 800f5dc:	800f7a40 	call	800f7a4 <__swbuf_r>
 800f5e0:	10bfffe0 	cmpeqi	r2,r2,-1
 800f5e4:	003fef06 	br	800f5a4 <__alt_data_end+0xfc00f5a4>

0800f5e8 <fputwc>:
 800f5e8:	defffc04 	addi	sp,sp,-16
 800f5ec:	dc000115 	stw	r16,4(sp)
 800f5f0:	040200b4 	movhi	r16,2050
 800f5f4:	84232e04 	addi	r16,r16,-29512
 800f5f8:	dc400215 	stw	r17,8(sp)
 800f5fc:	2023883a 	mov	r17,r4
 800f600:	81000017 	ldw	r4,0(r16)
 800f604:	dfc00315 	stw	ra,12(sp)
 800f608:	280d883a 	mov	r6,r5
 800f60c:	20000626 	beq	r4,zero,800f628 <fputwc+0x40>
 800f610:	20800e17 	ldw	r2,56(r4)
 800f614:	1000041e 	bne	r2,zero,800f628 <fputwc+0x40>
 800f618:	d9400015 	stw	r5,0(sp)
 800f61c:	800a0b00 	call	800a0b0 <__sinit>
 800f620:	81000017 	ldw	r4,0(r16)
 800f624:	d9800017 	ldw	r6,0(sp)
 800f628:	880b883a 	mov	r5,r17
 800f62c:	dfc00317 	ldw	ra,12(sp)
 800f630:	dc400217 	ldw	r17,8(sp)
 800f634:	dc000117 	ldw	r16,4(sp)
 800f638:	dec00404 	addi	sp,sp,16
 800f63c:	800f4641 	jmpi	800f464 <_fputwc_r>

0800f640 <_fstat_r>:
 800f640:	defffd04 	addi	sp,sp,-12
 800f644:	dc000015 	stw	r16,0(sp)
 800f648:	040200b4 	movhi	r16,2050
 800f64c:	dc400115 	stw	r17,4(sp)
 800f650:	842a6204 	addi	r16,r16,-22136
 800f654:	2023883a 	mov	r17,r4
 800f658:	2809883a 	mov	r4,r5
 800f65c:	300b883a 	mov	r5,r6
 800f660:	dfc00215 	stw	ra,8(sp)
 800f664:	80000015 	stw	zero,0(r16)
 800f668:	80132700 	call	8013270 <fstat>
 800f66c:	00ffffc4 	movi	r3,-1
 800f670:	10c00526 	beq	r2,r3,800f688 <_fstat_r+0x48>
 800f674:	dfc00217 	ldw	ra,8(sp)
 800f678:	dc400117 	ldw	r17,4(sp)
 800f67c:	dc000017 	ldw	r16,0(sp)
 800f680:	dec00304 	addi	sp,sp,12
 800f684:	f800283a 	ret
 800f688:	80c00017 	ldw	r3,0(r16)
 800f68c:	183ff926 	beq	r3,zero,800f674 <__alt_data_end+0xfc00f674>
 800f690:	88c00015 	stw	r3,0(r17)
 800f694:	003ff706 	br	800f674 <__alt_data_end+0xfc00f674>

0800f698 <_isatty_r>:
 800f698:	defffd04 	addi	sp,sp,-12
 800f69c:	dc000015 	stw	r16,0(sp)
 800f6a0:	040200b4 	movhi	r16,2050
 800f6a4:	dc400115 	stw	r17,4(sp)
 800f6a8:	842a6204 	addi	r16,r16,-22136
 800f6ac:	2023883a 	mov	r17,r4
 800f6b0:	2809883a 	mov	r4,r5
 800f6b4:	dfc00215 	stw	ra,8(sp)
 800f6b8:	80000015 	stw	zero,0(r16)
 800f6bc:	80133980 	call	8013398 <isatty>
 800f6c0:	00ffffc4 	movi	r3,-1
 800f6c4:	10c00526 	beq	r2,r3,800f6dc <_isatty_r+0x44>
 800f6c8:	dfc00217 	ldw	ra,8(sp)
 800f6cc:	dc400117 	ldw	r17,4(sp)
 800f6d0:	dc000017 	ldw	r16,0(sp)
 800f6d4:	dec00304 	addi	sp,sp,12
 800f6d8:	f800283a 	ret
 800f6dc:	80c00017 	ldw	r3,0(r16)
 800f6e0:	183ff926 	beq	r3,zero,800f6c8 <__alt_data_end+0xfc00f6c8>
 800f6e4:	88c00015 	stw	r3,0(r17)
 800f6e8:	003ff706 	br	800f6c8 <__alt_data_end+0xfc00f6c8>

0800f6ec <_lseek_r>:
 800f6ec:	defffd04 	addi	sp,sp,-12
 800f6f0:	dc000015 	stw	r16,0(sp)
 800f6f4:	040200b4 	movhi	r16,2050
 800f6f8:	dc400115 	stw	r17,4(sp)
 800f6fc:	842a6204 	addi	r16,r16,-22136
 800f700:	2023883a 	mov	r17,r4
 800f704:	2809883a 	mov	r4,r5
 800f708:	300b883a 	mov	r5,r6
 800f70c:	380d883a 	mov	r6,r7
 800f710:	dfc00215 	stw	ra,8(sp)
 800f714:	80000015 	stw	zero,0(r16)
 800f718:	80136f80 	call	80136f8 <lseek>
 800f71c:	00ffffc4 	movi	r3,-1
 800f720:	10c00526 	beq	r2,r3,800f738 <_lseek_r+0x4c>
 800f724:	dfc00217 	ldw	ra,8(sp)
 800f728:	dc400117 	ldw	r17,4(sp)
 800f72c:	dc000017 	ldw	r16,0(sp)
 800f730:	dec00304 	addi	sp,sp,12
 800f734:	f800283a 	ret
 800f738:	80c00017 	ldw	r3,0(r16)
 800f73c:	183ff926 	beq	r3,zero,800f724 <__alt_data_end+0xfc00f724>
 800f740:	88c00015 	stw	r3,0(r17)
 800f744:	003ff706 	br	800f724 <__alt_data_end+0xfc00f724>

0800f748 <_read_r>:
 800f748:	defffd04 	addi	sp,sp,-12
 800f74c:	dc000015 	stw	r16,0(sp)
 800f750:	040200b4 	movhi	r16,2050
 800f754:	dc400115 	stw	r17,4(sp)
 800f758:	842a6204 	addi	r16,r16,-22136
 800f75c:	2023883a 	mov	r17,r4
 800f760:	2809883a 	mov	r4,r5
 800f764:	300b883a 	mov	r5,r6
 800f768:	380d883a 	mov	r6,r7
 800f76c:	dfc00215 	stw	ra,8(sp)
 800f770:	80000015 	stw	zero,0(r16)
 800f774:	80138dc0 	call	80138dc <read>
 800f778:	00ffffc4 	movi	r3,-1
 800f77c:	10c00526 	beq	r2,r3,800f794 <_read_r+0x4c>
 800f780:	dfc00217 	ldw	ra,8(sp)
 800f784:	dc400117 	ldw	r17,4(sp)
 800f788:	dc000017 	ldw	r16,0(sp)
 800f78c:	dec00304 	addi	sp,sp,12
 800f790:	f800283a 	ret
 800f794:	80c00017 	ldw	r3,0(r16)
 800f798:	183ff926 	beq	r3,zero,800f780 <__alt_data_end+0xfc00f780>
 800f79c:	88c00015 	stw	r3,0(r17)
 800f7a0:	003ff706 	br	800f780 <__alt_data_end+0xfc00f780>

0800f7a4 <__swbuf_r>:
 800f7a4:	defffc04 	addi	sp,sp,-16
 800f7a8:	dc800215 	stw	r18,8(sp)
 800f7ac:	dc400115 	stw	r17,4(sp)
 800f7b0:	dc000015 	stw	r16,0(sp)
 800f7b4:	dfc00315 	stw	ra,12(sp)
 800f7b8:	2025883a 	mov	r18,r4
 800f7bc:	2823883a 	mov	r17,r5
 800f7c0:	3021883a 	mov	r16,r6
 800f7c4:	20000226 	beq	r4,zero,800f7d0 <__swbuf_r+0x2c>
 800f7c8:	20800e17 	ldw	r2,56(r4)
 800f7cc:	10004126 	beq	r2,zero,800f8d4 <__swbuf_r+0x130>
 800f7d0:	80c00617 	ldw	r3,24(r16)
 800f7d4:	8180030b 	ldhu	r6,12(r16)
 800f7d8:	80c00215 	stw	r3,8(r16)
 800f7dc:	30c0020c 	andi	r3,r6,8
 800f7e0:	18003526 	beq	r3,zero,800f8b8 <__swbuf_r+0x114>
 800f7e4:	80c00417 	ldw	r3,16(r16)
 800f7e8:	18003326 	beq	r3,zero,800f8b8 <__swbuf_r+0x114>
 800f7ec:	3088000c 	andi	r2,r6,8192
 800f7f0:	8c403fcc 	andi	r17,r17,255
 800f7f4:	10001726 	beq	r2,zero,800f854 <__swbuf_r+0xb0>
 800f7f8:	80800017 	ldw	r2,0(r16)
 800f7fc:	81000517 	ldw	r4,20(r16)
 800f800:	10c7c83a 	sub	r3,r2,r3
 800f804:	19001d0e 	bge	r3,r4,800f87c <__swbuf_r+0xd8>
 800f808:	18c00044 	addi	r3,r3,1
 800f80c:	81400217 	ldw	r5,8(r16)
 800f810:	11000044 	addi	r4,r2,1
 800f814:	81000015 	stw	r4,0(r16)
 800f818:	297fffc4 	addi	r5,r5,-1
 800f81c:	81400215 	stw	r5,8(r16)
 800f820:	14400005 	stb	r17,0(r2)
 800f824:	80800517 	ldw	r2,20(r16)
 800f828:	10c01d26 	beq	r2,r3,800f8a0 <__swbuf_r+0xfc>
 800f82c:	8080030b 	ldhu	r2,12(r16)
 800f830:	1080004c 	andi	r2,r2,1
 800f834:	1000181e 	bne	r2,zero,800f898 <__swbuf_r+0xf4>
 800f838:	8805883a 	mov	r2,r17
 800f83c:	dfc00317 	ldw	ra,12(sp)
 800f840:	dc800217 	ldw	r18,8(sp)
 800f844:	dc400117 	ldw	r17,4(sp)
 800f848:	dc000017 	ldw	r16,0(sp)
 800f84c:	dec00404 	addi	sp,sp,16
 800f850:	f800283a 	ret
 800f854:	81001917 	ldw	r4,100(r16)
 800f858:	00b7ffc4 	movi	r2,-8193
 800f85c:	31880014 	ori	r6,r6,8192
 800f860:	2084703a 	and	r2,r4,r2
 800f864:	80801915 	stw	r2,100(r16)
 800f868:	80800017 	ldw	r2,0(r16)
 800f86c:	81000517 	ldw	r4,20(r16)
 800f870:	8180030d 	sth	r6,12(r16)
 800f874:	10c7c83a 	sub	r3,r2,r3
 800f878:	193fe316 	blt	r3,r4,800f808 <__alt_data_end+0xfc00f808>
 800f87c:	9009883a 	mov	r4,r18
 800f880:	800b883a 	mov	r5,r16
 800f884:	8009af40 	call	8009af4 <_fflush_r>
 800f888:	1000091e 	bne	r2,zero,800f8b0 <__swbuf_r+0x10c>
 800f88c:	80800017 	ldw	r2,0(r16)
 800f890:	00c00044 	movi	r3,1
 800f894:	003fdd06 	br	800f80c <__alt_data_end+0xfc00f80c>
 800f898:	00800284 	movi	r2,10
 800f89c:	88bfe61e 	bne	r17,r2,800f838 <__alt_data_end+0xfc00f838>
 800f8a0:	9009883a 	mov	r4,r18
 800f8a4:	800b883a 	mov	r5,r16
 800f8a8:	8009af40 	call	8009af4 <_fflush_r>
 800f8ac:	103fe226 	beq	r2,zero,800f838 <__alt_data_end+0xfc00f838>
 800f8b0:	00bfffc4 	movi	r2,-1
 800f8b4:	003fe106 	br	800f83c <__alt_data_end+0xfc00f83c>
 800f8b8:	9009883a 	mov	r4,r18
 800f8bc:	800b883a 	mov	r5,r16
 800f8c0:	80080740 	call	8008074 <__swsetup_r>
 800f8c4:	1000051e 	bne	r2,zero,800f8dc <__swbuf_r+0x138>
 800f8c8:	8180030b 	ldhu	r6,12(r16)
 800f8cc:	80c00417 	ldw	r3,16(r16)
 800f8d0:	003fc606 	br	800f7ec <__alt_data_end+0xfc00f7ec>
 800f8d4:	800a0b00 	call	800a0b0 <__sinit>
 800f8d8:	003fbd06 	br	800f7d0 <__alt_data_end+0xfc00f7d0>
 800f8dc:	80c0030b 	ldhu	r3,12(r16)
 800f8e0:	00bfffc4 	movi	r2,-1
 800f8e4:	18c01014 	ori	r3,r3,64
 800f8e8:	80c0030d 	sth	r3,12(r16)
 800f8ec:	00c00244 	movi	r3,9
 800f8f0:	90c00015 	stw	r3,0(r18)
 800f8f4:	003fd106 	br	800f83c <__alt_data_end+0xfc00f83c>

0800f8f8 <__swbuf>:
 800f8f8:	00c200b4 	movhi	r3,2050
 800f8fc:	18e32e04 	addi	r3,r3,-29512
 800f900:	2005883a 	mov	r2,r4
 800f904:	19000017 	ldw	r4,0(r3)
 800f908:	280d883a 	mov	r6,r5
 800f90c:	100b883a 	mov	r5,r2
 800f910:	800f7a41 	jmpi	800f7a4 <__swbuf_r>

0800f914 <_wcrtomb_r>:
 800f914:	defff604 	addi	sp,sp,-40
 800f918:	008200b4 	movhi	r2,2050
 800f91c:	dc800815 	stw	r18,32(sp)
 800f920:	dc400715 	stw	r17,28(sp)
 800f924:	dc000615 	stw	r16,24(sp)
 800f928:	10a33004 	addi	r2,r2,-29504
 800f92c:	dfc00915 	stw	ra,36(sp)
 800f930:	2021883a 	mov	r16,r4
 800f934:	3823883a 	mov	r17,r7
 800f938:	14800017 	ldw	r18,0(r2)
 800f93c:	28001426 	beq	r5,zero,800f990 <_wcrtomb_r+0x7c>
 800f940:	d9400415 	stw	r5,16(sp)
 800f944:	d9800515 	stw	r6,20(sp)
 800f948:	800aba40 	call	800aba4 <__locale_charset>
 800f94c:	d9400417 	ldw	r5,16(sp)
 800f950:	d9800517 	ldw	r6,20(sp)
 800f954:	8009883a 	mov	r4,r16
 800f958:	dc400015 	stw	r17,0(sp)
 800f95c:	100f883a 	mov	r7,r2
 800f960:	903ee83a 	callr	r18
 800f964:	00ffffc4 	movi	r3,-1
 800f968:	10c0031e 	bne	r2,r3,800f978 <_wcrtomb_r+0x64>
 800f96c:	88000015 	stw	zero,0(r17)
 800f970:	00c02284 	movi	r3,138
 800f974:	80c00015 	stw	r3,0(r16)
 800f978:	dfc00917 	ldw	ra,36(sp)
 800f97c:	dc800817 	ldw	r18,32(sp)
 800f980:	dc400717 	ldw	r17,28(sp)
 800f984:	dc000617 	ldw	r16,24(sp)
 800f988:	dec00a04 	addi	sp,sp,40
 800f98c:	f800283a 	ret
 800f990:	800aba40 	call	800aba4 <__locale_charset>
 800f994:	8009883a 	mov	r4,r16
 800f998:	dc400015 	stw	r17,0(sp)
 800f99c:	d9400104 	addi	r5,sp,4
 800f9a0:	000d883a 	mov	r6,zero
 800f9a4:	100f883a 	mov	r7,r2
 800f9a8:	903ee83a 	callr	r18
 800f9ac:	003fed06 	br	800f964 <__alt_data_end+0xfc00f964>

0800f9b0 <wcrtomb>:
 800f9b0:	defff504 	addi	sp,sp,-44
 800f9b4:	dc400515 	stw	r17,20(sp)
 800f9b8:	dc000415 	stw	r16,16(sp)
 800f9bc:	dfc00a15 	stw	ra,40(sp)
 800f9c0:	dd400915 	stw	r21,36(sp)
 800f9c4:	dd000815 	stw	r20,32(sp)
 800f9c8:	dcc00715 	stw	r19,28(sp)
 800f9cc:	dc800615 	stw	r18,24(sp)
 800f9d0:	2021883a 	mov	r16,r4
 800f9d4:	3023883a 	mov	r17,r6
 800f9d8:	20001d26 	beq	r4,zero,800fa50 <wcrtomb+0xa0>
 800f9dc:	048200b4 	movhi	r18,2050
 800f9e0:	94a32e04 	addi	r18,r18,-29512
 800f9e4:	008200b4 	movhi	r2,2050
 800f9e8:	95400017 	ldw	r21,0(r18)
 800f9ec:	10a33004 	addi	r2,r2,-29504
 800f9f0:	15000017 	ldw	r20,0(r2)
 800f9f4:	2827883a 	mov	r19,r5
 800f9f8:	800aba40 	call	800aba4 <__locale_charset>
 800f9fc:	a809883a 	mov	r4,r21
 800fa00:	dc400015 	stw	r17,0(sp)
 800fa04:	800b883a 	mov	r5,r16
 800fa08:	980d883a 	mov	r6,r19
 800fa0c:	100f883a 	mov	r7,r2
 800fa10:	a03ee83a 	callr	r20
 800fa14:	00ffffc4 	movi	r3,-1
 800fa18:	10c0041e 	bne	r2,r3,800fa2c <wcrtomb+0x7c>
 800fa1c:	90c00017 	ldw	r3,0(r18)
 800fa20:	01002284 	movi	r4,138
 800fa24:	88000015 	stw	zero,0(r17)
 800fa28:	19000015 	stw	r4,0(r3)
 800fa2c:	dfc00a17 	ldw	ra,40(sp)
 800fa30:	dd400917 	ldw	r21,36(sp)
 800fa34:	dd000817 	ldw	r20,32(sp)
 800fa38:	dcc00717 	ldw	r19,28(sp)
 800fa3c:	dc800617 	ldw	r18,24(sp)
 800fa40:	dc400517 	ldw	r17,20(sp)
 800fa44:	dc000417 	ldw	r16,16(sp)
 800fa48:	dec00b04 	addi	sp,sp,44
 800fa4c:	f800283a 	ret
 800fa50:	048200b4 	movhi	r18,2050
 800fa54:	94a32e04 	addi	r18,r18,-29512
 800fa58:	008200b4 	movhi	r2,2050
 800fa5c:	94c00017 	ldw	r19,0(r18)
 800fa60:	10a33004 	addi	r2,r2,-29504
 800fa64:	14000017 	ldw	r16,0(r2)
 800fa68:	800aba40 	call	800aba4 <__locale_charset>
 800fa6c:	9809883a 	mov	r4,r19
 800fa70:	dc400015 	stw	r17,0(sp)
 800fa74:	d9400104 	addi	r5,sp,4
 800fa78:	000d883a 	mov	r6,zero
 800fa7c:	100f883a 	mov	r7,r2
 800fa80:	803ee83a 	callr	r16
 800fa84:	003fe306 	br	800fa14 <__alt_data_end+0xfc00fa14>

0800fa88 <__ascii_wctomb>:
 800fa88:	28000526 	beq	r5,zero,800faa0 <__ascii_wctomb+0x18>
 800fa8c:	00803fc4 	movi	r2,255
 800fa90:	11800536 	bltu	r2,r6,800faa8 <__ascii_wctomb+0x20>
 800fa94:	29800005 	stb	r6,0(r5)
 800fa98:	00800044 	movi	r2,1
 800fa9c:	f800283a 	ret
 800faa0:	0005883a 	mov	r2,zero
 800faa4:	f800283a 	ret
 800faa8:	00802284 	movi	r2,138
 800faac:	20800015 	stw	r2,0(r4)
 800fab0:	00bfffc4 	movi	r2,-1
 800fab4:	f800283a 	ret

0800fab8 <_wctomb_r>:
 800fab8:	008200b4 	movhi	r2,2050
 800fabc:	defff904 	addi	sp,sp,-28
 800fac0:	10a33004 	addi	r2,r2,-29504
 800fac4:	dfc00615 	stw	ra,24(sp)
 800fac8:	dc400515 	stw	r17,20(sp)
 800facc:	dc000415 	stw	r16,16(sp)
 800fad0:	3823883a 	mov	r17,r7
 800fad4:	14000017 	ldw	r16,0(r2)
 800fad8:	d9000115 	stw	r4,4(sp)
 800fadc:	d9400215 	stw	r5,8(sp)
 800fae0:	d9800315 	stw	r6,12(sp)
 800fae4:	800aba40 	call	800aba4 <__locale_charset>
 800fae8:	d9000117 	ldw	r4,4(sp)
 800faec:	d9400217 	ldw	r5,8(sp)
 800faf0:	d9800317 	ldw	r6,12(sp)
 800faf4:	dc400015 	stw	r17,0(sp)
 800faf8:	100f883a 	mov	r7,r2
 800fafc:	803ee83a 	callr	r16
 800fb00:	dfc00617 	ldw	ra,24(sp)
 800fb04:	dc400517 	ldw	r17,20(sp)
 800fb08:	dc000417 	ldw	r16,16(sp)
 800fb0c:	dec00704 	addi	sp,sp,28
 800fb10:	f800283a 	ret

0800fb14 <__udivdi3>:
 800fb14:	defff504 	addi	sp,sp,-44
 800fb18:	dcc00415 	stw	r19,16(sp)
 800fb1c:	dc000115 	stw	r16,4(sp)
 800fb20:	dfc00a15 	stw	ra,40(sp)
 800fb24:	df000915 	stw	fp,36(sp)
 800fb28:	ddc00815 	stw	r23,32(sp)
 800fb2c:	dd800715 	stw	r22,28(sp)
 800fb30:	dd400615 	stw	r21,24(sp)
 800fb34:	dd000515 	stw	r20,20(sp)
 800fb38:	dc800315 	stw	r18,12(sp)
 800fb3c:	dc400215 	stw	r17,8(sp)
 800fb40:	2027883a 	mov	r19,r4
 800fb44:	2821883a 	mov	r16,r5
 800fb48:	3800471e 	bne	r7,zero,800fc68 <__udivdi3+0x154>
 800fb4c:	3025883a 	mov	r18,r6
 800fb50:	2023883a 	mov	r17,r4
 800fb54:	2980592e 	bgeu	r5,r6,800fcbc <__udivdi3+0x1a8>
 800fb58:	00bfffd4 	movui	r2,65535
 800fb5c:	2829883a 	mov	r20,r5
 800fb60:	1180b236 	bltu	r2,r6,800fe2c <__udivdi3+0x318>
 800fb64:	00803fc4 	movi	r2,255
 800fb68:	1181622e 	bgeu	r2,r6,80100f4 <__udivdi3+0x5e0>
 800fb6c:	00800204 	movi	r2,8
 800fb70:	1007883a 	mov	r3,r2
 800fb74:	3084d83a 	srl	r2,r6,r2
 800fb78:	01020074 	movhi	r4,2049
 800fb7c:	211bc604 	addi	r4,r4,28440
 800fb80:	2085883a 	add	r2,r4,r2
 800fb84:	11000003 	ldbu	r4,0(r2)
 800fb88:	20c9883a 	add	r4,r4,r3
 800fb8c:	00c00804 	movi	r3,32
 800fb90:	1907c83a 	sub	r3,r3,r4
 800fb94:	18000526 	beq	r3,zero,800fbac <__udivdi3+0x98>
 800fb98:	80e0983a 	sll	r16,r16,r3
 800fb9c:	9908d83a 	srl	r4,r19,r4
 800fba0:	30e4983a 	sll	r18,r6,r3
 800fba4:	98e2983a 	sll	r17,r19,r3
 800fba8:	8128b03a 	or	r20,r16,r4
 800fbac:	902ad43a 	srli	r21,r18,16
 800fbb0:	a009883a 	mov	r4,r20
 800fbb4:	95bfffcc 	andi	r22,r18,65535
 800fbb8:	a80b883a 	mov	r5,r21
 800fbbc:	80108940 	call	8010894 <__umodsi3>
 800fbc0:	a009883a 	mov	r4,r20
 800fbc4:	a80b883a 	mov	r5,r21
 800fbc8:	102f883a 	mov	r23,r2
 800fbcc:	801088c0 	call	801088c <__udivsi3>
 800fbd0:	1009883a 	mov	r4,r2
 800fbd4:	b00b883a 	mov	r5,r22
 800fbd8:	1021883a 	mov	r16,r2
 800fbdc:	80027f80 	call	80027f8 <__mulsi3>
 800fbe0:	b82e943a 	slli	r23,r23,16
 800fbe4:	8808d43a 	srli	r4,r17,16
 800fbe8:	b906b03a 	or	r3,r23,r4
 800fbec:	1880052e 	bgeu	r3,r2,800fc04 <__udivdi3+0xf0>
 800fbf0:	1c87883a 	add	r3,r3,r18
 800fbf4:	813fffc4 	addi	r4,r16,-1
 800fbf8:	1c800136 	bltu	r3,r18,800fc00 <__udivdi3+0xec>
 800fbfc:	18815236 	bltu	r3,r2,8010148 <__udivdi3+0x634>
 800fc00:	2021883a 	mov	r16,r4
 800fc04:	18a7c83a 	sub	r19,r3,r2
 800fc08:	9809883a 	mov	r4,r19
 800fc0c:	a80b883a 	mov	r5,r21
 800fc10:	80108940 	call	8010894 <__umodsi3>
 800fc14:	1029883a 	mov	r20,r2
 800fc18:	9809883a 	mov	r4,r19
 800fc1c:	a80b883a 	mov	r5,r21
 800fc20:	a028943a 	slli	r20,r20,16
 800fc24:	801088c0 	call	801088c <__udivsi3>
 800fc28:	1009883a 	mov	r4,r2
 800fc2c:	b00b883a 	mov	r5,r22
 800fc30:	8c7fffcc 	andi	r17,r17,65535
 800fc34:	1027883a 	mov	r19,r2
 800fc38:	a462b03a 	or	r17,r20,r17
 800fc3c:	80027f80 	call	80027f8 <__mulsi3>
 800fc40:	8880052e 	bgeu	r17,r2,800fc58 <__udivdi3+0x144>
 800fc44:	8ca3883a 	add	r17,r17,r18
 800fc48:	98ffffc4 	addi	r3,r19,-1
 800fc4c:	8c811036 	bltu	r17,r18,8010090 <__udivdi3+0x57c>
 800fc50:	88810f2e 	bgeu	r17,r2,8010090 <__udivdi3+0x57c>
 800fc54:	9cffff84 	addi	r19,r19,-2
 800fc58:	8020943a 	slli	r16,r16,16
 800fc5c:	0007883a 	mov	r3,zero
 800fc60:	9c04b03a 	or	r2,r19,r16
 800fc64:	00006006 	br	800fde8 <__udivdi3+0x2d4>
 800fc68:	29c05d36 	bltu	r5,r7,800fde0 <__udivdi3+0x2cc>
 800fc6c:	00bfffd4 	movui	r2,65535
 800fc70:	11c0692e 	bgeu	r2,r7,800fe18 <__udivdi3+0x304>
 800fc74:	00804034 	movhi	r2,256
 800fc78:	10bfffc4 	addi	r2,r2,-1
 800fc7c:	11c10e2e 	bgeu	r2,r7,80100b8 <__udivdi3+0x5a4>
 800fc80:	01400604 	movi	r5,24
 800fc84:	2811883a 	mov	r8,r5
 800fc88:	394ad83a 	srl	r5,r7,r5
 800fc8c:	00820074 	movhi	r2,2049
 800fc90:	109bc604 	addi	r2,r2,28440
 800fc94:	114b883a 	add	r5,r2,r5
 800fc98:	29400003 	ldbu	r5,0(r5)
 800fc9c:	00c00804 	movi	r3,32
 800fca0:	2a0b883a 	add	r5,r5,r8
 800fca4:	196fc83a 	sub	r23,r3,r5
 800fca8:	b8006b1e 	bne	r23,zero,800fe58 <__udivdi3+0x344>
 800fcac:	3c011436 	bltu	r7,r16,8010100 <__udivdi3+0x5ec>
 800fcb0:	9985403a 	cmpgeu	r2,r19,r6
 800fcb4:	0007883a 	mov	r3,zero
 800fcb8:	00004b06 	br	800fde8 <__udivdi3+0x2d4>
 800fcbc:	3000041e 	bne	r6,zero,800fcd0 <__udivdi3+0x1bc>
 800fcc0:	01000044 	movi	r4,1
 800fcc4:	000b883a 	mov	r5,zero
 800fcc8:	801088c0 	call	801088c <__udivsi3>
 800fccc:	1025883a 	mov	r18,r2
 800fcd0:	00bfffd4 	movui	r2,65535
 800fcd4:	14805b2e 	bgeu	r2,r18,800fe44 <__udivdi3+0x330>
 800fcd8:	00804034 	movhi	r2,256
 800fcdc:	10bfffc4 	addi	r2,r2,-1
 800fce0:	1480fe2e 	bgeu	r2,r18,80100dc <__udivdi3+0x5c8>
 800fce4:	00800604 	movi	r2,24
 800fce8:	1007883a 	mov	r3,r2
 800fcec:	9084d83a 	srl	r2,r18,r2
 800fcf0:	01020074 	movhi	r4,2049
 800fcf4:	211bc604 	addi	r4,r4,28440
 800fcf8:	2085883a 	add	r2,r4,r2
 800fcfc:	11800003 	ldbu	r6,0(r2)
 800fd00:	01c00804 	movi	r7,32
 800fd04:	30c7883a 	add	r3,r6,r3
 800fd08:	38cfc83a 	sub	r7,r7,r3
 800fd0c:	3800a71e 	bne	r7,zero,800ffac <__udivdi3+0x498>
 800fd10:	9028d43a 	srli	r20,r18,16
 800fd14:	84a1c83a 	sub	r16,r16,r18
 800fd18:	957fffcc 	andi	r21,r18,65535
 800fd1c:	00c00044 	movi	r3,1
 800fd20:	8009883a 	mov	r4,r16
 800fd24:	a00b883a 	mov	r5,r20
 800fd28:	d8c00015 	stw	r3,0(sp)
 800fd2c:	80108940 	call	8010894 <__umodsi3>
 800fd30:	8009883a 	mov	r4,r16
 800fd34:	a00b883a 	mov	r5,r20
 800fd38:	102d883a 	mov	r22,r2
 800fd3c:	801088c0 	call	801088c <__udivsi3>
 800fd40:	1009883a 	mov	r4,r2
 800fd44:	a80b883a 	mov	r5,r21
 800fd48:	1021883a 	mov	r16,r2
 800fd4c:	80027f80 	call	80027f8 <__mulsi3>
 800fd50:	b02c943a 	slli	r22,r22,16
 800fd54:	880ed43a 	srli	r7,r17,16
 800fd58:	d8c00017 	ldw	r3,0(sp)
 800fd5c:	b1ccb03a 	or	r6,r22,r7
 800fd60:	3080052e 	bgeu	r6,r2,800fd78 <__udivdi3+0x264>
 800fd64:	348d883a 	add	r6,r6,r18
 800fd68:	813fffc4 	addi	r4,r16,-1
 800fd6c:	34800136 	bltu	r6,r18,800fd74 <__udivdi3+0x260>
 800fd70:	3080f236 	bltu	r6,r2,801013c <__udivdi3+0x628>
 800fd74:	2021883a 	mov	r16,r4
 800fd78:	30a7c83a 	sub	r19,r6,r2
 800fd7c:	9809883a 	mov	r4,r19
 800fd80:	a00b883a 	mov	r5,r20
 800fd84:	d8c00015 	stw	r3,0(sp)
 800fd88:	80108940 	call	8010894 <__umodsi3>
 800fd8c:	102d883a 	mov	r22,r2
 800fd90:	9809883a 	mov	r4,r19
 800fd94:	a00b883a 	mov	r5,r20
 800fd98:	b02c943a 	slli	r22,r22,16
 800fd9c:	801088c0 	call	801088c <__udivsi3>
 800fda0:	1009883a 	mov	r4,r2
 800fda4:	a80b883a 	mov	r5,r21
 800fda8:	8c7fffcc 	andi	r17,r17,65535
 800fdac:	1027883a 	mov	r19,r2
 800fdb0:	b462b03a 	or	r17,r22,r17
 800fdb4:	80027f80 	call	80027f8 <__mulsi3>
 800fdb8:	d8c00017 	ldw	r3,0(sp)
 800fdbc:	8880052e 	bgeu	r17,r2,800fdd4 <__udivdi3+0x2c0>
 800fdc0:	8ca3883a 	add	r17,r17,r18
 800fdc4:	993fffc4 	addi	r4,r19,-1
 800fdc8:	8c80af36 	bltu	r17,r18,8010088 <__udivdi3+0x574>
 800fdcc:	8880ae2e 	bgeu	r17,r2,8010088 <__udivdi3+0x574>
 800fdd0:	9cffff84 	addi	r19,r19,-2
 800fdd4:	8020943a 	slli	r16,r16,16
 800fdd8:	9c04b03a 	or	r2,r19,r16
 800fddc:	00000206 	br	800fde8 <__udivdi3+0x2d4>
 800fde0:	0007883a 	mov	r3,zero
 800fde4:	0005883a 	mov	r2,zero
 800fde8:	dfc00a17 	ldw	ra,40(sp)
 800fdec:	df000917 	ldw	fp,36(sp)
 800fdf0:	ddc00817 	ldw	r23,32(sp)
 800fdf4:	dd800717 	ldw	r22,28(sp)
 800fdf8:	dd400617 	ldw	r21,24(sp)
 800fdfc:	dd000517 	ldw	r20,20(sp)
 800fe00:	dcc00417 	ldw	r19,16(sp)
 800fe04:	dc800317 	ldw	r18,12(sp)
 800fe08:	dc400217 	ldw	r17,8(sp)
 800fe0c:	dc000117 	ldw	r16,4(sp)
 800fe10:	dec00b04 	addi	sp,sp,44
 800fe14:	f800283a 	ret
 800fe18:	00803fc4 	movi	r2,255
 800fe1c:	11c0a92e 	bgeu	r2,r7,80100c4 <__udivdi3+0x5b0>
 800fe20:	01400204 	movi	r5,8
 800fe24:	2811883a 	mov	r8,r5
 800fe28:	003f9706 	br	800fc88 <__alt_data_end+0xfc00fc88>
 800fe2c:	00804034 	movhi	r2,256
 800fe30:	10bfffc4 	addi	r2,r2,-1
 800fe34:	1180a62e 	bgeu	r2,r6,80100d0 <__udivdi3+0x5bc>
 800fe38:	00800604 	movi	r2,24
 800fe3c:	1007883a 	mov	r3,r2
 800fe40:	003f4c06 	br	800fb74 <__alt_data_end+0xfc00fb74>
 800fe44:	00803fc4 	movi	r2,255
 800fe48:	1480a72e 	bgeu	r2,r18,80100e8 <__udivdi3+0x5d4>
 800fe4c:	00800204 	movi	r2,8
 800fe50:	1007883a 	mov	r3,r2
 800fe54:	003fa506 	br	800fcec <__alt_data_end+0xfc00fcec>
 800fe58:	3178d83a 	srl	fp,r6,r5
 800fe5c:	3dce983a 	sll	r7,r7,r23
 800fe60:	8168d83a 	srl	r20,r16,r5
 800fe64:	9950d83a 	srl	r8,r19,r5
 800fe68:	3f38b03a 	or	fp,r7,fp
 800fe6c:	e024d43a 	srli	r18,fp,16
 800fe70:	85e0983a 	sll	r16,r16,r23
 800fe74:	a009883a 	mov	r4,r20
 800fe78:	900b883a 	mov	r5,r18
 800fe7c:	8220b03a 	or	r16,r16,r8
 800fe80:	35ea983a 	sll	r21,r6,r23
 800fe84:	80108940 	call	8010894 <__umodsi3>
 800fe88:	a009883a 	mov	r4,r20
 800fe8c:	900b883a 	mov	r5,r18
 800fe90:	1023883a 	mov	r17,r2
 800fe94:	e5bfffcc 	andi	r22,fp,65535
 800fe98:	801088c0 	call	801088c <__udivsi3>
 800fe9c:	1009883a 	mov	r4,r2
 800fea0:	b00b883a 	mov	r5,r22
 800fea4:	1029883a 	mov	r20,r2
 800fea8:	80027f80 	call	80027f8 <__mulsi3>
 800feac:	8806943a 	slli	r3,r17,16
 800feb0:	8014d43a 	srli	r10,r16,16
 800feb4:	1a92b03a 	or	r9,r3,r10
 800feb8:	4880042e 	bgeu	r9,r2,800fecc <__udivdi3+0x3b8>
 800febc:	4f13883a 	add	r9,r9,fp
 800fec0:	a0ffffc4 	addi	r3,r20,-1
 800fec4:	4f00952e 	bgeu	r9,fp,801011c <__udivdi3+0x608>
 800fec8:	1829883a 	mov	r20,r3
 800fecc:	48a3c83a 	sub	r17,r9,r2
 800fed0:	8809883a 	mov	r4,r17
 800fed4:	900b883a 	mov	r5,r18
 800fed8:	80108940 	call	8010894 <__umodsi3>
 800fedc:	8809883a 	mov	r4,r17
 800fee0:	900b883a 	mov	r5,r18
 800fee4:	d8800015 	stw	r2,0(sp)
 800fee8:	801088c0 	call	801088c <__udivsi3>
 800feec:	1009883a 	mov	r4,r2
 800fef0:	b00b883a 	mov	r5,r22
 800fef4:	1023883a 	mov	r17,r2
 800fef8:	80027f80 	call	80027f8 <__mulsi3>
 800fefc:	d8c00017 	ldw	r3,0(sp)
 800ff00:	823fffcc 	andi	r8,r16,65535
 800ff04:	1806943a 	slli	r3,r3,16
 800ff08:	1a20b03a 	or	r16,r3,r8
 800ff0c:	8080042e 	bgeu	r16,r2,800ff20 <__udivdi3+0x40c>
 800ff10:	8721883a 	add	r16,r16,fp
 800ff14:	88ffffc4 	addi	r3,r17,-1
 800ff18:	87007c2e 	bgeu	r16,fp,801010c <__udivdi3+0x5f8>
 800ff1c:	1823883a 	mov	r17,r3
 800ff20:	a028943a 	slli	r20,r20,16
 800ff24:	acbfffcc 	andi	r18,r21,65535
 800ff28:	900b883a 	mov	r5,r18
 800ff2c:	8d28b03a 	or	r20,r17,r20
 800ff30:	a022d43a 	srli	r17,r20,16
 800ff34:	a5bfffcc 	andi	r22,r20,65535
 800ff38:	b009883a 	mov	r4,r22
 800ff3c:	a82ad43a 	srli	r21,r21,16
 800ff40:	80a1c83a 	sub	r16,r16,r2
 800ff44:	80027f80 	call	80027f8 <__mulsi3>
 800ff48:	8809883a 	mov	r4,r17
 800ff4c:	900b883a 	mov	r5,r18
 800ff50:	1039883a 	mov	fp,r2
 800ff54:	80027f80 	call	80027f8 <__mulsi3>
 800ff58:	8809883a 	mov	r4,r17
 800ff5c:	a80b883a 	mov	r5,r21
 800ff60:	1025883a 	mov	r18,r2
 800ff64:	80027f80 	call	80027f8 <__mulsi3>
 800ff68:	b009883a 	mov	r4,r22
 800ff6c:	a80b883a 	mov	r5,r21
 800ff70:	1023883a 	mov	r17,r2
 800ff74:	80027f80 	call	80027f8 <__mulsi3>
 800ff78:	e006d43a 	srli	r3,fp,16
 800ff7c:	9085883a 	add	r2,r18,r2
 800ff80:	10c7883a 	add	r3,r2,r3
 800ff84:	1c80022e 	bgeu	r3,r18,800ff90 <__udivdi3+0x47c>
 800ff88:	00800074 	movhi	r2,1
 800ff8c:	88a3883a 	add	r17,r17,r2
 800ff90:	1808d43a 	srli	r4,r3,16
 800ff94:	8909883a 	add	r4,r17,r4
 800ff98:	81004436 	bltu	r16,r4,80100ac <__udivdi3+0x598>
 800ff9c:	81003e26 	beq	r16,r4,8010098 <__udivdi3+0x584>
 800ffa0:	a005883a 	mov	r2,r20
 800ffa4:	0007883a 	mov	r3,zero
 800ffa8:	003f8f06 	br	800fde8 <__alt_data_end+0xfc00fde8>
 800ffac:	91e4983a 	sll	r18,r18,r7
 800ffb0:	80eed83a 	srl	r23,r16,r3
 800ffb4:	81cc983a 	sll	r6,r16,r7
 800ffb8:	9028d43a 	srli	r20,r18,16
 800ffbc:	98c6d83a 	srl	r3,r19,r3
 800ffc0:	b809883a 	mov	r4,r23
 800ffc4:	a00b883a 	mov	r5,r20
 800ffc8:	30ecb03a 	or	r22,r6,r3
 800ffcc:	99e2983a 	sll	r17,r19,r7
 800ffd0:	80108940 	call	8010894 <__umodsi3>
 800ffd4:	b809883a 	mov	r4,r23
 800ffd8:	a00b883a 	mov	r5,r20
 800ffdc:	1021883a 	mov	r16,r2
 800ffe0:	957fffcc 	andi	r21,r18,65535
 800ffe4:	801088c0 	call	801088c <__udivsi3>
 800ffe8:	a80b883a 	mov	r5,r21
 800ffec:	1009883a 	mov	r4,r2
 800fff0:	102f883a 	mov	r23,r2
 800fff4:	80027f80 	call	80027f8 <__mulsi3>
 800fff8:	8020943a 	slli	r16,r16,16
 800fffc:	b00ad43a 	srli	r5,r22,16
 8010000:	814cb03a 	or	r6,r16,r5
 8010004:	3080062e 	bgeu	r6,r2,8010020 <__udivdi3+0x50c>
 8010008:	348d883a 	add	r6,r6,r18
 801000c:	b8ffffc4 	addi	r3,r23,-1
 8010010:	34804836 	bltu	r6,r18,8010134 <__udivdi3+0x620>
 8010014:	3080472e 	bgeu	r6,r2,8010134 <__udivdi3+0x620>
 8010018:	bdffff84 	addi	r23,r23,-2
 801001c:	348d883a 	add	r6,r6,r18
 8010020:	30a7c83a 	sub	r19,r6,r2
 8010024:	9809883a 	mov	r4,r19
 8010028:	a00b883a 	mov	r5,r20
 801002c:	80108940 	call	8010894 <__umodsi3>
 8010030:	9809883a 	mov	r4,r19
 8010034:	a00b883a 	mov	r5,r20
 8010038:	1039883a 	mov	fp,r2
 801003c:	801088c0 	call	801088c <__udivsi3>
 8010040:	1009883a 	mov	r4,r2
 8010044:	a80b883a 	mov	r5,r21
 8010048:	e038943a 	slli	fp,fp,16
 801004c:	1027883a 	mov	r19,r2
 8010050:	80027f80 	call	80027f8 <__mulsi3>
 8010054:	b1bfffcc 	andi	r6,r22,65535
 8010058:	e18cb03a 	or	r6,fp,r6
 801005c:	3080062e 	bgeu	r6,r2,8010078 <__udivdi3+0x564>
 8010060:	348d883a 	add	r6,r6,r18
 8010064:	98ffffc4 	addi	r3,r19,-1
 8010068:	34803036 	bltu	r6,r18,801012c <__udivdi3+0x618>
 801006c:	30802f2e 	bgeu	r6,r2,801012c <__udivdi3+0x618>
 8010070:	9cffff84 	addi	r19,r19,-2
 8010074:	348d883a 	add	r6,r6,r18
 8010078:	b82e943a 	slli	r23,r23,16
 801007c:	30a1c83a 	sub	r16,r6,r2
 8010080:	9dc6b03a 	or	r3,r19,r23
 8010084:	003f2606 	br	800fd20 <__alt_data_end+0xfc00fd20>
 8010088:	2027883a 	mov	r19,r4
 801008c:	003f5106 	br	800fdd4 <__alt_data_end+0xfc00fdd4>
 8010090:	1827883a 	mov	r19,r3
 8010094:	003ef006 	br	800fc58 <__alt_data_end+0xfc00fc58>
 8010098:	1808943a 	slli	r4,r3,16
 801009c:	9dc6983a 	sll	r3,r19,r23
 80100a0:	e73fffcc 	andi	fp,fp,65535
 80100a4:	2709883a 	add	r4,r4,fp
 80100a8:	193fbd2e 	bgeu	r3,r4,800ffa0 <__alt_data_end+0xfc00ffa0>
 80100ac:	a0bfffc4 	addi	r2,r20,-1
 80100b0:	0007883a 	mov	r3,zero
 80100b4:	003f4c06 	br	800fde8 <__alt_data_end+0xfc00fde8>
 80100b8:	01400404 	movi	r5,16
 80100bc:	2811883a 	mov	r8,r5
 80100c0:	003ef106 	br	800fc88 <__alt_data_end+0xfc00fc88>
 80100c4:	000b883a 	mov	r5,zero
 80100c8:	0011883a 	mov	r8,zero
 80100cc:	003eee06 	br	800fc88 <__alt_data_end+0xfc00fc88>
 80100d0:	00800404 	movi	r2,16
 80100d4:	1007883a 	mov	r3,r2
 80100d8:	003ea606 	br	800fb74 <__alt_data_end+0xfc00fb74>
 80100dc:	00800404 	movi	r2,16
 80100e0:	1007883a 	mov	r3,r2
 80100e4:	003f0106 	br	800fcec <__alt_data_end+0xfc00fcec>
 80100e8:	0005883a 	mov	r2,zero
 80100ec:	0007883a 	mov	r3,zero
 80100f0:	003efe06 	br	800fcec <__alt_data_end+0xfc00fcec>
 80100f4:	0005883a 	mov	r2,zero
 80100f8:	0007883a 	mov	r3,zero
 80100fc:	003e9d06 	br	800fb74 <__alt_data_end+0xfc00fb74>
 8010100:	0007883a 	mov	r3,zero
 8010104:	00800044 	movi	r2,1
 8010108:	003f3706 	br	800fde8 <__alt_data_end+0xfc00fde8>
 801010c:	80bf832e 	bgeu	r16,r2,800ff1c <__alt_data_end+0xfc00ff1c>
 8010110:	8c7fff84 	addi	r17,r17,-2
 8010114:	8721883a 	add	r16,r16,fp
 8010118:	003f8106 	br	800ff20 <__alt_data_end+0xfc00ff20>
 801011c:	48bf6a2e 	bgeu	r9,r2,800fec8 <__alt_data_end+0xfc00fec8>
 8010120:	a53fff84 	addi	r20,r20,-2
 8010124:	4f13883a 	add	r9,r9,fp
 8010128:	003f6806 	br	800fecc <__alt_data_end+0xfc00fecc>
 801012c:	1827883a 	mov	r19,r3
 8010130:	003fd106 	br	8010078 <__alt_data_end+0xfc010078>
 8010134:	182f883a 	mov	r23,r3
 8010138:	003fb906 	br	8010020 <__alt_data_end+0xfc010020>
 801013c:	843fff84 	addi	r16,r16,-2
 8010140:	348d883a 	add	r6,r6,r18
 8010144:	003f0c06 	br	800fd78 <__alt_data_end+0xfc00fd78>
 8010148:	843fff84 	addi	r16,r16,-2
 801014c:	1c87883a 	add	r3,r3,r18
 8010150:	003eac06 	br	800fc04 <__alt_data_end+0xfc00fc04>

08010154 <__umoddi3>:
 8010154:	defff404 	addi	sp,sp,-48
 8010158:	dd800815 	stw	r22,32(sp)
 801015c:	dc400315 	stw	r17,12(sp)
 8010160:	dc000215 	stw	r16,8(sp)
 8010164:	dfc00b15 	stw	ra,44(sp)
 8010168:	df000a15 	stw	fp,40(sp)
 801016c:	ddc00915 	stw	r23,36(sp)
 8010170:	dd400715 	stw	r21,28(sp)
 8010174:	dd000615 	stw	r20,24(sp)
 8010178:	dcc00515 	stw	r19,20(sp)
 801017c:	dc800415 	stw	r18,16(sp)
 8010180:	2021883a 	mov	r16,r4
 8010184:	2823883a 	mov	r17,r5
 8010188:	282d883a 	mov	r22,r5
 801018c:	38003c1e 	bne	r7,zero,8010280 <__umoddi3+0x12c>
 8010190:	3027883a 	mov	r19,r6
 8010194:	2029883a 	mov	r20,r4
 8010198:	2980522e 	bgeu	r5,r6,80102e4 <__umoddi3+0x190>
 801019c:	00bfffd4 	movui	r2,65535
 80101a0:	1180a436 	bltu	r2,r6,8010434 <__umoddi3+0x2e0>
 80101a4:	00803fc4 	movi	r2,255
 80101a8:	11815e2e 	bgeu	r2,r6,8010724 <__umoddi3+0x5d0>
 80101ac:	01400204 	movi	r5,8
 80101b0:	2805883a 	mov	r2,r5
 80101b4:	314ad83a 	srl	r5,r6,r5
 80101b8:	00c20074 	movhi	r3,2049
 80101bc:	18dbc604 	addi	r3,r3,28440
 80101c0:	194b883a 	add	r5,r3,r5
 80101c4:	29000003 	ldbu	r4,0(r5)
 80101c8:	2089883a 	add	r4,r4,r2
 80101cc:	00800804 	movi	r2,32
 80101d0:	1105c83a 	sub	r2,r2,r4
 80101d4:	10010c26 	beq	r2,zero,8010608 <__umoddi3+0x4b4>
 80101d8:	88a2983a 	sll	r17,r17,r2
 80101dc:	8108d83a 	srl	r4,r16,r4
 80101e0:	30a6983a 	sll	r19,r6,r2
 80101e4:	80a8983a 	sll	r20,r16,r2
 80101e8:	1025883a 	mov	r18,r2
 80101ec:	892cb03a 	or	r22,r17,r4
 80101f0:	9822d43a 	srli	r17,r19,16
 80101f4:	b009883a 	mov	r4,r22
 80101f8:	9d7fffcc 	andi	r21,r19,65535
 80101fc:	880b883a 	mov	r5,r17
 8010200:	80108940 	call	8010894 <__umodsi3>
 8010204:	b009883a 	mov	r4,r22
 8010208:	880b883a 	mov	r5,r17
 801020c:	102f883a 	mov	r23,r2
 8010210:	801088c0 	call	801088c <__udivsi3>
 8010214:	1009883a 	mov	r4,r2
 8010218:	a80b883a 	mov	r5,r21
 801021c:	80027f80 	call	80027f8 <__mulsi3>
 8010220:	b82e943a 	slli	r23,r23,16
 8010224:	a008d43a 	srli	r4,r20,16
 8010228:	b906b03a 	or	r3,r23,r4
 801022c:	1880042e 	bgeu	r3,r2,8010240 <__umoddi3+0xec>
 8010230:	1cc7883a 	add	r3,r3,r19
 8010234:	1cc00236 	bltu	r3,r19,8010240 <__umoddi3+0xec>
 8010238:	1880012e 	bgeu	r3,r2,8010240 <__umoddi3+0xec>
 801023c:	1cc7883a 	add	r3,r3,r19
 8010240:	18a1c83a 	sub	r16,r3,r2
 8010244:	8009883a 	mov	r4,r16
 8010248:	880b883a 	mov	r5,r17
 801024c:	80108940 	call	8010894 <__umodsi3>
 8010250:	8009883a 	mov	r4,r16
 8010254:	880b883a 	mov	r5,r17
 8010258:	102d883a 	mov	r22,r2
 801025c:	801088c0 	call	801088c <__udivsi3>
 8010260:	1009883a 	mov	r4,r2
 8010264:	a80b883a 	mov	r5,r21
 8010268:	b02c943a 	slli	r22,r22,16
 801026c:	80027f80 	call	80027f8 <__mulsi3>
 8010270:	a13fffcc 	andi	r4,r20,65535
 8010274:	b106b03a 	or	r3,r22,r4
 8010278:	1880572e 	bgeu	r3,r2,80103d8 <__umoddi3+0x284>
 801027c:	00005206 	br	80103c8 <__umoddi3+0x274>
 8010280:	29c05936 	bltu	r5,r7,80103e8 <__umoddi3+0x294>
 8010284:	00bfffd4 	movui	r2,65535
 8010288:	11c0652e 	bgeu	r2,r7,8010420 <__umoddi3+0x2cc>
 801028c:	00804034 	movhi	r2,256
 8010290:	10bfffc4 	addi	r2,r2,-1
 8010294:	11c1172e 	bgeu	r2,r7,80106f4 <__umoddi3+0x5a0>
 8010298:	01400604 	movi	r5,24
 801029c:	282b883a 	mov	r21,r5
 80102a0:	394ad83a 	srl	r5,r7,r5
 80102a4:	00c20074 	movhi	r3,2049
 80102a8:	18dbc604 	addi	r3,r3,28440
 80102ac:	194b883a 	add	r5,r3,r5
 80102b0:	28800003 	ldbu	r2,0(r5)
 80102b4:	00c00804 	movi	r3,32
 80102b8:	156b883a 	add	r21,r2,r21
 80102bc:	1d69c83a 	sub	r20,r3,r21
 80102c0:	a000671e 	bne	r20,zero,8010460 <__umoddi3+0x30c>
 80102c4:	3c400136 	bltu	r7,r17,80102cc <__umoddi3+0x178>
 80102c8:	81812336 	bltu	r16,r6,8010758 <__umoddi3+0x604>
 80102cc:	8185c83a 	sub	r2,r16,r6
 80102d0:	89e3c83a 	sub	r17,r17,r7
 80102d4:	8087803a 	cmpltu	r3,r16,r2
 80102d8:	88edc83a 	sub	r22,r17,r3
 80102dc:	b007883a 	mov	r3,r22
 80102e0:	00004306 	br	80103f0 <__umoddi3+0x29c>
 80102e4:	3000041e 	bne	r6,zero,80102f8 <__umoddi3+0x1a4>
 80102e8:	01000044 	movi	r4,1
 80102ec:	000b883a 	mov	r5,zero
 80102f0:	801088c0 	call	801088c <__udivsi3>
 80102f4:	1027883a 	mov	r19,r2
 80102f8:	00bfffd4 	movui	r2,65535
 80102fc:	14c0532e 	bgeu	r2,r19,801044c <__umoddi3+0x2f8>
 8010300:	00804034 	movhi	r2,256
 8010304:	10bfffc4 	addi	r2,r2,-1
 8010308:	14c1032e 	bgeu	r2,r19,8010718 <__umoddi3+0x5c4>
 801030c:	00800604 	movi	r2,24
 8010310:	1007883a 	mov	r3,r2
 8010314:	9884d83a 	srl	r2,r19,r2
 8010318:	01020074 	movhi	r4,2049
 801031c:	211bc604 	addi	r4,r4,28440
 8010320:	2085883a 	add	r2,r4,r2
 8010324:	11000003 	ldbu	r4,0(r2)
 8010328:	00800804 	movi	r2,32
 801032c:	20c7883a 	add	r3,r4,r3
 8010330:	10c5c83a 	sub	r2,r2,r3
 8010334:	1000b61e 	bne	r2,zero,8010610 <__umoddi3+0x4bc>
 8010338:	982ad43a 	srli	r21,r19,16
 801033c:	8ce3c83a 	sub	r17,r17,r19
 8010340:	9dbfffcc 	andi	r22,r19,65535
 8010344:	0025883a 	mov	r18,zero
 8010348:	8809883a 	mov	r4,r17
 801034c:	a80b883a 	mov	r5,r21
 8010350:	80108940 	call	8010894 <__umodsi3>
 8010354:	8809883a 	mov	r4,r17
 8010358:	a80b883a 	mov	r5,r21
 801035c:	102f883a 	mov	r23,r2
 8010360:	801088c0 	call	801088c <__udivsi3>
 8010364:	1009883a 	mov	r4,r2
 8010368:	b00b883a 	mov	r5,r22
 801036c:	80027f80 	call	80027f8 <__mulsi3>
 8010370:	b82e943a 	slli	r23,r23,16
 8010374:	a008d43a 	srli	r4,r20,16
 8010378:	b906b03a 	or	r3,r23,r4
 801037c:	1880032e 	bgeu	r3,r2,801038c <__umoddi3+0x238>
 8010380:	1cc7883a 	add	r3,r3,r19
 8010384:	1cc00136 	bltu	r3,r19,801038c <__umoddi3+0x238>
 8010388:	1880f136 	bltu	r3,r2,8010750 <__umoddi3+0x5fc>
 801038c:	18a1c83a 	sub	r16,r3,r2
 8010390:	8009883a 	mov	r4,r16
 8010394:	a80b883a 	mov	r5,r21
 8010398:	80108940 	call	8010894 <__umodsi3>
 801039c:	8009883a 	mov	r4,r16
 80103a0:	a80b883a 	mov	r5,r21
 80103a4:	1023883a 	mov	r17,r2
 80103a8:	801088c0 	call	801088c <__udivsi3>
 80103ac:	1009883a 	mov	r4,r2
 80103b0:	b00b883a 	mov	r5,r22
 80103b4:	8822943a 	slli	r17,r17,16
 80103b8:	80027f80 	call	80027f8 <__mulsi3>
 80103bc:	a13fffcc 	andi	r4,r20,65535
 80103c0:	8906b03a 	or	r3,r17,r4
 80103c4:	1880042e 	bgeu	r3,r2,80103d8 <__umoddi3+0x284>
 80103c8:	1cc7883a 	add	r3,r3,r19
 80103cc:	1cc00236 	bltu	r3,r19,80103d8 <__umoddi3+0x284>
 80103d0:	1880012e 	bgeu	r3,r2,80103d8 <__umoddi3+0x284>
 80103d4:	1cc7883a 	add	r3,r3,r19
 80103d8:	1887c83a 	sub	r3,r3,r2
 80103dc:	1c84d83a 	srl	r2,r3,r18
 80103e0:	0007883a 	mov	r3,zero
 80103e4:	00000206 	br	80103f0 <__umoddi3+0x29c>
 80103e8:	2005883a 	mov	r2,r4
 80103ec:	2807883a 	mov	r3,r5
 80103f0:	dfc00b17 	ldw	ra,44(sp)
 80103f4:	df000a17 	ldw	fp,40(sp)
 80103f8:	ddc00917 	ldw	r23,36(sp)
 80103fc:	dd800817 	ldw	r22,32(sp)
 8010400:	dd400717 	ldw	r21,28(sp)
 8010404:	dd000617 	ldw	r20,24(sp)
 8010408:	dcc00517 	ldw	r19,20(sp)
 801040c:	dc800417 	ldw	r18,16(sp)
 8010410:	dc400317 	ldw	r17,12(sp)
 8010414:	dc000217 	ldw	r16,8(sp)
 8010418:	dec00c04 	addi	sp,sp,48
 801041c:	f800283a 	ret
 8010420:	00803fc4 	movi	r2,255
 8010424:	11c0b02e 	bgeu	r2,r7,80106e8 <__umoddi3+0x594>
 8010428:	01400204 	movi	r5,8
 801042c:	282b883a 	mov	r21,r5
 8010430:	003f9b06 	br	80102a0 <__alt_data_end+0xfc0102a0>
 8010434:	00804034 	movhi	r2,256
 8010438:	10bfffc4 	addi	r2,r2,-1
 801043c:	1180b02e 	bgeu	r2,r6,8010700 <__umoddi3+0x5ac>
 8010440:	01400604 	movi	r5,24
 8010444:	2805883a 	mov	r2,r5
 8010448:	003f5a06 	br	80101b4 <__alt_data_end+0xfc0101b4>
 801044c:	00803fc4 	movi	r2,255
 8010450:	14c0ae2e 	bgeu	r2,r19,801070c <__umoddi3+0x5b8>
 8010454:	00800204 	movi	r2,8
 8010458:	1007883a 	mov	r3,r2
 801045c:	003fad06 	br	8010314 <__alt_data_end+0xfc010314>
 8010460:	3d0a983a 	sll	r5,r7,r20
 8010464:	356cd83a 	srl	r22,r6,r21
 8010468:	8d78d83a 	srl	fp,r17,r21
 801046c:	8d10983a 	sll	r8,r17,r20
 8010470:	2dacb03a 	or	r22,r5,r22
 8010474:	b02ed43a 	srli	r23,r22,16
 8010478:	8564d83a 	srl	r18,r16,r21
 801047c:	e009883a 	mov	r4,fp
 8010480:	b80b883a 	mov	r5,r23
 8010484:	44a4b03a 	or	r18,r8,r18
 8010488:	3526983a 	sll	r19,r6,r20
 801048c:	80108940 	call	8010894 <__umodsi3>
 8010490:	e009883a 	mov	r4,fp
 8010494:	b80b883a 	mov	r5,r23
 8010498:	b47fffcc 	andi	r17,r22,65535
 801049c:	d8800015 	stw	r2,0(sp)
 80104a0:	801088c0 	call	801088c <__udivsi3>
 80104a4:	1009883a 	mov	r4,r2
 80104a8:	880b883a 	mov	r5,r17
 80104ac:	1039883a 	mov	fp,r2
 80104b0:	80027f80 	call	80027f8 <__mulsi3>
 80104b4:	d9800017 	ldw	r6,0(sp)
 80104b8:	9008d43a 	srli	r4,r18,16
 80104bc:	8520983a 	sll	r16,r16,r20
 80104c0:	300c943a 	slli	r6,r6,16
 80104c4:	3106b03a 	or	r3,r6,r4
 80104c8:	1880042e 	bgeu	r3,r2,80104dc <__umoddi3+0x388>
 80104cc:	1d87883a 	add	r3,r3,r22
 80104d0:	e13fffc4 	addi	r4,fp,-1
 80104d4:	1d809a2e 	bgeu	r3,r22,8010740 <__umoddi3+0x5ec>
 80104d8:	2039883a 	mov	fp,r4
 80104dc:	1887c83a 	sub	r3,r3,r2
 80104e0:	1809883a 	mov	r4,r3
 80104e4:	b80b883a 	mov	r5,r23
 80104e8:	d8c00115 	stw	r3,4(sp)
 80104ec:	80108940 	call	8010894 <__umodsi3>
 80104f0:	d8c00117 	ldw	r3,4(sp)
 80104f4:	b80b883a 	mov	r5,r23
 80104f8:	d8800015 	stw	r2,0(sp)
 80104fc:	1809883a 	mov	r4,r3
 8010500:	801088c0 	call	801088c <__udivsi3>
 8010504:	880b883a 	mov	r5,r17
 8010508:	1009883a 	mov	r4,r2
 801050c:	102f883a 	mov	r23,r2
 8010510:	80027f80 	call	80027f8 <__mulsi3>
 8010514:	d9800017 	ldw	r6,0(sp)
 8010518:	947fffcc 	andi	r17,r18,65535
 801051c:	300c943a 	slli	r6,r6,16
 8010520:	3464b03a 	or	r18,r6,r17
 8010524:	9080042e 	bgeu	r18,r2,8010538 <__umoddi3+0x3e4>
 8010528:	95a5883a 	add	r18,r18,r22
 801052c:	b8ffffc4 	addi	r3,r23,-1
 8010530:	95807f2e 	bgeu	r18,r22,8010730 <__umoddi3+0x5dc>
 8010534:	182f883a 	mov	r23,r3
 8010538:	e038943a 	slli	fp,fp,16
 801053c:	980cd43a 	srli	r6,r19,16
 8010540:	98ffffcc 	andi	r3,r19,65535
 8010544:	bf38b03a 	or	fp,r23,fp
 8010548:	e02ed43a 	srli	r23,fp,16
 801054c:	e73fffcc 	andi	fp,fp,65535
 8010550:	180b883a 	mov	r5,r3
 8010554:	e009883a 	mov	r4,fp
 8010558:	d9800015 	stw	r6,0(sp)
 801055c:	d8c00115 	stw	r3,4(sp)
 8010560:	90a5c83a 	sub	r18,r18,r2
 8010564:	80027f80 	call	80027f8 <__mulsi3>
 8010568:	d8c00117 	ldw	r3,4(sp)
 801056c:	b809883a 	mov	r4,r23
 8010570:	1023883a 	mov	r17,r2
 8010574:	180b883a 	mov	r5,r3
 8010578:	80027f80 	call	80027f8 <__mulsi3>
 801057c:	d9800017 	ldw	r6,0(sp)
 8010580:	b809883a 	mov	r4,r23
 8010584:	d8800115 	stw	r2,4(sp)
 8010588:	300b883a 	mov	r5,r6
 801058c:	302f883a 	mov	r23,r6
 8010590:	80027f80 	call	80027f8 <__mulsi3>
 8010594:	e009883a 	mov	r4,fp
 8010598:	b80b883a 	mov	r5,r23
 801059c:	d8800015 	stw	r2,0(sp)
 80105a0:	80027f80 	call	80027f8 <__mulsi3>
 80105a4:	d8c00117 	ldw	r3,4(sp)
 80105a8:	880cd43a 	srli	r6,r17,16
 80105ac:	d9c00017 	ldw	r7,0(sp)
 80105b0:	1885883a 	add	r2,r3,r2
 80105b4:	118d883a 	add	r6,r2,r6
 80105b8:	30c0022e 	bgeu	r6,r3,80105c4 <__umoddi3+0x470>
 80105bc:	00800074 	movhi	r2,1
 80105c0:	388f883a 	add	r7,r7,r2
 80105c4:	3006d43a 	srli	r3,r6,16
 80105c8:	300c943a 	slli	r6,r6,16
 80105cc:	8c7fffcc 	andi	r17,r17,65535
 80105d0:	38c7883a 	add	r3,r7,r3
 80105d4:	3463883a 	add	r17,r6,r17
 80105d8:	90c03d36 	bltu	r18,r3,80106d0 <__umoddi3+0x57c>
 80105dc:	90c06026 	beq	r18,r3,8010760 <__umoddi3+0x60c>
 80105e0:	90c9c83a 	sub	r4,r18,r3
 80105e4:	880f883a 	mov	r7,r17
 80105e8:	81cfc83a 	sub	r7,r16,r7
 80105ec:	81c7803a 	cmpltu	r3,r16,r7
 80105f0:	20c7c83a 	sub	r3,r4,r3
 80105f4:	1d44983a 	sll	r2,r3,r21
 80105f8:	3d0ed83a 	srl	r7,r7,r20
 80105fc:	1d06d83a 	srl	r3,r3,r20
 8010600:	11c4b03a 	or	r2,r2,r7
 8010604:	003f7a06 	br	80103f0 <__alt_data_end+0xfc0103f0>
 8010608:	0025883a 	mov	r18,zero
 801060c:	003ef806 	br	80101f0 <__alt_data_end+0xfc0101f0>
 8010610:	98a6983a 	sll	r19,r19,r2
 8010614:	88e8d83a 	srl	r20,r17,r3
 8010618:	80c6d83a 	srl	r3,r16,r3
 801061c:	982ad43a 	srli	r21,r19,16
 8010620:	88a2983a 	sll	r17,r17,r2
 8010624:	a009883a 	mov	r4,r20
 8010628:	a80b883a 	mov	r5,r21
 801062c:	88eeb03a 	or	r23,r17,r3
 8010630:	1025883a 	mov	r18,r2
 8010634:	80108940 	call	8010894 <__umodsi3>
 8010638:	a009883a 	mov	r4,r20
 801063c:	a80b883a 	mov	r5,r21
 8010640:	1023883a 	mov	r17,r2
 8010644:	9dbfffcc 	andi	r22,r19,65535
 8010648:	801088c0 	call	801088c <__udivsi3>
 801064c:	1009883a 	mov	r4,r2
 8010650:	b00b883a 	mov	r5,r22
 8010654:	80027f80 	call	80027f8 <__mulsi3>
 8010658:	8822943a 	slli	r17,r17,16
 801065c:	b808d43a 	srli	r4,r23,16
 8010660:	84a8983a 	sll	r20,r16,r18
 8010664:	8906b03a 	or	r3,r17,r4
 8010668:	1880042e 	bgeu	r3,r2,801067c <__umoddi3+0x528>
 801066c:	1cc7883a 	add	r3,r3,r19
 8010670:	1cc00236 	bltu	r3,r19,801067c <__umoddi3+0x528>
 8010674:	1880012e 	bgeu	r3,r2,801067c <__umoddi3+0x528>
 8010678:	1cc7883a 	add	r3,r3,r19
 801067c:	18a1c83a 	sub	r16,r3,r2
 8010680:	8009883a 	mov	r4,r16
 8010684:	a80b883a 	mov	r5,r21
 8010688:	80108940 	call	8010894 <__umodsi3>
 801068c:	8009883a 	mov	r4,r16
 8010690:	a80b883a 	mov	r5,r21
 8010694:	1039883a 	mov	fp,r2
 8010698:	801088c0 	call	801088c <__udivsi3>
 801069c:	1009883a 	mov	r4,r2
 80106a0:	b00b883a 	mov	r5,r22
 80106a4:	80027f80 	call	80027f8 <__mulsi3>
 80106a8:	e006943a 	slli	r3,fp,16
 80106ac:	b93fffcc 	andi	r4,r23,65535
 80106b0:	1906b03a 	or	r3,r3,r4
 80106b4:	1880042e 	bgeu	r3,r2,80106c8 <__umoddi3+0x574>
 80106b8:	1cc7883a 	add	r3,r3,r19
 80106bc:	1cc00236 	bltu	r3,r19,80106c8 <__umoddi3+0x574>
 80106c0:	1880012e 	bgeu	r3,r2,80106c8 <__umoddi3+0x574>
 80106c4:	1cc7883a 	add	r3,r3,r19
 80106c8:	18a3c83a 	sub	r17,r3,r2
 80106cc:	003f1e06 	br	8010348 <__alt_data_end+0xfc010348>
 80106d0:	8ccfc83a 	sub	r7,r17,r19
 80106d4:	1d89c83a 	sub	r4,r3,r22
 80106d8:	89e3803a 	cmpltu	r17,r17,r7
 80106dc:	2463c83a 	sub	r17,r4,r17
 80106e0:	9449c83a 	sub	r4,r18,r17
 80106e4:	003fc006 	br	80105e8 <__alt_data_end+0xfc0105e8>
 80106e8:	000b883a 	mov	r5,zero
 80106ec:	002b883a 	mov	r21,zero
 80106f0:	003eeb06 	br	80102a0 <__alt_data_end+0xfc0102a0>
 80106f4:	01400404 	movi	r5,16
 80106f8:	282b883a 	mov	r21,r5
 80106fc:	003ee806 	br	80102a0 <__alt_data_end+0xfc0102a0>
 8010700:	01400404 	movi	r5,16
 8010704:	2805883a 	mov	r2,r5
 8010708:	003eaa06 	br	80101b4 <__alt_data_end+0xfc0101b4>
 801070c:	0005883a 	mov	r2,zero
 8010710:	0007883a 	mov	r3,zero
 8010714:	003eff06 	br	8010314 <__alt_data_end+0xfc010314>
 8010718:	00800404 	movi	r2,16
 801071c:	1007883a 	mov	r3,r2
 8010720:	003efc06 	br	8010314 <__alt_data_end+0xfc010314>
 8010724:	000b883a 	mov	r5,zero
 8010728:	0005883a 	mov	r2,zero
 801072c:	003ea106 	br	80101b4 <__alt_data_end+0xfc0101b4>
 8010730:	90bf802e 	bgeu	r18,r2,8010534 <__alt_data_end+0xfc010534>
 8010734:	bdffff84 	addi	r23,r23,-2
 8010738:	95a5883a 	add	r18,r18,r22
 801073c:	003f7e06 	br	8010538 <__alt_data_end+0xfc010538>
 8010740:	18bf652e 	bgeu	r3,r2,80104d8 <__alt_data_end+0xfc0104d8>
 8010744:	e73fff84 	addi	fp,fp,-2
 8010748:	1d87883a 	add	r3,r3,r22
 801074c:	003f6306 	br	80104dc <__alt_data_end+0xfc0104dc>
 8010750:	1cc7883a 	add	r3,r3,r19
 8010754:	003f0d06 	br	801038c <__alt_data_end+0xfc01038c>
 8010758:	8005883a 	mov	r2,r16
 801075c:	003edf06 	br	80102dc <__alt_data_end+0xfc0102dc>
 8010760:	847fdb36 	bltu	r16,r17,80106d0 <__alt_data_end+0xfc0106d0>
 8010764:	880f883a 	mov	r7,r17
 8010768:	0009883a 	mov	r4,zero
 801076c:	003f9e06 	br	80105e8 <__alt_data_end+0xfc0105e8>

08010770 <udivmodsi4>:
 8010770:	2900182e 	bgeu	r5,r4,80107d4 <udivmodsi4+0x64>
 8010774:	28001716 	blt	r5,zero,80107d4 <udivmodsi4+0x64>
 8010778:	00800804 	movi	r2,32
 801077c:	00c00044 	movi	r3,1
 8010780:	00000206 	br	801078c <udivmodsi4+0x1c>
 8010784:	10001126 	beq	r2,zero,80107cc <udivmodsi4+0x5c>
 8010788:	28000516 	blt	r5,zero,80107a0 <udivmodsi4+0x30>
 801078c:	294b883a 	add	r5,r5,r5
 8010790:	10bfffc4 	addi	r2,r2,-1
 8010794:	18c7883a 	add	r3,r3,r3
 8010798:	293ffa36 	bltu	r5,r4,8010784 <__alt_data_end+0xfc010784>
 801079c:	18000b26 	beq	r3,zero,80107cc <udivmodsi4+0x5c>
 80107a0:	0005883a 	mov	r2,zero
 80107a4:	21400236 	bltu	r4,r5,80107b0 <udivmodsi4+0x40>
 80107a8:	2149c83a 	sub	r4,r4,r5
 80107ac:	10c4b03a 	or	r2,r2,r3
 80107b0:	1806d07a 	srli	r3,r3,1
 80107b4:	280ad07a 	srli	r5,r5,1
 80107b8:	183ffa1e 	bne	r3,zero,80107a4 <__alt_data_end+0xfc0107a4>
 80107bc:	3000011e 	bne	r6,zero,80107c4 <udivmodsi4+0x54>
 80107c0:	f800283a 	ret
 80107c4:	2005883a 	mov	r2,r4
 80107c8:	f800283a 	ret
 80107cc:	0005883a 	mov	r2,zero
 80107d0:	003ffa06 	br	80107bc <__alt_data_end+0xfc0107bc>
 80107d4:	00c00044 	movi	r3,1
 80107d8:	003ff106 	br	80107a0 <__alt_data_end+0xfc0107a0>

080107dc <__divsi3>:
 80107dc:	defffe04 	addi	sp,sp,-8
 80107e0:	dfc00115 	stw	ra,4(sp)
 80107e4:	dc000015 	stw	r16,0(sp)
 80107e8:	20000b16 	blt	r4,zero,8010818 <__divsi3+0x3c>
 80107ec:	0021883a 	mov	r16,zero
 80107f0:	28000c16 	blt	r5,zero,8010824 <__divsi3+0x48>
 80107f4:	000d883a 	mov	r6,zero
 80107f8:	80107700 	call	8010770 <udivmodsi4>
 80107fc:	0407c83a 	sub	r3,zero,r16
 8010800:	1884f03a 	xor	r2,r3,r2
 8010804:	1405883a 	add	r2,r2,r16
 8010808:	dfc00117 	ldw	ra,4(sp)
 801080c:	dc000017 	ldw	r16,0(sp)
 8010810:	dec00204 	addi	sp,sp,8
 8010814:	f800283a 	ret
 8010818:	0109c83a 	sub	r4,zero,r4
 801081c:	04000044 	movi	r16,1
 8010820:	283ff40e 	bge	r5,zero,80107f4 <__alt_data_end+0xfc0107f4>
 8010824:	014bc83a 	sub	r5,zero,r5
 8010828:	8400005c 	xori	r16,r16,1
 801082c:	003ff106 	br	80107f4 <__alt_data_end+0xfc0107f4>

08010830 <__modsi3>:
 8010830:	defffd04 	addi	sp,sp,-12
 8010834:	dfc00215 	stw	ra,8(sp)
 8010838:	dc400115 	stw	r17,4(sp)
 801083c:	dc000015 	stw	r16,0(sp)
 8010840:	20000c16 	blt	r4,zero,8010874 <__modsi3+0x44>
 8010844:	0023883a 	mov	r17,zero
 8010848:	0021883a 	mov	r16,zero
 801084c:	28000d16 	blt	r5,zero,8010884 <__modsi3+0x54>
 8010850:	01800044 	movi	r6,1
 8010854:	80107700 	call	8010770 <udivmodsi4>
 8010858:	1404f03a 	xor	r2,r2,r16
 801085c:	8885883a 	add	r2,r17,r2
 8010860:	dfc00217 	ldw	ra,8(sp)
 8010864:	dc400117 	ldw	r17,4(sp)
 8010868:	dc000017 	ldw	r16,0(sp)
 801086c:	dec00304 	addi	sp,sp,12
 8010870:	f800283a 	ret
 8010874:	0109c83a 	sub	r4,zero,r4
 8010878:	04400044 	movi	r17,1
 801087c:	043fffc4 	movi	r16,-1
 8010880:	283ff30e 	bge	r5,zero,8010850 <__alt_data_end+0xfc010850>
 8010884:	014bc83a 	sub	r5,zero,r5
 8010888:	003ff106 	br	8010850 <__alt_data_end+0xfc010850>

0801088c <__udivsi3>:
 801088c:	000d883a 	mov	r6,zero
 8010890:	80107701 	jmpi	8010770 <udivmodsi4>

08010894 <__umodsi3>:
 8010894:	01800044 	movi	r6,1
 8010898:	80107701 	jmpi	8010770 <udivmodsi4>

0801089c <__adddf3>:
 801089c:	02000434 	movhi	r8,16
 80108a0:	423fffc4 	addi	r8,r8,-1
 80108a4:	defffb04 	addi	sp,sp,-20
 80108a8:	2a12703a 	and	r9,r5,r8
 80108ac:	2806d7fa 	srli	r3,r5,31
 80108b0:	3a10703a 	and	r8,r7,r8
 80108b4:	3804d53a 	srli	r2,r7,20
 80108b8:	3014d77a 	srli	r10,r6,29
 80108bc:	dc000015 	stw	r16,0(sp)
 80108c0:	481290fa 	slli	r9,r9,3
 80108c4:	2820d53a 	srli	r16,r5,20
 80108c8:	401090fa 	slli	r8,r8,3
 80108cc:	200ad77a 	srli	r5,r4,29
 80108d0:	380ed7fa 	srli	r7,r7,31
 80108d4:	dc800215 	stw	r18,8(sp)
 80108d8:	dc400115 	stw	r17,4(sp)
 80108dc:	dfc00415 	stw	ra,16(sp)
 80108e0:	dcc00315 	stw	r19,12(sp)
 80108e4:	1c803fcc 	andi	r18,r3,255
 80108e8:	8401ffcc 	andi	r16,r16,2047
 80108ec:	494ab03a 	or	r5,r9,r5
 80108f0:	202290fa 	slli	r17,r4,3
 80108f4:	1081ffcc 	andi	r2,r2,2047
 80108f8:	4290b03a 	or	r8,r8,r10
 80108fc:	300c90fa 	slli	r6,r6,3
 8010900:	91c07026 	beq	r18,r7,8010ac4 <__adddf3+0x228>
 8010904:	8087c83a 	sub	r3,r16,r2
 8010908:	00c0b30e 	bge	zero,r3,8010bd8 <__adddf3+0x33c>
 801090c:	10002a1e 	bne	r2,zero,80109b8 <__adddf3+0x11c>
 8010910:	4184b03a 	or	r2,r8,r6
 8010914:	1000991e 	bne	r2,zero,8010b7c <__adddf3+0x2e0>
 8010918:	888001cc 	andi	r2,r17,7
 801091c:	10005b26 	beq	r2,zero,8010a8c <__adddf3+0x1f0>
 8010920:	88c003cc 	andi	r3,r17,15
 8010924:	00800104 	movi	r2,4
 8010928:	18805826 	beq	r3,r2,8010a8c <__adddf3+0x1f0>
 801092c:	89800104 	addi	r6,r17,4
 8010930:	3463803a 	cmpltu	r17,r6,r17
 8010934:	2c4b883a 	add	r5,r5,r17
 8010938:	2880202c 	andhi	r2,r5,128
 801093c:	9007883a 	mov	r3,r18
 8010940:	3023883a 	mov	r17,r6
 8010944:	10005426 	beq	r2,zero,8010a98 <__adddf3+0x1fc>
 8010948:	84000044 	addi	r16,r16,1
 801094c:	0081ffc4 	movi	r2,2047
 8010950:	8080c126 	beq	r16,r2,8010c58 <__adddf3+0x3bc>
 8010954:	013fe034 	movhi	r4,65408
 8010958:	213fffc4 	addi	r4,r4,-1
 801095c:	290a703a 	and	r5,r5,r4
 8010960:	2804977a 	slli	r2,r5,29
 8010964:	280a927a 	slli	r5,r5,9
 8010968:	8822d0fa 	srli	r17,r17,3
 801096c:	8401ffcc 	andi	r16,r16,2047
 8010970:	2808d33a 	srli	r4,r5,12
 8010974:	1444b03a 	or	r2,r2,r17
 8010978:	8401ffcc 	andi	r16,r16,2047
 801097c:	800a953a 	slli	r5,r16,20
 8010980:	18c03fcc 	andi	r3,r3,255
 8010984:	04000434 	movhi	r16,16
 8010988:	180697fa 	slli	r3,r3,31
 801098c:	843fffc4 	addi	r16,r16,-1
 8010990:	2420703a 	and	r16,r4,r16
 8010994:	8160b03a 	or	r16,r16,r5
 8010998:	80c6b03a 	or	r3,r16,r3
 801099c:	dfc00417 	ldw	ra,16(sp)
 80109a0:	dcc00317 	ldw	r19,12(sp)
 80109a4:	dc800217 	ldw	r18,8(sp)
 80109a8:	dc400117 	ldw	r17,4(sp)
 80109ac:	dc000017 	ldw	r16,0(sp)
 80109b0:	dec00504 	addi	sp,sp,20
 80109b4:	f800283a 	ret
 80109b8:	0081ffc4 	movi	r2,2047
 80109bc:	80bfd626 	beq	r16,r2,8010918 <__alt_data_end+0xfc010918>
 80109c0:	42002034 	orhi	r8,r8,128
 80109c4:	00800e04 	movi	r2,56
 80109c8:	10c0a616 	blt	r2,r3,8010c64 <__adddf3+0x3c8>
 80109cc:	008007c4 	movi	r2,31
 80109d0:	10c0c916 	blt	r2,r3,8010cf8 <__adddf3+0x45c>
 80109d4:	00800804 	movi	r2,32
 80109d8:	10c5c83a 	sub	r2,r2,r3
 80109dc:	408e983a 	sll	r7,r8,r2
 80109e0:	30c8d83a 	srl	r4,r6,r3
 80109e4:	3084983a 	sll	r2,r6,r2
 80109e8:	40c6d83a 	srl	r3,r8,r3
 80109ec:	390cb03a 	or	r6,r7,r4
 80109f0:	1004c03a 	cmpne	r2,r2,zero
 80109f4:	308cb03a 	or	r6,r6,r2
 80109f8:	898dc83a 	sub	r6,r17,r6
 80109fc:	89a3803a 	cmpltu	r17,r17,r6
 8010a00:	28cbc83a 	sub	r5,r5,r3
 8010a04:	2c4bc83a 	sub	r5,r5,r17
 8010a08:	3023883a 	mov	r17,r6
 8010a0c:	2880202c 	andhi	r2,r5,128
 8010a10:	10006d26 	beq	r2,zero,8010bc8 <__adddf3+0x32c>
 8010a14:	04c02034 	movhi	r19,128
 8010a18:	9cffffc4 	addi	r19,r19,-1
 8010a1c:	2ce6703a 	and	r19,r5,r19
 8010a20:	98007e26 	beq	r19,zero,8010c1c <__adddf3+0x380>
 8010a24:	9809883a 	mov	r4,r19
 8010a28:	80130340 	call	8013034 <__clzsi2>
 8010a2c:	10fffe04 	addi	r3,r2,-8
 8010a30:	010007c4 	movi	r4,31
 8010a34:	20c07f16 	blt	r4,r3,8010c34 <__adddf3+0x398>
 8010a38:	01400a04 	movi	r5,40
 8010a3c:	2885c83a 	sub	r2,r5,r2
 8010a40:	888ad83a 	srl	r5,r17,r2
 8010a44:	98e6983a 	sll	r19,r19,r3
 8010a48:	88e2983a 	sll	r17,r17,r3
 8010a4c:	2ce6b03a 	or	r19,r5,r19
 8010a50:	1c007c16 	blt	r3,r16,8010c44 <__adddf3+0x3a8>
 8010a54:	1c21c83a 	sub	r16,r3,r16
 8010a58:	81400044 	addi	r5,r16,1
 8010a5c:	00c007c4 	movi	r3,31
 8010a60:	19409816 	blt	r3,r5,8010cc4 <__adddf3+0x428>
 8010a64:	1c21c83a 	sub	r16,r3,r16
 8010a68:	8c08983a 	sll	r4,r17,r16
 8010a6c:	8946d83a 	srl	r3,r17,r5
 8010a70:	9c20983a 	sll	r16,r19,r16
 8010a74:	2008c03a 	cmpne	r4,r4,zero
 8010a78:	994ad83a 	srl	r5,r19,r5
 8010a7c:	1c06b03a 	or	r3,r3,r16
 8010a80:	1922b03a 	or	r17,r3,r4
 8010a84:	0021883a 	mov	r16,zero
 8010a88:	003fa306 	br	8010918 <__alt_data_end+0xfc010918>
 8010a8c:	2880202c 	andhi	r2,r5,128
 8010a90:	9007883a 	mov	r3,r18
 8010a94:	103fac1e 	bne	r2,zero,8010948 <__alt_data_end+0xfc010948>
 8010a98:	2804977a 	slli	r2,r5,29
 8010a9c:	8822d0fa 	srli	r17,r17,3
 8010aa0:	0101ffc4 	movi	r4,2047
 8010aa4:	280ad0fa 	srli	r5,r5,3
 8010aa8:	1444b03a 	or	r2,r2,r17
 8010aac:	81002c26 	beq	r16,r4,8010b60 <__adddf3+0x2c4>
 8010ab0:	8120703a 	and	r16,r16,r4
 8010ab4:	01000434 	movhi	r4,16
 8010ab8:	213fffc4 	addi	r4,r4,-1
 8010abc:	2908703a 	and	r4,r5,r4
 8010ac0:	003fad06 	br	8010978 <__alt_data_end+0xfc010978>
 8010ac4:	8089c83a 	sub	r4,r16,r2
 8010ac8:	01006a0e 	bge	zero,r4,8010c74 <__adddf3+0x3d8>
 8010acc:	10003326 	beq	r2,zero,8010b9c <__adddf3+0x300>
 8010ad0:	0081ffc4 	movi	r2,2047
 8010ad4:	80bf9026 	beq	r16,r2,8010918 <__alt_data_end+0xfc010918>
 8010ad8:	42002034 	orhi	r8,r8,128
 8010adc:	00800e04 	movi	r2,56
 8010ae0:	1100b116 	blt	r2,r4,8010da8 <__adddf3+0x50c>
 8010ae4:	008007c4 	movi	r2,31
 8010ae8:	1100e216 	blt	r2,r4,8010e74 <__adddf3+0x5d8>
 8010aec:	00800804 	movi	r2,32
 8010af0:	1105c83a 	sub	r2,r2,r4
 8010af4:	4092983a 	sll	r9,r8,r2
 8010af8:	310ed83a 	srl	r7,r6,r4
 8010afc:	3084983a 	sll	r2,r6,r2
 8010b00:	4110d83a 	srl	r8,r8,r4
 8010b04:	49ccb03a 	or	r6,r9,r7
 8010b08:	1004c03a 	cmpne	r2,r2,zero
 8010b0c:	308cb03a 	or	r6,r6,r2
 8010b10:	344d883a 	add	r6,r6,r17
 8010b14:	3463803a 	cmpltu	r17,r6,r17
 8010b18:	414b883a 	add	r5,r8,r5
 8010b1c:	2c4b883a 	add	r5,r5,r17
 8010b20:	3023883a 	mov	r17,r6
 8010b24:	2880202c 	andhi	r2,r5,128
 8010b28:	10002726 	beq	r2,zero,8010bc8 <__adddf3+0x32c>
 8010b2c:	84000044 	addi	r16,r16,1
 8010b30:	0081ffc4 	movi	r2,2047
 8010b34:	8080ae26 	beq	r16,r2,8010df0 <__adddf3+0x554>
 8010b38:	00bfe034 	movhi	r2,65408
 8010b3c:	10bfffc4 	addi	r2,r2,-1
 8010b40:	288a703a 	and	r5,r5,r2
 8010b44:	880cd07a 	srli	r6,r17,1
 8010b48:	280897fa 	slli	r4,r5,31
 8010b4c:	88c0004c 	andi	r3,r17,1
 8010b50:	30e2b03a 	or	r17,r6,r3
 8010b54:	280ad07a 	srli	r5,r5,1
 8010b58:	8922b03a 	or	r17,r17,r4
 8010b5c:	003f6e06 	br	8010918 <__alt_data_end+0xfc010918>
 8010b60:	1148b03a 	or	r4,r2,r5
 8010b64:	20003c26 	beq	r4,zero,8010c58 <__adddf3+0x3bc>
 8010b68:	29000234 	orhi	r4,r5,8
 8010b6c:	01400434 	movhi	r5,16
 8010b70:	297fffc4 	addi	r5,r5,-1
 8010b74:	2148703a 	and	r4,r4,r5
 8010b78:	003f7f06 	br	8010978 <__alt_data_end+0xfc010978>
 8010b7c:	18ffffc4 	addi	r3,r3,-1
 8010b80:	18004d1e 	bne	r3,zero,8010cb8 <__adddf3+0x41c>
 8010b84:	898dc83a 	sub	r6,r17,r6
 8010b88:	89a3803a 	cmpltu	r17,r17,r6
 8010b8c:	2a0bc83a 	sub	r5,r5,r8
 8010b90:	2c4bc83a 	sub	r5,r5,r17
 8010b94:	3023883a 	mov	r17,r6
 8010b98:	003f9c06 	br	8010a0c <__alt_data_end+0xfc010a0c>
 8010b9c:	4184b03a 	or	r2,r8,r6
 8010ba0:	103f5d26 	beq	r2,zero,8010918 <__alt_data_end+0xfc010918>
 8010ba4:	213fffc4 	addi	r4,r4,-1
 8010ba8:	203fd926 	beq	r4,zero,8010b10 <__alt_data_end+0xfc010b10>
 8010bac:	0081ffc4 	movi	r2,2047
 8010bb0:	80bfca1e 	bne	r16,r2,8010adc <__alt_data_end+0xfc010adc>
 8010bb4:	003f5806 	br	8010918 <__alt_data_end+0xfc010918>
 8010bb8:	10c8b03a 	or	r4,r2,r3
 8010bbc:	20008b26 	beq	r4,zero,8010dec <__adddf3+0x550>
 8010bc0:	100b883a 	mov	r5,r2
 8010bc4:	1823883a 	mov	r17,r3
 8010bc8:	888001cc 	andi	r2,r17,7
 8010bcc:	103f541e 	bne	r2,zero,8010920 <__alt_data_end+0xfc010920>
 8010bd0:	9007883a 	mov	r3,r18
 8010bd4:	003fb006 	br	8010a98 <__alt_data_end+0xfc010a98>
 8010bd8:	1800531e 	bne	r3,zero,8010d28 <__adddf3+0x48c>
 8010bdc:	80800044 	addi	r2,r16,1
 8010be0:	1081ffcc 	andi	r2,r2,2047
 8010be4:	00c00044 	movi	r3,1
 8010be8:	1880990e 	bge	r3,r2,8010e50 <__adddf3+0x5b4>
 8010bec:	8985c83a 	sub	r2,r17,r6
 8010bf0:	8887803a 	cmpltu	r3,r17,r2
 8010bf4:	2a27c83a 	sub	r19,r5,r8
 8010bf8:	98e7c83a 	sub	r19,r19,r3
 8010bfc:	98c0202c 	andhi	r3,r19,128
 8010c00:	18006226 	beq	r3,zero,8010d8c <__adddf3+0x4f0>
 8010c04:	3463c83a 	sub	r17,r6,r17
 8010c08:	4151c83a 	sub	r8,r8,r5
 8010c0c:	344d803a 	cmpltu	r6,r6,r17
 8010c10:	41a7c83a 	sub	r19,r8,r6
 8010c14:	3825883a 	mov	r18,r7
 8010c18:	983f821e 	bne	r19,zero,8010a24 <__alt_data_end+0xfc010a24>
 8010c1c:	8809883a 	mov	r4,r17
 8010c20:	80130340 	call	8013034 <__clzsi2>
 8010c24:	10800804 	addi	r2,r2,32
 8010c28:	10fffe04 	addi	r3,r2,-8
 8010c2c:	010007c4 	movi	r4,31
 8010c30:	20ff810e 	bge	r4,r3,8010a38 <__alt_data_end+0xfc010a38>
 8010c34:	14fff604 	addi	r19,r2,-40
 8010c38:	8ce6983a 	sll	r19,r17,r19
 8010c3c:	0023883a 	mov	r17,zero
 8010c40:	1c3f840e 	bge	r3,r16,8010a54 <__alt_data_end+0xfc010a54>
 8010c44:	017fe034 	movhi	r5,65408
 8010c48:	297fffc4 	addi	r5,r5,-1
 8010c4c:	80e1c83a 	sub	r16,r16,r3
 8010c50:	994a703a 	and	r5,r19,r5
 8010c54:	003f3006 	br	8010918 <__alt_data_end+0xfc010918>
 8010c58:	0009883a 	mov	r4,zero
 8010c5c:	0005883a 	mov	r2,zero
 8010c60:	003f4506 	br	8010978 <__alt_data_end+0xfc010978>
 8010c64:	418cb03a 	or	r6,r8,r6
 8010c68:	300cc03a 	cmpne	r6,r6,zero
 8010c6c:	0007883a 	mov	r3,zero
 8010c70:	003f6106 	br	80109f8 <__alt_data_end+0xfc0109f8>
 8010c74:	2000921e 	bne	r4,zero,8010ec0 <__adddf3+0x624>
 8010c78:	80800044 	addi	r2,r16,1
 8010c7c:	11c1ffcc 	andi	r7,r2,2047
 8010c80:	01000044 	movi	r4,1
 8010c84:	21c0610e 	bge	r4,r7,8010e0c <__adddf3+0x570>
 8010c88:	0101ffc4 	movi	r4,2047
 8010c8c:	1100a326 	beq	r2,r4,8010f1c <__adddf3+0x680>
 8010c90:	344d883a 	add	r6,r6,r17
 8010c94:	3463803a 	cmpltu	r17,r6,r17
 8010c98:	414b883a 	add	r5,r8,r5
 8010c9c:	2c4b883a 	add	r5,r5,r17
 8010ca0:	282297fa 	slli	r17,r5,31
 8010ca4:	300cd07a 	srli	r6,r6,1
 8010ca8:	280ad07a 	srli	r5,r5,1
 8010cac:	1021883a 	mov	r16,r2
 8010cb0:	89a2b03a 	or	r17,r17,r6
 8010cb4:	003f1806 	br	8010918 <__alt_data_end+0xfc010918>
 8010cb8:	0081ffc4 	movi	r2,2047
 8010cbc:	80bf411e 	bne	r16,r2,80109c4 <__alt_data_end+0xfc0109c4>
 8010cc0:	003f1506 	br	8010918 <__alt_data_end+0xfc010918>
 8010cc4:	80bff844 	addi	r2,r16,-31
 8010cc8:	00c00804 	movi	r3,32
 8010ccc:	9884d83a 	srl	r2,r19,r2
 8010cd0:	28c04a26 	beq	r5,r3,8010dfc <__adddf3+0x560>
 8010cd4:	00c00fc4 	movi	r3,63
 8010cd8:	1c21c83a 	sub	r16,r3,r16
 8010cdc:	9c26983a 	sll	r19,r19,r16
 8010ce0:	9c62b03a 	or	r17,r19,r17
 8010ce4:	8822c03a 	cmpne	r17,r17,zero
 8010ce8:	88a2b03a 	or	r17,r17,r2
 8010cec:	000b883a 	mov	r5,zero
 8010cf0:	0021883a 	mov	r16,zero
 8010cf4:	003fb406 	br	8010bc8 <__alt_data_end+0xfc010bc8>
 8010cf8:	18bff804 	addi	r2,r3,-32
 8010cfc:	01000804 	movi	r4,32
 8010d00:	4084d83a 	srl	r2,r8,r2
 8010d04:	19003f26 	beq	r3,r4,8010e04 <__adddf3+0x568>
 8010d08:	01001004 	movi	r4,64
 8010d0c:	20c7c83a 	sub	r3,r4,r3
 8010d10:	40d0983a 	sll	r8,r8,r3
 8010d14:	418cb03a 	or	r6,r8,r6
 8010d18:	300cc03a 	cmpne	r6,r6,zero
 8010d1c:	308cb03a 	or	r6,r6,r2
 8010d20:	0007883a 	mov	r3,zero
 8010d24:	003f3406 	br	80109f8 <__alt_data_end+0xfc0109f8>
 8010d28:	80002326 	beq	r16,zero,8010db8 <__adddf3+0x51c>
 8010d2c:	0101ffc4 	movi	r4,2047
 8010d30:	11005e26 	beq	r2,r4,8010eac <__adddf3+0x610>
 8010d34:	00c7c83a 	sub	r3,zero,r3
 8010d38:	29402034 	orhi	r5,r5,128
 8010d3c:	01000e04 	movi	r4,56
 8010d40:	20c07216 	blt	r4,r3,8010f0c <__adddf3+0x670>
 8010d44:	010007c4 	movi	r4,31
 8010d48:	20c0ce16 	blt	r4,r3,8011084 <__adddf3+0x7e8>
 8010d4c:	01000804 	movi	r4,32
 8010d50:	20c9c83a 	sub	r4,r4,r3
 8010d54:	2914983a 	sll	r10,r5,r4
 8010d58:	88d2d83a 	srl	r9,r17,r3
 8010d5c:	8908983a 	sll	r4,r17,r4
 8010d60:	28c6d83a 	srl	r3,r5,r3
 8010d64:	5262b03a 	or	r17,r10,r9
 8010d68:	2008c03a 	cmpne	r4,r4,zero
 8010d6c:	8922b03a 	or	r17,r17,r4
 8010d70:	3463c83a 	sub	r17,r6,r17
 8010d74:	40c7c83a 	sub	r3,r8,r3
 8010d78:	344d803a 	cmpltu	r6,r6,r17
 8010d7c:	198bc83a 	sub	r5,r3,r6
 8010d80:	1021883a 	mov	r16,r2
 8010d84:	3825883a 	mov	r18,r7
 8010d88:	003f2006 	br	8010a0c <__alt_data_end+0xfc010a0c>
 8010d8c:	9886b03a 	or	r3,r19,r2
 8010d90:	1800141e 	bne	r3,zero,8010de4 <__adddf3+0x548>
 8010d94:	0007883a 	mov	r3,zero
 8010d98:	000b883a 	mov	r5,zero
 8010d9c:	0023883a 	mov	r17,zero
 8010da0:	0021883a 	mov	r16,zero
 8010da4:	003f3c06 	br	8010a98 <__alt_data_end+0xfc010a98>
 8010da8:	418cb03a 	or	r6,r8,r6
 8010dac:	300cc03a 	cmpne	r6,r6,zero
 8010db0:	0011883a 	mov	r8,zero
 8010db4:	003f5606 	br	8010b10 <__alt_data_end+0xfc010b10>
 8010db8:	2c48b03a 	or	r4,r5,r17
 8010dbc:	20003b26 	beq	r4,zero,8010eac <__adddf3+0x610>
 8010dc0:	00c6303a 	nor	r3,zero,r3
 8010dc4:	1800371e 	bne	r3,zero,8010ea4 <__adddf3+0x608>
 8010dc8:	3463c83a 	sub	r17,r6,r17
 8010dcc:	414bc83a 	sub	r5,r8,r5
 8010dd0:	344d803a 	cmpltu	r6,r6,r17
 8010dd4:	298bc83a 	sub	r5,r5,r6
 8010dd8:	1021883a 	mov	r16,r2
 8010ddc:	3825883a 	mov	r18,r7
 8010de0:	003f0a06 	br	8010a0c <__alt_data_end+0xfc010a0c>
 8010de4:	1023883a 	mov	r17,r2
 8010de8:	003f0d06 	br	8010a20 <__alt_data_end+0xfc010a20>
 8010dec:	0007883a 	mov	r3,zero
 8010df0:	000b883a 	mov	r5,zero
 8010df4:	0023883a 	mov	r17,zero
 8010df8:	003f2706 	br	8010a98 <__alt_data_end+0xfc010a98>
 8010dfc:	0027883a 	mov	r19,zero
 8010e00:	003fb706 	br	8010ce0 <__alt_data_end+0xfc010ce0>
 8010e04:	0011883a 	mov	r8,zero
 8010e08:	003fc206 	br	8010d14 <__alt_data_end+0xfc010d14>
 8010e0c:	2c44b03a 	or	r2,r5,r17
 8010e10:	8000871e 	bne	r16,zero,8011030 <__adddf3+0x794>
 8010e14:	1000b126 	beq	r2,zero,80110dc <__adddf3+0x840>
 8010e18:	4184b03a 	or	r2,r8,r6
 8010e1c:	103ebe26 	beq	r2,zero,8010918 <__alt_data_end+0xfc010918>
 8010e20:	3445883a 	add	r2,r6,r17
 8010e24:	1463803a 	cmpltu	r17,r2,r17
 8010e28:	414b883a 	add	r5,r8,r5
 8010e2c:	2c4b883a 	add	r5,r5,r17
 8010e30:	28c0202c 	andhi	r3,r5,128
 8010e34:	1023883a 	mov	r17,r2
 8010e38:	183f6326 	beq	r3,zero,8010bc8 <__alt_data_end+0xfc010bc8>
 8010e3c:	00bfe034 	movhi	r2,65408
 8010e40:	10bfffc4 	addi	r2,r2,-1
 8010e44:	2021883a 	mov	r16,r4
 8010e48:	288a703a 	and	r5,r5,r2
 8010e4c:	003eb206 	br	8010918 <__alt_data_end+0xfc010918>
 8010e50:	2c44b03a 	or	r2,r5,r17
 8010e54:	8000251e 	bne	r16,zero,8010eec <__adddf3+0x650>
 8010e58:	10004b1e 	bne	r2,zero,8010f88 <__adddf3+0x6ec>
 8010e5c:	4184b03a 	or	r2,r8,r6
 8010e60:	103fe226 	beq	r2,zero,8010dec <__alt_data_end+0xfc010dec>
 8010e64:	400b883a 	mov	r5,r8
 8010e68:	3023883a 	mov	r17,r6
 8010e6c:	3825883a 	mov	r18,r7
 8010e70:	003ea906 	br	8010918 <__alt_data_end+0xfc010918>
 8010e74:	20bff804 	addi	r2,r4,-32
 8010e78:	01c00804 	movi	r7,32
 8010e7c:	4084d83a 	srl	r2,r8,r2
 8010e80:	21c07e26 	beq	r4,r7,801107c <__adddf3+0x7e0>
 8010e84:	01c01004 	movi	r7,64
 8010e88:	3909c83a 	sub	r4,r7,r4
 8010e8c:	4110983a 	sll	r8,r8,r4
 8010e90:	418cb03a 	or	r6,r8,r6
 8010e94:	300cc03a 	cmpne	r6,r6,zero
 8010e98:	308cb03a 	or	r6,r6,r2
 8010e9c:	0011883a 	mov	r8,zero
 8010ea0:	003f1b06 	br	8010b10 <__alt_data_end+0xfc010b10>
 8010ea4:	0101ffc4 	movi	r4,2047
 8010ea8:	113fa41e 	bne	r2,r4,8010d3c <__alt_data_end+0xfc010d3c>
 8010eac:	400b883a 	mov	r5,r8
 8010eb0:	3023883a 	mov	r17,r6
 8010eb4:	1021883a 	mov	r16,r2
 8010eb8:	3825883a 	mov	r18,r7
 8010ebc:	003e9606 	br	8010918 <__alt_data_end+0xfc010918>
 8010ec0:	80001a1e 	bne	r16,zero,8010f2c <__adddf3+0x690>
 8010ec4:	2c4eb03a 	or	r7,r5,r17
 8010ec8:	38005526 	beq	r7,zero,8011020 <__adddf3+0x784>
 8010ecc:	0108303a 	nor	r4,zero,r4
 8010ed0:	2000511e 	bne	r4,zero,8011018 <__adddf3+0x77c>
 8010ed4:	89a3883a 	add	r17,r17,r6
 8010ed8:	414b883a 	add	r5,r8,r5
 8010edc:	898d803a 	cmpltu	r6,r17,r6
 8010ee0:	298b883a 	add	r5,r5,r6
 8010ee4:	1021883a 	mov	r16,r2
 8010ee8:	003f0e06 	br	8010b24 <__alt_data_end+0xfc010b24>
 8010eec:	1000341e 	bne	r2,zero,8010fc0 <__adddf3+0x724>
 8010ef0:	4184b03a 	or	r2,r8,r6
 8010ef4:	10006f26 	beq	r2,zero,80110b4 <__adddf3+0x818>
 8010ef8:	400b883a 	mov	r5,r8
 8010efc:	3023883a 	mov	r17,r6
 8010f00:	3825883a 	mov	r18,r7
 8010f04:	0401ffc4 	movi	r16,2047
 8010f08:	003e8306 	br	8010918 <__alt_data_end+0xfc010918>
 8010f0c:	2c62b03a 	or	r17,r5,r17
 8010f10:	8822c03a 	cmpne	r17,r17,zero
 8010f14:	0007883a 	mov	r3,zero
 8010f18:	003f9506 	br	8010d70 <__alt_data_end+0xfc010d70>
 8010f1c:	1021883a 	mov	r16,r2
 8010f20:	000b883a 	mov	r5,zero
 8010f24:	0023883a 	mov	r17,zero
 8010f28:	003edb06 	br	8010a98 <__alt_data_end+0xfc010a98>
 8010f2c:	01c1ffc4 	movi	r7,2047
 8010f30:	11c03b26 	beq	r2,r7,8011020 <__adddf3+0x784>
 8010f34:	0109c83a 	sub	r4,zero,r4
 8010f38:	29402034 	orhi	r5,r5,128
 8010f3c:	01c00e04 	movi	r7,56
 8010f40:	39006216 	blt	r7,r4,80110cc <__adddf3+0x830>
 8010f44:	01c007c4 	movi	r7,31
 8010f48:	39006b16 	blt	r7,r4,80110f8 <__adddf3+0x85c>
 8010f4c:	01c00804 	movi	r7,32
 8010f50:	390fc83a 	sub	r7,r7,r4
 8010f54:	29d4983a 	sll	r10,r5,r7
 8010f58:	8912d83a 	srl	r9,r17,r4
 8010f5c:	89ce983a 	sll	r7,r17,r7
 8010f60:	2908d83a 	srl	r4,r5,r4
 8010f64:	5262b03a 	or	r17,r10,r9
 8010f68:	380ac03a 	cmpne	r5,r7,zero
 8010f6c:	8962b03a 	or	r17,r17,r5
 8010f70:	89a3883a 	add	r17,r17,r6
 8010f74:	2211883a 	add	r8,r4,r8
 8010f78:	898d803a 	cmpltu	r6,r17,r6
 8010f7c:	418b883a 	add	r5,r8,r6
 8010f80:	1021883a 	mov	r16,r2
 8010f84:	003ee706 	br	8010b24 <__alt_data_end+0xfc010b24>
 8010f88:	4184b03a 	or	r2,r8,r6
 8010f8c:	103e6226 	beq	r2,zero,8010918 <__alt_data_end+0xfc010918>
 8010f90:	8987c83a 	sub	r3,r17,r6
 8010f94:	88c9803a 	cmpltu	r4,r17,r3
 8010f98:	2a05c83a 	sub	r2,r5,r8
 8010f9c:	1105c83a 	sub	r2,r2,r4
 8010fa0:	1100202c 	andhi	r4,r2,128
 8010fa4:	203f0426 	beq	r4,zero,8010bb8 <__alt_data_end+0xfc010bb8>
 8010fa8:	3463c83a 	sub	r17,r6,r17
 8010fac:	414bc83a 	sub	r5,r8,r5
 8010fb0:	344d803a 	cmpltu	r6,r6,r17
 8010fb4:	298bc83a 	sub	r5,r5,r6
 8010fb8:	3825883a 	mov	r18,r7
 8010fbc:	003e5606 	br	8010918 <__alt_data_end+0xfc010918>
 8010fc0:	4184b03a 	or	r2,r8,r6
 8010fc4:	10002b26 	beq	r2,zero,8011074 <__adddf3+0x7d8>
 8010fc8:	2804d0fa 	srli	r2,r5,3
 8010fcc:	8822d0fa 	srli	r17,r17,3
 8010fd0:	280a977a 	slli	r5,r5,29
 8010fd4:	10c0022c 	andhi	r3,r2,8
 8010fd8:	2c62b03a 	or	r17,r5,r17
 8010fdc:	18000826 	beq	r3,zero,8011000 <__adddf3+0x764>
 8010fe0:	4008d0fa 	srli	r4,r8,3
 8010fe4:	20c0022c 	andhi	r3,r4,8
 8010fe8:	1800051e 	bne	r3,zero,8011000 <__adddf3+0x764>
 8010fec:	300cd0fa 	srli	r6,r6,3
 8010ff0:	4010977a 	slli	r8,r8,29
 8010ff4:	2005883a 	mov	r2,r4
 8010ff8:	3825883a 	mov	r18,r7
 8010ffc:	41a2b03a 	or	r17,r8,r6
 8011000:	880ad77a 	srli	r5,r17,29
 8011004:	100490fa 	slli	r2,r2,3
 8011008:	882290fa 	slli	r17,r17,3
 801100c:	0401ffc4 	movi	r16,2047
 8011010:	288ab03a 	or	r5,r5,r2
 8011014:	003e4006 	br	8010918 <__alt_data_end+0xfc010918>
 8011018:	01c1ffc4 	movi	r7,2047
 801101c:	11ffc71e 	bne	r2,r7,8010f3c <__alt_data_end+0xfc010f3c>
 8011020:	400b883a 	mov	r5,r8
 8011024:	3023883a 	mov	r17,r6
 8011028:	1021883a 	mov	r16,r2
 801102c:	003e3a06 	br	8010918 <__alt_data_end+0xfc010918>
 8011030:	10002d26 	beq	r2,zero,80110e8 <__adddf3+0x84c>
 8011034:	4184b03a 	or	r2,r8,r6
 8011038:	10000e26 	beq	r2,zero,8011074 <__adddf3+0x7d8>
 801103c:	2804d0fa 	srli	r2,r5,3
 8011040:	8822d0fa 	srli	r17,r17,3
 8011044:	280a977a 	slli	r5,r5,29
 8011048:	10c0022c 	andhi	r3,r2,8
 801104c:	2c62b03a 	or	r17,r5,r17
 8011050:	183feb26 	beq	r3,zero,8011000 <__alt_data_end+0xfc011000>
 8011054:	4008d0fa 	srli	r4,r8,3
 8011058:	20c0022c 	andhi	r3,r4,8
 801105c:	183fe81e 	bne	r3,zero,8011000 <__alt_data_end+0xfc011000>
 8011060:	300cd0fa 	srli	r6,r6,3
 8011064:	4010977a 	slli	r8,r8,29
 8011068:	2005883a 	mov	r2,r4
 801106c:	41a2b03a 	or	r17,r8,r6
 8011070:	003fe306 	br	8011000 <__alt_data_end+0xfc011000>
 8011074:	0401ffc4 	movi	r16,2047
 8011078:	003e2706 	br	8010918 <__alt_data_end+0xfc010918>
 801107c:	0011883a 	mov	r8,zero
 8011080:	003f8306 	br	8010e90 <__alt_data_end+0xfc010e90>
 8011084:	193ff804 	addi	r4,r3,-32
 8011088:	02400804 	movi	r9,32
 801108c:	2908d83a 	srl	r4,r5,r4
 8011090:	1a402526 	beq	r3,r9,8011128 <__adddf3+0x88c>
 8011094:	02401004 	movi	r9,64
 8011098:	48c7c83a 	sub	r3,r9,r3
 801109c:	28ca983a 	sll	r5,r5,r3
 80110a0:	2c62b03a 	or	r17,r5,r17
 80110a4:	8822c03a 	cmpne	r17,r17,zero
 80110a8:	8922b03a 	or	r17,r17,r4
 80110ac:	0007883a 	mov	r3,zero
 80110b0:	003f2f06 	br	8010d70 <__alt_data_end+0xfc010d70>
 80110b4:	01402034 	movhi	r5,128
 80110b8:	0007883a 	mov	r3,zero
 80110bc:	297fffc4 	addi	r5,r5,-1
 80110c0:	047ffe04 	movi	r17,-8
 80110c4:	0401ffc4 	movi	r16,2047
 80110c8:	003e7306 	br	8010a98 <__alt_data_end+0xfc010a98>
 80110cc:	2c62b03a 	or	r17,r5,r17
 80110d0:	8822c03a 	cmpne	r17,r17,zero
 80110d4:	0009883a 	mov	r4,zero
 80110d8:	003fa506 	br	8010f70 <__alt_data_end+0xfc010f70>
 80110dc:	400b883a 	mov	r5,r8
 80110e0:	3023883a 	mov	r17,r6
 80110e4:	003e0c06 	br	8010918 <__alt_data_end+0xfc010918>
 80110e8:	400b883a 	mov	r5,r8
 80110ec:	3023883a 	mov	r17,r6
 80110f0:	0401ffc4 	movi	r16,2047
 80110f4:	003e0806 	br	8010918 <__alt_data_end+0xfc010918>
 80110f8:	21fff804 	addi	r7,r4,-32
 80110fc:	02400804 	movi	r9,32
 8011100:	29ced83a 	srl	r7,r5,r7
 8011104:	22400a26 	beq	r4,r9,8011130 <__adddf3+0x894>
 8011108:	02401004 	movi	r9,64
 801110c:	4909c83a 	sub	r4,r9,r4
 8011110:	290a983a 	sll	r5,r5,r4
 8011114:	2c62b03a 	or	r17,r5,r17
 8011118:	8822c03a 	cmpne	r17,r17,zero
 801111c:	89e2b03a 	or	r17,r17,r7
 8011120:	0009883a 	mov	r4,zero
 8011124:	003f9206 	br	8010f70 <__alt_data_end+0xfc010f70>
 8011128:	000b883a 	mov	r5,zero
 801112c:	003fdc06 	br	80110a0 <__alt_data_end+0xfc0110a0>
 8011130:	000b883a 	mov	r5,zero
 8011134:	003ff706 	br	8011114 <__alt_data_end+0xfc011114>

08011138 <__divdf3>:
 8011138:	defff004 	addi	sp,sp,-64
 801113c:	dc800815 	stw	r18,32(sp)
 8011140:	2824d53a 	srli	r18,r5,20
 8011144:	dd800c15 	stw	r22,48(sp)
 8011148:	282cd7fa 	srli	r22,r5,31
 801114c:	dc000615 	stw	r16,24(sp)
 8011150:	04000434 	movhi	r16,16
 8011154:	df000e15 	stw	fp,56(sp)
 8011158:	dd000a15 	stw	r20,40(sp)
 801115c:	dcc00915 	stw	r19,36(sp)
 8011160:	dc400715 	stw	r17,28(sp)
 8011164:	843fffc4 	addi	r16,r16,-1
 8011168:	dfc00f15 	stw	ra,60(sp)
 801116c:	ddc00d15 	stw	r23,52(sp)
 8011170:	dd400b15 	stw	r21,44(sp)
 8011174:	9481ffcc 	andi	r18,r18,2047
 8011178:	2029883a 	mov	r20,r4
 801117c:	2027883a 	mov	r19,r4
 8011180:	2c22703a 	and	r17,r5,r16
 8011184:	b7003fcc 	andi	fp,r22,255
 8011188:	90005e26 	beq	r18,zero,8011304 <__divdf3+0x1cc>
 801118c:	0081ffc4 	movi	r2,2047
 8011190:	90803526 	beq	r18,r2,8011268 <__divdf3+0x130>
 8011194:	8c000434 	orhi	r16,r17,16
 8011198:	2004d77a 	srli	r2,r4,29
 801119c:	802090fa 	slli	r16,r16,3
 80111a0:	202690fa 	slli	r19,r4,3
 80111a4:	94bf0044 	addi	r18,r18,-1023
 80111a8:	80a2b03a 	or	r17,r16,r2
 80111ac:	0029883a 	mov	r20,zero
 80111b0:	0011883a 	mov	r8,zero
 80111b4:	380ad53a 	srli	r5,r7,20
 80111b8:	382ed7fa 	srli	r23,r7,31
 80111bc:	04000434 	movhi	r16,16
 80111c0:	843fffc4 	addi	r16,r16,-1
 80111c4:	2941ffcc 	andi	r5,r5,2047
 80111c8:	302b883a 	mov	r21,r6
 80111cc:	3c20703a 	and	r16,r7,r16
 80111d0:	ba403fcc 	andi	r9,r23,255
 80111d4:	28006726 	beq	r5,zero,8011374 <__divdf3+0x23c>
 80111d8:	0081ffc4 	movi	r2,2047
 80111dc:	28805f26 	beq	r5,r2,801135c <__divdf3+0x224>
 80111e0:	84000434 	orhi	r16,r16,16
 80111e4:	3004d77a 	srli	r2,r6,29
 80111e8:	802090fa 	slli	r16,r16,3
 80111ec:	302a90fa 	slli	r21,r6,3
 80111f0:	297f0044 	addi	r5,r5,-1023
 80111f4:	80a0b03a 	or	r16,r16,r2
 80111f8:	000f883a 	mov	r7,zero
 80111fc:	3d06b03a 	or	r3,r7,r20
 8011200:	180690ba 	slli	r3,r3,2
 8011204:	00820074 	movhi	r2,2049
 8011208:	10848a04 	addi	r2,r2,4648
 801120c:	1885883a 	add	r2,r3,r2
 8011210:	10800017 	ldw	r2,0(r2)
 8011214:	b5c8f03a 	xor	r4,r22,r23
 8011218:	200d883a 	mov	r6,r4
 801121c:	25003fcc 	andi	r20,r4,255
 8011220:	9165c83a 	sub	r18,r18,r5
 8011224:	1000683a 	jmp	r2
 8011228:	08011470 	cmpltui	zero,at,1105
 801122c:	080112a0 	cmpeqi	zero,at,1098
 8011230:	08011434 	orhi	zero,at,1104
 8011234:	08011284 	addi	zero,at,1098
 8011238:	08011434 	orhi	zero,at,1104
 801123c:	08011408 	cmpgei	zero,at,1104
 8011240:	08011434 	orhi	zero,at,1104
 8011244:	08011284 	addi	zero,at,1098
 8011248:	080112a0 	cmpeqi	zero,at,1098
 801124c:	080112a0 	cmpeqi	zero,at,1098
 8011250:	08011408 	cmpgei	zero,at,1104
 8011254:	08011284 	addi	zero,at,1098
 8011258:	08011294 	ori	zero,at,1098
 801125c:	08011294 	ori	zero,at,1098
 8011260:	08011294 	ori	zero,at,1098
 8011264:	08011444 	addi	zero,at,1105
 8011268:	8904b03a 	or	r2,r17,r4
 801126c:	1000631e 	bne	r2,zero,80113fc <__divdf3+0x2c4>
 8011270:	05000204 	movi	r20,8
 8011274:	0023883a 	mov	r17,zero
 8011278:	0027883a 	mov	r19,zero
 801127c:	02000084 	movi	r8,2
 8011280:	003fcc06 	br	80111b4 <__alt_data_end+0xfc0111b4>
 8011284:	8023883a 	mov	r17,r16
 8011288:	a827883a 	mov	r19,r21
 801128c:	4839883a 	mov	fp,r9
 8011290:	3811883a 	mov	r8,r7
 8011294:	00800084 	movi	r2,2
 8011298:	4081531e 	bne	r8,r2,80117e8 <__divdf3+0x6b0>
 801129c:	e029883a 	mov	r20,fp
 80112a0:	a180004c 	andi	r6,r20,1
 80112a4:	0201ffc4 	movi	r8,2047
 80112a8:	000b883a 	mov	r5,zero
 80112ac:	0027883a 	mov	r19,zero
 80112b0:	4010953a 	slli	r8,r8,20
 80112b4:	30c03fcc 	andi	r3,r6,255
 80112b8:	04000434 	movhi	r16,16
 80112bc:	180697fa 	slli	r3,r3,31
 80112c0:	843fffc4 	addi	r16,r16,-1
 80112c4:	2c20703a 	and	r16,r5,r16
 80112c8:	8220b03a 	or	r16,r16,r8
 80112cc:	80c6b03a 	or	r3,r16,r3
 80112d0:	9805883a 	mov	r2,r19
 80112d4:	dfc00f17 	ldw	ra,60(sp)
 80112d8:	df000e17 	ldw	fp,56(sp)
 80112dc:	ddc00d17 	ldw	r23,52(sp)
 80112e0:	dd800c17 	ldw	r22,48(sp)
 80112e4:	dd400b17 	ldw	r21,44(sp)
 80112e8:	dd000a17 	ldw	r20,40(sp)
 80112ec:	dcc00917 	ldw	r19,36(sp)
 80112f0:	dc800817 	ldw	r18,32(sp)
 80112f4:	dc400717 	ldw	r17,28(sp)
 80112f8:	dc000617 	ldw	r16,24(sp)
 80112fc:	dec01004 	addi	sp,sp,64
 8011300:	f800283a 	ret
 8011304:	8904b03a 	or	r2,r17,r4
 8011308:	10003726 	beq	r2,zero,80113e8 <__divdf3+0x2b0>
 801130c:	88014d26 	beq	r17,zero,8011844 <__divdf3+0x70c>
 8011310:	8809883a 	mov	r4,r17
 8011314:	d9800215 	stw	r6,8(sp)
 8011318:	d9c00515 	stw	r7,20(sp)
 801131c:	80130340 	call	8013034 <__clzsi2>
 8011320:	d9800217 	ldw	r6,8(sp)
 8011324:	d9c00517 	ldw	r7,20(sp)
 8011328:	1007883a 	mov	r3,r2
 801132c:	01000a04 	movi	r4,40
 8011330:	1cfffe04 	addi	r19,r3,-8
 8011334:	20c9c83a 	sub	r4,r4,r3
 8011338:	8cca983a 	sll	r5,r17,r19
 801133c:	a108d83a 	srl	r4,r20,r4
 8011340:	a4e6983a 	sll	r19,r20,r19
 8011344:	2162b03a 	or	r17,r4,r5
 8011348:	04bf0344 	movi	r18,-1011
 801134c:	90e5c83a 	sub	r18,r18,r3
 8011350:	0029883a 	mov	r20,zero
 8011354:	0011883a 	mov	r8,zero
 8011358:	003f9606 	br	80111b4 <__alt_data_end+0xfc0111b4>
 801135c:	8184b03a 	or	r2,r16,r6
 8011360:	10001f1e 	bne	r2,zero,80113e0 <__divdf3+0x2a8>
 8011364:	0021883a 	mov	r16,zero
 8011368:	002b883a 	mov	r21,zero
 801136c:	01c00084 	movi	r7,2
 8011370:	003fa206 	br	80111fc <__alt_data_end+0xfc0111fc>
 8011374:	8184b03a 	or	r2,r16,r6
 8011378:	10001526 	beq	r2,zero,80113d0 <__divdf3+0x298>
 801137c:	80013d26 	beq	r16,zero,8011874 <__divdf3+0x73c>
 8011380:	8009883a 	mov	r4,r16
 8011384:	d9800215 	stw	r6,8(sp)
 8011388:	da000315 	stw	r8,12(sp)
 801138c:	da400415 	stw	r9,16(sp)
 8011390:	80130340 	call	8013034 <__clzsi2>
 8011394:	d9800217 	ldw	r6,8(sp)
 8011398:	da000317 	ldw	r8,12(sp)
 801139c:	da400417 	ldw	r9,16(sp)
 80113a0:	1007883a 	mov	r3,r2
 80113a4:	01000a04 	movi	r4,40
 80113a8:	1d7ffe04 	addi	r21,r3,-8
 80113ac:	20c9c83a 	sub	r4,r4,r3
 80113b0:	8560983a 	sll	r16,r16,r21
 80113b4:	3108d83a 	srl	r4,r6,r4
 80113b8:	356a983a 	sll	r21,r6,r21
 80113bc:	2420b03a 	or	r16,r4,r16
 80113c0:	017f0344 	movi	r5,-1011
 80113c4:	28cbc83a 	sub	r5,r5,r3
 80113c8:	000f883a 	mov	r7,zero
 80113cc:	003f8b06 	br	80111fc <__alt_data_end+0xfc0111fc>
 80113d0:	0021883a 	mov	r16,zero
 80113d4:	002b883a 	mov	r21,zero
 80113d8:	01c00044 	movi	r7,1
 80113dc:	003f8706 	br	80111fc <__alt_data_end+0xfc0111fc>
 80113e0:	01c000c4 	movi	r7,3
 80113e4:	003f8506 	br	80111fc <__alt_data_end+0xfc0111fc>
 80113e8:	05000104 	movi	r20,4
 80113ec:	0023883a 	mov	r17,zero
 80113f0:	0027883a 	mov	r19,zero
 80113f4:	02000044 	movi	r8,1
 80113f8:	003f6e06 	br	80111b4 <__alt_data_end+0xfc0111b4>
 80113fc:	05000304 	movi	r20,12
 8011400:	020000c4 	movi	r8,3
 8011404:	003f6b06 	br	80111b4 <__alt_data_end+0xfc0111b4>
 8011408:	01400434 	movhi	r5,16
 801140c:	000d883a 	mov	r6,zero
 8011410:	297fffc4 	addi	r5,r5,-1
 8011414:	04ffffc4 	movi	r19,-1
 8011418:	0201ffc4 	movi	r8,2047
 801141c:	003fa406 	br	80112b0 <__alt_data_end+0xfc0112b0>
 8011420:	043f0084 	movi	r16,-1022
 8011424:	84a1c83a 	sub	r16,r16,r18
 8011428:	00800e04 	movi	r2,56
 801142c:	14014d0e 	bge	r2,r16,8011964 <__divdf3+0x82c>
 8011430:	a180004c 	andi	r6,r20,1
 8011434:	0011883a 	mov	r8,zero
 8011438:	000b883a 	mov	r5,zero
 801143c:	0027883a 	mov	r19,zero
 8011440:	003f9b06 	br	80112b0 <__alt_data_end+0xfc0112b0>
 8011444:	8880022c 	andhi	r2,r17,8
 8011448:	1000f026 	beq	r2,zero,801180c <__divdf3+0x6d4>
 801144c:	8080022c 	andhi	r2,r16,8
 8011450:	1000ee1e 	bne	r2,zero,801180c <__divdf3+0x6d4>
 8011454:	00800434 	movhi	r2,16
 8011458:	81400234 	orhi	r5,r16,8
 801145c:	10bfffc4 	addi	r2,r2,-1
 8011460:	b80d883a 	mov	r6,r23
 8011464:	288a703a 	and	r5,r5,r2
 8011468:	a827883a 	mov	r19,r21
 801146c:	003fea06 	br	8011418 <__alt_data_end+0xfc011418>
 8011470:	84411c36 	bltu	r16,r17,80118e4 <__divdf3+0x7ac>
 8011474:	8c011a26 	beq	r17,r16,80118e0 <__divdf3+0x7a8>
 8011478:	94bfffc4 	addi	r18,r18,-1
 801147c:	dcc00015 	stw	r19,0(sp)
 8011480:	8811883a 	mov	r8,r17
 8011484:	002d883a 	mov	r22,zero
 8011488:	a80cd63a 	srli	r6,r21,24
 801148c:	8020923a 	slli	r16,r16,8
 8011490:	a82a923a 	slli	r21,r21,8
 8011494:	4009883a 	mov	r4,r8
 8011498:	342eb03a 	or	r23,r6,r16
 801149c:	dd400115 	stw	r21,4(sp)
 80114a0:	b82ad43a 	srli	r21,r23,16
 80114a4:	da000315 	stw	r8,12(sp)
 80114a8:	bcffffcc 	andi	r19,r23,65535
 80114ac:	a80b883a 	mov	r5,r21
 80114b0:	801088c0 	call	801088c <__udivsi3>
 80114b4:	1009883a 	mov	r4,r2
 80114b8:	980b883a 	mov	r5,r19
 80114bc:	1023883a 	mov	r17,r2
 80114c0:	80027f80 	call	80027f8 <__mulsi3>
 80114c4:	da000317 	ldw	r8,12(sp)
 80114c8:	a80b883a 	mov	r5,r21
 80114cc:	1039883a 	mov	fp,r2
 80114d0:	4009883a 	mov	r4,r8
 80114d4:	80108940 	call	8010894 <__umodsi3>
 80114d8:	d8c00017 	ldw	r3,0(sp)
 80114dc:	1004943a 	slli	r2,r2,16
 80114e0:	1810d43a 	srli	r8,r3,16
 80114e4:	120eb03a 	or	r7,r2,r8
 80114e8:	3f00062e 	bgeu	r7,fp,8011504 <__divdf3+0x3cc>
 80114ec:	3dcf883a 	add	r7,r7,r23
 80114f0:	88bfffc4 	addi	r2,r17,-1
 80114f4:	3dc10a36 	bltu	r7,r23,8011920 <__divdf3+0x7e8>
 80114f8:	3f01092e 	bgeu	r7,fp,8011920 <__divdf3+0x7e8>
 80114fc:	8c7fff84 	addi	r17,r17,-2
 8011500:	3dcf883a 	add	r7,r7,r23
 8011504:	3f39c83a 	sub	fp,r7,fp
 8011508:	e009883a 	mov	r4,fp
 801150c:	a80b883a 	mov	r5,r21
 8011510:	801088c0 	call	801088c <__udivsi3>
 8011514:	1009883a 	mov	r4,r2
 8011518:	980b883a 	mov	r5,r19
 801151c:	1021883a 	mov	r16,r2
 8011520:	80027f80 	call	80027f8 <__mulsi3>
 8011524:	e009883a 	mov	r4,fp
 8011528:	a80b883a 	mov	r5,r21
 801152c:	d8800315 	stw	r2,12(sp)
 8011530:	80108940 	call	8010894 <__umodsi3>
 8011534:	d9000017 	ldw	r4,0(sp)
 8011538:	1004943a 	slli	r2,r2,16
 801153c:	da000317 	ldw	r8,12(sp)
 8011540:	20ffffcc 	andi	r3,r4,65535
 8011544:	10ceb03a 	or	r7,r2,r3
 8011548:	3a00062e 	bgeu	r7,r8,8011564 <__divdf3+0x42c>
 801154c:	3dcf883a 	add	r7,r7,r23
 8011550:	80bfffc4 	addi	r2,r16,-1
 8011554:	3dc0f036 	bltu	r7,r23,8011918 <__divdf3+0x7e0>
 8011558:	3a00ef2e 	bgeu	r7,r8,8011918 <__divdf3+0x7e0>
 801155c:	843fff84 	addi	r16,r16,-2
 8011560:	3dcf883a 	add	r7,r7,r23
 8011564:	d8c00117 	ldw	r3,4(sp)
 8011568:	8822943a 	slli	r17,r17,16
 801156c:	3a0fc83a 	sub	r7,r7,r8
 8011570:	1806d43a 	srli	r3,r3,16
 8011574:	8462b03a 	or	r17,r16,r17
 8011578:	8affffcc 	andi	r11,r17,65535
 801157c:	d8c00015 	stw	r3,0(sp)
 8011580:	d8c00117 	ldw	r3,4(sp)
 8011584:	8820d43a 	srli	r16,r17,16
 8011588:	5809883a 	mov	r4,r11
 801158c:	1f3fffcc 	andi	fp,r3,65535
 8011590:	e00b883a 	mov	r5,fp
 8011594:	d9c00515 	stw	r7,20(sp)
 8011598:	dac00215 	stw	r11,8(sp)
 801159c:	80027f80 	call	80027f8 <__mulsi3>
 80115a0:	8009883a 	mov	r4,r16
 80115a4:	e00b883a 	mov	r5,fp
 80115a8:	d8800415 	stw	r2,16(sp)
 80115ac:	80027f80 	call	80027f8 <__mulsi3>
 80115b0:	d9400017 	ldw	r5,0(sp)
 80115b4:	8009883a 	mov	r4,r16
 80115b8:	d8800315 	stw	r2,12(sp)
 80115bc:	80027f80 	call	80027f8 <__mulsi3>
 80115c0:	dac00217 	ldw	r11,8(sp)
 80115c4:	d9400017 	ldw	r5,0(sp)
 80115c8:	d8800215 	stw	r2,8(sp)
 80115cc:	5809883a 	mov	r4,r11
 80115d0:	80027f80 	call	80027f8 <__mulsi3>
 80115d4:	da400417 	ldw	r9,16(sp)
 80115d8:	da800317 	ldw	r10,12(sp)
 80115dc:	d9c00517 	ldw	r7,20(sp)
 80115e0:	480ad43a 	srli	r5,r9,16
 80115e4:	5085883a 	add	r2,r10,r2
 80115e8:	db000217 	ldw	r12,8(sp)
 80115ec:	1151883a 	add	r8,r2,r5
 80115f0:	4280022e 	bgeu	r8,r10,80115fc <__divdf3+0x4c4>
 80115f4:	00800074 	movhi	r2,1
 80115f8:	6099883a 	add	r12,r12,r2
 80115fc:	400ad43a 	srli	r5,r8,16
 8011600:	4010943a 	slli	r8,r8,16
 8011604:	4c3fffcc 	andi	r16,r9,65535
 8011608:	6149883a 	add	r4,r12,r5
 801160c:	4411883a 	add	r8,r8,r16
 8011610:	3900a736 	bltu	r7,r4,80118b0 <__divdf3+0x778>
 8011614:	3900c426 	beq	r7,r4,8011928 <__divdf3+0x7f0>
 8011618:	3909c83a 	sub	r4,r7,r4
 801161c:	b221c83a 	sub	r16,r22,r8
 8011620:	b42d803a 	cmpltu	r22,r22,r16
 8011624:	25adc83a 	sub	r22,r4,r22
 8011628:	b5c0c626 	beq	r22,r23,8011944 <__divdf3+0x80c>
 801162c:	b009883a 	mov	r4,r22
 8011630:	a80b883a 	mov	r5,r21
 8011634:	801088c0 	call	801088c <__udivsi3>
 8011638:	1009883a 	mov	r4,r2
 801163c:	980b883a 	mov	r5,r19
 8011640:	d8800315 	stw	r2,12(sp)
 8011644:	80027f80 	call	80027f8 <__mulsi3>
 8011648:	a80b883a 	mov	r5,r21
 801164c:	b009883a 	mov	r4,r22
 8011650:	d8800415 	stw	r2,16(sp)
 8011654:	80108940 	call	8010894 <__umodsi3>
 8011658:	1004943a 	slli	r2,r2,16
 801165c:	800ed43a 	srli	r7,r16,16
 8011660:	da400417 	ldw	r9,16(sp)
 8011664:	da000317 	ldw	r8,12(sp)
 8011668:	11cab03a 	or	r5,r2,r7
 801166c:	2a40062e 	bgeu	r5,r9,8011688 <__divdf3+0x550>
 8011670:	2dcb883a 	add	r5,r5,r23
 8011674:	40bfffc4 	addi	r2,r8,-1
 8011678:	2dc0b436 	bltu	r5,r23,801194c <__divdf3+0x814>
 801167c:	2a40b32e 	bgeu	r5,r9,801194c <__divdf3+0x814>
 8011680:	423fff84 	addi	r8,r8,-2
 8011684:	2dcb883a 	add	r5,r5,r23
 8011688:	2a6dc83a 	sub	r22,r5,r9
 801168c:	b009883a 	mov	r4,r22
 8011690:	a80b883a 	mov	r5,r21
 8011694:	da000315 	stw	r8,12(sp)
 8011698:	801088c0 	call	801088c <__udivsi3>
 801169c:	980b883a 	mov	r5,r19
 80116a0:	1009883a 	mov	r4,r2
 80116a4:	d8800415 	stw	r2,16(sp)
 80116a8:	80027f80 	call	80027f8 <__mulsi3>
 80116ac:	b009883a 	mov	r4,r22
 80116b0:	a80b883a 	mov	r5,r21
 80116b4:	1027883a 	mov	r19,r2
 80116b8:	80108940 	call	8010894 <__umodsi3>
 80116bc:	1004943a 	slli	r2,r2,16
 80116c0:	843fffcc 	andi	r16,r16,65535
 80116c4:	da000317 	ldw	r8,12(sp)
 80116c8:	140eb03a 	or	r7,r2,r16
 80116cc:	da400417 	ldw	r9,16(sp)
 80116d0:	3cc0062e 	bgeu	r7,r19,80116ec <__divdf3+0x5b4>
 80116d4:	3dcf883a 	add	r7,r7,r23
 80116d8:	48bfffc4 	addi	r2,r9,-1
 80116dc:	3dc09d36 	bltu	r7,r23,8011954 <__divdf3+0x81c>
 80116e0:	3cc09c2e 	bgeu	r7,r19,8011954 <__divdf3+0x81c>
 80116e4:	4a7fff84 	addi	r9,r9,-2
 80116e8:	3dcf883a 	add	r7,r7,r23
 80116ec:	4010943a 	slli	r8,r8,16
 80116f0:	3cebc83a 	sub	r21,r7,r19
 80116f4:	e00b883a 	mov	r5,fp
 80116f8:	4a26b03a 	or	r19,r9,r8
 80116fc:	99ffffcc 	andi	r7,r19,65535
 8011700:	9820d43a 	srli	r16,r19,16
 8011704:	3809883a 	mov	r4,r7
 8011708:	d9c00515 	stw	r7,20(sp)
 801170c:	80027f80 	call	80027f8 <__mulsi3>
 8011710:	8009883a 	mov	r4,r16
 8011714:	e00b883a 	mov	r5,fp
 8011718:	102d883a 	mov	r22,r2
 801171c:	80027f80 	call	80027f8 <__mulsi3>
 8011720:	d9400017 	ldw	r5,0(sp)
 8011724:	8009883a 	mov	r4,r16
 8011728:	1039883a 	mov	fp,r2
 801172c:	80027f80 	call	80027f8 <__mulsi3>
 8011730:	d9c00517 	ldw	r7,20(sp)
 8011734:	d9400017 	ldw	r5,0(sp)
 8011738:	1021883a 	mov	r16,r2
 801173c:	3809883a 	mov	r4,r7
 8011740:	80027f80 	call	80027f8 <__mulsi3>
 8011744:	b008d43a 	srli	r4,r22,16
 8011748:	e085883a 	add	r2,fp,r2
 801174c:	1109883a 	add	r4,r2,r4
 8011750:	2700022e 	bgeu	r4,fp,801175c <__divdf3+0x624>
 8011754:	00800074 	movhi	r2,1
 8011758:	80a1883a 	add	r16,r16,r2
 801175c:	200ad43a 	srli	r5,r4,16
 8011760:	2008943a 	slli	r4,r4,16
 8011764:	b5bfffcc 	andi	r22,r22,65535
 8011768:	8145883a 	add	r2,r16,r5
 801176c:	2589883a 	add	r4,r4,r22
 8011770:	a8802c36 	bltu	r21,r2,8011824 <__divdf3+0x6ec>
 8011774:	a880a426 	beq	r21,r2,8011a08 <__divdf3+0x8d0>
 8011778:	9cc00054 	ori	r19,r19,1
 801177c:	9200ffc4 	addi	r8,r18,1023
 8011780:	023f270e 	bge	zero,r8,8011420 <__alt_data_end+0xfc011420>
 8011784:	988001cc 	andi	r2,r19,7
 8011788:	10000726 	beq	r2,zero,80117a8 <__divdf3+0x670>
 801178c:	990003cc 	andi	r4,r19,15
 8011790:	00800104 	movi	r2,4
 8011794:	20800426 	beq	r4,r2,80117a8 <__divdf3+0x670>
 8011798:	9885883a 	add	r2,r19,r2
 801179c:	14e7803a 	cmpltu	r19,r2,r19
 80117a0:	8ce3883a 	add	r17,r17,r19
 80117a4:	1027883a 	mov	r19,r2
 80117a8:	8880402c 	andhi	r2,r17,256
 80117ac:	10000426 	beq	r2,zero,80117c0 <__divdf3+0x688>
 80117b0:	00bfc034 	movhi	r2,65280
 80117b4:	10bfffc4 	addi	r2,r2,-1
 80117b8:	92010004 	addi	r8,r18,1024
 80117bc:	88a2703a 	and	r17,r17,r2
 80117c0:	0081ff84 	movi	r2,2046
 80117c4:	123eb616 	blt	r2,r8,80112a0 <__alt_data_end+0xfc0112a0>
 80117c8:	9826d0fa 	srli	r19,r19,3
 80117cc:	8804977a 	slli	r2,r17,29
 80117d0:	8820927a 	slli	r16,r17,9
 80117d4:	4201ffcc 	andi	r8,r8,2047
 80117d8:	14e6b03a 	or	r19,r2,r19
 80117dc:	800ad33a 	srli	r5,r16,12
 80117e0:	a180004c 	andi	r6,r20,1
 80117e4:	003eb206 	br	80112b0 <__alt_data_end+0xfc0112b0>
 80117e8:	008000c4 	movi	r2,3
 80117ec:	4080ac26 	beq	r8,r2,8011aa0 <__divdf3+0x968>
 80117f0:	00800044 	movi	r2,1
 80117f4:	4080591e 	bne	r8,r2,801195c <__divdf3+0x824>
 80117f8:	e00d883a 	mov	r6,fp
 80117fc:	0011883a 	mov	r8,zero
 8011800:	000b883a 	mov	r5,zero
 8011804:	0027883a 	mov	r19,zero
 8011808:	003ea906 	br	80112b0 <__alt_data_end+0xfc0112b0>
 801180c:	00800434 	movhi	r2,16
 8011810:	89400234 	orhi	r5,r17,8
 8011814:	10bfffc4 	addi	r2,r2,-1
 8011818:	b00d883a 	mov	r6,r22
 801181c:	288a703a 	and	r5,r5,r2
 8011820:	003efd06 	br	8011418 <__alt_data_end+0xfc011418>
 8011824:	adcf883a 	add	r7,r21,r23
 8011828:	997fffc4 	addi	r5,r19,-1
 801182c:	3dc0412e 	bgeu	r7,r23,8011934 <__divdf3+0x7fc>
 8011830:	2827883a 	mov	r19,r5
 8011834:	38bfd01e 	bne	r7,r2,8011778 <__alt_data_end+0xfc011778>
 8011838:	d8c00117 	ldw	r3,4(sp)
 801183c:	193fce1e 	bne	r3,r4,8011778 <__alt_data_end+0xfc011778>
 8011840:	003fce06 	br	801177c <__alt_data_end+0xfc01177c>
 8011844:	d9800215 	stw	r6,8(sp)
 8011848:	d9c00515 	stw	r7,20(sp)
 801184c:	80130340 	call	8013034 <__clzsi2>
 8011850:	10c00804 	addi	r3,r2,32
 8011854:	010009c4 	movi	r4,39
 8011858:	d9800217 	ldw	r6,8(sp)
 801185c:	d9c00517 	ldw	r7,20(sp)
 8011860:	20feb20e 	bge	r4,r3,801132c <__alt_data_end+0xfc01132c>
 8011864:	117ffe04 	addi	r5,r2,-8
 8011868:	a162983a 	sll	r17,r20,r5
 801186c:	0027883a 	mov	r19,zero
 8011870:	003eb506 	br	8011348 <__alt_data_end+0xfc011348>
 8011874:	3009883a 	mov	r4,r6
 8011878:	d9800215 	stw	r6,8(sp)
 801187c:	da000315 	stw	r8,12(sp)
 8011880:	da400415 	stw	r9,16(sp)
 8011884:	80130340 	call	8013034 <__clzsi2>
 8011888:	10c00804 	addi	r3,r2,32
 801188c:	010009c4 	movi	r4,39
 8011890:	d9800217 	ldw	r6,8(sp)
 8011894:	da000317 	ldw	r8,12(sp)
 8011898:	da400417 	ldw	r9,16(sp)
 801189c:	20fec10e 	bge	r4,r3,80113a4 <__alt_data_end+0xfc0113a4>
 80118a0:	10bffe04 	addi	r2,r2,-8
 80118a4:	a8a0983a 	sll	r16,r21,r2
 80118a8:	002b883a 	mov	r21,zero
 80118ac:	003ec406 	br	80113c0 <__alt_data_end+0xfc0113c0>
 80118b0:	d8c00117 	ldw	r3,4(sp)
 80118b4:	b0ed883a 	add	r22,r22,r3
 80118b8:	b0c5803a 	cmpltu	r2,r22,r3
 80118bc:	15c5883a 	add	r2,r2,r23
 80118c0:	11cf883a 	add	r7,r2,r7
 80118c4:	88bfffc4 	addi	r2,r17,-1
 80118c8:	b9c00d2e 	bgeu	r23,r7,8011900 <__divdf3+0x7c8>
 80118cc:	39003f36 	bltu	r7,r4,80119cc <__divdf3+0x894>
 80118d0:	21c06a26 	beq	r4,r7,8011a7c <__divdf3+0x944>
 80118d4:	3909c83a 	sub	r4,r7,r4
 80118d8:	1023883a 	mov	r17,r2
 80118dc:	003f4f06 	br	801161c <__alt_data_end+0xfc01161c>
 80118e0:	9d7ee536 	bltu	r19,r21,8011478 <__alt_data_end+0xfc011478>
 80118e4:	982ed07a 	srli	r23,r19,1
 80118e8:	880497fa 	slli	r2,r17,31
 80118ec:	8810d07a 	srli	r8,r17,1
 80118f0:	982c97fa 	slli	r22,r19,31
 80118f4:	b884b03a 	or	r2,r23,r2
 80118f8:	d8800015 	stw	r2,0(sp)
 80118fc:	003ee206 	br	8011488 <__alt_data_end+0xfc011488>
 8011900:	3dfff41e 	bne	r7,r23,80118d4 <__alt_data_end+0xfc0118d4>
 8011904:	d8c00117 	ldw	r3,4(sp)
 8011908:	b0fff02e 	bgeu	r22,r3,80118cc <__alt_data_end+0xfc0118cc>
 801190c:	b909c83a 	sub	r4,r23,r4
 8011910:	1023883a 	mov	r17,r2
 8011914:	003f4106 	br	801161c <__alt_data_end+0xfc01161c>
 8011918:	1021883a 	mov	r16,r2
 801191c:	003f1106 	br	8011564 <__alt_data_end+0xfc011564>
 8011920:	1023883a 	mov	r17,r2
 8011924:	003ef706 	br	8011504 <__alt_data_end+0xfc011504>
 8011928:	b23fe136 	bltu	r22,r8,80118b0 <__alt_data_end+0xfc0118b0>
 801192c:	0009883a 	mov	r4,zero
 8011930:	003f3a06 	br	801161c <__alt_data_end+0xfc01161c>
 8011934:	38802c36 	bltu	r7,r2,80119e8 <__divdf3+0x8b0>
 8011938:	11c05326 	beq	r2,r7,8011a88 <__divdf3+0x950>
 801193c:	2827883a 	mov	r19,r5
 8011940:	003f8d06 	br	8011778 <__alt_data_end+0xfc011778>
 8011944:	04ffffc4 	movi	r19,-1
 8011948:	003f8c06 	br	801177c <__alt_data_end+0xfc01177c>
 801194c:	1011883a 	mov	r8,r2
 8011950:	003f4d06 	br	8011688 <__alt_data_end+0xfc011688>
 8011954:	1013883a 	mov	r9,r2
 8011958:	003f6406 	br	80116ec <__alt_data_end+0xfc0116ec>
 801195c:	e029883a 	mov	r20,fp
 8011960:	003f8606 	br	801177c <__alt_data_end+0xfc01177c>
 8011964:	008007c4 	movi	r2,31
 8011968:	14002a16 	blt	r2,r16,8011a14 <__divdf3+0x8dc>
 801196c:	91410784 	addi	r5,r18,1054
 8011970:	9c0cd83a 	srl	r6,r19,r16
 8011974:	8948983a 	sll	r4,r17,r5
 8011978:	9944983a 	sll	r2,r19,r5
 801197c:	8c20d83a 	srl	r16,r17,r16
 8011980:	3108b03a 	or	r4,r6,r4
 8011984:	1004c03a 	cmpne	r2,r2,zero
 8011988:	2084b03a 	or	r2,r4,r2
 801198c:	110001cc 	andi	r4,r2,7
 8011990:	20000726 	beq	r4,zero,80119b0 <__divdf3+0x878>
 8011994:	114003cc 	andi	r5,r2,15
 8011998:	01000104 	movi	r4,4
 801199c:	29000426 	beq	r5,r4,80119b0 <__divdf3+0x878>
 80119a0:	11000104 	addi	r4,r2,4
 80119a4:	2085803a 	cmpltu	r2,r4,r2
 80119a8:	80a1883a 	add	r16,r16,r2
 80119ac:	2005883a 	mov	r2,r4
 80119b0:	8100202c 	andhi	r4,r16,128
 80119b4:	20002d26 	beq	r4,zero,8011a6c <__divdf3+0x934>
 80119b8:	a180004c 	andi	r6,r20,1
 80119bc:	02000044 	movi	r8,1
 80119c0:	000b883a 	mov	r5,zero
 80119c4:	0027883a 	mov	r19,zero
 80119c8:	003e3906 	br	80112b0 <__alt_data_end+0xfc0112b0>
 80119cc:	d8c00117 	ldw	r3,4(sp)
 80119d0:	8c7fff84 	addi	r17,r17,-2
 80119d4:	b0ed883a 	add	r22,r22,r3
 80119d8:	b0c5803a 	cmpltu	r2,r22,r3
 80119dc:	15c5883a 	add	r2,r2,r23
 80119e0:	11cf883a 	add	r7,r2,r7
 80119e4:	003f0c06 	br	8011618 <__alt_data_end+0xfc011618>
 80119e8:	d8c00117 	ldw	r3,4(sp)
 80119ec:	997fff84 	addi	r5,r19,-2
 80119f0:	18d1883a 	add	r8,r3,r3
 80119f4:	40c7803a 	cmpltu	r3,r8,r3
 80119f8:	1dcd883a 	add	r6,r3,r23
 80119fc:	398f883a 	add	r7,r7,r6
 8011a00:	da000115 	stw	r8,4(sp)
 8011a04:	003f8a06 	br	8011830 <__alt_data_end+0xfc011830>
 8011a08:	203f861e 	bne	r4,zero,8011824 <__alt_data_end+0xfc011824>
 8011a0c:	d8000115 	stw	zero,4(sp)
 8011a10:	003f8906 	br	8011838 <__alt_data_end+0xfc011838>
 8011a14:	00bef884 	movi	r2,-1054
 8011a18:	1485c83a 	sub	r2,r2,r18
 8011a1c:	01000804 	movi	r4,32
 8011a20:	8884d83a 	srl	r2,r17,r2
 8011a24:	81001c26 	beq	r16,r4,8011a98 <__divdf3+0x960>
 8011a28:	91010f84 	addi	r4,r18,1086
 8011a2c:	8908983a 	sll	r4,r17,r4
 8011a30:	24c8b03a 	or	r4,r4,r19
 8011a34:	2008c03a 	cmpne	r4,r4,zero
 8011a38:	2084b03a 	or	r2,r4,r2
 8011a3c:	140001cc 	andi	r16,r2,7
 8011a40:	8000061e 	bne	r16,zero,8011a5c <__divdf3+0x924>
 8011a44:	000b883a 	mov	r5,zero
 8011a48:	1004d0fa 	srli	r2,r2,3
 8011a4c:	a180004c 	andi	r6,r20,1
 8011a50:	0011883a 	mov	r8,zero
 8011a54:	1426b03a 	or	r19,r2,r16
 8011a58:	003e1506 	br	80112b0 <__alt_data_end+0xfc0112b0>
 8011a5c:	114003cc 	andi	r5,r2,15
 8011a60:	01000104 	movi	r4,4
 8011a64:	0021883a 	mov	r16,zero
 8011a68:	293fcd1e 	bne	r5,r4,80119a0 <__alt_data_end+0xfc0119a0>
 8011a6c:	800a927a 	slli	r5,r16,9
 8011a70:	8020977a 	slli	r16,r16,29
 8011a74:	280ad33a 	srli	r5,r5,12
 8011a78:	003ff306 	br	8011a48 <__alt_data_end+0xfc011a48>
 8011a7c:	b23fd336 	bltu	r22,r8,80119cc <__alt_data_end+0xfc0119cc>
 8011a80:	1023883a 	mov	r17,r2
 8011a84:	003fa906 	br	801192c <__alt_data_end+0xfc01192c>
 8011a88:	d8c00117 	ldw	r3,4(sp)
 8011a8c:	193fd636 	bltu	r3,r4,80119e8 <__alt_data_end+0xfc0119e8>
 8011a90:	2827883a 	mov	r19,r5
 8011a94:	003f6806 	br	8011838 <__alt_data_end+0xfc011838>
 8011a98:	0009883a 	mov	r4,zero
 8011a9c:	003fe406 	br	8011a30 <__alt_data_end+0xfc011a30>
 8011aa0:	00800434 	movhi	r2,16
 8011aa4:	89400234 	orhi	r5,r17,8
 8011aa8:	10bfffc4 	addi	r2,r2,-1
 8011aac:	e00d883a 	mov	r6,fp
 8011ab0:	288a703a 	and	r5,r5,r2
 8011ab4:	003e5806 	br	8011418 <__alt_data_end+0xfc011418>

08011ab8 <__eqdf2>:
 8011ab8:	2804d53a 	srli	r2,r5,20
 8011abc:	3806d53a 	srli	r3,r7,20
 8011ac0:	02000434 	movhi	r8,16
 8011ac4:	423fffc4 	addi	r8,r8,-1
 8011ac8:	1081ffcc 	andi	r2,r2,2047
 8011acc:	0241ffc4 	movi	r9,2047
 8011ad0:	2a14703a 	and	r10,r5,r8
 8011ad4:	18c1ffcc 	andi	r3,r3,2047
 8011ad8:	3a10703a 	and	r8,r7,r8
 8011adc:	280ad7fa 	srli	r5,r5,31
 8011ae0:	380ed7fa 	srli	r7,r7,31
 8011ae4:	12400f26 	beq	r2,r9,8011b24 <__eqdf2+0x6c>
 8011ae8:	0241ffc4 	movi	r9,2047
 8011aec:	1a400326 	beq	r3,r9,8011afc <__eqdf2+0x44>
 8011af0:	10c00526 	beq	r2,r3,8011b08 <__eqdf2+0x50>
 8011af4:	00800044 	movi	r2,1
 8011af8:	f800283a 	ret
 8011afc:	4192b03a 	or	r9,r8,r6
 8011b00:	483ffc1e 	bne	r9,zero,8011af4 <__alt_data_end+0xfc011af4>
 8011b04:	10fffb1e 	bne	r2,r3,8011af4 <__alt_data_end+0xfc011af4>
 8011b08:	523ffa1e 	bne	r10,r8,8011af4 <__alt_data_end+0xfc011af4>
 8011b0c:	21bff91e 	bne	r4,r6,8011af4 <__alt_data_end+0xfc011af4>
 8011b10:	29c00826 	beq	r5,r7,8011b34 <__eqdf2+0x7c>
 8011b14:	103ff71e 	bne	r2,zero,8011af4 <__alt_data_end+0xfc011af4>
 8011b18:	5104b03a 	or	r2,r10,r4
 8011b1c:	1004c03a 	cmpne	r2,r2,zero
 8011b20:	f800283a 	ret
 8011b24:	5112b03a 	or	r9,r10,r4
 8011b28:	483fef26 	beq	r9,zero,8011ae8 <__alt_data_end+0xfc011ae8>
 8011b2c:	00800044 	movi	r2,1
 8011b30:	f800283a 	ret
 8011b34:	0005883a 	mov	r2,zero
 8011b38:	f800283a 	ret

08011b3c <__gedf2>:
 8011b3c:	2804d53a 	srli	r2,r5,20
 8011b40:	3806d53a 	srli	r3,r7,20
 8011b44:	02000434 	movhi	r8,16
 8011b48:	423fffc4 	addi	r8,r8,-1
 8011b4c:	0241ffc4 	movi	r9,2047
 8011b50:	1081ffcc 	andi	r2,r2,2047
 8011b54:	2a14703a 	and	r10,r5,r8
 8011b58:	1a46703a 	and	r3,r3,r9
 8011b5c:	3a10703a 	and	r8,r7,r8
 8011b60:	280ad7fa 	srli	r5,r5,31
 8011b64:	380ed7fa 	srli	r7,r7,31
 8011b68:	12400b26 	beq	r2,r9,8011b98 <__gedf2+0x5c>
 8011b6c:	1a401626 	beq	r3,r9,8011bc8 <__gedf2+0x8c>
 8011b70:	10000c1e 	bne	r2,zero,8011ba4 <__gedf2+0x68>
 8011b74:	5112b03a 	or	r9,r10,r4
 8011b78:	4813003a 	cmpeq	r9,r9,zero
 8011b7c:	4817883a 	mov	r11,r9
 8011b80:	18000c1e 	bne	r3,zero,8011bb4 <__gedf2+0x78>
 8011b84:	4198b03a 	or	r12,r8,r6
 8011b88:	60000a1e 	bne	r12,zero,8011bb4 <__gedf2+0x78>
 8011b8c:	48001326 	beq	r9,zero,8011bdc <__gedf2+0xa0>
 8011b90:	0005883a 	mov	r2,zero
 8011b94:	f800283a 	ret
 8011b98:	5112b03a 	or	r9,r10,r4
 8011b9c:	4800191e 	bne	r9,zero,8011c04 <__gedf2+0xc8>
 8011ba0:	18800926 	beq	r3,r2,8011bc8 <__gedf2+0x8c>
 8011ba4:	18000b1e 	bne	r3,zero,8011bd4 <__gedf2+0x98>
 8011ba8:	4192b03a 	or	r9,r8,r6
 8011bac:	0017883a 	mov	r11,zero
 8011bb0:	48000a26 	beq	r9,zero,8011bdc <__gedf2+0xa0>
 8011bb4:	39c03fcc 	andi	r7,r7,255
 8011bb8:	58000726 	beq	r11,zero,8011bd8 <__gedf2+0x9c>
 8011bbc:	3800081e 	bne	r7,zero,8011be0 <__gedf2+0xa4>
 8011bc0:	00bfffc4 	movi	r2,-1
 8011bc4:	f800283a 	ret
 8011bc8:	4192b03a 	or	r9,r8,r6
 8011bcc:	48000d1e 	bne	r9,zero,8011c04 <__gedf2+0xc8>
 8011bd0:	103fe826 	beq	r2,zero,8011b74 <__alt_data_end+0xfc011b74>
 8011bd4:	39c03fcc 	andi	r7,r7,255
 8011bd8:	29c00326 	beq	r5,r7,8011be8 <__gedf2+0xac>
 8011bdc:	283ff81e 	bne	r5,zero,8011bc0 <__alt_data_end+0xfc011bc0>
 8011be0:	00800044 	movi	r2,1
 8011be4:	f800283a 	ret
 8011be8:	18bffc16 	blt	r3,r2,8011bdc <__alt_data_end+0xfc011bdc>
 8011bec:	10c00316 	blt	r2,r3,8011bfc <__gedf2+0xc0>
 8011bf0:	42bffa36 	bltu	r8,r10,8011bdc <__alt_data_end+0xfc011bdc>
 8011bf4:	52000526 	beq	r10,r8,8011c0c <__gedf2+0xd0>
 8011bf8:	523fe52e 	bgeu	r10,r8,8011b90 <__alt_data_end+0xfc011b90>
 8011bfc:	283ff026 	beq	r5,zero,8011bc0 <__alt_data_end+0xfc011bc0>
 8011c00:	003ff706 	br	8011be0 <__alt_data_end+0xfc011be0>
 8011c04:	00bfff84 	movi	r2,-2
 8011c08:	f800283a 	ret
 8011c0c:	313ff336 	bltu	r6,r4,8011bdc <__alt_data_end+0xfc011bdc>
 8011c10:	21bfdf2e 	bgeu	r4,r6,8011b90 <__alt_data_end+0xfc011b90>
 8011c14:	283fea26 	beq	r5,zero,8011bc0 <__alt_data_end+0xfc011bc0>
 8011c18:	003ff106 	br	8011be0 <__alt_data_end+0xfc011be0>

08011c1c <__ledf2>:
 8011c1c:	2804d53a 	srli	r2,r5,20
 8011c20:	3810d53a 	srli	r8,r7,20
 8011c24:	00c00434 	movhi	r3,16
 8011c28:	18ffffc4 	addi	r3,r3,-1
 8011c2c:	0241ffc4 	movi	r9,2047
 8011c30:	1081ffcc 	andi	r2,r2,2047
 8011c34:	28d4703a 	and	r10,r5,r3
 8011c38:	4250703a 	and	r8,r8,r9
 8011c3c:	38c6703a 	and	r3,r7,r3
 8011c40:	280ad7fa 	srli	r5,r5,31
 8011c44:	380ed7fa 	srli	r7,r7,31
 8011c48:	12400b26 	beq	r2,r9,8011c78 <__ledf2+0x5c>
 8011c4c:	42401926 	beq	r8,r9,8011cb4 <__ledf2+0x98>
 8011c50:	10000c1e 	bne	r2,zero,8011c84 <__ledf2+0x68>
 8011c54:	5112b03a 	or	r9,r10,r4
 8011c58:	4813003a 	cmpeq	r9,r9,zero
 8011c5c:	4817883a 	mov	r11,r9
 8011c60:	40000f26 	beq	r8,zero,8011ca0 <__ledf2+0x84>
 8011c64:	39c03fcc 	andi	r7,r7,255
 8011c68:	58001826 	beq	r11,zero,8011ccc <__ledf2+0xb0>
 8011c6c:	38000a1e 	bne	r7,zero,8011c98 <__ledf2+0x7c>
 8011c70:	00bfffc4 	movi	r2,-1
 8011c74:	f800283a 	ret
 8011c78:	5112b03a 	or	r9,r10,r4
 8011c7c:	48000f1e 	bne	r9,zero,8011cbc <__ledf2+0xa0>
 8011c80:	40800c26 	beq	r8,r2,8011cb4 <__ledf2+0x98>
 8011c84:	4000101e 	bne	r8,zero,8011cc8 <__ledf2+0xac>
 8011c88:	1992b03a 	or	r9,r3,r6
 8011c8c:	0017883a 	mov	r11,zero
 8011c90:	483ff41e 	bne	r9,zero,8011c64 <__alt_data_end+0xfc011c64>
 8011c94:	283ff61e 	bne	r5,zero,8011c70 <__alt_data_end+0xfc011c70>
 8011c98:	00800044 	movi	r2,1
 8011c9c:	f800283a 	ret
 8011ca0:	1998b03a 	or	r12,r3,r6
 8011ca4:	603fef1e 	bne	r12,zero,8011c64 <__alt_data_end+0xfc011c64>
 8011ca8:	483ffa26 	beq	r9,zero,8011c94 <__alt_data_end+0xfc011c94>
 8011cac:	0005883a 	mov	r2,zero
 8011cb0:	f800283a 	ret
 8011cb4:	1992b03a 	or	r9,r3,r6
 8011cb8:	48000226 	beq	r9,zero,8011cc4 <__ledf2+0xa8>
 8011cbc:	00800084 	movi	r2,2
 8011cc0:	f800283a 	ret
 8011cc4:	103fe326 	beq	r2,zero,8011c54 <__alt_data_end+0xfc011c54>
 8011cc8:	39c03fcc 	andi	r7,r7,255
 8011ccc:	29fff11e 	bne	r5,r7,8011c94 <__alt_data_end+0xfc011c94>
 8011cd0:	40bff016 	blt	r8,r2,8011c94 <__alt_data_end+0xfc011c94>
 8011cd4:	12000316 	blt	r2,r8,8011ce4 <__ledf2+0xc8>
 8011cd8:	1abfee36 	bltu	r3,r10,8011c94 <__alt_data_end+0xfc011c94>
 8011cdc:	50c00326 	beq	r10,r3,8011cec <__ledf2+0xd0>
 8011ce0:	50fff22e 	bgeu	r10,r3,8011cac <__alt_data_end+0xfc011cac>
 8011ce4:	283fe226 	beq	r5,zero,8011c70 <__alt_data_end+0xfc011c70>
 8011ce8:	003feb06 	br	8011c98 <__alt_data_end+0xfc011c98>
 8011cec:	313fe936 	bltu	r6,r4,8011c94 <__alt_data_end+0xfc011c94>
 8011cf0:	21bfee2e 	bgeu	r4,r6,8011cac <__alt_data_end+0xfc011cac>
 8011cf4:	283fde26 	beq	r5,zero,8011c70 <__alt_data_end+0xfc011c70>
 8011cf8:	003fe706 	br	8011c98 <__alt_data_end+0xfc011c98>

08011cfc <__muldf3>:
 8011cfc:	deffee04 	addi	sp,sp,-72
 8011d00:	dd000c15 	stw	r20,48(sp)
 8011d04:	2828d53a 	srli	r20,r5,20
 8011d08:	dd400d15 	stw	r21,52(sp)
 8011d0c:	282ad7fa 	srli	r21,r5,31
 8011d10:	dc000815 	stw	r16,32(sp)
 8011d14:	04000434 	movhi	r16,16
 8011d18:	ddc00f15 	stw	r23,60(sp)
 8011d1c:	dcc00b15 	stw	r19,44(sp)
 8011d20:	dc800a15 	stw	r18,40(sp)
 8011d24:	843fffc4 	addi	r16,r16,-1
 8011d28:	dfc01115 	stw	ra,68(sp)
 8011d2c:	df001015 	stw	fp,64(sp)
 8011d30:	dd800e15 	stw	r22,56(sp)
 8011d34:	dc400915 	stw	r17,36(sp)
 8011d38:	a501ffcc 	andi	r20,r20,2047
 8011d3c:	2025883a 	mov	r18,r4
 8011d40:	202f883a 	mov	r23,r4
 8011d44:	2c20703a 	and	r16,r5,r16
 8011d48:	a827883a 	mov	r19,r21
 8011d4c:	aa403fcc 	andi	r9,r21,255
 8011d50:	a0005926 	beq	r20,zero,8011eb8 <__muldf3+0x1bc>
 8011d54:	0081ffc4 	movi	r2,2047
 8011d58:	a0803426 	beq	r20,r2,8011e2c <__muldf3+0x130>
 8011d5c:	84000434 	orhi	r16,r16,16
 8011d60:	2004d77a 	srli	r2,r4,29
 8011d64:	802090fa 	slli	r16,r16,3
 8011d68:	202e90fa 	slli	r23,r4,3
 8011d6c:	a53f0044 	addi	r20,r20,-1023
 8011d70:	80a0b03a 	or	r16,r16,r2
 8011d74:	000b883a 	mov	r5,zero
 8011d78:	0039883a 	mov	fp,zero
 8011d7c:	3806d53a 	srli	r3,r7,20
 8011d80:	382cd7fa 	srli	r22,r7,31
 8011d84:	00800434 	movhi	r2,16
 8011d88:	10bfffc4 	addi	r2,r2,-1
 8011d8c:	18c1ffcc 	andi	r3,r3,2047
 8011d90:	3025883a 	mov	r18,r6
 8011d94:	38a2703a 	and	r17,r7,r2
 8011d98:	b2803fcc 	andi	r10,r22,255
 8011d9c:	18006426 	beq	r3,zero,8011f30 <__muldf3+0x234>
 8011da0:	0081ffc4 	movi	r2,2047
 8011da4:	18805c26 	beq	r3,r2,8011f18 <__muldf3+0x21c>
 8011da8:	8c400434 	orhi	r17,r17,16
 8011dac:	3004d77a 	srli	r2,r6,29
 8011db0:	882290fa 	slli	r17,r17,3
 8011db4:	302490fa 	slli	r18,r6,3
 8011db8:	18ff0044 	addi	r3,r3,-1023
 8011dbc:	88a2b03a 	or	r17,r17,r2
 8011dc0:	000f883a 	mov	r7,zero
 8011dc4:	394ab03a 	or	r5,r7,r5
 8011dc8:	280a90ba 	slli	r5,r5,2
 8011dcc:	00820074 	movhi	r2,2049
 8011dd0:	10877b04 	addi	r2,r2,7660
 8011dd4:	288b883a 	add	r5,r5,r2
 8011dd8:	28800017 	ldw	r2,0(r5)
 8011ddc:	a0c7883a 	add	r3,r20,r3
 8011de0:	b54cf03a 	xor	r6,r22,r21
 8011de4:	1a000044 	addi	r8,r3,1
 8011de8:	1000683a 	jmp	r2
 8011dec:	08012030 	cmpltui	zero,at,1152
 8011df0:	0801201c 	xori	zero,at,1152
 8011df4:	0801201c 	xori	zero,at,1152
 8011df8:	08012008 	cmpgei	zero,at,1152
 8011dfc:	08011e48 	cmpgei	zero,at,1145
 8011e00:	08011e48 	cmpgei	zero,at,1145
 8011e04:	08011ff0 	cmpltui	zero,at,1151
 8011e08:	08012008 	cmpgei	zero,at,1152
 8011e0c:	08011e48 	cmpgei	zero,at,1145
 8011e10:	08011ff0 	cmpltui	zero,at,1151
 8011e14:	08011e48 	cmpgei	zero,at,1145
 8011e18:	08012008 	cmpgei	zero,at,1152
 8011e1c:	08011e4c 	andi	zero,at,1145
 8011e20:	08011e4c 	andi	zero,at,1145
 8011e24:	08011e4c 	andi	zero,at,1145
 8011e28:	0801236c 	andhi	zero,at,1165
 8011e2c:	8104b03a 	or	r2,r16,r4
 8011e30:	10006c1e 	bne	r2,zero,8011fe4 <__muldf3+0x2e8>
 8011e34:	01400204 	movi	r5,8
 8011e38:	0021883a 	mov	r16,zero
 8011e3c:	002f883a 	mov	r23,zero
 8011e40:	07000084 	movi	fp,2
 8011e44:	003fcd06 	br	8011d7c <__alt_data_end+0xfc011d7c>
 8011e48:	3013883a 	mov	r9,r6
 8011e4c:	00800084 	movi	r2,2
 8011e50:	e080501e 	bne	fp,r2,8011f94 <__muldf3+0x298>
 8011e54:	4cc0004c 	andi	r19,r9,1
 8011e58:	0101ffc4 	movi	r4,2047
 8011e5c:	0021883a 	mov	r16,zero
 8011e60:	002f883a 	mov	r23,zero
 8011e64:	2008953a 	slli	r4,r4,20
 8011e68:	98c03fcc 	andi	r3,r19,255
 8011e6c:	04400434 	movhi	r17,16
 8011e70:	8c7fffc4 	addi	r17,r17,-1
 8011e74:	180697fa 	slli	r3,r3,31
 8011e78:	8460703a 	and	r16,r16,r17
 8011e7c:	8120b03a 	or	r16,r16,r4
 8011e80:	80c6b03a 	or	r3,r16,r3
 8011e84:	b805883a 	mov	r2,r23
 8011e88:	dfc01117 	ldw	ra,68(sp)
 8011e8c:	df001017 	ldw	fp,64(sp)
 8011e90:	ddc00f17 	ldw	r23,60(sp)
 8011e94:	dd800e17 	ldw	r22,56(sp)
 8011e98:	dd400d17 	ldw	r21,52(sp)
 8011e9c:	dd000c17 	ldw	r20,48(sp)
 8011ea0:	dcc00b17 	ldw	r19,44(sp)
 8011ea4:	dc800a17 	ldw	r18,40(sp)
 8011ea8:	dc400917 	ldw	r17,36(sp)
 8011eac:	dc000817 	ldw	r16,32(sp)
 8011eb0:	dec01204 	addi	sp,sp,72
 8011eb4:	f800283a 	ret
 8011eb8:	8104b03a 	or	r2,r16,r4
 8011ebc:	10004426 	beq	r2,zero,8011fd0 <__muldf3+0x2d4>
 8011ec0:	80014b26 	beq	r16,zero,80123f0 <__muldf3+0x6f4>
 8011ec4:	8009883a 	mov	r4,r16
 8011ec8:	d9800715 	stw	r6,28(sp)
 8011ecc:	d9c00215 	stw	r7,8(sp)
 8011ed0:	da400415 	stw	r9,16(sp)
 8011ed4:	80130340 	call	8013034 <__clzsi2>
 8011ed8:	d9800717 	ldw	r6,28(sp)
 8011edc:	d9c00217 	ldw	r7,8(sp)
 8011ee0:	da400417 	ldw	r9,16(sp)
 8011ee4:	1007883a 	mov	r3,r2
 8011ee8:	01000a04 	movi	r4,40
 8011eec:	1dfffe04 	addi	r23,r3,-8
 8011ef0:	20c9c83a 	sub	r4,r4,r3
 8011ef4:	85e0983a 	sll	r16,r16,r23
 8011ef8:	9108d83a 	srl	r4,r18,r4
 8011efc:	95ee983a 	sll	r23,r18,r23
 8011f00:	2420b03a 	or	r16,r4,r16
 8011f04:	053f0344 	movi	r20,-1011
 8011f08:	a0e9c83a 	sub	r20,r20,r3
 8011f0c:	000b883a 	mov	r5,zero
 8011f10:	0039883a 	mov	fp,zero
 8011f14:	003f9906 	br	8011d7c <__alt_data_end+0xfc011d7c>
 8011f18:	8984b03a 	or	r2,r17,r6
 8011f1c:	10002a1e 	bne	r2,zero,8011fc8 <__muldf3+0x2cc>
 8011f20:	0023883a 	mov	r17,zero
 8011f24:	0025883a 	mov	r18,zero
 8011f28:	01c00084 	movi	r7,2
 8011f2c:	003fa506 	br	8011dc4 <__alt_data_end+0xfc011dc4>
 8011f30:	8984b03a 	or	r2,r17,r6
 8011f34:	10002026 	beq	r2,zero,8011fb8 <__muldf3+0x2bc>
 8011f38:	88011c26 	beq	r17,zero,80123ac <__muldf3+0x6b0>
 8011f3c:	8809883a 	mov	r4,r17
 8011f40:	d9400215 	stw	r5,8(sp)
 8011f44:	d9800715 	stw	r6,28(sp)
 8011f48:	da400415 	stw	r9,16(sp)
 8011f4c:	da800315 	stw	r10,12(sp)
 8011f50:	80130340 	call	8013034 <__clzsi2>
 8011f54:	d9400217 	ldw	r5,8(sp)
 8011f58:	d9800717 	ldw	r6,28(sp)
 8011f5c:	da400417 	ldw	r9,16(sp)
 8011f60:	da800317 	ldw	r10,12(sp)
 8011f64:	1007883a 	mov	r3,r2
 8011f68:	01000a04 	movi	r4,40
 8011f6c:	1cbffe04 	addi	r18,r3,-8
 8011f70:	20c9c83a 	sub	r4,r4,r3
 8011f74:	8ca2983a 	sll	r17,r17,r18
 8011f78:	3108d83a 	srl	r4,r6,r4
 8011f7c:	34a4983a 	sll	r18,r6,r18
 8011f80:	2462b03a 	or	r17,r4,r17
 8011f84:	00bf0344 	movi	r2,-1011
 8011f88:	10c7c83a 	sub	r3,r2,r3
 8011f8c:	000f883a 	mov	r7,zero
 8011f90:	003f8c06 	br	8011dc4 <__alt_data_end+0xfc011dc4>
 8011f94:	008000c4 	movi	r2,3
 8011f98:	e0816d26 	beq	fp,r2,8012550 <__muldf3+0x854>
 8011f9c:	00800044 	movi	r2,1
 8011fa0:	e081321e 	bne	fp,r2,801246c <__muldf3+0x770>
 8011fa4:	48a6703a 	and	r19,r9,r2
 8011fa8:	0009883a 	mov	r4,zero
 8011fac:	0021883a 	mov	r16,zero
 8011fb0:	002f883a 	mov	r23,zero
 8011fb4:	003fab06 	br	8011e64 <__alt_data_end+0xfc011e64>
 8011fb8:	0023883a 	mov	r17,zero
 8011fbc:	0025883a 	mov	r18,zero
 8011fc0:	01c00044 	movi	r7,1
 8011fc4:	003f7f06 	br	8011dc4 <__alt_data_end+0xfc011dc4>
 8011fc8:	01c000c4 	movi	r7,3
 8011fcc:	003f7d06 	br	8011dc4 <__alt_data_end+0xfc011dc4>
 8011fd0:	01400104 	movi	r5,4
 8011fd4:	0021883a 	mov	r16,zero
 8011fd8:	002f883a 	mov	r23,zero
 8011fdc:	07000044 	movi	fp,1
 8011fe0:	003f6606 	br	8011d7c <__alt_data_end+0xfc011d7c>
 8011fe4:	01400304 	movi	r5,12
 8011fe8:	070000c4 	movi	fp,3
 8011fec:	003f6306 	br	8011d7c <__alt_data_end+0xfc011d7c>
 8011ff0:	04000434 	movhi	r16,16
 8011ff4:	0027883a 	mov	r19,zero
 8011ff8:	843fffc4 	addi	r16,r16,-1
 8011ffc:	05ffffc4 	movi	r23,-1
 8012000:	0101ffc4 	movi	r4,2047
 8012004:	003f9706 	br	8011e64 <__alt_data_end+0xfc011e64>
 8012008:	8821883a 	mov	r16,r17
 801200c:	902f883a 	mov	r23,r18
 8012010:	5013883a 	mov	r9,r10
 8012014:	3839883a 	mov	fp,r7
 8012018:	003f8c06 	br	8011e4c <__alt_data_end+0xfc011e4c>
 801201c:	8821883a 	mov	r16,r17
 8012020:	902f883a 	mov	r23,r18
 8012024:	3013883a 	mov	r9,r6
 8012028:	3839883a 	mov	fp,r7
 801202c:	003f8706 	br	8011e4c <__alt_data_end+0xfc011e4c>
 8012030:	b82ad43a 	srli	r21,r23,16
 8012034:	9038d43a 	srli	fp,r18,16
 8012038:	bdffffcc 	andi	r23,r23,65535
 801203c:	94bfffcc 	andi	r18,r18,65535
 8012040:	9009883a 	mov	r4,r18
 8012044:	b80b883a 	mov	r5,r23
 8012048:	d8c00515 	stw	r3,20(sp)
 801204c:	d9800715 	stw	r6,28(sp)
 8012050:	da000615 	stw	r8,24(sp)
 8012054:	80027f80 	call	80027f8 <__mulsi3>
 8012058:	9009883a 	mov	r4,r18
 801205c:	a80b883a 	mov	r5,r21
 8012060:	1029883a 	mov	r20,r2
 8012064:	80027f80 	call	80027f8 <__mulsi3>
 8012068:	e009883a 	mov	r4,fp
 801206c:	a80b883a 	mov	r5,r21
 8012070:	102d883a 	mov	r22,r2
 8012074:	80027f80 	call	80027f8 <__mulsi3>
 8012078:	e009883a 	mov	r4,fp
 801207c:	b80b883a 	mov	r5,r23
 8012080:	1027883a 	mov	r19,r2
 8012084:	80027f80 	call	80027f8 <__mulsi3>
 8012088:	a008d43a 	srli	r4,r20,16
 801208c:	b085883a 	add	r2,r22,r2
 8012090:	d8c00517 	ldw	r3,20(sp)
 8012094:	110f883a 	add	r7,r2,r4
 8012098:	d9800717 	ldw	r6,28(sp)
 801209c:	da000617 	ldw	r8,24(sp)
 80120a0:	3d80022e 	bgeu	r7,r22,80120ac <__muldf3+0x3b0>
 80120a4:	00800074 	movhi	r2,1
 80120a8:	98a7883a 	add	r19,r19,r2
 80120ac:	3804943a 	slli	r2,r7,16
 80120b0:	380ed43a 	srli	r7,r7,16
 80120b4:	882cd43a 	srli	r22,r17,16
 80120b8:	a53fffcc 	andi	r20,r20,65535
 80120bc:	8c7fffcc 	andi	r17,r17,65535
 80120c0:	1529883a 	add	r20,r2,r20
 80120c4:	8809883a 	mov	r4,r17
 80120c8:	b80b883a 	mov	r5,r23
 80120cc:	d8c00515 	stw	r3,20(sp)
 80120d0:	d9800715 	stw	r6,28(sp)
 80120d4:	da000615 	stw	r8,24(sp)
 80120d8:	d9c00015 	stw	r7,0(sp)
 80120dc:	dd000115 	stw	r20,4(sp)
 80120e0:	80027f80 	call	80027f8 <__mulsi3>
 80120e4:	a80b883a 	mov	r5,r21
 80120e8:	8809883a 	mov	r4,r17
 80120ec:	d8800415 	stw	r2,16(sp)
 80120f0:	80027f80 	call	80027f8 <__mulsi3>
 80120f4:	a80b883a 	mov	r5,r21
 80120f8:	b009883a 	mov	r4,r22
 80120fc:	1029883a 	mov	r20,r2
 8012100:	80027f80 	call	80027f8 <__mulsi3>
 8012104:	b009883a 	mov	r4,r22
 8012108:	b80b883a 	mov	r5,r23
 801210c:	102b883a 	mov	r21,r2
 8012110:	80027f80 	call	80027f8 <__mulsi3>
 8012114:	da400417 	ldw	r9,16(sp)
 8012118:	a085883a 	add	r2,r20,r2
 801211c:	d8c00517 	ldw	r3,20(sp)
 8012120:	4808d43a 	srli	r4,r9,16
 8012124:	d9800717 	ldw	r6,28(sp)
 8012128:	da000617 	ldw	r8,24(sp)
 801212c:	1109883a 	add	r4,r2,r4
 8012130:	2500022e 	bgeu	r4,r20,801213c <__muldf3+0x440>
 8012134:	00800074 	movhi	r2,1
 8012138:	a8ab883a 	add	r21,r21,r2
 801213c:	200e943a 	slli	r7,r4,16
 8012140:	2004d43a 	srli	r2,r4,16
 8012144:	802ed43a 	srli	r23,r16,16
 8012148:	843fffcc 	andi	r16,r16,65535
 801214c:	4d3fffcc 	andi	r20,r9,65535
 8012150:	9009883a 	mov	r4,r18
 8012154:	800b883a 	mov	r5,r16
 8012158:	3d29883a 	add	r20,r7,r20
 801215c:	d8c00515 	stw	r3,20(sp)
 8012160:	d9800715 	stw	r6,28(sp)
 8012164:	da000615 	stw	r8,24(sp)
 8012168:	a8ab883a 	add	r21,r21,r2
 801216c:	80027f80 	call	80027f8 <__mulsi3>
 8012170:	9009883a 	mov	r4,r18
 8012174:	b80b883a 	mov	r5,r23
 8012178:	d8800315 	stw	r2,12(sp)
 801217c:	80027f80 	call	80027f8 <__mulsi3>
 8012180:	e009883a 	mov	r4,fp
 8012184:	b80b883a 	mov	r5,r23
 8012188:	1025883a 	mov	r18,r2
 801218c:	80027f80 	call	80027f8 <__mulsi3>
 8012190:	e009883a 	mov	r4,fp
 8012194:	800b883a 	mov	r5,r16
 8012198:	d8800215 	stw	r2,8(sp)
 801219c:	80027f80 	call	80027f8 <__mulsi3>
 80121a0:	da800317 	ldw	r10,12(sp)
 80121a4:	d9400017 	ldw	r5,0(sp)
 80121a8:	9085883a 	add	r2,r18,r2
 80121ac:	5008d43a 	srli	r4,r10,16
 80121b0:	a153883a 	add	r9,r20,r5
 80121b4:	d8c00517 	ldw	r3,20(sp)
 80121b8:	1109883a 	add	r4,r2,r4
 80121bc:	d9800717 	ldw	r6,28(sp)
 80121c0:	da000617 	ldw	r8,24(sp)
 80121c4:	dac00217 	ldw	r11,8(sp)
 80121c8:	2480022e 	bgeu	r4,r18,80121d4 <__muldf3+0x4d8>
 80121cc:	00800074 	movhi	r2,1
 80121d0:	5897883a 	add	r11,r11,r2
 80121d4:	200e943a 	slli	r7,r4,16
 80121d8:	2038d43a 	srli	fp,r4,16
 80121dc:	52bfffcc 	andi	r10,r10,65535
 80121e0:	3a8f883a 	add	r7,r7,r10
 80121e4:	8809883a 	mov	r4,r17
 80121e8:	800b883a 	mov	r5,r16
 80121ec:	d8c00515 	stw	r3,20(sp)
 80121f0:	d9800715 	stw	r6,28(sp)
 80121f4:	d9c00215 	stw	r7,8(sp)
 80121f8:	da000615 	stw	r8,24(sp)
 80121fc:	da400415 	stw	r9,16(sp)
 8012200:	5f39883a 	add	fp,r11,fp
 8012204:	80027f80 	call	80027f8 <__mulsi3>
 8012208:	8809883a 	mov	r4,r17
 801220c:	b80b883a 	mov	r5,r23
 8012210:	1025883a 	mov	r18,r2
 8012214:	80027f80 	call	80027f8 <__mulsi3>
 8012218:	b009883a 	mov	r4,r22
 801221c:	b80b883a 	mov	r5,r23
 8012220:	d8800315 	stw	r2,12(sp)
 8012224:	80027f80 	call	80027f8 <__mulsi3>
 8012228:	b009883a 	mov	r4,r22
 801222c:	800b883a 	mov	r5,r16
 8012230:	1023883a 	mov	r17,r2
 8012234:	80027f80 	call	80027f8 <__mulsi3>
 8012238:	da800317 	ldw	r10,12(sp)
 801223c:	9008d43a 	srli	r4,r18,16
 8012240:	d8c00517 	ldw	r3,20(sp)
 8012244:	5085883a 	add	r2,r10,r2
 8012248:	1109883a 	add	r4,r2,r4
 801224c:	d9800717 	ldw	r6,28(sp)
 8012250:	d9c00217 	ldw	r7,8(sp)
 8012254:	da000617 	ldw	r8,24(sp)
 8012258:	da400417 	ldw	r9,16(sp)
 801225c:	2280022e 	bgeu	r4,r10,8012268 <__muldf3+0x56c>
 8012260:	00800074 	movhi	r2,1
 8012264:	88a3883a 	add	r17,r17,r2
 8012268:	2004943a 	slli	r2,r4,16
 801226c:	94bfffcc 	andi	r18,r18,65535
 8012270:	4ce7883a 	add	r19,r9,r19
 8012274:	14a5883a 	add	r18,r2,r18
 8012278:	9d29803a 	cmpltu	r20,r19,r20
 801227c:	9565883a 	add	r18,r18,r21
 8012280:	9505883a 	add	r2,r18,r20
 8012284:	99e7883a 	add	r19,r19,r7
 8012288:	99cf803a 	cmpltu	r7,r19,r7
 801228c:	e08b883a 	add	r5,fp,r2
 8012290:	2008d43a 	srli	r4,r4,16
 8012294:	29ef883a 	add	r23,r5,r7
 8012298:	1529803a 	cmpltu	r20,r2,r20
 801229c:	956b803a 	cmpltu	r21,r18,r21
 80122a0:	b9cf803a 	cmpltu	r7,r23,r7
 80122a4:	a564b03a 	or	r18,r20,r21
 80122a8:	2f39803a 	cmpltu	fp,r5,fp
 80122ac:	9125883a 	add	r18,r18,r4
 80122b0:	3f38b03a 	or	fp,r7,fp
 80122b4:	9725883a 	add	r18,r18,fp
 80122b8:	9804927a 	slli	r2,r19,9
 80122bc:	9463883a 	add	r17,r18,r17
 80122c0:	d9000117 	ldw	r4,4(sp)
 80122c4:	b820d5fa 	srli	r16,r23,23
 80122c8:	8822927a 	slli	r17,r17,9
 80122cc:	9826d5fa 	srli	r19,r19,23
 80122d0:	1104b03a 	or	r2,r2,r4
 80122d4:	b82e927a 	slli	r23,r23,9
 80122d8:	1004c03a 	cmpne	r2,r2,zero
 80122dc:	8c20b03a 	or	r16,r17,r16
 80122e0:	14e6b03a 	or	r19,r2,r19
 80122e4:	8080402c 	andhi	r2,r16,256
 80122e8:	9deeb03a 	or	r23,r19,r23
 80122ec:	10000726 	beq	r2,zero,801230c <__muldf3+0x610>
 80122f0:	b804d07a 	srli	r2,r23,1
 80122f4:	800697fa 	slli	r3,r16,31
 80122f8:	bdc0004c 	andi	r23,r23,1
 80122fc:	8020d07a 	srli	r16,r16,1
 8012300:	b8aeb03a 	or	r23,r23,r2
 8012304:	b8eeb03a 	or	r23,r23,r3
 8012308:	4007883a 	mov	r3,r8
 801230c:	1900ffc4 	addi	r4,r3,1023
 8012310:	01004d0e 	bge	zero,r4,8012448 <__muldf3+0x74c>
 8012314:	b88001cc 	andi	r2,r23,7
 8012318:	10000726 	beq	r2,zero,8012338 <__muldf3+0x63c>
 801231c:	b94003cc 	andi	r5,r23,15
 8012320:	00800104 	movi	r2,4
 8012324:	28800426 	beq	r5,r2,8012338 <__muldf3+0x63c>
 8012328:	b885883a 	add	r2,r23,r2
 801232c:	15ef803a 	cmpltu	r23,r2,r23
 8012330:	85e1883a 	add	r16,r16,r23
 8012334:	102f883a 	mov	r23,r2
 8012338:	8080402c 	andhi	r2,r16,256
 801233c:	10000426 	beq	r2,zero,8012350 <__muldf3+0x654>
 8012340:	00bfc034 	movhi	r2,65280
 8012344:	10bfffc4 	addi	r2,r2,-1
 8012348:	19010004 	addi	r4,r3,1024
 801234c:	80a0703a 	and	r16,r16,r2
 8012350:	0081ff84 	movi	r2,2046
 8012354:	1100340e 	bge	r2,r4,8012428 <__muldf3+0x72c>
 8012358:	34c0004c 	andi	r19,r6,1
 801235c:	0101ffc4 	movi	r4,2047
 8012360:	0021883a 	mov	r16,zero
 8012364:	002f883a 	mov	r23,zero
 8012368:	003ebe06 	br	8011e64 <__alt_data_end+0xfc011e64>
 801236c:	8080022c 	andhi	r2,r16,8
 8012370:	10000926 	beq	r2,zero,8012398 <__muldf3+0x69c>
 8012374:	8880022c 	andhi	r2,r17,8
 8012378:	1000071e 	bne	r2,zero,8012398 <__muldf3+0x69c>
 801237c:	00800434 	movhi	r2,16
 8012380:	8c000234 	orhi	r16,r17,8
 8012384:	10bfffc4 	addi	r2,r2,-1
 8012388:	b027883a 	mov	r19,r22
 801238c:	80a0703a 	and	r16,r16,r2
 8012390:	902f883a 	mov	r23,r18
 8012394:	003f1a06 	br	8012000 <__alt_data_end+0xfc012000>
 8012398:	00800434 	movhi	r2,16
 801239c:	84000234 	orhi	r16,r16,8
 80123a0:	10bfffc4 	addi	r2,r2,-1
 80123a4:	80a0703a 	and	r16,r16,r2
 80123a8:	003f1506 	br	8012000 <__alt_data_end+0xfc012000>
 80123ac:	3009883a 	mov	r4,r6
 80123b0:	d9400215 	stw	r5,8(sp)
 80123b4:	d9800715 	stw	r6,28(sp)
 80123b8:	da400415 	stw	r9,16(sp)
 80123bc:	da800315 	stw	r10,12(sp)
 80123c0:	80130340 	call	8013034 <__clzsi2>
 80123c4:	10c00804 	addi	r3,r2,32
 80123c8:	010009c4 	movi	r4,39
 80123cc:	d9400217 	ldw	r5,8(sp)
 80123d0:	d9800717 	ldw	r6,28(sp)
 80123d4:	da400417 	ldw	r9,16(sp)
 80123d8:	da800317 	ldw	r10,12(sp)
 80123dc:	20fee20e 	bge	r4,r3,8011f68 <__alt_data_end+0xfc011f68>
 80123e0:	147ffe04 	addi	r17,r2,-8
 80123e4:	9462983a 	sll	r17,r18,r17
 80123e8:	0025883a 	mov	r18,zero
 80123ec:	003ee506 	br	8011f84 <__alt_data_end+0xfc011f84>
 80123f0:	d9800715 	stw	r6,28(sp)
 80123f4:	d9c00215 	stw	r7,8(sp)
 80123f8:	da400415 	stw	r9,16(sp)
 80123fc:	80130340 	call	8013034 <__clzsi2>
 8012400:	10c00804 	addi	r3,r2,32
 8012404:	010009c4 	movi	r4,39
 8012408:	d9800717 	ldw	r6,28(sp)
 801240c:	d9c00217 	ldw	r7,8(sp)
 8012410:	da400417 	ldw	r9,16(sp)
 8012414:	20feb40e 	bge	r4,r3,8011ee8 <__alt_data_end+0xfc011ee8>
 8012418:	143ffe04 	addi	r16,r2,-8
 801241c:	9420983a 	sll	r16,r18,r16
 8012420:	002f883a 	mov	r23,zero
 8012424:	003eb706 	br	8011f04 <__alt_data_end+0xfc011f04>
 8012428:	8004977a 	slli	r2,r16,29
 801242c:	b82ed0fa 	srli	r23,r23,3
 8012430:	8020927a 	slli	r16,r16,9
 8012434:	2101ffcc 	andi	r4,r4,2047
 8012438:	15eeb03a 	or	r23,r2,r23
 801243c:	8020d33a 	srli	r16,r16,12
 8012440:	34c0004c 	andi	r19,r6,1
 8012444:	003e8706 	br	8011e64 <__alt_data_end+0xfc011e64>
 8012448:	00bf0084 	movi	r2,-1022
 801244c:	10c5c83a 	sub	r2,r2,r3
 8012450:	01000e04 	movi	r4,56
 8012454:	2080080e 	bge	r4,r2,8012478 <__muldf3+0x77c>
 8012458:	34c0004c 	andi	r19,r6,1
 801245c:	0009883a 	mov	r4,zero
 8012460:	0021883a 	mov	r16,zero
 8012464:	002f883a 	mov	r23,zero
 8012468:	003e7e06 	br	8011e64 <__alt_data_end+0xfc011e64>
 801246c:	4007883a 	mov	r3,r8
 8012470:	480d883a 	mov	r6,r9
 8012474:	003fa506 	br	801230c <__alt_data_end+0xfc01230c>
 8012478:	010007c4 	movi	r4,31
 801247c:	20801816 	blt	r4,r2,80124e0 <__muldf3+0x7e4>
 8012480:	18c10784 	addi	r3,r3,1054
 8012484:	80c8983a 	sll	r4,r16,r3
 8012488:	b88ad83a 	srl	r5,r23,r2
 801248c:	b8c6983a 	sll	r3,r23,r3
 8012490:	80a0d83a 	srl	r16,r16,r2
 8012494:	2908b03a 	or	r4,r5,r4
 8012498:	1804c03a 	cmpne	r2,r3,zero
 801249c:	2088b03a 	or	r4,r4,r2
 80124a0:	208001cc 	andi	r2,r4,7
 80124a4:	10000726 	beq	r2,zero,80124c4 <__muldf3+0x7c8>
 80124a8:	20c003cc 	andi	r3,r4,15
 80124ac:	00800104 	movi	r2,4
 80124b0:	18800426 	beq	r3,r2,80124c4 <__muldf3+0x7c8>
 80124b4:	20c00104 	addi	r3,r4,4
 80124b8:	1905803a 	cmpltu	r2,r3,r4
 80124bc:	80a1883a 	add	r16,r16,r2
 80124c0:	1809883a 	mov	r4,r3
 80124c4:	8080202c 	andhi	r2,r16,128
 80124c8:	10001b26 	beq	r2,zero,8012538 <__muldf3+0x83c>
 80124cc:	34c0004c 	andi	r19,r6,1
 80124d0:	01000044 	movi	r4,1
 80124d4:	0021883a 	mov	r16,zero
 80124d8:	002f883a 	mov	r23,zero
 80124dc:	003e6106 	br	8011e64 <__alt_data_end+0xfc011e64>
 80124e0:	013ef884 	movi	r4,-1054
 80124e4:	20c9c83a 	sub	r4,r4,r3
 80124e8:	01400804 	movi	r5,32
 80124ec:	8108d83a 	srl	r4,r16,r4
 80124f0:	11401526 	beq	r2,r5,8012548 <__muldf3+0x84c>
 80124f4:	18c10f84 	addi	r3,r3,1086
 80124f8:	80e0983a 	sll	r16,r16,r3
 80124fc:	85eeb03a 	or	r23,r16,r23
 8012500:	b804c03a 	cmpne	r2,r23,zero
 8012504:	1108b03a 	or	r4,r2,r4
 8012508:	20c001cc 	andi	r3,r4,7
 801250c:	1800061e 	bne	r3,zero,8012528 <__muldf3+0x82c>
 8012510:	0021883a 	mov	r16,zero
 8012514:	202ed0fa 	srli	r23,r4,3
 8012518:	34c0004c 	andi	r19,r6,1
 801251c:	0009883a 	mov	r4,zero
 8012520:	b8eeb03a 	or	r23,r23,r3
 8012524:	003e4f06 	br	8011e64 <__alt_data_end+0xfc011e64>
 8012528:	20c003cc 	andi	r3,r4,15
 801252c:	00800104 	movi	r2,4
 8012530:	0021883a 	mov	r16,zero
 8012534:	18bfdf1e 	bne	r3,r2,80124b4 <__alt_data_end+0xfc0124b4>
 8012538:	8004927a 	slli	r2,r16,9
 801253c:	8006977a 	slli	r3,r16,29
 8012540:	1020d33a 	srli	r16,r2,12
 8012544:	003ff306 	br	8012514 <__alt_data_end+0xfc012514>
 8012548:	0021883a 	mov	r16,zero
 801254c:	003feb06 	br	80124fc <__alt_data_end+0xfc0124fc>
 8012550:	00800434 	movhi	r2,16
 8012554:	84000234 	orhi	r16,r16,8
 8012558:	10bfffc4 	addi	r2,r2,-1
 801255c:	4cc0004c 	andi	r19,r9,1
 8012560:	80a0703a 	and	r16,r16,r2
 8012564:	003ea606 	br	8012000 <__alt_data_end+0xfc012000>

08012568 <__subdf3>:
 8012568:	00c00434 	movhi	r3,16
 801256c:	18ffffc4 	addi	r3,r3,-1
 8012570:	defffb04 	addi	sp,sp,-20
 8012574:	28d2703a 	and	r9,r5,r3
 8012578:	3814d53a 	srli	r10,r7,20
 801257c:	38c6703a 	and	r3,r7,r3
 8012580:	3004d77a 	srli	r2,r6,29
 8012584:	dc800215 	stw	r18,8(sp)
 8012588:	dc000015 	stw	r16,0(sp)
 801258c:	2824d7fa 	srli	r18,r5,31
 8012590:	2820d53a 	srli	r16,r5,20
 8012594:	481290fa 	slli	r9,r9,3
 8012598:	200ad77a 	srli	r5,r4,29
 801259c:	180690fa 	slli	r3,r3,3
 80125a0:	dc400115 	stw	r17,4(sp)
 80125a4:	dfc00415 	stw	ra,16(sp)
 80125a8:	202290fa 	slli	r17,r4,3
 80125ac:	dcc00315 	stw	r19,12(sp)
 80125b0:	5281ffcc 	andi	r10,r10,2047
 80125b4:	0101ffc4 	movi	r4,2047
 80125b8:	9011883a 	mov	r8,r18
 80125bc:	8401ffcc 	andi	r16,r16,2047
 80125c0:	94803fcc 	andi	r18,r18,255
 80125c4:	494ab03a 	or	r5,r9,r5
 80125c8:	380ed7fa 	srli	r7,r7,31
 80125cc:	1886b03a 	or	r3,r3,r2
 80125d0:	300c90fa 	slli	r6,r6,3
 80125d4:	51009026 	beq	r10,r4,8012818 <__subdf3+0x2b0>
 80125d8:	39c0005c 	xori	r7,r7,1
 80125dc:	8285c83a 	sub	r2,r16,r10
 80125e0:	91c06f26 	beq	r18,r7,80127a0 <__subdf3+0x238>
 80125e4:	0080b10e 	bge	zero,r2,80128ac <__subdf3+0x344>
 80125e8:	50002a1e 	bne	r10,zero,8012694 <__subdf3+0x12c>
 80125ec:	1988b03a 	or	r4,r3,r6
 80125f0:	2000941e 	bne	r4,zero,8012844 <__subdf3+0x2dc>
 80125f4:	888001cc 	andi	r2,r17,7
 80125f8:	10005b26 	beq	r2,zero,8012768 <__subdf3+0x200>
 80125fc:	88c003cc 	andi	r3,r17,15
 8012600:	00800104 	movi	r2,4
 8012604:	18805826 	beq	r3,r2,8012768 <__subdf3+0x200>
 8012608:	88c00104 	addi	r3,r17,4
 801260c:	1c63803a 	cmpltu	r17,r3,r17
 8012610:	2c4b883a 	add	r5,r5,r17
 8012614:	2880202c 	andhi	r2,r5,128
 8012618:	9200004c 	andi	r8,r18,1
 801261c:	1823883a 	mov	r17,r3
 8012620:	10005426 	beq	r2,zero,8012774 <__subdf3+0x20c>
 8012624:	84000044 	addi	r16,r16,1
 8012628:	0081ffc4 	movi	r2,2047
 801262c:	8080bf26 	beq	r16,r2,801292c <__subdf3+0x3c4>
 8012630:	013fe034 	movhi	r4,65408
 8012634:	213fffc4 	addi	r4,r4,-1
 8012638:	290a703a 	and	r5,r5,r4
 801263c:	2804977a 	slli	r2,r5,29
 8012640:	280a927a 	slli	r5,r5,9
 8012644:	8822d0fa 	srli	r17,r17,3
 8012648:	8401ffcc 	andi	r16,r16,2047
 801264c:	2808d33a 	srli	r4,r5,12
 8012650:	1444b03a 	or	r2,r2,r17
 8012654:	8401ffcc 	andi	r16,r16,2047
 8012658:	800a953a 	slli	r5,r16,20
 801265c:	40c03fcc 	andi	r3,r8,255
 8012660:	04000434 	movhi	r16,16
 8012664:	180697fa 	slli	r3,r3,31
 8012668:	843fffc4 	addi	r16,r16,-1
 801266c:	2420703a 	and	r16,r4,r16
 8012670:	8160b03a 	or	r16,r16,r5
 8012674:	80c6b03a 	or	r3,r16,r3
 8012678:	dfc00417 	ldw	ra,16(sp)
 801267c:	dcc00317 	ldw	r19,12(sp)
 8012680:	dc800217 	ldw	r18,8(sp)
 8012684:	dc400117 	ldw	r17,4(sp)
 8012688:	dc000017 	ldw	r16,0(sp)
 801268c:	dec00504 	addi	sp,sp,20
 8012690:	f800283a 	ret
 8012694:	0101ffc4 	movi	r4,2047
 8012698:	813fd626 	beq	r16,r4,80125f4 <__alt_data_end+0xfc0125f4>
 801269c:	18c02034 	orhi	r3,r3,128
 80126a0:	01000e04 	movi	r4,56
 80126a4:	2080a416 	blt	r4,r2,8012938 <__subdf3+0x3d0>
 80126a8:	010007c4 	movi	r4,31
 80126ac:	2080c716 	blt	r4,r2,80129cc <__subdf3+0x464>
 80126b0:	01000804 	movi	r4,32
 80126b4:	2089c83a 	sub	r4,r4,r2
 80126b8:	1910983a 	sll	r8,r3,r4
 80126bc:	308ed83a 	srl	r7,r6,r2
 80126c0:	3108983a 	sll	r4,r6,r4
 80126c4:	1884d83a 	srl	r2,r3,r2
 80126c8:	41ccb03a 	or	r6,r8,r7
 80126cc:	2008c03a 	cmpne	r4,r4,zero
 80126d0:	310cb03a 	or	r6,r6,r4
 80126d4:	898dc83a 	sub	r6,r17,r6
 80126d8:	89a3803a 	cmpltu	r17,r17,r6
 80126dc:	288bc83a 	sub	r5,r5,r2
 80126e0:	2c4bc83a 	sub	r5,r5,r17
 80126e4:	3023883a 	mov	r17,r6
 80126e8:	2880202c 	andhi	r2,r5,128
 80126ec:	10006b26 	beq	r2,zero,801289c <__subdf3+0x334>
 80126f0:	04c02034 	movhi	r19,128
 80126f4:	9cffffc4 	addi	r19,r19,-1
 80126f8:	2ce6703a 	and	r19,r5,r19
 80126fc:	98007c26 	beq	r19,zero,80128f0 <__subdf3+0x388>
 8012700:	9809883a 	mov	r4,r19
 8012704:	80130340 	call	8013034 <__clzsi2>
 8012708:	10fffe04 	addi	r3,r2,-8
 801270c:	010007c4 	movi	r4,31
 8012710:	20c07d16 	blt	r4,r3,8012908 <__subdf3+0x3a0>
 8012714:	01400a04 	movi	r5,40
 8012718:	2885c83a 	sub	r2,r5,r2
 801271c:	888ad83a 	srl	r5,r17,r2
 8012720:	98e6983a 	sll	r19,r19,r3
 8012724:	88e2983a 	sll	r17,r17,r3
 8012728:	2ce6b03a 	or	r19,r5,r19
 801272c:	1c007a16 	blt	r3,r16,8012918 <__subdf3+0x3b0>
 8012730:	1c21c83a 	sub	r16,r3,r16
 8012734:	81400044 	addi	r5,r16,1
 8012738:	00c007c4 	movi	r3,31
 801273c:	19409616 	blt	r3,r5,8012998 <__subdf3+0x430>
 8012740:	1c21c83a 	sub	r16,r3,r16
 8012744:	8c08983a 	sll	r4,r17,r16
 8012748:	8946d83a 	srl	r3,r17,r5
 801274c:	9c20983a 	sll	r16,r19,r16
 8012750:	2008c03a 	cmpne	r4,r4,zero
 8012754:	994ad83a 	srl	r5,r19,r5
 8012758:	1c06b03a 	or	r3,r3,r16
 801275c:	1922b03a 	or	r17,r3,r4
 8012760:	0021883a 	mov	r16,zero
 8012764:	003fa306 	br	80125f4 <__alt_data_end+0xfc0125f4>
 8012768:	2880202c 	andhi	r2,r5,128
 801276c:	9200004c 	andi	r8,r18,1
 8012770:	103fac1e 	bne	r2,zero,8012624 <__alt_data_end+0xfc012624>
 8012774:	2804977a 	slli	r2,r5,29
 8012778:	8822d0fa 	srli	r17,r17,3
 801277c:	00c1ffc4 	movi	r3,2047
 8012780:	280ad0fa 	srli	r5,r5,3
 8012784:	1444b03a 	or	r2,r2,r17
 8012788:	80c02726 	beq	r16,r3,8012828 <__subdf3+0x2c0>
 801278c:	01000434 	movhi	r4,16
 8012790:	213fffc4 	addi	r4,r4,-1
 8012794:	80e0703a 	and	r16,r16,r3
 8012798:	2908703a 	and	r4,r5,r4
 801279c:	003fad06 	br	8012654 <__alt_data_end+0xfc012654>
 80127a0:	0080690e 	bge	zero,r2,8012948 <__subdf3+0x3e0>
 80127a4:	50002f26 	beq	r10,zero,8012864 <__subdf3+0x2fc>
 80127a8:	0101ffc4 	movi	r4,2047
 80127ac:	813f9126 	beq	r16,r4,80125f4 <__alt_data_end+0xfc0125f4>
 80127b0:	18c02034 	orhi	r3,r3,128
 80127b4:	01000e04 	movi	r4,56
 80127b8:	2080b00e 	bge	r4,r2,8012a7c <__subdf3+0x514>
 80127bc:	198cb03a 	or	r6,r3,r6
 80127c0:	300ec03a 	cmpne	r7,r6,zero
 80127c4:	0005883a 	mov	r2,zero
 80127c8:	3c4f883a 	add	r7,r7,r17
 80127cc:	3c63803a 	cmpltu	r17,r7,r17
 80127d0:	114b883a 	add	r5,r2,r5
 80127d4:	2c4b883a 	add	r5,r5,r17
 80127d8:	3823883a 	mov	r17,r7
 80127dc:	2880202c 	andhi	r2,r5,128
 80127e0:	10002e26 	beq	r2,zero,801289c <__subdf3+0x334>
 80127e4:	84000044 	addi	r16,r16,1
 80127e8:	0081ffc4 	movi	r2,2047
 80127ec:	8080de26 	beq	r16,r2,8012b68 <__subdf3+0x600>
 80127f0:	00bfe034 	movhi	r2,65408
 80127f4:	10bfffc4 	addi	r2,r2,-1
 80127f8:	288a703a 	and	r5,r5,r2
 80127fc:	880cd07a 	srli	r6,r17,1
 8012800:	280897fa 	slli	r4,r5,31
 8012804:	88c0004c 	andi	r3,r17,1
 8012808:	30e2b03a 	or	r17,r6,r3
 801280c:	280ad07a 	srli	r5,r5,1
 8012810:	8922b03a 	or	r17,r17,r4
 8012814:	003f7706 	br	80125f4 <__alt_data_end+0xfc0125f4>
 8012818:	1984b03a 	or	r2,r3,r6
 801281c:	103f6e26 	beq	r2,zero,80125d8 <__alt_data_end+0xfc0125d8>
 8012820:	39c03fcc 	andi	r7,r7,255
 8012824:	003f6d06 	br	80125dc <__alt_data_end+0xfc0125dc>
 8012828:	1146b03a 	or	r3,r2,r5
 801282c:	18003f26 	beq	r3,zero,801292c <__subdf3+0x3c4>
 8012830:	00c00434 	movhi	r3,16
 8012834:	29000234 	orhi	r4,r5,8
 8012838:	18ffffc4 	addi	r3,r3,-1
 801283c:	20c8703a 	and	r4,r4,r3
 8012840:	003f8406 	br	8012654 <__alt_data_end+0xfc012654>
 8012844:	10bfffc4 	addi	r2,r2,-1
 8012848:	1000501e 	bne	r2,zero,801298c <__subdf3+0x424>
 801284c:	898fc83a 	sub	r7,r17,r6
 8012850:	89e3803a 	cmpltu	r17,r17,r7
 8012854:	28cbc83a 	sub	r5,r5,r3
 8012858:	2c4bc83a 	sub	r5,r5,r17
 801285c:	3823883a 	mov	r17,r7
 8012860:	003fa106 	br	80126e8 <__alt_data_end+0xfc0126e8>
 8012864:	1988b03a 	or	r4,r3,r6
 8012868:	203f6226 	beq	r4,zero,80125f4 <__alt_data_end+0xfc0125f4>
 801286c:	10bfffc4 	addi	r2,r2,-1
 8012870:	10009b1e 	bne	r2,zero,8012ae0 <__subdf3+0x578>
 8012874:	344d883a 	add	r6,r6,r17
 8012878:	3463803a 	cmpltu	r17,r6,r17
 801287c:	194b883a 	add	r5,r3,r5
 8012880:	2c4b883a 	add	r5,r5,r17
 8012884:	3023883a 	mov	r17,r6
 8012888:	003fd406 	br	80127dc <__alt_data_end+0xfc0127dc>
 801288c:	1106b03a 	or	r3,r2,r4
 8012890:	1800b426 	beq	r3,zero,8012b64 <__subdf3+0x5fc>
 8012894:	100b883a 	mov	r5,r2
 8012898:	2023883a 	mov	r17,r4
 801289c:	888001cc 	andi	r2,r17,7
 80128a0:	103f561e 	bne	r2,zero,80125fc <__alt_data_end+0xfc0125fc>
 80128a4:	9200004c 	andi	r8,r18,1
 80128a8:	003fb206 	br	8012774 <__alt_data_end+0xfc012774>
 80128ac:	1000531e 	bne	r2,zero,80129fc <__subdf3+0x494>
 80128b0:	80800044 	addi	r2,r16,1
 80128b4:	1081ffcc 	andi	r2,r2,2047
 80128b8:	01000044 	movi	r4,1
 80128bc:	2080a00e 	bge	r4,r2,8012b40 <__subdf3+0x5d8>
 80128c0:	8985c83a 	sub	r2,r17,r6
 80128c4:	8889803a 	cmpltu	r4,r17,r2
 80128c8:	28e7c83a 	sub	r19,r5,r3
 80128cc:	9927c83a 	sub	r19,r19,r4
 80128d0:	9900202c 	andhi	r4,r19,128
 80128d4:	20006226 	beq	r4,zero,8012a60 <__subdf3+0x4f8>
 80128d8:	3463c83a 	sub	r17,r6,r17
 80128dc:	194bc83a 	sub	r5,r3,r5
 80128e0:	344d803a 	cmpltu	r6,r6,r17
 80128e4:	29a7c83a 	sub	r19,r5,r6
 80128e8:	3825883a 	mov	r18,r7
 80128ec:	983f841e 	bne	r19,zero,8012700 <__alt_data_end+0xfc012700>
 80128f0:	8809883a 	mov	r4,r17
 80128f4:	80130340 	call	8013034 <__clzsi2>
 80128f8:	10800804 	addi	r2,r2,32
 80128fc:	10fffe04 	addi	r3,r2,-8
 8012900:	010007c4 	movi	r4,31
 8012904:	20ff830e 	bge	r4,r3,8012714 <__alt_data_end+0xfc012714>
 8012908:	14fff604 	addi	r19,r2,-40
 801290c:	8ce6983a 	sll	r19,r17,r19
 8012910:	0023883a 	mov	r17,zero
 8012914:	1c3f860e 	bge	r3,r16,8012730 <__alt_data_end+0xfc012730>
 8012918:	017fe034 	movhi	r5,65408
 801291c:	297fffc4 	addi	r5,r5,-1
 8012920:	80e1c83a 	sub	r16,r16,r3
 8012924:	994a703a 	and	r5,r19,r5
 8012928:	003f3206 	br	80125f4 <__alt_data_end+0xfc0125f4>
 801292c:	0009883a 	mov	r4,zero
 8012930:	0005883a 	mov	r2,zero
 8012934:	003f4706 	br	8012654 <__alt_data_end+0xfc012654>
 8012938:	198cb03a 	or	r6,r3,r6
 801293c:	300cc03a 	cmpne	r6,r6,zero
 8012940:	0005883a 	mov	r2,zero
 8012944:	003f6306 	br	80126d4 <__alt_data_end+0xfc0126d4>
 8012948:	10009d1e 	bne	r2,zero,8012bc0 <__subdf3+0x658>
 801294c:	81c00044 	addi	r7,r16,1
 8012950:	3881ffcc 	andi	r2,r7,2047
 8012954:	02400044 	movi	r9,1
 8012958:	4880680e 	bge	r9,r2,8012afc <__subdf3+0x594>
 801295c:	0081ffc4 	movi	r2,2047
 8012960:	3880ae26 	beq	r7,r2,8012c1c <__subdf3+0x6b4>
 8012964:	344d883a 	add	r6,r6,r17
 8012968:	3463803a 	cmpltu	r17,r6,r17
 801296c:	194b883a 	add	r5,r3,r5
 8012970:	2c4b883a 	add	r5,r5,r17
 8012974:	282297fa 	slli	r17,r5,31
 8012978:	300cd07a 	srli	r6,r6,1
 801297c:	280ad07a 	srli	r5,r5,1
 8012980:	3821883a 	mov	r16,r7
 8012984:	89a2b03a 	or	r17,r17,r6
 8012988:	003f1a06 	br	80125f4 <__alt_data_end+0xfc0125f4>
 801298c:	0101ffc4 	movi	r4,2047
 8012990:	813f431e 	bne	r16,r4,80126a0 <__alt_data_end+0xfc0126a0>
 8012994:	003f1706 	br	80125f4 <__alt_data_end+0xfc0125f4>
 8012998:	80bff844 	addi	r2,r16,-31
 801299c:	00c00804 	movi	r3,32
 80129a0:	9884d83a 	srl	r2,r19,r2
 80129a4:	28c05126 	beq	r5,r3,8012aec <__subdf3+0x584>
 80129a8:	00c00fc4 	movi	r3,63
 80129ac:	1c21c83a 	sub	r16,r3,r16
 80129b0:	9c26983a 	sll	r19,r19,r16
 80129b4:	9c62b03a 	or	r17,r19,r17
 80129b8:	8822c03a 	cmpne	r17,r17,zero
 80129bc:	88a2b03a 	or	r17,r17,r2
 80129c0:	000b883a 	mov	r5,zero
 80129c4:	0021883a 	mov	r16,zero
 80129c8:	003fb406 	br	801289c <__alt_data_end+0xfc01289c>
 80129cc:	113ff804 	addi	r4,r2,-32
 80129d0:	01c00804 	movi	r7,32
 80129d4:	1908d83a 	srl	r4,r3,r4
 80129d8:	11c04626 	beq	r2,r7,8012af4 <__subdf3+0x58c>
 80129dc:	01c01004 	movi	r7,64
 80129e0:	3885c83a 	sub	r2,r7,r2
 80129e4:	1884983a 	sll	r2,r3,r2
 80129e8:	118cb03a 	or	r6,r2,r6
 80129ec:	300cc03a 	cmpne	r6,r6,zero
 80129f0:	310cb03a 	or	r6,r6,r4
 80129f4:	0005883a 	mov	r2,zero
 80129f8:	003f3606 	br	80126d4 <__alt_data_end+0xfc0126d4>
 80129fc:	80002b26 	beq	r16,zero,8012aac <__subdf3+0x544>
 8012a00:	0101ffc4 	movi	r4,2047
 8012a04:	51006926 	beq	r10,r4,8012bac <__subdf3+0x644>
 8012a08:	0085c83a 	sub	r2,zero,r2
 8012a0c:	29402034 	orhi	r5,r5,128
 8012a10:	01000e04 	movi	r4,56
 8012a14:	20807d16 	blt	r4,r2,8012c0c <__subdf3+0x6a4>
 8012a18:	010007c4 	movi	r4,31
 8012a1c:	2080d916 	blt	r4,r2,8012d84 <__subdf3+0x81c>
 8012a20:	01000804 	movi	r4,32
 8012a24:	2089c83a 	sub	r4,r4,r2
 8012a28:	2912983a 	sll	r9,r5,r4
 8012a2c:	8890d83a 	srl	r8,r17,r2
 8012a30:	8908983a 	sll	r4,r17,r4
 8012a34:	2884d83a 	srl	r2,r5,r2
 8012a38:	4a22b03a 	or	r17,r9,r8
 8012a3c:	2008c03a 	cmpne	r4,r4,zero
 8012a40:	8922b03a 	or	r17,r17,r4
 8012a44:	3463c83a 	sub	r17,r6,r17
 8012a48:	1885c83a 	sub	r2,r3,r2
 8012a4c:	344d803a 	cmpltu	r6,r6,r17
 8012a50:	118bc83a 	sub	r5,r2,r6
 8012a54:	5021883a 	mov	r16,r10
 8012a58:	3825883a 	mov	r18,r7
 8012a5c:	003f2206 	br	80126e8 <__alt_data_end+0xfc0126e8>
 8012a60:	9886b03a 	or	r3,r19,r2
 8012a64:	18001c1e 	bne	r3,zero,8012ad8 <__subdf3+0x570>
 8012a68:	0011883a 	mov	r8,zero
 8012a6c:	000b883a 	mov	r5,zero
 8012a70:	0023883a 	mov	r17,zero
 8012a74:	0021883a 	mov	r16,zero
 8012a78:	003f3e06 	br	8012774 <__alt_data_end+0xfc012774>
 8012a7c:	010007c4 	movi	r4,31
 8012a80:	20803c16 	blt	r4,r2,8012b74 <__subdf3+0x60c>
 8012a84:	01000804 	movi	r4,32
 8012a88:	2089c83a 	sub	r4,r4,r2
 8012a8c:	1912983a 	sll	r9,r3,r4
 8012a90:	308ed83a 	srl	r7,r6,r2
 8012a94:	3108983a 	sll	r4,r6,r4
 8012a98:	1884d83a 	srl	r2,r3,r2
 8012a9c:	49ceb03a 	or	r7,r9,r7
 8012aa0:	2008c03a 	cmpne	r4,r4,zero
 8012aa4:	390eb03a 	or	r7,r7,r4
 8012aa8:	003f4706 	br	80127c8 <__alt_data_end+0xfc0127c8>
 8012aac:	2c48b03a 	or	r4,r5,r17
 8012ab0:	20003e26 	beq	r4,zero,8012bac <__subdf3+0x644>
 8012ab4:	0084303a 	nor	r2,zero,r2
 8012ab8:	10003a1e 	bne	r2,zero,8012ba4 <__subdf3+0x63c>
 8012abc:	3463c83a 	sub	r17,r6,r17
 8012ac0:	194bc83a 	sub	r5,r3,r5
 8012ac4:	344d803a 	cmpltu	r6,r6,r17
 8012ac8:	298bc83a 	sub	r5,r5,r6
 8012acc:	5021883a 	mov	r16,r10
 8012ad0:	3825883a 	mov	r18,r7
 8012ad4:	003f0406 	br	80126e8 <__alt_data_end+0xfc0126e8>
 8012ad8:	1023883a 	mov	r17,r2
 8012adc:	003f0706 	br	80126fc <__alt_data_end+0xfc0126fc>
 8012ae0:	0101ffc4 	movi	r4,2047
 8012ae4:	813f331e 	bne	r16,r4,80127b4 <__alt_data_end+0xfc0127b4>
 8012ae8:	003ec206 	br	80125f4 <__alt_data_end+0xfc0125f4>
 8012aec:	0027883a 	mov	r19,zero
 8012af0:	003fb006 	br	80129b4 <__alt_data_end+0xfc0129b4>
 8012af4:	0005883a 	mov	r2,zero
 8012af8:	003fbb06 	br	80129e8 <__alt_data_end+0xfc0129e8>
 8012afc:	2c44b03a 	or	r2,r5,r17
 8012b00:	80008b1e 	bne	r16,zero,8012d30 <__subdf3+0x7c8>
 8012b04:	1000b526 	beq	r2,zero,8012ddc <__subdf3+0x874>
 8012b08:	1984b03a 	or	r2,r3,r6
 8012b0c:	103eb926 	beq	r2,zero,80125f4 <__alt_data_end+0xfc0125f4>
 8012b10:	3449883a 	add	r4,r6,r17
 8012b14:	2463803a 	cmpltu	r17,r4,r17
 8012b18:	194b883a 	add	r5,r3,r5
 8012b1c:	2c4b883a 	add	r5,r5,r17
 8012b20:	2880202c 	andhi	r2,r5,128
 8012b24:	2023883a 	mov	r17,r4
 8012b28:	103f5c26 	beq	r2,zero,801289c <__alt_data_end+0xfc01289c>
 8012b2c:	00bfe034 	movhi	r2,65408
 8012b30:	10bfffc4 	addi	r2,r2,-1
 8012b34:	4821883a 	mov	r16,r9
 8012b38:	288a703a 	and	r5,r5,r2
 8012b3c:	003ead06 	br	80125f4 <__alt_data_end+0xfc0125f4>
 8012b40:	2c44b03a 	or	r2,r5,r17
 8012b44:	8000291e 	bne	r16,zero,8012bec <__subdf3+0x684>
 8012b48:	10004f1e 	bne	r2,zero,8012c88 <__subdf3+0x720>
 8012b4c:	1984b03a 	or	r2,r3,r6
 8012b50:	10000426 	beq	r2,zero,8012b64 <__subdf3+0x5fc>
 8012b54:	180b883a 	mov	r5,r3
 8012b58:	3023883a 	mov	r17,r6
 8012b5c:	3825883a 	mov	r18,r7
 8012b60:	003ea406 	br	80125f4 <__alt_data_end+0xfc0125f4>
 8012b64:	0011883a 	mov	r8,zero
 8012b68:	000b883a 	mov	r5,zero
 8012b6c:	0023883a 	mov	r17,zero
 8012b70:	003f0006 	br	8012774 <__alt_data_end+0xfc012774>
 8012b74:	11fff804 	addi	r7,r2,-32
 8012b78:	19c8d83a 	srl	r4,r3,r7
 8012b7c:	01c00804 	movi	r7,32
 8012b80:	11c07e26 	beq	r2,r7,8012d7c <__subdf3+0x814>
 8012b84:	01c01004 	movi	r7,64
 8012b88:	3885c83a 	sub	r2,r7,r2
 8012b8c:	1884983a 	sll	r2,r3,r2
 8012b90:	118cb03a 	or	r6,r2,r6
 8012b94:	300ec03a 	cmpne	r7,r6,zero
 8012b98:	390eb03a 	or	r7,r7,r4
 8012b9c:	0005883a 	mov	r2,zero
 8012ba0:	003f0906 	br	80127c8 <__alt_data_end+0xfc0127c8>
 8012ba4:	0101ffc4 	movi	r4,2047
 8012ba8:	513f991e 	bne	r10,r4,8012a10 <__alt_data_end+0xfc012a10>
 8012bac:	180b883a 	mov	r5,r3
 8012bb0:	3023883a 	mov	r17,r6
 8012bb4:	5021883a 	mov	r16,r10
 8012bb8:	3825883a 	mov	r18,r7
 8012bbc:	003e8d06 	br	80125f4 <__alt_data_end+0xfc0125f4>
 8012bc0:	80001a1e 	bne	r16,zero,8012c2c <__subdf3+0x6c4>
 8012bc4:	2c48b03a 	or	r4,r5,r17
 8012bc8:	20005526 	beq	r4,zero,8012d20 <__subdf3+0x7b8>
 8012bcc:	0084303a 	nor	r2,zero,r2
 8012bd0:	1000511e 	bne	r2,zero,8012d18 <__subdf3+0x7b0>
 8012bd4:	89a3883a 	add	r17,r17,r6
 8012bd8:	194b883a 	add	r5,r3,r5
 8012bdc:	898d803a 	cmpltu	r6,r17,r6
 8012be0:	298b883a 	add	r5,r5,r6
 8012be4:	5021883a 	mov	r16,r10
 8012be8:	003efc06 	br	80127dc <__alt_data_end+0xfc0127dc>
 8012bec:	1000341e 	bne	r2,zero,8012cc0 <__subdf3+0x758>
 8012bf0:	1984b03a 	or	r2,r3,r6
 8012bf4:	10006f26 	beq	r2,zero,8012db4 <__subdf3+0x84c>
 8012bf8:	180b883a 	mov	r5,r3
 8012bfc:	3023883a 	mov	r17,r6
 8012c00:	3825883a 	mov	r18,r7
 8012c04:	0401ffc4 	movi	r16,2047
 8012c08:	003e7a06 	br	80125f4 <__alt_data_end+0xfc0125f4>
 8012c0c:	2c62b03a 	or	r17,r5,r17
 8012c10:	8822c03a 	cmpne	r17,r17,zero
 8012c14:	0005883a 	mov	r2,zero
 8012c18:	003f8a06 	br	8012a44 <__alt_data_end+0xfc012a44>
 8012c1c:	3821883a 	mov	r16,r7
 8012c20:	000b883a 	mov	r5,zero
 8012c24:	0023883a 	mov	r17,zero
 8012c28:	003ed206 	br	8012774 <__alt_data_end+0xfc012774>
 8012c2c:	0101ffc4 	movi	r4,2047
 8012c30:	51003b26 	beq	r10,r4,8012d20 <__subdf3+0x7b8>
 8012c34:	0085c83a 	sub	r2,zero,r2
 8012c38:	29402034 	orhi	r5,r5,128
 8012c3c:	01000e04 	movi	r4,56
 8012c40:	20806216 	blt	r4,r2,8012dcc <__subdf3+0x864>
 8012c44:	010007c4 	movi	r4,31
 8012c48:	20806b16 	blt	r4,r2,8012df8 <__subdf3+0x890>
 8012c4c:	01000804 	movi	r4,32
 8012c50:	2089c83a 	sub	r4,r4,r2
 8012c54:	2912983a 	sll	r9,r5,r4
 8012c58:	888ed83a 	srl	r7,r17,r2
 8012c5c:	8908983a 	sll	r4,r17,r4
 8012c60:	2884d83a 	srl	r2,r5,r2
 8012c64:	49e2b03a 	or	r17,r9,r7
 8012c68:	2008c03a 	cmpne	r4,r4,zero
 8012c6c:	8922b03a 	or	r17,r17,r4
 8012c70:	89a3883a 	add	r17,r17,r6
 8012c74:	10c5883a 	add	r2,r2,r3
 8012c78:	898d803a 	cmpltu	r6,r17,r6
 8012c7c:	118b883a 	add	r5,r2,r6
 8012c80:	5021883a 	mov	r16,r10
 8012c84:	003ed506 	br	80127dc <__alt_data_end+0xfc0127dc>
 8012c88:	1984b03a 	or	r2,r3,r6
 8012c8c:	103e5926 	beq	r2,zero,80125f4 <__alt_data_end+0xfc0125f4>
 8012c90:	8989c83a 	sub	r4,r17,r6
 8012c94:	8911803a 	cmpltu	r8,r17,r4
 8012c98:	28c5c83a 	sub	r2,r5,r3
 8012c9c:	1205c83a 	sub	r2,r2,r8
 8012ca0:	1200202c 	andhi	r8,r2,128
 8012ca4:	403ef926 	beq	r8,zero,801288c <__alt_data_end+0xfc01288c>
 8012ca8:	3463c83a 	sub	r17,r6,r17
 8012cac:	194bc83a 	sub	r5,r3,r5
 8012cb0:	344d803a 	cmpltu	r6,r6,r17
 8012cb4:	298bc83a 	sub	r5,r5,r6
 8012cb8:	3825883a 	mov	r18,r7
 8012cbc:	003e4d06 	br	80125f4 <__alt_data_end+0xfc0125f4>
 8012cc0:	1984b03a 	or	r2,r3,r6
 8012cc4:	10002b26 	beq	r2,zero,8012d74 <__subdf3+0x80c>
 8012cc8:	2808d0fa 	srli	r4,r5,3
 8012ccc:	8822d0fa 	srli	r17,r17,3
 8012cd0:	280a977a 	slli	r5,r5,29
 8012cd4:	2080022c 	andhi	r2,r4,8
 8012cd8:	2c62b03a 	or	r17,r5,r17
 8012cdc:	10000826 	beq	r2,zero,8012d00 <__subdf3+0x798>
 8012ce0:	1810d0fa 	srli	r8,r3,3
 8012ce4:	4080022c 	andhi	r2,r8,8
 8012ce8:	1000051e 	bne	r2,zero,8012d00 <__subdf3+0x798>
 8012cec:	300cd0fa 	srli	r6,r6,3
 8012cf0:	1804977a 	slli	r2,r3,29
 8012cf4:	4009883a 	mov	r4,r8
 8012cf8:	3825883a 	mov	r18,r7
 8012cfc:	11a2b03a 	or	r17,r2,r6
 8012d00:	880ad77a 	srli	r5,r17,29
 8012d04:	200890fa 	slli	r4,r4,3
 8012d08:	882290fa 	slli	r17,r17,3
 8012d0c:	0401ffc4 	movi	r16,2047
 8012d10:	290ab03a 	or	r5,r5,r4
 8012d14:	003e3706 	br	80125f4 <__alt_data_end+0xfc0125f4>
 8012d18:	0101ffc4 	movi	r4,2047
 8012d1c:	513fc71e 	bne	r10,r4,8012c3c <__alt_data_end+0xfc012c3c>
 8012d20:	180b883a 	mov	r5,r3
 8012d24:	3023883a 	mov	r17,r6
 8012d28:	5021883a 	mov	r16,r10
 8012d2c:	003e3106 	br	80125f4 <__alt_data_end+0xfc0125f4>
 8012d30:	10002d26 	beq	r2,zero,8012de8 <__subdf3+0x880>
 8012d34:	1984b03a 	or	r2,r3,r6
 8012d38:	10000e26 	beq	r2,zero,8012d74 <__subdf3+0x80c>
 8012d3c:	2808d0fa 	srli	r4,r5,3
 8012d40:	8822d0fa 	srli	r17,r17,3
 8012d44:	280a977a 	slli	r5,r5,29
 8012d48:	2080022c 	andhi	r2,r4,8
 8012d4c:	2c62b03a 	or	r17,r5,r17
 8012d50:	103feb26 	beq	r2,zero,8012d00 <__alt_data_end+0xfc012d00>
 8012d54:	180ed0fa 	srli	r7,r3,3
 8012d58:	3880022c 	andhi	r2,r7,8
 8012d5c:	103fe81e 	bne	r2,zero,8012d00 <__alt_data_end+0xfc012d00>
 8012d60:	300cd0fa 	srli	r6,r6,3
 8012d64:	1804977a 	slli	r2,r3,29
 8012d68:	3809883a 	mov	r4,r7
 8012d6c:	11a2b03a 	or	r17,r2,r6
 8012d70:	003fe306 	br	8012d00 <__alt_data_end+0xfc012d00>
 8012d74:	0401ffc4 	movi	r16,2047
 8012d78:	003e1e06 	br	80125f4 <__alt_data_end+0xfc0125f4>
 8012d7c:	0005883a 	mov	r2,zero
 8012d80:	003f8306 	br	8012b90 <__alt_data_end+0xfc012b90>
 8012d84:	113ff804 	addi	r4,r2,-32
 8012d88:	02000804 	movi	r8,32
 8012d8c:	2908d83a 	srl	r4,r5,r4
 8012d90:	12002526 	beq	r2,r8,8012e28 <__subdf3+0x8c0>
 8012d94:	02001004 	movi	r8,64
 8012d98:	4085c83a 	sub	r2,r8,r2
 8012d9c:	288a983a 	sll	r5,r5,r2
 8012da0:	2c62b03a 	or	r17,r5,r17
 8012da4:	8822c03a 	cmpne	r17,r17,zero
 8012da8:	8922b03a 	or	r17,r17,r4
 8012dac:	0005883a 	mov	r2,zero
 8012db0:	003f2406 	br	8012a44 <__alt_data_end+0xfc012a44>
 8012db4:	01402034 	movhi	r5,128
 8012db8:	0011883a 	mov	r8,zero
 8012dbc:	297fffc4 	addi	r5,r5,-1
 8012dc0:	047ffe04 	movi	r17,-8
 8012dc4:	0401ffc4 	movi	r16,2047
 8012dc8:	003e6a06 	br	8012774 <__alt_data_end+0xfc012774>
 8012dcc:	2c62b03a 	or	r17,r5,r17
 8012dd0:	8822c03a 	cmpne	r17,r17,zero
 8012dd4:	0005883a 	mov	r2,zero
 8012dd8:	003fa506 	br	8012c70 <__alt_data_end+0xfc012c70>
 8012ddc:	180b883a 	mov	r5,r3
 8012de0:	3023883a 	mov	r17,r6
 8012de4:	003e0306 	br	80125f4 <__alt_data_end+0xfc0125f4>
 8012de8:	180b883a 	mov	r5,r3
 8012dec:	3023883a 	mov	r17,r6
 8012df0:	0401ffc4 	movi	r16,2047
 8012df4:	003dff06 	br	80125f4 <__alt_data_end+0xfc0125f4>
 8012df8:	113ff804 	addi	r4,r2,-32
 8012dfc:	01c00804 	movi	r7,32
 8012e00:	2908d83a 	srl	r4,r5,r4
 8012e04:	11c00a26 	beq	r2,r7,8012e30 <__subdf3+0x8c8>
 8012e08:	01c01004 	movi	r7,64
 8012e0c:	3885c83a 	sub	r2,r7,r2
 8012e10:	288a983a 	sll	r5,r5,r2
 8012e14:	2c62b03a 	or	r17,r5,r17
 8012e18:	8822c03a 	cmpne	r17,r17,zero
 8012e1c:	8922b03a 	or	r17,r17,r4
 8012e20:	0005883a 	mov	r2,zero
 8012e24:	003f9206 	br	8012c70 <__alt_data_end+0xfc012c70>
 8012e28:	000b883a 	mov	r5,zero
 8012e2c:	003fdc06 	br	8012da0 <__alt_data_end+0xfc012da0>
 8012e30:	000b883a 	mov	r5,zero
 8012e34:	003ff706 	br	8012e14 <__alt_data_end+0xfc012e14>

08012e38 <__fixdfsi>:
 8012e38:	2806d53a 	srli	r3,r5,20
 8012e3c:	00800434 	movhi	r2,16
 8012e40:	10bfffc4 	addi	r2,r2,-1
 8012e44:	18c1ffcc 	andi	r3,r3,2047
 8012e48:	0180ff84 	movi	r6,1022
 8012e4c:	2884703a 	and	r2,r5,r2
 8012e50:	280ad7fa 	srli	r5,r5,31
 8012e54:	30c0130e 	bge	r6,r3,8012ea4 <__fixdfsi+0x6c>
 8012e58:	01810744 	movi	r6,1053
 8012e5c:	30c00d16 	blt	r6,r3,8012e94 <__fixdfsi+0x5c>
 8012e60:	01810cc4 	movi	r6,1075
 8012e64:	30cdc83a 	sub	r6,r6,r3
 8012e68:	01c007c4 	movi	r7,31
 8012e6c:	10800434 	orhi	r2,r2,16
 8012e70:	39800e0e 	bge	r7,r6,8012eac <__fixdfsi+0x74>
 8012e74:	010104c4 	movi	r4,1043
 8012e78:	20c7c83a 	sub	r3,r4,r3
 8012e7c:	10c6d83a 	srl	r3,r2,r3
 8012e80:	29403fcc 	andi	r5,r5,255
 8012e84:	0145c83a 	sub	r2,zero,r5
 8012e88:	1884f03a 	xor	r2,r3,r2
 8012e8c:	1145883a 	add	r2,r2,r5
 8012e90:	f800283a 	ret
 8012e94:	00a00034 	movhi	r2,32768
 8012e98:	10bfffc4 	addi	r2,r2,-1
 8012e9c:	2885883a 	add	r2,r5,r2
 8012ea0:	f800283a 	ret
 8012ea4:	0005883a 	mov	r2,zero
 8012ea8:	f800283a 	ret
 8012eac:	18fefb44 	addi	r3,r3,-1043
 8012eb0:	2188d83a 	srl	r4,r4,r6
 8012eb4:	10c6983a 	sll	r3,r2,r3
 8012eb8:	20c6b03a 	or	r3,r4,r3
 8012ebc:	003ff006 	br	8012e80 <__alt_data_end+0xfc012e80>

08012ec0 <__floatsidf>:
 8012ec0:	defffd04 	addi	sp,sp,-12
 8012ec4:	dc400115 	stw	r17,4(sp)
 8012ec8:	dfc00215 	stw	ra,8(sp)
 8012ecc:	dc000015 	stw	r16,0(sp)
 8012ed0:	2023883a 	mov	r17,r4
 8012ed4:	20001426 	beq	r4,zero,8012f28 <__floatsidf+0x68>
 8012ed8:	2020d7fa 	srli	r16,r4,31
 8012edc:	80000126 	beq	r16,zero,8012ee4 <__floatsidf+0x24>
 8012ee0:	0123c83a 	sub	r17,zero,r4
 8012ee4:	8809883a 	mov	r4,r17
 8012ee8:	80130340 	call	8013034 <__clzsi2>
 8012eec:	01410784 	movi	r5,1054
 8012ef0:	00c00284 	movi	r3,10
 8012ef4:	288bc83a 	sub	r5,r5,r2
 8012ef8:	18801c16 	blt	r3,r2,8012f6c <__floatsidf+0xac>
 8012efc:	00c002c4 	movi	r3,11
 8012f00:	1887c83a 	sub	r3,r3,r2
 8012f04:	88c8d83a 	srl	r4,r17,r3
 8012f08:	00c00434 	movhi	r3,16
 8012f0c:	18ffffc4 	addi	r3,r3,-1
 8012f10:	10800544 	addi	r2,r2,21
 8012f14:	20c8703a 	and	r4,r4,r3
 8012f18:	8884983a 	sll	r2,r17,r2
 8012f1c:	28c1ffcc 	andi	r3,r5,2047
 8012f20:	800d883a 	mov	r6,r16
 8012f24:	00000406 	br	8012f38 <__floatsidf+0x78>
 8012f28:	000d883a 	mov	r6,zero
 8012f2c:	0007883a 	mov	r3,zero
 8012f30:	0009883a 	mov	r4,zero
 8012f34:	0005883a 	mov	r2,zero
 8012f38:	180a953a 	slli	r5,r3,20
 8012f3c:	31803fcc 	andi	r6,r6,255
 8012f40:	00c00434 	movhi	r3,16
 8012f44:	300c97fa 	slli	r6,r6,31
 8012f48:	18ffffc4 	addi	r3,r3,-1
 8012f4c:	20c6703a 	and	r3,r4,r3
 8012f50:	1946b03a 	or	r3,r3,r5
 8012f54:	1986b03a 	or	r3,r3,r6
 8012f58:	dfc00217 	ldw	ra,8(sp)
 8012f5c:	dc400117 	ldw	r17,4(sp)
 8012f60:	dc000017 	ldw	r16,0(sp)
 8012f64:	dec00304 	addi	sp,sp,12
 8012f68:	f800283a 	ret
 8012f6c:	10fffd44 	addi	r3,r2,-11
 8012f70:	88c8983a 	sll	r4,r17,r3
 8012f74:	00800434 	movhi	r2,16
 8012f78:	10bfffc4 	addi	r2,r2,-1
 8012f7c:	2088703a 	and	r4,r4,r2
 8012f80:	28c1ffcc 	andi	r3,r5,2047
 8012f84:	800d883a 	mov	r6,r16
 8012f88:	0005883a 	mov	r2,zero
 8012f8c:	003fea06 	br	8012f38 <__alt_data_end+0xfc012f38>

08012f90 <__floatunsidf>:
 8012f90:	defffe04 	addi	sp,sp,-8
 8012f94:	dc000015 	stw	r16,0(sp)
 8012f98:	dfc00115 	stw	ra,4(sp)
 8012f9c:	2021883a 	mov	r16,r4
 8012fa0:	20001026 	beq	r4,zero,8012fe4 <__floatunsidf+0x54>
 8012fa4:	80130340 	call	8013034 <__clzsi2>
 8012fa8:	01410784 	movi	r5,1054
 8012fac:	100d883a 	mov	r6,r2
 8012fb0:	288bc83a 	sub	r5,r5,r2
 8012fb4:	00800284 	movi	r2,10
 8012fb8:	11801616 	blt	r2,r6,8013014 <__floatunsidf+0x84>
 8012fbc:	008002c4 	movi	r2,11
 8012fc0:	1185c83a 	sub	r2,r2,r6
 8012fc4:	8084d83a 	srl	r2,r16,r2
 8012fc8:	00c00434 	movhi	r3,16
 8012fcc:	31c00544 	addi	r7,r6,21
 8012fd0:	18ffffc4 	addi	r3,r3,-1
 8012fd4:	81e0983a 	sll	r16,r16,r7
 8012fd8:	10cc703a 	and	r6,r2,r3
 8012fdc:	2941ffcc 	andi	r5,r5,2047
 8012fe0:	00000206 	br	8012fec <__floatunsidf+0x5c>
 8012fe4:	000b883a 	mov	r5,zero
 8012fe8:	000d883a 	mov	r6,zero
 8012fec:	280a953a 	slli	r5,r5,20
 8012ff0:	00c00434 	movhi	r3,16
 8012ff4:	18ffffc4 	addi	r3,r3,-1
 8012ff8:	30c6703a 	and	r3,r6,r3
 8012ffc:	8005883a 	mov	r2,r16
 8013000:	1946b03a 	or	r3,r3,r5
 8013004:	dfc00117 	ldw	ra,4(sp)
 8013008:	dc000017 	ldw	r16,0(sp)
 801300c:	dec00204 	addi	sp,sp,8
 8013010:	f800283a 	ret
 8013014:	31bffd44 	addi	r6,r6,-11
 8013018:	818c983a 	sll	r6,r16,r6
 801301c:	00800434 	movhi	r2,16
 8013020:	10bfffc4 	addi	r2,r2,-1
 8013024:	2941ffcc 	andi	r5,r5,2047
 8013028:	0021883a 	mov	r16,zero
 801302c:	308c703a 	and	r6,r6,r2
 8013030:	003fee06 	br	8012fec <__alt_data_end+0xfc012fec>

08013034 <__clzsi2>:
 8013034:	00bfffd4 	movui	r2,65535
 8013038:	11000b36 	bltu	r2,r4,8013068 <__clzsi2+0x34>
 801303c:	00803fc4 	movi	r2,255
 8013040:	1100122e 	bgeu	r2,r4,801308c <__clzsi2+0x58>
 8013044:	00c00204 	movi	r3,8
 8013048:	01400604 	movi	r5,24
 801304c:	20c8d83a 	srl	r4,r4,r3
 8013050:	00820074 	movhi	r2,2049
 8013054:	109bc604 	addi	r2,r2,28440
 8013058:	1109883a 	add	r4,r2,r4
 801305c:	20800003 	ldbu	r2,0(r4)
 8013060:	2885c83a 	sub	r2,r5,r2
 8013064:	f800283a 	ret
 8013068:	00804034 	movhi	r2,256
 801306c:	10bfffc4 	addi	r2,r2,-1
 8013070:	11000336 	bltu	r2,r4,8013080 <__clzsi2+0x4c>
 8013074:	00c00404 	movi	r3,16
 8013078:	180b883a 	mov	r5,r3
 801307c:	003ff306 	br	801304c <__alt_data_end+0xfc01304c>
 8013080:	00c00604 	movi	r3,24
 8013084:	01400204 	movi	r5,8
 8013088:	003ff006 	br	801304c <__alt_data_end+0xfc01304c>
 801308c:	0007883a 	mov	r3,zero
 8013090:	01400804 	movi	r5,32
 8013094:	003fed06 	br	801304c <__alt_data_end+0xfc01304c>

08013098 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 8013098:	defffe04 	addi	sp,sp,-8
 801309c:	dfc00115 	stw	ra,4(sp)
 80130a0:	df000015 	stw	fp,0(sp)
 80130a4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 80130a8:	008200b4 	movhi	r2,2050
 80130ac:	10a33604 	addi	r2,r2,-29480
 80130b0:	10800017 	ldw	r2,0(r2)
 80130b4:	10000526 	beq	r2,zero,80130cc <alt_get_errno+0x34>
 80130b8:	008200b4 	movhi	r2,2050
 80130bc:	10a33604 	addi	r2,r2,-29480
 80130c0:	10800017 	ldw	r2,0(r2)
 80130c4:	103ee83a 	callr	r2
 80130c8:	00000206 	br	80130d4 <alt_get_errno+0x3c>
 80130cc:	008200b4 	movhi	r2,2050
 80130d0:	10aa6204 	addi	r2,r2,-22136
}
 80130d4:	e037883a 	mov	sp,fp
 80130d8:	dfc00117 	ldw	ra,4(sp)
 80130dc:	df000017 	ldw	fp,0(sp)
 80130e0:	dec00204 	addi	sp,sp,8
 80130e4:	f800283a 	ret

080130e8 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
 80130e8:	defffb04 	addi	sp,sp,-20
 80130ec:	dfc00415 	stw	ra,16(sp)
 80130f0:	df000315 	stw	fp,12(sp)
 80130f4:	df000304 	addi	fp,sp,12
 80130f8:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
 80130fc:	e0bfff17 	ldw	r2,-4(fp)
 8013100:	10000816 	blt	r2,zero,8013124 <close+0x3c>
 8013104:	e13fff17 	ldw	r4,-4(fp)
 8013108:	01400304 	movi	r5,12
 801310c:	80027f80 	call	80027f8 <__mulsi3>
 8013110:	1007883a 	mov	r3,r2
 8013114:	00820074 	movhi	r2,2049
 8013118:	109e5704 	addi	r2,r2,31068
 801311c:	1885883a 	add	r2,r3,r2
 8013120:	00000106 	br	8013128 <close+0x40>
 8013124:	0005883a 	mov	r2,zero
 8013128:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
 801312c:	e0bffd17 	ldw	r2,-12(fp)
 8013130:	10001926 	beq	r2,zero,8013198 <close+0xb0>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
 8013134:	e0bffd17 	ldw	r2,-12(fp)
 8013138:	10800017 	ldw	r2,0(r2)
 801313c:	10800417 	ldw	r2,16(r2)
 8013140:	10000626 	beq	r2,zero,801315c <close+0x74>
 8013144:	e0bffd17 	ldw	r2,-12(fp)
 8013148:	10800017 	ldw	r2,0(r2)
 801314c:	10800417 	ldw	r2,16(r2)
 8013150:	e13ffd17 	ldw	r4,-12(fp)
 8013154:	103ee83a 	callr	r2
 8013158:	00000106 	br	8013160 <close+0x78>
 801315c:	0005883a 	mov	r2,zero
 8013160:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
 8013164:	e13fff17 	ldw	r4,-4(fp)
 8013168:	80139e00 	call	80139e0 <alt_release_fd>
    if (rval < 0)
 801316c:	e0bffe17 	ldw	r2,-8(fp)
 8013170:	1000070e 	bge	r2,zero,8013190 <close+0xa8>
    {
      ALT_ERRNO = -rval;
 8013174:	80130980 	call	8013098 <alt_get_errno>
 8013178:	1007883a 	mov	r3,r2
 801317c:	e0bffe17 	ldw	r2,-8(fp)
 8013180:	0085c83a 	sub	r2,zero,r2
 8013184:	18800015 	stw	r2,0(r3)
      return -1;
 8013188:	00bfffc4 	movi	r2,-1
 801318c:	00000706 	br	80131ac <close+0xc4>
    }
    return 0;
 8013190:	0005883a 	mov	r2,zero
 8013194:	00000506 	br	80131ac <close+0xc4>
  }
  else
  {
    ALT_ERRNO = EBADFD;
 8013198:	80130980 	call	8013098 <alt_get_errno>
 801319c:	1007883a 	mov	r3,r2
 80131a0:	00801444 	movi	r2,81
 80131a4:	18800015 	stw	r2,0(r3)
    return -1;
 80131a8:	00bfffc4 	movi	r2,-1
  }
}
 80131ac:	e037883a 	mov	sp,fp
 80131b0:	dfc00117 	ldw	ra,4(sp)
 80131b4:	df000017 	ldw	fp,0(sp)
 80131b8:	dec00204 	addi	sp,sp,8
 80131bc:	f800283a 	ret

080131c0 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
 80131c0:	defffc04 	addi	sp,sp,-16
 80131c4:	df000315 	stw	fp,12(sp)
 80131c8:	df000304 	addi	fp,sp,12
 80131cc:	e13ffd15 	stw	r4,-12(fp)
 80131d0:	e17ffe15 	stw	r5,-8(fp)
 80131d4:	e1bfff15 	stw	r6,-4(fp)
  return len;
 80131d8:	e0bfff17 	ldw	r2,-4(fp)
}
 80131dc:	e037883a 	mov	sp,fp
 80131e0:	df000017 	ldw	fp,0(sp)
 80131e4:	dec00104 	addi	sp,sp,4
 80131e8:	f800283a 	ret

080131ec <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
 80131ec:	defffd04 	addi	sp,sp,-12
 80131f0:	df000215 	stw	fp,8(sp)
 80131f4:	df000204 	addi	fp,sp,8
 80131f8:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
 80131fc:	0001883a 	nop
 8013200:	e0bfff17 	ldw	r2,-4(fp)
 8013204:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
 8013208:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
 801320c:	10000226 	beq	r2,zero,8013218 <_exit+0x2c>
    ALT_SIM_FAIL();
 8013210:	002af070 	cmpltui	zero,zero,43969
 8013214:	00000106 	br	801321c <_exit+0x30>
  } else {
    ALT_SIM_PASS();
 8013218:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
 801321c:	003fff06 	br	801321c <__alt_data_end+0xfc01321c>

08013220 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 8013220:	defffe04 	addi	sp,sp,-8
 8013224:	dfc00115 	stw	ra,4(sp)
 8013228:	df000015 	stw	fp,0(sp)
 801322c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 8013230:	008200b4 	movhi	r2,2050
 8013234:	10a33604 	addi	r2,r2,-29480
 8013238:	10800017 	ldw	r2,0(r2)
 801323c:	10000526 	beq	r2,zero,8013254 <alt_get_errno+0x34>
 8013240:	008200b4 	movhi	r2,2050
 8013244:	10a33604 	addi	r2,r2,-29480
 8013248:	10800017 	ldw	r2,0(r2)
 801324c:	103ee83a 	callr	r2
 8013250:	00000206 	br	801325c <alt_get_errno+0x3c>
 8013254:	008200b4 	movhi	r2,2050
 8013258:	10aa6204 	addi	r2,r2,-22136
}
 801325c:	e037883a 	mov	sp,fp
 8013260:	dfc00117 	ldw	ra,4(sp)
 8013264:	df000017 	ldw	fp,0(sp)
 8013268:	dec00204 	addi	sp,sp,8
 801326c:	f800283a 	ret

08013270 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
 8013270:	defffb04 	addi	sp,sp,-20
 8013274:	dfc00415 	stw	ra,16(sp)
 8013278:	df000315 	stw	fp,12(sp)
 801327c:	df000304 	addi	fp,sp,12
 8013280:	e13ffe15 	stw	r4,-8(fp)
 8013284:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 8013288:	e0bffe17 	ldw	r2,-8(fp)
 801328c:	10000816 	blt	r2,zero,80132b0 <fstat+0x40>
 8013290:	e13ffe17 	ldw	r4,-8(fp)
 8013294:	01400304 	movi	r5,12
 8013298:	80027f80 	call	80027f8 <__mulsi3>
 801329c:	1007883a 	mov	r3,r2
 80132a0:	00820074 	movhi	r2,2049
 80132a4:	109e5704 	addi	r2,r2,31068
 80132a8:	1885883a 	add	r2,r3,r2
 80132ac:	00000106 	br	80132b4 <fstat+0x44>
 80132b0:	0005883a 	mov	r2,zero
 80132b4:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
 80132b8:	e0bffd17 	ldw	r2,-12(fp)
 80132bc:	10001026 	beq	r2,zero,8013300 <fstat+0x90>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
 80132c0:	e0bffd17 	ldw	r2,-12(fp)
 80132c4:	10800017 	ldw	r2,0(r2)
 80132c8:	10800817 	ldw	r2,32(r2)
 80132cc:	10000726 	beq	r2,zero,80132ec <fstat+0x7c>
    {
      return fd->dev->fstat(fd, st);
 80132d0:	e0bffd17 	ldw	r2,-12(fp)
 80132d4:	10800017 	ldw	r2,0(r2)
 80132d8:	10800817 	ldw	r2,32(r2)
 80132dc:	e13ffd17 	ldw	r4,-12(fp)
 80132e0:	e17fff17 	ldw	r5,-4(fp)
 80132e4:	103ee83a 	callr	r2
 80132e8:	00000a06 	br	8013314 <fstat+0xa4>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
 80132ec:	e0bfff17 	ldw	r2,-4(fp)
 80132f0:	00c80004 	movi	r3,8192
 80132f4:	10c00115 	stw	r3,4(r2)
      return 0;
 80132f8:	0005883a 	mov	r2,zero
 80132fc:	00000506 	br	8013314 <fstat+0xa4>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 8013300:	80132200 	call	8013220 <alt_get_errno>
 8013304:	1007883a 	mov	r3,r2
 8013308:	00801444 	movi	r2,81
 801330c:	18800015 	stw	r2,0(r3)
    return -1;
 8013310:	00bfffc4 	movi	r2,-1
  }
}
 8013314:	e037883a 	mov	sp,fp
 8013318:	dfc00117 	ldw	ra,4(sp)
 801331c:	df000017 	ldw	fp,0(sp)
 8013320:	dec00204 	addi	sp,sp,8
 8013324:	f800283a 	ret

08013328 <getpid>:
 *
 * ALT_GETPID is mapped onto the getpid() system call in alt_syscall.h
 */
 
int ALT_GETPID (void)
{
 8013328:	deffff04 	addi	sp,sp,-4
 801332c:	df000015 	stw	fp,0(sp)
 8013330:	d839883a 	mov	fp,sp
  return 0;
 8013334:	0005883a 	mov	r2,zero
}
 8013338:	e037883a 	mov	sp,fp
 801333c:	df000017 	ldw	fp,0(sp)
 8013340:	dec00104 	addi	sp,sp,4
 8013344:	f800283a 	ret

08013348 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 8013348:	defffe04 	addi	sp,sp,-8
 801334c:	dfc00115 	stw	ra,4(sp)
 8013350:	df000015 	stw	fp,0(sp)
 8013354:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 8013358:	008200b4 	movhi	r2,2050
 801335c:	10a33604 	addi	r2,r2,-29480
 8013360:	10800017 	ldw	r2,0(r2)
 8013364:	10000526 	beq	r2,zero,801337c <alt_get_errno+0x34>
 8013368:	008200b4 	movhi	r2,2050
 801336c:	10a33604 	addi	r2,r2,-29480
 8013370:	10800017 	ldw	r2,0(r2)
 8013374:	103ee83a 	callr	r2
 8013378:	00000206 	br	8013384 <alt_get_errno+0x3c>
 801337c:	008200b4 	movhi	r2,2050
 8013380:	10aa6204 	addi	r2,r2,-22136
}
 8013384:	e037883a 	mov	sp,fp
 8013388:	dfc00117 	ldw	ra,4(sp)
 801338c:	df000017 	ldw	fp,0(sp)
 8013390:	dec00204 	addi	sp,sp,8
 8013394:	f800283a 	ret

08013398 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
 8013398:	deffed04 	addi	sp,sp,-76
 801339c:	dfc01215 	stw	ra,72(sp)
 80133a0:	df001115 	stw	fp,68(sp)
 80133a4:	df001104 	addi	fp,sp,68
 80133a8:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 80133ac:	e0bfff17 	ldw	r2,-4(fp)
 80133b0:	10000816 	blt	r2,zero,80133d4 <isatty+0x3c>
 80133b4:	e13fff17 	ldw	r4,-4(fp)
 80133b8:	01400304 	movi	r5,12
 80133bc:	80027f80 	call	80027f8 <__mulsi3>
 80133c0:	1007883a 	mov	r3,r2
 80133c4:	00820074 	movhi	r2,2049
 80133c8:	109e5704 	addi	r2,r2,31068
 80133cc:	1885883a 	add	r2,r3,r2
 80133d0:	00000106 	br	80133d8 <isatty+0x40>
 80133d4:	0005883a 	mov	r2,zero
 80133d8:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
 80133dc:	e0bfef17 	ldw	r2,-68(fp)
 80133e0:	10000e26 	beq	r2,zero,801341c <isatty+0x84>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
 80133e4:	e0bfef17 	ldw	r2,-68(fp)
 80133e8:	10800017 	ldw	r2,0(r2)
 80133ec:	10800817 	ldw	r2,32(r2)
 80133f0:	1000021e 	bne	r2,zero,80133fc <isatty+0x64>
    {
      return 1;
 80133f4:	00800044 	movi	r2,1
 80133f8:	00000d06 	br	8013430 <isatty+0x98>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
 80133fc:	e0bff004 	addi	r2,fp,-64
 8013400:	e13fff17 	ldw	r4,-4(fp)
 8013404:	100b883a 	mov	r5,r2
 8013408:	80132700 	call	8013270 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
 801340c:	e0bff117 	ldw	r2,-60(fp)
 8013410:	10880020 	cmpeqi	r2,r2,8192
 8013414:	10803fcc 	andi	r2,r2,255
 8013418:	00000506 	br	8013430 <isatty+0x98>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 801341c:	80133480 	call	8013348 <alt_get_errno>
 8013420:	1007883a 	mov	r3,r2
 8013424:	00801444 	movi	r2,81
 8013428:	18800015 	stw	r2,0(r3)
    return 0;
 801342c:	0005883a 	mov	r2,zero
  }
}
 8013430:	e037883a 	mov	sp,fp
 8013434:	dfc00117 	ldw	ra,4(sp)
 8013438:	df000017 	ldw	fp,0(sp)
 801343c:	dec00204 	addi	sp,sp,8
 8013440:	f800283a 	ret

08013444 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 8013444:	defffe04 	addi	sp,sp,-8
 8013448:	dfc00115 	stw	ra,4(sp)
 801344c:	df000015 	stw	fp,0(sp)
 8013450:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 8013454:	008200b4 	movhi	r2,2050
 8013458:	10a33604 	addi	r2,r2,-29480
 801345c:	10800017 	ldw	r2,0(r2)
 8013460:	10000526 	beq	r2,zero,8013478 <alt_get_errno+0x34>
 8013464:	008200b4 	movhi	r2,2050
 8013468:	10a33604 	addi	r2,r2,-29480
 801346c:	10800017 	ldw	r2,0(r2)
 8013470:	103ee83a 	callr	r2
 8013474:	00000206 	br	8013480 <alt_get_errno+0x3c>
 8013478:	008200b4 	movhi	r2,2050
 801347c:	10aa6204 	addi	r2,r2,-22136
}
 8013480:	e037883a 	mov	sp,fp
 8013484:	dfc00117 	ldw	ra,4(sp)
 8013488:	df000017 	ldw	fp,0(sp)
 801348c:	dec00204 	addi	sp,sp,8
 8013490:	f800283a 	ret

08013494 <kill>:
 *
 * ALT_KILL is mapped onto the kill() system call in alt_syscall.h
 */

int ALT_KILL (int pid, int sig)
{
 8013494:	defffb04 	addi	sp,sp,-20
 8013498:	dfc00415 	stw	ra,16(sp)
 801349c:	df000315 	stw	fp,12(sp)
 80134a0:	df000304 	addi	fp,sp,12
 80134a4:	e13ffe15 	stw	r4,-8(fp)
 80134a8:	e17fff15 	stw	r5,-4(fp)
  int status = 0;
 80134ac:	e03ffd15 	stw	zero,-12(fp)

  if (pid <= 0)
 80134b0:	e0bffe17 	ldw	r2,-8(fp)
 80134b4:	00803116 	blt	zero,r2,801357c <kill+0xe8>
  {
    switch (sig)
 80134b8:	e0bfff17 	ldw	r2,-4(fp)
 80134bc:	10800828 	cmpgeui	r2,r2,32
 80134c0:	1000291e 	bne	r2,zero,8013568 <kill+0xd4>
 80134c4:	e0bfff17 	ldw	r2,-4(fp)
 80134c8:	100690ba 	slli	r3,r2,2
 80134cc:	00820074 	movhi	r2,2049
 80134d0:	108d3804 	addi	r2,r2,13536
 80134d4:	1885883a 	add	r2,r3,r2
 80134d8:	10800017 	ldw	r2,0(r2)
 80134dc:	1000683a 	jmp	r2
 80134e0:	08013574 	orhi	zero,at,1237
 80134e4:	08013568 	cmpgeui	zero,at,1237
 80134e8:	08013568 	cmpgeui	zero,at,1237
 80134ec:	08013560 	cmpeqi	zero,at,1237
 80134f0:	08013560 	cmpeqi	zero,at,1237
 80134f4:	08013560 	cmpeqi	zero,at,1237
 80134f8:	08013560 	cmpeqi	zero,at,1237
 80134fc:	08013568 	cmpgeui	zero,at,1237
 8013500:	08013560 	cmpeqi	zero,at,1237
 8013504:	08013560 	cmpeqi	zero,at,1237
 8013508:	08013560 	cmpeqi	zero,at,1237
 801350c:	08013560 	cmpeqi	zero,at,1237
 8013510:	08013560 	cmpeqi	zero,at,1237
 8013514:	08013560 	cmpeqi	zero,at,1237
 8013518:	08013560 	cmpeqi	zero,at,1237
 801351c:	08013560 	cmpeqi	zero,at,1237
 8013520:	08013574 	orhi	zero,at,1237
 8013524:	08013568 	cmpgeui	zero,at,1237
 8013528:	08013568 	cmpgeui	zero,at,1237
 801352c:	08013568 	cmpgeui	zero,at,1237
 8013530:	08013574 	orhi	zero,at,1237
 8013534:	08013568 	cmpgeui	zero,at,1237
 8013538:	08013568 	cmpgeui	zero,at,1237
 801353c:	08013560 	cmpeqi	zero,at,1237
 8013540:	08013560 	cmpeqi	zero,at,1237
 8013544:	08013560 	cmpeqi	zero,at,1237
 8013548:	08013560 	cmpeqi	zero,at,1237
 801354c:	08013560 	cmpeqi	zero,at,1237
 8013550:	08013568 	cmpgeui	zero,at,1237
 8013554:	08013568 	cmpgeui	zero,at,1237
 8013558:	08013560 	cmpeqi	zero,at,1237
 801355c:	08013560 	cmpeqi	zero,at,1237
       * The Posix standard defines the default behaviour for all these signals 
       * as being eqivalent to a call to _exit(). No mechanism is provided to 
       * change this behaviour.
       */

      _exit(0);
 8013560:	0009883a 	mov	r4,zero
 8013564:	80131ec0 	call	80131ec <_exit>
      break;
    default:

      /* Tried to send an unsupported signal */

      status = EINVAL;
 8013568:	00800584 	movi	r2,22
 801356c:	e0bffd15 	stw	r2,-12(fp)
 8013570:	00000606 	br	801358c <kill+0xf8>
    {
    case 0:

      /* The null signal is used to check that a pid is valid. */

      break;
 8013574:	0001883a 	nop
 8013578:	00000406 	br	801358c <kill+0xf8>

      status = EINVAL;
    }
  }

  else if (pid > 0)
 801357c:	e0bffe17 	ldw	r2,-8(fp)
 8013580:	0080020e 	bge	zero,r2,801358c <kill+0xf8>
  {
    /* Attempted to signal a non-existant process */

    status = ESRCH;
 8013584:	008000c4 	movi	r2,3
 8013588:	e0bffd15 	stw	r2,-12(fp)
  }

  if (status)
 801358c:	e0bffd17 	ldw	r2,-12(fp)
 8013590:	10000626 	beq	r2,zero,80135ac <kill+0x118>
  {
    ALT_ERRNO = status;
 8013594:	80134440 	call	8013444 <alt_get_errno>
 8013598:	1007883a 	mov	r3,r2
 801359c:	e0bffd17 	ldw	r2,-12(fp)
 80135a0:	18800015 	stw	r2,0(r3)
    return -1;
 80135a4:	00bfffc4 	movi	r2,-1
 80135a8:	00000106 	br	80135b0 <kill+0x11c>
  }

  return 0;
 80135ac:	0005883a 	mov	r2,zero
}
 80135b0:	e037883a 	mov	sp,fp
 80135b4:	dfc00117 	ldw	ra,4(sp)
 80135b8:	df000017 	ldw	fp,0(sp)
 80135bc:	dec00204 	addi	sp,sp,8
 80135c0:	f800283a 	ret

080135c4 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
 80135c4:	defffc04 	addi	sp,sp,-16
 80135c8:	df000315 	stw	fp,12(sp)
 80135cc:	df000304 	addi	fp,sp,12
 80135d0:	e13ffd15 	stw	r4,-12(fp)
 80135d4:	e17ffe15 	stw	r5,-8(fp)
 80135d8:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
 80135dc:	e0fffe17 	ldw	r3,-8(fp)
 80135e0:	e0bffd17 	ldw	r2,-12(fp)
 80135e4:	18800c26 	beq	r3,r2,8013618 <alt_load_section+0x54>
  {
    while( to != end )
 80135e8:	00000806 	br	801360c <alt_load_section+0x48>
    {
      *to++ = *from++;
 80135ec:	e0bffe17 	ldw	r2,-8(fp)
 80135f0:	10c00104 	addi	r3,r2,4
 80135f4:	e0fffe15 	stw	r3,-8(fp)
 80135f8:	e0fffd17 	ldw	r3,-12(fp)
 80135fc:	19000104 	addi	r4,r3,4
 8013600:	e13ffd15 	stw	r4,-12(fp)
 8013604:	18c00017 	ldw	r3,0(r3)
 8013608:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
 801360c:	e0fffe17 	ldw	r3,-8(fp)
 8013610:	e0bfff17 	ldw	r2,-4(fp)
 8013614:	18bff51e 	bne	r3,r2,80135ec <__alt_data_end+0xfc0135ec>
    {
      *to++ = *from++;
    }
  }
}
 8013618:	e037883a 	mov	sp,fp
 801361c:	df000017 	ldw	fp,0(sp)
 8013620:	dec00104 	addi	sp,sp,4
 8013624:	f800283a 	ret

08013628 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
 8013628:	defffe04 	addi	sp,sp,-8
 801362c:	dfc00115 	stw	ra,4(sp)
 8013630:	df000015 	stw	fp,0(sp)
 8013634:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
 8013638:	010200b4 	movhi	r4,2050
 801363c:	21233f04 	addi	r4,r4,-29444
 8013640:	01420074 	movhi	r5,2049
 8013644:	295c2404 	addi	r5,r5,28816
 8013648:	018200b4 	movhi	r6,2050
 801364c:	31a33f04 	addi	r6,r6,-29444
 8013650:	80135c40 	call	80135c4 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
 8013654:	01020034 	movhi	r4,2048
 8013658:	21000804 	addi	r4,r4,32
 801365c:	01420034 	movhi	r5,2048
 8013660:	29400804 	addi	r5,r5,32
 8013664:	01820034 	movhi	r6,2048
 8013668:	31808c04 	addi	r6,r6,560
 801366c:	80135c40 	call	80135c4 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
 8013670:	01020074 	movhi	r4,2049
 8013674:	211a5b04 	addi	r4,r4,26988
 8013678:	01420074 	movhi	r5,2049
 801367c:	295a5b04 	addi	r5,r5,26988
 8013680:	01820074 	movhi	r6,2049
 8013684:	319c2404 	addi	r6,r6,28816
 8013688:	80135c40 	call	80135c4 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
 801368c:	80158140 	call	8015814 <alt_dcache_flush_all>
  alt_icache_flush_all();
 8013690:	8015bb40 	call	8015bb4 <alt_icache_flush_all>
}
 8013694:	e037883a 	mov	sp,fp
 8013698:	dfc00117 	ldw	ra,4(sp)
 801369c:	df000017 	ldw	fp,0(sp)
 80136a0:	dec00204 	addi	sp,sp,8
 80136a4:	f800283a 	ret

080136a8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 80136a8:	defffe04 	addi	sp,sp,-8
 80136ac:	dfc00115 	stw	ra,4(sp)
 80136b0:	df000015 	stw	fp,0(sp)
 80136b4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 80136b8:	008200b4 	movhi	r2,2050
 80136bc:	10a33604 	addi	r2,r2,-29480
 80136c0:	10800017 	ldw	r2,0(r2)
 80136c4:	10000526 	beq	r2,zero,80136dc <alt_get_errno+0x34>
 80136c8:	008200b4 	movhi	r2,2050
 80136cc:	10a33604 	addi	r2,r2,-29480
 80136d0:	10800017 	ldw	r2,0(r2)
 80136d4:	103ee83a 	callr	r2
 80136d8:	00000206 	br	80136e4 <alt_get_errno+0x3c>
 80136dc:	008200b4 	movhi	r2,2050
 80136e0:	10aa6204 	addi	r2,r2,-22136
}
 80136e4:	e037883a 	mov	sp,fp
 80136e8:	dfc00117 	ldw	ra,4(sp)
 80136ec:	df000017 	ldw	fp,0(sp)
 80136f0:	dec00204 	addi	sp,sp,8
 80136f4:	f800283a 	ret

080136f8 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
 80136f8:	defff904 	addi	sp,sp,-28
 80136fc:	dfc00615 	stw	ra,24(sp)
 8013700:	df000515 	stw	fp,20(sp)
 8013704:	df000504 	addi	fp,sp,20
 8013708:	e13ffd15 	stw	r4,-12(fp)
 801370c:	e17ffe15 	stw	r5,-8(fp)
 8013710:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
 8013714:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 8013718:	e0bffd17 	ldw	r2,-12(fp)
 801371c:	10000816 	blt	r2,zero,8013740 <lseek+0x48>
 8013720:	e13ffd17 	ldw	r4,-12(fp)
 8013724:	01400304 	movi	r5,12
 8013728:	80027f80 	call	80027f8 <__mulsi3>
 801372c:	1007883a 	mov	r3,r2
 8013730:	00820074 	movhi	r2,2049
 8013734:	109e5704 	addi	r2,r2,31068
 8013738:	1885883a 	add	r2,r3,r2
 801373c:	00000106 	br	8013744 <lseek+0x4c>
 8013740:	0005883a 	mov	r2,zero
 8013744:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
 8013748:	e0bffc17 	ldw	r2,-16(fp)
 801374c:	10001026 	beq	r2,zero,8013790 <lseek+0x98>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
 8013750:	e0bffc17 	ldw	r2,-16(fp)
 8013754:	10800017 	ldw	r2,0(r2)
 8013758:	10800717 	ldw	r2,28(r2)
 801375c:	10000926 	beq	r2,zero,8013784 <lseek+0x8c>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
 8013760:	e0bffc17 	ldw	r2,-16(fp)
 8013764:	10800017 	ldw	r2,0(r2)
 8013768:	10800717 	ldw	r2,28(r2)
 801376c:	e13ffc17 	ldw	r4,-16(fp)
 8013770:	e17ffe17 	ldw	r5,-8(fp)
 8013774:	e1bfff17 	ldw	r6,-4(fp)
 8013778:	103ee83a 	callr	r2
 801377c:	e0bffb15 	stw	r2,-20(fp)
 8013780:	00000506 	br	8013798 <lseek+0xa0>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
 8013784:	00bfde84 	movi	r2,-134
 8013788:	e0bffb15 	stw	r2,-20(fp)
 801378c:	00000206 	br	8013798 <lseek+0xa0>
    }
  }
  else  
  {
    rc = -EBADFD;
 8013790:	00bfebc4 	movi	r2,-81
 8013794:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
 8013798:	e0bffb17 	ldw	r2,-20(fp)
 801379c:	1000070e 	bge	r2,zero,80137bc <lseek+0xc4>
  {
    ALT_ERRNO = -rc;
 80137a0:	80136a80 	call	80136a8 <alt_get_errno>
 80137a4:	1007883a 	mov	r3,r2
 80137a8:	e0bffb17 	ldw	r2,-20(fp)
 80137ac:	0085c83a 	sub	r2,zero,r2
 80137b0:	18800015 	stw	r2,0(r3)
    rc = -1;
 80137b4:	00bfffc4 	movi	r2,-1
 80137b8:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
 80137bc:	e0bffb17 	ldw	r2,-20(fp)
}
 80137c0:	e037883a 	mov	sp,fp
 80137c4:	dfc00117 	ldw	ra,4(sp)
 80137c8:	df000017 	ldw	fp,0(sp)
 80137cc:	dec00204 	addi	sp,sp,8
 80137d0:	f800283a 	ret

080137d4 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
 80137d4:	defffd04 	addi	sp,sp,-12
 80137d8:	dfc00215 	stw	ra,8(sp)
 80137dc:	df000115 	stw	fp,4(sp)
 80137e0:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
 80137e4:	0009883a 	mov	r4,zero
 80137e8:	8013c980 	call	8013c98 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
 80137ec:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
 80137f0:	8013ccc0 	call	8013ccc <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
 80137f4:	01020074 	movhi	r4,2049
 80137f8:	211c0904 	addi	r4,r4,28708
 80137fc:	01420074 	movhi	r5,2049
 8013800:	295c0904 	addi	r5,r5,28708
 8013804:	01820074 	movhi	r6,2049
 8013808:	319c0904 	addi	r6,r6,28708
 801380c:	8015cb00 	call	8015cb0 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
 8013810:	8015a6c0 	call	8015a6c <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
 8013814:	01020074 	movhi	r4,2049
 8013818:	2116b204 	addi	r4,r4,23240
 801381c:	80165bc0 	call	80165bc <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
 8013820:	d1274a17 	ldw	r4,-25304(gp)
 8013824:	d0e74b17 	ldw	r3,-25300(gp)
 8013828:	d0a74c17 	ldw	r2,-25296(gp)
 801382c:	180b883a 	mov	r5,r3
 8013830:	100d883a 	mov	r6,r2
 8013834:	80008a80 	call	80008a8 <main>
 8013838:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
 801383c:	01000044 	movi	r4,1
 8013840:	80130e80 	call	80130e8 <close>
  exit (result);
 8013844:	e13fff17 	ldw	r4,-4(fp)
 8013848:	80165d00 	call	80165d0 <exit>

0801384c <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
 801384c:	defffe04 	addi	sp,sp,-8
 8013850:	df000115 	stw	fp,4(sp)
 8013854:	df000104 	addi	fp,sp,4
 8013858:	e13fff15 	stw	r4,-4(fp)
}
 801385c:	e037883a 	mov	sp,fp
 8013860:	df000017 	ldw	fp,0(sp)
 8013864:	dec00104 	addi	sp,sp,4
 8013868:	f800283a 	ret

0801386c <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
 801386c:	defffe04 	addi	sp,sp,-8
 8013870:	df000115 	stw	fp,4(sp)
 8013874:	df000104 	addi	fp,sp,4
 8013878:	e13fff15 	stw	r4,-4(fp)
}
 801387c:	e037883a 	mov	sp,fp
 8013880:	df000017 	ldw	fp,0(sp)
 8013884:	dec00104 	addi	sp,sp,4
 8013888:	f800283a 	ret

0801388c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 801388c:	defffe04 	addi	sp,sp,-8
 8013890:	dfc00115 	stw	ra,4(sp)
 8013894:	df000015 	stw	fp,0(sp)
 8013898:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 801389c:	008200b4 	movhi	r2,2050
 80138a0:	10a33604 	addi	r2,r2,-29480
 80138a4:	10800017 	ldw	r2,0(r2)
 80138a8:	10000526 	beq	r2,zero,80138c0 <alt_get_errno+0x34>
 80138ac:	008200b4 	movhi	r2,2050
 80138b0:	10a33604 	addi	r2,r2,-29480
 80138b4:	10800017 	ldw	r2,0(r2)
 80138b8:	103ee83a 	callr	r2
 80138bc:	00000206 	br	80138c8 <alt_get_errno+0x3c>
 80138c0:	008200b4 	movhi	r2,2050
 80138c4:	10aa6204 	addi	r2,r2,-22136
}
 80138c8:	e037883a 	mov	sp,fp
 80138cc:	dfc00117 	ldw	ra,4(sp)
 80138d0:	df000017 	ldw	fp,0(sp)
 80138d4:	dec00204 	addi	sp,sp,8
 80138d8:	f800283a 	ret

080138dc <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
 80138dc:	defff904 	addi	sp,sp,-28
 80138e0:	dfc00615 	stw	ra,24(sp)
 80138e4:	df000515 	stw	fp,20(sp)
 80138e8:	df000504 	addi	fp,sp,20
 80138ec:	e13ffd15 	stw	r4,-12(fp)
 80138f0:	e17ffe15 	stw	r5,-8(fp)
 80138f4:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 80138f8:	e0bffd17 	ldw	r2,-12(fp)
 80138fc:	10000816 	blt	r2,zero,8013920 <read+0x44>
 8013900:	e13ffd17 	ldw	r4,-12(fp)
 8013904:	01400304 	movi	r5,12
 8013908:	80027f80 	call	80027f8 <__mulsi3>
 801390c:	1007883a 	mov	r3,r2
 8013910:	00820074 	movhi	r2,2049
 8013914:	109e5704 	addi	r2,r2,31068
 8013918:	1885883a 	add	r2,r3,r2
 801391c:	00000106 	br	8013924 <read+0x48>
 8013920:	0005883a 	mov	r2,zero
 8013924:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 8013928:	e0bffb17 	ldw	r2,-20(fp)
 801392c:	10002226 	beq	r2,zero,80139b8 <read+0xdc>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 8013930:	e0bffb17 	ldw	r2,-20(fp)
 8013934:	10800217 	ldw	r2,8(r2)
 8013938:	108000cc 	andi	r2,r2,3
 801393c:	10800060 	cmpeqi	r2,r2,1
 8013940:	1000181e 	bne	r2,zero,80139a4 <read+0xc8>
        (fd->dev->read))
 8013944:	e0bffb17 	ldw	r2,-20(fp)
 8013948:	10800017 	ldw	r2,0(r2)
 801394c:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 8013950:	10001426 	beq	r2,zero,80139a4 <read+0xc8>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
 8013954:	e0bffb17 	ldw	r2,-20(fp)
 8013958:	10800017 	ldw	r2,0(r2)
 801395c:	10800517 	ldw	r2,20(r2)
 8013960:	e0ffff17 	ldw	r3,-4(fp)
 8013964:	e13ffb17 	ldw	r4,-20(fp)
 8013968:	e17ffe17 	ldw	r5,-8(fp)
 801396c:	180d883a 	mov	r6,r3
 8013970:	103ee83a 	callr	r2
 8013974:	e0bffc15 	stw	r2,-16(fp)
 8013978:	e0bffc17 	ldw	r2,-16(fp)
 801397c:	1000070e 	bge	r2,zero,801399c <read+0xc0>
        {
          ALT_ERRNO = -rval;
 8013980:	801388c0 	call	801388c <alt_get_errno>
 8013984:	1007883a 	mov	r3,r2
 8013988:	e0bffc17 	ldw	r2,-16(fp)
 801398c:	0085c83a 	sub	r2,zero,r2
 8013990:	18800015 	stw	r2,0(r3)
          return -1;
 8013994:	00bfffc4 	movi	r2,-1
 8013998:	00000c06 	br	80139cc <read+0xf0>
        }
        return rval;
 801399c:	e0bffc17 	ldw	r2,-16(fp)
 80139a0:	00000a06 	br	80139cc <read+0xf0>
      }
      else
      {
        ALT_ERRNO = EACCES;
 80139a4:	801388c0 	call	801388c <alt_get_errno>
 80139a8:	1007883a 	mov	r3,r2
 80139ac:	00800344 	movi	r2,13
 80139b0:	18800015 	stw	r2,0(r3)
 80139b4:	00000406 	br	80139c8 <read+0xec>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
 80139b8:	801388c0 	call	801388c <alt_get_errno>
 80139bc:	1007883a 	mov	r3,r2
 80139c0:	00801444 	movi	r2,81
 80139c4:	18800015 	stw	r2,0(r3)
  }
  return -1;
 80139c8:	00bfffc4 	movi	r2,-1
}
 80139cc:	e037883a 	mov	sp,fp
 80139d0:	dfc00117 	ldw	ra,4(sp)
 80139d4:	df000017 	ldw	fp,0(sp)
 80139d8:	dec00204 	addi	sp,sp,8
 80139dc:	f800283a 	ret

080139e0 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
 80139e0:	defffc04 	addi	sp,sp,-16
 80139e4:	dfc00315 	stw	ra,12(sp)
 80139e8:	df000215 	stw	fp,8(sp)
 80139ec:	dc000115 	stw	r16,4(sp)
 80139f0:	df000204 	addi	fp,sp,8
 80139f4:	e13ffe15 	stw	r4,-8(fp)
  if (fd > 2)
 80139f8:	e0bffe17 	ldw	r2,-8(fp)
 80139fc:	108000d0 	cmplti	r2,r2,3
 8013a00:	1000111e 	bne	r2,zero,8013a48 <alt_release_fd+0x68>
  {
    alt_fd_list[fd].fd_flags = 0;
 8013a04:	04020074 	movhi	r16,2049
 8013a08:	841e5704 	addi	r16,r16,31068
 8013a0c:	e0bffe17 	ldw	r2,-8(fp)
 8013a10:	1009883a 	mov	r4,r2
 8013a14:	01400304 	movi	r5,12
 8013a18:	80027f80 	call	80027f8 <__mulsi3>
 8013a1c:	8085883a 	add	r2,r16,r2
 8013a20:	10800204 	addi	r2,r2,8
 8013a24:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
 8013a28:	04020074 	movhi	r16,2049
 8013a2c:	841e5704 	addi	r16,r16,31068
 8013a30:	e0bffe17 	ldw	r2,-8(fp)
 8013a34:	1009883a 	mov	r4,r2
 8013a38:	01400304 	movi	r5,12
 8013a3c:	80027f80 	call	80027f8 <__mulsi3>
 8013a40:	8085883a 	add	r2,r16,r2
 8013a44:	10000015 	stw	zero,0(r2)
  }
}
 8013a48:	e6ffff04 	addi	sp,fp,-4
 8013a4c:	dfc00217 	ldw	ra,8(sp)
 8013a50:	df000117 	ldw	fp,4(sp)
 8013a54:	dc000017 	ldw	r16,0(sp)
 8013a58:	dec00304 	addi	sp,sp,12
 8013a5c:	f800283a 	ret

08013a60 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
 8013a60:	defff904 	addi	sp,sp,-28
 8013a64:	df000615 	stw	fp,24(sp)
 8013a68:	df000604 	addi	fp,sp,24
 8013a6c:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 8013a70:	0005303a 	rdctl	r2,status
 8013a74:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 8013a78:	e0fffc17 	ldw	r3,-16(fp)
 8013a7c:	00bfff84 	movi	r2,-2
 8013a80:	1884703a 	and	r2,r3,r2
 8013a84:	1001703a 	wrctl	status,r2
  
  return context;
 8013a88:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
 8013a8c:	e0bffa15 	stw	r2,-24(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
 8013a90:	d0a01b17 	ldw	r2,-32660(gp)
 8013a94:	10c000c4 	addi	r3,r2,3
 8013a98:	00bfff04 	movi	r2,-4
 8013a9c:	1884703a 	and	r2,r3,r2
 8013aa0:	d0a01b15 	stw	r2,-32660(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
 8013aa4:	d0e01b17 	ldw	r3,-32660(gp)
 8013aa8:	e0bfff17 	ldw	r2,-4(fp)
 8013aac:	1887883a 	add	r3,r3,r2
 8013ab0:	00830034 	movhi	r2,3072
 8013ab4:	10800004 	addi	r2,r2,0
 8013ab8:	10c0062e 	bgeu	r2,r3,8013ad4 <sbrk+0x74>
 8013abc:	e0bffa17 	ldw	r2,-24(fp)
 8013ac0:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 8013ac4:	e0bffd17 	ldw	r2,-12(fp)
 8013ac8:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
 8013acc:	00bfffc4 	movi	r2,-1
 8013ad0:	00000b06 	br	8013b00 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
 8013ad4:	d0a01b17 	ldw	r2,-32660(gp)
 8013ad8:	e0bffb15 	stw	r2,-20(fp)
  heap_end += incr; 
 8013adc:	d0e01b17 	ldw	r3,-32660(gp)
 8013ae0:	e0bfff17 	ldw	r2,-4(fp)
 8013ae4:	1885883a 	add	r2,r3,r2
 8013ae8:	d0a01b15 	stw	r2,-32660(gp)
 8013aec:	e0bffa17 	ldw	r2,-24(fp)
 8013af0:	e0bffe15 	stw	r2,-8(fp)
 8013af4:	e0bffe17 	ldw	r2,-8(fp)
 8013af8:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
 8013afc:	e0bffb17 	ldw	r2,-20(fp)
} 
 8013b00:	e037883a 	mov	sp,fp
 8013b04:	df000017 	ldw	fp,0(sp)
 8013b08:	dec00104 	addi	sp,sp,4
 8013b0c:	f800283a 	ret

08013b10 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 8013b10:	defffe04 	addi	sp,sp,-8
 8013b14:	dfc00115 	stw	ra,4(sp)
 8013b18:	df000015 	stw	fp,0(sp)
 8013b1c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 8013b20:	008200b4 	movhi	r2,2050
 8013b24:	10a33604 	addi	r2,r2,-29480
 8013b28:	10800017 	ldw	r2,0(r2)
 8013b2c:	10000526 	beq	r2,zero,8013b44 <alt_get_errno+0x34>
 8013b30:	008200b4 	movhi	r2,2050
 8013b34:	10a33604 	addi	r2,r2,-29480
 8013b38:	10800017 	ldw	r2,0(r2)
 8013b3c:	103ee83a 	callr	r2
 8013b40:	00000206 	br	8013b4c <alt_get_errno+0x3c>
 8013b44:	008200b4 	movhi	r2,2050
 8013b48:	10aa6204 	addi	r2,r2,-22136
}
 8013b4c:	e037883a 	mov	sp,fp
 8013b50:	dfc00117 	ldw	ra,4(sp)
 8013b54:	df000017 	ldw	fp,0(sp)
 8013b58:	dec00204 	addi	sp,sp,8
 8013b5c:	f800283a 	ret

08013b60 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
 8013b60:	defff904 	addi	sp,sp,-28
 8013b64:	dfc00615 	stw	ra,24(sp)
 8013b68:	df000515 	stw	fp,20(sp)
 8013b6c:	df000504 	addi	fp,sp,20
 8013b70:	e13ffd15 	stw	r4,-12(fp)
 8013b74:	e17ffe15 	stw	r5,-8(fp)
 8013b78:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 8013b7c:	e0bffd17 	ldw	r2,-12(fp)
 8013b80:	10000816 	blt	r2,zero,8013ba4 <write+0x44>
 8013b84:	e13ffd17 	ldw	r4,-12(fp)
 8013b88:	01400304 	movi	r5,12
 8013b8c:	80027f80 	call	80027f8 <__mulsi3>
 8013b90:	1007883a 	mov	r3,r2
 8013b94:	00820074 	movhi	r2,2049
 8013b98:	109e5704 	addi	r2,r2,31068
 8013b9c:	1885883a 	add	r2,r3,r2
 8013ba0:	00000106 	br	8013ba8 <write+0x48>
 8013ba4:	0005883a 	mov	r2,zero
 8013ba8:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 8013bac:	e0bffb17 	ldw	r2,-20(fp)
 8013bb0:	10002126 	beq	r2,zero,8013c38 <write+0xd8>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
 8013bb4:	e0bffb17 	ldw	r2,-20(fp)
 8013bb8:	10800217 	ldw	r2,8(r2)
 8013bbc:	108000cc 	andi	r2,r2,3
 8013bc0:	10001826 	beq	r2,zero,8013c24 <write+0xc4>
 8013bc4:	e0bffb17 	ldw	r2,-20(fp)
 8013bc8:	10800017 	ldw	r2,0(r2)
 8013bcc:	10800617 	ldw	r2,24(r2)
 8013bd0:	10001426 	beq	r2,zero,8013c24 <write+0xc4>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
 8013bd4:	e0bffb17 	ldw	r2,-20(fp)
 8013bd8:	10800017 	ldw	r2,0(r2)
 8013bdc:	10800617 	ldw	r2,24(r2)
 8013be0:	e0ffff17 	ldw	r3,-4(fp)
 8013be4:	e13ffb17 	ldw	r4,-20(fp)
 8013be8:	e17ffe17 	ldw	r5,-8(fp)
 8013bec:	180d883a 	mov	r6,r3
 8013bf0:	103ee83a 	callr	r2
 8013bf4:	e0bffc15 	stw	r2,-16(fp)
 8013bf8:	e0bffc17 	ldw	r2,-16(fp)
 8013bfc:	1000070e 	bge	r2,zero,8013c1c <write+0xbc>
      {
        ALT_ERRNO = -rval;
 8013c00:	8013b100 	call	8013b10 <alt_get_errno>
 8013c04:	1007883a 	mov	r3,r2
 8013c08:	e0bffc17 	ldw	r2,-16(fp)
 8013c0c:	0085c83a 	sub	r2,zero,r2
 8013c10:	18800015 	stw	r2,0(r3)
        return -1;
 8013c14:	00bfffc4 	movi	r2,-1
 8013c18:	00000c06 	br	8013c4c <write+0xec>
      }
      return rval;
 8013c1c:	e0bffc17 	ldw	r2,-16(fp)
 8013c20:	00000a06 	br	8013c4c <write+0xec>
    }
    else
    {
      ALT_ERRNO = EACCES;
 8013c24:	8013b100 	call	8013b10 <alt_get_errno>
 8013c28:	1007883a 	mov	r3,r2
 8013c2c:	00800344 	movi	r2,13
 8013c30:	18800015 	stw	r2,0(r3)
 8013c34:	00000406 	br	8013c48 <write+0xe8>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
 8013c38:	8013b100 	call	8013b10 <alt_get_errno>
 8013c3c:	1007883a 	mov	r3,r2
 8013c40:	00801444 	movi	r2,81
 8013c44:	18800015 	stw	r2,0(r3)
  }
  return -1;
 8013c48:	00bfffc4 	movi	r2,-1
}
 8013c4c:	e037883a 	mov	sp,fp
 8013c50:	dfc00117 	ldw	ra,4(sp)
 8013c54:	df000017 	ldw	fp,0(sp)
 8013c58:	dec00204 	addi	sp,sp,8
 8013c5c:	f800283a 	ret

08013c60 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
 8013c60:	defffd04 	addi	sp,sp,-12
 8013c64:	dfc00215 	stw	ra,8(sp)
 8013c68:	df000115 	stw	fp,4(sp)
 8013c6c:	df000104 	addi	fp,sp,4
 8013c70:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
 8013c74:	e13fff17 	ldw	r4,-4(fp)
 8013c78:	014200b4 	movhi	r5,2050
 8013c7c:	29633304 	addi	r5,r5,-29492
 8013c80:	80158800 	call	8015880 <alt_dev_llist_insert>
}
 8013c84:	e037883a 	mov	sp,fp
 8013c88:	dfc00117 	ldw	ra,4(sp)
 8013c8c:	df000017 	ldw	fp,0(sp)
 8013c90:	dec00204 	addi	sp,sp,8
 8013c94:	f800283a 	ret

08013c98 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
 8013c98:	defffd04 	addi	sp,sp,-12
 8013c9c:	dfc00215 	stw	ra,8(sp)
 8013ca0:	df000115 	stw	fp,4(sp)
 8013ca4:	df000104 	addi	fp,sp,4
 8013ca8:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
 8013cac:	80163180 	call	8016318 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
 8013cb0:	00800044 	movi	r2,1
 8013cb4:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
 8013cb8:	e037883a 	mov	sp,fp
 8013cbc:	dfc00117 	ldw	ra,4(sp)
 8013cc0:	df000017 	ldw	fp,0(sp)
 8013cc4:	dec00204 	addi	sp,sp,8
 8013cc8:	f800283a 	ret

08013ccc <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
 8013ccc:	defffd04 	addi	sp,sp,-12
 8013cd0:	dfc00215 	stw	ra,8(sp)
 8013cd4:	df000115 	stw	fp,4(sp)
 8013cd8:	df000104 	addi	fp,sp,4
    ALTERA_AVALON_DMA_INIT ( DMA_FPGA_TO_HPS, dma_fpga_to_hps);
 8013cdc:	008000c4 	movi	r2,3
 8013ce0:	d8800015 	stw	r2,0(sp)
 8013ce4:	01020074 	movhi	r4,2049
 8013ce8:	211ee004 	addi	r4,r4,31616
 8013cec:	01420074 	movhi	r5,2049
 8013cf0:	295ee704 	addi	r5,r5,31644
 8013cf4:	01801004 	movi	r6,64
 8013cf8:	000f883a 	mov	r7,zero
 8013cfc:	801485c0 	call	801485c <alt_avalon_dma_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
 8013d00:	01020074 	movhi	r4,2049
 8013d04:	211ef804 	addi	r4,r4,31712
 8013d08:	000b883a 	mov	r5,zero
 8013d0c:	000d883a 	mov	r6,zero
 8013d10:	8014a680 	call	8014a68 <altera_avalon_jtag_uart_init>
 8013d14:	01020074 	movhi	r4,2049
 8013d18:	211eee04 	addi	r4,r4,31672
 8013d1c:	8013c600 	call	8013c60 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID, sysid);
 8013d20:	0001883a 	nop
    ALTERA_UP_AVALON_RS232_INIT ( BT_RS232_UART, bt_rs232_uart);
 8013d24:	010200b4 	movhi	r4,2050
 8013d28:	21230604 	addi	r4,r4,-29672
 8013d2c:	8013c600 	call	8013c60 <alt_dev_reg>
    ALTERA_UP_AVALON_RS232_INIT ( WIFI_RS232_UART, wifi_rs232_uart);
 8013d30:	010200b4 	movhi	r4,2050
 8013d34:	21231104 	addi	r4,r4,-29628
 8013d38:	8013c600 	call	8013c60 <alt_dev_reg>
}
 8013d3c:	e037883a 	mov	sp,fp
 8013d40:	dfc00117 	ldw	ra,4(sp)
 8013d44:	df000017 	ldw	fp,0(sp)
 8013d48:	dec00204 	addi	sp,sp,8
 8013d4c:	f800283a 	ret

08013d50 <alt_dma_txchan_reg>:
/*
 * Register a DMA transmit channel with the system.
 */

static ALT_INLINE int alt_dma_txchan_reg (alt_dma_txchan_dev* dev)
{
 8013d50:	defffd04 	addi	sp,sp,-12
 8013d54:	dfc00215 	stw	ra,8(sp)
 8013d58:	df000115 	stw	fp,4(sp)
 8013d5c:	df000104 	addi	fp,sp,4
 8013d60:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dma_txchan_list;

  return alt_dev_llist_insert((alt_dev_llist*) dev, &alt_dma_txchan_list);
 8013d64:	e13fff17 	ldw	r4,-4(fp)
 8013d68:	014200b4 	movhi	r5,2050
 8013d6c:	29633a04 	addi	r5,r5,-29464
 8013d70:	80158800 	call	8015880 <alt_dev_llist_insert>
}
 8013d74:	e037883a 	mov	sp,fp
 8013d78:	dfc00117 	ldw	ra,4(sp)
 8013d7c:	df000017 	ldw	fp,0(sp)
 8013d80:	dec00204 	addi	sp,sp,8
 8013d84:	f800283a 	ret

08013d88 <alt_dma_rxchan_reg>:
/*
 * Register a DMA receive channel with the system.
 */

static ALT_INLINE int alt_dma_rxchan_reg (alt_dma_rxchan_dev* dev)
{
 8013d88:	defffd04 	addi	sp,sp,-12
 8013d8c:	dfc00215 	stw	ra,8(sp)
 8013d90:	df000115 	stw	fp,4(sp)
 8013d94:	df000104 	addi	fp,sp,4
 8013d98:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dma_rxchan_list;

  return alt_dev_llist_insert((alt_dev_llist*) dev, &alt_dma_rxchan_list);
 8013d9c:	e13fff17 	ldw	r4,-4(fp)
 8013da0:	014200b4 	movhi	r5,2050
 8013da4:	29633804 	addi	r5,r5,-29472
 8013da8:	80158800 	call	8015880 <alt_dev_llist_insert>
}
 8013dac:	e037883a 	mov	sp,fp
 8013db0:	dfc00117 	ldw	ra,4(sp)
 8013db4:	df000017 	ldw	fp,0(sp)
 8013db8:	dec00204 	addi	sp,sp,8
 8013dbc:	f800283a 	ret

08013dc0 <alt_avalon_dma_launch_bidir>:
 * both the receive and transmit channels are using incrementing addresses,
 * i.e. both channels are accesing memory rather than devices.
 */

void alt_avalon_dma_launch_bidir (alt_avalon_dma_priv* priv)
{
 8013dc0:	defffc04 	addi	sp,sp,-16
 8013dc4:	df000315 	stw	fp,12(sp)
 8013dc8:	df000304 	addi	fp,sp,12
 8013dcc:	e13fff15 	stw	r4,-4(fp)
  alt_avalon_dma_txslot* tx_slot;
  alt_avalon_dma_rxslot* rx_slot;

  if ((priv->tx_start != priv->tx_end) && (priv->rx_start != priv->rx_end))
 8013dd0:	e0bfff17 	ldw	r2,-4(fp)
 8013dd4:	10c00117 	ldw	r3,4(r2)
 8013dd8:	e0bfff17 	ldw	r2,-4(fp)
 8013ddc:	10800217 	ldw	r2,8(r2)
 8013de0:	18802e26 	beq	r3,r2,8013e9c <alt_avalon_dma_launch_bidir+0xdc>
 8013de4:	e0bfff17 	ldw	r2,-4(fp)
 8013de8:	10c00317 	ldw	r3,12(r2)
 8013dec:	e0bfff17 	ldw	r2,-4(fp)
 8013df0:	10800417 	ldw	r2,16(r2)
 8013df4:	18802926 	beq	r3,r2,8013e9c <alt_avalon_dma_launch_bidir+0xdc>
  {
    priv->active = 1;
 8013df8:	e0bfff17 	ldw	r2,-4(fp)
 8013dfc:	00c00044 	movi	r3,1
 8013e00:	10c00815 	stw	r3,32(r2)

    tx_slot = &priv->tx_buf[priv->tx_start];
 8013e04:	e0bfff17 	ldw	r2,-4(fp)
 8013e08:	10800117 	ldw	r2,4(r2)
 8013e0c:	1004913a 	slli	r2,r2,4
 8013e10:	10800904 	addi	r2,r2,36
 8013e14:	e0ffff17 	ldw	r3,-4(fp)
 8013e18:	1885883a 	add	r2,r3,r2
 8013e1c:	e0bffd15 	stw	r2,-12(fp)
    rx_slot = &priv->rx_buf[priv->rx_start];
 8013e20:	e0bfff17 	ldw	r2,-4(fp)
 8013e24:	10800317 	ldw	r2,12(r2)
 8013e28:	1004913a 	slli	r2,r2,4
 8013e2c:	10801904 	addi	r2,r2,100
 8013e30:	e0ffff17 	ldw	r3,-4(fp)
 8013e34:	1885883a 	add	r2,r3,r2
 8013e38:	e0bffe15 	stw	r2,-8(fp)

    IOWR_ALTERA_AVALON_DMA_RADDRESS (priv->base, (alt_u32) tx_slot->from);
 8013e3c:	e0bfff17 	ldw	r2,-4(fp)
 8013e40:	10800017 	ldw	r2,0(r2)
 8013e44:	10800104 	addi	r2,r2,4
 8013e48:	e0fffd17 	ldw	r3,-12(fp)
 8013e4c:	18c00017 	ldw	r3,0(r3)
 8013e50:	10c00035 	stwio	r3,0(r2)
    IOWR_ALTERA_AVALON_DMA_WADDRESS (priv->base, (alt_u32) rx_slot->data);
 8013e54:	e0bfff17 	ldw	r2,-4(fp)
 8013e58:	10800017 	ldw	r2,0(r2)
 8013e5c:	10800204 	addi	r2,r2,8
 8013e60:	e0fffe17 	ldw	r3,-8(fp)
 8013e64:	18c00017 	ldw	r3,0(r3)
 8013e68:	10c00035 	stwio	r3,0(r2)

    IOWR_ALTERA_AVALON_DMA_LENGTH (priv->base,
 8013e6c:	e0bfff17 	ldw	r2,-4(fp)
 8013e70:	10800017 	ldw	r2,0(r2)
 8013e74:	11000304 	addi	r4,r2,12
 8013e78:	e0bffd17 	ldw	r2,-12(fp)
 8013e7c:	11400117 	ldw	r5,4(r2)
 8013e80:	e0bffe17 	ldw	r2,-8(fp)
 8013e84:	10c00117 	ldw	r3,4(r2)
 8013e88:	2805883a 	mov	r2,r5
 8013e8c:	1880012e 	bgeu	r3,r2,8013e94 <alt_avalon_dma_launch_bidir+0xd4>
 8013e90:	1805883a 	mov	r2,r3
 8013e94:	20800035 	stwio	r2,0(r4)
 8013e98:	00000206 	br	8013ea4 <alt_avalon_dma_launch_bidir+0xe4>
       (tx_slot->len > rx_slot->len) ? rx_slot->len : tx_slot->len);
  }
  else
  {
    priv->active = 0;
 8013e9c:	e0bfff17 	ldw	r2,-4(fp)
 8013ea0:	10000815 	stw	zero,32(r2)
  }
}
 8013ea4:	e037883a 	mov	sp,fp
 8013ea8:	df000017 	ldw	fp,0(sp)
 8013eac:	dec00104 	addi	sp,sp,4
 8013eb0:	f800283a 	ret

08013eb4 <alt_avalon_dma_launch_txonly>:
 * i.e. the receive channel is accessing a single memory location (which is
 * probably a device register).
 */

static void alt_avalon_dma_launch_txonly (alt_avalon_dma_priv* priv)
{
 8013eb4:	defffd04 	addi	sp,sp,-12
 8013eb8:	df000215 	stw	fp,8(sp)
 8013ebc:	df000204 	addi	fp,sp,8
 8013ec0:	e13fff15 	stw	r4,-4(fp)
  alt_avalon_dma_txslot* tx_slot;

  if (priv->tx_start != priv->tx_end)
 8013ec4:	e0bfff17 	ldw	r2,-4(fp)
 8013ec8:	10c00117 	ldw	r3,4(r2)
 8013ecc:	e0bfff17 	ldw	r2,-4(fp)
 8013ed0:	10800217 	ldw	r2,8(r2)
 8013ed4:	18801726 	beq	r3,r2,8013f34 <alt_avalon_dma_launch_txonly+0x80>
  {
    priv->active = 1;
 8013ed8:	e0bfff17 	ldw	r2,-4(fp)
 8013edc:	00c00044 	movi	r3,1
 8013ee0:	10c00815 	stw	r3,32(r2)
    tx_slot      = &priv->tx_buf[priv->tx_start];
 8013ee4:	e0bfff17 	ldw	r2,-4(fp)
 8013ee8:	10800117 	ldw	r2,4(r2)
 8013eec:	1004913a 	slli	r2,r2,4
 8013ef0:	10800904 	addi	r2,r2,36
 8013ef4:	e0ffff17 	ldw	r3,-4(fp)
 8013ef8:	1885883a 	add	r2,r3,r2
 8013efc:	e0bffe15 	stw	r2,-8(fp)

    IOWR_ALTERA_AVALON_DMA_RADDRESS (priv->base, (alt_u32) tx_slot->from);
 8013f00:	e0bfff17 	ldw	r2,-4(fp)
 8013f04:	10800017 	ldw	r2,0(r2)
 8013f08:	10800104 	addi	r2,r2,4
 8013f0c:	e0fffe17 	ldw	r3,-8(fp)
 8013f10:	18c00017 	ldw	r3,0(r3)
 8013f14:	10c00035 	stwio	r3,0(r2)
    IOWR_ALTERA_AVALON_DMA_LENGTH (priv->base, tx_slot->len);
 8013f18:	e0bfff17 	ldw	r2,-4(fp)
 8013f1c:	10800017 	ldw	r2,0(r2)
 8013f20:	10800304 	addi	r2,r2,12
 8013f24:	e0fffe17 	ldw	r3,-8(fp)
 8013f28:	18c00117 	ldw	r3,4(r3)
 8013f2c:	10c00035 	stwio	r3,0(r2)
 8013f30:	00000206 	br	8013f3c <alt_avalon_dma_launch_txonly+0x88>
  }
  else
  {
    priv->active = 0;
 8013f34:	e0bfff17 	ldw	r2,-4(fp)
 8013f38:	10000815 	stw	zero,32(r2)
  }
}
 8013f3c:	e037883a 	mov	sp,fp
 8013f40:	df000017 	ldw	fp,0(sp)
 8013f44:	dec00104 	addi	sp,sp,4
 8013f48:	f800283a 	ret

08013f4c <alt_avalon_dma_launch_rxonly>:
 * i.e. the transmit channel is accessing a single memory location (which is
 * probably a device register).
 */

static void alt_avalon_dma_launch_rxonly (alt_avalon_dma_priv* priv)
{
 8013f4c:	defffd04 	addi	sp,sp,-12
 8013f50:	df000215 	stw	fp,8(sp)
 8013f54:	df000204 	addi	fp,sp,8
 8013f58:	e13fff15 	stw	r4,-4(fp)
  alt_avalon_dma_rxslot* rx_slot;

  if (priv->rx_start != priv->rx_end)
 8013f5c:	e0bfff17 	ldw	r2,-4(fp)
 8013f60:	10c00317 	ldw	r3,12(r2)
 8013f64:	e0bfff17 	ldw	r2,-4(fp)
 8013f68:	10800417 	ldw	r2,16(r2)
 8013f6c:	18801726 	beq	r3,r2,8013fcc <alt_avalon_dma_launch_rxonly+0x80>
  {
    priv->active = 1;
 8013f70:	e0bfff17 	ldw	r2,-4(fp)
 8013f74:	00c00044 	movi	r3,1
 8013f78:	10c00815 	stw	r3,32(r2)
    rx_slot      = &priv->rx_buf[priv->rx_start];
 8013f7c:	e0bfff17 	ldw	r2,-4(fp)
 8013f80:	10800317 	ldw	r2,12(r2)
 8013f84:	1004913a 	slli	r2,r2,4
 8013f88:	10801904 	addi	r2,r2,100
 8013f8c:	e0ffff17 	ldw	r3,-4(fp)
 8013f90:	1885883a 	add	r2,r3,r2
 8013f94:	e0bffe15 	stw	r2,-8(fp)

    IOWR_ALTERA_AVALON_DMA_WADDRESS (priv->base, (alt_u32) rx_slot->data);
 8013f98:	e0bfff17 	ldw	r2,-4(fp)
 8013f9c:	10800017 	ldw	r2,0(r2)
 8013fa0:	10800204 	addi	r2,r2,8
 8013fa4:	e0fffe17 	ldw	r3,-8(fp)
 8013fa8:	18c00017 	ldw	r3,0(r3)
 8013fac:	10c00035 	stwio	r3,0(r2)
    IOWR_ALTERA_AVALON_DMA_LENGTH (priv->base, rx_slot->len);
 8013fb0:	e0bfff17 	ldw	r2,-4(fp)
 8013fb4:	10800017 	ldw	r2,0(r2)
 8013fb8:	10800304 	addi	r2,r2,12
 8013fbc:	e0fffe17 	ldw	r3,-8(fp)
 8013fc0:	18c00117 	ldw	r3,4(r3)
 8013fc4:	10c00035 	stwio	r3,0(r2)
 8013fc8:	00000206 	br	8013fd4 <alt_avalon_dma_launch_rxonly+0x88>
  }
  else
  {
    priv->active = 0;
 8013fcc:	e0bfff17 	ldw	r2,-4(fp)
 8013fd0:	10000815 	stw	zero,32(r2)
  }
}
 8013fd4:	e037883a 	mov	sp,fp
 8013fd8:	df000017 	ldw	fp,0(sp)
 8013fdc:	dec00104 	addi	sp,sp,4
 8013fe0:	f800283a 	ret

08013fe4 <alt_avalon_dma_ioctl>:
 * device instance. See alt_dma_dev.h for the meaning of the supported
 * ioctl requests.
 */

static int alt_avalon_dma_ioctl (alt_avalon_dma_priv* priv, int req, void* arg)
{
 8013fe4:	defffa04 	addi	sp,sp,-24
 8013fe8:	df000515 	stw	fp,20(sp)
 8013fec:	df000504 	addi	fp,sp,20
 8013ff0:	e13ffd15 	stw	r4,-12(fp)
 8013ff4:	e17ffe15 	stw	r5,-8(fp)
 8013ff8:	e1bfff15 	stw	r6,-4(fp)
  int     status = 0;
 8013ffc:	e03ffb15 	stw	zero,-20(fp)
   * since it cannot catch concurrent calls to alt_alavalon_dma_prepare()
   * or alt_avalon_dma_send(), but it should at least catch the most
   * common class of problems.
   */

  if ((priv->tx_start != priv->tx_end) ||
 8014000:	e0bffd17 	ldw	r2,-12(fp)
 8014004:	10c00117 	ldw	r3,4(r2)
 8014008:	e0bffd17 	ldw	r2,-12(fp)
 801400c:	10800217 	ldw	r2,8(r2)
 8014010:	18800a1e 	bne	r3,r2,801403c <alt_avalon_dma_ioctl+0x58>
      (priv->rx_start != priv->rx_end) ||
 8014014:	e0bffd17 	ldw	r2,-12(fp)
 8014018:	10c00317 	ldw	r3,12(r2)
 801401c:	e0bffd17 	ldw	r2,-12(fp)
 8014020:	10800417 	ldw	r2,16(r2)
   * since it cannot catch concurrent calls to alt_alavalon_dma_prepare()
   * or alt_avalon_dma_send(), but it should at least catch the most
   * common class of problems.
   */

  if ((priv->tx_start != priv->tx_end) ||
 8014024:	1880051e 	bne	r3,r2,801403c <alt_avalon_dma_ioctl+0x58>
      (priv->rx_start != priv->rx_end) ||
      IORD_ALTERA_AVALON_DMA_LENGTH (priv->base))
 8014028:	e0bffd17 	ldw	r2,-12(fp)
 801402c:	10800017 	ldw	r2,0(r2)
 8014030:	10800304 	addi	r2,r2,12
 8014034:	10800037 	ldwio	r2,0(r2)
   * or alt_avalon_dma_send(), but it should at least catch the most
   * common class of problems.
   */

  if ((priv->tx_start != priv->tx_end) ||
      (priv->rx_start != priv->rx_end) ||
 8014038:	10000226 	beq	r2,zero,8014044 <alt_avalon_dma_ioctl+0x60>
      IORD_ALTERA_AVALON_DMA_LENGTH (priv->base))
  {
    return -EIO;
 801403c:	00bffec4 	movi	r2,-5
 8014040:	0000b506 	br	8014318 <alt_avalon_dma_ioctl+0x334>
  }

  /* Now process the ioctl. */

  switch (req)
 8014044:	e0bffe17 	ldw	r2,-8(fp)
 8014048:	108002a8 	cmpgeui	r2,r2,10
 801404c:	1000781e 	bne	r2,zero,8014230 <alt_avalon_dma_ioctl+0x24c>
 8014050:	e0bffe17 	ldw	r2,-8(fp)
 8014054:	100690ba 	slli	r3,r2,2
 8014058:	00820074 	movhi	r2,2049
 801405c:	10901b04 	addi	r2,r2,16492
 8014060:	1885883a 	add	r2,r3,r2
 8014064:	10800017 	ldw	r2,0(r2)
 8014068:	1000683a 	jmp	r2
 801406c:	08014230 	cmpltui	zero,at,1288
 8014070:	08014094 	ori	zero,at,1282
 8014074:	080140ec 	andhi	zero,at,1283
 8014078:	08014118 	cmpnei	zero,at,1284
 801407c:	08014170 	cmpltui	zero,at,1285
 8014080:	0801419c 	xori	zero,at,1286
 8014084:	080141b8 	rdprs	zero,at,1286
 8014088:	080141d8 	cmpnei	zero,at,1287
 801408c:	080141f8 	rdprs	zero,at,1287
 8014090:	08014218 	cmpnei	zero,at,1288
  {
  case ALT_DMA_TX_STREAM_ON:
    if (!(priv->flags & ALT_AVALON_DMA_RX_STREAM))
 8014094:	e0bffd17 	ldw	r2,-12(fp)
 8014098:	10800517 	ldw	r2,20(r2)
 801409c:	1080100c 	andi	r2,r2,64
 80140a0:	10000f1e 	bne	r2,zero,80140e0 <alt_avalon_dma_ioctl+0xfc>
    {
      IOWR_ALTERA_AVALON_DMA_RADDRESS (priv->base, (alt_u32) arg);
 80140a4:	e0bffd17 	ldw	r2,-12(fp)
 80140a8:	10800017 	ldw	r2,0(r2)
 80140ac:	10800104 	addi	r2,r2,4
 80140b0:	e0ffff17 	ldw	r3,-4(fp)
 80140b4:	10c00035 	stwio	r3,0(r2)
      priv->flags |= ALT_AVALON_DMA_TX_STREAM;
 80140b8:	e0bffd17 	ldw	r2,-12(fp)
 80140bc:	10800517 	ldw	r2,20(r2)
 80140c0:	10c00814 	ori	r3,r2,32
 80140c4:	e0bffd17 	ldw	r2,-12(fp)
 80140c8:	10c00515 	stw	r3,20(r2)
      priv->launch = alt_avalon_dma_launch_rxonly;
 80140cc:	e0fffd17 	ldw	r3,-12(fp)
 80140d0:	00820074 	movhi	r2,2049
 80140d4:	108fd304 	addi	r2,r2,16204
 80140d8:	18800715 	stw	r2,28(r3)
    }
    else
    {
      status = -EIO;
    }
    break;
 80140dc:	00005606 	br	8014238 <alt_avalon_dma_ioctl+0x254>
      priv->flags |= ALT_AVALON_DMA_TX_STREAM;
      priv->launch = alt_avalon_dma_launch_rxonly;
    }
    else
    {
      status = -EIO;
 80140e0:	00bffec4 	movi	r2,-5
 80140e4:	e0bffb15 	stw	r2,-20(fp)
    }
    break;
 80140e8:	00005306 	br	8014238 <alt_avalon_dma_ioctl+0x254>
  case ALT_DMA_TX_STREAM_OFF:
    priv->flags &= ~ALT_AVALON_DMA_TX_STREAM;
 80140ec:	e0bffd17 	ldw	r2,-12(fp)
 80140f0:	10c00517 	ldw	r3,20(r2)
 80140f4:	00bff7c4 	movi	r2,-33
 80140f8:	1886703a 	and	r3,r3,r2
 80140fc:	e0bffd17 	ldw	r2,-12(fp)
 8014100:	10c00515 	stw	r3,20(r2)
    priv->launch = alt_avalon_dma_launch_bidir;
 8014104:	e0fffd17 	ldw	r3,-12(fp)
 8014108:	00820074 	movhi	r2,2049
 801410c:	108f7004 	addi	r2,r2,15808
 8014110:	18800715 	stw	r2,28(r3)
    break;
 8014114:	00004806 	br	8014238 <alt_avalon_dma_ioctl+0x254>
  case ALT_DMA_RX_STREAM_ON:
    if (!(priv->flags & ALT_AVALON_DMA_TX_STREAM))
 8014118:	e0bffd17 	ldw	r2,-12(fp)
 801411c:	10800517 	ldw	r2,20(r2)
 8014120:	1080080c 	andi	r2,r2,32
 8014124:	10000f1e 	bne	r2,zero,8014164 <alt_avalon_dma_ioctl+0x180>
    {
      IOWR_ALTERA_AVALON_DMA_WADDRESS (priv->base, (alt_u32) arg);
 8014128:	e0bffd17 	ldw	r2,-12(fp)
 801412c:	10800017 	ldw	r2,0(r2)
 8014130:	10800204 	addi	r2,r2,8
 8014134:	e0ffff17 	ldw	r3,-4(fp)
 8014138:	10c00035 	stwio	r3,0(r2)
      priv->flags |= ALT_AVALON_DMA_RX_STREAM;
 801413c:	e0bffd17 	ldw	r2,-12(fp)
 8014140:	10800517 	ldw	r2,20(r2)
 8014144:	10c01014 	ori	r3,r2,64
 8014148:	e0bffd17 	ldw	r2,-12(fp)
 801414c:	10c00515 	stw	r3,20(r2)
      priv->launch = alt_avalon_dma_launch_txonly;
 8014150:	e0fffd17 	ldw	r3,-12(fp)
 8014154:	00820074 	movhi	r2,2049
 8014158:	108fad04 	addi	r2,r2,16052
 801415c:	18800715 	stw	r2,28(r3)
    }
    else
    {
      status = -EIO;
    }
    break;
 8014160:	00003506 	br	8014238 <alt_avalon_dma_ioctl+0x254>
      priv->flags |= ALT_AVALON_DMA_RX_STREAM;
      priv->launch = alt_avalon_dma_launch_txonly;
    }
    else
    {
      status = -EIO;
 8014164:	00bffec4 	movi	r2,-5
 8014168:	e0bffb15 	stw	r2,-20(fp)
    }
    break;
 801416c:	00003206 	br	8014238 <alt_avalon_dma_ioctl+0x254>
  case ALT_DMA_RX_STREAM_OFF:
    priv->flags &= ~ALT_AVALON_DMA_RX_STREAM;
 8014170:	e0bffd17 	ldw	r2,-12(fp)
 8014174:	10c00517 	ldw	r3,20(r2)
 8014178:	00bfefc4 	movi	r2,-65
 801417c:	1886703a 	and	r3,r3,r2
 8014180:	e0bffd17 	ldw	r2,-12(fp)
 8014184:	10c00515 	stw	r3,20(r2)
    priv->launch = alt_avalon_dma_launch_bidir;
 8014188:	e0fffd17 	ldw	r3,-12(fp)
 801418c:	00820074 	movhi	r2,2049
 8014190:	108f7004 	addi	r2,r2,15808
 8014194:	18800715 	stw	r2,28(r3)
    break;
 8014198:	00002706 	br	8014238 <alt_avalon_dma_ioctl+0x254>
  case ALT_DMA_SET_MODE_8:
    priv->flags = (priv->flags & ~ALT_AVALON_DMA_MODE_MSK) |
 801419c:	e0bffd17 	ldw	r2,-12(fp)
 80141a0:	10c00517 	ldw	r3,20(r2)
 80141a4:	00bffc04 	movi	r2,-16
 80141a8:	1886703a 	and	r3,r3,r2
 80141ac:	e0bffd17 	ldw	r2,-12(fp)
 80141b0:	10c00515 	stw	r3,20(r2)
      ALT_AVALON_DMA_MODE_8;
    break;
 80141b4:	00002006 	br	8014238 <alt_avalon_dma_ioctl+0x254>
  case ALT_DMA_SET_MODE_16:
    priv->flags = (priv->flags & ~ALT_AVALON_DMA_MODE_MSK) |
 80141b8:	e0bffd17 	ldw	r2,-12(fp)
 80141bc:	10c00517 	ldw	r3,20(r2)
 80141c0:	00bffc04 	movi	r2,-16
 80141c4:	1884703a 	and	r2,r3,r2
 80141c8:	10c00054 	ori	r3,r2,1
 80141cc:	e0bffd17 	ldw	r2,-12(fp)
 80141d0:	10c00515 	stw	r3,20(r2)
      ALT_AVALON_DMA_MODE_16;
    break;
 80141d4:	00001806 	br	8014238 <alt_avalon_dma_ioctl+0x254>
  case ALT_DMA_SET_MODE_32:
    priv->flags = (priv->flags & ~ALT_AVALON_DMA_MODE_MSK) |
 80141d8:	e0bffd17 	ldw	r2,-12(fp)
 80141dc:	10c00517 	ldw	r3,20(r2)
 80141e0:	00bffc04 	movi	r2,-16
 80141e4:	1884703a 	and	r2,r3,r2
 80141e8:	10c000d4 	ori	r3,r2,3
 80141ec:	e0bffd17 	ldw	r2,-12(fp)
 80141f0:	10c00515 	stw	r3,20(r2)
      ALT_AVALON_DMA_MODE_32;
    break;
 80141f4:	00001006 	br	8014238 <alt_avalon_dma_ioctl+0x254>
  case ALT_DMA_SET_MODE_64:
    priv->flags = (priv->flags & ~ALT_AVALON_DMA_MODE_MSK) |
 80141f8:	e0bffd17 	ldw	r2,-12(fp)
 80141fc:	10c00517 	ldw	r3,20(r2)
 8014200:	00bffc04 	movi	r2,-16
 8014204:	1884703a 	and	r2,r3,r2
 8014208:	10c001d4 	ori	r3,r2,7
 801420c:	e0bffd17 	ldw	r2,-12(fp)
 8014210:	10c00515 	stw	r3,20(r2)
      ALT_AVALON_DMA_MODE_64;
    break;
 8014214:	00000806 	br	8014238 <alt_avalon_dma_ioctl+0x254>
  case ALT_DMA_SET_MODE_128:
    priv->flags = (priv->flags & ~ALT_AVALON_DMA_MODE_MSK) |
 8014218:	e0bffd17 	ldw	r2,-12(fp)
 801421c:	10800517 	ldw	r2,20(r2)
 8014220:	10c003d4 	ori	r3,r2,15
 8014224:	e0bffd17 	ldw	r2,-12(fp)
 8014228:	10c00515 	stw	r3,20(r2)
      ALT_AVALON_DMA_MODE_128;
    break;
 801422c:	00000206 	br	8014238 <alt_avalon_dma_ioctl+0x254>
  default:
    status = -ENOTTY;
 8014230:	00bff9c4 	movi	r2,-25
 8014234:	e0bffb15 	stw	r2,-20(fp)
  }

  if (!status)
 8014238:	e0bffb17 	ldw	r2,-20(fp)
 801423c:	1000351e 	bne	r2,zero,8014314 <alt_avalon_dma_ioctl+0x330>
  {
     switch (priv->flags & ALT_AVALON_DMA_MODE_MSK)
 8014240:	e0bffd17 	ldw	r2,-12(fp)
 8014244:	10800517 	ldw	r2,20(r2)
 8014248:	108003cc 	andi	r2,r2,15
 801424c:	10c00060 	cmpeqi	r3,r2,1
 8014250:	1800091e 	bne	r3,zero,8014278 <alt_avalon_dma_ioctl+0x294>
 8014254:	0080052e 	bgeu	zero,r2,801426c <alt_avalon_dma_ioctl+0x288>
 8014258:	10c000e0 	cmpeqi	r3,r2,3
 801425c:	1800091e 	bne	r3,zero,8014284 <alt_avalon_dma_ioctl+0x2a0>
 8014260:	108001e0 	cmpeqi	r2,r2,7
 8014264:	10000a1e 	bne	r2,zero,8014290 <alt_avalon_dma_ioctl+0x2ac>
 8014268:	00000c06 	br	801429c <alt_avalon_dma_ioctl+0x2b8>
     {
     case ALT_AVALON_DMA_MODE_8:
       mode = ALTERA_AVALON_DMA_CONTROL_BYTE_MSK;
 801426c:	00800044 	movi	r2,1
 8014270:	e0bffc15 	stw	r2,-16(fp)
       break;
 8014274:	00000b06 	br	80142a4 <alt_avalon_dma_ioctl+0x2c0>
     case ALT_AVALON_DMA_MODE_16:
       mode = ALTERA_AVALON_DMA_CONTROL_HW_MSK;
 8014278:	00800084 	movi	r2,2
 801427c:	e0bffc15 	stw	r2,-16(fp)
       break;
 8014280:	00000806 	br	80142a4 <alt_avalon_dma_ioctl+0x2c0>
     case ALT_AVALON_DMA_MODE_32:
       mode = ALTERA_AVALON_DMA_CONTROL_WORD_MSK;
 8014284:	00800104 	movi	r2,4
 8014288:	e0bffc15 	stw	r2,-16(fp)
       break;
 801428c:	00000506 	br	80142a4 <alt_avalon_dma_ioctl+0x2c0>
     case ALT_AVALON_DMA_MODE_64:
       mode = ALTERA_AVALON_DMA_CONTROL_DWORD_MSK;
 8014290:	00810004 	movi	r2,1024
 8014294:	e0bffc15 	stw	r2,-16(fp)
       break;
 8014298:	00000206 	br	80142a4 <alt_avalon_dma_ioctl+0x2c0>
     default:
       mode = ALTERA_AVALON_DMA_CONTROL_QWORD_MSK;
 801429c:	00820004 	movi	r2,2048
 80142a0:	e0bffc15 	stw	r2,-16(fp)
     }

    if (priv->flags & ALT_AVALON_DMA_TX_STREAM)
 80142a4:	e0bffd17 	ldw	r2,-12(fp)
 80142a8:	10800517 	ldw	r2,20(r2)
 80142ac:	1080080c 	andi	r2,r2,32
 80142b0:	10000726 	beq	r2,zero,80142d0 <alt_avalon_dma_ioctl+0x2ec>
    {
      IOWR_ALTERA_AVALON_DMA_CONTROL (priv->base,
 80142b4:	e0bffd17 	ldw	r2,-12(fp)
 80142b8:	10800017 	ldw	r2,0(r2)
 80142bc:	10800604 	addi	r2,r2,24
 80142c0:	e0fffc17 	ldw	r3,-16(fp)
 80142c4:	18c07e14 	ori	r3,r3,504
 80142c8:	10c00035 	stwio	r3,0(r2)
 80142cc:	00001106 	br	8014314 <alt_avalon_dma_ioctl+0x330>
        ALTERA_AVALON_DMA_CONTROL_REEN_MSK |
        ALTERA_AVALON_DMA_CONTROL_WEEN_MSK |
        ALTERA_AVALON_DMA_CONTROL_LEEN_MSK |
        ALTERA_AVALON_DMA_CONTROL_RCON_MSK);
    }
    else if (priv->flags & ALT_AVALON_DMA_RX_STREAM)
 80142d0:	e0bffd17 	ldw	r2,-12(fp)
 80142d4:	10800517 	ldw	r2,20(r2)
 80142d8:	1080100c 	andi	r2,r2,64
 80142dc:	10000726 	beq	r2,zero,80142fc <alt_avalon_dma_ioctl+0x318>
    {
      IOWR_ALTERA_AVALON_DMA_CONTROL (priv->base,
 80142e0:	e0bffd17 	ldw	r2,-12(fp)
 80142e4:	10800017 	ldw	r2,0(r2)
 80142e8:	10800604 	addi	r2,r2,24
 80142ec:	e0fffc17 	ldw	r3,-16(fp)
 80142f0:	18c0be14 	ori	r3,r3,760
 80142f4:	10c00035 	stwio	r3,0(r2)
 80142f8:	00000606 	br	8014314 <alt_avalon_dma_ioctl+0x330>
        ALTERA_AVALON_DMA_CONTROL_LEEN_MSK |
        ALTERA_AVALON_DMA_CONTROL_WCON_MSK);
    }
    else
    {
      IOWR_ALTERA_AVALON_DMA_CONTROL (priv->base,
 80142fc:	e0bffd17 	ldw	r2,-12(fp)
 8014300:	10800017 	ldw	r2,0(r2)
 8014304:	10800604 	addi	r2,r2,24
 8014308:	e0fffc17 	ldw	r3,-16(fp)
 801430c:	18c03e14 	ori	r3,r3,248
 8014310:	10c00035 	stwio	r3,0(r2)
        ALTERA_AVALON_DMA_CONTROL_WEEN_MSK      |
        ALTERA_AVALON_DMA_CONTROL_LEEN_MSK);
    }
  }

  return status;
 8014314:	e0bffb17 	ldw	r2,-20(fp)
}
 8014318:	e037883a 	mov	sp,fp
 801431c:	df000017 	ldw	fp,0(sp)
 8014320:	dec00104 	addi	sp,sp,4
 8014324:	f800283a 	ret

08014328 <alt_avalon_dma_tx_ioctl>:
 */

int alt_avalon_dma_tx_ioctl (alt_dma_txchan dma,
           int req,
           void* arg)
{
 8014328:	defffb04 	addi	sp,sp,-20
 801432c:	dfc00415 	stw	ra,16(sp)
 8014330:	df000315 	stw	fp,12(sp)
 8014334:	df000304 	addi	fp,sp,12
 8014338:	e13ffd15 	stw	r4,-12(fp)
 801433c:	e17ffe15 	stw	r5,-8(fp)
 8014340:	e1bfff15 	stw	r6,-4(fp)
  return alt_avalon_dma_ioctl (((alt_avalon_dma_txchan*) dma)->priv,
 8014344:	e0bffd17 	ldw	r2,-12(fp)
 8014348:	10800617 	ldw	r2,24(r2)
 801434c:	1009883a 	mov	r4,r2
 8014350:	e17ffe17 	ldw	r5,-8(fp)
 8014354:	e1bfff17 	ldw	r6,-4(fp)
 8014358:	8013fe40 	call	8013fe4 <alt_avalon_dma_ioctl>
             req,
             arg);
}
 801435c:	e037883a 	mov	sp,fp
 8014360:	dfc00117 	ldw	ra,4(sp)
 8014364:	df000017 	ldw	fp,0(sp)
 8014368:	dec00204 	addi	sp,sp,8
 801436c:	f800283a 	ret

08014370 <alt_avalon_dma_rx_ioctl>:
 */

int alt_avalon_dma_rx_ioctl (alt_dma_rxchan dma,
           int req,
           void* arg)
{
 8014370:	defffb04 	addi	sp,sp,-20
 8014374:	dfc00415 	stw	ra,16(sp)
 8014378:	df000315 	stw	fp,12(sp)
 801437c:	df000304 	addi	fp,sp,12
 8014380:	e13ffd15 	stw	r4,-12(fp)
 8014384:	e17ffe15 	stw	r5,-8(fp)
 8014388:	e1bfff15 	stw	r6,-4(fp)
  return alt_avalon_dma_ioctl (((alt_avalon_dma_rxchan*) dma)->priv,
 801438c:	e0bffd17 	ldw	r2,-12(fp)
 8014390:	10800617 	ldw	r2,24(r2)
 8014394:	1009883a 	mov	r4,r2
 8014398:	e17ffe17 	ldw	r5,-8(fp)
 801439c:	e1bfff17 	ldw	r6,-4(fp)
 80143a0:	8013fe40 	call	8013fe4 <alt_avalon_dma_ioctl>
             req,
             arg);
}
 80143a4:	e037883a 	mov	sp,fp
 80143a8:	dfc00117 	ldw	ra,4(sp)
 80143ac:	df000017 	ldw	fp,0(sp)
 80143b0:	dec00204 	addi	sp,sp,8
 80143b4:	f800283a 	ret

080143b8 <alt_avalon_dma_prepare>:
int alt_avalon_dma_prepare (alt_dma_rxchan   dma,
                            void*            data,
                            alt_u32          len,
                            alt_rxchan_done* done,
                            void*            handle)
{
 80143b8:	defff404 	addi	sp,sp,-48
 80143bc:	dfc00b15 	stw	ra,44(sp)
 80143c0:	df000a15 	stw	fp,40(sp)
 80143c4:	df000a04 	addi	fp,sp,40
 80143c8:	e13ffc15 	stw	r4,-16(fp)
 80143cc:	e17ffd15 	stw	r5,-12(fp)
 80143d0:	e1bffe15 	stw	r6,-8(fp)
 80143d4:	e1ffff15 	stw	r7,-4(fp)
  alt_u32                end;
  alt_u32                next;
  alt_u32                align_mask;
  alt_avalon_dma_priv*   priv;

  priv = ((alt_avalon_dma_rxchan*) dma)->priv;
 80143d8:	e0bffc17 	ldw	r2,-16(fp)
 80143dc:	10800617 	ldw	r2,24(r2)
 80143e0:	e0bff615 	stw	r2,-40(fp)
  /*
   * Ensure that the data is correctly aligned, and that it's not too
   * big for the device.
   */

  align_mask = priv->flags & ALT_AVALON_DMA_MODE_MSK;
 80143e4:	e0bff617 	ldw	r2,-40(fp)
 80143e8:	10800517 	ldw	r2,20(r2)
 80143ec:	108003cc 	andi	r2,r2,15
 80143f0:	e0bff715 	stw	r2,-36(fp)

  if ((((alt_u32) data) & align_mask) || (len & align_mask) ||
 80143f4:	e0fffd17 	ldw	r3,-12(fp)
 80143f8:	e0bff717 	ldw	r2,-36(fp)
 80143fc:	1884703a 	and	r2,r3,r2
 8014400:	1000081e 	bne	r2,zero,8014424 <alt_avalon_dma_prepare+0x6c>
 8014404:	e0fffe17 	ldw	r3,-8(fp)
 8014408:	e0bff717 	ldw	r2,-36(fp)
 801440c:	1884703a 	and	r2,r3,r2
 8014410:	1000041e 	bne	r2,zero,8014424 <alt_avalon_dma_prepare+0x6c>
     (len > priv->max_length))
 8014414:	e0bff617 	ldw	r2,-40(fp)
 8014418:	10c00617 	ldw	r3,24(r2)
   * big for the device.
   */

  align_mask = priv->flags & ALT_AVALON_DMA_MODE_MSK;

  if ((((alt_u32) data) & align_mask) || (len & align_mask) ||
 801441c:	e0bffe17 	ldw	r2,-8(fp)
 8014420:	1880022e 	bgeu	r3,r2,801442c <alt_avalon_dma_prepare+0x74>
     (len > priv->max_length))
  {
    return -EINVAL;
 8014424:	00bffa84 	movi	r2,-22
 8014428:	00002c06 	br	80144dc <alt_avalon_dma_prepare+0x124>
  }

  start = priv->rx_start;
 801442c:	e0bff617 	ldw	r2,-40(fp)
 8014430:	10800317 	ldw	r2,12(r2)
 8014434:	e0bff815 	stw	r2,-32(fp)
  end   = priv->rx_end;
 8014438:	e0bff617 	ldw	r2,-40(fp)
 801443c:	10800417 	ldw	r2,16(r2)
 8014440:	e0bff915 	stw	r2,-28(fp)
  slot  = &priv->rx_buf[end];
 8014444:	e0bff917 	ldw	r2,-28(fp)
 8014448:	1004913a 	slli	r2,r2,4
 801444c:	10801904 	addi	r2,r2,100
 8014450:	e0fff617 	ldw	r3,-40(fp)
 8014454:	1885883a 	add	r2,r3,r2
 8014458:	e0bffa15 	stw	r2,-24(fp)

  next  = (end + 1) & ALT_AVALON_DMA_NSLOTS_MSK;
 801445c:	e0bff917 	ldw	r2,-28(fp)
 8014460:	10800044 	addi	r2,r2,1
 8014464:	108000cc 	andi	r2,r2,3
 8014468:	e0bffb15 	stw	r2,-20(fp)

  if (next == start)
 801446c:	e0fffb17 	ldw	r3,-20(fp)
 8014470:	e0bff817 	ldw	r2,-32(fp)
 8014474:	1880021e 	bne	r3,r2,8014480 <alt_avalon_dma_prepare+0xc8>
  {
    return -ENOSPC;
 8014478:	00bff904 	movi	r2,-28
 801447c:	00001706 	br	80144dc <alt_avalon_dma_prepare+0x124>
  }

  slot->data   = data;
 8014480:	e0bffa17 	ldw	r2,-24(fp)
 8014484:	e0fffd17 	ldw	r3,-12(fp)
 8014488:	10c00015 	stw	r3,0(r2)
  slot->len    = len;
 801448c:	e0bffa17 	ldw	r2,-24(fp)
 8014490:	e0fffe17 	ldw	r3,-8(fp)
 8014494:	10c00115 	stw	r3,4(r2)
  slot->done   = done;
 8014498:	e0bffa17 	ldw	r2,-24(fp)
 801449c:	e0ffff17 	ldw	r3,-4(fp)
 80144a0:	10c00215 	stw	r3,8(r2)
  slot->handle = handle;
 80144a4:	e0bffa17 	ldw	r2,-24(fp)
 80144a8:	e0c00217 	ldw	r3,8(fp)
 80144ac:	10c00315 	stw	r3,12(r2)

  priv->rx_end = next;
 80144b0:	e0bff617 	ldw	r2,-40(fp)
 80144b4:	e0fffb17 	ldw	r3,-20(fp)
 80144b8:	10c00415 	stw	r3,16(r2)

  if (!priv->active)
 80144bc:	e0bff617 	ldw	r2,-40(fp)
 80144c0:	10800817 	ldw	r2,32(r2)
 80144c4:	1000041e 	bne	r2,zero,80144d8 <alt_avalon_dma_prepare+0x120>
  {
    priv->launch (priv);
 80144c8:	e0bff617 	ldw	r2,-40(fp)
 80144cc:	10800717 	ldw	r2,28(r2)
 80144d0:	e13ff617 	ldw	r4,-40(fp)
 80144d4:	103ee83a 	callr	r2
  }

  return 0;
 80144d8:	0005883a 	mov	r2,zero
}
 80144dc:	e037883a 	mov	sp,fp
 80144e0:	dfc00117 	ldw	ra,4(sp)
 80144e4:	df000017 	ldw	fp,0(sp)
 80144e8:	dec00204 	addi	sp,sp,8
 80144ec:	f800283a 	ret

080144f0 <alt_avalon_dma_space>:
 *
 * A negative value indicates that the value could not be determined.
 */

int alt_avalon_dma_space (alt_dma_txchan dma)
{
 80144f0:	defffb04 	addi	sp,sp,-20
 80144f4:	df000415 	stw	fp,16(sp)
 80144f8:	df000404 	addi	fp,sp,16
 80144fc:	e13fff15 	stw	r4,-4(fp)
  alt_avalon_dma_priv* priv;

  alt_u32 start;
  alt_u32 end;

  priv = ((alt_avalon_dma_txchan*) dma)->priv;
 8014500:	e0bfff17 	ldw	r2,-4(fp)
 8014504:	10800617 	ldw	r2,24(r2)
 8014508:	e0bffc15 	stw	r2,-16(fp)

  start = priv->tx_start;
 801450c:	e0bffc17 	ldw	r2,-16(fp)
 8014510:	10800117 	ldw	r2,4(r2)
 8014514:	e0bffd15 	stw	r2,-12(fp)
  end   = priv->tx_end;
 8014518:	e0bffc17 	ldw	r2,-16(fp)
 801451c:	10800217 	ldw	r2,8(r2)
 8014520:	e0bffe15 	stw	r2,-8(fp)

  return (start > end) ? start - end - 1 :
 8014524:	e0bffd17 	ldw	r2,-12(fp)
 8014528:	e0fffe17 	ldw	r3,-8(fp)
 801452c:	1880052e 	bgeu	r3,r2,8014544 <alt_avalon_dma_space+0x54>
 8014530:	e0fffd17 	ldw	r3,-12(fp)
 8014534:	e0bffe17 	ldw	r2,-8(fp)
 8014538:	1885c83a 	sub	r2,r3,r2
 801453c:	10bfffc4 	addi	r2,r2,-1
 8014540:	00000406 	br	8014554 <alt_avalon_dma_space+0x64>
    ALT_AVALON_DMA_NSLOTS + start - end - 1;
 8014544:	e0fffd17 	ldw	r3,-12(fp)
 8014548:	e0bffe17 	ldw	r2,-8(fp)
 801454c:	1885c83a 	sub	r2,r3,r2
 8014550:	108000c4 	addi	r2,r2,3
}
 8014554:	e037883a 	mov	sp,fp
 8014558:	df000017 	ldw	fp,0(sp)
 801455c:	dec00104 	addi	sp,sp,4
 8014560:	f800283a 	ret

08014564 <alt_avalon_dma_send>:
int alt_avalon_dma_send (alt_dma_txchan   dma,
                         const void*      from,
                         alt_u32          len,
                         alt_txchan_done* done,
                         void*            handle)
{
 8014564:	defff404 	addi	sp,sp,-48
 8014568:	dfc00b15 	stw	ra,44(sp)
 801456c:	df000a15 	stw	fp,40(sp)
 8014570:	df000a04 	addi	fp,sp,40
 8014574:	e13ffc15 	stw	r4,-16(fp)
 8014578:	e17ffd15 	stw	r5,-12(fp)
 801457c:	e1bffe15 	stw	r6,-8(fp)
 8014580:	e1ffff15 	stw	r7,-4(fp)
  alt_u32                end;
  alt_u32                align_mask;
  alt_u32                next;
  alt_avalon_dma_priv*   priv;

  priv = ((alt_avalon_dma_txchan*) dma)->priv;
 8014584:	e0bffc17 	ldw	r2,-16(fp)
 8014588:	10800617 	ldw	r2,24(r2)
 801458c:	e0bff615 	stw	r2,-40(fp)
  /*
   * Ensure that the data is correctly aligned, and not too large
   * for the device
   */

  align_mask = priv->flags & ALT_AVALON_DMA_MODE_MSK;
 8014590:	e0bff617 	ldw	r2,-40(fp)
 8014594:	10800517 	ldw	r2,20(r2)
 8014598:	108003cc 	andi	r2,r2,15
 801459c:	e0bff715 	stw	r2,-36(fp)

  if ((((alt_u32) from) & align_mask) ||
 80145a0:	e0fffd17 	ldw	r3,-12(fp)
 80145a4:	e0bff717 	ldw	r2,-36(fp)
 80145a8:	1884703a 	and	r2,r3,r2
 80145ac:	1000081e 	bne	r2,zero,80145d0 <alt_avalon_dma_send+0x6c>
        (len & align_mask)            ||
 80145b0:	e0fffe17 	ldw	r3,-8(fp)
 80145b4:	e0bff717 	ldw	r2,-36(fp)
 80145b8:	1884703a 	and	r2,r3,r2
   * for the device
   */

  align_mask = priv->flags & ALT_AVALON_DMA_MODE_MSK;

  if ((((alt_u32) from) & align_mask) ||
 80145bc:	1000041e 	bne	r2,zero,80145d0 <alt_avalon_dma_send+0x6c>
        (len & align_mask)            ||
        (len > priv->max_length))
 80145c0:	e0bff617 	ldw	r2,-40(fp)
 80145c4:	10c00617 	ldw	r3,24(r2)
   */

  align_mask = priv->flags & ALT_AVALON_DMA_MODE_MSK;

  if ((((alt_u32) from) & align_mask) ||
        (len & align_mask)            ||
 80145c8:	e0bffe17 	ldw	r2,-8(fp)
 80145cc:	1880022e 	bgeu	r3,r2,80145d8 <alt_avalon_dma_send+0x74>
        (len > priv->max_length))
  {
    return -EINVAL;
 80145d0:	00bffa84 	movi	r2,-22
 80145d4:	00002c06 	br	8014688 <alt_avalon_dma_send+0x124>
  }

  start = priv->tx_start;
 80145d8:	e0bff617 	ldw	r2,-40(fp)
 80145dc:	10800117 	ldw	r2,4(r2)
 80145e0:	e0bff815 	stw	r2,-32(fp)
  end   = priv->tx_end;
 80145e4:	e0bff617 	ldw	r2,-40(fp)
 80145e8:	10800217 	ldw	r2,8(r2)
 80145ec:	e0bff915 	stw	r2,-28(fp)
  slot  = &priv->tx_buf[end];
 80145f0:	e0bff917 	ldw	r2,-28(fp)
 80145f4:	1004913a 	slli	r2,r2,4
 80145f8:	10800904 	addi	r2,r2,36
 80145fc:	e0fff617 	ldw	r3,-40(fp)
 8014600:	1885883a 	add	r2,r3,r2
 8014604:	e0bffa15 	stw	r2,-24(fp)
  next  = (end + 1) & ALT_AVALON_DMA_NSLOTS_MSK;
 8014608:	e0bff917 	ldw	r2,-28(fp)
 801460c:	10800044 	addi	r2,r2,1
 8014610:	108000cc 	andi	r2,r2,3
 8014614:	e0bffb15 	stw	r2,-20(fp)

  if (next == start)
 8014618:	e0fffb17 	ldw	r3,-20(fp)
 801461c:	e0bff817 	ldw	r2,-32(fp)
 8014620:	1880021e 	bne	r3,r2,801462c <alt_avalon_dma_send+0xc8>
  {
    return -ENOSPC;
 8014624:	00bff904 	movi	r2,-28
 8014628:	00001706 	br	8014688 <alt_avalon_dma_send+0x124>
  }

  /* Fill in the descriptor */

  slot->from   = from;
 801462c:	e0bffa17 	ldw	r2,-24(fp)
 8014630:	e0fffd17 	ldw	r3,-12(fp)
 8014634:	10c00015 	stw	r3,0(r2)
  slot->len    = len;
 8014638:	e0bffa17 	ldw	r2,-24(fp)
 801463c:	e0fffe17 	ldw	r3,-8(fp)
 8014640:	10c00115 	stw	r3,4(r2)
  slot->done   = done;
 8014644:	e0bffa17 	ldw	r2,-24(fp)
 8014648:	e0ffff17 	ldw	r3,-4(fp)
 801464c:	10c00215 	stw	r3,8(r2)
  slot->handle = handle;
 8014650:	e0bffa17 	ldw	r2,-24(fp)
 8014654:	e0c00217 	ldw	r3,8(fp)
 8014658:	10c00315 	stw	r3,12(r2)

  priv->tx_end = next;
 801465c:	e0bff617 	ldw	r2,-40(fp)
 8014660:	e0fffb17 	ldw	r3,-20(fp)
 8014664:	10c00215 	stw	r3,8(r2)

  if (!priv->active)
 8014668:	e0bff617 	ldw	r2,-40(fp)
 801466c:	10800817 	ldw	r2,32(r2)
 8014670:	1000041e 	bne	r2,zero,8014684 <alt_avalon_dma_send+0x120>
  {
    priv->launch (priv);
 8014674:	e0bff617 	ldw	r2,-40(fp)
 8014678:	10800717 	ldw	r2,28(r2)
 801467c:	e13ff617 	ldw	r4,-40(fp)
 8014680:	103ee83a 	callr	r2
  }

  return 0;
 8014684:	0005883a 	mov	r2,zero
}
 8014688:	e037883a 	mov	sp,fp
 801468c:	dfc00117 	ldw	ra,4(sp)
 8014690:	df000017 	ldw	fp,0(sp)
 8014694:	dec00204 	addi	sp,sp,8
 8014698:	f800283a 	ret

0801469c <alt_avalon_dma_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_dma_irq (void* context)
#else
static void alt_avalon_dma_irq (void* context, alt_u32 id)
#endif
{
 801469c:	defff004 	addi	sp,sp,-64
 80146a0:	dfc00f15 	stw	ra,60(sp)
 80146a4:	df000e15 	stw	fp,56(sp)
 80146a8:	df000e04 	addi	fp,sp,56
 80146ac:	e13ffe15 	stw	r4,-8(fp)
 80146b0:	e17fff15 	stw	r5,-4(fp)
  alt_avalon_dma_priv* priv = (alt_avalon_dma_priv*) context;
 80146b4:	e0bffe17 	ldw	r2,-8(fp)
 80146b8:	e0bff215 	stw	r2,-56(fp)
  alt_u32                rx_start;
  int                    stream_tx;
  int                    stream_rx;
  alt_irq_context        cpu_sr;

  stream_tx = priv->flags & ALT_AVALON_DMA_TX_STREAM;
 80146bc:	e0bff217 	ldw	r2,-56(fp)
 80146c0:	10800517 	ldw	r2,20(r2)
 80146c4:	1080080c 	andi	r2,r2,32
 80146c8:	e0bff315 	stw	r2,-52(fp)
  stream_rx = priv->flags & ALT_AVALON_DMA_RX_STREAM;
 80146cc:	e0bff217 	ldw	r2,-56(fp)
 80146d0:	10800517 	ldw	r2,20(r2)
 80146d4:	1080100c 	andi	r2,r2,64
 80146d8:	e0bff415 	stw	r2,-48(fp)

  tx_start = priv->tx_start;
 80146dc:	e0bff217 	ldw	r2,-56(fp)
 80146e0:	10800117 	ldw	r2,4(r2)
 80146e4:	e0bff515 	stw	r2,-44(fp)
  rx_start = priv->rx_start;
 80146e8:	e0bff217 	ldw	r2,-56(fp)
 80146ec:	10800317 	ldw	r2,12(r2)
 80146f0:	e0bff615 	stw	r2,-40(fp)

  tx_slot = &priv->tx_buf[tx_start];
 80146f4:	e0bff517 	ldw	r2,-44(fp)
 80146f8:	1004913a 	slli	r2,r2,4
 80146fc:	10800904 	addi	r2,r2,36
 8014700:	e0fff217 	ldw	r3,-56(fp)
 8014704:	1885883a 	add	r2,r3,r2
 8014708:	e0bff715 	stw	r2,-36(fp)
  rx_slot = &priv->rx_buf[rx_start];
 801470c:	e0bff617 	ldw	r2,-40(fp)
 8014710:	1004913a 	slli	r2,r2,4
 8014714:	10801904 	addi	r2,r2,100
 8014718:	e0fff217 	ldw	r3,-56(fp)
 801471c:	1885883a 	add	r2,r3,r2
 8014720:	e0bff815 	stw	r2,-32(fp)

  /* Increment the descriptors */

  if (!stream_tx)
 8014724:	e0bff317 	ldw	r2,-52(fp)
 8014728:	1000051e 	bne	r2,zero,8014740 <alt_avalon_dma_irq+0xa4>
  {
    priv->tx_start = (tx_start + 1) & ALT_AVALON_DMA_NSLOTS_MSK;
 801472c:	e0bff517 	ldw	r2,-44(fp)
 8014730:	10800044 	addi	r2,r2,1
 8014734:	10c000cc 	andi	r3,r2,3
 8014738:	e0bff217 	ldw	r2,-56(fp)
 801473c:	10c00115 	stw	r3,4(r2)
  }
  if (!stream_rx)
 8014740:	e0bff417 	ldw	r2,-48(fp)
 8014744:	1000051e 	bne	r2,zero,801475c <alt_avalon_dma_irq+0xc0>
  {
    priv->rx_start = (rx_start + 1) & ALT_AVALON_DMA_NSLOTS_MSK;
 8014748:	e0bff617 	ldw	r2,-40(fp)
 801474c:	10800044 	addi	r2,r2,1
 8014750:	10c000cc 	andi	r3,r2,3
 8014754:	e0bff217 	ldw	r2,-56(fp)
 8014758:	10c00315 	stw	r3,12(r2)
  }

  /* clear the interrupt */

  IOWR_ALTERA_AVALON_DMA_STATUS (priv->base, 0);
 801475c:	e0bff217 	ldw	r2,-56(fp)
 8014760:	10800017 	ldw	r2,0(r2)
 8014764:	0007883a 	mov	r3,zero
 8014768:	10c00035 	stwio	r3,0(r2)
  
  /* Dummy read to ensure IRQ is cleared prior to ISR completion*/
  IORD_ALTERA_AVALON_DMA_STATUS (priv->base);
 801476c:	e0bff217 	ldw	r2,-56(fp)
 8014770:	10800017 	ldw	r2,0(r2)
 8014774:	10800037 	ldwio	r2,0(r2)

  /* launch the next transaction */

  priv->launch (priv);
 8014778:	e0bff217 	ldw	r2,-56(fp)
 801477c:	10800717 	ldw	r2,28(r2)
 8014780:	e13ff217 	ldw	r4,-56(fp)
 8014784:	103ee83a 	callr	r2
   * Other interrupts are explicitly disabled if callbacks
   * are registered because there is no guarantee that they are 
   * preemption-safe. This allows the DMA driver to support 
   * interrupt preemption.
   */
  if (!stream_tx && tx_slot->done)
 8014788:	e0bff317 	ldw	r2,-52(fp)
 801478c:	1000151e 	bne	r2,zero,80147e4 <alt_avalon_dma_irq+0x148>
 8014790:	e0bff717 	ldw	r2,-36(fp)
 8014794:	10800217 	ldw	r2,8(r2)
 8014798:	10001226 	beq	r2,zero,80147e4 <alt_avalon_dma_irq+0x148>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 801479c:	0005303a 	rdctl	r2,status
 80147a0:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 80147a4:	e0fffa17 	ldw	r3,-24(fp)
 80147a8:	00bfff84 	movi	r2,-2
 80147ac:	1884703a 	and	r2,r3,r2
 80147b0:	1001703a 	wrctl	status,r2
  
  return context;
 80147b4:	e0bffa17 	ldw	r2,-24(fp)
  {
    cpu_sr = alt_irq_disable_all();
 80147b8:	e0bff915 	stw	r2,-28(fp)
    tx_slot->done (tx_slot->handle);
 80147bc:	e0bff717 	ldw	r2,-36(fp)
 80147c0:	10800217 	ldw	r2,8(r2)
 80147c4:	e0fff717 	ldw	r3,-36(fp)
 80147c8:	18c00317 	ldw	r3,12(r3)
 80147cc:	1809883a 	mov	r4,r3
 80147d0:	103ee83a 	callr	r2
 80147d4:	e0bff917 	ldw	r2,-28(fp)
 80147d8:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 80147dc:	e0bffb17 	ldw	r2,-20(fp)
 80147e0:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(cpu_sr);
    
  }
  if (!stream_rx && rx_slot->done)
 80147e4:	e0bff417 	ldw	r2,-48(fp)
 80147e8:	1000171e 	bne	r2,zero,8014848 <alt_avalon_dma_irq+0x1ac>
 80147ec:	e0bff817 	ldw	r2,-32(fp)
 80147f0:	10800217 	ldw	r2,8(r2)
 80147f4:	10001426 	beq	r2,zero,8014848 <alt_avalon_dma_irq+0x1ac>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 80147f8:	0005303a 	rdctl	r2,status
 80147fc:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 8014800:	e0fffc17 	ldw	r3,-16(fp)
 8014804:	00bfff84 	movi	r2,-2
 8014808:	1884703a 	and	r2,r3,r2
 801480c:	1001703a 	wrctl	status,r2
  
  return context;
 8014810:	e0bffc17 	ldw	r2,-16(fp)
  {
    cpu_sr = alt_irq_disable_all();
 8014814:	e0bff915 	stw	r2,-28(fp)
    rx_slot->done (rx_slot->handle, rx_slot->data);
 8014818:	e0bff817 	ldw	r2,-32(fp)
 801481c:	10800217 	ldw	r2,8(r2)
 8014820:	e0fff817 	ldw	r3,-32(fp)
 8014824:	19000317 	ldw	r4,12(r3)
 8014828:	e0fff817 	ldw	r3,-32(fp)
 801482c:	18c00017 	ldw	r3,0(r3)
 8014830:	180b883a 	mov	r5,r3
 8014834:	103ee83a 	callr	r2
 8014838:	e0bff917 	ldw	r2,-28(fp)
 801483c:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 8014840:	e0bffd17 	ldw	r2,-12(fp)
 8014844:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(cpu_sr);
  }
}
 8014848:	e037883a 	mov	sp,fp
 801484c:	dfc00117 	ldw	ra,4(sp)
 8014850:	df000017 	ldw	fp,0(sp)
 8014854:	dec00204 	addi	sp,sp,8
 8014858:	f800283a 	ret

0801485c <alt_avalon_dma_init>:
void alt_avalon_dma_init (alt_avalon_dma_txchan* tx,
                          alt_avalon_dma_rxchan* rx,
                          void*                  base,
                          alt_u32                ic_id,
                          alt_u32                irq)
{
 801485c:	defffa04 	addi	sp,sp,-24
 8014860:	dfc00515 	stw	ra,20(sp)
 8014864:	df000415 	stw	fp,16(sp)
 8014868:	df000404 	addi	fp,sp,16
 801486c:	e13ffc15 	stw	r4,-16(fp)
 8014870:	e17ffd15 	stw	r5,-12(fp)
 8014874:	e1bffe15 	stw	r6,-8(fp)
 8014878:	e1ffff15 	stw	r7,-4(fp)

  /* Halt any current transactions (reset the device) */
  IOWR_ALTERA_AVALON_DMA_CONTROL (base, ALTERA_AVALON_DMA_CONTROL_SOFTWARERESET_MSK);
 801487c:	e0bffe17 	ldw	r2,-8(fp)
 8014880:	10800604 	addi	r2,r2,24
 8014884:	00c40004 	movi	r3,4096
 8014888:	10c00035 	stwio	r3,0(r2)
  IOWR_ALTERA_AVALON_DMA_CONTROL (base, ALTERA_AVALON_DMA_CONTROL_SOFTWARERESET_MSK);
 801488c:	e0bffe17 	ldw	r2,-8(fp)
 8014890:	10800604 	addi	r2,r2,24
 8014894:	00c40004 	movi	r3,4096
 8014898:	10c00035 	stwio	r3,0(r2)

  /* Set the default mode of the device (32 bit block reads and writes from/to memory). */
  IOWR_ALTERA_AVALON_DMA_CONTROL (base,
 801489c:	e0bffe17 	ldw	r2,-8(fp)
 80148a0:	10800604 	addi	r2,r2,24
 80148a4:	00c03f04 	movi	r3,252
 80148a8:	10c00035 	stwio	r3,0(r2)
                          ALTERA_AVALON_DMA_CONTROL_REEN_MSK      |
                          ALTERA_AVALON_DMA_CONTROL_WEEN_MSK      |
                          ALTERA_AVALON_DMA_CONTROL_LEEN_MSK);

  /* Clear any pending interrupts and the DONE flag */
  IOWR_ALTERA_AVALON_DMA_STATUS (base, 0);
 80148ac:	0007883a 	mov	r3,zero
 80148b0:	e0bffe17 	ldw	r2,-8(fp)
 80148b4:	10c00035 	stwio	r3,0(r2)
   * system.
   */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  if (alt_ic_isr_register(ic_id, irq, alt_avalon_dma_irq, tx->priv, 0x0) >= 0)
#else
  if (alt_irq_register (irq, tx->priv, alt_avalon_dma_irq) >= 0)
 80148b8:	e0bffc17 	ldw	r2,-16(fp)
 80148bc:	10800617 	ldw	r2,24(r2)
 80148c0:	e1000217 	ldw	r4,8(fp)
 80148c4:	100b883a 	mov	r5,r2
 80148c8:	01820074 	movhi	r6,2049
 80148cc:	3191a704 	addi	r6,r6,18076
 80148d0:	8015d280 	call	8015d28 <alt_irq_register>
 80148d4:	10000616 	blt	r2,zero,80148f0 <alt_avalon_dma_init+0x94>
#endif  
  {
    alt_dma_txchan_reg (&tx->dev);
 80148d8:	e0bffc17 	ldw	r2,-16(fp)
 80148dc:	1009883a 	mov	r4,r2
 80148e0:	8013d500 	call	8013d50 <alt_dma_txchan_reg>
    alt_dma_rxchan_reg (&rx->dev);
 80148e4:	e0bffd17 	ldw	r2,-12(fp)
 80148e8:	1009883a 	mov	r4,r2
 80148ec:	8013d880 	call	8013d88 <alt_dma_rxchan_reg>
  }
}
 80148f0:	e037883a 	mov	sp,fp
 80148f4:	dfc00117 	ldw	ra,4(sp)
 80148f8:	df000017 	ldw	fp,0(sp)
 80148fc:	dec00204 	addi	sp,sp,8
 8014900:	f800283a 	ret

08014904 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
 8014904:	defffa04 	addi	sp,sp,-24
 8014908:	dfc00515 	stw	ra,20(sp)
 801490c:	df000415 	stw	fp,16(sp)
 8014910:	df000404 	addi	fp,sp,16
 8014914:	e13ffd15 	stw	r4,-12(fp)
 8014918:	e17ffe15 	stw	r5,-8(fp)
 801491c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 8014920:	e0bffd17 	ldw	r2,-12(fp)
 8014924:	10800017 	ldw	r2,0(r2)
 8014928:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
 801492c:	e0bffc17 	ldw	r2,-16(fp)
 8014930:	10c00a04 	addi	r3,r2,40
 8014934:	e0bffd17 	ldw	r2,-12(fp)
 8014938:	10800217 	ldw	r2,8(r2)
 801493c:	1809883a 	mov	r4,r3
 8014940:	e17ffe17 	ldw	r5,-8(fp)
 8014944:	e1bfff17 	ldw	r6,-4(fp)
 8014948:	100f883a 	mov	r7,r2
 801494c:	8014f240 	call	8014f24 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
 8014950:	e037883a 	mov	sp,fp
 8014954:	dfc00117 	ldw	ra,4(sp)
 8014958:	df000017 	ldw	fp,0(sp)
 801495c:	dec00204 	addi	sp,sp,8
 8014960:	f800283a 	ret

08014964 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
 8014964:	defffa04 	addi	sp,sp,-24
 8014968:	dfc00515 	stw	ra,20(sp)
 801496c:	df000415 	stw	fp,16(sp)
 8014970:	df000404 	addi	fp,sp,16
 8014974:	e13ffd15 	stw	r4,-12(fp)
 8014978:	e17ffe15 	stw	r5,-8(fp)
 801497c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 8014980:	e0bffd17 	ldw	r2,-12(fp)
 8014984:	10800017 	ldw	r2,0(r2)
 8014988:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
 801498c:	e0bffc17 	ldw	r2,-16(fp)
 8014990:	10c00a04 	addi	r3,r2,40
 8014994:	e0bffd17 	ldw	r2,-12(fp)
 8014998:	10800217 	ldw	r2,8(r2)
 801499c:	1809883a 	mov	r4,r3
 80149a0:	e17ffe17 	ldw	r5,-8(fp)
 80149a4:	e1bfff17 	ldw	r6,-4(fp)
 80149a8:	100f883a 	mov	r7,r2
 80149ac:	80151300 	call	8015130 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
 80149b0:	e037883a 	mov	sp,fp
 80149b4:	dfc00117 	ldw	ra,4(sp)
 80149b8:	df000017 	ldw	fp,0(sp)
 80149bc:	dec00204 	addi	sp,sp,8
 80149c0:	f800283a 	ret

080149c4 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
 80149c4:	defffc04 	addi	sp,sp,-16
 80149c8:	dfc00315 	stw	ra,12(sp)
 80149cc:	df000215 	stw	fp,8(sp)
 80149d0:	df000204 	addi	fp,sp,8
 80149d4:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 80149d8:	e0bfff17 	ldw	r2,-4(fp)
 80149dc:	10800017 	ldw	r2,0(r2)
 80149e0:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
 80149e4:	e0bffe17 	ldw	r2,-8(fp)
 80149e8:	10c00a04 	addi	r3,r2,40
 80149ec:	e0bfff17 	ldw	r2,-4(fp)
 80149f0:	10800217 	ldw	r2,8(r2)
 80149f4:	1809883a 	mov	r4,r3
 80149f8:	100b883a 	mov	r5,r2
 80149fc:	8014dd00 	call	8014dd0 <altera_avalon_jtag_uart_close>
}
 8014a00:	e037883a 	mov	sp,fp
 8014a04:	dfc00117 	ldw	ra,4(sp)
 8014a08:	df000017 	ldw	fp,0(sp)
 8014a0c:	dec00204 	addi	sp,sp,8
 8014a10:	f800283a 	ret

08014a14 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
 8014a14:	defffa04 	addi	sp,sp,-24
 8014a18:	dfc00515 	stw	ra,20(sp)
 8014a1c:	df000415 	stw	fp,16(sp)
 8014a20:	df000404 	addi	fp,sp,16
 8014a24:	e13ffd15 	stw	r4,-12(fp)
 8014a28:	e17ffe15 	stw	r5,-8(fp)
 8014a2c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
 8014a30:	e0bffd17 	ldw	r2,-12(fp)
 8014a34:	10800017 	ldw	r2,0(r2)
 8014a38:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
 8014a3c:	e0bffc17 	ldw	r2,-16(fp)
 8014a40:	10800a04 	addi	r2,r2,40
 8014a44:	1009883a 	mov	r4,r2
 8014a48:	e17ffe17 	ldw	r5,-8(fp)
 8014a4c:	e1bfff17 	ldw	r6,-4(fp)
 8014a50:	8014e380 	call	8014e38 <altera_avalon_jtag_uart_ioctl>
}
 8014a54:	e037883a 	mov	sp,fp
 8014a58:	dfc00117 	ldw	ra,4(sp)
 8014a5c:	df000017 	ldw	fp,0(sp)
 8014a60:	dec00204 	addi	sp,sp,8
 8014a64:	f800283a 	ret

08014a68 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
 8014a68:	defffb04 	addi	sp,sp,-20
 8014a6c:	dfc00415 	stw	ra,16(sp)
 8014a70:	df000315 	stw	fp,12(sp)
 8014a74:	df000304 	addi	fp,sp,12
 8014a78:	e13ffd15 	stw	r4,-12(fp)
 8014a7c:	e17ffe15 	stw	r5,-8(fp)
 8014a80:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 8014a84:	e0bffd17 	ldw	r2,-12(fp)
 8014a88:	00c00044 	movi	r3,1
 8014a8c:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
 8014a90:	e0bffd17 	ldw	r2,-12(fp)
 8014a94:	10800017 	ldw	r2,0(r2)
 8014a98:	10800104 	addi	r2,r2,4
 8014a9c:	1007883a 	mov	r3,r2
 8014aa0:	e0bffd17 	ldw	r2,-12(fp)
 8014aa4:	10800817 	ldw	r2,32(r2)
 8014aa8:	18800035 	stwio	r2,0(r3)
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
                      sp, NULL);
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
 8014aac:	e0bfff17 	ldw	r2,-4(fp)
 8014ab0:	1009883a 	mov	r4,r2
 8014ab4:	e17ffd17 	ldw	r5,-12(fp)
 8014ab8:	01820074 	movhi	r6,2049
 8014abc:	3192c804 	addi	r6,r6,19232
 8014ac0:	8015d280 	call	8015d28 <alt_irq_register>
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
 8014ac4:	e0bffd17 	ldw	r2,-12(fp)
 8014ac8:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
 8014acc:	e0bffd17 	ldw	r2,-12(fp)
 8014ad0:	10c00204 	addi	r3,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
 8014ad4:	008200b4 	movhi	r2,2050
 8014ad8:	10aa6a04 	addi	r2,r2,-22104
 8014adc:	10800017 	ldw	r2,0(r2)
 8014ae0:	1809883a 	mov	r4,r3
 8014ae4:	100b883a 	mov	r5,r2
 8014ae8:	01820074 	movhi	r6,2049
 8014aec:	31934a04 	addi	r6,r6,19752
 8014af0:	e1fffd17 	ldw	r7,-12(fp)
 8014af4:	80156d40 	call	80156d4 <alt_alarm_start>
 8014af8:	1000040e 	bge	r2,zero,8014b0c <altera_avalon_jtag_uart_init+0xa4>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
 8014afc:	e0fffd17 	ldw	r3,-12(fp)
 8014b00:	00a00034 	movhi	r2,32768
 8014b04:	10bfffc4 	addi	r2,r2,-1
 8014b08:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
 8014b0c:	e037883a 	mov	sp,fp
 8014b10:	dfc00117 	ldw	ra,4(sp)
 8014b14:	df000017 	ldw	fp,0(sp)
 8014b18:	dec00204 	addi	sp,sp,8
 8014b1c:	f800283a 	ret

08014b20 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
 8014b20:	defff704 	addi	sp,sp,-36
 8014b24:	df000815 	stw	fp,32(sp)
 8014b28:	df000804 	addi	fp,sp,32
 8014b2c:	e13ffe15 	stw	r4,-8(fp)
 8014b30:	e17fff15 	stw	r5,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
 8014b34:	e0bffe17 	ldw	r2,-8(fp)
 8014b38:	e0bffa15 	stw	r2,-24(fp)
  unsigned int base = sp->base;
 8014b3c:	e0bffa17 	ldw	r2,-24(fp)
 8014b40:	10800017 	ldw	r2,0(r2)
 8014b44:	e0bffb15 	stw	r2,-20(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 8014b48:	e0bffb17 	ldw	r2,-20(fp)
 8014b4c:	10800104 	addi	r2,r2,4
 8014b50:	10800037 	ldwio	r2,0(r2)
 8014b54:	e0bffc15 	stw	r2,-16(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
 8014b58:	e0bffc17 	ldw	r2,-16(fp)
 8014b5c:	1080c00c 	andi	r2,r2,768
 8014b60:	1000011e 	bne	r2,zero,8014b68 <altera_avalon_jtag_uart_irq+0x48>
      break;
 8014b64:	00006c06 	br	8014d18 <altera_avalon_jtag_uart_irq+0x1f8>

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
 8014b68:	e0bffc17 	ldw	r2,-16(fp)
 8014b6c:	1080400c 	andi	r2,r2,256
 8014b70:	10003426 	beq	r2,zero,8014c44 <altera_avalon_jtag_uart_irq+0x124>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
 8014b74:	00800074 	movhi	r2,1
 8014b78:	e0bff815 	stw	r2,-32(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 8014b7c:	e0bffa17 	ldw	r2,-24(fp)
 8014b80:	10800a17 	ldw	r2,40(r2)
 8014b84:	10800044 	addi	r2,r2,1
 8014b88:	1081ffcc 	andi	r2,r2,2047
 8014b8c:	e0bffd15 	stw	r2,-12(fp)
        if (next == sp->rx_out)
 8014b90:	e0bffa17 	ldw	r2,-24(fp)
 8014b94:	10c00b17 	ldw	r3,44(r2)
 8014b98:	e0bffd17 	ldw	r2,-12(fp)
 8014b9c:	1880011e 	bne	r3,r2,8014ba4 <altera_avalon_jtag_uart_irq+0x84>
          break;
 8014ba0:	00001606 	br	8014bfc <altera_avalon_jtag_uart_irq+0xdc>

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
 8014ba4:	e0bffb17 	ldw	r2,-20(fp)
 8014ba8:	10800037 	ldwio	r2,0(r2)
 8014bac:	e0bff815 	stw	r2,-32(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
 8014bb0:	e0bff817 	ldw	r2,-32(fp)
 8014bb4:	10a0000c 	andi	r2,r2,32768
 8014bb8:	1000011e 	bne	r2,zero,8014bc0 <altera_avalon_jtag_uart_irq+0xa0>
          break;
 8014bbc:	00000f06 	br	8014bfc <altera_avalon_jtag_uart_irq+0xdc>

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
 8014bc0:	e0bffa17 	ldw	r2,-24(fp)
 8014bc4:	10800a17 	ldw	r2,40(r2)
 8014bc8:	e0fff817 	ldw	r3,-32(fp)
 8014bcc:	1809883a 	mov	r4,r3
 8014bd0:	e0fffa17 	ldw	r3,-24(fp)
 8014bd4:	1885883a 	add	r2,r3,r2
 8014bd8:	10800e04 	addi	r2,r2,56
 8014bdc:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 8014be0:	e0bffa17 	ldw	r2,-24(fp)
 8014be4:	10800a17 	ldw	r2,40(r2)
 8014be8:	10800044 	addi	r2,r2,1
 8014bec:	10c1ffcc 	andi	r3,r2,2047
 8014bf0:	e0bffa17 	ldw	r2,-24(fp)
 8014bf4:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
 8014bf8:	003fe006 	br	8014b7c <__alt_data_end+0xfc014b7c>

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
 8014bfc:	e0bff817 	ldw	r2,-32(fp)
 8014c00:	10bfffec 	andhi	r2,r2,65535
 8014c04:	10000f26 	beq	r2,zero,8014c44 <altera_avalon_jtag_uart_irq+0x124>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 8014c08:	e0bffa17 	ldw	r2,-24(fp)
 8014c0c:	10c00817 	ldw	r3,32(r2)
 8014c10:	00bfff84 	movi	r2,-2
 8014c14:	1886703a 	and	r3,r3,r2
 8014c18:	e0bffa17 	ldw	r2,-24(fp)
 8014c1c:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
 8014c20:	e0bffb17 	ldw	r2,-20(fp)
 8014c24:	10800104 	addi	r2,r2,4
 8014c28:	1007883a 	mov	r3,r2
 8014c2c:	e0bffa17 	ldw	r2,-24(fp)
 8014c30:	10800817 	ldw	r2,32(r2)
 8014c34:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 8014c38:	e0bffb17 	ldw	r2,-20(fp)
 8014c3c:	10800104 	addi	r2,r2,4
 8014c40:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
 8014c44:	e0bffc17 	ldw	r2,-16(fp)
 8014c48:	1080800c 	andi	r2,r2,512
 8014c4c:	10003126 	beq	r2,zero,8014d14 <altera_avalon_jtag_uart_irq+0x1f4>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
 8014c50:	e0bffc17 	ldw	r2,-16(fp)
 8014c54:	1004d43a 	srli	r2,r2,16
 8014c58:	e0bff915 	stw	r2,-28(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
 8014c5c:	00001406 	br	8014cb0 <altera_avalon_jtag_uart_irq+0x190>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
 8014c60:	e0bffb17 	ldw	r2,-20(fp)
 8014c64:	e0fffa17 	ldw	r3,-24(fp)
 8014c68:	18c00d17 	ldw	r3,52(r3)
 8014c6c:	e13ffa17 	ldw	r4,-24(fp)
 8014c70:	20c7883a 	add	r3,r4,r3
 8014c74:	18c20e04 	addi	r3,r3,2104
 8014c78:	18c00003 	ldbu	r3,0(r3)
 8014c7c:	18c03fcc 	andi	r3,r3,255
 8014c80:	18c0201c 	xori	r3,r3,128
 8014c84:	18ffe004 	addi	r3,r3,-128
 8014c88:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 8014c8c:	e0bffa17 	ldw	r2,-24(fp)
 8014c90:	10800d17 	ldw	r2,52(r2)
 8014c94:	10800044 	addi	r2,r2,1
 8014c98:	10c1ffcc 	andi	r3,r2,2047
 8014c9c:	e0bffa17 	ldw	r2,-24(fp)
 8014ca0:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
 8014ca4:	e0bff917 	ldw	r2,-28(fp)
 8014ca8:	10bfffc4 	addi	r2,r2,-1
 8014cac:	e0bff915 	stw	r2,-28(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
 8014cb0:	e0bff917 	ldw	r2,-28(fp)
 8014cb4:	10000526 	beq	r2,zero,8014ccc <altera_avalon_jtag_uart_irq+0x1ac>
 8014cb8:	e0bffa17 	ldw	r2,-24(fp)
 8014cbc:	10c00d17 	ldw	r3,52(r2)
 8014cc0:	e0bffa17 	ldw	r2,-24(fp)
 8014cc4:	10800c17 	ldw	r2,48(r2)
 8014cc8:	18bfe51e 	bne	r3,r2,8014c60 <__alt_data_end+0xfc014c60>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
 8014ccc:	e0bff917 	ldw	r2,-28(fp)
 8014cd0:	10001026 	beq	r2,zero,8014d14 <altera_avalon_jtag_uart_irq+0x1f4>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 8014cd4:	e0bffa17 	ldw	r2,-24(fp)
 8014cd8:	10c00817 	ldw	r3,32(r2)
 8014cdc:	00bfff44 	movi	r2,-3
 8014ce0:	1886703a 	and	r3,r3,r2
 8014ce4:	e0bffa17 	ldw	r2,-24(fp)
 8014ce8:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 8014cec:	e0bffa17 	ldw	r2,-24(fp)
 8014cf0:	10800017 	ldw	r2,0(r2)
 8014cf4:	10800104 	addi	r2,r2,4
 8014cf8:	1007883a 	mov	r3,r2
 8014cfc:	e0bffa17 	ldw	r2,-24(fp)
 8014d00:	10800817 	ldw	r2,32(r2)
 8014d04:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 8014d08:	e0bffb17 	ldw	r2,-20(fp)
 8014d0c:	10800104 	addi	r2,r2,4
 8014d10:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
 8014d14:	003f8c06 	br	8014b48 <__alt_data_end+0xfc014b48>
}
 8014d18:	e037883a 	mov	sp,fp
 8014d1c:	df000017 	ldw	fp,0(sp)
 8014d20:	dec00104 	addi	sp,sp,4
 8014d24:	f800283a 	ret

08014d28 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
 8014d28:	defff804 	addi	sp,sp,-32
 8014d2c:	df000715 	stw	fp,28(sp)
 8014d30:	df000704 	addi	fp,sp,28
 8014d34:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
 8014d38:	e0bffb17 	ldw	r2,-20(fp)
 8014d3c:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
 8014d40:	e0bff917 	ldw	r2,-28(fp)
 8014d44:	10800017 	ldw	r2,0(r2)
 8014d48:	10800104 	addi	r2,r2,4
 8014d4c:	10800037 	ldwio	r2,0(r2)
 8014d50:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
 8014d54:	e0bffa17 	ldw	r2,-24(fp)
 8014d58:	1081000c 	andi	r2,r2,1024
 8014d5c:	10000b26 	beq	r2,zero,8014d8c <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
 8014d60:	e0bff917 	ldw	r2,-28(fp)
 8014d64:	10800017 	ldw	r2,0(r2)
 8014d68:	10800104 	addi	r2,r2,4
 8014d6c:	1007883a 	mov	r3,r2
 8014d70:	e0bff917 	ldw	r2,-28(fp)
 8014d74:	10800817 	ldw	r2,32(r2)
 8014d78:	10810014 	ori	r2,r2,1024
 8014d7c:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
 8014d80:	e0bff917 	ldw	r2,-28(fp)
 8014d84:	10000915 	stw	zero,36(r2)
 8014d88:	00000a06 	br	8014db4 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
 8014d8c:	e0bff917 	ldw	r2,-28(fp)
 8014d90:	10c00917 	ldw	r3,36(r2)
 8014d94:	00a00034 	movhi	r2,32768
 8014d98:	10bfff04 	addi	r2,r2,-4
 8014d9c:	10c00536 	bltu	r2,r3,8014db4 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
 8014da0:	e0bff917 	ldw	r2,-28(fp)
 8014da4:	10800917 	ldw	r2,36(r2)
 8014da8:	10c00044 	addi	r3,r2,1
 8014dac:	e0bff917 	ldw	r2,-28(fp)
 8014db0:	10c00915 	stw	r3,36(r2)
 8014db4:	008200b4 	movhi	r2,2050
 8014db8:	10aa6a04 	addi	r2,r2,-22104
 8014dbc:	10800017 	ldw	r2,0(r2)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
 8014dc0:	e037883a 	mov	sp,fp
 8014dc4:	df000017 	ldw	fp,0(sp)
 8014dc8:	dec00104 	addi	sp,sp,4
 8014dcc:	f800283a 	ret

08014dd0 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
 8014dd0:	defffd04 	addi	sp,sp,-12
 8014dd4:	df000215 	stw	fp,8(sp)
 8014dd8:	df000204 	addi	fp,sp,8
 8014ddc:	e13ffe15 	stw	r4,-8(fp)
 8014de0:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 8014de4:	00000506 	br	8014dfc <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
 8014de8:	e0bfff17 	ldw	r2,-4(fp)
 8014dec:	1090000c 	andi	r2,r2,16384
 8014df0:	10000226 	beq	r2,zero,8014dfc <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
 8014df4:	00bffd44 	movi	r2,-11
 8014df8:	00000b06 	br	8014e28 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 8014dfc:	e0bffe17 	ldw	r2,-8(fp)
 8014e00:	10c00d17 	ldw	r3,52(r2)
 8014e04:	e0bffe17 	ldw	r2,-8(fp)
 8014e08:	10800c17 	ldw	r2,48(r2)
 8014e0c:	18800526 	beq	r3,r2,8014e24 <altera_avalon_jtag_uart_close+0x54>
 8014e10:	e0bffe17 	ldw	r2,-8(fp)
 8014e14:	10c00917 	ldw	r3,36(r2)
 8014e18:	e0bffe17 	ldw	r2,-8(fp)
 8014e1c:	10800117 	ldw	r2,4(r2)
 8014e20:	18bff136 	bltu	r3,r2,8014de8 <__alt_data_end+0xfc014de8>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
 8014e24:	0005883a 	mov	r2,zero
}
 8014e28:	e037883a 	mov	sp,fp
 8014e2c:	df000017 	ldw	fp,0(sp)
 8014e30:	dec00104 	addi	sp,sp,4
 8014e34:	f800283a 	ret

08014e38 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
 8014e38:	defffa04 	addi	sp,sp,-24
 8014e3c:	df000515 	stw	fp,20(sp)
 8014e40:	df000504 	addi	fp,sp,20
 8014e44:	e13ffd15 	stw	r4,-12(fp)
 8014e48:	e17ffe15 	stw	r5,-8(fp)
 8014e4c:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
 8014e50:	00bff9c4 	movi	r2,-25
 8014e54:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
 8014e58:	e0bffe17 	ldw	r2,-8(fp)
 8014e5c:	10da8060 	cmpeqi	r3,r2,27137
 8014e60:	1800031e 	bne	r3,zero,8014e70 <altera_avalon_jtag_uart_ioctl+0x38>
 8014e64:	109a80a0 	cmpeqi	r2,r2,27138
 8014e68:	1000191e 	bne	r2,zero,8014ed0 <altera_avalon_jtag_uart_ioctl+0x98>
      rc = 0;
    }
    break;

  default:
    break;
 8014e6c:	00002806 	br	8014f10 <altera_avalon_jtag_uart_ioctl+0xd8>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
 8014e70:	e0bffd17 	ldw	r2,-12(fp)
 8014e74:	10c00117 	ldw	r3,4(r2)
 8014e78:	00a00034 	movhi	r2,32768
 8014e7c:	10bfffc4 	addi	r2,r2,-1
 8014e80:	18801226 	beq	r3,r2,8014ecc <altera_avalon_jtag_uart_ioctl+0x94>
    {
      int timeout = *((int *)arg);
 8014e84:	e0bfff17 	ldw	r2,-4(fp)
 8014e88:	10800017 	ldw	r2,0(r2)
 8014e8c:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
 8014e90:	e0bffc17 	ldw	r2,-16(fp)
 8014e94:	10800090 	cmplti	r2,r2,2
 8014e98:	1000061e 	bne	r2,zero,8014eb4 <altera_avalon_jtag_uart_ioctl+0x7c>
 8014e9c:	e0fffc17 	ldw	r3,-16(fp)
 8014ea0:	00a00034 	movhi	r2,32768
 8014ea4:	10bfffc4 	addi	r2,r2,-1
 8014ea8:	18800226 	beq	r3,r2,8014eb4 <altera_avalon_jtag_uart_ioctl+0x7c>
 8014eac:	e0bffc17 	ldw	r2,-16(fp)
 8014eb0:	00000206 	br	8014ebc <altera_avalon_jtag_uart_ioctl+0x84>
 8014eb4:	00a00034 	movhi	r2,32768
 8014eb8:	10bfff84 	addi	r2,r2,-2
 8014ebc:	e0fffd17 	ldw	r3,-12(fp)
 8014ec0:	18800115 	stw	r2,4(r3)
      rc = 0;
 8014ec4:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
 8014ec8:	00001106 	br	8014f10 <altera_avalon_jtag_uart_ioctl+0xd8>
 8014ecc:	00001006 	br	8014f10 <altera_avalon_jtag_uart_ioctl+0xd8>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
 8014ed0:	e0bffd17 	ldw	r2,-12(fp)
 8014ed4:	10c00117 	ldw	r3,4(r2)
 8014ed8:	00a00034 	movhi	r2,32768
 8014edc:	10bfffc4 	addi	r2,r2,-1
 8014ee0:	18800a26 	beq	r3,r2,8014f0c <altera_avalon_jtag_uart_ioctl+0xd4>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
 8014ee4:	e0bffd17 	ldw	r2,-12(fp)
 8014ee8:	10c00917 	ldw	r3,36(r2)
 8014eec:	e0bffd17 	ldw	r2,-12(fp)
 8014ef0:	10800117 	ldw	r2,4(r2)
 8014ef4:	1885803a 	cmpltu	r2,r3,r2
 8014ef8:	10c03fcc 	andi	r3,r2,255
 8014efc:	e0bfff17 	ldw	r2,-4(fp)
 8014f00:	10c00015 	stw	r3,0(r2)
      rc = 0;
 8014f04:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
 8014f08:	00000006 	br	8014f0c <altera_avalon_jtag_uart_ioctl+0xd4>
 8014f0c:	0001883a 	nop

  default:
    break;
  }

  return rc;
 8014f10:	e0bffb17 	ldw	r2,-20(fp)
}
 8014f14:	e037883a 	mov	sp,fp
 8014f18:	df000017 	ldw	fp,0(sp)
 8014f1c:	dec00104 	addi	sp,sp,4
 8014f20:	f800283a 	ret

08014f24 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
 8014f24:	defff304 	addi	sp,sp,-52
 8014f28:	dfc00c15 	stw	ra,48(sp)
 8014f2c:	df000b15 	stw	fp,44(sp)
 8014f30:	df000b04 	addi	fp,sp,44
 8014f34:	e13ffc15 	stw	r4,-16(fp)
 8014f38:	e17ffd15 	stw	r5,-12(fp)
 8014f3c:	e1bffe15 	stw	r6,-8(fp)
 8014f40:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
 8014f44:	e0bffd17 	ldw	r2,-12(fp)
 8014f48:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 8014f4c:	00004906 	br	8015074 <altera_avalon_jtag_uart_read+0x150>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
 8014f50:	e0bffc17 	ldw	r2,-16(fp)
 8014f54:	10800a17 	ldw	r2,40(r2)
 8014f58:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
 8014f5c:	e0bffc17 	ldw	r2,-16(fp)
 8014f60:	10800b17 	ldw	r2,44(r2)
 8014f64:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
 8014f68:	e0fff717 	ldw	r3,-36(fp)
 8014f6c:	e0bff817 	ldw	r2,-32(fp)
 8014f70:	18800536 	bltu	r3,r2,8014f88 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
 8014f74:	e0fff717 	ldw	r3,-36(fp)
 8014f78:	e0bff817 	ldw	r2,-32(fp)
 8014f7c:	1885c83a 	sub	r2,r3,r2
 8014f80:	e0bff615 	stw	r2,-40(fp)
 8014f84:	00000406 	br	8014f98 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
 8014f88:	00c20004 	movi	r3,2048
 8014f8c:	e0bff817 	ldw	r2,-32(fp)
 8014f90:	1885c83a 	sub	r2,r3,r2
 8014f94:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
 8014f98:	e0bff617 	ldw	r2,-40(fp)
 8014f9c:	1000011e 	bne	r2,zero,8014fa4 <altera_avalon_jtag_uart_read+0x80>
        break; /* No more data available */
 8014fa0:	00001d06 	br	8015018 <altera_avalon_jtag_uart_read+0xf4>

      if (n > space)
 8014fa4:	e0fffe17 	ldw	r3,-8(fp)
 8014fa8:	e0bff617 	ldw	r2,-40(fp)
 8014fac:	1880022e 	bgeu	r3,r2,8014fb8 <altera_avalon_jtag_uart_read+0x94>
        n = space;
 8014fb0:	e0bffe17 	ldw	r2,-8(fp)
 8014fb4:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
 8014fb8:	e0bff817 	ldw	r2,-32(fp)
 8014fbc:	10800e04 	addi	r2,r2,56
 8014fc0:	e0fffc17 	ldw	r3,-16(fp)
 8014fc4:	1885883a 	add	r2,r3,r2
 8014fc8:	e13ff517 	ldw	r4,-44(fp)
 8014fcc:	100b883a 	mov	r5,r2
 8014fd0:	e1bff617 	ldw	r6,-40(fp)
 8014fd4:	800aea80 	call	800aea8 <memcpy>
      ptr   += n;
 8014fd8:	e0fff517 	ldw	r3,-44(fp)
 8014fdc:	e0bff617 	ldw	r2,-40(fp)
 8014fe0:	1885883a 	add	r2,r3,r2
 8014fe4:	e0bff515 	stw	r2,-44(fp)
      space -= n;
 8014fe8:	e0fffe17 	ldw	r3,-8(fp)
 8014fec:	e0bff617 	ldw	r2,-40(fp)
 8014ff0:	1885c83a 	sub	r2,r3,r2
 8014ff4:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 8014ff8:	e0fff817 	ldw	r3,-32(fp)
 8014ffc:	e0bff617 	ldw	r2,-40(fp)
 8015000:	1885883a 	add	r2,r3,r2
 8015004:	10c1ffcc 	andi	r3,r2,2047
 8015008:	e0bffc17 	ldw	r2,-16(fp)
 801500c:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
 8015010:	e0bffe17 	ldw	r2,-8(fp)
 8015014:	00bfce16 	blt	zero,r2,8014f50 <__alt_data_end+0xfc014f50>

    /* If we read any data then return it */
    if (ptr != buffer)
 8015018:	e0fff517 	ldw	r3,-44(fp)
 801501c:	e0bffd17 	ldw	r2,-12(fp)
 8015020:	18800126 	beq	r3,r2,8015028 <altera_avalon_jtag_uart_read+0x104>
      break;
 8015024:	00001506 	br	801507c <altera_avalon_jtag_uart_read+0x158>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
 8015028:	e0bfff17 	ldw	r2,-4(fp)
 801502c:	1090000c 	andi	r2,r2,16384
 8015030:	10000126 	beq	r2,zero,8015038 <altera_avalon_jtag_uart_read+0x114>
      break;
 8015034:	00001106 	br	801507c <altera_avalon_jtag_uart_read+0x158>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
 8015038:	0001883a 	nop
 801503c:	e0bffc17 	ldw	r2,-16(fp)
 8015040:	10c00a17 	ldw	r3,40(r2)
 8015044:	e0bff717 	ldw	r2,-36(fp)
 8015048:	1880051e 	bne	r3,r2,8015060 <altera_avalon_jtag_uart_read+0x13c>
 801504c:	e0bffc17 	ldw	r2,-16(fp)
 8015050:	10c00917 	ldw	r3,36(r2)
 8015054:	e0bffc17 	ldw	r2,-16(fp)
 8015058:	10800117 	ldw	r2,4(r2)
 801505c:	18bff736 	bltu	r3,r2,801503c <__alt_data_end+0xfc01503c>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
 8015060:	e0bffc17 	ldw	r2,-16(fp)
 8015064:	10c00a17 	ldw	r3,40(r2)
 8015068:	e0bff717 	ldw	r2,-36(fp)
 801506c:	1880011e 	bne	r3,r2,8015074 <altera_avalon_jtag_uart_read+0x150>
      break;
 8015070:	00000206 	br	801507c <altera_avalon_jtag_uart_read+0x158>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 8015074:	e0bffe17 	ldw	r2,-8(fp)
 8015078:	00bfb516 	blt	zero,r2,8014f50 <__alt_data_end+0xfc014f50>
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
 801507c:	e0fff517 	ldw	r3,-44(fp)
 8015080:	e0bffd17 	ldw	r2,-12(fp)
 8015084:	18801826 	beq	r3,r2,80150e8 <altera_avalon_jtag_uart_read+0x1c4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 8015088:	0005303a 	rdctl	r2,status
 801508c:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 8015090:	e0fffa17 	ldw	r3,-24(fp)
 8015094:	00bfff84 	movi	r2,-2
 8015098:	1884703a 	and	r2,r3,r2
 801509c:	1001703a 	wrctl	status,r2
  
  return context;
 80150a0:	e0bffa17 	ldw	r2,-24(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
 80150a4:	e0bff915 	stw	r2,-28(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 80150a8:	e0bffc17 	ldw	r2,-16(fp)
 80150ac:	10800817 	ldw	r2,32(r2)
 80150b0:	10c00054 	ori	r3,r2,1
 80150b4:	e0bffc17 	ldw	r2,-16(fp)
 80150b8:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 80150bc:	e0bffc17 	ldw	r2,-16(fp)
 80150c0:	10800017 	ldw	r2,0(r2)
 80150c4:	10800104 	addi	r2,r2,4
 80150c8:	1007883a 	mov	r3,r2
 80150cc:	e0bffc17 	ldw	r2,-16(fp)
 80150d0:	10800817 	ldw	r2,32(r2)
 80150d4:	18800035 	stwio	r2,0(r3)
 80150d8:	e0bff917 	ldw	r2,-28(fp)
 80150dc:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 80150e0:	e0bffb17 	ldw	r2,-20(fp)
 80150e4:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
 80150e8:	e0fff517 	ldw	r3,-44(fp)
 80150ec:	e0bffd17 	ldw	r2,-12(fp)
 80150f0:	18800426 	beq	r3,r2,8015104 <altera_avalon_jtag_uart_read+0x1e0>
    return ptr - buffer;
 80150f4:	e0fff517 	ldw	r3,-44(fp)
 80150f8:	e0bffd17 	ldw	r2,-12(fp)
 80150fc:	1885c83a 	sub	r2,r3,r2
 8015100:	00000606 	br	801511c <altera_avalon_jtag_uart_read+0x1f8>
  else if (flags & O_NONBLOCK)
 8015104:	e0bfff17 	ldw	r2,-4(fp)
 8015108:	1090000c 	andi	r2,r2,16384
 801510c:	10000226 	beq	r2,zero,8015118 <altera_avalon_jtag_uart_read+0x1f4>
    return -EWOULDBLOCK;
 8015110:	00bffd44 	movi	r2,-11
 8015114:	00000106 	br	801511c <altera_avalon_jtag_uart_read+0x1f8>
  else
    return -EIO;
 8015118:	00bffec4 	movi	r2,-5
}
 801511c:	e037883a 	mov	sp,fp
 8015120:	dfc00117 	ldw	ra,4(sp)
 8015124:	df000017 	ldw	fp,0(sp)
 8015128:	dec00204 	addi	sp,sp,8
 801512c:	f800283a 	ret

08015130 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
 8015130:	defff304 	addi	sp,sp,-52
 8015134:	dfc00c15 	stw	ra,48(sp)
 8015138:	df000b15 	stw	fp,44(sp)
 801513c:	df000b04 	addi	fp,sp,44
 8015140:	e13ffc15 	stw	r4,-16(fp)
 8015144:	e17ffd15 	stw	r5,-12(fp)
 8015148:	e1bffe15 	stw	r6,-8(fp)
 801514c:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
 8015150:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
 8015154:	e0bffd17 	ldw	r2,-12(fp)
 8015158:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 801515c:	00003806 	br	8015240 <altera_avalon_jtag_uart_write+0x110>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
 8015160:	e0bffc17 	ldw	r2,-16(fp)
 8015164:	10800c17 	ldw	r2,48(r2)
 8015168:	e0bff815 	stw	r2,-32(fp)
      out = sp->tx_out;
 801516c:	e0bffc17 	ldw	r2,-16(fp)
 8015170:	10800d17 	ldw	r2,52(r2)
 8015174:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
 8015178:	e0fff817 	ldw	r3,-32(fp)
 801517c:	e0bff517 	ldw	r2,-44(fp)
 8015180:	1880062e 	bgeu	r3,r2,801519c <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
 8015184:	e0fff517 	ldw	r3,-44(fp)
 8015188:	e0bff817 	ldw	r2,-32(fp)
 801518c:	1885c83a 	sub	r2,r3,r2
 8015190:	10bfffc4 	addi	r2,r2,-1
 8015194:	e0bff615 	stw	r2,-40(fp)
 8015198:	00000b06 	br	80151c8 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
 801519c:	e0bff517 	ldw	r2,-44(fp)
 80151a0:	10000526 	beq	r2,zero,80151b8 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
 80151a4:	00c20004 	movi	r3,2048
 80151a8:	e0bff817 	ldw	r2,-32(fp)
 80151ac:	1885c83a 	sub	r2,r3,r2
 80151b0:	e0bff615 	stw	r2,-40(fp)
 80151b4:	00000406 	br	80151c8 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
 80151b8:	00c1ffc4 	movi	r3,2047
 80151bc:	e0bff817 	ldw	r2,-32(fp)
 80151c0:	1885c83a 	sub	r2,r3,r2
 80151c4:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
 80151c8:	e0bff617 	ldw	r2,-40(fp)
 80151cc:	1000011e 	bne	r2,zero,80151d4 <altera_avalon_jtag_uart_write+0xa4>
        break;
 80151d0:	00001d06 	br	8015248 <altera_avalon_jtag_uart_write+0x118>

      if (n > count)
 80151d4:	e0fffe17 	ldw	r3,-8(fp)
 80151d8:	e0bff617 	ldw	r2,-40(fp)
 80151dc:	1880022e 	bgeu	r3,r2,80151e8 <altera_avalon_jtag_uart_write+0xb8>
        n = count;
 80151e0:	e0bffe17 	ldw	r2,-8(fp)
 80151e4:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
 80151e8:	e0bff817 	ldw	r2,-32(fp)
 80151ec:	10820e04 	addi	r2,r2,2104
 80151f0:	e0fffc17 	ldw	r3,-16(fp)
 80151f4:	1885883a 	add	r2,r3,r2
 80151f8:	1009883a 	mov	r4,r2
 80151fc:	e17ffd17 	ldw	r5,-12(fp)
 8015200:	e1bff617 	ldw	r6,-40(fp)
 8015204:	800aea80 	call	800aea8 <memcpy>
      ptr   += n;
 8015208:	e0fffd17 	ldw	r3,-12(fp)
 801520c:	e0bff617 	ldw	r2,-40(fp)
 8015210:	1885883a 	add	r2,r3,r2
 8015214:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
 8015218:	e0fffe17 	ldw	r3,-8(fp)
 801521c:	e0bff617 	ldw	r2,-40(fp)
 8015220:	1885c83a 	sub	r2,r3,r2
 8015224:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 8015228:	e0fff817 	ldw	r3,-32(fp)
 801522c:	e0bff617 	ldw	r2,-40(fp)
 8015230:	1885883a 	add	r2,r3,r2
 8015234:	10c1ffcc 	andi	r3,r2,2047
 8015238:	e0bffc17 	ldw	r2,-16(fp)
 801523c:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 8015240:	e0bffe17 	ldw	r2,-8(fp)
 8015244:	00bfc616 	blt	zero,r2,8015160 <__alt_data_end+0xfc015160>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 8015248:	0005303a 	rdctl	r2,status
 801524c:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 8015250:	e0fffa17 	ldw	r3,-24(fp)
 8015254:	00bfff84 	movi	r2,-2
 8015258:	1884703a 	and	r2,r3,r2
 801525c:	1001703a 	wrctl	status,r2
  
  return context;
 8015260:	e0bffa17 	ldw	r2,-24(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
 8015264:	e0bff915 	stw	r2,-28(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 8015268:	e0bffc17 	ldw	r2,-16(fp)
 801526c:	10800817 	ldw	r2,32(r2)
 8015270:	10c00094 	ori	r3,r2,2
 8015274:	e0bffc17 	ldw	r2,-16(fp)
 8015278:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 801527c:	e0bffc17 	ldw	r2,-16(fp)
 8015280:	10800017 	ldw	r2,0(r2)
 8015284:	10800104 	addi	r2,r2,4
 8015288:	1007883a 	mov	r3,r2
 801528c:	e0bffc17 	ldw	r2,-16(fp)
 8015290:	10800817 	ldw	r2,32(r2)
 8015294:	18800035 	stwio	r2,0(r3)
 8015298:	e0bff917 	ldw	r2,-28(fp)
 801529c:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 80152a0:	e0bffb17 	ldw	r2,-20(fp)
 80152a4:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
 80152a8:	e0bffe17 	ldw	r2,-8(fp)
 80152ac:	0080120e 	bge	zero,r2,80152f8 <altera_avalon_jtag_uart_write+0x1c8>
    {
      if (flags & O_NONBLOCK)
 80152b0:	e0bfff17 	ldw	r2,-4(fp)
 80152b4:	1090000c 	andi	r2,r2,16384
 80152b8:	10000126 	beq	r2,zero,80152c0 <altera_avalon_jtag_uart_write+0x190>
        break;
 80152bc:	00001006 	br	8015300 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
 80152c0:	0001883a 	nop
 80152c4:	e0bffc17 	ldw	r2,-16(fp)
 80152c8:	10c00d17 	ldw	r3,52(r2)
 80152cc:	e0bff517 	ldw	r2,-44(fp)
 80152d0:	1880051e 	bne	r3,r2,80152e8 <altera_avalon_jtag_uart_write+0x1b8>
 80152d4:	e0bffc17 	ldw	r2,-16(fp)
 80152d8:	10c00917 	ldw	r3,36(r2)
 80152dc:	e0bffc17 	ldw	r2,-16(fp)
 80152e0:	10800117 	ldw	r2,4(r2)
 80152e4:	18bff736 	bltu	r3,r2,80152c4 <__alt_data_end+0xfc0152c4>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
 80152e8:	e0bffc17 	ldw	r2,-16(fp)
 80152ec:	10800917 	ldw	r2,36(r2)
 80152f0:	10000126 	beq	r2,zero,80152f8 <altera_avalon_jtag_uart_write+0x1c8>
         break;
 80152f4:	00000206 	br	8015300 <altera_avalon_jtag_uart_write+0x1d0>
    }
  }
  while (count > 0);
 80152f8:	e0bffe17 	ldw	r2,-8(fp)
 80152fc:	00bf9716 	blt	zero,r2,801515c <__alt_data_end+0xfc01515c>
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
 8015300:	e0fffd17 	ldw	r3,-12(fp)
 8015304:	e0bff717 	ldw	r2,-36(fp)
 8015308:	18800426 	beq	r3,r2,801531c <altera_avalon_jtag_uart_write+0x1ec>
    return ptr - start;
 801530c:	e0fffd17 	ldw	r3,-12(fp)
 8015310:	e0bff717 	ldw	r2,-36(fp)
 8015314:	1885c83a 	sub	r2,r3,r2
 8015318:	00000606 	br	8015334 <altera_avalon_jtag_uart_write+0x204>
  else if (flags & O_NONBLOCK)
 801531c:	e0bfff17 	ldw	r2,-4(fp)
 8015320:	1090000c 	andi	r2,r2,16384
 8015324:	10000226 	beq	r2,zero,8015330 <altera_avalon_jtag_uart_write+0x200>
    return -EWOULDBLOCK;
 8015328:	00bffd44 	movi	r2,-11
 801532c:	00000106 	br	8015334 <altera_avalon_jtag_uart_write+0x204>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
 8015330:	00bffec4 	movi	r2,-5
}
 8015334:	e037883a 	mov	sp,fp
 8015338:	dfc00117 	ldw	ra,4(sp)
 801533c:	df000017 	ldw	fp,0(sp)
 8015340:	dec00204 	addi	sp,sp,8
 8015344:	f800283a 	ret

08015348 <alt_up_rs232_enable_read_interrupt>:
#include "altera_up_avalon_rs232.h"
#include "altera_up_avalon_rs232_regs.h"


void alt_up_rs232_enable_read_interrupt(alt_up_rs232_dev *rs232)
{
 8015348:	defffd04 	addi	sp,sp,-12
 801534c:	df000215 	stw	fp,8(sp)
 8015350:	df000204 	addi	fp,sp,8
 8015354:	e13fff15 	stw	r4,-4(fp)
	alt_u32 ctrl_reg;
	ctrl_reg = IORD_ALT_UP_RS232_CONTROL(rs232->base); 
 8015358:	e0bfff17 	ldw	r2,-4(fp)
 801535c:	10800a17 	ldw	r2,40(r2)
 8015360:	10800104 	addi	r2,r2,4
 8015364:	10800037 	ldwio	r2,0(r2)
 8015368:	e0bffe15 	stw	r2,-8(fp)
	// set RE to 1 while maintaining other bits the same
	ctrl_reg |= ALT_UP_RS232_CONTROL_RE_MSK;
 801536c:	e0bffe17 	ldw	r2,-8(fp)
 8015370:	10800054 	ori	r2,r2,1
 8015374:	e0bffe15 	stw	r2,-8(fp)
	IOWR_ALT_UP_RS232_CONTROL(rs232->base, ctrl_reg);
 8015378:	e0bfff17 	ldw	r2,-4(fp)
 801537c:	10800a17 	ldw	r2,40(r2)
 8015380:	10800104 	addi	r2,r2,4
 8015384:	1007883a 	mov	r3,r2
 8015388:	e0bffe17 	ldw	r2,-8(fp)
 801538c:	18800035 	stwio	r2,0(r3)
}
 8015390:	e037883a 	mov	sp,fp
 8015394:	df000017 	ldw	fp,0(sp)
 8015398:	dec00104 	addi	sp,sp,4
 801539c:	f800283a 	ret

080153a0 <alt_up_rs232_disable_read_interrupt>:

void alt_up_rs232_disable_read_interrupt(alt_up_rs232_dev *rs232)
{
 80153a0:	defffd04 	addi	sp,sp,-12
 80153a4:	df000215 	stw	fp,8(sp)
 80153a8:	df000204 	addi	fp,sp,8
 80153ac:	e13fff15 	stw	r4,-4(fp)
	alt_u32 ctrl_reg;
	ctrl_reg = IORD_ALT_UP_RS232_CONTROL(rs232->base); 
 80153b0:	e0bfff17 	ldw	r2,-4(fp)
 80153b4:	10800a17 	ldw	r2,40(r2)
 80153b8:	10800104 	addi	r2,r2,4
 80153bc:	10800037 	ldwio	r2,0(r2)
 80153c0:	e0bffe15 	stw	r2,-8(fp)
	// set RE to 0 while maintaining other bits the same
	ctrl_reg &= ~ALT_UP_RS232_CONTROL_RE_MSK;
 80153c4:	e0fffe17 	ldw	r3,-8(fp)
 80153c8:	00bfff84 	movi	r2,-2
 80153cc:	1884703a 	and	r2,r3,r2
 80153d0:	e0bffe15 	stw	r2,-8(fp)
	IOWR_ALT_UP_RS232_CONTROL(rs232->base, ctrl_reg);
 80153d4:	e0bfff17 	ldw	r2,-4(fp)
 80153d8:	10800a17 	ldw	r2,40(r2)
 80153dc:	10800104 	addi	r2,r2,4
 80153e0:	1007883a 	mov	r3,r2
 80153e4:	e0bffe17 	ldw	r2,-8(fp)
 80153e8:	18800035 	stwio	r2,0(r3)
}
 80153ec:	e037883a 	mov	sp,fp
 80153f0:	df000017 	ldw	fp,0(sp)
 80153f4:	dec00104 	addi	sp,sp,4
 80153f8:	f800283a 	ret

080153fc <alt_up_rs232_get_used_space_in_read_FIFO>:

unsigned alt_up_rs232_get_used_space_in_read_FIFO(alt_up_rs232_dev *rs232)
{
 80153fc:	defffd04 	addi	sp,sp,-12
 8015400:	df000215 	stw	fp,8(sp)
 8015404:	df000204 	addi	fp,sp,8
 8015408:	e13fff15 	stw	r4,-4(fp)
	alt_u16 ravail = 0;
 801540c:	e03ffe0d 	sth	zero,-8(fp)
	// we can only read the 16 bits for RAVAIL --- a read of DATA will discard the data
//	ravail = IORD_16DIRECT(IOADDR_ALT_UP_RS232_DATA(rs232->base), 2); 
	ravail = IORD_ALT_UP_RS232_RAVAIL(rs232->base); 
 8015410:	e0bfff17 	ldw	r2,-4(fp)
 8015414:	10800a17 	ldw	r2,40(r2)
 8015418:	10800084 	addi	r2,r2,2
 801541c:	1080002b 	ldhuio	r2,0(r2)
 8015420:	10bfffcc 	andi	r2,r2,65535
 8015424:	e0bffe0d 	sth	r2,-8(fp)
//	return ravail;
	return (ravail & ALT_UP_RS232_RAVAIL_MSK) >> ALT_UP_RS232_RAVAIL_OFST;
 8015428:	e0bffe0b 	ldhu	r2,-8(fp)
}
 801542c:	e037883a 	mov	sp,fp
 8015430:	df000017 	ldw	fp,0(sp)
 8015434:	dec00104 	addi	sp,sp,4
 8015438:	f800283a 	ret

0801543c <alt_up_rs232_get_available_space_in_write_FIFO>:

unsigned alt_up_rs232_get_available_space_in_write_FIFO(alt_up_rs232_dev *rs232)
{
 801543c:	defffd04 	addi	sp,sp,-12
 8015440:	df000215 	stw	fp,8(sp)
 8015444:	df000204 	addi	fp,sp,8
 8015448:	e13fff15 	stw	r4,-4(fp)
	alt_u32 ctrl_reg;
	ctrl_reg = IORD_ALT_UP_RS232_CONTROL(rs232->base); 
 801544c:	e0bfff17 	ldw	r2,-4(fp)
 8015450:	10800a17 	ldw	r2,40(r2)
 8015454:	10800104 	addi	r2,r2,4
 8015458:	10800037 	ldwio	r2,0(r2)
 801545c:	e0bffe15 	stw	r2,-8(fp)
	return (ctrl_reg & ALT_UP_RS232_CONTROL_WSPACE_MSK) >> ALT_UP_RS232_CONTROL_WSPACE_OFST;
 8015460:	e0bffe17 	ldw	r2,-8(fp)
 8015464:	1004d43a 	srli	r2,r2,16
}
 8015468:	e037883a 	mov	sp,fp
 801546c:	df000017 	ldw	fp,0(sp)
 8015470:	dec00104 	addi	sp,sp,4
 8015474:	f800283a 	ret

08015478 <alt_up_rs232_check_parity>:

int alt_up_rs232_check_parity(alt_u32 data_reg)
{
 8015478:	defffd04 	addi	sp,sp,-12
 801547c:	df000215 	stw	fp,8(sp)
 8015480:	df000204 	addi	fp,sp,8
 8015484:	e13fff15 	stw	r4,-4(fp)
	unsigned parity_error = (data_reg & ALT_UP_RS232_DATA_PE_MSK) >> ALT_UP_RS232_DATA_PE_OFST;
 8015488:	e0bfff17 	ldw	r2,-4(fp)
 801548c:	1080800c 	andi	r2,r2,512
 8015490:	1004d27a 	srli	r2,r2,9
 8015494:	e0bffe15 	stw	r2,-8(fp)
	return (parity_error ? -1 : 0);
 8015498:	e0bffe17 	ldw	r2,-8(fp)
 801549c:	10000226 	beq	r2,zero,80154a8 <alt_up_rs232_check_parity+0x30>
 80154a0:	00bfffc4 	movi	r2,-1
 80154a4:	00000106 	br	80154ac <alt_up_rs232_check_parity+0x34>
 80154a8:	0005883a 	mov	r2,zero
}
 80154ac:	e037883a 	mov	sp,fp
 80154b0:	df000017 	ldw	fp,0(sp)
 80154b4:	dec00104 	addi	sp,sp,4
 80154b8:	f800283a 	ret

080154bc <alt_up_rs232_write_data>:

int alt_up_rs232_write_data(alt_up_rs232_dev *rs232, alt_u8 data)
{
 80154bc:	defffd04 	addi	sp,sp,-12
 80154c0:	df000215 	stw	fp,8(sp)
 80154c4:	df000204 	addi	fp,sp,8
 80154c8:	e13ffe15 	stw	r4,-8(fp)
 80154cc:	2805883a 	mov	r2,r5
 80154d0:	e0bfff05 	stb	r2,-4(fp)
	/*alt_u32 data_reg;
	data_reg = IORD_ALT_UP_RS232_DATA(rs232->base);*/
    
	// we can write directly without thinking about other bit fields for this
	// case ONLY, because only DATA field of the data register is writable
	IOWR_ALT_UP_RS232_DATA(rs232->base, (data>>ALT_UP_RS232_DATA_DATA_OFST) & ALT_UP_RS232_DATA_DATA_MSK);
 80154d4:	e0bffe17 	ldw	r2,-8(fp)
 80154d8:	10800a17 	ldw	r2,40(r2)
 80154dc:	1007883a 	mov	r3,r2
 80154e0:	e0bfff03 	ldbu	r2,-4(fp)
 80154e4:	18800035 	stwio	r2,0(r3)
	return 0;
 80154e8:	0005883a 	mov	r2,zero
}
 80154ec:	e037883a 	mov	sp,fp
 80154f0:	df000017 	ldw	fp,0(sp)
 80154f4:	dec00104 	addi	sp,sp,4
 80154f8:	f800283a 	ret

080154fc <alt_up_rs232_read_data>:

int alt_up_rs232_read_data(alt_up_rs232_dev *rs232, alt_u8 *data, alt_u8 *parity_error)
{
 80154fc:	defffa04 	addi	sp,sp,-24
 8015500:	dfc00515 	stw	ra,20(sp)
 8015504:	df000415 	stw	fp,16(sp)
 8015508:	df000404 	addi	fp,sp,16
 801550c:	e13ffd15 	stw	r4,-12(fp)
 8015510:	e17ffe15 	stw	r5,-8(fp)
 8015514:	e1bfff15 	stw	r6,-4(fp)
	alt_u32 data_reg;
	data_reg = IORD_ALT_UP_RS232_DATA(rs232->base);
 8015518:	e0bffd17 	ldw	r2,-12(fp)
 801551c:	10800a17 	ldw	r2,40(r2)
 8015520:	10800037 	ldwio	r2,0(r2)
 8015524:	e0bffc15 	stw	r2,-16(fp)
	*data = (data_reg & ALT_UP_RS232_DATA_DATA_MSK) >> ALT_UP_RS232_DATA_DATA_OFST;
 8015528:	e0bffc17 	ldw	r2,-16(fp)
 801552c:	1007883a 	mov	r3,r2
 8015530:	e0bffe17 	ldw	r2,-8(fp)
 8015534:	10c00005 	stb	r3,0(r2)
	*parity_error = alt_up_rs232_check_parity(data_reg);
 8015538:	e13ffc17 	ldw	r4,-16(fp)
 801553c:	80154780 	call	8015478 <alt_up_rs232_check_parity>
 8015540:	1007883a 	mov	r3,r2
 8015544:	e0bfff17 	ldw	r2,-4(fp)
 8015548:	10c00005 	stb	r3,0(r2)
	return (((data_reg & ALT_UP_RS232_DATA_RVALID_MSK) >> ALT_UP_RS232_DATA_RVALID_OFST) - 1);
 801554c:	e0bffc17 	ldw	r2,-16(fp)
 8015550:	10a0000c 	andi	r2,r2,32768
 8015554:	1004d3fa 	srli	r2,r2,15
 8015558:	10bfffc4 	addi	r2,r2,-1
}
 801555c:	e037883a 	mov	sp,fp
 8015560:	dfc00117 	ldw	ra,4(sp)
 8015564:	df000017 	ldw	fp,0(sp)
 8015568:	dec00204 	addi	sp,sp,8
 801556c:	f800283a 	ret

08015570 <alt_up_rs232_read_fd>:

int alt_up_rs232_read_fd (alt_fd* fd, char* ptr, int len)
{
 8015570:	defff804 	addi	sp,sp,-32
 8015574:	dfc00715 	stw	ra,28(sp)
 8015578:	df000615 	stw	fp,24(sp)
 801557c:	df000604 	addi	fp,sp,24
 8015580:	e13ffd15 	stw	r4,-12(fp)
 8015584:	e17ffe15 	stw	r5,-8(fp)
 8015588:	e1bfff15 	stw	r6,-4(fp)
	alt_up_rs232_dev *rs232 = (alt_up_rs232_dev*)fd->dev;
 801558c:	e0bffd17 	ldw	r2,-12(fp)
 8015590:	10800017 	ldw	r2,0(r2)
 8015594:	e0bffb15 	stw	r2,-20(fp)
	int count = 0;
 8015598:	e03ffa15 	stw	zero,-24(fp)
	alt_u8 parity_error;
	while(len--)
 801559c:	00000e06 	br	80155d8 <alt_up_rs232_read_fd+0x68>
	{
		if (alt_up_rs232_read_data(rs232, (alt_u8 *)ptr++, &parity_error)==0)
 80155a0:	e0bffe17 	ldw	r2,-8(fp)
 80155a4:	10c00044 	addi	r3,r2,1
 80155a8:	e0fffe15 	stw	r3,-8(fp)
 80155ac:	e0fffc04 	addi	r3,fp,-16
 80155b0:	e13ffb17 	ldw	r4,-20(fp)
 80155b4:	100b883a 	mov	r5,r2
 80155b8:	180d883a 	mov	r6,r3
 80155bc:	80154fc0 	call	80154fc <alt_up_rs232_read_data>
 80155c0:	1000041e 	bne	r2,zero,80155d4 <alt_up_rs232_read_fd+0x64>
			count++;
 80155c4:	e0bffa17 	ldw	r2,-24(fp)
 80155c8:	10800044 	addi	r2,r2,1
 80155cc:	e0bffa15 	stw	r2,-24(fp)
 80155d0:	00000106 	br	80155d8 <alt_up_rs232_read_fd+0x68>
		else
			break;
 80155d4:	00000406 	br	80155e8 <alt_up_rs232_read_fd+0x78>
int alt_up_rs232_read_fd (alt_fd* fd, char* ptr, int len)
{
	alt_up_rs232_dev *rs232 = (alt_up_rs232_dev*)fd->dev;
	int count = 0;
	alt_u8 parity_error;
	while(len--)
 80155d8:	e0bfff17 	ldw	r2,-4(fp)
 80155dc:	10ffffc4 	addi	r3,r2,-1
 80155e0:	e0ffff15 	stw	r3,-4(fp)
 80155e4:	103fee1e 	bne	r2,zero,80155a0 <__alt_data_end+0xfc0155a0>
		if (alt_up_rs232_read_data(rs232, (alt_u8 *)ptr++, &parity_error)==0)
			count++;
		else
			break;
	}
	return count;
 80155e8:	e0bffa17 	ldw	r2,-24(fp)
}
 80155ec:	e037883a 	mov	sp,fp
 80155f0:	dfc00117 	ldw	ra,4(sp)
 80155f4:	df000017 	ldw	fp,0(sp)
 80155f8:	dec00204 	addi	sp,sp,8
 80155fc:	f800283a 	ret

08015600 <alt_up_rs232_write_fd>:

int alt_up_rs232_write_fd (alt_fd* fd, const char* ptr, int len)
{
 8015600:	defff904 	addi	sp,sp,-28
 8015604:	dfc00615 	stw	ra,24(sp)
 8015608:	df000515 	stw	fp,20(sp)
 801560c:	df000504 	addi	fp,sp,20
 8015610:	e13ffd15 	stw	r4,-12(fp)
 8015614:	e17ffe15 	stw	r5,-8(fp)
 8015618:	e1bfff15 	stw	r6,-4(fp)
	alt_up_rs232_dev *rs232 = (alt_up_rs232_dev*)fd->dev;
 801561c:	e0bffd17 	ldw	r2,-12(fp)
 8015620:	10800017 	ldw	r2,0(r2)
 8015624:	e0bffc15 	stw	r2,-16(fp)
	int count = 0;
 8015628:	e03ffb15 	stw	zero,-20(fp)
	while(len--)
 801562c:	00000f06 	br	801566c <alt_up_rs232_write_fd+0x6c>
	{
		if (alt_up_rs232_write_data(rs232, *ptr)==0)
 8015630:	e0bffe17 	ldw	r2,-8(fp)
 8015634:	10800003 	ldbu	r2,0(r2)
 8015638:	10803fcc 	andi	r2,r2,255
 801563c:	e13ffc17 	ldw	r4,-16(fp)
 8015640:	100b883a 	mov	r5,r2
 8015644:	80154bc0 	call	80154bc <alt_up_rs232_write_data>
 8015648:	1000071e 	bne	r2,zero,8015668 <alt_up_rs232_write_fd+0x68>
		{
			count++;
 801564c:	e0bffb17 	ldw	r2,-20(fp)
 8015650:	10800044 	addi	r2,r2,1
 8015654:	e0bffb15 	stw	r2,-20(fp)
			ptr++;
 8015658:	e0bffe17 	ldw	r2,-8(fp)
 801565c:	10800044 	addi	r2,r2,1
 8015660:	e0bffe15 	stw	r2,-8(fp)
 8015664:	00000106 	br	801566c <alt_up_rs232_write_fd+0x6c>
		}
		else
			break;
 8015668:	00000406 	br	801567c <alt_up_rs232_write_fd+0x7c>

int alt_up_rs232_write_fd (alt_fd* fd, const char* ptr, int len)
{
	alt_up_rs232_dev *rs232 = (alt_up_rs232_dev*)fd->dev;
	int count = 0;
	while(len--)
 801566c:	e0bfff17 	ldw	r2,-4(fp)
 8015670:	10ffffc4 	addi	r3,r2,-1
 8015674:	e0ffff15 	stw	r3,-4(fp)
 8015678:	103fed1e 	bne	r2,zero,8015630 <__alt_data_end+0xfc015630>
			ptr++;
		}
		else
			break;
	}
	return count;
 801567c:	e0bffb17 	ldw	r2,-20(fp)
}
 8015680:	e037883a 	mov	sp,fp
 8015684:	dfc00117 	ldw	ra,4(sp)
 8015688:	df000017 	ldw	fp,0(sp)
 801568c:	dec00204 	addi	sp,sp,8
 8015690:	f800283a 	ret

08015694 <alt_up_rs232_open_dev>:

alt_up_rs232_dev* alt_up_rs232_open_dev(const char* name)
{
 8015694:	defffc04 	addi	sp,sp,-16
 8015698:	dfc00315 	stw	ra,12(sp)
 801569c:	df000215 	stw	fp,8(sp)
 80156a0:	df000204 	addi	fp,sp,8
 80156a4:	e13fff15 	stw	r4,-4(fp)
  // find the device from the device list 
  // (see altera_hal/HAL/inc/priv/alt_file.h 
  // and altera_hal/HAL/src/alt_find_dev.c 
  // for details)
  alt_up_rs232_dev *dev = (alt_up_rs232_dev*)alt_find_dev(name, &alt_dev_list);
 80156a8:	e13fff17 	ldw	r4,-4(fp)
 80156ac:	014200b4 	movhi	r5,2050
 80156b0:	29633304 	addi	r5,r5,-29492
 80156b4:	8015b240 	call	8015b24 <alt_find_dev>
 80156b8:	e0bffe15 	stw	r2,-8(fp)

  return dev;
 80156bc:	e0bffe17 	ldw	r2,-8(fp)
}
 80156c0:	e037883a 	mov	sp,fp
 80156c4:	dfc00117 	ldw	ra,4(sp)
 80156c8:	df000017 	ldw	fp,0(sp)
 80156cc:	dec00204 	addi	sp,sp,8
 80156d0:	f800283a 	ret

080156d4 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
 80156d4:	defff504 	addi	sp,sp,-44
 80156d8:	df000a15 	stw	fp,40(sp)
 80156dc:	df000a04 	addi	fp,sp,40
 80156e0:	e13ffc15 	stw	r4,-16(fp)
 80156e4:	e17ffd15 	stw	r5,-12(fp)
 80156e8:	e1bffe15 	stw	r6,-8(fp)
 80156ec:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
 80156f0:	e03ff615 	stw	zero,-40(fp)
 80156f4:	008200b4 	movhi	r2,2050
 80156f8:	10aa6a04 	addi	r2,r2,-22104
 80156fc:	10800017 	ldw	r2,0(r2)
  
  if (alt_ticks_per_second ())
 8015700:	10003f26 	beq	r2,zero,8015800 <alt_alarm_start+0x12c>
  {
    if (alarm)
 8015704:	e0bffc17 	ldw	r2,-16(fp)
 8015708:	10003b26 	beq	r2,zero,80157f8 <alt_alarm_start+0x124>
    {
      alarm->callback = callback;
 801570c:	e0bffc17 	ldw	r2,-16(fp)
 8015710:	e0fffe17 	ldw	r3,-8(fp)
 8015714:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
 8015718:	e0bffc17 	ldw	r2,-16(fp)
 801571c:	e0ffff17 	ldw	r3,-4(fp)
 8015720:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 8015724:	0005303a 	rdctl	r2,status
 8015728:	e0bff815 	stw	r2,-32(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 801572c:	e0fff817 	ldw	r3,-32(fp)
 8015730:	00bfff84 	movi	r2,-2
 8015734:	1884703a 	and	r2,r3,r2
 8015738:	1001703a 	wrctl	status,r2
  
  return context;
 801573c:	e0bff817 	ldw	r2,-32(fp)
 
      irq_context = alt_irq_disable_all ();
 8015740:	e0bff715 	stw	r2,-36(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
 8015744:	008200b4 	movhi	r2,2050
 8015748:	10aa6b04 	addi	r2,r2,-22100
 801574c:	10800017 	ldw	r2,0(r2)
      
      current_nticks = alt_nticks();
 8015750:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
 8015754:	e0fffd17 	ldw	r3,-12(fp)
 8015758:	e0bff617 	ldw	r2,-40(fp)
 801575c:	1885883a 	add	r2,r3,r2
 8015760:	10c00044 	addi	r3,r2,1
 8015764:	e0bffc17 	ldw	r2,-16(fp)
 8015768:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
 801576c:	e0bffc17 	ldw	r2,-16(fp)
 8015770:	10c00217 	ldw	r3,8(r2)
 8015774:	e0bff617 	ldw	r2,-40(fp)
 8015778:	1880042e 	bgeu	r3,r2,801578c <alt_alarm_start+0xb8>
      {
        alarm->rollover = 1;
 801577c:	e0bffc17 	ldw	r2,-16(fp)
 8015780:	00c00044 	movi	r3,1
 8015784:	10c00405 	stb	r3,16(r2)
 8015788:	00000206 	br	8015794 <alt_alarm_start+0xc0>
      }
      else
      {
        alarm->rollover = 0;
 801578c:	e0bffc17 	ldw	r2,-16(fp)
 8015790:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
 8015794:	e0fffc17 	ldw	r3,-16(fp)
 8015798:	008200b4 	movhi	r2,2050
 801579c:	10a33d04 	addi	r2,r2,-29452
 80157a0:	e0bff915 	stw	r2,-28(fp)
 80157a4:	e0fffa15 	stw	r3,-24(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 80157a8:	e0bffa17 	ldw	r2,-24(fp)
 80157ac:	e0fff917 	ldw	r3,-28(fp)
 80157b0:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 80157b4:	e0bff917 	ldw	r2,-28(fp)
 80157b8:	10c00017 	ldw	r3,0(r2)
 80157bc:	e0bffa17 	ldw	r2,-24(fp)
 80157c0:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 80157c4:	e0bff917 	ldw	r2,-28(fp)
 80157c8:	10800017 	ldw	r2,0(r2)
 80157cc:	e0fffa17 	ldw	r3,-24(fp)
 80157d0:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 80157d4:	e0bff917 	ldw	r2,-28(fp)
 80157d8:	e0fffa17 	ldw	r3,-24(fp)
 80157dc:	10c00015 	stw	r3,0(r2)
 80157e0:	e0bff717 	ldw	r2,-36(fp)
 80157e4:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 80157e8:	e0bffb17 	ldw	r2,-20(fp)
 80157ec:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
 80157f0:	0005883a 	mov	r2,zero
 80157f4:	00000306 	br	8015804 <alt_alarm_start+0x130>
    }
    else
    {
      return -EINVAL;
 80157f8:	00bffa84 	movi	r2,-22
 80157fc:	00000106 	br	8015804 <alt_alarm_start+0x130>
    }
  }
  else
  {
    return -ENOTSUP;
 8015800:	00bfde84 	movi	r2,-134
  }
}
 8015804:	e037883a 	mov	sp,fp
 8015808:	df000017 	ldw	fp,0(sp)
 801580c:	dec00104 	addi	sp,sp,4
 8015810:	f800283a 	ret

08015814 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
 8015814:	deffff04 	addi	sp,sp,-4
 8015818:	df000015 	stw	fp,0(sp)
 801581c:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
 8015820:	e037883a 	mov	sp,fp
 8015824:	df000017 	ldw	fp,0(sp)
 8015828:	dec00104 	addi	sp,sp,4
 801582c:	f800283a 	ret

08015830 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 8015830:	defffe04 	addi	sp,sp,-8
 8015834:	dfc00115 	stw	ra,4(sp)
 8015838:	df000015 	stw	fp,0(sp)
 801583c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 8015840:	008200b4 	movhi	r2,2050
 8015844:	10a33604 	addi	r2,r2,-29480
 8015848:	10800017 	ldw	r2,0(r2)
 801584c:	10000526 	beq	r2,zero,8015864 <alt_get_errno+0x34>
 8015850:	008200b4 	movhi	r2,2050
 8015854:	10a33604 	addi	r2,r2,-29480
 8015858:	10800017 	ldw	r2,0(r2)
 801585c:	103ee83a 	callr	r2
 8015860:	00000206 	br	801586c <alt_get_errno+0x3c>
 8015864:	008200b4 	movhi	r2,2050
 8015868:	10aa6204 	addi	r2,r2,-22136
}
 801586c:	e037883a 	mov	sp,fp
 8015870:	dfc00117 	ldw	ra,4(sp)
 8015874:	df000017 	ldw	fp,0(sp)
 8015878:	dec00204 	addi	sp,sp,8
 801587c:	f800283a 	ret

08015880 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
 8015880:	defffa04 	addi	sp,sp,-24
 8015884:	dfc00515 	stw	ra,20(sp)
 8015888:	df000415 	stw	fp,16(sp)
 801588c:	df000404 	addi	fp,sp,16
 8015890:	e13ffe15 	stw	r4,-8(fp)
 8015894:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
 8015898:	e0bffe17 	ldw	r2,-8(fp)
 801589c:	10000326 	beq	r2,zero,80158ac <alt_dev_llist_insert+0x2c>
 80158a0:	e0bffe17 	ldw	r2,-8(fp)
 80158a4:	10800217 	ldw	r2,8(r2)
 80158a8:	1000061e 	bne	r2,zero,80158c4 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
 80158ac:	80158300 	call	8015830 <alt_get_errno>
 80158b0:	1007883a 	mov	r3,r2
 80158b4:	00800584 	movi	r2,22
 80158b8:	18800015 	stw	r2,0(r3)
    return -EINVAL;
 80158bc:	00bffa84 	movi	r2,-22
 80158c0:	00001306 	br	8015910 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
 80158c4:	e0bffe17 	ldw	r2,-8(fp)
 80158c8:	e0ffff17 	ldw	r3,-4(fp)
 80158cc:	e0fffc15 	stw	r3,-16(fp)
 80158d0:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 80158d4:	e0bffd17 	ldw	r2,-12(fp)
 80158d8:	e0fffc17 	ldw	r3,-16(fp)
 80158dc:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 80158e0:	e0bffc17 	ldw	r2,-16(fp)
 80158e4:	10c00017 	ldw	r3,0(r2)
 80158e8:	e0bffd17 	ldw	r2,-12(fp)
 80158ec:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 80158f0:	e0bffc17 	ldw	r2,-16(fp)
 80158f4:	10800017 	ldw	r2,0(r2)
 80158f8:	e0fffd17 	ldw	r3,-12(fp)
 80158fc:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 8015900:	e0bffc17 	ldw	r2,-16(fp)
 8015904:	e0fffd17 	ldw	r3,-12(fp)
 8015908:	10c00015 	stw	r3,0(r2)

  return 0;  
 801590c:	0005883a 	mov	r2,zero
}
 8015910:	e037883a 	mov	sp,fp
 8015914:	dfc00117 	ldw	ra,4(sp)
 8015918:	df000017 	ldw	fp,0(sp)
 801591c:	dec00204 	addi	sp,sp,8
 8015920:	f800283a 	ret

08015924 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 8015924:	defffe04 	addi	sp,sp,-8
 8015928:	dfc00115 	stw	ra,4(sp)
 801592c:	df000015 	stw	fp,0(sp)
 8015930:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 8015934:	008200b4 	movhi	r2,2050
 8015938:	10a33604 	addi	r2,r2,-29480
 801593c:	10800017 	ldw	r2,0(r2)
 8015940:	10000526 	beq	r2,zero,8015958 <alt_get_errno+0x34>
 8015944:	008200b4 	movhi	r2,2050
 8015948:	10a33604 	addi	r2,r2,-29480
 801594c:	10800017 	ldw	r2,0(r2)
 8015950:	103ee83a 	callr	r2
 8015954:	00000206 	br	8015960 <alt_get_errno+0x3c>
 8015958:	008200b4 	movhi	r2,2050
 801595c:	10aa6204 	addi	r2,r2,-22136
}
 8015960:	e037883a 	mov	sp,fp
 8015964:	dfc00117 	ldw	ra,4(sp)
 8015968:	df000017 	ldw	fp,0(sp)
 801596c:	dec00204 	addi	sp,sp,8
 8015970:	f800283a 	ret

08015974 <alt_dma_rxchan_open>:
 *
 * The return value will be NULL on failure, and non-NULL otherwise. 
 */

alt_dma_rxchan alt_dma_rxchan_open (const char* name)
{
 8015974:	defffc04 	addi	sp,sp,-16
 8015978:	dfc00315 	stw	ra,12(sp)
 801597c:	df000215 	stw	fp,8(sp)
 8015980:	df000204 	addi	fp,sp,8
 8015984:	e13fff15 	stw	r4,-4(fp)
  alt_dma_rxchan dev;

  dev = (alt_dma_rxchan) alt_find_dev (name, &alt_dma_rxchan_list);
 8015988:	e13fff17 	ldw	r4,-4(fp)
 801598c:	d1601c04 	addi	r5,gp,-32656
 8015990:	8015b240 	call	8015b24 <alt_find_dev>
 8015994:	e0bffe15 	stw	r2,-8(fp)

  if (!dev)
 8015998:	e0bffe17 	ldw	r2,-8(fp)
 801599c:	1000041e 	bne	r2,zero,80159b0 <alt_dma_rxchan_open+0x3c>
  {
    ALT_ERRNO = ENODEV;
 80159a0:	80159240 	call	8015924 <alt_get_errno>
 80159a4:	1007883a 	mov	r3,r2
 80159a8:	008004c4 	movi	r2,19
 80159ac:	18800015 	stw	r2,0(r3)
  }

  return dev;
 80159b0:	e0bffe17 	ldw	r2,-8(fp)
}
 80159b4:	e037883a 	mov	sp,fp
 80159b8:	dfc00117 	ldw	ra,4(sp)
 80159bc:	df000017 	ldw	fp,0(sp)
 80159c0:	dec00204 	addi	sp,sp,8
 80159c4:	f800283a 	ret

080159c8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 80159c8:	defffe04 	addi	sp,sp,-8
 80159cc:	dfc00115 	stw	ra,4(sp)
 80159d0:	df000015 	stw	fp,0(sp)
 80159d4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 80159d8:	008200b4 	movhi	r2,2050
 80159dc:	10a33604 	addi	r2,r2,-29480
 80159e0:	10800017 	ldw	r2,0(r2)
 80159e4:	10000526 	beq	r2,zero,80159fc <alt_get_errno+0x34>
 80159e8:	008200b4 	movhi	r2,2050
 80159ec:	10a33604 	addi	r2,r2,-29480
 80159f0:	10800017 	ldw	r2,0(r2)
 80159f4:	103ee83a 	callr	r2
 80159f8:	00000206 	br	8015a04 <alt_get_errno+0x3c>
 80159fc:	008200b4 	movhi	r2,2050
 8015a00:	10aa6204 	addi	r2,r2,-22136
}
 8015a04:	e037883a 	mov	sp,fp
 8015a08:	dfc00117 	ldw	ra,4(sp)
 8015a0c:	df000017 	ldw	fp,0(sp)
 8015a10:	dec00204 	addi	sp,sp,8
 8015a14:	f800283a 	ret

08015a18 <alt_dma_txchan_open>:
 *
 * The return value will be NULL on failure, and non-NULL otherwise. 
 */

alt_dma_txchan alt_dma_txchan_open (const char* name)
{
 8015a18:	defffc04 	addi	sp,sp,-16
 8015a1c:	dfc00315 	stw	ra,12(sp)
 8015a20:	df000215 	stw	fp,8(sp)
 8015a24:	df000204 	addi	fp,sp,8
 8015a28:	e13fff15 	stw	r4,-4(fp)
  alt_dma_txchan dev;

  dev = (alt_dma_txchan) alt_find_dev (name, &alt_dma_txchan_list);
 8015a2c:	e13fff17 	ldw	r4,-4(fp)
 8015a30:	d1601e04 	addi	r5,gp,-32648
 8015a34:	8015b240 	call	8015b24 <alt_find_dev>
 8015a38:	e0bffe15 	stw	r2,-8(fp)

  if (!dev)
 8015a3c:	e0bffe17 	ldw	r2,-8(fp)
 8015a40:	1000041e 	bne	r2,zero,8015a54 <alt_dma_txchan_open+0x3c>
  {
    ALT_ERRNO = ENODEV;
 8015a44:	80159c80 	call	80159c8 <alt_get_errno>
 8015a48:	1007883a 	mov	r3,r2
 8015a4c:	008004c4 	movi	r2,19
 8015a50:	18800015 	stw	r2,0(r3)
  }

  return dev;
 8015a54:	e0bffe17 	ldw	r2,-8(fp)
}
 8015a58:	e037883a 	mov	sp,fp
 8015a5c:	dfc00117 	ldw	ra,4(sp)
 8015a60:	df000017 	ldw	fp,0(sp)
 8015a64:	dec00204 	addi	sp,sp,8
 8015a68:	f800283a 	ret

08015a6c <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
 8015a6c:	defffd04 	addi	sp,sp,-12
 8015a70:	dfc00215 	stw	ra,8(sp)
 8015a74:	df000115 	stw	fp,4(sp)
 8015a78:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 8015a7c:	00820074 	movhi	r2,2049
 8015a80:	109a5a04 	addi	r2,r2,26984
 8015a84:	e0bfff15 	stw	r2,-4(fp)
 8015a88:	00000606 	br	8015aa4 <_do_ctors+0x38>
        (*ctor) (); 
 8015a8c:	e0bfff17 	ldw	r2,-4(fp)
 8015a90:	10800017 	ldw	r2,0(r2)
 8015a94:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 8015a98:	e0bfff17 	ldw	r2,-4(fp)
 8015a9c:	10bfff04 	addi	r2,r2,-4
 8015aa0:	e0bfff15 	stw	r2,-4(fp)
 8015aa4:	e0ffff17 	ldw	r3,-4(fp)
 8015aa8:	00820074 	movhi	r2,2049
 8015aac:	109a5b04 	addi	r2,r2,26988
 8015ab0:	18bff62e 	bgeu	r3,r2,8015a8c <__alt_data_end+0xfc015a8c>
        (*ctor) (); 
}
 8015ab4:	e037883a 	mov	sp,fp
 8015ab8:	dfc00117 	ldw	ra,4(sp)
 8015abc:	df000017 	ldw	fp,0(sp)
 8015ac0:	dec00204 	addi	sp,sp,8
 8015ac4:	f800283a 	ret

08015ac8 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
 8015ac8:	defffd04 	addi	sp,sp,-12
 8015acc:	dfc00215 	stw	ra,8(sp)
 8015ad0:	df000115 	stw	fp,4(sp)
 8015ad4:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 8015ad8:	00820074 	movhi	r2,2049
 8015adc:	109a5a04 	addi	r2,r2,26984
 8015ae0:	e0bfff15 	stw	r2,-4(fp)
 8015ae4:	00000606 	br	8015b00 <_do_dtors+0x38>
        (*dtor) (); 
 8015ae8:	e0bfff17 	ldw	r2,-4(fp)
 8015aec:	10800017 	ldw	r2,0(r2)
 8015af0:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 8015af4:	e0bfff17 	ldw	r2,-4(fp)
 8015af8:	10bfff04 	addi	r2,r2,-4
 8015afc:	e0bfff15 	stw	r2,-4(fp)
 8015b00:	e0ffff17 	ldw	r3,-4(fp)
 8015b04:	00820074 	movhi	r2,2049
 8015b08:	109a5b04 	addi	r2,r2,26988
 8015b0c:	18bff62e 	bgeu	r3,r2,8015ae8 <__alt_data_end+0xfc015ae8>
        (*dtor) (); 
}
 8015b10:	e037883a 	mov	sp,fp
 8015b14:	dfc00117 	ldw	ra,4(sp)
 8015b18:	df000017 	ldw	fp,0(sp)
 8015b1c:	dec00204 	addi	sp,sp,8
 8015b20:	f800283a 	ret

08015b24 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
 8015b24:	defffa04 	addi	sp,sp,-24
 8015b28:	dfc00515 	stw	ra,20(sp)
 8015b2c:	df000415 	stw	fp,16(sp)
 8015b30:	df000404 	addi	fp,sp,16
 8015b34:	e13ffe15 	stw	r4,-8(fp)
 8015b38:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
 8015b3c:	e0bfff17 	ldw	r2,-4(fp)
 8015b40:	10800017 	ldw	r2,0(r2)
 8015b44:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
 8015b48:	e13ffe17 	ldw	r4,-8(fp)
 8015b4c:	8003e4c0 	call	8003e4c <strlen>
 8015b50:	10800044 	addi	r2,r2,1
 8015b54:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 8015b58:	00000d06 	br	8015b90 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
 8015b5c:	e0bffc17 	ldw	r2,-16(fp)
 8015b60:	10c00217 	ldw	r3,8(r2)
 8015b64:	e0bffd17 	ldw	r2,-12(fp)
 8015b68:	1809883a 	mov	r4,r3
 8015b6c:	e17ffe17 	ldw	r5,-8(fp)
 8015b70:	100d883a 	mov	r6,r2
 8015b74:	80166080 	call	8016608 <memcmp>
 8015b78:	1000021e 	bne	r2,zero,8015b84 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
 8015b7c:	e0bffc17 	ldw	r2,-16(fp)
 8015b80:	00000706 	br	8015ba0 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
 8015b84:	e0bffc17 	ldw	r2,-16(fp)
 8015b88:	10800017 	ldw	r2,0(r2)
 8015b8c:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 8015b90:	e0fffc17 	ldw	r3,-16(fp)
 8015b94:	e0bfff17 	ldw	r2,-4(fp)
 8015b98:	18bff01e 	bne	r3,r2,8015b5c <__alt_data_end+0xfc015b5c>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
 8015b9c:	0005883a 	mov	r2,zero
}
 8015ba0:	e037883a 	mov	sp,fp
 8015ba4:	dfc00117 	ldw	ra,4(sp)
 8015ba8:	df000017 	ldw	fp,0(sp)
 8015bac:	dec00204 	addi	sp,sp,8
 8015bb0:	f800283a 	ret

08015bb4 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
 8015bb4:	deffff04 	addi	sp,sp,-4
 8015bb8:	df000015 	stw	fp,0(sp)
 8015bbc:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
 8015bc0:	e037883a 	mov	sp,fp
 8015bc4:	df000017 	ldw	fp,0(sp)
 8015bc8:	dec00104 	addi	sp,sp,4
 8015bcc:	f800283a 	ret

08015bd0 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
 8015bd0:	defff804 	addi	sp,sp,-32
 8015bd4:	dfc00715 	stw	ra,28(sp)
 8015bd8:	df000615 	stw	fp,24(sp)
 8015bdc:	dc000515 	stw	r16,20(sp)
 8015be0:	df000604 	addi	fp,sp,24
 8015be4:	e13ffb15 	stw	r4,-20(fp)
 8015be8:	e17ffc15 	stw	r5,-16(fp)
 8015bec:	e1bffd15 	stw	r6,-12(fp)
 8015bf0:	e1fffe15 	stw	r7,-8(fp)
  int old;

  old = open (name, flags, mode);
 8015bf4:	e13ffc17 	ldw	r4,-16(fp)
 8015bf8:	e17ffd17 	ldw	r5,-12(fp)
 8015bfc:	e1bffe17 	ldw	r6,-8(fp)
 8015c00:	801601c0 	call	801601c <open>
 8015c04:	e0bffa15 	stw	r2,-24(fp)

  if (old >= 0)
 8015c08:	e0bffa17 	ldw	r2,-24(fp)
 8015c0c:	10002216 	blt	r2,zero,8015c98 <alt_open_fd+0xc8>
  {
    fd->dev      = alt_fd_list[old].dev;
 8015c10:	04020074 	movhi	r16,2049
 8015c14:	841e5704 	addi	r16,r16,31068
 8015c18:	e0bffa17 	ldw	r2,-24(fp)
 8015c1c:	1009883a 	mov	r4,r2
 8015c20:	01400304 	movi	r5,12
 8015c24:	80027f80 	call	80027f8 <__mulsi3>
 8015c28:	8085883a 	add	r2,r16,r2
 8015c2c:	10c00017 	ldw	r3,0(r2)
 8015c30:	e0bffb17 	ldw	r2,-20(fp)
 8015c34:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
 8015c38:	04020074 	movhi	r16,2049
 8015c3c:	841e5704 	addi	r16,r16,31068
 8015c40:	e0bffa17 	ldw	r2,-24(fp)
 8015c44:	1009883a 	mov	r4,r2
 8015c48:	01400304 	movi	r5,12
 8015c4c:	80027f80 	call	80027f8 <__mulsi3>
 8015c50:	8085883a 	add	r2,r16,r2
 8015c54:	10800104 	addi	r2,r2,4
 8015c58:	10c00017 	ldw	r3,0(r2)
 8015c5c:	e0bffb17 	ldw	r2,-20(fp)
 8015c60:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
 8015c64:	04020074 	movhi	r16,2049
 8015c68:	841e5704 	addi	r16,r16,31068
 8015c6c:	e0bffa17 	ldw	r2,-24(fp)
 8015c70:	1009883a 	mov	r4,r2
 8015c74:	01400304 	movi	r5,12
 8015c78:	80027f80 	call	80027f8 <__mulsi3>
 8015c7c:	8085883a 	add	r2,r16,r2
 8015c80:	10800204 	addi	r2,r2,8
 8015c84:	10c00017 	ldw	r3,0(r2)
 8015c88:	e0bffb17 	ldw	r2,-20(fp)
 8015c8c:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
 8015c90:	e13ffa17 	ldw	r4,-24(fp)
 8015c94:	80139e00 	call	80139e0 <alt_release_fd>
  }
} 
 8015c98:	e6ffff04 	addi	sp,fp,-4
 8015c9c:	dfc00217 	ldw	ra,8(sp)
 8015ca0:	df000117 	ldw	fp,4(sp)
 8015ca4:	dc000017 	ldw	r16,0(sp)
 8015ca8:	dec00304 	addi	sp,sp,12
 8015cac:	f800283a 	ret

08015cb0 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
 8015cb0:	defffb04 	addi	sp,sp,-20
 8015cb4:	dfc00415 	stw	ra,16(sp)
 8015cb8:	df000315 	stw	fp,12(sp)
 8015cbc:	df000304 	addi	fp,sp,12
 8015cc0:	e13ffd15 	stw	r4,-12(fp)
 8015cc4:	e17ffe15 	stw	r5,-8(fp)
 8015cc8:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
 8015ccc:	01020074 	movhi	r4,2049
 8015cd0:	211e5a04 	addi	r4,r4,31080
 8015cd4:	e17ffd17 	ldw	r5,-12(fp)
 8015cd8:	01800044 	movi	r6,1
 8015cdc:	01c07fc4 	movi	r7,511
 8015ce0:	8015bd00 	call	8015bd0 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
 8015ce4:	01020074 	movhi	r4,2049
 8015ce8:	211e5704 	addi	r4,r4,31068
 8015cec:	e17ffe17 	ldw	r5,-8(fp)
 8015cf0:	000d883a 	mov	r6,zero
 8015cf4:	01c07fc4 	movi	r7,511
 8015cf8:	8015bd00 	call	8015bd0 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
 8015cfc:	01020074 	movhi	r4,2049
 8015d00:	211e5d04 	addi	r4,r4,31092
 8015d04:	e17fff17 	ldw	r5,-4(fp)
 8015d08:	01800044 	movi	r6,1
 8015d0c:	01c07fc4 	movi	r7,511
 8015d10:	8015bd00 	call	8015bd0 <alt_open_fd>
}  
 8015d14:	e037883a 	mov	sp,fp
 8015d18:	dfc00117 	ldw	ra,4(sp)
 8015d1c:	df000017 	ldw	fp,0(sp)
 8015d20:	dec00204 	addi	sp,sp,8
 8015d24:	f800283a 	ret

08015d28 <alt_irq_register>:
 */
 
int alt_irq_register (alt_u32 id, 
                      void* context, 
                      alt_isr_func handler)
{
 8015d28:	defff004 	addi	sp,sp,-64
 8015d2c:	df000f15 	stw	fp,60(sp)
 8015d30:	df000f04 	addi	fp,sp,60
 8015d34:	e13ffd15 	stw	r4,-12(fp)
 8015d38:	e17ffe15 	stw	r5,-8(fp)
 8015d3c:	e1bfff15 	stw	r6,-4(fp)
  int rc = -EINVAL;  
 8015d40:	00bffa84 	movi	r2,-22
 8015d44:	e0bff115 	stw	r2,-60(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
 8015d48:	e0bffd17 	ldw	r2,-12(fp)
 8015d4c:	10800828 	cmpgeui	r2,r2,32
 8015d50:	10005c1e 	bne	r2,zero,8015ec4 <alt_irq_register+0x19c>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 8015d54:	0005303a 	rdctl	r2,status
 8015d58:	e0bff315 	stw	r2,-52(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 8015d5c:	e0fff317 	ldw	r3,-52(fp)
 8015d60:	00bfff84 	movi	r2,-2
 8015d64:	1884703a 	and	r2,r3,r2
 8015d68:	1001703a 	wrctl	status,r2
  
  return context;
 8015d6c:	e0bff317 	ldw	r2,-52(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all ();
 8015d70:	e0bff215 	stw	r2,-56(fp)

    alt_irq[id].handler = handler;
 8015d74:	008200b4 	movhi	r2,2050
 8015d78:	10acb704 	addi	r2,r2,-19748
 8015d7c:	e0fffd17 	ldw	r3,-12(fp)
 8015d80:	180690fa 	slli	r3,r3,3
 8015d84:	10c5883a 	add	r2,r2,r3
 8015d88:	e0ffff17 	ldw	r3,-4(fp)
 8015d8c:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = context;
 8015d90:	008200b4 	movhi	r2,2050
 8015d94:	10acb704 	addi	r2,r2,-19748
 8015d98:	e0fffd17 	ldw	r3,-12(fp)
 8015d9c:	180690fa 	slli	r3,r3,3
 8015da0:	10c5883a 	add	r2,r2,r3
 8015da4:	10800104 	addi	r2,r2,4
 8015da8:	e0fffe17 	ldw	r3,-8(fp)
 8015dac:	10c00015 	stw	r3,0(r2)

    rc = (handler) ? alt_irq_enable (id): alt_irq_disable (id);
 8015db0:	e0bfff17 	ldw	r2,-4(fp)
 8015db4:	10001f26 	beq	r2,zero,8015e34 <alt_irq_register+0x10c>
 8015db8:	e0bffd17 	ldw	r2,-12(fp)
 8015dbc:	e0bff415 	stw	r2,-48(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 8015dc0:	0005303a 	rdctl	r2,status
 8015dc4:	e0bff515 	stw	r2,-44(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 8015dc8:	e0fff517 	ldw	r3,-44(fp)
 8015dcc:	00bfff84 	movi	r2,-2
 8015dd0:	1884703a 	and	r2,r3,r2
 8015dd4:	1001703a 	wrctl	status,r2
  
  return context;
 8015dd8:	e0bff517 	ldw	r2,-44(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 8015ddc:	e0bff615 	stw	r2,-40(fp)

  alt_irq_active |= (1 << id);
 8015de0:	e0bff417 	ldw	r2,-48(fp)
 8015de4:	00c00044 	movi	r3,1
 8015de8:	1884983a 	sll	r2,r3,r2
 8015dec:	1007883a 	mov	r3,r2
 8015df0:	008200b4 	movhi	r2,2050
 8015df4:	10aa6904 	addi	r2,r2,-22108
 8015df8:	10800017 	ldw	r2,0(r2)
 8015dfc:	1886b03a 	or	r3,r3,r2
 8015e00:	008200b4 	movhi	r2,2050
 8015e04:	10aa6904 	addi	r2,r2,-22108
 8015e08:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 8015e0c:	008200b4 	movhi	r2,2050
 8015e10:	10aa6904 	addi	r2,r2,-22108
 8015e14:	10800017 	ldw	r2,0(r2)
 8015e18:	100170fa 	wrctl	ienable,r2
 8015e1c:	e0bff617 	ldw	r2,-40(fp)
 8015e20:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 8015e24:	e0bff717 	ldw	r2,-36(fp)
 8015e28:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 8015e2c:	0005883a 	mov	r2,zero
 8015e30:	00001f06 	br	8015eb0 <alt_irq_register+0x188>
 8015e34:	e0bffd17 	ldw	r2,-12(fp)
 8015e38:	e0bff815 	stw	r2,-32(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 8015e3c:	0005303a 	rdctl	r2,status
 8015e40:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 8015e44:	e0fff917 	ldw	r3,-28(fp)
 8015e48:	00bfff84 	movi	r2,-2
 8015e4c:	1884703a 	and	r2,r3,r2
 8015e50:	1001703a 	wrctl	status,r2
  
  return context;
 8015e54:	e0bff917 	ldw	r2,-28(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 8015e58:	e0bffa15 	stw	r2,-24(fp)

  alt_irq_active &= ~(1 << id);
 8015e5c:	e0bff817 	ldw	r2,-32(fp)
 8015e60:	00c00044 	movi	r3,1
 8015e64:	1884983a 	sll	r2,r3,r2
 8015e68:	0084303a 	nor	r2,zero,r2
 8015e6c:	1007883a 	mov	r3,r2
 8015e70:	008200b4 	movhi	r2,2050
 8015e74:	10aa6904 	addi	r2,r2,-22108
 8015e78:	10800017 	ldw	r2,0(r2)
 8015e7c:	1886703a 	and	r3,r3,r2
 8015e80:	008200b4 	movhi	r2,2050
 8015e84:	10aa6904 	addi	r2,r2,-22108
 8015e88:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 8015e8c:	008200b4 	movhi	r2,2050
 8015e90:	10aa6904 	addi	r2,r2,-22108
 8015e94:	10800017 	ldw	r2,0(r2)
 8015e98:	100170fa 	wrctl	ienable,r2
 8015e9c:	e0bffa17 	ldw	r2,-24(fp)
 8015ea0:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 8015ea4:	e0bffb17 	ldw	r2,-20(fp)
 8015ea8:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 8015eac:	0005883a 	mov	r2,zero
 8015eb0:	e0bff115 	stw	r2,-60(fp)
 8015eb4:	e0bff217 	ldw	r2,-56(fp)
 8015eb8:	e0bffc15 	stw	r2,-16(fp)
 8015ebc:	e0bffc17 	ldw	r2,-16(fp)
 8015ec0:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }
  return rc; 
 8015ec4:	e0bff117 	ldw	r2,-60(fp)
}
 8015ec8:	e037883a 	mov	sp,fp
 8015ecc:	df000017 	ldw	fp,0(sp)
 8015ed0:	dec00104 	addi	sp,sp,4
 8015ed4:	f800283a 	ret

08015ed8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 8015ed8:	defffe04 	addi	sp,sp,-8
 8015edc:	dfc00115 	stw	ra,4(sp)
 8015ee0:	df000015 	stw	fp,0(sp)
 8015ee4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 8015ee8:	008200b4 	movhi	r2,2050
 8015eec:	10a33604 	addi	r2,r2,-29480
 8015ef0:	10800017 	ldw	r2,0(r2)
 8015ef4:	10000526 	beq	r2,zero,8015f0c <alt_get_errno+0x34>
 8015ef8:	008200b4 	movhi	r2,2050
 8015efc:	10a33604 	addi	r2,r2,-29480
 8015f00:	10800017 	ldw	r2,0(r2)
 8015f04:	103ee83a 	callr	r2
 8015f08:	00000206 	br	8015f14 <alt_get_errno+0x3c>
 8015f0c:	008200b4 	movhi	r2,2050
 8015f10:	10aa6204 	addi	r2,r2,-22136
}
 8015f14:	e037883a 	mov	sp,fp
 8015f18:	dfc00117 	ldw	ra,4(sp)
 8015f1c:	df000017 	ldw	fp,0(sp)
 8015f20:	dec00204 	addi	sp,sp,8
 8015f24:	f800283a 	ret

08015f28 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
 8015f28:	defffb04 	addi	sp,sp,-20
 8015f2c:	dfc00415 	stw	ra,16(sp)
 8015f30:	df000315 	stw	fp,12(sp)
 8015f34:	dc000215 	stw	r16,8(sp)
 8015f38:	df000304 	addi	fp,sp,12
 8015f3c:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
 8015f40:	e0bffe17 	ldw	r2,-8(fp)
 8015f44:	10800217 	ldw	r2,8(r2)
 8015f48:	10d00034 	orhi	r3,r2,16384
 8015f4c:	e0bffe17 	ldw	r2,-8(fp)
 8015f50:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 8015f54:	e03ffd15 	stw	zero,-12(fp)
 8015f58:	00002306 	br	8015fe8 <alt_file_locked+0xc0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 8015f5c:	04020074 	movhi	r16,2049
 8015f60:	841e5704 	addi	r16,r16,31068
 8015f64:	e0bffd17 	ldw	r2,-12(fp)
 8015f68:	1009883a 	mov	r4,r2
 8015f6c:	01400304 	movi	r5,12
 8015f70:	80027f80 	call	80027f8 <__mulsi3>
 8015f74:	8085883a 	add	r2,r16,r2
 8015f78:	10c00017 	ldw	r3,0(r2)
 8015f7c:	e0bffe17 	ldw	r2,-8(fp)
 8015f80:	10800017 	ldw	r2,0(r2)
 8015f84:	1880151e 	bne	r3,r2,8015fdc <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 8015f88:	04020074 	movhi	r16,2049
 8015f8c:	841e5704 	addi	r16,r16,31068
 8015f90:	e0bffd17 	ldw	r2,-12(fp)
 8015f94:	1009883a 	mov	r4,r2
 8015f98:	01400304 	movi	r5,12
 8015f9c:	80027f80 	call	80027f8 <__mulsi3>
 8015fa0:	8085883a 	add	r2,r16,r2
 8015fa4:	10800204 	addi	r2,r2,8
 8015fa8:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 8015fac:	10000b0e 	bge	r2,zero,8015fdc <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
 8015fb0:	e13ffd17 	ldw	r4,-12(fp)
 8015fb4:	01400304 	movi	r5,12
 8015fb8:	80027f80 	call	80027f8 <__mulsi3>
 8015fbc:	1007883a 	mov	r3,r2
 8015fc0:	00820074 	movhi	r2,2049
 8015fc4:	109e5704 	addi	r2,r2,31068
 8015fc8:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 8015fcc:	e0bffe17 	ldw	r2,-8(fp)
 8015fd0:	18800226 	beq	r3,r2,8015fdc <alt_file_locked+0xb4>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
 8015fd4:	00bffcc4 	movi	r2,-13
 8015fd8:	00000a06 	br	8016004 <alt_file_locked+0xdc>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 8015fdc:	e0bffd17 	ldw	r2,-12(fp)
 8015fe0:	10800044 	addi	r2,r2,1
 8015fe4:	e0bffd15 	stw	r2,-12(fp)
 8015fe8:	008200b4 	movhi	r2,2050
 8015fec:	10a33504 	addi	r2,r2,-29484
 8015ff0:	10800017 	ldw	r2,0(r2)
 8015ff4:	1007883a 	mov	r3,r2
 8015ff8:	e0bffd17 	ldw	r2,-12(fp)
 8015ffc:	18bfd72e 	bgeu	r3,r2,8015f5c <__alt_data_end+0xfc015f5c>
    }
  }
  
  /* The device is not locked */
 
  return 0;
 8016000:	0005883a 	mov	r2,zero
}
 8016004:	e6ffff04 	addi	sp,fp,-4
 8016008:	dfc00217 	ldw	ra,8(sp)
 801600c:	df000117 	ldw	fp,4(sp)
 8016010:	dc000017 	ldw	r16,0(sp)
 8016014:	dec00304 	addi	sp,sp,12
 8016018:	f800283a 	ret

0801601c <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
 801601c:	defff604 	addi	sp,sp,-40
 8016020:	dfc00915 	stw	ra,36(sp)
 8016024:	df000815 	stw	fp,32(sp)
 8016028:	df000804 	addi	fp,sp,32
 801602c:	e13ffd15 	stw	r4,-12(fp)
 8016030:	e17ffe15 	stw	r5,-8(fp)
 8016034:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
 8016038:	00bfffc4 	movi	r2,-1
 801603c:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
 8016040:	00bffb44 	movi	r2,-19
 8016044:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
 8016048:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
 801604c:	e13ffd17 	ldw	r4,-12(fp)
 8016050:	014200b4 	movhi	r5,2050
 8016054:	29633304 	addi	r5,r5,-29492
 8016058:	8015b240 	call	8015b24 <alt_find_dev>
 801605c:	e0bff815 	stw	r2,-32(fp)
 8016060:	e0bff817 	ldw	r2,-32(fp)
 8016064:	1000051e 	bne	r2,zero,801607c <open+0x60>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
 8016068:	e13ffd17 	ldw	r4,-12(fp)
 801606c:	80163380 	call	8016338 <alt_find_file>
 8016070:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
 8016074:	00800044 	movi	r2,1
 8016078:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
 801607c:	e0bff817 	ldw	r2,-32(fp)
 8016080:	10002b26 	beq	r2,zero,8016130 <open+0x114>
  {
    if ((index = alt_get_fd (dev)) < 0)
 8016084:	e13ff817 	ldw	r4,-32(fp)
 8016088:	801644c0 	call	801644c <alt_get_fd>
 801608c:	e0bff915 	stw	r2,-28(fp)
 8016090:	e0bff917 	ldw	r2,-28(fp)
 8016094:	1000030e 	bge	r2,zero,80160a4 <open+0x88>
    {
      status = index;
 8016098:	e0bff917 	ldw	r2,-28(fp)
 801609c:	e0bffa15 	stw	r2,-24(fp)
 80160a0:	00002506 	br	8016138 <open+0x11c>
    }
    else
    {
      fd = &alt_fd_list[index];
 80160a4:	e13ff917 	ldw	r4,-28(fp)
 80160a8:	01400304 	movi	r5,12
 80160ac:	80027f80 	call	80027f8 <__mulsi3>
 80160b0:	1007883a 	mov	r3,r2
 80160b4:	00820074 	movhi	r2,2049
 80160b8:	109e5704 	addi	r2,r2,31068
 80160bc:	1885883a 	add	r2,r3,r2
 80160c0:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
 80160c4:	e0fffe17 	ldw	r3,-8(fp)
 80160c8:	00900034 	movhi	r2,16384
 80160cc:	10bfffc4 	addi	r2,r2,-1
 80160d0:	1886703a 	and	r3,r3,r2
 80160d4:	e0bffc17 	ldw	r2,-16(fp)
 80160d8:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
 80160dc:	e0bffb17 	ldw	r2,-20(fp)
 80160e0:	1000051e 	bne	r2,zero,80160f8 <open+0xdc>
 80160e4:	e13ffc17 	ldw	r4,-16(fp)
 80160e8:	8015f280 	call	8015f28 <alt_file_locked>
 80160ec:	e0bffa15 	stw	r2,-24(fp)
 80160f0:	e0bffa17 	ldw	r2,-24(fp)
 80160f4:	10001016 	blt	r2,zero,8016138 <open+0x11c>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
 80160f8:	e0bff817 	ldw	r2,-32(fp)
 80160fc:	10800317 	ldw	r2,12(r2)
 8016100:	10000826 	beq	r2,zero,8016124 <open+0x108>
 8016104:	e0bff817 	ldw	r2,-32(fp)
 8016108:	10800317 	ldw	r2,12(r2)
 801610c:	e13ffc17 	ldw	r4,-16(fp)
 8016110:	e17ffd17 	ldw	r5,-12(fp)
 8016114:	e1bffe17 	ldw	r6,-8(fp)
 8016118:	e1ffff17 	ldw	r7,-4(fp)
 801611c:	103ee83a 	callr	r2
 8016120:	00000106 	br	8016128 <open+0x10c>
 8016124:	0005883a 	mov	r2,zero
 8016128:	e0bffa15 	stw	r2,-24(fp)
 801612c:	00000206 	br	8016138 <open+0x11c>
      }
    }
  }
  else
  {
    status = -ENODEV;
 8016130:	00bffb44 	movi	r2,-19
 8016134:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
 8016138:	e0bffa17 	ldw	r2,-24(fp)
 801613c:	1000090e 	bge	r2,zero,8016164 <open+0x148>
  {
    alt_release_fd (index);  
 8016140:	e13ff917 	ldw	r4,-28(fp)
 8016144:	80139e00 	call	80139e0 <alt_release_fd>
    ALT_ERRNO = -status;
 8016148:	8015ed80 	call	8015ed8 <alt_get_errno>
 801614c:	1007883a 	mov	r3,r2
 8016150:	e0bffa17 	ldw	r2,-24(fp)
 8016154:	0085c83a 	sub	r2,zero,r2
 8016158:	18800015 	stw	r2,0(r3)
    return -1;
 801615c:	00bfffc4 	movi	r2,-1
 8016160:	00000106 	br	8016168 <open+0x14c>
  }
  
  /* return the reference upon success */

  return index;
 8016164:	e0bff917 	ldw	r2,-28(fp)
}
 8016168:	e037883a 	mov	sp,fp
 801616c:	dfc00117 	ldw	ra,4(sp)
 8016170:	df000017 	ldw	fp,0(sp)
 8016174:	dec00204 	addi	sp,sp,8
 8016178:	f800283a 	ret

0801617c <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
 801617c:	defffa04 	addi	sp,sp,-24
 8016180:	df000515 	stw	fp,20(sp)
 8016184:	df000504 	addi	fp,sp,20
 8016188:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 801618c:	0005303a 	rdctl	r2,status
 8016190:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 8016194:	e0fffc17 	ldw	r3,-16(fp)
 8016198:	00bfff84 	movi	r2,-2
 801619c:	1884703a 	and	r2,r3,r2
 80161a0:	1001703a 	wrctl	status,r2
  
  return context;
 80161a4:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
 80161a8:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
 80161ac:	e0bfff17 	ldw	r2,-4(fp)
 80161b0:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
 80161b4:	e0bffd17 	ldw	r2,-12(fp)
 80161b8:	10800017 	ldw	r2,0(r2)
 80161bc:	e0fffd17 	ldw	r3,-12(fp)
 80161c0:	18c00117 	ldw	r3,4(r3)
 80161c4:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
 80161c8:	e0bffd17 	ldw	r2,-12(fp)
 80161cc:	10800117 	ldw	r2,4(r2)
 80161d0:	e0fffd17 	ldw	r3,-12(fp)
 80161d4:	18c00017 	ldw	r3,0(r3)
 80161d8:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
 80161dc:	e0bffd17 	ldw	r2,-12(fp)
 80161e0:	e0fffd17 	ldw	r3,-12(fp)
 80161e4:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
 80161e8:	e0bffd17 	ldw	r2,-12(fp)
 80161ec:	e0fffd17 	ldw	r3,-12(fp)
 80161f0:	10c00015 	stw	r3,0(r2)
 80161f4:	e0bffb17 	ldw	r2,-20(fp)
 80161f8:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 80161fc:	e0bffe17 	ldw	r2,-8(fp)
 8016200:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
 8016204:	e037883a 	mov	sp,fp
 8016208:	df000017 	ldw	fp,0(sp)
 801620c:	dec00104 	addi	sp,sp,4
 8016210:	f800283a 	ret

08016214 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
 8016214:	defffb04 	addi	sp,sp,-20
 8016218:	dfc00415 	stw	ra,16(sp)
 801621c:	df000315 	stw	fp,12(sp)
 8016220:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
 8016224:	d0a02117 	ldw	r2,-32636(gp)
 8016228:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
 801622c:	d0a74f17 	ldw	r2,-25284(gp)
 8016230:	10800044 	addi	r2,r2,1
 8016234:	d0a74f15 	stw	r2,-25284(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 8016238:	00002e06 	br	80162f4 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
 801623c:	e0bffd17 	ldw	r2,-12(fp)
 8016240:	10800017 	ldw	r2,0(r2)
 8016244:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
 8016248:	e0bffd17 	ldw	r2,-12(fp)
 801624c:	10800403 	ldbu	r2,16(r2)
 8016250:	10803fcc 	andi	r2,r2,255
 8016254:	10000426 	beq	r2,zero,8016268 <alt_tick+0x54>
 8016258:	d0a74f17 	ldw	r2,-25284(gp)
 801625c:	1000021e 	bne	r2,zero,8016268 <alt_tick+0x54>
    {
      alarm->rollover = 0;
 8016260:	e0bffd17 	ldw	r2,-12(fp)
 8016264:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
 8016268:	e0bffd17 	ldw	r2,-12(fp)
 801626c:	10800217 	ldw	r2,8(r2)
 8016270:	d0e74f17 	ldw	r3,-25284(gp)
 8016274:	18801d36 	bltu	r3,r2,80162ec <alt_tick+0xd8>
 8016278:	e0bffd17 	ldw	r2,-12(fp)
 801627c:	10800403 	ldbu	r2,16(r2)
 8016280:	10803fcc 	andi	r2,r2,255
 8016284:	1000191e 	bne	r2,zero,80162ec <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
 8016288:	e0bffd17 	ldw	r2,-12(fp)
 801628c:	10800317 	ldw	r2,12(r2)
 8016290:	e0fffd17 	ldw	r3,-12(fp)
 8016294:	18c00517 	ldw	r3,20(r3)
 8016298:	1809883a 	mov	r4,r3
 801629c:	103ee83a 	callr	r2
 80162a0:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
 80162a4:	e0bfff17 	ldw	r2,-4(fp)
 80162a8:	1000031e 	bne	r2,zero,80162b8 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
 80162ac:	e13ffd17 	ldw	r4,-12(fp)
 80162b0:	801617c0 	call	801617c <alt_alarm_stop>
 80162b4:	00000d06 	br	80162ec <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
 80162b8:	e0bffd17 	ldw	r2,-12(fp)
 80162bc:	10c00217 	ldw	r3,8(r2)
 80162c0:	e0bfff17 	ldw	r2,-4(fp)
 80162c4:	1887883a 	add	r3,r3,r2
 80162c8:	e0bffd17 	ldw	r2,-12(fp)
 80162cc:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
 80162d0:	e0bffd17 	ldw	r2,-12(fp)
 80162d4:	10c00217 	ldw	r3,8(r2)
 80162d8:	d0a74f17 	ldw	r2,-25284(gp)
 80162dc:	1880032e 	bgeu	r3,r2,80162ec <alt_tick+0xd8>
        {
          alarm->rollover = 1;
 80162e0:	e0bffd17 	ldw	r2,-12(fp)
 80162e4:	00c00044 	movi	r3,1
 80162e8:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
 80162ec:	e0bffe17 	ldw	r2,-8(fp)
 80162f0:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 80162f4:	e0fffd17 	ldw	r3,-12(fp)
 80162f8:	d0a02104 	addi	r2,gp,-32636
 80162fc:	18bfcf1e 	bne	r3,r2,801623c <__alt_data_end+0xfc01623c>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
 8016300:	0001883a 	nop
}
 8016304:	e037883a 	mov	sp,fp
 8016308:	dfc00117 	ldw	ra,4(sp)
 801630c:	df000017 	ldw	fp,0(sp)
 8016310:	dec00204 	addi	sp,sp,8
 8016314:	f800283a 	ret

08016318 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
 8016318:	deffff04 	addi	sp,sp,-4
 801631c:	df000015 	stw	fp,0(sp)
 8016320:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
 8016324:	000170fa 	wrctl	ienable,zero
}
 8016328:	e037883a 	mov	sp,fp
 801632c:	df000017 	ldw	fp,0(sp)
 8016330:	dec00104 	addi	sp,sp,4
 8016334:	f800283a 	ret

08016338 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
 8016338:	defffb04 	addi	sp,sp,-20
 801633c:	dfc00415 	stw	ra,16(sp)
 8016340:	df000315 	stw	fp,12(sp)
 8016344:	df000304 	addi	fp,sp,12
 8016348:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
 801634c:	008200b4 	movhi	r2,2050
 8016350:	10a33104 	addi	r2,r2,-29500
 8016354:	10800017 	ldw	r2,0(r2)
 8016358:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 801635c:	00003106 	br	8016424 <alt_find_file+0xec>
  {
    len = strlen(next->name);
 8016360:	e0bffd17 	ldw	r2,-12(fp)
 8016364:	10800217 	ldw	r2,8(r2)
 8016368:	1009883a 	mov	r4,r2
 801636c:	8003e4c0 	call	8003e4c <strlen>
 8016370:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
 8016374:	e0bffd17 	ldw	r2,-12(fp)
 8016378:	10c00217 	ldw	r3,8(r2)
 801637c:	e0bffe17 	ldw	r2,-8(fp)
 8016380:	10bfffc4 	addi	r2,r2,-1
 8016384:	1885883a 	add	r2,r3,r2
 8016388:	10800003 	ldbu	r2,0(r2)
 801638c:	10803fcc 	andi	r2,r2,255
 8016390:	1080201c 	xori	r2,r2,128
 8016394:	10bfe004 	addi	r2,r2,-128
 8016398:	10800bd8 	cmpnei	r2,r2,47
 801639c:	1000031e 	bne	r2,zero,80163ac <alt_find_file+0x74>
    {
      len -= 1;
 80163a0:	e0bffe17 	ldw	r2,-8(fp)
 80163a4:	10bfffc4 	addi	r2,r2,-1
 80163a8:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 80163ac:	e0bffe17 	ldw	r2,-8(fp)
 80163b0:	e0ffff17 	ldw	r3,-4(fp)
 80163b4:	1885883a 	add	r2,r3,r2
 80163b8:	10800003 	ldbu	r2,0(r2)
 80163bc:	10803fcc 	andi	r2,r2,255
 80163c0:	1080201c 	xori	r2,r2,128
 80163c4:	10bfe004 	addi	r2,r2,-128
 80163c8:	10800be0 	cmpeqi	r2,r2,47
 80163cc:	1000081e 	bne	r2,zero,80163f0 <alt_find_file+0xb8>
 80163d0:	e0bffe17 	ldw	r2,-8(fp)
 80163d4:	e0ffff17 	ldw	r3,-4(fp)
 80163d8:	1885883a 	add	r2,r3,r2
 80163dc:	10800003 	ldbu	r2,0(r2)
 80163e0:	10803fcc 	andi	r2,r2,255
 80163e4:	1080201c 	xori	r2,r2,128
 80163e8:	10bfe004 	addi	r2,r2,-128
 80163ec:	10000a1e 	bne	r2,zero,8016418 <alt_find_file+0xe0>
        !memcmp (next->name, name, len))
 80163f0:	e0bffd17 	ldw	r2,-12(fp)
 80163f4:	10c00217 	ldw	r3,8(r2)
 80163f8:	e0bffe17 	ldw	r2,-8(fp)
 80163fc:	1809883a 	mov	r4,r3
 8016400:	e17fff17 	ldw	r5,-4(fp)
 8016404:	100d883a 	mov	r6,r2
 8016408:	80166080 	call	8016608 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 801640c:	1000021e 	bne	r2,zero,8016418 <alt_find_file+0xe0>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
 8016410:	e0bffd17 	ldw	r2,-12(fp)
 8016414:	00000806 	br	8016438 <alt_find_file+0x100>
    }
    next = (alt_dev*) next->llist.next;
 8016418:	e0bffd17 	ldw	r2,-12(fp)
 801641c:	10800017 	ldw	r2,0(r2)
 8016420:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 8016424:	e0fffd17 	ldw	r3,-12(fp)
 8016428:	008200b4 	movhi	r2,2050
 801642c:	10a33104 	addi	r2,r2,-29500
 8016430:	18bfcb1e 	bne	r3,r2,8016360 <__alt_data_end+0xfc016360>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
 8016434:	0005883a 	mov	r2,zero
}
 8016438:	e037883a 	mov	sp,fp
 801643c:	dfc00117 	ldw	ra,4(sp)
 8016440:	df000017 	ldw	fp,0(sp)
 8016444:	dec00204 	addi	sp,sp,8
 8016448:	f800283a 	ret

0801644c <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
 801644c:	defffa04 	addi	sp,sp,-24
 8016450:	dfc00515 	stw	ra,20(sp)
 8016454:	df000415 	stw	fp,16(sp)
 8016458:	dc000315 	stw	r16,12(sp)
 801645c:	df000404 	addi	fp,sp,16
 8016460:	e13ffe15 	stw	r4,-8(fp)
  alt_32 i;
  int rc = -EMFILE;
 8016464:	00bffa04 	movi	r2,-24
 8016468:	e0bffd15 	stw	r2,-12(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 801646c:	e03ffc15 	stw	zero,-16(fp)
 8016470:	00002106 	br	80164f8 <alt_get_fd+0xac>
  {
    if (!alt_fd_list[i].dev)
 8016474:	04020074 	movhi	r16,2049
 8016478:	841e5704 	addi	r16,r16,31068
 801647c:	e0bffc17 	ldw	r2,-16(fp)
 8016480:	1009883a 	mov	r4,r2
 8016484:	01400304 	movi	r5,12
 8016488:	80027f80 	call	80027f8 <__mulsi3>
 801648c:	8085883a 	add	r2,r16,r2
 8016490:	10800017 	ldw	r2,0(r2)
 8016494:	1000151e 	bne	r2,zero,80164ec <alt_get_fd+0xa0>
    {
      alt_fd_list[i].dev = dev;
 8016498:	04020074 	movhi	r16,2049
 801649c:	841e5704 	addi	r16,r16,31068
 80164a0:	e0bffc17 	ldw	r2,-16(fp)
 80164a4:	1009883a 	mov	r4,r2
 80164a8:	01400304 	movi	r5,12
 80164ac:	80027f80 	call	80027f8 <__mulsi3>
 80164b0:	8085883a 	add	r2,r16,r2
 80164b4:	e0fffe17 	ldw	r3,-8(fp)
 80164b8:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
 80164bc:	008200b4 	movhi	r2,2050
 80164c0:	10a33504 	addi	r2,r2,-29484
 80164c4:	10c00017 	ldw	r3,0(r2)
 80164c8:	e0bffc17 	ldw	r2,-16(fp)
 80164cc:	1880040e 	bge	r3,r2,80164e0 <alt_get_fd+0x94>
      {
        alt_max_fd = i;
 80164d0:	008200b4 	movhi	r2,2050
 80164d4:	10a33504 	addi	r2,r2,-29484
 80164d8:	e0fffc17 	ldw	r3,-16(fp)
 80164dc:	10c00015 	stw	r3,0(r2)
      }
      rc = i;
 80164e0:	e0bffc17 	ldw	r2,-16(fp)
 80164e4:	e0bffd15 	stw	r2,-12(fp)
      goto alt_get_fd_exit;
 80164e8:	00000606 	br	8016504 <alt_get_fd+0xb8>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 80164ec:	e0bffc17 	ldw	r2,-16(fp)
 80164f0:	10800044 	addi	r2,r2,1
 80164f4:	e0bffc15 	stw	r2,-16(fp)
 80164f8:	e0bffc17 	ldw	r2,-16(fp)
 80164fc:	10800810 	cmplti	r2,r2,32
 8016500:	103fdc1e 	bne	r2,zero,8016474 <__alt_data_end+0xfc016474>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
 8016504:	e0bffd17 	ldw	r2,-12(fp)
}
 8016508:	e6ffff04 	addi	sp,fp,-4
 801650c:	dfc00217 	ldw	ra,8(sp)
 8016510:	df000117 	ldw	fp,4(sp)
 8016514:	dc000017 	ldw	r16,0(sp)
 8016518:	dec00304 	addi	sp,sp,12
 801651c:	f800283a 	ret

08016520 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
 8016520:	defffe04 	addi	sp,sp,-8
 8016524:	df000115 	stw	fp,4(sp)
 8016528:	df000104 	addi	fp,sp,4
 801652c:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
 8016530:	e0bfff17 	ldw	r2,-4(fp)
 8016534:	10bffe84 	addi	r2,r2,-6
 8016538:	10c00428 	cmpgeui	r3,r2,16
 801653c:	18001a1e 	bne	r3,zero,80165a8 <alt_exception_cause_generated_bad_addr+0x88>
 8016540:	100690ba 	slli	r3,r2,2
 8016544:	00820074 	movhi	r2,2049
 8016548:	10995604 	addi	r2,r2,25944
 801654c:	1885883a 	add	r2,r3,r2
 8016550:	10800017 	ldw	r2,0(r2)
 8016554:	1000683a 	jmp	r2
 8016558:	08016598 	cmpnei	zero,at,1430
 801655c:	08016598 	cmpnei	zero,at,1430
 8016560:	080165a8 	cmpgeui	zero,at,1430
 8016564:	080165a8 	cmpgeui	zero,at,1430
 8016568:	080165a8 	cmpgeui	zero,at,1430
 801656c:	08016598 	cmpnei	zero,at,1430
 8016570:	080165a0 	cmpeqi	zero,at,1430
 8016574:	080165a8 	cmpgeui	zero,at,1430
 8016578:	08016598 	cmpnei	zero,at,1430
 801657c:	08016598 	cmpnei	zero,at,1430
 8016580:	080165a8 	cmpgeui	zero,at,1430
 8016584:	08016598 	cmpnei	zero,at,1430
 8016588:	080165a0 	cmpeqi	zero,at,1430
 801658c:	080165a8 	cmpgeui	zero,at,1430
 8016590:	080165a8 	cmpgeui	zero,at,1430
 8016594:	08016598 	cmpnei	zero,at,1430
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
 8016598:	00800044 	movi	r2,1
 801659c:	00000306 	br	80165ac <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
 80165a0:	0005883a 	mov	r2,zero
 80165a4:	00000106 	br	80165ac <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
 80165a8:	0005883a 	mov	r2,zero
  }
}
 80165ac:	e037883a 	mov	sp,fp
 80165b0:	df000017 	ldw	fp,0(sp)
 80165b4:	dec00104 	addi	sp,sp,4
 80165b8:	f800283a 	ret

080165bc <atexit>:
 80165bc:	200b883a 	mov	r5,r4
 80165c0:	000d883a 	mov	r6,zero
 80165c4:	0009883a 	mov	r4,zero
 80165c8:	000f883a 	mov	r7,zero
 80165cc:	80166841 	jmpi	8016684 <__register_exitproc>

080165d0 <exit>:
 80165d0:	defffe04 	addi	sp,sp,-8
 80165d4:	000b883a 	mov	r5,zero
 80165d8:	dc000015 	stw	r16,0(sp)
 80165dc:	dfc00115 	stw	ra,4(sp)
 80165e0:	2021883a 	mov	r16,r4
 80165e4:	80167980 	call	8016798 <__call_exitprocs>
 80165e8:	008200b4 	movhi	r2,2050
 80165ec:	10a32d04 	addi	r2,r2,-29516
 80165f0:	11000017 	ldw	r4,0(r2)
 80165f4:	20800f17 	ldw	r2,60(r4)
 80165f8:	10000126 	beq	r2,zero,8016600 <exit+0x30>
 80165fc:	103ee83a 	callr	r2
 8016600:	8009883a 	mov	r4,r16
 8016604:	80131ec0 	call	80131ec <_exit>

08016608 <memcmp>:
 8016608:	01c000c4 	movi	r7,3
 801660c:	3980192e 	bgeu	r7,r6,8016674 <memcmp+0x6c>
 8016610:	2144b03a 	or	r2,r4,r5
 8016614:	11c4703a 	and	r2,r2,r7
 8016618:	10000f26 	beq	r2,zero,8016658 <memcmp+0x50>
 801661c:	20800003 	ldbu	r2,0(r4)
 8016620:	28c00003 	ldbu	r3,0(r5)
 8016624:	10c0151e 	bne	r2,r3,801667c <memcmp+0x74>
 8016628:	31bfff84 	addi	r6,r6,-2
 801662c:	01ffffc4 	movi	r7,-1
 8016630:	00000406 	br	8016644 <memcmp+0x3c>
 8016634:	20800003 	ldbu	r2,0(r4)
 8016638:	28c00003 	ldbu	r3,0(r5)
 801663c:	31bfffc4 	addi	r6,r6,-1
 8016640:	10c00e1e 	bne	r2,r3,801667c <memcmp+0x74>
 8016644:	21000044 	addi	r4,r4,1
 8016648:	29400044 	addi	r5,r5,1
 801664c:	31fff91e 	bne	r6,r7,8016634 <__alt_data_end+0xfc016634>
 8016650:	0005883a 	mov	r2,zero
 8016654:	f800283a 	ret
 8016658:	20c00017 	ldw	r3,0(r4)
 801665c:	28800017 	ldw	r2,0(r5)
 8016660:	1880041e 	bne	r3,r2,8016674 <memcmp+0x6c>
 8016664:	31bfff04 	addi	r6,r6,-4
 8016668:	21000104 	addi	r4,r4,4
 801666c:	29400104 	addi	r5,r5,4
 8016670:	39bff936 	bltu	r7,r6,8016658 <__alt_data_end+0xfc016658>
 8016674:	303fe91e 	bne	r6,zero,801661c <__alt_data_end+0xfc01661c>
 8016678:	003ff506 	br	8016650 <__alt_data_end+0xfc016650>
 801667c:	10c5c83a 	sub	r2,r2,r3
 8016680:	f800283a 	ret

08016684 <__register_exitproc>:
 8016684:	008200b4 	movhi	r2,2050
 8016688:	defffa04 	addi	sp,sp,-24
 801668c:	10a32d04 	addi	r2,r2,-29516
 8016690:	dc000315 	stw	r16,12(sp)
 8016694:	14000017 	ldw	r16,0(r2)
 8016698:	dc400415 	stw	r17,16(sp)
 801669c:	dfc00515 	stw	ra,20(sp)
 80166a0:	80805217 	ldw	r2,328(r16)
 80166a4:	2023883a 	mov	r17,r4
 80166a8:	10003626 	beq	r2,zero,8016784 <__register_exitproc+0x100>
 80166ac:	10c00117 	ldw	r3,4(r2)
 80166b0:	010007c4 	movi	r4,31
 80166b4:	20c00e16 	blt	r4,r3,80166f0 <__register_exitproc+0x6c>
 80166b8:	1a400044 	addi	r9,r3,1
 80166bc:	8800211e 	bne	r17,zero,8016744 <__register_exitproc+0xc0>
 80166c0:	18c00084 	addi	r3,r3,2
 80166c4:	18c7883a 	add	r3,r3,r3
 80166c8:	18c7883a 	add	r3,r3,r3
 80166cc:	12400115 	stw	r9,4(r2)
 80166d0:	10c7883a 	add	r3,r2,r3
 80166d4:	19400015 	stw	r5,0(r3)
 80166d8:	0005883a 	mov	r2,zero
 80166dc:	dfc00517 	ldw	ra,20(sp)
 80166e0:	dc400417 	ldw	r17,16(sp)
 80166e4:	dc000317 	ldw	r16,12(sp)
 80166e8:	dec00604 	addi	sp,sp,24
 80166ec:	f800283a 	ret
 80166f0:	00820034 	movhi	r2,2048
 80166f4:	108b5604 	addi	r2,r2,11608
 80166f8:	10002526 	beq	r2,zero,8016790 <__register_exitproc+0x10c>
 80166fc:	01006404 	movi	r4,400
 8016700:	d9400015 	stw	r5,0(sp)
 8016704:	d9800115 	stw	r6,4(sp)
 8016708:	d9c00215 	stw	r7,8(sp)
 801670c:	8002d580 	call	8002d58 <malloc>
 8016710:	d9400017 	ldw	r5,0(sp)
 8016714:	d9800117 	ldw	r6,4(sp)
 8016718:	d9c00217 	ldw	r7,8(sp)
 801671c:	10001c26 	beq	r2,zero,8016790 <__register_exitproc+0x10c>
 8016720:	80c05217 	ldw	r3,328(r16)
 8016724:	10000115 	stw	zero,4(r2)
 8016728:	02400044 	movi	r9,1
 801672c:	10c00015 	stw	r3,0(r2)
 8016730:	80805215 	stw	r2,328(r16)
 8016734:	10006215 	stw	zero,392(r2)
 8016738:	10006315 	stw	zero,396(r2)
 801673c:	0007883a 	mov	r3,zero
 8016740:	883fdf26 	beq	r17,zero,80166c0 <__alt_data_end+0xfc0166c0>
 8016744:	18d1883a 	add	r8,r3,r3
 8016748:	4211883a 	add	r8,r8,r8
 801674c:	1211883a 	add	r8,r2,r8
 8016750:	41802215 	stw	r6,136(r8)
 8016754:	01000044 	movi	r4,1
 8016758:	11806217 	ldw	r6,392(r2)
 801675c:	20c8983a 	sll	r4,r4,r3
 8016760:	310cb03a 	or	r6,r6,r4
 8016764:	11806215 	stw	r6,392(r2)
 8016768:	41c04215 	stw	r7,264(r8)
 801676c:	01800084 	movi	r6,2
 8016770:	89bfd31e 	bne	r17,r6,80166c0 <__alt_data_end+0xfc0166c0>
 8016774:	11806317 	ldw	r6,396(r2)
 8016778:	3108b03a 	or	r4,r6,r4
 801677c:	11006315 	stw	r4,396(r2)
 8016780:	003fcf06 	br	80166c0 <__alt_data_end+0xfc0166c0>
 8016784:	80805304 	addi	r2,r16,332
 8016788:	80805215 	stw	r2,328(r16)
 801678c:	003fc706 	br	80166ac <__alt_data_end+0xfc0166ac>
 8016790:	00bfffc4 	movi	r2,-1
 8016794:	003fd106 	br	80166dc <__alt_data_end+0xfc0166dc>

08016798 <__call_exitprocs>:
 8016798:	008200b4 	movhi	r2,2050
 801679c:	10a32d04 	addi	r2,r2,-29516
 80167a0:	10800017 	ldw	r2,0(r2)
 80167a4:	defff404 	addi	sp,sp,-48
 80167a8:	dd800815 	stw	r22,32(sp)
 80167ac:	d8800015 	stw	r2,0(sp)
 80167b0:	10805204 	addi	r2,r2,328
 80167b4:	dd000615 	stw	r20,24(sp)
 80167b8:	dc800415 	stw	r18,16(sp)
 80167bc:	dfc00b15 	stw	ra,44(sp)
 80167c0:	df000a15 	stw	fp,40(sp)
 80167c4:	ddc00915 	stw	r23,36(sp)
 80167c8:	dd400715 	stw	r21,28(sp)
 80167cc:	dcc00515 	stw	r19,20(sp)
 80167d0:	dc400315 	stw	r17,12(sp)
 80167d4:	dc000215 	stw	r16,8(sp)
 80167d8:	2025883a 	mov	r18,r4
 80167dc:	2829883a 	mov	r20,r5
 80167e0:	d8800115 	stw	r2,4(sp)
 80167e4:	05bfffc4 	movi	r22,-1
 80167e8:	d8800017 	ldw	r2,0(sp)
 80167ec:	14c05217 	ldw	r19,328(r2)
 80167f0:	98001d26 	beq	r19,zero,8016868 <__call_exitprocs+0xd0>
 80167f4:	dd400117 	ldw	r21,4(sp)
 80167f8:	98800117 	ldw	r2,4(r19)
 80167fc:	173fffc4 	addi	fp,r2,-1
 8016800:	e0000d16 	blt	fp,zero,8016838 <__call_exitprocs+0xa0>
 8016804:	14000044 	addi	r16,r2,1
 8016808:	8421883a 	add	r16,r16,r16
 801680c:	8421883a 	add	r16,r16,r16
 8016810:	84402004 	addi	r17,r16,128
 8016814:	9c63883a 	add	r17,r19,r17
 8016818:	9c21883a 	add	r16,r19,r16
 801681c:	a0001e26 	beq	r20,zero,8016898 <__call_exitprocs+0x100>
 8016820:	80804017 	ldw	r2,256(r16)
 8016824:	15001c26 	beq	r2,r20,8016898 <__call_exitprocs+0x100>
 8016828:	e73fffc4 	addi	fp,fp,-1
 801682c:	843fff04 	addi	r16,r16,-4
 8016830:	8c7fff04 	addi	r17,r17,-4
 8016834:	e5bff91e 	bne	fp,r22,801681c <__alt_data_end+0xfc01681c>
 8016838:	00820034 	movhi	r2,2048
 801683c:	108b5b04 	addi	r2,r2,11628
 8016840:	10000926 	beq	r2,zero,8016868 <__call_exitprocs+0xd0>
 8016844:	98800117 	ldw	r2,4(r19)
 8016848:	1000311e 	bne	r2,zero,8016910 <__call_exitprocs+0x178>
 801684c:	98800017 	ldw	r2,0(r19)
 8016850:	10003426 	beq	r2,zero,8016924 <__call_exitprocs+0x18c>
 8016854:	9809883a 	mov	r4,r19
 8016858:	a8800015 	stw	r2,0(r21)
 801685c:	8002d6c0 	call	8002d6c <free>
 8016860:	acc00017 	ldw	r19,0(r21)
 8016864:	983fe41e 	bne	r19,zero,80167f8 <__alt_data_end+0xfc0167f8>
 8016868:	dfc00b17 	ldw	ra,44(sp)
 801686c:	df000a17 	ldw	fp,40(sp)
 8016870:	ddc00917 	ldw	r23,36(sp)
 8016874:	dd800817 	ldw	r22,32(sp)
 8016878:	dd400717 	ldw	r21,28(sp)
 801687c:	dd000617 	ldw	r20,24(sp)
 8016880:	dcc00517 	ldw	r19,20(sp)
 8016884:	dc800417 	ldw	r18,16(sp)
 8016888:	dc400317 	ldw	r17,12(sp)
 801688c:	dc000217 	ldw	r16,8(sp)
 8016890:	dec00c04 	addi	sp,sp,48
 8016894:	f800283a 	ret
 8016898:	98800117 	ldw	r2,4(r19)
 801689c:	80c00017 	ldw	r3,0(r16)
 80168a0:	10bfffc4 	addi	r2,r2,-1
 80168a4:	17001526 	beq	r2,fp,80168fc <__call_exitprocs+0x164>
 80168a8:	80000015 	stw	zero,0(r16)
 80168ac:	183fde26 	beq	r3,zero,8016828 <__alt_data_end+0xfc016828>
 80168b0:	00800044 	movi	r2,1
 80168b4:	1708983a 	sll	r4,r2,fp
 80168b8:	98806217 	ldw	r2,392(r19)
 80168bc:	9dc00117 	ldw	r23,4(r19)
 80168c0:	2084703a 	and	r2,r4,r2
 80168c4:	1000061e 	bne	r2,zero,80168e0 <__call_exitprocs+0x148>
 80168c8:	183ee83a 	callr	r3
 80168cc:	98800117 	ldw	r2,4(r19)
 80168d0:	15ffc51e 	bne	r2,r23,80167e8 <__alt_data_end+0xfc0167e8>
 80168d4:	a8800017 	ldw	r2,0(r21)
 80168d8:	14ffd326 	beq	r2,r19,8016828 <__alt_data_end+0xfc016828>
 80168dc:	003fc206 	br	80167e8 <__alt_data_end+0xfc0167e8>
 80168e0:	98806317 	ldw	r2,396(r19)
 80168e4:	2084703a 	and	r2,r4,r2
 80168e8:	1000061e 	bne	r2,zero,8016904 <__call_exitprocs+0x16c>
 80168ec:	89400017 	ldw	r5,0(r17)
 80168f0:	9009883a 	mov	r4,r18
 80168f4:	183ee83a 	callr	r3
 80168f8:	003ff406 	br	80168cc <__alt_data_end+0xfc0168cc>
 80168fc:	9f000115 	stw	fp,4(r19)
 8016900:	003fea06 	br	80168ac <__alt_data_end+0xfc0168ac>
 8016904:	89000017 	ldw	r4,0(r17)
 8016908:	183ee83a 	callr	r3
 801690c:	003fef06 	br	80168cc <__alt_data_end+0xfc0168cc>
 8016910:	98800017 	ldw	r2,0(r19)
 8016914:	982b883a 	mov	r21,r19
 8016918:	1027883a 	mov	r19,r2
 801691c:	983fb61e 	bne	r19,zero,80167f8 <__alt_data_end+0xfc0167f8>
 8016920:	003fd106 	br	8016868 <__alt_data_end+0xfc016868>
 8016924:	0005883a 	mov	r2,zero
 8016928:	003ffa06 	br	8016914 <__alt_data_end+0xfc016914>
 801692c:	0201ffff 	0x201ffff
 8016930:	883a0000 	call	883a000 <_gp+0x819390>
 8016934:	010d0bff 	0x10d0bff
 8016938:	01010002 	0x1010002
	...
 8016944:	010d0bff 	0x10d0bff
 8016948:	01010004 	movi	r4,1024
 801694c:	00000100 	call	10 <__alt_mem_sdram_controller-0x7fffff0>
 8016950:	00000000 	call	0 <__alt_mem_sdram_controller-0x8000000>
 8016954:	01110bff 	0x1110bff
 8016958:	01010004 	movi	r4,1024
 801695c:	7f000105 	stb	fp,4(r15)
 8016960:	007d0000 	call	7d000 <__alt_mem_sdram_controller-0x7f83000>
	...
