
wifi_task.elf:     file format elf32-littlenios2
wifi_task.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x08000230

Program Header:
    LOAD off    0x00001000 vaddr 0x08000000 paddr 0x08000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x08000020 paddr 0x08000020 align 2**12
         filesz 0x0001701c memsz 0x0001701c flags r-x
    LOAD off    0x0001803c vaddr 0x0801703c paddr 0x08018ca8 align 2**12
         filesz 0x00001c6c memsz 0x00001c6c flags rw-
    LOAD off    0x0001a914 vaddr 0x0801a914 paddr 0x0801a914 align 2**12
         filesz 0x00000000 memsz 0x00000a74 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  08000000  08000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000210  08000020  08000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00016704  08000230  08000230  00001230  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000708  08016934  08016934  00017934  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001c6c  0801703c  08018ca8  0001803c  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000a74  0801a914  0801a914  0001a914  2**2
                  ALLOC, SMALL_DATA
  6 .sdram_controller 00000000  0801b388  0801b388  00019ca8  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  00019ca8  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00001258  00000000  00000000  00019cd0  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   00033945  00000000  00000000  0001af28  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 0000d3f6  00000000  00000000  0004e86d  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   00010759  00000000  00000000  0005bc63  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  0000341c  00000000  00000000  0006c3bc  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00006bd2  00000000  00000000  0006f7d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    0001fb3e  00000000  00000000  000763aa  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000010  00000000  00000000  00095ee8  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00001cf8  00000000  00000000  00095ef8  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  0009d193  2**0
                  CONTENTS, READONLY
 18 .cpu          0000000c  00000000  00000000  0009d196  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  0009d1a2  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  0009d1a3  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  0009d1a4  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  0009d1a8  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  0009d1ac  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   0000000b  00000000  00000000  0009d1b0  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    0000000b  00000000  00000000  0009d1bb  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   0000000b  00000000  00000000  0009d1c6  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 0000000f  00000000  00000000  0009d1d1  2**0
                  CONTENTS, READONLY
 28 .quartus_project_dir 0000001d  00000000  00000000  0009d1e0  2**0
                  CONTENTS, READONLY
 29 .jdi          00007b07  00000000  00000000  0009d1fd  2**0
                  CONTENTS, READONLY
 30 .sopcinfo     002dcdb0  00000000  00000000  000a4d04  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
08000000 l    d  .entry	00000000 .entry
08000020 l    d  .exceptions	00000000 .exceptions
08000230 l    d  .text	00000000 .text
08016934 l    d  .rodata	00000000 .rodata
0801703c l    d  .rwdata	00000000 .rwdata
0801a914 l    d  .bss	00000000 .bss
0801b388 l    d  .sdram_controller	00000000 .sdram_controller
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 D:/tag2/de1_software/nios/wifi_post_res/wifi_task_bsp//obj/HAL/src/crt0.o
08000268 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 WiFiUart.cpp
00000000 l    df *ABS*	00000000 main.cpp
00000000 l    df *ABS*	00000000 wifi_task.cpp
00000000 l    df *ABS*	00000000 eh_personality.cc
08000b40 l     F .text	00000058 _ZL12read_sleb128PKhPl
08000b98 l     F .text	00000088 _ZL16get_adjusted_ptrPKSt9type_infoS1_PPv
08000c20 l     F .text	000000a0 _ZL21size_of_encoded_valueh
08000cc0 l     F .text	00000210 _ZL28read_encoded_value_with_basehjPKhPj
08000ed0 l     F .text	00000054 _ZL15get_ttype_entryP16lsda_header_infom
08000f24 l     F .text	000000a8 _ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl
08000fcc l     F .text	00000088 _ZL21base_of_encoded_valuehP15_Unwind_Context
08001054 l     F .text	00000240 _ZL28check_compact_exception_specPKSt9type_infoPvPKhij
08001294 l     F .text	00000134 _ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info
00000000 l    df *ABS*	00000000 eh_globals.cc
0801a914 l     O .bss	00000008 _ZL10eh_globals
00000000 l    df *ABS*	00000000 class_type_info.cc
00000000 l    df *ABS*	00000000 del_op.cc
00000000 l    df *ABS*	00000000 eh_terminate.cc
00000000 l    df *ABS*	00000000 si_class_type_info.cc
00000000 l    df *ABS*	00000000 eh_catch.cc
00000000 l    df *ABS*	00000000 eh_call.cc
00000000 l    df *ABS*	00000000 eh_term_handler.cc
00000000 l    df *ABS*	00000000 eh_throw.cc
080023d0 l     F .text	00000044 _ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception
00000000 l    df *ABS*	00000000 tinfo.cc
00000000 l    df *ABS*	00000000 eh_alloc.cc
0801a920 l     O .bss	00000004 _ZL14emergency_used
0801aa60 l     O .bss	00000800 _ZL16emergency_buffer
0801a91c l     O .bss	00000004 _ZL15dependents_used
0801a960 l     O .bss	00000100 _ZL17dependents_buffer
00000000 l    df *ABS*	00000000 eh_exception.cc
00000000 l    df *ABS*	00000000 eh_unex_handler.cc
00000000 l    df *ABS*	00000000 pure.cc
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 unwind-sjlj.c
080027e8 l     F .text	00000118 _Unwind_ForcedUnwind_Phase2
0801a924 l     O .bss	00000004 fc_static
08002900 l     F .text	000000c0 _Unwind_RaiseException_Phase2
080029c0 l     F .text	00000030 uw_install_context.isra.1
00000000 l    df *ABS*	00000000 abort.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 signal.c
00000000 l    df *ABS*	00000000 signalr.c
00000000 l    df *ABS*	00000000 snprintf.c
00000000 l    df *ABS*	00000000 strcat.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strcpy.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
08016cfe l     O .rodata	00000010 zeroes.4166
08016d0e l     O .rodata	00000010 blanks.4165
00000000 l    df *ABS*	00000000 vfprintf.c
08016d1e l     O .rodata	00000010 zeroes.4181
08016d2e l     O .rodata	00000010 blanks.4180
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
0800816c l     F .text	00000228 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
08009d14 l     F .text	00000008 __fp_lock
08009d1c l     F .text	00000008 __fp_unlock
08009d30 l     F .text	000001a0 __sinit.part.1
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
08017444 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 locale.c
08017888 l     O .rwdata	00000020 lc_ctype_charset
08017868 l     O .rwdata	00000020 lc_message_charset
080178a8 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 mprec.c
08016d60 l     O .rodata	0000000c p05.2678
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 vfprintf.c
08016e84 l     O .rodata	00000010 zeroes.4110
08016e94 l     O .rodata	00000010 blanks.4109
00000000 l    df *ABS*	00000000 vfprintf.c
0800dc34 l     F .text	000000fc __sprint_r.part.0
08016eb4 l     O .rodata	00000010 blanks.4125
08016ea4 l     O .rodata	00000010 zeroes.4126
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
08010738 l     F .text	0000006c udivmodsi4
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
08013060 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
08013188 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_exit.c
00000000 l    df *ABS*	00000000 alt_fstat.c
080131e8 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_getpid.c
00000000 l    df *ABS*	00000000 alt_isatty.c
08013310 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_kill.c
0801340c l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0801358c l     F .text	00000064 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
08013670 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
08013854 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
08018c88 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
08013ad8 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
08013c28 l     F .text	00000038 alt_dev_reg
08017a88 l     O .rwdata	000000a4 dma_fpga_to_hps_priv
08017b2c l     O .rwdata	0000001c dma_fpga_to_hps_tx
08017b48 l     O .rwdata	0000001c dma_fpga_to_hps_rx
08017b64 l     O .rwdata	00001060 jtag_uart_0
08018bc4 l     O .rwdata	0000002c bt_rs232_uart
08018bf0 l     O .rwdata	0000002c wifi_rs232_uart
00000000 l    df *ABS*	00000000 altera_avalon_dma.c
08013d18 l     F .text	00000038 alt_dma_txchan_reg
08013d50 l     F .text	00000038 alt_dma_rxchan_reg
08013e7c l     F .text	00000098 alt_avalon_dma_launch_txonly
08013f14 l     F .text	00000098 alt_avalon_dma_launch_rxonly
08013fac l     F .text	00000344 alt_avalon_dma_ioctl
08014664 l     F .text	000001c0 alt_avalon_dma_irq
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
08014ae8 l     F .text	00000208 altera_avalon_jtag_uart_irq
08014cf0 l     F .text	000000a8 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_up_avalon_rs232.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
080157f8 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_dma_rxchan_open.c
080158ec l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_dma_txchan_open.c
08015990 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
08015b98 l     F .text	000000e0 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_register.c
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
08015ea0 l     F .text	00000050 alt_get_errno
08015ef0 l     F .text	000000f4 alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
0801a95c g     O .bss	00000004 alt_instruction_exception_handler
08002630 g     F .text	00000044 __cxa_free_exception
08002534 g     F .text	00000008 _ZNKSt9type_info15__is_function_pEv
0800bfd4 g     F .text	00000074 _mprec_log10
08001ec8 g     F .text	00000018 _ZSt10unexpectedv
0800c0c0 g     F .text	0000008c __any_on
0800f660 g     F .text	00000054 _isatty_r
08016d6c g     O .rodata	00000028 __mprec_tinytens
0801379c g     F .text	00000078 alt_main
08003d84 g     F .text	00000090 strcpy
08000690 g     F .text	00000080 _ZN8WiFiUart6read_mEPii
0800367c g     F .text	000000b8 _puts_r
0801b288 g     O .bss	00000100 alt_irq
08002770 g     F .text	00000004 _ZN10__cxxabiv115__forced_unwindD1Ev
0800f6b4 g     F .text	0000005c _lseek_r
0800029c g     F .text	00000048 _ZN8WiFiUartD1Ev
08002a7c g     F .text	00000020 .hidden _Unwind_GetIPInfo
08018ca8 g       *ABS*	00000000 __flash_rwdata_start
08011a80 g     F .text	00000084 .hidden __eqdf2
080024a4 g     F .text	00000084 __cxa_rethrow
08002a08 g     F .text	00000014 .hidden _Unwind_SjLj_Unregister
08001f04 g     F .text	00000014 _ZSt14set_unexpectedPFvvE
08002a6c g     F .text	00000010 .hidden _Unwind_GetIP
0801b388 g       *ABS*	00000000 __alt_heap_start
08003a40 g     F .text	00000058 _kill_r
08003640 g     F .text	0000003c printf
0800f8dc g     F .text	0000009c _wcrtomb_r
08003804 g     F .text	00000084 _signal_r
0800c838 g     F .text	0000005c __sseek
0800a078 g     F .text	00000010 __sinit
08014824 g     F .text	000000a8 alt_avalon_dma_init
0800f76c g     F .text	00000154 __swbuf_r
08002708 g     F .text	00000040 __cxa_free_dependent_exception
08001f28 g     F .text	00000010 _ZN10__cxxabiv120__si_class_type_infoD2Ev
0800aaf0 g     F .text	0000007c _setlocale_r
08016b04  w    O .rodata	00000025 _ZTSN10__cxxabiv120__si_class_type_infoE
08009ed0 g     F .text	00000078 __sfmoreglue
08013834 g     F .text	00000020 __malloc_unlock
08015538 g     F .text	00000090 alt_up_rs232_read_fd
08002770 g     F .text	00000004 _ZN10__cxxabiv115__forced_unwindD2Ev
08002358 g     F .text	00000020 _ZSt18uncaught_exceptionv
080027a0 g     F .text	00000020 __cxa_deleted_virtual
0800afa8 g     F .text	0000015c memmove
08002748 g     F .text	00000004 _ZNSt9exceptionD2Ev
0800a060 g     F .text	00000018 _cleanup
08003b74 g     F .text	000000e4 snprintf
0800b104 g     F .text	000000a8 _Balloc
08011b04 g     F .text	000000e0 .hidden __gtdf2
08016c40  w    O .rodata	00000014 _ZTVSt13bad_exception
080162e0 g     F .text	00000020 altera_nios2_gen2_irq_init
00000000  w      *UND*	00000000 __errno
08000000 g     F .entry	0000000c __reset
08002ab8 g     F .text	00000008 .hidden _Unwind_GetRegionStart
08000020 g       *ABS*	00000000 __flash_exceptions_start
0800f608 g     F .text	00000058 _fstat_r
0801a934 g     O .bss	00000004 errno
0800c7b4 g     F .text	00000008 __seofread
0800046c g     F .text	000001b0 _ZN8WiFiUart12update_entryEPViS1_
08000000 g       *ABS*	00000000 __alt_mem_sdram_controller
0800ca64 g     F .text	000011d0 ___svfiprintf_internal_r
08002c94 g     F .text	00000074 .hidden _Unwind_Backtrace
0801a948 g     O .bss	00000004 alt_argv
08020c1c g       *ABS*	00000000 _gp
080132f0 g     F .text	00000020 getpid
080169a4  w    O .rodata	0000000a _ZTS8WiFiUart
080018c8 g     F .text	00000234 __cxa_call_unexpected
080021ec g     F .text	00000008 __cxa_get_exception_ptr
080159e0 g     F .text	00000054 alt_dma_txchan_open
08017908 g     O .rwdata	00000180 alt_fd_list
08002ba8 g     F .text	00000044 .hidden _Unwind_SjLj_ForcedUnwind
08002a38 g     F .text	00000018 .hidden _Unwind_GetCFA
08001ee0 g     F .text	00000014 _ZSt13set_terminatePFvvE
08015aec g     F .text	00000090 alt_find_dev
0800ae70 g     F .text	00000138 memcpy
08002674 g     F .text	00000094 __cxa_allocate_dependent_exception
08009d24 g     F .text	0000000c _cleanup_r
08001b8c g     F .text	00000018 _ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_
08012e88 g     F .text	000000d0 .hidden __floatsidf
08015c78 g     F .text	00000078 alt_io_redirect
08011be4 g     F .text	000000e0 .hidden __ltdf2
08016934 g       *ABS*	00000000 __DTOR_END__
08001ba4 g     F .text	00000010 _ZN10__cxxabiv117__class_type_infoD1Ev
080154c4 g     F .text	00000074 alt_up_rs232_read_data
08003734 g     F .text	00000014 puts
080164e8 g     F .text	0000009c alt_exception_cause_generated_bad_addr
0800085c g     F .text	0000004c _ZN8WiFiUart5flushEv
0800c6ec g     F .text	00000074 __fpclassifyd
0800bf30 g     F .text	000000a4 __ratio
0800f16c g     F .text	00000024 __vfiprintf_internal
08014eec g     F .text	0000020c altera_avalon_jtag_uart_read
08002d20 g     F .text	00000014 malloc
08003614 g     F .text	0000002c _printf_r
08010854 g     F .text	00000008 .hidden __udivsi3
08013360 g     F .text	000000ac isatty
08003888 g     F .text	000000bc _raise_r
08016dbc g     O .rodata	000000c8 __mprec_tens
0800ab6c g     F .text	0000000c __locale_charset
0800026c g     F .text	00000030 _ZN8WiFiUartC2Ev
0801a930 g     O .bss	00000004 __malloc_top_pad
08003a98 g     F .text	00000004 _getpid_r
0800026c g     F .text	00000030 _ZN8WiFiUartC1Ev
08018c68 g     O .rwdata	00000004 __mb_cur_max
0800ab9c g     F .text	0000000c _localeconv_r
080002e4 g     F .text	00000038 _ZN8WiFiUartD0Ev
0800b52c g     F .text	0000003c __i2b
0800a4dc g     F .text	000004a4 __sfvwrite_r
08001c54 g     F .text	000000b8 _ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj
08003944 g     F .text	000000a8 __sigtramp_r
08003748 g     F .text	00000054 _sbrk_r
08016b74  w    O .rodata	00000020 _ZTVSt9type_info
0800f710 g     F .text	0000005c _read_r
08002750 g     F .text	0000000c _ZNKSt9exception4whatEv
08018c80 g     O .rwdata	00000004 alt_max_fd
08015440 g     F .text	00000044 alt_up_rs232_check_parity
0800f318 g     F .text	00000100 _fclose_r
08009ce4 g     F .text	00000030 fflush
0801a92c g     O .bss	00000004 __malloc_max_sbrked_mem
08015cf0 g     F .text	000001b0 alt_irq_register
08010864 g     F .text	0000089c .hidden __adddf3
08013d88 g     F .text	000000f4 alt_avalon_dma_launch_bidir
08016b38  w    O .rodata	0000002c _ZTVN10__cxxabiv120__si_class_type_infoE
0800029c g     F .text	00000048 _ZN8WiFiUartD2Ev
0800bcd8 g     F .text	0000011c __b2d
08018c20  w    O .rwdata	00000008 _ZTI8WiFiUart
0801593c g     F .text	00000054 alt_dma_rxchan_open
0801011c g     F .text	0000061c .hidden __umoddi3
080136c0 g     F .text	000000dc lseek
08001be8 g     F .text	0000006c _ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE
08001ddc g     F .text	00000004 _ZdlPv
08016994  w    O .rodata	00000010 _ZTV8WiFiUart
08018c60 g     O .rwdata	00000004 _global_impure_ptr
0800c14c g     F .text	000005a0 _realloc_r
0801b388 g       *ABS*	00000000 __bss_end
080161dc g     F .text	00000104 alt_tick
080029f0 g     F .text	00000018 .hidden _Unwind_SjLj_Register
0800fadc g     F .text	00000640 .hidden __udivdi3
0800f42c g     F .text	00000184 _fputwc_r
08016d94 g     O .rodata	00000028 __mprec_bigtens
0800b310 g     F .text	00000104 __s2b
08002d08 g     F .text	00000018 abort
08012f58 g     F .text	000000a4 .hidden __floatunsidf
0800ba80 g     F .text	00000060 __mcmp
080022a8 g     F .text	000000b0 __cxa_end_catch
0800a098 g     F .text	00000018 __fp_lock_all
0800274c g     F .text	00000004 _ZNSt13bad_exceptionD2Ev
08016144 g     F .text	00000098 alt_alarm_stop
080007b4 g     F .text	00000060 _ZN8WiFiUart6read_sEv
0801a950 g     O .bss	00000004 alt_irq_active
08001ea0 g     F .text	00000018 _ZSt9terminatev
080008ec g     F .text	00000254 _Z9wifi_taskv
080000fc g     F .exceptions	000000d4 alt_irq_handler
080178e0 g     O .rwdata	00000028 alt_dev_null
08002778 g     F .text	00000004 _ZN10__cxxabiv119__foreign_exceptionD2Ev
08016aa8  w    O .rodata	00000022 _ZTSN10__cxxabiv117__class_type_infoE
080157dc g     F .text	0000001c alt_dcache_flush_all
0800b414 g     F .text	00000068 __hi0bits
08018c3c  w    O .rwdata	00000008 _ZTISt9exception
08012e00 g     F .text	00000088 .hidden __fixdfsi
08018ca8 g       *ABS*	00000000 __ram_rwdata_end
08002528 g     F .text	00000004 _ZNSt9type_infoD1Ev
08018c78 g     O .rwdata	00000008 alt_dev_list
08002778 g     F .text	00000004 _ZN10__cxxabiv119__foreign_exceptionD1Ev
080144b8 g     F .text	00000074 alt_avalon_dma_space
08013b28 g     F .text	00000100 write
08002544 g     F .text	00000004 _ZNSt9type_infoD0Ev
0801703c g       *ABS*	00000000 __ram_rodata_end
08013238 g     F .text	000000b8 fstat
080155c8 g     F .text	00000094 alt_up_rs232_write_fd
08018c1c g     O .rwdata	00000004 script
0801345c g     F .text	00000130 kill
08011be4 g     F .text	000000e0 .hidden __ledf2
0800061c g     F .text	00000074 _ZN8WiFiUart7write_mEPci
08003c58 g     F .text	00000088 strcat
0800b7f8 g     F .text	00000140 __pow5mult
0800dd48 g     F .text	00001424 ___vfiprintf_internal_r
0801a940 g     O .bss	00000004 __nlocale_changed
0801085c g     F .text	00000008 .hidden __umodsi3
0800253c g     F .text	00000008 _ZNKSt9type_info11__do_upcastEPKN10__cxxabiv117__class_type_infoEPPv
08001ef4 g     F .text	00000010 _ZSt13get_terminatev
0801b388 g       *ABS*	00000000 end
08002c7c g     F .text	00000018 .hidden _Unwind_DeleteException
08014a30 g     F .text	000000b8 altera_avalon_jtag_uart_init
080001d0 g     F .exceptions	00000060 alt_instruction_exception_entry
08001d0c g     F .text	000000d0 _ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE
08016934 g       *ABS*	00000000 __CTOR_LIST__
0c000000 g       *ABS*	00000000 __alt_stack_pointer
08012ffc g     F .text	00000064 .hidden __clzsi2
08003a9c g     F .text	000000d8 _snprintf_r
08001b14 g     F .text	00000078 _ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv
080150f8 g     F .text	00000218 altera_avalon_jtag_uart_write
0800a088 g     F .text	00000004 __sfp_lock_acquire
08016bc8  w    O .rodata	00000012 _ZTSSt13bad_exception
0800ad88 g     F .text	000000e8 memchr
08005f1c g     F .text	000020fc ___vfprintf_internal_r
0800a1ec g     F .text	000002f0 _free_r
0800ab78 g     F .text	00000010 __locale_mb_cur_max
0801452c g     F .text	00000138 alt_avalon_dma_send
08016760 g     F .text	00000194 __call_exitprocs
08018c94 g     O .rwdata	00000008 alt_dma_txchan_list
0801a93c g     O .bss	00000004 __mlocale_changed
08018c58 g     O .rwdata	00000004 __malloc_sbrk_base
08000230 g     F .text	0000003c _start
0801a954 g     O .bss	00000004 _alt_tick_rate
08016b64  w    O .rodata	0000000d _ZTSSt9type_info
08002780 g     F .text	00000020 __cxa_pure_virtual
0800b938 g     F .text	00000148 __lshift
0801a958 g     O .bss	00000004 _alt_nticks
08003a00 g     F .text	0000001c signal
080138a4 g     F .text	00000104 read
08013c94 g     F .text	00000084 alt_sys_init
0800c89c g     F .text	000001c8 __ssprint_r
0801664c g     F .text	00000114 __register_exitproc
08001f6c g     F .text	00000160 _ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE
08015404 g     F .text	0000003c alt_up_rs232_get_available_space_in_write_FIFO
08000384 g     F .text	000000e8 _ZN8WiFiUart4initEv
0800b568 g     F .text	00000290 __multiply
08014d98 g     F .text	00000068 altera_avalon_jtag_uart_close
080027c0 g     F .text	00000028 .hidden __mulsi3
0801703c g       *ABS*	00000000 __ram_rwdata_start
08002ad8 g     F .text	000000d0 .hidden _Unwind_SjLj_RaiseException
08016934 g       *ABS*	00000000 __ram_rodata_start
0801b260 g     O .bss	00000028 __malloc_current_mallinfo
08002bec g     F .text	00000044 .hidden _Unwind_SjLj_Resume
0800bdf4 g     F .text	0000013c __d2b
08016c68  w    O .rodata	00000014 _ZTVN10__cxxabiv119__foreign_exceptionE
08002528 g     F .text	00000004 _ZNSt9type_infoD2Ev
0800277c g     F .text	00000004 _ZN10__cxxabiv119__foreign_exceptionD0Ev
08002168 g     F .text	00000084 _ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE
080148cc g     F .text	00000060 altera_avalon_jtag_uart_read_fd
08016414 g     F .text	000000d4 alt_get_fd
08000710 g     F .text	000000a4 _ZN8WiFiUart7write_sEh
08018c4c  w    O .rwdata	00000008 _ZTIN10__cxxabiv119__foreign_exceptionE
0800f1ec g     F .text	00000054 _close_r
080165d0 g     F .text	0000007c memcmp
0801498c g     F .text	00000050 altera_avalon_jtag_uart_close_fd
0801b388 g       *ABS*	00000000 __alt_stack_base
080149dc g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
08001f28 g     F .text	00000010 _ZN10__cxxabiv120__si_class_type_infoD1Ev
0800803c g     F .text	00000130 __swsetup_r
08002c30 g     F .text	0000004c .hidden _Unwind_SjLj_Resume_or_Rethrow
08011100 g     F .text	00000980 .hidden __divdf3
08009f48 g     F .text	00000118 __sfp
0800c048 g     F .text	00000078 __copybits
0800252c g     F .text	00000008 _ZNKSt9type_info14__is_pointer_pEv
0801703c g     O .rwdata	00000408 __malloc_av_
0800a094 g     F .text	00000004 __sinit_lock_release
08011cc4 g     F .text	0000086c .hidden __muldf3
0800c760 g     F .text	00000054 __sread
08016c2c  w    O .rodata	00000014 _ZTVSt9exception
08002774 g     F .text	00000004 _ZN10__cxxabiv115__forced_unwindD0Ev
08015368 g     F .text	0000005c alt_up_rs232_disable_read_interrupt
08016300 g     F .text	00000114 alt_find_file
08015848 g     F .text	000000a4 alt_dev_llist_insert
08013814 g     F .text	00000020 __malloc_lock
08013a28 g     F .text	000000b0 sbrk
08003eac g     F .text	00002070 ___svfprintf_internal_r
08016ad8  w    O .rodata	0000002c _ZTVN10__cxxabiv117__class_type_infoE
08002414 g     F .text	00000090 __cxa_throw
08009abc g     F .text	00000228 _fflush_r
08002a9c g     F .text	00000010 .hidden _Unwind_SetIP
0800f240 g     F .text	000000d8 _calloc_r
0801a914 g       *ABS*	00000000 __bss_start
080034f0 g     F .text	00000124 memset
080008a8 g     F .text	00000044 main
08014338 g     F .text	00000048 alt_avalon_dma_rx_ioctl
0801a94c g     O .bss	00000004 alt_envp
0801a928 g     O .bss	00000004 __malloc_max_total_mem
0801492c g     F .text	00000060 altera_avalon_jtag_uart_write_fd
0800f8c0 g     F .text	0000001c __swbuf
08001afc g     F .text	0000000c __cxa_get_globals_fast
0800c894 g     F .text	00000008 __sclose
0c000000 g       *ABS*	00000000 __alt_heap_limit
08018c28 g     O .rwdata	00000004 tagid
0800f418 g     F .text	00000014 fclose
08008394 g     F .text	00001728 _dtoa_r
08002d48 g     F .text	000007a8 _malloc_r
0800fa50 g     F .text	00000030 __ascii_wctomb
0800275c g     F .text	0000000c _ZNKSt13bad_exception4whatEv
08018c84 g     O .rwdata	00000004 alt_errno
08003a1c g     F .text	00000010 _init_signal
08016acc  w    O .rodata	0000000c _ZTIN10__cxxabiv117__class_type_infoE
0800a980 g     F .text	000000b8 _fwalk
0800274c g     F .text	00000004 _ZNSt13bad_exceptionD1Ev
080107a4 g     F .text	00000054 .hidden __divsi3
0800a0c8 g     F .text	00000124 _malloc_trim_r
08016934 g       *ABS*	00000000 __CTOR_END__
08003ce0 g     F .text	000000a4 strcmp
08016934 g       *ABS*	00000000 __flash_rodata_start
08016c54  w    O .rodata	00000014 _ZTVN10__cxxabiv115__forced_unwindE
08016934 g       *ABS*	00000000 __DTOR_LIST__
0801565c g     F .text	00000040 alt_up_rs232_open_dev
08011a80 g     F .text	00000084 .hidden __nedf2
08013c60 g     F .text	00000034 alt_irq_init
080139a8 g     F .text	00000080 alt_release_fd
08001f38 g     F .text	00000034 _ZN10__cxxabiv120__si_class_type_infoD0Ev
08016ec4 g     O .rodata	00000100 .hidden __clz_tab
0801a938 g     O .bss	00000004 _PathLocale
08016584 g     F .text	00000014 atexit
08018c2c g     O .rwdata	00000004 result
0800f190 g     F .text	0000005c _write_r
0800aba8 g     F .text	0000001c setlocale
08002ad0 g     F .text	00000008 .hidden _Unwind_GetTextRelBase
08002378 g     F .text	00000058 __cxa_call_terminate
08018c64 g     O .rwdata	00000004 _impure_ptr
08018c44  w    O .rwdata	00000008 _ZTIN10__cxxabiv115__forced_unwindE
0801a944 g     O .bss	00000004 alt_argc
08015a90 g     F .text	0000005c _do_dtors
0800ab94 g     F .text	00000008 __locale_cjk_lang
08000814 g     F .text	00000048 _ZN8WiFiUart10read_readyEv
08001f18 g     F .text	00000010 _ZSt14get_unexpectedv
08000020 g       .exceptions	00000000 alt_irq_entry
0800bc78 g     F .text	00000060 __ulp
08002ac0 g     F .text	00000008 .hidden _Unwind_FindEnclosingFunction
0800a0b0 g     F .text	00000018 __fp_unlock_all
08018c70 g     O .rwdata	00000008 alt_fs_list
08016c08  w    O .rodata	00000024 _ZTSN10__cxxabiv119__foreign_exceptionE
08015310 g     F .text	00000058 alt_up_rs232_enable_read_interrupt
08002aac g     F .text	0000000c .hidden _Unwind_GetLanguageSpecificData
08015484 g     F .text	00000040 alt_up_rs232_write_data
080021f4 g     F .text	000000b4 __cxa_begin_catch
08001ba4 g     F .text	00000010 _ZN10__cxxabiv117__class_type_infoD2Ev
08001eb8 g     F .text	00000010 _ZN10__cxxabiv112__unexpectedEPFvvE
08000020 g       *ABS*	00000000 __ram_exceptions_start
0800abc4 g     F .text	0000000c localeconv
0800276c g     F .text	00000004 _ZNSt13bad_exceptionD0Ev
08018c30 g     O .rwdata	00000004 _ZN10__cxxabiv119__terminate_handlerE
0800258c g     F .text	000000a4 __cxa_allocate_exception
08016b2c  w    O .rodata	0000000c _ZTIN10__cxxabiv120__si_class_type_infoE
08018ca8 g       *ABS*	00000000 _edata
0801b388 g       *ABS*	00000000 _end
080013c8 g     F .text	00000500 __gxx_personality_sj0
08000230 g       *ABS*	00000000 __ram_exceptions_end
08014e00 g     F .text	000000ec altera_avalon_jtag_uart_ioctl
08002748 g     F .text	00000004 _ZNSt9exceptionD1Ev
0800c7bc g     F .text	0000007c __swrite
08018c5c g     O .rwdata	00000004 __malloc_trim_threshold
0800ab88 g     F .text	0000000c __locale_msgcharset
08016598 g     F .text	00000038 exit
08002a50 g     F .text	0000001c .hidden _Unwind_SetGR
0800aa38 g     F .text	000000b8 _fwalk_reent
080020cc g     F .text	0000009c _ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_
0800bae0 g     F .text	00000198 __mdiff
08001de0 g     F .text	000000c0 _ZN10__cxxabiv111__terminateEPFvvE
080107f8 g     F .text	0000005c .hidden __modsi3
0c000000 g       *ABS*	00000000 __alt_data_end
08000020 g     F .exceptions	00000000 alt_exception
0800a08c g     F .text	00000004 __sfp_lock_release
08016bdc  w    O .rodata	0000000c _ZTISt13bad_exception
080131b4 g     F .text	00000034 _exit
0801569c g     F .text	00000140 alt_alarm_start
08002a1c g     F .text	0000001c .hidden _Unwind_GetGR
08001b08 g     F .text	0000000c __cxa_get_globals
0800abd0 g     F .text	000001b8 __smakebuf_r
08018c54 g     O .rwdata	00000004 _ZN10__cxxabiv120__unexpected_handlerE
08003e14 g     F .text	00000098 strlen
0800379c g     F .text	00000068 _init_signal_r
08018c34  w    O .rwdata	00000008 _ZTISt9type_info
08015fe4 g     F .text	00000160 open
08011b04 g     F .text	000000e0 .hidden __gedf2
08016bb8  w    O .rodata	0000000d _ZTSSt9exception
08018c6c g     O .rwdata	00000004 __wctomb
08002768 g     F .text	00000004 _ZNSt9exceptionD0Ev
0800dd30 g     F .text	00000018 __sprint_r
08015b7c g     F .text	0000001c alt_icache_flush_all
08002ac8 g     F .text	00000008 .hidden _Unwind_GetDataRelBase
08018c9c g     O .rwdata	00000004 alt_priority_mask
08008018 g     F .text	00000024 __vfprintf_internal
0800fa80 g     F .text	0000005c _wctomb_r
08014380 g     F .text	00000138 alt_avalon_dma_prepare
08012530 g     F .text	000008d0 .hidden __subdf3
08018c8c g     O .rwdata	00000008 alt_dma_rxchan_list
0800b47c g     F .text	000000b0 __lo0bits
0800031c g     F .text	00000068 _ZN8WiFiUart4openEPKc
08018ca0 g     O .rwdata	00000008 alt_alarm_list
08015a34 g     F .text	0000005c _do_ctors
08003a2c g     F .text	00000014 __sigtramp
080153c4 g     F .text	00000040 alt_up_rs232_get_used_space_in_read_FIFO
0800f978 g     F .text	000000d8 wcrtomb
080130b0 g     F .text	000000d8 close
08016be8  w    O .rodata	00000020 _ZTSN10__cxxabiv115__forced_unwindE
080135f0 g     F .text	00000080 alt_load
080142f0 g     F .text	00000048 alt_avalon_dma_tx_ioctl
08002548 g     F .text	00000044 _ZNKSt9type_info10__do_catchEPKS_PPvj
0800f5b0 g     F .text	00000058 fputwc
080039ec g     F .text	00000014 raise
08002d34 g     F .text	00000014 free
0800a090 g     F .text	00000004 __sinit_lock_acquire
0800b1d4 g     F .text	0000013c __multadd
08001bb4 g     F .text	00000034 _ZN10__cxxabiv117__class_type_infoD0Ev
0800b1ac g     F .text	00000028 _Bfree



Disassembly of section .entry:

08000000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
 8000000:	00420034 	movhi	at,2048
    ori r1, r1, %lo(_start)
 8000004:	08408c14 	ori	at,at,560
    jmp r1
 8000008:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

08000020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
 8000020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
 8000024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
 8000028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
 800002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
 8000030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
 8000034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
 8000038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
 800003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
 8000040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
 8000044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
 8000048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
 800004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
 8000050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
 8000054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
 8000058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
 800005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
 8000060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
 8000064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
 8000068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
 800006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
 8000070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
 8000074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
 8000078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
 800007c:	10000326 	beq	r2,zero,800008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
 8000080:	20000226 	beq	r4,zero,800008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
 8000084:	80000fc0 	call	80000fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
 8000088:	00000706 	br	80000a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw   ea,  72(sp)  /* Don't re-issue */
 800008c:	df401215 	stw	ea,72(sp)
        ldhu.n  r2, 0(r4)
        ldhu.n  r3, 2(r4)
        slli.n  r3, r3, 16
        or.n    r2, r2, r3 /* Instruction that caused exception */
#else
        ldw   r2, -4(ea)   /* Instruction that caused exception */
 8000090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
 8000094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
 8000098:	80001d00 	call	80001d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
 800009c:	1000021e 	bne	r2,zero,80000a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
 80000a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
 80000a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
 80000a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
 80000ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
 80000b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
 80000b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
 80000b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
 80000bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
 80000c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
 80000c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
 80000c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
 80000cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
 80000d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
 80000d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
 80000d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
 80000dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
 80000e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
 80000e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
 80000e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
 80000ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
 80000f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
 80000f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
 80000f8:	ef80083a 	eret

080000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
 80000fc:	defff904 	addi	sp,sp,-28
 8000100:	dfc00615 	stw	ra,24(sp)
 8000104:	df000515 	stw	fp,20(sp)
 8000108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
 800010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 8000110:	0005313a 	rdctl	r2,ipending
 8000114:	e0bffe15 	stw	r2,-8(fp)

  return active;
 8000118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 800011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
 8000120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 8000124:	00800044 	movi	r2,1
 8000128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 800012c:	e0fffb17 	ldw	r3,-20(fp)
 8000130:	e0bffc17 	ldw	r2,-16(fp)
 8000134:	1884703a 	and	r2,r3,r2
 8000138:	10001526 	beq	r2,zero,8000190 <alt_irq_handler+0x94>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
 800013c:	008200b4 	movhi	r2,2050
 8000140:	10aca204 	addi	r2,r2,-19832
 8000144:	e0fffd17 	ldw	r3,-12(fp)
 8000148:	180690fa 	slli	r3,r3,3
 800014c:	10c5883a 	add	r2,r2,r3
 8000150:	10c00017 	ldw	r3,0(r2)
 8000154:	008200b4 	movhi	r2,2050
 8000158:	10aca204 	addi	r2,r2,-19832
 800015c:	e13ffd17 	ldw	r4,-12(fp)
 8000160:	200890fa 	slli	r4,r4,3
 8000164:	1105883a 	add	r2,r2,r4
 8000168:	10800104 	addi	r2,r2,4
 800016c:	10800017 	ldw	r2,0(r2)
 8000170:	1009883a 	mov	r4,r2
 8000174:	e17ffd17 	ldw	r5,-12(fp)
 8000178:	183ee83a 	callr	r3
#endif
        break;
 800017c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 8000180:	0005313a 	rdctl	r2,ipending
 8000184:	e0bfff15 	stw	r2,-4(fp)

  return active;
 8000188:	e0bfff17 	ldw	r2,-4(fp)
 800018c:	00000706 	br	80001ac <alt_irq_handler+0xb0>
      }
      mask <<= 1;
 8000190:	e0bffc17 	ldw	r2,-16(fp)
 8000194:	1085883a 	add	r2,r2,r2
 8000198:	e0bffc15 	stw	r2,-16(fp)
      i++;
 800019c:	e0bffd17 	ldw	r2,-12(fp)
 80001a0:	10800044 	addi	r2,r2,1
 80001a4:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
 80001a8:	003fe006 	br	800012c <__alt_data_end+0xfc00012c>

    active = alt_irq_pending ();
 80001ac:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
 80001b0:	e0bffb17 	ldw	r2,-20(fp)
 80001b4:	103fda1e 	bne	r2,zero,8000120 <__alt_data_end+0xfc000120>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
 80001b8:	0001883a 	nop
}
 80001bc:	e037883a 	mov	sp,fp
 80001c0:	dfc00117 	ldw	ra,4(sp)
 80001c4:	df000017 	ldw	fp,0(sp)
 80001c8:	dec00204 	addi	sp,sp,8
 80001cc:	f800283a 	ret

080001d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
 80001d0:	defffb04 	addi	sp,sp,-20
 80001d4:	dfc00415 	stw	ra,16(sp)
 80001d8:	df000315 	stw	fp,12(sp)
 80001dc:	df000304 	addi	fp,sp,12
 80001e0:	e13fff15 	stw	r4,-4(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
 80001e4:	00bfffc4 	movi	r2,-1
 80001e8:	e0bffd15 	stw	r2,-12(fp)
  badaddr = 0;
 80001ec:	e03ffe15 	stw	zero,-8(fp)
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
 80001f0:	d0a75017 	ldw	r2,-25280(gp)
 80001f4:	10000726 	beq	r2,zero,8000214 <alt_instruction_exception_entry+0x44>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
 80001f8:	d0a75017 	ldw	r2,-25280(gp)
 80001fc:	e0fffd17 	ldw	r3,-12(fp)
 8000200:	1809883a 	mov	r4,r3
 8000204:	e17fff17 	ldw	r5,-4(fp)
 8000208:	e1bffe17 	ldw	r6,-8(fp)
 800020c:	103ee83a 	callr	r2
 8000210:	00000206 	br	800021c <alt_instruction_exception_entry+0x4c>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
 8000214:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
 8000218:	0005883a 	mov	r2,zero
}
 800021c:	e037883a 	mov	sp,fp
 8000220:	dfc00117 	ldw	ra,4(sp)
 8000224:	df000017 	ldw	fp,0(sp)
 8000228:	dec00204 	addi	sp,sp,8
 800022c:	f800283a 	ret

Disassembly of section .text:

08000230 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
 8000230:	06c30034 	movhi	sp,3072
    ori sp, sp, %lo(__alt_stack_pointer)
 8000234:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
 8000238:	068200b4 	movhi	gp,2050
    ori gp, gp, %lo(_gp)
 800023c:	d6830714 	ori	gp,gp,3100
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
 8000240:	00820074 	movhi	r2,2049
    ori r2, r2, %lo(__bss_start)
 8000244:	10aa4514 	ori	r2,r2,43284

    movhi r3, %hi(__bss_end)
 8000248:	00c20074 	movhi	r3,2049
    ori r3, r3, %lo(__bss_end)
 800024c:	18ece214 	ori	r3,r3,45960

    beq r2, r3, 1f
 8000250:	10c00326 	beq	r2,r3,8000260 <_start+0x30>

0:
    stw zero, (r2)
 8000254:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
 8000258:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
 800025c:	10fffd36 	bltu	r2,r3,8000254 <__alt_data_end+0xfc000254>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
 8000260:	80135f00 	call	80135f0 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
 8000264:	801379c0 	call	801379c <alt_main>

08000268 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
 8000268:	003fff06 	br	8000268 <__alt_data_end+0xfc000268>

0800026c <_ZN8WiFiUartC1Ev>:
#include "sys/alt_dev.h"
#include "altera_up_avalon_rs232.h"

char *script = "dofile(\"patch_data.lua\")";

WiFiUart::WiFiUart()
 800026c:	defffe04 	addi	sp,sp,-8
 8000270:	df000115 	stw	fp,4(sp)
 8000274:	df000104 	addi	fp,sp,4
 8000278:	e13fff15 	stw	r4,-4(fp)
 800027c:	e0ffff17 	ldw	r3,-4(fp)
 8000280:	00820074 	movhi	r2,2049
 8000284:	109a6704 	addi	r2,r2,27036
 8000288:	18800015 	stw	r2,0(r3)
{
    // TODO Auto-generated constructor stub
}
 800028c:	e037883a 	mov	sp,fp
 8000290:	df000017 	ldw	fp,0(sp)
 8000294:	dec00104 	addi	sp,sp,4
 8000298:	f800283a 	ret

0800029c <_ZN8WiFiUartD1Ev>:


WiFiUart::~WiFiUart()
 800029c:	defffd04 	addi	sp,sp,-12
 80002a0:	dfc00215 	stw	ra,8(sp)
 80002a4:	df000115 	stw	fp,4(sp)
 80002a8:	df000104 	addi	fp,sp,4
 80002ac:	e13fff15 	stw	r4,-4(fp)
 80002b0:	e0ffff17 	ldw	r3,-4(fp)
 80002b4:	00820074 	movhi	r2,2049
 80002b8:	109a6704 	addi	r2,r2,27036
 80002bc:	18800015 	stw	r2,0(r3)
{
	// TODO Auto-generated destructor stub
}
 80002c0:	0005883a 	mov	r2,zero
 80002c4:	10000226 	beq	r2,zero,80002d0 <_ZN8WiFiUartD1Ev+0x34>
 80002c8:	e13fff17 	ldw	r4,-4(fp)
 80002cc:	8001ddc0 	call	8001ddc <_ZdlPv>
 80002d0:	e037883a 	mov	sp,fp
 80002d4:	dfc00117 	ldw	ra,4(sp)
 80002d8:	df000017 	ldw	fp,0(sp)
 80002dc:	dec00204 	addi	sp,sp,8
 80002e0:	f800283a 	ret

080002e4 <_ZN8WiFiUartD0Ev>:
{
    // TODO Auto-generated constructor stub
}


WiFiUart::~WiFiUart()
 80002e4:	defffd04 	addi	sp,sp,-12
 80002e8:	dfc00215 	stw	ra,8(sp)
 80002ec:	df000115 	stw	fp,4(sp)
 80002f0:	df000104 	addi	fp,sp,4
 80002f4:	e13fff15 	stw	r4,-4(fp)
{
	// TODO Auto-generated destructor stub
}
 80002f8:	e13fff17 	ldw	r4,-4(fp)
 80002fc:	800029c0 	call	800029c <_ZN8WiFiUartD1Ev>
 8000300:	e13fff17 	ldw	r4,-4(fp)
 8000304:	8001ddc0 	call	8001ddc <_ZdlPv>
 8000308:	e037883a 	mov	sp,fp
 800030c:	dfc00117 	ldw	ra,4(sp)
 8000310:	df000017 	ldw	fp,0(sp)
 8000314:	dec00204 	addi	sp,sp,8
 8000318:	f800283a 	ret

0800031c <_ZN8WiFiUart4openEPKc>:


int WiFiUart::open(const char *device_name)
{
 800031c:	defffc04 	addi	sp,sp,-16
 8000320:	dfc00315 	stw	ra,12(sp)
 8000324:	df000215 	stw	fp,8(sp)
 8000328:	df000204 	addi	fp,sp,8
 800032c:	e13ffe15 	stw	r4,-8(fp)
 8000330:	e17fff15 	stw	r5,-4(fp)
	RS232_DEV = alt_up_rs232_open_dev(device_name);
 8000334:	e13fff17 	ldw	r4,-4(fp)
 8000338:	801565c0 	call	801565c <alt_up_rs232_open_dev>
 800033c:	1007883a 	mov	r3,r2
 8000340:	e0bffe17 	ldw	r2,-8(fp)
 8000344:	10c00115 	stw	r3,4(r2)

    // Enable the read interrupts for the RS232 UART core 
    alt_up_rs232_enable_read_interrupt(RS232_DEV);
 8000348:	e0bffe17 	ldw	r2,-8(fp)
 800034c:	10800117 	ldw	r2,4(r2)
 8000350:	1009883a 	mov	r4,r2
 8000354:	80153100 	call	8015310 <alt_up_rs232_enable_read_interrupt>

    if (RS232_DEV == NULL) {
 8000358:	e0bffe17 	ldw	r2,-8(fp)
 800035c:	10800117 	ldw	r2,4(r2)
 8000360:	1000021e 	bne	r2,zero,800036c <_ZN8WiFiUart4openEPKc+0x50>
        return 0;
 8000364:	0005883a 	mov	r2,zero
 8000368:	00000106 	br	8000370 <_ZN8WiFiUart4openEPKc+0x54>
    }
        
    return 1;
 800036c:	00800044 	movi	r2,1
}
 8000370:	e037883a 	mov	sp,fp
 8000374:	dfc00117 	ldw	ra,4(sp)
 8000378:	df000017 	ldw	fp,0(sp)
 800037c:	dec00204 	addi	sp,sp,8
 8000380:	f800283a 	ret

08000384 <_ZN8WiFiUart4initEv>:


int WiFiUart::init()
{
 8000384:	defffa04 	addi	sp,sp,-24
 8000388:	dfc00515 	stw	ra,20(sp)
 800038c:	df000415 	stw	fp,16(sp)
 8000390:	dc000315 	stw	r16,12(sp)
 8000394:	df000404 	addi	fp,sp,16
 8000398:	e13ffe15 	stw	r4,-8(fp)
	if (RS232_DEV == NULL) {
 800039c:	e0bffe17 	ldw	r2,-8(fp)
 80003a0:	10800117 	ldw	r2,4(r2)
 80003a4:	1000051e 	bne	r2,zero,80003bc <_ZN8WiFiUart4initEv+0x38>
        printf("ERROR: Open RS232 port before conencting.\n");
 80003a8:	01020074 	movhi	r4,2049
 80003ac:	211a5404 	addi	r4,r4,26960
 80003b0:	80037340 	call	8003734 <puts>
        return 0;
 80003b4:	0005883a 	mov	r2,zero
 80003b8:	00002606 	br	8000454 <_ZN8WiFiUart4initEv+0xd0>
    }

    flush();    // Clear FIFO
 80003bc:	e13ffe17 	ldw	r4,-8(fp)
 80003c0:	800085c0 	call	800085c <_ZN8WiFiUart5flushEv>

    int i;
    char *crlf = "\r\n";
 80003c4:	00820074 	movhi	r2,2049
 80003c8:	109a5f04 	addi	r2,r2,27004
 80003cc:	e0bffd15 	stw	r2,-12(fp)
    
    for (i = 0; i < 5; i++) {   // Send CRLF multiple times to let the wifi firmware match up the communication baud rate
 80003d0:	e03ffc15 	stw	zero,-16(fp)
 80003d4:	00000b06 	br	8000404 <_ZN8WiFiUart4initEv+0x80>
        write_m(crlf, strlen(crlf));
 80003d8:	e13ffd17 	ldw	r4,-12(fp)
 80003dc:	8003e140 	call	8003e14 <strlen>
 80003e0:	e13ffe17 	ldw	r4,-8(fp)
 80003e4:	e17ffd17 	ldw	r5,-12(fp)
 80003e8:	100d883a 	mov	r6,r2
 80003ec:	800061c0 	call	800061c <_ZN8WiFiUart7write_mEPci>
        flush();
 80003f0:	e13ffe17 	ldw	r4,-8(fp)
 80003f4:	800085c0 	call	800085c <_ZN8WiFiUart5flushEv>
    flush();    // Clear FIFO

    int i;
    char *crlf = "\r\n";
    
    for (i = 0; i < 5; i++) {   // Send CRLF multiple times to let the wifi firmware match up the communication baud rate
 80003f8:	e0bffc17 	ldw	r2,-16(fp)
 80003fc:	10800044 	addi	r2,r2,1
 8000400:	e0bffc15 	stw	r2,-16(fp)
 8000404:	e0bffc17 	ldw	r2,-16(fp)
 8000408:	10800150 	cmplti	r2,r2,5
 800040c:	103ff21e 	bne	r2,zero,80003d8 <__alt_data_end+0xfc0003d8>
        write_m(crlf, strlen(crlf));
        flush();
    }

    write_m(script, strlen(script));
 8000410:	d4200017 	ldw	r16,-32768(gp)
 8000414:	d0a00017 	ldw	r2,-32768(gp)
 8000418:	1009883a 	mov	r4,r2
 800041c:	8003e140 	call	8003e14 <strlen>
 8000420:	e13ffe17 	ldw	r4,-8(fp)
 8000424:	800b883a 	mov	r5,r16
 8000428:	100d883a 	mov	r6,r2
 800042c:	800061c0 	call	800061c <_ZN8WiFiUart7write_mEPci>
    write_s('\r');
 8000430:	e13ffe17 	ldw	r4,-8(fp)
 8000434:	01400344 	movi	r5,13
 8000438:	80007100 	call	8000710 <_ZN8WiFiUart7write_sEh>
    write_s('\n');
 800043c:	e13ffe17 	ldw	r4,-8(fp)
 8000440:	01400284 	movi	r5,10
 8000444:	80007100 	call	8000710 <_ZN8WiFiUart7write_sEh>
    flush();
 8000448:	e13ffe17 	ldw	r4,-8(fp)
 800044c:	800085c0 	call	800085c <_ZN8WiFiUart5flushEv>

    return 1;
 8000450:	00800044 	movi	r2,1
}
 8000454:	e6ffff04 	addi	sp,fp,-4
 8000458:	dfc00217 	ldw	ra,8(sp)
 800045c:	df000117 	ldw	fp,4(sp)
 8000460:	dc000017 	ldw	r16,0(sp)
 8000464:	dec00304 	addi	sp,sp,12
 8000468:	f800283a 	ret

0800046c <_ZN8WiFiUart12update_entryEPViS1_>:


int WiFiUart::update_entry(volatile int *tag_id, volatile int *result)
{
 800046c:	deffea04 	addi	sp,sp,-88
 8000470:	dfc01515 	stw	ra,84(sp)
 8000474:	df001415 	stw	fp,80(sp)
 8000478:	df001404 	addi	fp,sp,80
 800047c:	e13ffd15 	stw	r4,-12(fp)
 8000480:	e17ffe15 	stw	r5,-8(fp)
 8000484:	e1bfff15 	stw	r6,-4(fp)
    const char *result_str = (result) ? "true" : "false";
 8000488:	e0bfff17 	ldw	r2,-4(fp)
 800048c:	10000326 	beq	r2,zero,800049c <_ZN8WiFiUart12update_entryEPViS1_+0x30>
 8000490:	00820074 	movhi	r2,2049
 8000494:	109a6004 	addi	r2,r2,27008
 8000498:	00000206 	br	80004a4 <_ZN8WiFiUart12update_entryEPViS1_+0x38>
 800049c:	00820074 	movhi	r2,2049
 80004a0:	109a6204 	addi	r2,r2,27016
 80004a4:	e0bfed15 	stw	r2,-76(fp)

    char command[50] = "update_db_entry(\"";
 80004a8:	00985934 	movhi	r2,24932
 80004ac:	109c1d44 	addi	r2,r2,28789
 80004b0:	e0bff015 	stw	r2,-64(fp)
 80004b4:	009917f4 	movhi	r2,25695
 80004b8:	10995d04 	addi	r2,r2,25972
 80004bc:	e0bff115 	stw	r2,-60(fp)
 80004c0:	009b9974 	movhi	r2,28261
 80004c4:	1097d884 	addi	r2,r2,24418
 80004c8:	e0bff215 	stw	r2,-56(fp)
 80004cc:	008a1e74 	movhi	r2,10361
 80004d0:	109c9d04 	addi	r2,r2,29300
 80004d4:	e0bff315 	stw	r2,-52(fp)
 80004d8:	00800884 	movi	r2,34
 80004dc:	e0bff415 	stw	r2,-48(fp)
 80004e0:	e03ff515 	stw	zero,-44(fp)
 80004e4:	e03ff615 	stw	zero,-40(fp)
 80004e8:	e03ff715 	stw	zero,-36(fp)
 80004ec:	e03ff815 	stw	zero,-32(fp)
 80004f0:	e03ff915 	stw	zero,-28(fp)
 80004f4:	e03ffa15 	stw	zero,-24(fp)
 80004f8:	e03ffb15 	stw	zero,-20(fp)
 80004fc:	e03ffc0d 	sth	zero,-16(fp)
    char tid_str[8];
	snprintf(tid_str, 8, "%d", tag_id); // covert tag_id from int to string 
 8000500:	e0bfee04 	addi	r2,fp,-72
 8000504:	1009883a 	mov	r4,r2
 8000508:	01400204 	movi	r5,8
 800050c:	01820074 	movhi	r6,2049
 8000510:	319a6404 	addi	r6,r6,27024
 8000514:	e1fffe17 	ldw	r7,-8(fp)
 8000518:	8003b740 	call	8003b74 <snprintf>
    strcat(command,tid_str);
 800051c:	e0fff004 	addi	r3,fp,-64
 8000520:	e0bfee04 	addi	r2,fp,-72
 8000524:	1809883a 	mov	r4,r3
 8000528:	100b883a 	mov	r5,r2
 800052c:	8003c580 	call	8003c58 <strcat>
	strcat(command,"\",");
 8000530:	e0bff004 	addi	r2,fp,-64
 8000534:	1009883a 	mov	r4,r2
 8000538:	8003e140 	call	8003e14 <strlen>
 800053c:	1007883a 	mov	r3,r2
 8000540:	e0bff004 	addi	r2,fp,-64
 8000544:	10c5883a 	add	r2,r2,r3
 8000548:	00c00884 	movi	r3,34
 800054c:	10c00005 	stb	r3,0(r2)
 8000550:	00c00b04 	movi	r3,44
 8000554:	10c00045 	stb	r3,1(r2)
 8000558:	10000085 	stb	zero,2(r2)
    strcat(command, result_str);
 800055c:	e0bff004 	addi	r2,fp,-64
 8000560:	1009883a 	mov	r4,r2
 8000564:	e17fed17 	ldw	r5,-76(fp)
 8000568:	8003c580 	call	8003c58 <strcat>
    strcat(command,")");
 800056c:	e0bff004 	addi	r2,fp,-64
 8000570:	1009883a 	mov	r4,r2
 8000574:	8003e140 	call	8003e14 <strlen>
 8000578:	1007883a 	mov	r3,r2
 800057c:	e0bff004 	addi	r2,fp,-64
 8000580:	10c5883a 	add	r2,r2,r3
 8000584:	00c00a44 	movi	r3,41
 8000588:	10c00005 	stb	r3,0(r2)
 800058c:	10000045 	stb	zero,1(r2)
    
	printf(command);
 8000590:	e0bff004 	addi	r2,fp,-64
 8000594:	1009883a 	mov	r4,r2
 8000598:	80036400 	call	8003640 <printf>

    write_m(command, strlen(command));
 800059c:	e0bff004 	addi	r2,fp,-64
 80005a0:	1009883a 	mov	r4,r2
 80005a4:	8003e140 	call	8003e14 <strlen>
 80005a8:	1007883a 	mov	r3,r2
 80005ac:	e0bff004 	addi	r2,fp,-64
 80005b0:	e13ffd17 	ldw	r4,-12(fp)
 80005b4:	100b883a 	mov	r5,r2
 80005b8:	180d883a 	mov	r6,r3
 80005bc:	800061c0 	call	800061c <_ZN8WiFiUart7write_mEPci>
    write_s('\r');
 80005c0:	e13ffd17 	ldw	r4,-12(fp)
 80005c4:	01400344 	movi	r5,13
 80005c8:	80007100 	call	8000710 <_ZN8WiFiUart7write_sEh>
    write_s('\n');
 80005cc:	e13ffd17 	ldw	r4,-12(fp)
 80005d0:	01400284 	movi	r5,10
 80005d4:	80007100 	call	8000710 <_ZN8WiFiUart7write_sEh>
    for (int i = 0;i < 7000000; i++){};
 80005d8:	e03fec15 	stw	zero,-80(fp)
 80005dc:	00000306 	br	80005ec <_ZN8WiFiUart12update_entryEPViS1_+0x180>
 80005e0:	e0bfec17 	ldw	r2,-80(fp)
 80005e4:	10800044 	addi	r2,r2,1
 80005e8:	e0bfec15 	stw	r2,-80(fp)
 80005ec:	e0ffec17 	ldw	r3,-80(fp)
 80005f0:	00801af4 	movhi	r2,107
 80005f4:	10b3efc4 	addi	r2,r2,-12353
 80005f8:	10fff90e 	bge	r2,r3,80005e0 <__alt_data_end+0xfc0005e0>

    flush();
 80005fc:	e13ffd17 	ldw	r4,-12(fp)
 8000600:	800085c0 	call	800085c <_ZN8WiFiUart5flushEv>
    return 1;
 8000604:	00800044 	movi	r2,1
}
 8000608:	e037883a 	mov	sp,fp
 800060c:	dfc00117 	ldw	ra,4(sp)
 8000610:	df000017 	ldw	fp,0(sp)
 8000614:	dec00204 	addi	sp,sp,8
 8000618:	f800283a 	ret

0800061c <_ZN8WiFiUart7write_mEPci>:


int WiFiUart::write_m(char data[], int length)
{
 800061c:	defffa04 	addi	sp,sp,-24
 8000620:	dfc00515 	stw	ra,20(sp)
 8000624:	df000415 	stw	fp,16(sp)
 8000628:	df000404 	addi	fp,sp,16
 800062c:	e13ffd15 	stw	r4,-12(fp)
 8000630:	e17ffe15 	stw	r5,-8(fp)
 8000634:	e1bfff15 	stw	r6,-4(fp)
    int count;
	for (count = 0; count < length; count++) {
 8000638:	e03ffc15 	stw	zero,-16(fp)
 800063c:	00000b06 	br	800066c <_ZN8WiFiUart7write_mEPci+0x50>
		write_s(data[count]);
 8000640:	e0bffc17 	ldw	r2,-16(fp)
 8000644:	e0fffe17 	ldw	r3,-8(fp)
 8000648:	1885883a 	add	r2,r3,r2
 800064c:	10800003 	ldbu	r2,0(r2)
 8000650:	10803fcc 	andi	r2,r2,255
 8000654:	e13ffd17 	ldw	r4,-12(fp)
 8000658:	100b883a 	mov	r5,r2
 800065c:	80007100 	call	8000710 <_ZN8WiFiUart7write_sEh>


int WiFiUart::write_m(char data[], int length)
{
    int count;
	for (count = 0; count < length; count++) {
 8000660:	e0bffc17 	ldw	r2,-16(fp)
 8000664:	10800044 	addi	r2,r2,1
 8000668:	e0bffc15 	stw	r2,-16(fp)
 800066c:	e0fffc17 	ldw	r3,-16(fp)
 8000670:	e0bfff17 	ldw	r2,-4(fp)
 8000674:	18bff216 	blt	r3,r2,8000640 <__alt_data_end+0xfc000640>
		write_s(data[count]);
	}
    return count;
 8000678:	e0bffc17 	ldw	r2,-16(fp)
}
 800067c:	e037883a 	mov	sp,fp
 8000680:	dfc00117 	ldw	ra,4(sp)
 8000684:	df000017 	ldw	fp,0(sp)
 8000688:	dec00204 	addi	sp,sp,8
 800068c:	f800283a 	ret

08000690 <_ZN8WiFiUart6read_mEPii>:


void WiFiUart::read_m(int *buffer, int length)
{
 8000690:	defff904 	addi	sp,sp,-28
 8000694:	dfc00615 	stw	ra,24(sp)
 8000698:	df000515 	stw	fp,20(sp)
 800069c:	dc000415 	stw	r16,16(sp)
 80006a0:	df000504 	addi	fp,sp,20
 80006a4:	e13ffc15 	stw	r4,-16(fp)
 80006a8:	e17ffd15 	stw	r5,-12(fp)
 80006ac:	e1bffe15 	stw	r6,-8(fp)
    int count;
    for (count = 0; count < length; count++) {
 80006b0:	e03ffb15 	stw	zero,-20(fp)
 80006b4:	00000d06 	br	80006ec <_ZN8WiFiUart6read_mEPii+0x5c>
		buffer[count] = read_s();
 80006b8:	e0bffb17 	ldw	r2,-20(fp)
 80006bc:	1085883a 	add	r2,r2,r2
 80006c0:	1085883a 	add	r2,r2,r2
 80006c4:	1007883a 	mov	r3,r2
 80006c8:	e0bffd17 	ldw	r2,-12(fp)
 80006cc:	10e1883a 	add	r16,r2,r3
 80006d0:	e13ffc17 	ldw	r4,-16(fp)
 80006d4:	80007b40 	call	80007b4 <_ZN8WiFiUart6read_sEv>
 80006d8:	10803fcc 	andi	r2,r2,255
 80006dc:	80800015 	stw	r2,0(r16)


void WiFiUart::read_m(int *buffer, int length)
{
    int count;
    for (count = 0; count < length; count++) {
 80006e0:	e0bffb17 	ldw	r2,-20(fp)
 80006e4:	10800044 	addi	r2,r2,1
 80006e8:	e0bffb15 	stw	r2,-20(fp)
 80006ec:	e0fffb17 	ldw	r3,-20(fp)
 80006f0:	e0bffe17 	ldw	r2,-8(fp)
 80006f4:	18bff016 	blt	r3,r2,80006b8 <__alt_data_end+0xfc0006b8>
		buffer[count] = read_s();
	}
}
 80006f8:	e6ffff04 	addi	sp,fp,-4
 80006fc:	dfc00217 	ldw	ra,8(sp)
 8000700:	df000117 	ldw	fp,4(sp)
 8000704:	dc000017 	ldw	r16,0(sp)
 8000708:	dec00304 	addi	sp,sp,12
 800070c:	f800283a 	ret

08000710 <_ZN8WiFiUart7write_sEh>:


int WiFiUart::write_s(alt_u8 data)
{
 8000710:	defffb04 	addi	sp,sp,-20
 8000714:	dfc00415 	stw	ra,16(sp)
 8000718:	df000315 	stw	fp,12(sp)
 800071c:	df000304 	addi	fp,sp,12
 8000720:	e13ffe15 	stw	r4,-8(fp)
 8000724:	2805883a 	mov	r2,r5
 8000728:	e0bfff05 	stb	r2,-4(fp)
    alt_up_rs232_disable_read_interrupt(RS232_DEV);
 800072c:	e0bffe17 	ldw	r2,-8(fp)
 8000730:	10800117 	ldw	r2,4(r2)
 8000734:	1009883a 	mov	r4,r2
 8000738:	80153680 	call	8015368 <alt_up_rs232_disable_read_interrupt>

    int result = 0;
 800073c:	e03ffd15 	stw	zero,-12(fp)
    WRITE_FIFO_SPACE = alt_up_rs232_get_available_space_in_write_FIFO(RS232_DEV);
 8000740:	e0bffe17 	ldw	r2,-8(fp)
 8000744:	10800117 	ldw	r2,4(r2)
 8000748:	1009883a 	mov	r4,r2
 800074c:	80154040 	call	8015404 <alt_up_rs232_get_available_space_in_write_FIFO>
 8000750:	1007883a 	mov	r3,r2
 8000754:	e0bffe17 	ldw	r2,-8(fp)
 8000758:	10c00215 	stw	r3,8(r2)

    if (WRITE_FIFO_SPACE >= WRITE_FIFO_EMPTY) {
 800075c:	e0bffe17 	ldw	r2,-8(fp)
 8000760:	10800217 	ldw	r2,8(r2)
 8000764:	10802030 	cmpltui	r2,r2,128
 8000768:	1000081e 	bne	r2,zero,800078c <_ZN8WiFiUart7write_sEh+0x7c>
        alt_up_rs232_write_data(RS232_DEV, data);
 800076c:	e0bffe17 	ldw	r2,-8(fp)
 8000770:	10c00117 	ldw	r3,4(r2)
 8000774:	e0bfff03 	ldbu	r2,-4(fp)
 8000778:	1809883a 	mov	r4,r3
 800077c:	100b883a 	mov	r5,r2
 8000780:	80154840 	call	8015484 <alt_up_rs232_write_data>
        result = 1;
 8000784:	00800044 	movi	r2,1
 8000788:	e0bffd15 	stw	r2,-12(fp)
    }

    // Enable the read interrupts for the RS232 UART core 
    alt_up_rs232_enable_read_interrupt(RS232_DEV);
 800078c:	e0bffe17 	ldw	r2,-8(fp)
 8000790:	10800117 	ldw	r2,4(r2)
 8000794:	1009883a 	mov	r4,r2
 8000798:	80153100 	call	8015310 <alt_up_rs232_enable_read_interrupt>
    return result;
 800079c:	e0bffd17 	ldw	r2,-12(fp)
}
 80007a0:	e037883a 	mov	sp,fp
 80007a4:	dfc00117 	ldw	ra,4(sp)
 80007a8:	df000017 	ldw	fp,0(sp)
 80007ac:	dec00204 	addi	sp,sp,8
 80007b0:	f800283a 	ret

080007b4 <_ZN8WiFiUart6read_sEv>:


unsigned char WiFiUart::read_s(void)
{
 80007b4:	defffc04 	addi	sp,sp,-16
 80007b8:	dfc00315 	stw	ra,12(sp)
 80007bc:	df000215 	stw	fp,8(sp)
 80007c0:	df000204 	addi	fp,sp,8
 80007c4:	e13fff15 	stw	r4,-4(fp)
    while (!read_ready()) {}    // Wait for data to be available to read
 80007c8:	0001883a 	nop
 80007cc:	e13fff17 	ldw	r4,-4(fp)
 80007d0:	80008140 	call	8000814 <_ZN8WiFiUart10read_readyEv>
 80007d4:	1005003a 	cmpeq	r2,r2,zero
 80007d8:	10803fcc 	andi	r2,r2,255
 80007dc:	103ffb1e 	bne	r2,zero,80007cc <__alt_data_end+0xfc0007cc>

    alt_u8 buffer;
    alt_u8 parity_error;

    alt_up_rs232_read_data(RS232_DEV, &buffer, &parity_error);
 80007e0:	e0bfff17 	ldw	r2,-4(fp)
 80007e4:	10c00117 	ldw	r3,4(r2)
 80007e8:	e0bffe44 	addi	r2,fp,-7
 80007ec:	1809883a 	mov	r4,r3
 80007f0:	e17ffe04 	addi	r5,fp,-8
 80007f4:	100d883a 	mov	r6,r2
 80007f8:	80154c40 	call	80154c4 <alt_up_rs232_read_data>

    return (unsigned char) buffer;
 80007fc:	e0bffe03 	ldbu	r2,-8(fp)
}
 8000800:	e037883a 	mov	sp,fp
 8000804:	dfc00117 	ldw	ra,4(sp)
 8000808:	df000017 	ldw	fp,0(sp)
 800080c:	dec00204 	addi	sp,sp,8
 8000810:	f800283a 	ret

08000814 <_ZN8WiFiUart10read_readyEv>:


int WiFiUart::read_ready(void)
{
 8000814:	defffc04 	addi	sp,sp,-16
 8000818:	dfc00315 	stw	ra,12(sp)
 800081c:	df000215 	stw	fp,8(sp)
 8000820:	df000204 	addi	fp,sp,8
 8000824:	e13fff15 	stw	r4,-4(fp)
    alt_u16 read_fifo_used = alt_up_rs232_get_used_space_in_read_FIFO(RS232_DEV);
 8000828:	e0bfff17 	ldw	r2,-4(fp)
 800082c:	10800117 	ldw	r2,4(r2)
 8000830:	1009883a 	mov	r4,r2
 8000834:	80153c40 	call	80153c4 <alt_up_rs232_get_used_space_in_read_FIFO>
 8000838:	e0bffe0d 	sth	r2,-8(fp)
    return (read_fifo_used > READ_FIFO_EMPTY);
 800083c:	e0bffe0b 	ldhu	r2,-8(fp)
 8000840:	1004c03a 	cmpne	r2,r2,zero
 8000844:	10803fcc 	andi	r2,r2,255
}
 8000848:	e037883a 	mov	sp,fp
 800084c:	dfc00117 	ldw	ra,4(sp)
 8000850:	df000017 	ldw	fp,0(sp)
 8000854:	dec00204 	addi	sp,sp,8
 8000858:	f800283a 	ret

0800085c <_ZN8WiFiUart5flushEv>:


void WiFiUart::flush(void)
{
 800085c:	defffd04 	addi	sp,sp,-12
 8000860:	dfc00215 	stw	ra,8(sp)
 8000864:	df000115 	stw	fp,4(sp)
 8000868:	df000104 	addi	fp,sp,4
 800086c:	e13fff15 	stw	r4,-4(fp)
    while (read_ready()) {
 8000870:	00000206 	br	800087c <_ZN8WiFiUart5flushEv+0x20>
        // read unwanted char out of fifo receiver buffer
        read_s();
 8000874:	e13fff17 	ldw	r4,-4(fp)
 8000878:	80007b40 	call	80007b4 <_ZN8WiFiUart6read_sEv>
}


void WiFiUart::flush(void)
{
    while (read_ready()) {
 800087c:	e13fff17 	ldw	r4,-4(fp)
 8000880:	80008140 	call	8000814 <_ZN8WiFiUart10read_readyEv>
 8000884:	1004c03a 	cmpne	r2,r2,zero
 8000888:	10803fcc 	andi	r2,r2,255
 800088c:	103ff91e 	bne	r2,zero,8000874 <__alt_data_end+0xfc000874>
        // read unwanted char out of fifo receiver buffer
        read_s();
    }
    return; // no more characters so return 
 8000890:	0001883a 	nop
 8000894:	e037883a 	mov	sp,fp
 8000898:	dfc00117 	ldw	ra,4(sp)
 800089c:	df000017 	ldw	fp,0(sp)
 80008a0:	dec00204 	addi	sp,sp,8
 80008a4:	f800283a 	ret

080008a8 <main>:
#include <stdio.h>
#include "../../src/terasic_includes.h"
#include "../../src/tasks.h"

int main()
{
 80008a8:	defffe04 	addi	sp,sp,-8
 80008ac:	dfc00115 	stw	ra,4(sp)
 80008b0:	df000015 	stw	fp,0(sp)
 80008b4:	d839883a 	mov	fp,sp
  printf("NIOS II SOFTWARE APPLICATION: WIFI TEST\n");
 80008b8:	01020074 	movhi	r4,2049
 80008bc:	211a6c04 	addi	r4,r4,27056
 80008c0:	80037340 	call	8003734 <puts>
  printf("===========================================\n\n");
 80008c4:	01020074 	movhi	r4,2049
 80008c8:	211a7604 	addi	r4,r4,27096
 80008cc:	80037340 	call	8003734 <puts>

  wifi_task();
 80008d0:	80008ec0 	call	80008ec <_Z9wifi_taskv>

  return 0;
 80008d4:	0005883a 	mov	r2,zero
 80008d8:	e037883a 	mov	sp,fp
 80008dc:	dfc00117 	ldw	ra,4(sp)
 80008e0:	df000017 	ldw	fp,0(sp)
 80008e4:	dec00204 	addi	sp,sp,8
 80008e8:	f800283a 	ret

080008ec <_Z9wifi_taskv>:
volatile int *tagid  = (volatile int *) 0x0a900000; /* tag id */
volatile int *result = (volatile int *) 0x0b000004; /* dnn result */


int wifi_task()
{
 80008ec:	deffde04 	addi	sp,sp,-136
 80008f0:	dfc02115 	stw	ra,132(sp)
 80008f4:	df002015 	stw	fp,128(sp)
 80008f8:	ddc01f15 	stw	r23,124(sp)
 80008fc:	dd801e15 	stw	r22,120(sp)
 8000900:	dd401d15 	stw	r21,116(sp)
 8000904:	dd001c15 	stw	r20,112(sp)
 8000908:	dcc01b15 	stw	r19,108(sp)
 800090c:	dc801a15 	stw	r18,104(sp)
 8000910:	dc401915 	stw	r17,100(sp)
 8000914:	dc001815 	stw	r16,96(sp)
 8000918:	df002004 	addi	fp,sp,128
 800091c:	00820034 	movhi	r2,2048
 8000920:	1084f204 	addi	r2,r2,5064
 8000924:	e0bfed15 	stw	r2,-76(fp)
 8000928:	00820074 	movhi	r2,2049
 800092c:	109a3d04 	addi	r2,r2,26868
 8000930:	e0bfee15 	stw	r2,-72(fp)
 8000934:	e0bfef04 	addi	r2,fp,-68
 8000938:	e0ffe004 	addi	r3,fp,-128
 800093c:	10c00015 	stw	r3,0(r2)
 8000940:	00c20034 	movhi	r3,2048
 8000944:	18c2b304 	addi	r3,r3,2764
 8000948:	10c00115 	stw	r3,4(r2)
 800094c:	16c00215 	stw	sp,8(r2)
 8000950:	e0bfe704 	addi	r2,fp,-100
 8000954:	1009883a 	mov	r4,r2
 8000958:	80029f00 	call	80029f0 <_Unwind_SjLj_Register>
    WiFiUart WiFi_UART;
 800095c:	e0ffe404 	addi	r3,fp,-112
 8000960:	00bfffc4 	movi	r2,-1
 8000964:	e0bfe815 	stw	r2,-96(fp)
 8000968:	1809883a 	mov	r4,r3
 800096c:	800026c0 	call	800026c <_ZN8WiFiUartC1Ev>

    int open_success = WiFi_UART.open(WIFI_RS232_UART_NAME);
 8000970:	e0bfe404 	addi	r2,fp,-112
 8000974:	1009883a 	mov	r4,r2
 8000978:	01420074 	movhi	r5,2049
 800097c:	00800044 	movi	r2,1
 8000980:	e0bfe815 	stw	r2,-96(fp)
 8000984:	295a8204 	addi	r5,r5,27144
 8000988:	800031c0 	call	800031c <_ZN8WiFiUart4openEPKc>
 800098c:	e0bfe115 	stw	r2,-124(fp)
    WiFi_UART.flush();
 8000990:	e0bfe404 	addi	r2,fp,-112
 8000994:	1009883a 	mov	r4,r2
 8000998:	800085c0 	call	800085c <_ZN8WiFiUart5flushEv>

    if (!open_success) {
 800099c:	e0bfe117 	ldw	r2,-124(fp)
 80009a0:	1000051e 	bne	r2,zero,80009b8 <_Z9wifi_taskv+0xcc>
        printf("OPEN ERROR: RS232 UART port fail to open.\n");
 80009a4:	01020074 	movhi	r4,2049
 80009a8:	211a8804 	addi	r4,r4,27168
 80009ac:	80037340 	call	8003734 <puts>
        return 0;
 80009b0:	e03ff415 	stw	zero,-48(fp)
 80009b4:	00003d06 	br	8000aac <_Z9wifi_taskv+0x1c0>
    }

    int init_success = WiFi_UART.init();
 80009b8:	e0ffe404 	addi	r3,fp,-112
 80009bc:	00800044 	movi	r2,1
 80009c0:	e0bfe815 	stw	r2,-96(fp)
 80009c4:	1809883a 	mov	r4,r3
 80009c8:	80003840 	call	8000384 <_ZN8WiFiUart4initEv>
 80009cc:	e0bfe215 	stw	r2,-120(fp)

    if (!init_success)
 80009d0:	e0bfe217 	ldw	r2,-120(fp)
 80009d4:	1000031e 	bne	r2,zero,80009e4 <_Z9wifi_taskv+0xf8>
        return -1;
 80009d8:	00bfffc4 	movi	r2,-1
 80009dc:	e0bff415 	stw	r2,-48(fp)
 80009e0:	00003206 	br	8000aac <_Z9wifi_taskv+0x1c0>

    WiFi_UART.update_entry(tagid, result);
 80009e4:	d1600317 	ldw	r5,-32756(gp)
 80009e8:	d0e00417 	ldw	r3,-32752(gp)
 80009ec:	e13fe404 	addi	r4,fp,-112
 80009f0:	00800044 	movi	r2,1
 80009f4:	e0bfe815 	stw	r2,-96(fp)
 80009f8:	180d883a 	mov	r6,r3
 80009fc:	800046c0 	call	800046c <_ZN8WiFiUart12update_entryEPViS1_>

    // Check if 200 is received
    int count = 0;
 8000a00:	e03fe015 	stw	zero,-128(fp)
    char *buffer;
    while (WiFi_UART.read_ready()) {
 8000a04:	00000e06 	br	8000a40 <_Z9wifi_taskv+0x154>
        buffer[count] = WiFi_UART.read_s();
 8000a08:	e0bfe017 	ldw	r2,-128(fp)
 8000a0c:	e0ffe317 	ldw	r3,-116(fp)
 8000a10:	1887883a 	add	r3,r3,r2
 8000a14:	e0fff515 	stw	r3,-44(fp)
 8000a18:	e0ffe404 	addi	r3,fp,-112
 8000a1c:	00800044 	movi	r2,1
 8000a20:	e0bfe815 	stw	r2,-96(fp)
 8000a24:	1809883a 	mov	r4,r3
 8000a28:	80007b40 	call	80007b4 <_ZN8WiFiUart6read_sEv>
 8000a2c:	e0fff517 	ldw	r3,-44(fp)
 8000a30:	18800005 	stb	r2,0(r3)
        count++;
 8000a34:	e0bfe017 	ldw	r2,-128(fp)
 8000a38:	10800044 	addi	r2,r2,1
 8000a3c:	e0bfe015 	stw	r2,-128(fp)
    WiFi_UART.update_entry(tagid, result);

    // Check if 200 is received
    int count = 0;
    char *buffer;
    while (WiFi_UART.read_ready()) {
 8000a40:	e0ffe404 	addi	r3,fp,-112
 8000a44:	00800044 	movi	r2,1
 8000a48:	e0bfe815 	stw	r2,-96(fp)
 8000a4c:	1809883a 	mov	r4,r3
 8000a50:	80008140 	call	8000814 <_ZN8WiFiUart10read_readyEv>
 8000a54:	1004c03a 	cmpne	r2,r2,zero
 8000a58:	10803fcc 	andi	r2,r2,255
 8000a5c:	103fea1e 	bne	r2,zero,8000a08 <__alt_data_end+0xfc000a08>
        buffer[count] = WiFi_UART.read_s();
        count++;
    }

	printf(buffer);
 8000a60:	e13fe317 	ldw	r4,-116(fp)
 8000a64:	80036400 	call	8003640 <printf>
	
	if (strcmp(buffer,"200\r\n") == 0) {
 8000a68:	e13fe317 	ldw	r4,-116(fp)
 8000a6c:	01420074 	movhi	r5,2049
 8000a70:	295a9304 	addi	r5,r5,27212
 8000a74:	8003ce00 	call	8003ce0 <strcmp>
 8000a78:	1000051e 	bne	r2,zero,8000a90 <_Z9wifi_taskv+0x1a4>
        printf("ERROR: Failed to updated database entry.\n");
 8000a7c:	01020074 	movhi	r4,2049
 8000a80:	211a9504 	addi	r4,r4,27220
 8000a84:	80037340 	call	8003734 <puts>
        return 0;
 8000a88:	e03ff415 	stw	zero,-48(fp)
 8000a8c:	00000706 	br	8000aac <_Z9wifi_taskv+0x1c0>
    }
		
    printf("UPDATE SUCCESS: Database entry updated.\n");
 8000a90:	01020074 	movhi	r4,2049
 8000a94:	00800044 	movi	r2,1
 8000a98:	e0bfe815 	stw	r2,-96(fp)
 8000a9c:	211aa004 	addi	r4,r4,27264
 8000aa0:	80037340 	call	8003734 <puts>
    return 1;
 8000aa4:	00800044 	movi	r2,1
 8000aa8:	e0bff415 	stw	r2,-48(fp)
 8000aac:	e0ffe404 	addi	r3,fp,-112
 8000ab0:	00bfffc4 	movi	r2,-1
 8000ab4:	e0bfe815 	stw	r2,-96(fp)
 8000ab8:	1809883a 	mov	r4,r3
 8000abc:	800029c0 	call	800029c <_ZN8WiFiUartD1Ev>
 8000ac0:	e0fff417 	ldw	r3,-48(fp)
 8000ac4:	e0fff615 	stw	r3,-40(fp)
 8000ac8:	00000c06 	br	8000afc <_Z9wifi_taskv+0x210>
 8000acc:	e7002004 	addi	fp,fp,128
 8000ad0:	e0bfe917 	ldw	r2,-92(fp)
 8000ad4:	e0bff715 	stw	r2,-36(fp)
 8000ad8:	e0bfe404 	addi	r2,fp,-112
 8000adc:	e03fe815 	stw	zero,-96(fp)
 8000ae0:	1009883a 	mov	r4,r2
 8000ae4:	800029c0 	call	800029c <_ZN8WiFiUartD1Ev>
 8000ae8:	e0fff717 	ldw	r3,-36(fp)
 8000aec:	00bfffc4 	movi	r2,-1
 8000af0:	e0bfe815 	stw	r2,-96(fp)
 8000af4:	1809883a 	mov	r4,r3
 8000af8:	8002bec0 	call	8002bec <_Unwind_SjLj_Resume>
 8000afc:	e0bfe704 	addi	r2,fp,-100
 8000b00:	1009883a 	mov	r4,r2
 8000b04:	8002a080 	call	8002a08 <_Unwind_SjLj_Unregister>
 8000b08:	e0bff617 	ldw	r2,-40(fp)
 8000b0c:	e6fff804 	addi	sp,fp,-32
 8000b10:	dfc00917 	ldw	ra,36(sp)
 8000b14:	df000817 	ldw	fp,32(sp)
 8000b18:	ddc00717 	ldw	r23,28(sp)
 8000b1c:	dd800617 	ldw	r22,24(sp)
 8000b20:	dd400517 	ldw	r21,20(sp)
 8000b24:	dd000417 	ldw	r20,16(sp)
 8000b28:	dcc00317 	ldw	r19,12(sp)
 8000b2c:	dc800217 	ldw	r18,8(sp)
 8000b30:	dc400117 	ldw	r17,4(sp)
 8000b34:	dc000017 	ldw	r16,0(sp)
 8000b38:	dec00a04 	addi	sp,sp,40
 8000b3c:	f800283a 	ret

08000b40 <_ZL12read_sleb128PKhPl>:
 8000b40:	0011883a 	mov	r8,zero
 8000b44:	000d883a 	mov	r6,zero
 8000b48:	21c00003 	ldbu	r7,0(r4)
 8000b4c:	20800044 	addi	r2,r4,1
 8000b50:	1009883a 	mov	r4,r2
 8000b54:	38c01fcc 	andi	r3,r7,127
 8000b58:	1986983a 	sll	r3,r3,r6
 8000b5c:	3a403fcc 	andi	r9,r7,255
 8000b60:	4a40201c 	xori	r9,r9,128
 8000b64:	4a7fe004 	addi	r9,r9,-128
 8000b68:	40d0b03a 	or	r8,r8,r3
 8000b6c:	318001c4 	addi	r6,r6,7
 8000b70:	483ff516 	blt	r9,zero,8000b48 <__alt_data_end+0xfc000b48>
 8000b74:	00c007c4 	movi	r3,31
 8000b78:	19800536 	bltu	r3,r6,8000b90 <_ZL12read_sleb128PKhPl+0x50>
 8000b7c:	39c0100c 	andi	r7,r7,64
 8000b80:	38000326 	beq	r7,zero,8000b90 <_ZL12read_sleb128PKhPl+0x50>
 8000b84:	00ffffc4 	movi	r3,-1
 8000b88:	198c983a 	sll	r6,r3,r6
 8000b8c:	3210b03a 	or	r8,r6,r8
 8000b90:	2a000015 	stw	r8,0(r5)
 8000b94:	f800283a 	ret

08000b98 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv>:
 8000b98:	28800017 	ldw	r2,0(r5)
 8000b9c:	30c00017 	ldw	r3,0(r6)
 8000ba0:	defffb04 	addi	sp,sp,-20
 8000ba4:	10800217 	ldw	r2,8(r2)
 8000ba8:	dc400315 	stw	r17,12(sp)
 8000bac:	dc000215 	stw	r16,8(sp)
 8000bb0:	d9400115 	stw	r5,4(sp)
 8000bb4:	dfc00415 	stw	ra,16(sp)
 8000bb8:	2021883a 	mov	r16,r4
 8000bbc:	d8c00015 	stw	r3,0(sp)
 8000bc0:	2809883a 	mov	r4,r5
 8000bc4:	3023883a 	mov	r17,r6
 8000bc8:	103ee83a 	callr	r2
 8000bcc:	10803fcc 	andi	r2,r2,255
 8000bd0:	d9400117 	ldw	r5,4(sp)
 8000bd4:	10000326 	beq	r2,zero,8000be4 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv+0x4c>
 8000bd8:	d8800017 	ldw	r2,0(sp)
 8000bdc:	10800017 	ldw	r2,0(r2)
 8000be0:	d8800015 	stw	r2,0(sp)
 8000be4:	80800017 	ldw	r2,0(r16)
 8000be8:	8009883a 	mov	r4,r16
 8000bec:	d80d883a 	mov	r6,sp
 8000bf0:	10800417 	ldw	r2,16(r2)
 8000bf4:	01c00044 	movi	r7,1
 8000bf8:	103ee83a 	callr	r2
 8000bfc:	10c03fcc 	andi	r3,r2,255
 8000c00:	18000226 	beq	r3,zero,8000c0c <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv+0x74>
 8000c04:	d8c00017 	ldw	r3,0(sp)
 8000c08:	88c00015 	stw	r3,0(r17)
 8000c0c:	dfc00417 	ldw	ra,16(sp)
 8000c10:	dc400317 	ldw	r17,12(sp)
 8000c14:	dc000217 	ldw	r16,8(sp)
 8000c18:	dec00504 	addi	sp,sp,20
 8000c1c:	f800283a 	ret

08000c20 <_ZL21size_of_encoded_valueh>:
 8000c20:	deffff04 	addi	sp,sp,-4
 8000c24:	dfc00015 	stw	ra,0(sp)
 8000c28:	00803fc4 	movi	r2,255
 8000c2c:	20802026 	beq	r4,r2,8000cb0 <_ZL21size_of_encoded_valueh+0x90>
 8000c30:	210001cc 	andi	r4,r4,7
 8000c34:	00800144 	movi	r2,5
 8000c38:	11001c36 	bltu	r2,r4,8000cac <_ZL21size_of_encoded_valueh+0x8c>
 8000c3c:	200890ba 	slli	r4,r4,2
 8000c40:	00820034 	movhi	r2,2048
 8000c44:	10831504 	addi	r2,r2,3156
 8000c48:	2089883a 	add	r4,r4,r2
 8000c4c:	20800017 	ldw	r2,0(r4)
 8000c50:	1000683a 	jmp	r2
 8000c54:	08000c6c 	andhi	zero,at,49
 8000c58:	08000cac 	andhi	zero,at,50
 8000c5c:	08000c7c 	xorhi	zero,at,49
 8000c60:	08000c6c 	andhi	zero,at,49
 8000c64:	08000c9c 	xori	zero,at,50
 8000c68:	08000c8c 	andi	zero,at,50
 8000c6c:	00800104 	movi	r2,4
 8000c70:	dfc00017 	ldw	ra,0(sp)
 8000c74:	dec00104 	addi	sp,sp,4
 8000c78:	f800283a 	ret
 8000c7c:	00800084 	movi	r2,2
 8000c80:	dfc00017 	ldw	ra,0(sp)
 8000c84:	dec00104 	addi	sp,sp,4
 8000c88:	f800283a 	ret
 8000c8c:	00800044 	movi	r2,1
 8000c90:	dfc00017 	ldw	ra,0(sp)
 8000c94:	dec00104 	addi	sp,sp,4
 8000c98:	f800283a 	ret
 8000c9c:	00800204 	movi	r2,8
 8000ca0:	dfc00017 	ldw	ra,0(sp)
 8000ca4:	dec00104 	addi	sp,sp,4
 8000ca8:	f800283a 	ret
 8000cac:	8002d080 	call	8002d08 <abort>
 8000cb0:	0005883a 	mov	r2,zero
 8000cb4:	dfc00017 	ldw	ra,0(sp)
 8000cb8:	dec00104 	addi	sp,sp,4
 8000cbc:	f800283a 	ret

08000cc0 <_ZL28read_encoded_value_with_basehjPKhPj>:
 8000cc0:	defffa04 	addi	sp,sp,-24
 8000cc4:	dc000315 	stw	r16,12(sp)
 8000cc8:	dfc00515 	stw	ra,20(sp)
 8000ccc:	dc400415 	stw	r17,16(sp)
 8000cd0:	00801404 	movi	r2,80
 8000cd4:	2021883a 	mov	r16,r4
 8000cd8:	20807526 	beq	r4,r2,8000eb0 <_ZL28read_encoded_value_with_basehjPKhPj+0x1f0>
 8000cdc:	208003cc 	andi	r2,r4,15
 8000ce0:	00c00304 	movi	r3,12
 8000ce4:	18807136 	bltu	r3,r2,8000eac <_ZL28read_encoded_value_with_basehjPKhPj+0x1ec>
 8000ce8:	100490ba 	slli	r2,r2,2
 8000cec:	00c20034 	movhi	r3,2048
 8000cf0:	18c34104 	addi	r3,r3,3332
 8000cf4:	10c5883a 	add	r2,r2,r3
 8000cf8:	10800017 	ldw	r2,0(r2)
 8000cfc:	2823883a 	mov	r17,r5
 8000d00:	1000683a 	jmp	r2
 8000d04:	08000dec 	andhi	zero,at,55
 8000d08:	08000e1c 	xori	zero,at,56
 8000d0c:	08000dd4 	ori	zero,at,55
 8000d10:	08000d38 	rdprs	zero,at,52
 8000d14:	08000da4 	muli	zero,at,54
 8000d18:	08000e58 	cmpnei	zero,at,57
 8000d1c:	08000eac 	andhi	zero,at,58
 8000d20:	08000eac 	andhi	zero,at,58
 8000d24:	08000eac 	andhi	zero,at,58
 8000d28:	08000e64 	muli	zero,at,57
 8000d2c:	08000e88 	cmpgei	zero,at,58
 8000d30:	08000d38 	rdprs	zero,at,52
 8000d34:	08000da4 	muli	zero,at,54
 8000d38:	30800043 	ldbu	r2,1(r6)
 8000d3c:	30c00083 	ldbu	r3,2(r6)
 8000d40:	310000c3 	ldbu	r4,3(r6)
 8000d44:	32000003 	ldbu	r8,0(r6)
 8000d48:	1004923a 	slli	r2,r2,8
 8000d4c:	1806943a 	slli	r3,r3,16
 8000d50:	2008963a 	slli	r4,r4,24
 8000d54:	1204b03a 	or	r2,r2,r8
 8000d58:	1884b03a 	or	r2,r3,r2
 8000d5c:	2086b03a 	or	r3,r4,r2
 8000d60:	30800104 	addi	r2,r6,4
 8000d64:	18000926 	beq	r3,zero,8000d8c <_ZL28read_encoded_value_with_basehjPKhPj+0xcc>
 8000d68:	81401c0c 	andi	r5,r16,112
 8000d6c:	01000404 	movi	r4,16
 8000d70:	29005526 	beq	r5,r4,8000ec8 <_ZL28read_encoded_value_with_basehjPKhPj+0x208>
 8000d74:	84003fcc 	andi	r16,r16,255
 8000d78:	8400201c 	xori	r16,r16,128
 8000d7c:	843fe004 	addi	r16,r16,-128
 8000d80:	1c47883a 	add	r3,r3,r17
 8000d84:	8000010e 	bge	r16,zero,8000d8c <_ZL28read_encoded_value_with_basehjPKhPj+0xcc>
 8000d88:	18c00017 	ldw	r3,0(r3)
 8000d8c:	38c00015 	stw	r3,0(r7)
 8000d90:	dfc00517 	ldw	ra,20(sp)
 8000d94:	dc400417 	ldw	r17,16(sp)
 8000d98:	dc000317 	ldw	r16,12(sp)
 8000d9c:	dec00604 	addi	sp,sp,24
 8000da0:	f800283a 	ret
 8000da4:	30800043 	ldbu	r2,1(r6)
 8000da8:	30c00083 	ldbu	r3,2(r6)
 8000dac:	310000c3 	ldbu	r4,3(r6)
 8000db0:	32000003 	ldbu	r8,0(r6)
 8000db4:	1004923a 	slli	r2,r2,8
 8000db8:	1806943a 	slli	r3,r3,16
 8000dbc:	2008963a 	slli	r4,r4,24
 8000dc0:	1204b03a 	or	r2,r2,r8
 8000dc4:	1884b03a 	or	r2,r3,r2
 8000dc8:	2086b03a 	or	r3,r4,r2
 8000dcc:	30800204 	addi	r2,r6,8
 8000dd0:	003fe406 	br	8000d64 <__alt_data_end+0xfc000d64>
 8000dd4:	30c00043 	ldbu	r3,1(r6)
 8000dd8:	32000003 	ldbu	r8,0(r6)
 8000ddc:	30800084 	addi	r2,r6,2
 8000de0:	1806923a 	slli	r3,r3,8
 8000de4:	1a06b03a 	or	r3,r3,r8
 8000de8:	003fde06 	br	8000d64 <__alt_data_end+0xfc000d64>
 8000dec:	30800043 	ldbu	r2,1(r6)
 8000df0:	30c00083 	ldbu	r3,2(r6)
 8000df4:	314000c3 	ldbu	r5,3(r6)
 8000df8:	31000003 	ldbu	r4,0(r6)
 8000dfc:	1004923a 	slli	r2,r2,8
 8000e00:	1806943a 	slli	r3,r3,16
 8000e04:	280a963a 	slli	r5,r5,24
 8000e08:	1104b03a 	or	r2,r2,r4
 8000e0c:	1884b03a 	or	r2,r3,r2
 8000e10:	2886b03a 	or	r3,r5,r2
 8000e14:	30800104 	addi	r2,r6,4
 8000e18:	003fd206 	br	8000d64 <__alt_data_end+0xfc000d64>
 8000e1c:	3013883a 	mov	r9,r6
 8000e20:	0007883a 	mov	r3,zero
 8000e24:	0011883a 	mov	r8,zero
 8000e28:	49000003 	ldbu	r4,0(r9)
 8000e2c:	48800044 	addi	r2,r9,1
 8000e30:	1013883a 	mov	r9,r2
 8000e34:	21401fcc 	andi	r5,r4,127
 8000e38:	2a0a983a 	sll	r5,r5,r8
 8000e3c:	21003fcc 	andi	r4,r4,255
 8000e40:	2100201c 	xori	r4,r4,128
 8000e44:	213fe004 	addi	r4,r4,-128
 8000e48:	1946b03a 	or	r3,r3,r5
 8000e4c:	420001c4 	addi	r8,r8,7
 8000e50:	203ff516 	blt	r4,zero,8000e28 <__alt_data_end+0xfc000e28>
 8000e54:	003fc306 	br	8000d64 <__alt_data_end+0xfc000d64>
 8000e58:	30c00003 	ldbu	r3,0(r6)
 8000e5c:	30800044 	addi	r2,r6,1
 8000e60:	003fc006 	br	8000d64 <__alt_data_end+0xfc000d64>
 8000e64:	3009883a 	mov	r4,r6
 8000e68:	d80b883a 	mov	r5,sp
 8000e6c:	d9800115 	stw	r6,4(sp)
 8000e70:	d9c00215 	stw	r7,8(sp)
 8000e74:	8000b400 	call	8000b40 <_ZL12read_sleb128PKhPl>
 8000e78:	d8c00017 	ldw	r3,0(sp)
 8000e7c:	d9800117 	ldw	r6,4(sp)
 8000e80:	d9c00217 	ldw	r7,8(sp)
 8000e84:	003fb706 	br	8000d64 <__alt_data_end+0xfc000d64>
 8000e88:	30c00043 	ldbu	r3,1(r6)
 8000e8c:	32000003 	ldbu	r8,0(r6)
 8000e90:	30800084 	addi	r2,r6,2
 8000e94:	1806923a 	slli	r3,r3,8
 8000e98:	1a06b03a 	or	r3,r3,r8
 8000e9c:	18ffffcc 	andi	r3,r3,65535
 8000ea0:	18e0001c 	xori	r3,r3,32768
 8000ea4:	18e00004 	addi	r3,r3,-32768
 8000ea8:	003fae06 	br	8000d64 <__alt_data_end+0xfc000d64>
 8000eac:	8002d080 	call	8002d08 <abort>
 8000eb0:	318000c4 	addi	r6,r6,3
 8000eb4:	00bfff04 	movi	r2,-4
 8000eb8:	3084703a 	and	r2,r6,r2
 8000ebc:	10c00017 	ldw	r3,0(r2)
 8000ec0:	10800104 	addi	r2,r2,4
 8000ec4:	003fb106 	br	8000d8c <__alt_data_end+0xfc000d8c>
 8000ec8:	3023883a 	mov	r17,r6
 8000ecc:	003fa906 	br	8000d74 <__alt_data_end+0xfc000d74>

08000ed0 <_ZL15get_ttype_entryP16lsda_header_infom>:
 8000ed0:	defffc04 	addi	sp,sp,-16
 8000ed4:	dfc00315 	stw	ra,12(sp)
 8000ed8:	dc000215 	stw	r16,8(sp)
 8000edc:	2021883a 	mov	r16,r4
 8000ee0:	21000503 	ldbu	r4,20(r4)
 8000ee4:	d9400115 	stw	r5,4(sp)
 8000ee8:	8000c200 	call	8000c20 <_ZL21size_of_encoded_valueh>
 8000eec:	d9400117 	ldw	r5,4(sp)
 8000ef0:	1009883a 	mov	r4,r2
 8000ef4:	80027c00 	call	80027c0 <__mulsi3>
 8000ef8:	81800317 	ldw	r6,12(r16)
 8000efc:	81000503 	ldbu	r4,20(r16)
 8000f00:	81400217 	ldw	r5,8(r16)
 8000f04:	308dc83a 	sub	r6,r6,r2
 8000f08:	d80f883a 	mov	r7,sp
 8000f0c:	8000cc00 	call	8000cc0 <_ZL28read_encoded_value_with_basehjPKhPj>
 8000f10:	d8800017 	ldw	r2,0(sp)
 8000f14:	dfc00317 	ldw	ra,12(sp)
 8000f18:	dc000217 	ldw	r16,8(sp)
 8000f1c:	dec00404 	addi	sp,sp,16
 8000f20:	f800283a 	ret

08000f24 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl>:
 8000f24:	defffb04 	addi	sp,sp,-20
 8000f28:	dc000115 	stw	r16,4(sp)
 8000f2c:	24000317 	ldw	r16,12(r4)
 8000f30:	01ce303a 	nor	r7,zero,r7
 8000f34:	dc800315 	stw	r18,12(sp)
 8000f38:	dc400215 	stw	r17,8(sp)
 8000f3c:	dfc00415 	stw	ra,16(sp)
 8000f40:	2023883a 	mov	r17,r4
 8000f44:	2825883a 	mov	r18,r5
 8000f48:	d9800015 	stw	r6,0(sp)
 8000f4c:	81e1883a 	add	r16,r16,r7
 8000f50:	8009883a 	mov	r4,r16
 8000f54:	000b883a 	mov	r5,zero
 8000f58:	000d883a 	mov	r6,zero
 8000f5c:	20800003 	ldbu	r2,0(r4)
 8000f60:	84000044 	addi	r16,r16,1
 8000f64:	8009883a 	mov	r4,r16
 8000f68:	10c01fcc 	andi	r3,r2,127
 8000f6c:	1986983a 	sll	r3,r3,r6
 8000f70:	10803fcc 	andi	r2,r2,255
 8000f74:	1080201c 	xori	r2,r2,128
 8000f78:	10bfe004 	addi	r2,r2,-128
 8000f7c:	28cab03a 	or	r5,r5,r3
 8000f80:	318001c4 	addi	r6,r6,7
 8000f84:	103ff516 	blt	r2,zero,8000f5c <__alt_data_end+0xfc000f5c>
 8000f88:	28000e26 	beq	r5,zero,8000fc4 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0xa0>
 8000f8c:	8809883a 	mov	r4,r17
 8000f90:	8000ed00 	call	8000ed0 <_ZL15get_ttype_entryP16lsda_header_infom>
 8000f94:	1009883a 	mov	r4,r2
 8000f98:	900b883a 	mov	r5,r18
 8000f9c:	d80d883a 	mov	r6,sp
 8000fa0:	8000b980 	call	8000b98 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv>
 8000fa4:	10c03fcc 	andi	r3,r2,255
 8000fa8:	183fe926 	beq	r3,zero,8000f50 <__alt_data_end+0xfc000f50>
 8000fac:	dfc00417 	ldw	ra,16(sp)
 8000fb0:	dc800317 	ldw	r18,12(sp)
 8000fb4:	dc400217 	ldw	r17,8(sp)
 8000fb8:	dc000117 	ldw	r16,4(sp)
 8000fbc:	dec00504 	addi	sp,sp,20
 8000fc0:	f800283a 	ret
 8000fc4:	0005883a 	mov	r2,zero
 8000fc8:	003ff806 	br	8000fac <__alt_data_end+0xfc000fac>

08000fcc <_ZL21base_of_encoded_valuehP15_Unwind_Context>:
 8000fcc:	deffff04 	addi	sp,sp,-4
 8000fd0:	dfc00015 	stw	ra,0(sp)
 8000fd4:	00803fc4 	movi	r2,255
 8000fd8:	20800e26 	beq	r4,r2,8001014 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x48>
 8000fdc:	20801c0c 	andi	r2,r4,112
 8000fe0:	00c00804 	movi	r3,32
 8000fe4:	10c01726 	beq	r2,r3,8001044 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x78>
 8000fe8:	18800e2e 	bgeu	r3,r2,8001024 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x58>
 8000fec:	00c01004 	movi	r3,64
 8000ff0:	10c01026 	beq	r2,r3,8001034 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x68>
 8000ff4:	00c01404 	movi	r3,80
 8000ff8:	10c00626 	beq	r2,r3,8001014 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x48>
 8000ffc:	00c00c04 	movi	r3,48
 8001000:	10c00b1e 	bne	r2,r3,8001030 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x64>
 8001004:	2809883a 	mov	r4,r5
 8001008:	dfc00017 	ldw	ra,0(sp)
 800100c:	dec00104 	addi	sp,sp,4
 8001010:	8002ac81 	jmpi	8002ac8 <_Unwind_GetDataRelBase>
 8001014:	0005883a 	mov	r2,zero
 8001018:	dfc00017 	ldw	ra,0(sp)
 800101c:	dec00104 	addi	sp,sp,4
 8001020:	f800283a 	ret
 8001024:	103ffb26 	beq	r2,zero,8001014 <__alt_data_end+0xfc001014>
 8001028:	00c00404 	movi	r3,16
 800102c:	10fff926 	beq	r2,r3,8001014 <__alt_data_end+0xfc001014>
 8001030:	8002d080 	call	8002d08 <abort>
 8001034:	2809883a 	mov	r4,r5
 8001038:	dfc00017 	ldw	ra,0(sp)
 800103c:	dec00104 	addi	sp,sp,4
 8001040:	8002ab81 	jmpi	8002ab8 <_Unwind_GetRegionStart>
 8001044:	2809883a 	mov	r4,r5
 8001048:	dfc00017 	ldw	ra,0(sp)
 800104c:	dec00104 	addi	sp,sp,4
 8001050:	8002ad01 	jmpi	8002ad0 <_Unwind_GetTextRelBase>

08001054 <_ZL28check_compact_exception_specPKSt9type_infoPvPKhij>:
 8001054:	defff104 	addi	sp,sp,-60
 8001058:	dd800b15 	stw	r22,44(sp)
 800105c:	382dd23a 	srai	r22,r7,8
 8001060:	dd400a15 	stw	r21,40(sp)
 8001064:	dd000915 	stw	r20,36(sp)
 8001068:	dfc00e15 	stw	ra,56(sp)
 800106c:	df000d15 	stw	fp,52(sp)
 8001070:	ddc00c15 	stw	r23,48(sp)
 8001074:	dcc00815 	stw	r19,32(sp)
 8001078:	dc800715 	stw	r18,28(sp)
 800107c:	dc400615 	stw	r17,24(sp)
 8001080:	dc000515 	stw	r16,20(sp)
 8001084:	d9c00315 	stw	r7,12(sp)
 8001088:	d9400215 	stw	r5,8(sp)
 800108c:	2029883a 	mov	r20,r4
 8001090:	dd400f17 	ldw	r21,60(sp)
 8001094:	b000010e 	bge	r22,zero,800109c <_ZL28check_compact_exception_specPKSt9type_infoPvPKhij+0x48>
 8001098:	05adc83a 	sub	r22,zero,r22
 800109c:	01000144 	movi	r4,5
 80010a0:	000b883a 	mov	r5,zero
 80010a4:	d9800415 	stw	r6,16(sp)
 80010a8:	8000fcc0 	call	8000fcc <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 80010ac:	d9800417 	ldw	r6,16(sp)
 80010b0:	100b883a 	mov	r5,r2
 80010b4:	d9c00104 	addi	r7,sp,4
 80010b8:	01000144 	movi	r4,5
 80010bc:	8000cc00 	call	8000cc0 <_ZL28read_encoded_value_with_basehjPKhPj>
 80010c0:	1009883a 	mov	r4,r2
 80010c4:	017ffe44 	movi	r5,-7
 80010c8:	1021883a 	mov	r16,r2
 80010cc:	80027c00 	call	80027c0 <__mulsi3>
 80010d0:	1027883a 	mov	r19,r2
 80010d4:	002f883a 	mov	r23,zero
 80010d8:	84400003 	ldbu	r17,0(r16)
 80010dc:	8009883a 	mov	r4,r16
 80010e0:	014001c4 	movi	r5,7
 80010e4:	80027c00 	call	80027c0 <__mulsi3>
 80010e8:	88c01fcc 	andi	r3,r17,127
 80010ec:	14c5883a 	add	r2,r2,r19
 80010f0:	1886983a 	sll	r3,r3,r2
 80010f4:	8c403fcc 	andi	r17,r17,255
 80010f8:	8c40201c 	xori	r17,r17,128
 80010fc:	8c7fe004 	addi	r17,r17,-128
 8001100:	84000044 	addi	r16,r16,1
 8001104:	b8eeb03a 	or	r23,r23,r3
 8001108:	883ff316 	blt	r17,zero,80010d8 <__alt_data_end+0xfc0010d8>
 800110c:	85e1883a 	add	r16,r16,r23
 8001110:	8009883a 	mov	r4,r16
 8001114:	017ffe44 	movi	r5,-7
 8001118:	80027c00 	call	80027c0 <__mulsi3>
 800111c:	102f883a 	mov	r23,r2
 8001120:	8007883a 	mov	r3,r16
 8001124:	0025883a 	mov	r18,zero
 8001128:	1cc00003 	ldbu	r19,0(r3)
 800112c:	1809883a 	mov	r4,r3
 8001130:	014001c4 	movi	r5,7
 8001134:	1c400044 	addi	r17,r3,1
 8001138:	80027c00 	call	80027c0 <__mulsi3>
 800113c:	98c01fcc 	andi	r3,r19,127
 8001140:	15c5883a 	add	r2,r2,r23
 8001144:	1884983a 	sll	r2,r3,r2
 8001148:	9cc03fcc 	andi	r19,r19,255
 800114c:	9cc0201c 	xori	r19,r19,128
 8001150:	9cffe004 	addi	r19,r19,-128
 8001154:	8807883a 	mov	r3,r17
 8001158:	90a4b03a 	or	r18,r18,r2
 800115c:	983ff216 	blt	r19,zero,8001128 <__alt_data_end+0xfc001128>
 8001160:	b7003fcc 	andi	fp,r22,255
 8001164:	e73fffc4 	addi	fp,fp,-1
 8001168:	8f39883a 	add	fp,r17,fp
 800116c:	840000c4 	addi	r16,r16,3
 8001170:	848d883a 	add	r6,r16,r18
 8001174:	e009883a 	mov	r4,fp
 8001178:	017ffe44 	movi	r5,-7
 800117c:	04ffff04 	movi	r19,-4
 8001180:	34e6703a 	and	r19,r6,r19
 8001184:	80027c00 	call	80027c0 <__mulsi3>
 8001188:	002f883a 	mov	r23,zero
 800118c:	102d883a 	mov	r22,r2
 8001190:	e4400003 	ldbu	r17,0(fp)
 8001194:	e009883a 	mov	r4,fp
 8001198:	014001c4 	movi	r5,7
 800119c:	80027c00 	call	80027c0 <__mulsi3>
 80011a0:	88c01fcc 	andi	r3,r17,127
 80011a4:	1585883a 	add	r2,r2,r22
 80011a8:	1886983a 	sll	r3,r3,r2
 80011ac:	8c403fcc 	andi	r17,r17,255
 80011b0:	8c40201c 	xori	r17,r17,128
 80011b4:	e4000044 	addi	r16,fp,1
 80011b8:	8c7fe004 	addi	r17,r17,-128
 80011bc:	b8eeb03a 	or	r23,r23,r3
 80011c0:	8039883a 	mov	fp,r16
 80011c4:	883ff216 	blt	r17,zero,8001190 <__alt_data_end+0xfc001190>
 80011c8:	d8800317 	ldw	r2,12(sp)
 80011cc:	14803fcc 	andi	r18,r2,255
 80011d0:	b8002326 	beq	r23,zero,8001260 <_ZL28check_compact_exception_specPKSt9type_infoPvPKhij+0x20c>
 80011d4:	9009883a 	mov	r4,r18
 80011d8:	8000c200 	call	8000c20 <_ZL21size_of_encoded_valueh>
 80011dc:	1009883a 	mov	r4,r2
 80011e0:	b97fffc4 	addi	r5,r23,-1
 80011e4:	80027c00 	call	80027c0 <__mulsi3>
 80011e8:	9009883a 	mov	r4,r18
 80011ec:	a80b883a 	mov	r5,r21
 80011f0:	14cd883a 	add	r6,r2,r19
 80011f4:	d80f883a 	mov	r7,sp
 80011f8:	8000cc00 	call	8000cc0 <_ZL28read_encoded_value_with_basehjPKhPj>
 80011fc:	d9000017 	ldw	r4,0(sp)
 8001200:	a00b883a 	mov	r5,r20
 8001204:	d9800204 	addi	r6,sp,8
 8001208:	8000b980 	call	8000b98 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv>
 800120c:	10c03fcc 	andi	r3,r2,255
 8001210:	1800141e 	bne	r3,zero,8001264 <_ZL28check_compact_exception_specPKSt9type_infoPvPKhij+0x210>
 8001214:	8009883a 	mov	r4,r16
 8001218:	017ffe44 	movi	r5,-7
 800121c:	80027c00 	call	80027c0 <__mulsi3>
 8001220:	102d883a 	mov	r22,r2
 8001224:	002f883a 	mov	r23,zero
 8001228:	84400003 	ldbu	r17,0(r16)
 800122c:	8009883a 	mov	r4,r16
 8001230:	014001c4 	movi	r5,7
 8001234:	80027c00 	call	80027c0 <__mulsi3>
 8001238:	88c01fcc 	andi	r3,r17,127
 800123c:	1585883a 	add	r2,r2,r22
 8001240:	1886983a 	sll	r3,r3,r2
 8001244:	8c403fcc 	andi	r17,r17,255
 8001248:	8c40201c 	xori	r17,r17,128
 800124c:	8c7fe004 	addi	r17,r17,-128
 8001250:	84000044 	addi	r16,r16,1
 8001254:	b8eeb03a 	or	r23,r23,r3
 8001258:	883ff316 	blt	r17,zero,8001228 <__alt_data_end+0xfc001228>
 800125c:	003fdc06 	br	80011d0 <__alt_data_end+0xfc0011d0>
 8001260:	0005883a 	mov	r2,zero
 8001264:	dfc00e17 	ldw	ra,56(sp)
 8001268:	df000d17 	ldw	fp,52(sp)
 800126c:	ddc00c17 	ldw	r23,48(sp)
 8001270:	dd800b17 	ldw	r22,44(sp)
 8001274:	dd400a17 	ldw	r21,40(sp)
 8001278:	dd000917 	ldw	r20,36(sp)
 800127c:	dcc00817 	ldw	r19,32(sp)
 8001280:	dc800717 	ldw	r18,28(sp)
 8001284:	dc400617 	ldw	r17,24(sp)
 8001288:	dc000517 	ldw	r16,20(sp)
 800128c:	dec00f04 	addi	sp,sp,60
 8001290:	f800283a 	ret

08001294 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>:
 8001294:	defffb04 	addi	sp,sp,-20
 8001298:	dcc00315 	stw	r19,12(sp)
 800129c:	dc400115 	stw	r17,4(sp)
 80012a0:	dc000015 	stw	r16,0(sp)
 80012a4:	dfc00415 	stw	ra,16(sp)
 80012a8:	dc800215 	stw	r18,8(sp)
 80012ac:	2027883a 	mov	r19,r4
 80012b0:	2821883a 	mov	r16,r5
 80012b4:	3023883a 	mov	r17,r6
 80012b8:	20003f26 	beq	r4,zero,80013b8 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x124>
 80012bc:	8002ab80 	call	8002ab8 <_Unwind_GetRegionStart>
 80012c0:	88800015 	stw	r2,0(r17)
 80012c4:	84800003 	ldbu	r18,0(r16)
 80012c8:	00c03fc4 	movi	r3,255
 80012cc:	84000044 	addi	r16,r16,1
 80012d0:	90c03726 	beq	r18,r3,80013b0 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x11c>
 80012d4:	9009883a 	mov	r4,r18
 80012d8:	980b883a 	mov	r5,r19
 80012dc:	8000fcc0 	call	8000fcc <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 80012e0:	800d883a 	mov	r6,r16
 80012e4:	9009883a 	mov	r4,r18
 80012e8:	100b883a 	mov	r5,r2
 80012ec:	89c00104 	addi	r7,r17,4
 80012f0:	8000cc00 	call	8000cc0 <_ZL28read_encoded_value_with_basehjPKhPj>
 80012f4:	1021883a 	mov	r16,r2
 80012f8:	80c00003 	ldbu	r3,0(r16)
 80012fc:	01003fc4 	movi	r4,255
 8001300:	80800044 	addi	r2,r16,1
 8001304:	88c00505 	stb	r3,20(r17)
 8001308:	18c03fcc 	andi	r3,r3,255
 800130c:	19002c26 	beq	r3,r4,80013c0 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x12c>
 8001310:	100d883a 	mov	r6,r2
 8001314:	000f883a 	mov	r7,zero
 8001318:	000b883a 	mov	r5,zero
 800131c:	30c00003 	ldbu	r3,0(r6)
 8001320:	10800044 	addi	r2,r2,1
 8001324:	100d883a 	mov	r6,r2
 8001328:	19001fcc 	andi	r4,r3,127
 800132c:	2148983a 	sll	r4,r4,r5
 8001330:	18c03fcc 	andi	r3,r3,255
 8001334:	18c0201c 	xori	r3,r3,128
 8001338:	18ffe004 	addi	r3,r3,-128
 800133c:	390eb03a 	or	r7,r7,r4
 8001340:	294001c4 	addi	r5,r5,7
 8001344:	183ff516 	blt	r3,zero,800131c <__alt_data_end+0xfc00131c>
 8001348:	11cf883a 	add	r7,r2,r7
 800134c:	89c00315 	stw	r7,12(r17)
 8001350:	10c00003 	ldbu	r3,0(r2)
 8001354:	000f883a 	mov	r7,zero
 8001358:	10800044 	addi	r2,r2,1
 800135c:	88c00545 	stb	r3,21(r17)
 8001360:	000b883a 	mov	r5,zero
 8001364:	10c00003 	ldbu	r3,0(r2)
 8001368:	10800044 	addi	r2,r2,1
 800136c:	19001fcc 	andi	r4,r3,127
 8001370:	2148983a 	sll	r4,r4,r5
 8001374:	18c03fcc 	andi	r3,r3,255
 8001378:	18c0201c 	xori	r3,r3,128
 800137c:	18ffe004 	addi	r3,r3,-128
 8001380:	390eb03a 	or	r7,r7,r4
 8001384:	294001c4 	addi	r5,r5,7
 8001388:	183ff616 	blt	r3,zero,8001364 <__alt_data_end+0xfc001364>
 800138c:	11cf883a 	add	r7,r2,r7
 8001390:	89c00415 	stw	r7,16(r17)
 8001394:	dfc00417 	ldw	ra,16(sp)
 8001398:	dcc00317 	ldw	r19,12(sp)
 800139c:	dc800217 	ldw	r18,8(sp)
 80013a0:	dc400117 	ldw	r17,4(sp)
 80013a4:	dc000017 	ldw	r16,0(sp)
 80013a8:	dec00504 	addi	sp,sp,20
 80013ac:	f800283a 	ret
 80013b0:	88800115 	stw	r2,4(r17)
 80013b4:	003fd006 	br	80012f8 <__alt_data_end+0xfc0012f8>
 80013b8:	0005883a 	mov	r2,zero
 80013bc:	003fc006 	br	80012c0 <__alt_data_end+0xfc0012c0>
 80013c0:	88000315 	stw	zero,12(r17)
 80013c4:	003fe206 	br	8001350 <__alt_data_end+0xfc001350>

080013c8 <__gxx_personality_sj0>:
 80013c8:	00820034 	movhi	r2,2048
 80013cc:	deffde04 	addi	sp,sp,-136
 80013d0:	1084f204 	addi	r2,r2,5064
 80013d4:	d8801015 	stw	r2,64(sp)
 80013d8:	00820074 	movhi	r2,2049
 80013dc:	109a3f04 	addi	r2,r2,26876
 80013e0:	d8801115 	stw	r2,68(sp)
 80013e4:	00820034 	movhi	r2,2048
 80013e8:	10862d04 	addi	r2,r2,6324
 80013ec:	d9001715 	stw	r4,92(sp)
 80013f0:	d9000a04 	addi	r4,sp,40
 80013f4:	d8801315 	stw	r2,76(sp)
 80013f8:	dfc02115 	stw	ra,132(sp)
 80013fc:	df002015 	stw	fp,128(sp)
 8001400:	dec01215 	stw	sp,72(sp)
 8001404:	dec01415 	stw	sp,80(sp)
 8001408:	d9401a15 	stw	r5,104(sp)
 800140c:	d9801815 	stw	r6,96(sp)
 8001410:	d9c01915 	stw	r7,100(sp)
 8001414:	80029f00 	call	80029f0 <_Unwind_SjLj_Register>
 8001418:	d8c01717 	ldw	r3,92(sp)
 800141c:	d8000915 	stw	zero,36(sp)
 8001420:	d8000815 	stw	zero,32(sp)
 8001424:	00800044 	movi	r2,1
 8001428:	18800926 	beq	r3,r2,8001450 <__gxx_personality_sj0+0x88>
 800142c:	014000c4 	movi	r5,3
 8001430:	d9401715 	stw	r5,92(sp)
 8001434:	d9000a04 	addi	r4,sp,40
 8001438:	8002a080 	call	8002a08 <_Unwind_SjLj_Unregister>
 800143c:	d8801717 	ldw	r2,92(sp)
 8001440:	dfc02117 	ldw	ra,132(sp)
 8001444:	df002017 	ldw	fp,128(sp)
 8001448:	dec02204 	addi	sp,sp,136
 800144c:	f800283a 	ret
 8001450:	d9401817 	ldw	r5,96(sp)
 8001454:	012f3574 	movhi	r4,48341
 8001458:	21354004 	addi	r4,r4,-11008
 800145c:	2909883a 	add	r4,r5,r4
 8001460:	2145803a 	cmpltu	r2,r4,r5
 8001464:	d9401917 	ldw	r5,100(sp)
 8001468:	d8c01b05 	stb	r3,108(sp)
 800146c:	00ee2cb4 	movhi	r3,47282
 8001470:	18eaaf04 	addi	r3,r3,-21828
 8001474:	28c7883a 	add	r3,r5,r3
 8001478:	10c5883a 	add	r2,r2,r3
 800147c:	10003526 	beq	r2,zero,8001554 <__gxx_personality_sj0+0x18c>
 8001480:	d8c01a17 	ldw	r3,104(sp)
 8001484:	00800184 	movi	r2,6
 8001488:	18803826 	beq	r3,r2,800156c <__gxx_personality_sj0+0x1a4>
 800148c:	d9002317 	ldw	r4,140(sp)
 8001490:	00ffffc4 	movi	r3,-1
 8001494:	d8c00b15 	stw	r3,44(sp)
 8001498:	8002aac0 	call	8002aac <_Unwind_GetLanguageSpecificData>
 800149c:	d8801915 	stw	r2,100(sp)
 80014a0:	1000a326 	beq	r2,zero,8001730 <__gxx_personality_sj0+0x368>
 80014a4:	d9002317 	ldw	r4,140(sp)
 80014a8:	d9401917 	ldw	r5,100(sp)
 80014ac:	d80d883a 	mov	r6,sp
 80014b0:	00bfffc4 	movi	r2,-1
 80014b4:	d8800b15 	stw	r2,44(sp)
 80014b8:	80012940 	call	8001294 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>
 80014bc:	d9000503 	ldbu	r4,20(sp)
 80014c0:	d9402317 	ldw	r5,140(sp)
 80014c4:	d8801715 	stw	r2,92(sp)
 80014c8:	8000fcc0 	call	8000fcc <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 80014cc:	d9002317 	ldw	r4,140(sp)
 80014d0:	d9400804 	addi	r5,sp,32
 80014d4:	d8800215 	stw	r2,8(sp)
 80014d8:	8002a7c0 	call	8002a7c <_Unwind_GetIPInfo>
 80014dc:	d8c00817 	ldw	r3,32(sp)
 80014e0:	1800011e 	bne	r3,zero,80014e8 <__gxx_personality_sj0+0x120>
 80014e4:	10bfffc4 	addi	r2,r2,-1
 80014e8:	10009116 	blt	r2,zero,8001730 <__gxx_personality_sj0+0x368>
 80014ec:	10004c1e 	bne	r2,zero,8001620 <__gxx_personality_sj0+0x258>
 80014f0:	d8001c15 	stw	zero,112(sp)
 80014f4:	00800044 	movi	r2,1
 80014f8:	d8001715 	stw	zero,92(sp)
 80014fc:	d8001815 	stw	zero,96(sp)
 8001500:	d9001a17 	ldw	r4,104(sp)
 8001504:	20c0004c 	andi	r3,r4,1
 8001508:	18008c26 	beq	r3,zero,800173c <__gxx_personality_sj0+0x374>
 800150c:	00c00084 	movi	r3,2
 8001510:	10c08726 	beq	r2,r3,8001730 <__gxx_personality_sj0+0x368>
 8001514:	d8801b03 	ldbu	r2,108(sp)
 8001518:	1000d21e 	bne	r2,zero,8001864 <__gxx_personality_sj0+0x49c>
 800151c:	d9402217 	ldw	r5,136(sp)
 8001520:	d8801717 	ldw	r2,92(sp)
 8001524:	d8c01817 	ldw	r3,96(sp)
 8001528:	d9001917 	ldw	r4,100(sp)
 800152c:	28bffb15 	stw	r2,-20(r5)
 8001530:	d8800917 	ldw	r2,36(sp)
 8001534:	28fffc15 	stw	r3,-16(r5)
 8001538:	00c00184 	movi	r3,6
 800153c:	28bfff15 	stw	r2,-4(r5)
 8001540:	d8801c17 	ldw	r2,112(sp)
 8001544:	293ffd15 	stw	r4,-12(r5)
 8001548:	d8c01715 	stw	r3,92(sp)
 800154c:	28bffe15 	stw	r2,-8(r5)
 8001550:	003fb806 	br	8001434 <__alt_data_end+0xfc001434>
 8001554:	d8801717 	ldw	r2,92(sp)
 8001558:	113fc936 	bltu	r2,r4,8001480 <__alt_data_end+0xfc001480>
 800155c:	d8c01a17 	ldw	r3,104(sp)
 8001560:	d8001b05 	stb	zero,108(sp)
 8001564:	00800184 	movi	r2,6
 8001568:	18bfc81e 	bne	r3,r2,800148c <__alt_data_end+0xfc00148c>
 800156c:	d8801b03 	ldbu	r2,108(sp)
 8001570:	103fc61e 	bne	r2,zero,800148c <__alt_data_end+0xfc00148c>
 8001574:	d9002217 	ldw	r4,136(sp)
 8001578:	d9402217 	ldw	r5,136(sp)
 800157c:	d8802217 	ldw	r2,136(sp)
 8001580:	213ffe17 	ldw	r4,-8(r4)
 8001584:	297ffb17 	ldw	r5,-20(r5)
 8001588:	10bffd17 	ldw	r2,-12(r2)
 800158c:	d9001c15 	stw	r4,112(sp)
 8001590:	d9401715 	stw	r5,92(sp)
 8001594:	d8801915 	stw	r2,100(sp)
 8001598:	20008726 	beq	r4,zero,80017b8 <__gxx_personality_sj0+0x3f0>
 800159c:	d8801717 	ldw	r2,92(sp)
 80015a0:	10006f0e 	bge	r2,zero,8001760 <__gxx_personality_sj0+0x398>
 80015a4:	d9002317 	ldw	r4,140(sp)
 80015a8:	d9401917 	ldw	r5,100(sp)
 80015ac:	d80d883a 	mov	r6,sp
 80015b0:	00bfffc4 	movi	r2,-1
 80015b4:	d8800b15 	stw	r2,44(sp)
 80015b8:	80012940 	call	8001294 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>
 80015bc:	d9000503 	ldbu	r4,20(sp)
 80015c0:	d9402317 	ldw	r5,140(sp)
 80015c4:	8000fcc0 	call	8000fcc <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 80015c8:	d9000503 	ldbu	r4,20(sp)
 80015cc:	d9402317 	ldw	r5,140(sp)
 80015d0:	d8800215 	stw	r2,8(sp)
 80015d4:	8000fcc0 	call	8000fcc <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 80015d8:	d8c02217 	ldw	r3,136(sp)
 80015dc:	18bffe15 	stw	r2,-8(r3)
 80015e0:	00005f06 	br	8001760 <__gxx_personality_sj0+0x398>
 80015e4:	000f883a 	mov	r7,zero
 80015e8:	000d883a 	mov	r6,zero
 80015ec:	19000003 	ldbu	r4,0(r3)
 80015f0:	18c00044 	addi	r3,r3,1
 80015f4:	d8c01715 	stw	r3,92(sp)
 80015f8:	21401fcc 	andi	r5,r4,127
 80015fc:	298a983a 	sll	r5,r5,r6
 8001600:	21003fcc 	andi	r4,r4,255
 8001604:	2100201c 	xori	r4,r4,128
 8001608:	213fe004 	addi	r4,r4,-128
 800160c:	394eb03a 	or	r7,r7,r5
 8001610:	318001c4 	addi	r6,r6,7
 8001614:	203ff516 	blt	r4,zero,80015ec <__alt_data_end+0xfc0015ec>
 8001618:	10bfffc4 	addi	r2,r2,-1
 800161c:	10000e26 	beq	r2,zero,8001658 <__gxx_personality_sj0+0x290>
 8001620:	d8c01717 	ldw	r3,92(sp)
 8001624:	0011883a 	mov	r8,zero
 8001628:	000d883a 	mov	r6,zero
 800162c:	19000003 	ldbu	r4,0(r3)
 8001630:	18c00044 	addi	r3,r3,1
 8001634:	21401fcc 	andi	r5,r4,127
 8001638:	298a983a 	sll	r5,r5,r6
 800163c:	21003fcc 	andi	r4,r4,255
 8001640:	2100201c 	xori	r4,r4,128
 8001644:	213fe004 	addi	r4,r4,-128
 8001648:	4150b03a 	or	r8,r8,r5
 800164c:	318001c4 	addi	r6,r6,7
 8001650:	203ff616 	blt	r4,zero,800162c <__alt_data_end+0xfc00162c>
 8001654:	003fe306 	br	80015e4 <__alt_data_end+0xfc0015e4>
 8001658:	42000044 	addi	r8,r8,1
 800165c:	da001c15 	stw	r8,112(sp)
 8001660:	38004f26 	beq	r7,zero,80017a0 <__gxx_personality_sj0+0x3d8>
 8001664:	d8800417 	ldw	r2,16(sp)
 8001668:	39ffffc4 	addi	r7,r7,-1
 800166c:	11c5883a 	add	r2,r2,r7
 8001670:	d8801815 	stw	r2,96(sp)
 8001674:	40002e26 	beq	r8,zero,8001730 <__gxx_personality_sj0+0x368>
 8001678:	10004b26 	beq	r2,zero,80017a8 <__gxx_personality_sj0+0x3e0>
 800167c:	d8c01a17 	ldw	r3,104(sp)
 8001680:	18c0020c 	andi	r3,r3,8
 8001684:	d8c01e15 	stw	r3,120(sp)
 8001688:	1800801e 	bne	r3,zero,800188c <__gxx_personality_sj0+0x4c4>
 800168c:	d8801b03 	ldbu	r2,108(sp)
 8001690:	1000821e 	bne	r2,zero,800189c <__gxx_personality_sj0+0x4d4>
 8001694:	d9002217 	ldw	r4,136(sp)
 8001698:	20800017 	ldw	r2,0(r4)
 800169c:	1080004c 	andi	r2,r2,1
 80016a0:	1000821e 	bne	r2,zero,80018ac <__gxx_personality_sj0+0x4e4>
 80016a4:	d9402217 	ldw	r5,136(sp)
 80016a8:	28800504 	addi	r2,r5,20
 80016ac:	d8800915 	stw	r2,36(sp)
 80016b0:	10bff017 	ldw	r2,-64(r2)
 80016b4:	d8801d15 	stw	r2,116(sp)
 80016b8:	d9001b03 	ldbu	r4,108(sp)
 80016bc:	d8001b45 	stb	zero,109(sp)
 80016c0:	d9001f15 	stw	r4,124(sp)
 80016c4:	00000e06 	br	8001700 <__gxx_personality_sj0+0x338>
 80016c8:	01c03d0e 	bge	zero,r7,80017c0 <__gxx_personality_sj0+0x3f8>
 80016cc:	017fffc4 	movi	r5,-1
 80016d0:	d9400b15 	stw	r5,44(sp)
 80016d4:	d809883a 	mov	r4,sp
 80016d8:	380b883a 	mov	r5,r7
 80016dc:	8000ed00 	call	8000ed0 <_ZL15get_ttype_entryP16lsda_header_infom>
 80016e0:	10004f26 	beq	r2,zero,8001820 <__gxx_personality_sj0+0x458>
 80016e4:	d8c01d17 	ldw	r3,116(sp)
 80016e8:	1800611e 	bne	r3,zero,8001870 <__gxx_personality_sj0+0x4a8>
 80016ec:	d8800617 	ldw	r2,24(sp)
 80016f0:	10005726 	beq	r2,zero,8001850 <__gxx_personality_sj0+0x488>
 80016f4:	d9401717 	ldw	r5,92(sp)
 80016f8:	2885883a 	add	r2,r5,r2
 80016fc:	d8801815 	stw	r2,96(sp)
 8001700:	d9001817 	ldw	r4,96(sp)
 8001704:	d9400704 	addi	r5,sp,28
 8001708:	8000b400 	call	8000b40 <_ZL12read_sleb128PKhPl>
 800170c:	1009883a 	mov	r4,r2
 8001710:	d9400604 	addi	r5,sp,24
 8001714:	d8801715 	stw	r2,92(sp)
 8001718:	8000b400 	call	8000b40 <_ZL12read_sleb128PKhPl>
 800171c:	d9c00717 	ldw	r7,28(sp)
 8001720:	383fe91e 	bne	r7,zero,80016c8 <__alt_data_end+0xfc0016c8>
 8001724:	01000044 	movi	r4,1
 8001728:	d9001b45 	stb	r4,109(sp)
 800172c:	003fef06 	br	80016ec <__alt_data_end+0xfc0016ec>
 8001730:	01000204 	movi	r4,8
 8001734:	d9001715 	stw	r4,92(sp)
 8001738:	003f3e06 	br	8001434 <__alt_data_end+0xfc001434>
 800173c:	d9001a17 	ldw	r4,104(sp)
 8001740:	20c0020c 	andi	r3,r4,8
 8001744:	1800021e 	bne	r3,zero,8001750 <__gxx_personality_sj0+0x388>
 8001748:	d8c01b03 	ldbu	r3,108(sp)
 800174c:	18001826 	beq	r3,zero,80017b0 <__gxx_personality_sj0+0x3e8>
 8001750:	00c00044 	movi	r3,1
 8001754:	10c05926 	beq	r2,r3,80018bc <__gxx_personality_sj0+0x4f4>
 8001758:	d9401717 	ldw	r5,92(sp)
 800175c:	28005816 	blt	r5,zero,80018c0 <__gxx_personality_sj0+0x4f8>
 8001760:	d9802217 	ldw	r6,136(sp)
 8001764:	d9002317 	ldw	r4,140(sp)
 8001768:	00bfffc4 	movi	r2,-1
 800176c:	000b883a 	mov	r5,zero
 8001770:	d8800b15 	stw	r2,44(sp)
 8001774:	8002a500 	call	8002a50 <_Unwind_SetGR>
 8001778:	d9002317 	ldw	r4,140(sp)
 800177c:	d9801717 	ldw	r6,92(sp)
 8001780:	01400044 	movi	r5,1
 8001784:	8002a500 	call	8002a50 <_Unwind_SetGR>
 8001788:	d9002317 	ldw	r4,140(sp)
 800178c:	d9401c17 	ldw	r5,112(sp)
 8001790:	8002a9c0 	call	8002a9c <_Unwind_SetIP>
 8001794:	010001c4 	movi	r4,7
 8001798:	d9001715 	stw	r4,92(sp)
 800179c:	003f2506 	br	8001434 <__alt_data_end+0xfc001434>
 80017a0:	d8c01c17 	ldw	r3,112(sp)
 80017a4:	183fe226 	beq	r3,zero,8001730 <__alt_data_end+0xfc001730>
 80017a8:	00800084 	movi	r2,2
 80017ac:	003f5206 	br	80014f8 <__alt_data_end+0xfc0014f8>
 80017b0:	00c00044 	movi	r3,1
 80017b4:	10ff791e 	bne	r2,r3,800159c <__alt_data_end+0xfc00159c>
 80017b8:	d9002217 	ldw	r4,136(sp)
 80017bc:	80023780 	call	8002378 <__cxa_call_terminate>
 80017c0:	d9001d17 	ldw	r4,116(sp)
 80017c4:	20000426 	beq	r4,zero,80017d8 <__gxx_personality_sj0+0x410>
 80017c8:	d9401e17 	ldw	r5,120(sp)
 80017cc:	2800021e 	bne	r5,zero,80017d8 <__gxx_personality_sj0+0x410>
 80017d0:	d8801f17 	ldw	r2,124(sp)
 80017d4:	10001626 	beq	r2,zero,8001830 <__gxx_personality_sj0+0x468>
 80017d8:	d8c00317 	ldw	r3,12(sp)
 80017dc:	01ce303a 	nor	r7,zero,r7
 80017e0:	000d883a 	mov	r6,zero
 80017e4:	19c7883a 	add	r3,r3,r7
 80017e8:	000b883a 	mov	r5,zero
 80017ec:	18800003 	ldbu	r2,0(r3)
 80017f0:	18c00044 	addi	r3,r3,1
 80017f4:	11001fcc 	andi	r4,r2,127
 80017f8:	2148983a 	sll	r4,r4,r5
 80017fc:	10803fcc 	andi	r2,r2,255
 8001800:	1080201c 	xori	r2,r2,128
 8001804:	10bfe004 	addi	r2,r2,-128
 8001808:	310cb03a 	or	r6,r6,r4
 800180c:	294001c4 	addi	r5,r5,7
 8001810:	103ff616 	blt	r2,zero,80017ec <__alt_data_end+0xfc0017ec>
 8001814:	3005003a 	cmpeq	r2,r6,zero
 8001818:	10803fcc 	andi	r2,r2,255
 800181c:	103fb326 	beq	r2,zero,80016ec <__alt_data_end+0xfc0016ec>
 8001820:	d8800717 	ldw	r2,28(sp)
 8001824:	d8801715 	stw	r2,92(sp)
 8001828:	008000c4 	movi	r2,3
 800182c:	003f3406 	br	8001500 <__alt_data_end+0xfc001500>
 8001830:	d9401d17 	ldw	r5,116(sp)
 8001834:	d9800917 	ldw	r6,36(sp)
 8001838:	00ffffc4 	movi	r3,-1
 800183c:	d809883a 	mov	r4,sp
 8001840:	d8c00b15 	stw	r3,44(sp)
 8001844:	8000f240 	call	8000f24 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl>
 8001848:	1080005c 	xori	r2,r2,1
 800184c:	003ff206 	br	8001818 <__alt_data_end+0xfc001818>
 8001850:	d8801b43 	ldbu	r2,109(sp)
 8001854:	103fb626 	beq	r2,zero,8001730 <__alt_data_end+0xfc001730>
 8001858:	d8001715 	stw	zero,92(sp)
 800185c:	00800084 	movi	r2,2
 8001860:	003f2706 	br	8001500 <__alt_data_end+0xfc001500>
 8001864:	00800184 	movi	r2,6
 8001868:	d8801715 	stw	r2,92(sp)
 800186c:	003ef106 	br	8001434 <__alt_data_end+0xfc001434>
 8001870:	1009883a 	mov	r4,r2
 8001874:	180b883a 	mov	r5,r3
 8001878:	d9800904 	addi	r6,sp,36
 800187c:	8000b980 	call	8000b98 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv>
 8001880:	10803fcc 	andi	r2,r2,255
 8001884:	103fe61e 	bne	r2,zero,8001820 <__alt_data_end+0xfc001820>
 8001888:	003f9806 	br	80016ec <__alt_data_end+0xfc0016ec>
 800188c:	008200b4 	movhi	r2,2050
 8001890:	10a31104 	addi	r2,r2,-29628
 8001894:	d8801d15 	stw	r2,116(sp)
 8001898:	003f8706 	br	80016b8 <__alt_data_end+0xfc0016b8>
 800189c:	00c200b4 	movhi	r3,2050
 80018a0:	18e31304 	addi	r3,r3,-29620
 80018a4:	d8c01d15 	stw	r3,116(sp)
 80018a8:	003f8306 	br	80016b8 <__alt_data_end+0xfc0016b8>
 80018ac:	20bff517 	ldw	r2,-44(r4)
 80018b0:	003f7e06 	br	80016ac <__alt_data_end+0xfc0016ac>
 80018b4:	d9000c17 	ldw	r4,48(sp)
 80018b8:	80021f40 	call	80021f4 <__cxa_begin_catch>
 80018bc:	8001ea00 	call	8001ea0 <_ZSt9terminatev>
 80018c0:	d8c00b15 	stw	r3,44(sp)
 80018c4:	8001ec80 	call	8001ec8 <_ZSt10unexpectedv>

080018c8 <__cxa_call_unexpected>:
 80018c8:	00820034 	movhi	r2,2048
 80018cc:	deffe604 	addi	sp,sp,-104
 80018d0:	1084f204 	addi	r2,r2,5064
 80018d4:	d8800d15 	stw	r2,52(sp)
 80018d8:	00820074 	movhi	r2,2049
 80018dc:	109a4304 	addi	r2,r2,26892
 80018e0:	d8800e15 	stw	r2,56(sp)
 80018e4:	d8800104 	addi	r2,sp,4
 80018e8:	d8800f15 	stw	r2,60(sp)
 80018ec:	00820034 	movhi	r2,2048
 80018f0:	10865504 	addi	r2,r2,6484
 80018f4:	d9001415 	stw	r4,80(sp)
 80018f8:	d9000704 	addi	r4,sp,28
 80018fc:	dfc01915 	stw	ra,100(sp)
 8001900:	d8801015 	stw	r2,64(sp)
 8001904:	df001815 	stw	fp,96(sp)
 8001908:	dec01115 	stw	sp,68(sp)
 800190c:	80029f00 	call	80029f0 <_Unwind_SjLj_Register>
 8001910:	d9001417 	ldw	r4,80(sp)
 8001914:	80021f40 	call	80021f4 <__cxa_begin_catch>
 8001918:	d8c01417 	ldw	r3,80(sp)
 800191c:	18bffe17 	ldw	r2,-8(r3)
 8001920:	193ff717 	ldw	r4,-36(r3)
 8001924:	18fffd17 	ldw	r3,-12(r3)
 8001928:	d8800315 	stw	r2,12(sp)
 800192c:	d8c01615 	stw	r3,88(sp)
 8001930:	d8c01417 	ldw	r3,80(sp)
 8001934:	18fffb17 	ldw	r3,-20(r3)
 8001938:	d8c01515 	stw	r3,84(sp)
 800193c:	d8c01417 	ldw	r3,80(sp)
 8001940:	18fff817 	ldw	r3,-32(r3)
 8001944:	d8c01415 	stw	r3,80(sp)
 8001948:	00c00044 	movi	r3,1
 800194c:	d8c00815 	stw	r3,32(sp)
 8001950:	8001eb80 	call	8001eb8 <_ZN10__cxxabiv112__unexpectedEPFvvE>
 8001954:	d8c00917 	ldw	r3,36(sp)
 8001958:	d8800817 	ldw	r2,32(sp)
 800195c:	d8c01715 	stw	r3,92(sp)
 8001960:	10000a26 	beq	r2,zero,800198c <__cxa_call_unexpected+0xc4>
 8001964:	10bfffc4 	addi	r2,r2,-1
 8001968:	10000126 	beq	r2,zero,8001970 <__cxa_call_unexpected+0xa8>
 800196c:	003da0fa 	break	3
 8001970:	d8000815 	stw	zero,32(sp)
 8001974:	80022a80 	call	80022a8 <__cxa_end_catch>
 8001978:	80022a80 	call	80022a8 <__cxa_end_catch>
 800197c:	d9001717 	ldw	r4,92(sp)
 8001980:	00bfffc4 	movi	r2,-1
 8001984:	d8800815 	stw	r2,32(sp)
 8001988:	8002bec0 	call	8002bec <_Unwind_SjLj_Resume>
 800198c:	d9001717 	ldw	r4,92(sp)
 8001990:	80021f40 	call	80021f4 <__cxa_begin_catch>
 8001994:	8001afc0 	call	8001afc <__cxa_get_globals_fast>
 8001998:	10800017 	ldw	r2,0(r2)
 800199c:	10c00b17 	ldw	r3,44(r2)
 80019a0:	18c0004c 	andi	r3,r3,1
 80019a4:	18001e26 	beq	r3,zero,8001a20 <__cxa_call_unexpected+0x158>
 80019a8:	10800017 	ldw	r2,0(r2)
 80019ac:	d8801715 	stw	r2,92(sp)
 80019b0:	d8801517 	ldw	r2,84(sp)
 80019b4:	00802b0e 	bge	zero,r2,8001a64 <__cxa_call_unexpected+0x19c>
 80019b8:	d8c01717 	ldw	r3,92(sp)
 80019bc:	d8800317 	ldw	r2,12(sp)
 80019c0:	d9801617 	ldw	r6,88(sp)
 80019c4:	193ff017 	ldw	r4,-64(r3)
 80019c8:	d9c01517 	ldw	r7,84(sp)
 80019cc:	d8800015 	stw	r2,0(sp)
 80019d0:	180b883a 	mov	r5,r3
 80019d4:	00800084 	movi	r2,2
 80019d8:	d8800815 	stw	r2,32(sp)
 80019dc:	80010540 	call	8001054 <_ZL28check_compact_exception_specPKSt9type_infoPvPKhij>
 80019e0:	10803fcc 	andi	r2,r2,255
 80019e4:	10001e1e 	bne	r2,zero,8001a60 <__cxa_call_unexpected+0x198>
 80019e8:	d8800317 	ldw	r2,12(sp)
 80019ec:	d9801617 	ldw	r6,88(sp)
 80019f0:	d9c01517 	ldw	r7,84(sp)
 80019f4:	01020074 	movhi	r4,2049
 80019f8:	d8800015 	stw	r2,0(sp)
 80019fc:	211af704 	addi	r4,r4,27612
 8001a00:	00800084 	movi	r2,2
 8001a04:	000b883a 	mov	r5,zero
 8001a08:	d8800815 	stw	r2,32(sp)
 8001a0c:	80010540 	call	8001054 <_ZL28check_compact_exception_specPKSt9type_infoPvPKhij>
 8001a10:	10803fcc 	andi	r2,r2,255
 8001a14:	1000051e 	bne	r2,zero,8001a2c <__cxa_call_unexpected+0x164>
 8001a18:	d9001417 	ldw	r4,80(sp)
 8001a1c:	8001de00 	call	8001de0 <_ZN10__cxxabiv111__terminateEPFvvE>
 8001a20:	10801004 	addi	r2,r2,64
 8001a24:	d8801715 	stw	r2,92(sp)
 8001a28:	003fe106 	br	80019b0 <__alt_data_end+0xfc0019b0>
 8001a2c:	01000104 	movi	r4,4
 8001a30:	800258c0 	call	800258c <__cxa_allocate_exception>
 8001a34:	00c20074 	movhi	r3,2049
 8001a38:	18db1204 	addi	r3,r3,27720
 8001a3c:	01420074 	movhi	r5,2049
 8001a40:	01820034 	movhi	r6,2048
 8001a44:	10c00015 	stw	r3,0(r2)
 8001a48:	295af704 	addi	r5,r5,27612
 8001a4c:	00c00084 	movi	r3,2
 8001a50:	3189d304 	addi	r6,r6,10060
 8001a54:	1009883a 	mov	r4,r2
 8001a58:	d8c00815 	stw	r3,32(sp)
 8001a5c:	80024140 	call	8002414 <__cxa_throw>
 8001a60:	80024a40 	call	80024a4 <__cxa_rethrow>
 8001a64:	d9401617 	ldw	r5,88(sp)
 8001a68:	00800084 	movi	r2,2
 8001a6c:	0009883a 	mov	r4,zero
 8001a70:	d9800104 	addi	r6,sp,4
 8001a74:	d8800815 	stw	r2,32(sp)
 8001a78:	80012940 	call	8001294 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>
 8001a7c:	d8801717 	ldw	r2,92(sp)
 8001a80:	d9c01517 	ldw	r7,84(sp)
 8001a84:	d9000104 	addi	r4,sp,4
 8001a88:	117ff017 	ldw	r5,-64(r2)
 8001a8c:	100d883a 	mov	r6,r2
 8001a90:	8000f240 	call	8000f24 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl>
 8001a94:	10803fcc 	andi	r2,r2,255
 8001a98:	1000171e 	bne	r2,zero,8001af8 <__cxa_call_unexpected+0x230>
 8001a9c:	d9c01517 	ldw	r7,84(sp)
 8001aa0:	01420074 	movhi	r5,2049
 8001aa4:	00800084 	movi	r2,2
 8001aa8:	295af704 	addi	r5,r5,27612
 8001aac:	d9000104 	addi	r4,sp,4
 8001ab0:	000d883a 	mov	r6,zero
 8001ab4:	d8800815 	stw	r2,32(sp)
 8001ab8:	8000f240 	call	8000f24 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl>
 8001abc:	10803fcc 	andi	r2,r2,255
 8001ac0:	103fd526 	beq	r2,zero,8001a18 <__alt_data_end+0xfc001a18>
 8001ac4:	01000104 	movi	r4,4
 8001ac8:	800258c0 	call	800258c <__cxa_allocate_exception>
 8001acc:	00c20074 	movhi	r3,2049
 8001ad0:	18db1204 	addi	r3,r3,27720
 8001ad4:	01420074 	movhi	r5,2049
 8001ad8:	01820034 	movhi	r6,2048
 8001adc:	10c00015 	stw	r3,0(r2)
 8001ae0:	295af704 	addi	r5,r5,27612
 8001ae4:	00c00084 	movi	r3,2
 8001ae8:	3189d304 	addi	r6,r6,10060
 8001aec:	1009883a 	mov	r4,r2
 8001af0:	d8c00815 	stw	r3,32(sp)
 8001af4:	80024140 	call	8002414 <__cxa_throw>
 8001af8:	80024a40 	call	80024a4 <__cxa_rethrow>

08001afc <__cxa_get_globals_fast>:
 8001afc:	008200b4 	movhi	r2,2050
 8001b00:	10aa4504 	addi	r2,r2,-22252
 8001b04:	f800283a 	ret

08001b08 <__cxa_get_globals>:
 8001b08:	008200b4 	movhi	r2,2050
 8001b0c:	10aa4504 	addi	r2,r2,-22252
 8001b10:	f800283a 	ret

08001b14 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv>:
 8001b14:	20800017 	ldw	r2,0(r4)
 8001b18:	defffa04 	addi	sp,sp,-24
 8001b1c:	dc000415 	stw	r16,16(sp)
 8001b20:	10800617 	ldw	r2,24(r2)
 8001b24:	3021883a 	mov	r16,r6
 8001b28:	31800017 	ldw	r6,0(r6)
 8001b2c:	00c00404 	movi	r3,16
 8001b30:	d8c00215 	stw	r3,8(sp)
 8001b34:	dfc00515 	stw	ra,20(sp)
 8001b38:	d8000015 	stw	zero,0(sp)
 8001b3c:	d8000115 	stw	zero,4(sp)
 8001b40:	d8000315 	stw	zero,12(sp)
 8001b44:	d80f883a 	mov	r7,sp
 8001b48:	103ee83a 	callr	r2
 8001b4c:	d8800117 	ldw	r2,4(sp)
 8001b50:	00c00184 	movi	r3,6
 8001b54:	1080018c 	andi	r2,r2,6
 8001b58:	10c00526 	beq	r2,r3,8001b70 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv+0x5c>
 8001b5c:	0005883a 	mov	r2,zero
 8001b60:	dfc00517 	ldw	ra,20(sp)
 8001b64:	dc000417 	ldw	r16,16(sp)
 8001b68:	dec00604 	addi	sp,sp,24
 8001b6c:	f800283a 	ret
 8001b70:	d8c00017 	ldw	r3,0(sp)
 8001b74:	00800044 	movi	r2,1
 8001b78:	80c00015 	stw	r3,0(r16)
 8001b7c:	dfc00517 	ldw	ra,20(sp)
 8001b80:	dc000417 	ldw	r16,16(sp)
 8001b84:	dec00604 	addi	sp,sp,24
 8001b88:	f800283a 	ret

08001b8c <_ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_>:
 8001b8c:	d8800017 	ldw	r2,0(sp)
 8001b90:	11800226 	beq	r2,r6,8001b9c <_ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_+0x10>
 8001b94:	00800044 	movi	r2,1
 8001b98:	f800283a 	ret
 8001b9c:	00800184 	movi	r2,6
 8001ba0:	f800283a 	ret

08001ba4 <_ZN10__cxxabiv117__class_type_infoD1Ev>:
 8001ba4:	00820074 	movhi	r2,2049
 8001ba8:	109ab804 	addi	r2,r2,27360
 8001bac:	20800015 	stw	r2,0(r4)
 8001bb0:	80025281 	jmpi	8002528 <_ZNSt9type_infoD1Ev>

08001bb4 <_ZN10__cxxabiv117__class_type_infoD0Ev>:
 8001bb4:	defffe04 	addi	sp,sp,-8
 8001bb8:	00820074 	movhi	r2,2049
 8001bbc:	dc000015 	stw	r16,0(sp)
 8001bc0:	dfc00115 	stw	ra,4(sp)
 8001bc4:	109ab804 	addi	r2,r2,27360
 8001bc8:	20800015 	stw	r2,0(r4)
 8001bcc:	2021883a 	mov	r16,r4
 8001bd0:	80025280 	call	8002528 <_ZNSt9type_infoD1Ev>
 8001bd4:	8009883a 	mov	r4,r16
 8001bd8:	dfc00117 	ldw	ra,4(sp)
 8001bdc:	dc000017 	ldw	r16,0(sp)
 8001be0:	dec00204 	addi	sp,sp,8
 8001be4:	8001ddc1 	jmpi	8001ddc <_ZdlPv>

08001be8 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE>:
 8001be8:	21000117 	ldw	r4,4(r4)
 8001bec:	29400117 	ldw	r5,4(r5)
 8001bf0:	defffd04 	addi	sp,sp,-12
 8001bf4:	dc400115 	stw	r17,4(sp)
 8001bf8:	dc000015 	stw	r16,0(sp)
 8001bfc:	dfc00215 	stw	ra,8(sp)
 8001c00:	3023883a 	mov	r17,r6
 8001c04:	3821883a 	mov	r16,r7
 8001c08:	21400b26 	beq	r4,r5,8001c38 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE+0x50>
 8001c0c:	20c00007 	ldb	r3,0(r4)
 8001c10:	00800a84 	movi	r2,42
 8001c14:	18800226 	beq	r3,r2,8001c20 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE+0x38>
 8001c18:	8003ce00 	call	8003ce0 <strcmp>
 8001c1c:	10000626 	beq	r2,zero,8001c38 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE+0x50>
 8001c20:	0005883a 	mov	r2,zero
 8001c24:	dfc00217 	ldw	ra,8(sp)
 8001c28:	dc400117 	ldw	r17,4(sp)
 8001c2c:	dc000017 	ldw	r16,0(sp)
 8001c30:	dec00304 	addi	sp,sp,12
 8001c34:	f800283a 	ret
 8001c38:	00800204 	movi	r2,8
 8001c3c:	80800315 	stw	r2,12(r16)
 8001c40:	00800184 	movi	r2,6
 8001c44:	80800115 	stw	r2,4(r16)
 8001c48:	84400015 	stw	r17,0(r16)
 8001c4c:	00800044 	movi	r2,1
 8001c50:	003ff406 	br	8001c24 <__alt_data_end+0xfc001c24>

08001c54 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj>:
 8001c54:	20800117 	ldw	r2,4(r4)
 8001c58:	28c00117 	ldw	r3,4(r5)
 8001c5c:	10c02926 	beq	r2,r3,8001d04 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0xb0>
 8001c60:	defffb04 	addi	sp,sp,-20
 8001c64:	dcc00315 	stw	r19,12(sp)
 8001c68:	dc800215 	stw	r18,8(sp)
 8001c6c:	dc400115 	stw	r17,4(sp)
 8001c70:	dc000015 	stw	r16,0(sp)
 8001c74:	dfc00415 	stw	ra,16(sp)
 8001c78:	2821883a 	mov	r16,r5
 8001c7c:	11400007 	ldb	r5,0(r2)
 8001c80:	2025883a 	mov	r18,r4
 8001c84:	01000a84 	movi	r4,42
 8001c88:	3823883a 	mov	r17,r7
 8001c8c:	3027883a 	mov	r19,r6
 8001c90:	29000426 	beq	r5,r4,8001ca4 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x50>
 8001c94:	1009883a 	mov	r4,r2
 8001c98:	180b883a 	mov	r5,r3
 8001c9c:	8003ce00 	call	8003ce0 <strcmp>
 8001ca0:	10000a26 	beq	r2,zero,8001ccc <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x78>
 8001ca4:	008000c4 	movi	r2,3
 8001ca8:	14400a2e 	bgeu	r2,r17,8001cd4 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x80>
 8001cac:	0005883a 	mov	r2,zero
 8001cb0:	dfc00417 	ldw	ra,16(sp)
 8001cb4:	dcc00317 	ldw	r19,12(sp)
 8001cb8:	dc800217 	ldw	r18,8(sp)
 8001cbc:	dc400117 	ldw	r17,4(sp)
 8001cc0:	dc000017 	ldw	r16,0(sp)
 8001cc4:	dec00504 	addi	sp,sp,20
 8001cc8:	f800283a 	ret
 8001ccc:	00800044 	movi	r2,1
 8001cd0:	003ff706 	br	8001cb0 <__alt_data_end+0xfc001cb0>
 8001cd4:	80800017 	ldw	r2,0(r16)
 8001cd8:	8009883a 	mov	r4,r16
 8001cdc:	900b883a 	mov	r5,r18
 8001ce0:	10800517 	ldw	r2,20(r2)
 8001ce4:	980d883a 	mov	r6,r19
 8001ce8:	dfc00417 	ldw	ra,16(sp)
 8001cec:	dcc00317 	ldw	r19,12(sp)
 8001cf0:	dc800217 	ldw	r18,8(sp)
 8001cf4:	dc400117 	ldw	r17,4(sp)
 8001cf8:	dc000017 	ldw	r16,0(sp)
 8001cfc:	dec00504 	addi	sp,sp,20
 8001d00:	1000683a 	jmp	r2
 8001d04:	00800044 	movi	r2,1
 8001d08:	f800283a 	ret

08001d0c <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE>:
 8001d0c:	defffb04 	addi	sp,sp,-20
 8001d10:	dc400315 	stw	r17,12(sp)
 8001d14:	d8800717 	ldw	r2,28(sp)
 8001d18:	dc400517 	ldw	r17,20(sp)
 8001d1c:	dc000215 	stw	r16,8(sp)
 8001d20:	dfc00415 	stw	ra,16(sp)
 8001d24:	24000117 	ldw	r16,4(r4)
 8001d28:	88801026 	beq	r17,r2,8001d6c <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x60>
 8001d2c:	39400117 	ldw	r5,4(r7)
 8001d30:	81401d26 	beq	r16,r5,8001da8 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x9c>
 8001d34:	80c00007 	ldb	r3,0(r16)
 8001d38:	00800a84 	movi	r2,42
 8001d3c:	18800526 	beq	r3,r2,8001d54 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x48>
 8001d40:	8009883a 	mov	r4,r16
 8001d44:	d9800115 	stw	r6,4(sp)
 8001d48:	8003ce00 	call	8003ce0 <strcmp>
 8001d4c:	d9800117 	ldw	r6,4(sp)
 8001d50:	10001526 	beq	r2,zero,8001da8 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x9c>
 8001d54:	0005883a 	mov	r2,zero
 8001d58:	dfc00417 	ldw	ra,16(sp)
 8001d5c:	dc400317 	ldw	r17,12(sp)
 8001d60:	dc000217 	ldw	r16,8(sp)
 8001d64:	dec00504 	addi	sp,sp,20
 8001d68:	f800283a 	ret
 8001d6c:	d8800617 	ldw	r2,24(sp)
 8001d70:	11400117 	ldw	r5,4(r2)
 8001d74:	81401326 	beq	r16,r5,8001dc4 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0xb8>
 8001d78:	80c00007 	ldb	r3,0(r16)
 8001d7c:	00800a84 	movi	r2,42
 8001d80:	18801326 	beq	r3,r2,8001dd0 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0xc4>
 8001d84:	8009883a 	mov	r4,r16
 8001d88:	d9800115 	stw	r6,4(sp)
 8001d8c:	d9c00015 	stw	r7,0(sp)
 8001d90:	8003ce00 	call	8003ce0 <strcmp>
 8001d94:	d9800117 	ldw	r6,4(sp)
 8001d98:	d9c00017 	ldw	r7,0(sp)
 8001d9c:	10000926 	beq	r2,zero,8001dc4 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0xb8>
 8001da0:	39400117 	ldw	r5,4(r7)
 8001da4:	817fe61e 	bne	r16,r5,8001d40 <__alt_data_end+0xfc001d40>
 8001da8:	d8800817 	ldw	r2,32(sp)
 8001dac:	d8c00817 	ldw	r3,32(sp)
 8001db0:	14400015 	stw	r17,0(r2)
 8001db4:	11800115 	stw	r6,4(r2)
 8001db8:	00800044 	movi	r2,1
 8001dbc:	18800315 	stw	r2,12(r3)
 8001dc0:	003fe406 	br	8001d54 <__alt_data_end+0xfc001d54>
 8001dc4:	d8800817 	ldw	r2,32(sp)
 8001dc8:	11800215 	stw	r6,8(r2)
 8001dcc:	003fe106 	br	8001d54 <__alt_data_end+0xfc001d54>
 8001dd0:	38800117 	ldw	r2,4(r7)
 8001dd4:	80bfdf1e 	bne	r16,r2,8001d54 <__alt_data_end+0xfc001d54>
 8001dd8:	003ff306 	br	8001da8 <__alt_data_end+0xfc001da8>

08001ddc <_ZdlPv>:
 8001ddc:	8002d341 	jmpi	8002d34 <free>

08001de0 <_ZN10__cxxabiv111__terminateEPFvvE>:
 8001de0:	00820034 	movhi	r2,2048
 8001de4:	deffef04 	addi	sp,sp,-68
 8001de8:	1084f204 	addi	r2,r2,5064
 8001dec:	d8800615 	stw	r2,24(sp)
 8001df0:	00820074 	movhi	r2,2049
 8001df4:	109a4704 	addi	r2,r2,26908
 8001df8:	d8800715 	stw	r2,28(sp)
 8001dfc:	00820034 	movhi	r2,2048
 8001e00:	10878e04 	addi	r2,r2,7736
 8001e04:	d9000d15 	stw	r4,52(sp)
 8001e08:	d809883a 	mov	r4,sp
 8001e0c:	d8800915 	stw	r2,36(sp)
 8001e10:	dfc01015 	stw	ra,64(sp)
 8001e14:	df000f15 	stw	fp,60(sp)
 8001e18:	dec00815 	stw	sp,32(sp)
 8001e1c:	dec00a15 	stw	sp,40(sp)
 8001e20:	80029f00 	call	80029f0 <_Unwind_SjLj_Register>
 8001e24:	00800044 	movi	r2,1
 8001e28:	d8800115 	stw	r2,4(sp)
 8001e2c:	d8800d17 	ldw	r2,52(sp)
 8001e30:	103ee83a 	callr	r2
 8001e34:	8002d080 	call	8002d08 <abort>
 8001e38:	d8c00217 	ldw	r3,8(sp)
 8001e3c:	d8800117 	ldw	r2,4(sp)
 8001e40:	d8c00d15 	stw	r3,52(sp)
 8001e44:	d8c00317 	ldw	r3,12(sp)
 8001e48:	d8c00e15 	stw	r3,56(sp)
 8001e4c:	10000b26 	beq	r2,zero,8001e7c <_ZN10__cxxabiv111__terminateEPFvvE+0x9c>
 8001e50:	10bfffc4 	addi	r2,r2,-1
 8001e54:	10000126 	beq	r2,zero,8001e5c <_ZN10__cxxabiv111__terminateEPFvvE+0x7c>
 8001e58:	003da0fa 	break	3
 8001e5c:	d8000115 	stw	zero,4(sp)
 8001e60:	80022a80 	call	80022a8 <__cxa_end_catch>
 8001e64:	d8c00e17 	ldw	r3,56(sp)
 8001e68:	00bfffc4 	movi	r2,-1
 8001e6c:	18800826 	beq	r3,r2,8001e90 <_ZN10__cxxabiv111__terminateEPFvvE+0xb0>
 8001e70:	d9000d17 	ldw	r4,52(sp)
 8001e74:	d8800115 	stw	r2,4(sp)
 8001e78:	8002bec0 	call	8002bec <_Unwind_SjLj_Resume>
 8001e7c:	d9000d17 	ldw	r4,52(sp)
 8001e80:	80021f40 	call	80021f4 <__cxa_begin_catch>
 8001e84:	00800084 	movi	r2,2
 8001e88:	d8800115 	stw	r2,4(sp)
 8001e8c:	8002d080 	call	8002d08 <abort>
 8001e90:	d8800e17 	ldw	r2,56(sp)
 8001e94:	d9000d17 	ldw	r4,52(sp)
 8001e98:	d8800115 	stw	r2,4(sp)
 8001e9c:	80018c80 	call	80018c8 <__cxa_call_unexpected>

08001ea0 <_ZSt9terminatev>:
 8001ea0:	008200b4 	movhi	r2,2050
 8001ea4:	10a30c04 	addi	r2,r2,-29648
 8001ea8:	11000017 	ldw	r4,0(r2)
 8001eac:	deffff04 	addi	sp,sp,-4
 8001eb0:	dfc00015 	stw	ra,0(sp)
 8001eb4:	8001de00 	call	8001de0 <_ZN10__cxxabiv111__terminateEPFvvE>

08001eb8 <_ZN10__cxxabiv112__unexpectedEPFvvE>:
 8001eb8:	deffff04 	addi	sp,sp,-4
 8001ebc:	dfc00015 	stw	ra,0(sp)
 8001ec0:	203ee83a 	callr	r4
 8001ec4:	8001ea00 	call	8001ea0 <_ZSt9terminatev>

08001ec8 <_ZSt10unexpectedv>:
 8001ec8:	008200b4 	movhi	r2,2050
 8001ecc:	10a31504 	addi	r2,r2,-29612
 8001ed0:	11000017 	ldw	r4,0(r2)
 8001ed4:	deffff04 	addi	sp,sp,-4
 8001ed8:	dfc00015 	stw	ra,0(sp)
 8001edc:	8001eb80 	call	8001eb8 <_ZN10__cxxabiv112__unexpectedEPFvvE>

08001ee0 <_ZSt13set_terminatePFvvE>:
 8001ee0:	00c200b4 	movhi	r3,2050
 8001ee4:	18e30c04 	addi	r3,r3,-29648
 8001ee8:	18800017 	ldw	r2,0(r3)
 8001eec:	19000015 	stw	r4,0(r3)
 8001ef0:	f800283a 	ret

08001ef4 <_ZSt13get_terminatev>:
 8001ef4:	008200b4 	movhi	r2,2050
 8001ef8:	10a30c04 	addi	r2,r2,-29648
 8001efc:	10800017 	ldw	r2,0(r2)
 8001f00:	f800283a 	ret

08001f04 <_ZSt14set_unexpectedPFvvE>:
 8001f04:	00c200b4 	movhi	r3,2050
 8001f08:	18e31504 	addi	r3,r3,-29612
 8001f0c:	18800017 	ldw	r2,0(r3)
 8001f10:	19000015 	stw	r4,0(r3)
 8001f14:	f800283a 	ret

08001f18 <_ZSt14get_unexpectedv>:
 8001f18:	008200b4 	movhi	r2,2050
 8001f1c:	10a31504 	addi	r2,r2,-29612
 8001f20:	10800017 	ldw	r2,0(r2)
 8001f24:	f800283a 	ret

08001f28 <_ZN10__cxxabiv120__si_class_type_infoD1Ev>:
 8001f28:	00820074 	movhi	r2,2049
 8001f2c:	109ad004 	addi	r2,r2,27456
 8001f30:	20800015 	stw	r2,0(r4)
 8001f34:	8001ba41 	jmpi	8001ba4 <_ZN10__cxxabiv117__class_type_infoD1Ev>

08001f38 <_ZN10__cxxabiv120__si_class_type_infoD0Ev>:
 8001f38:	defffe04 	addi	sp,sp,-8
 8001f3c:	00820074 	movhi	r2,2049
 8001f40:	dc000015 	stw	r16,0(sp)
 8001f44:	dfc00115 	stw	ra,4(sp)
 8001f48:	109ad004 	addi	r2,r2,27456
 8001f4c:	20800015 	stw	r2,0(r4)
 8001f50:	2021883a 	mov	r16,r4
 8001f54:	8001ba40 	call	8001ba4 <_ZN10__cxxabiv117__class_type_infoD1Ev>
 8001f58:	8009883a 	mov	r4,r16
 8001f5c:	dfc00117 	ldw	ra,4(sp)
 8001f60:	dc000017 	ldw	r16,0(sp)
 8001f64:	dec00204 	addi	sp,sp,8
 8001f68:	8001ddc1 	jmpi	8001ddc <_ZdlPv>

08001f6c <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE>:
 8001f6c:	defff504 	addi	sp,sp,-44
 8001f70:	dc000115 	stw	r16,4(sp)
 8001f74:	38800117 	ldw	r2,4(r7)
 8001f78:	24000117 	ldw	r16,4(r4)
 8001f7c:	ddc00815 	stw	r23,32(sp)
 8001f80:	dd800715 	stw	r22,28(sp)
 8001f84:	dd400615 	stw	r21,24(sp)
 8001f88:	dd000515 	stw	r20,20(sp)
 8001f8c:	dcc00415 	stw	r19,16(sp)
 8001f90:	dc800315 	stw	r18,12(sp)
 8001f94:	dc400215 	stw	r17,8(sp)
 8001f98:	dfc00a15 	stw	ra,40(sp)
 8001f9c:	df000915 	stw	fp,36(sp)
 8001fa0:	202b883a 	mov	r21,r4
 8001fa4:	382d883a 	mov	r22,r7
 8001fa8:	2823883a 	mov	r17,r5
 8001fac:	dc800b17 	ldw	r18,44(sp)
 8001fb0:	ddc00c17 	ldw	r23,48(sp)
 8001fb4:	dd000d17 	ldw	r20,52(sp)
 8001fb8:	dcc00e17 	ldw	r19,56(sp)
 8001fbc:	80801f26 	beq	r16,r2,800203c <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xd0>
 8001fc0:	87000007 	ldb	fp,0(r16)
 8001fc4:	00c00a84 	movi	r3,42
 8001fc8:	e0c00626 	beq	fp,r3,8001fe4 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x78>
 8001fcc:	8009883a 	mov	r4,r16
 8001fd0:	100b883a 	mov	r5,r2
 8001fd4:	d9800015 	stw	r6,0(sp)
 8001fd8:	8003ce00 	call	8003ce0 <strcmp>
 8001fdc:	d9800017 	ldw	r6,0(sp)
 8001fe0:	10001626 	beq	r2,zero,800203c <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xd0>
 8001fe4:	95002c26 	beq	r18,r20,8002098 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x12c>
 8001fe8:	a9000217 	ldw	r4,8(r21)
 8001fec:	880b883a 	mov	r5,r17
 8001ff0:	b00f883a 	mov	r7,r22
 8001ff4:	20800017 	ldw	r2,0(r4)
 8001ff8:	dc800b15 	stw	r18,44(sp)
 8001ffc:	ddc00c15 	stw	r23,48(sp)
 8002000:	dd000d15 	stw	r20,52(sp)
 8002004:	dcc00e15 	stw	r19,56(sp)
 8002008:	10800717 	ldw	r2,28(r2)
 800200c:	dfc00a17 	ldw	ra,40(sp)
 8002010:	df000917 	ldw	fp,36(sp)
 8002014:	ddc00817 	ldw	r23,32(sp)
 8002018:	dd800717 	ldw	r22,28(sp)
 800201c:	dd400617 	ldw	r21,24(sp)
 8002020:	dd000517 	ldw	r20,20(sp)
 8002024:	dcc00417 	ldw	r19,16(sp)
 8002028:	dc800317 	ldw	r18,12(sp)
 800202c:	dc400217 	ldw	r17,8(sp)
 8002030:	dc000117 	ldw	r16,4(sp)
 8002034:	dec00b04 	addi	sp,sp,44
 8002038:	1000683a 	jmp	r2
 800203c:	9c800015 	stw	r18,0(r19)
 8002040:	99800115 	stw	r6,4(r19)
 8002044:	88001116 	blt	r17,zero,800208c <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x120>
 8002048:	9463883a 	add	r17,r18,r17
 800204c:	a4401d26 	beq	r20,r17,80020c4 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x158>
 8002050:	00800044 	movi	r2,1
 8002054:	98800315 	stw	r2,12(r19)
 8002058:	0005883a 	mov	r2,zero
 800205c:	dfc00a17 	ldw	ra,40(sp)
 8002060:	df000917 	ldw	fp,36(sp)
 8002064:	ddc00817 	ldw	r23,32(sp)
 8002068:	dd800717 	ldw	r22,28(sp)
 800206c:	dd400617 	ldw	r21,24(sp)
 8002070:	dd000517 	ldw	r20,20(sp)
 8002074:	dcc00417 	ldw	r19,16(sp)
 8002078:	dc800317 	ldw	r18,12(sp)
 800207c:	dc400217 	ldw	r17,8(sp)
 8002080:	dc000117 	ldw	r16,4(sp)
 8002084:	dec00b04 	addi	sp,sp,44
 8002088:	f800283a 	ret
 800208c:	00bfff84 	movi	r2,-2
 8002090:	88bff11e 	bne	r17,r2,8002058 <__alt_data_end+0xfc002058>
 8002094:	003fee06 	br	8002050 <__alt_data_end+0xfc002050>
 8002098:	b9400117 	ldw	r5,4(r23)
 800209c:	81400726 	beq	r16,r5,80020bc <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x150>
 80020a0:	00800a84 	movi	r2,42
 80020a4:	e0bfd026 	beq	fp,r2,8001fe8 <__alt_data_end+0xfc001fe8>
 80020a8:	8009883a 	mov	r4,r16
 80020ac:	d9800015 	stw	r6,0(sp)
 80020b0:	8003ce00 	call	8003ce0 <strcmp>
 80020b4:	d9800017 	ldw	r6,0(sp)
 80020b8:	103fcb1e 	bne	r2,zero,8001fe8 <__alt_data_end+0xfc001fe8>
 80020bc:	99800215 	stw	r6,8(r19)
 80020c0:	003fe506 	br	8002058 <__alt_data_end+0xfc002058>
 80020c4:	00800184 	movi	r2,6
 80020c8:	003fe206 	br	8002054 <__alt_data_end+0xfc002054>

080020cc <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_>:
 80020cc:	defffa04 	addi	sp,sp,-24
 80020d0:	dc000215 	stw	r16,8(sp)
 80020d4:	dc000617 	ldw	r16,24(sp)
 80020d8:	dc800415 	stw	r18,16(sp)
 80020dc:	dc400315 	stw	r17,12(sp)
 80020e0:	dfc00515 	stw	ra,20(sp)
 80020e4:	2023883a 	mov	r17,r4
 80020e8:	2825883a 	mov	r18,r5
 80020ec:	81800b26 	beq	r16,r6,800211c <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x50>
 80020f0:	89000217 	ldw	r4,8(r17)
 80020f4:	900b883a 	mov	r5,r18
 80020f8:	20800017 	ldw	r2,0(r4)
 80020fc:	dc000615 	stw	r16,24(sp)
 8002100:	10800817 	ldw	r2,32(r2)
 8002104:	dfc00517 	ldw	ra,20(sp)
 8002108:	dc800417 	ldw	r18,16(sp)
 800210c:	dc400317 	ldw	r17,12(sp)
 8002110:	dc000217 	ldw	r16,8(sp)
 8002114:	dec00604 	addi	sp,sp,24
 8002118:	1000683a 	jmp	r2
 800211c:	21000117 	ldw	r4,4(r4)
 8002120:	39400117 	ldw	r5,4(r7)
 8002124:	21400926 	beq	r4,r5,800214c <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x80>
 8002128:	20c00007 	ldb	r3,0(r4)
 800212c:	00800a84 	movi	r2,42
 8002130:	18bfef26 	beq	r3,r2,80020f0 <__alt_data_end+0xfc0020f0>
 8002134:	d9800015 	stw	r6,0(sp)
 8002138:	d9c00115 	stw	r7,4(sp)
 800213c:	8003ce00 	call	8003ce0 <strcmp>
 8002140:	d9800017 	ldw	r6,0(sp)
 8002144:	d9c00117 	ldw	r7,4(sp)
 8002148:	103fe91e 	bne	r2,zero,80020f0 <__alt_data_end+0xfc0020f0>
 800214c:	00800184 	movi	r2,6
 8002150:	dfc00517 	ldw	ra,20(sp)
 8002154:	dc800417 	ldw	r18,16(sp)
 8002158:	dc400317 	ldw	r17,12(sp)
 800215c:	dc000217 	ldw	r16,8(sp)
 8002160:	dec00604 	addi	sp,sp,24
 8002164:	f800283a 	ret

08002168 <_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE>:
 8002168:	defffb04 	addi	sp,sp,-20
 800216c:	dcc00315 	stw	r19,12(sp)
 8002170:	dc800215 	stw	r18,8(sp)
 8002174:	dc400115 	stw	r17,4(sp)
 8002178:	dc000015 	stw	r16,0(sp)
 800217c:	dfc00415 	stw	ra,16(sp)
 8002180:	2027883a 	mov	r19,r4
 8002184:	2825883a 	mov	r18,r5
 8002188:	3023883a 	mov	r17,r6
 800218c:	3821883a 	mov	r16,r7
 8002190:	8001be80 	call	8001be8 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE>
 8002194:	10c03fcc 	andi	r3,r2,255
 8002198:	18000726 	beq	r3,zero,80021b8 <_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x50>
 800219c:	dfc00417 	ldw	ra,16(sp)
 80021a0:	dcc00317 	ldw	r19,12(sp)
 80021a4:	dc800217 	ldw	r18,8(sp)
 80021a8:	dc400117 	ldw	r17,4(sp)
 80021ac:	dc000017 	ldw	r16,0(sp)
 80021b0:	dec00504 	addi	sp,sp,20
 80021b4:	f800283a 	ret
 80021b8:	99000217 	ldw	r4,8(r19)
 80021bc:	900b883a 	mov	r5,r18
 80021c0:	880d883a 	mov	r6,r17
 80021c4:	20800017 	ldw	r2,0(r4)
 80021c8:	800f883a 	mov	r7,r16
 80021cc:	10800617 	ldw	r2,24(r2)
 80021d0:	dfc00417 	ldw	ra,16(sp)
 80021d4:	dcc00317 	ldw	r19,12(sp)
 80021d8:	dc800217 	ldw	r18,8(sp)
 80021dc:	dc400117 	ldw	r17,4(sp)
 80021e0:	dc000017 	ldw	r16,0(sp)
 80021e4:	dec00504 	addi	sp,sp,20
 80021e8:	1000683a 	jmp	r2

080021ec <__cxa_get_exception_ptr>:
 80021ec:	20bfff17 	ldw	r2,-4(r4)
 80021f0:	f800283a 	ret

080021f4 <__cxa_begin_catch>:
 80021f4:	defffe04 	addi	sp,sp,-8
 80021f8:	dc000015 	stw	r16,0(sp)
 80021fc:	dfc00115 	stw	ra,4(sp)
 8002200:	2021883a 	mov	r16,r4
 8002204:	8001b080 	call	8001b08 <__cxa_get_globals>
 8002208:	81000017 	ldw	r4,0(r16)
 800220c:	80c00117 	ldw	r3,4(r16)
 8002210:	01af3574 	movhi	r6,48341
 8002214:	31b54004 	addi	r6,r6,-11008
 8002218:	016e2cb4 	movhi	r5,47282
 800221c:	296aaf04 	addi	r5,r5,-21828
 8002220:	218d883a 	add	r6,r4,r6
 8002224:	3109803a 	cmpltu	r4,r6,r4
 8002228:	1947883a 	add	r3,r3,r5
 800222c:	20c7883a 	add	r3,r4,r3
 8002230:	817ff504 	addi	r5,r16,-44
 8002234:	11000017 	ldw	r4,0(r2)
 8002238:	18000726 	beq	r3,zero,8002258 <__cxa_begin_catch+0x64>
 800223c:	2000191e 	bne	r4,zero,80022a4 <__cxa_begin_catch+0xb0>
 8002240:	11400015 	stw	r5,0(r2)
 8002244:	0005883a 	mov	r2,zero
 8002248:	dfc00117 	ldw	ra,4(sp)
 800224c:	dc000017 	ldw	r16,0(sp)
 8002250:	dec00204 	addi	sp,sp,8
 8002254:	f800283a 	ret
 8002258:	01c00044 	movi	r7,1
 800225c:	39bff736 	bltu	r7,r6,800223c <__alt_data_end+0xfc00223c>
 8002260:	80fffa17 	ldw	r3,-24(r16)
 8002264:	18000d16 	blt	r3,zero,800229c <__cxa_begin_catch+0xa8>
 8002268:	18c00044 	addi	r3,r3,1
 800226c:	11800117 	ldw	r6,4(r2)
 8002270:	80fffa15 	stw	r3,-24(r16)
 8002274:	30ffffc4 	addi	r3,r6,-1
 8002278:	10c00115 	stw	r3,4(r2)
 800227c:	21400226 	beq	r4,r5,8002288 <__cxa_begin_catch+0x94>
 8002280:	813ff915 	stw	r4,-28(r16)
 8002284:	11400015 	stw	r5,0(r2)
 8002288:	80bfff17 	ldw	r2,-4(r16)
 800228c:	dfc00117 	ldw	ra,4(sp)
 8002290:	dc000017 	ldw	r16,0(sp)
 8002294:	dec00204 	addi	sp,sp,8
 8002298:	f800283a 	ret
 800229c:	38c7c83a 	sub	r3,r7,r3
 80022a0:	003ff206 	br	800226c <__alt_data_end+0xfc00226c>
 80022a4:	8001ea00 	call	8001ea0 <_ZSt9terminatev>

080022a8 <__cxa_end_catch>:
 80022a8:	deffff04 	addi	sp,sp,-4
 80022ac:	dfc00015 	stw	ra,0(sp)
 80022b0:	8001afc0 	call	8001afc <__cxa_get_globals_fast>
 80022b4:	11000017 	ldw	r4,0(r2)
 80022b8:	20001326 	beq	r4,zero,8002308 <__cxa_end_catch+0x60>
 80022bc:	21400b17 	ldw	r5,44(r4)
 80022c0:	01ef3574 	movhi	r7,48341
 80022c4:	39f54004 	addi	r7,r7,-11008
 80022c8:	29cf883a 	add	r7,r5,r7
 80022cc:	20c00c17 	ldw	r3,48(r4)
 80022d0:	394d803a 	cmpltu	r6,r7,r5
 80022d4:	016e2cb4 	movhi	r5,47282
 80022d8:	296aaf04 	addi	r5,r5,-21828
 80022dc:	1947883a 	add	r3,r3,r5
 80022e0:	30c7883a 	add	r3,r6,r3
 80022e4:	18000b1e 	bne	r3,zero,8002314 <__cxa_end_catch+0x6c>
 80022e8:	00c00044 	movi	r3,1
 80022ec:	19c00936 	bltu	r3,r7,8002314 <__cxa_end_catch+0x6c>
 80022f0:	20c00517 	ldw	r3,20(r4)
 80022f4:	18000c16 	blt	r3,zero,8002328 <__cxa_end_catch+0x80>
 80022f8:	197fffc4 	addi	r5,r3,-1
 80022fc:	28000f26 	beq	r5,zero,800233c <__cxa_end_catch+0x94>
 8002300:	18001426 	beq	r3,zero,8002354 <__cxa_end_catch+0xac>
 8002304:	21400515 	stw	r5,20(r4)
 8002308:	dfc00017 	ldw	ra,0(sp)
 800230c:	dec00104 	addi	sp,sp,4
 8002310:	f800283a 	ret
 8002314:	21000b04 	addi	r4,r4,44
 8002318:	10000015 	stw	zero,0(r2)
 800231c:	dfc00017 	ldw	ra,0(sp)
 8002320:	dec00104 	addi	sp,sp,4
 8002324:	8002c7c1 	jmpi	8002c7c <_Unwind_DeleteException>
 8002328:	19400044 	addi	r5,r3,1
 800232c:	283ff51e 	bne	r5,zero,8002304 <__alt_data_end+0xfc002304>
 8002330:	20c00417 	ldw	r3,16(r4)
 8002334:	10c00015 	stw	r3,0(r2)
 8002338:	003ff206 	br	8002304 <__alt_data_end+0xfc002304>
 800233c:	20c00417 	ldw	r3,16(r4)
 8002340:	21000b04 	addi	r4,r4,44
 8002344:	10c00015 	stw	r3,0(r2)
 8002348:	dfc00017 	ldw	ra,0(sp)
 800234c:	dec00104 	addi	sp,sp,4
 8002350:	8002c7c1 	jmpi	8002c7c <_Unwind_DeleteException>
 8002354:	8001ea00 	call	8001ea0 <_ZSt9terminatev>

08002358 <_ZSt18uncaught_exceptionv>:
 8002358:	deffff04 	addi	sp,sp,-4
 800235c:	dfc00015 	stw	ra,0(sp)
 8002360:	8001b080 	call	8001b08 <__cxa_get_globals>
 8002364:	10800117 	ldw	r2,4(r2)
 8002368:	1004c03a 	cmpne	r2,r2,zero
 800236c:	dfc00017 	ldw	ra,0(sp)
 8002370:	dec00104 	addi	sp,sp,4
 8002374:	f800283a 	ret

08002378 <__cxa_call_terminate>:
 8002378:	defffe04 	addi	sp,sp,-8
 800237c:	dc000015 	stw	r16,0(sp)
 8002380:	dfc00115 	stw	ra,4(sp)
 8002384:	2021883a 	mov	r16,r4
 8002388:	20000c26 	beq	r4,zero,80023bc <__cxa_call_terminate+0x44>
 800238c:	80021f40 	call	80021f4 <__cxa_begin_catch>
 8002390:	80c00017 	ldw	r3,0(r16)
 8002394:	012f3574 	movhi	r4,48341
 8002398:	21354004 	addi	r4,r4,-11008
 800239c:	1909883a 	add	r4,r3,r4
 80023a0:	80800117 	ldw	r2,4(r16)
 80023a4:	20cb803a 	cmpltu	r5,r4,r3
 80023a8:	00ee2cb4 	movhi	r3,47282
 80023ac:	18eaaf04 	addi	r3,r3,-21828
 80023b0:	10c5883a 	add	r2,r2,r3
 80023b4:	2885883a 	add	r2,r5,r2
 80023b8:	10000126 	beq	r2,zero,80023c0 <__cxa_call_terminate+0x48>
 80023bc:	8001ea00 	call	8001ea0 <_ZSt9terminatev>
 80023c0:	00800044 	movi	r2,1
 80023c4:	113ffd36 	bltu	r2,r4,80023bc <__alt_data_end+0xfc0023bc>
 80023c8:	813ff817 	ldw	r4,-32(r16)
 80023cc:	8001de00 	call	8001de0 <_ZN10__cxxabiv111__terminateEPFvvE>

080023d0 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception>:
 80023d0:	defffe04 	addi	sp,sp,-8
 80023d4:	dfc00115 	stw	ra,4(sp)
 80023d8:	dc000015 	stw	r16,0(sp)
 80023dc:	00800044 	movi	r2,1
 80023e0:	11000a36 	bltu	r2,r4,800240c <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception+0x3c>
 80023e4:	28bff617 	ldw	r2,-40(r5)
 80023e8:	2c000504 	addi	r16,r5,20
 80023ec:	10000226 	beq	r2,zero,80023f8 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception+0x28>
 80023f0:	8009883a 	mov	r4,r16
 80023f4:	103ee83a 	callr	r2
 80023f8:	8009883a 	mov	r4,r16
 80023fc:	dfc00117 	ldw	ra,4(sp)
 8002400:	dc000017 	ldw	r16,0(sp)
 8002404:	dec00204 	addi	sp,sp,8
 8002408:	80026301 	jmpi	8002630 <__cxa_free_exception>
 800240c:	293ff817 	ldw	r4,-32(r5)
 8002410:	8001de00 	call	8001de0 <_ZN10__cxxabiv111__terminateEPFvvE>

08002414 <__cxa_throw>:
 8002414:	defffb04 	addi	sp,sp,-20
 8002418:	dfc00415 	stw	ra,16(sp)
 800241c:	dcc00315 	stw	r19,12(sp)
 8002420:	dc800215 	stw	r18,8(sp)
 8002424:	2827883a 	mov	r19,r5
 8002428:	3025883a 	mov	r18,r6
 800242c:	dc400115 	stw	r17,4(sp)
 8002430:	dc000015 	stw	r16,0(sp)
 8002434:	2021883a 	mov	r16,r4
 8002438:	8001b080 	call	8001b08 <__cxa_get_globals>
 800243c:	10c00117 	ldw	r3,4(r2)
 8002440:	847ffb04 	addi	r17,r16,-20
 8002444:	18c00044 	addi	r3,r3,1
 8002448:	10c00115 	stw	r3,4(r2)
 800244c:	00800044 	movi	r2,1
 8002450:	80bfef15 	stw	r2,-68(r16)
 8002454:	84fff015 	stw	r19,-64(r16)
 8002458:	84bff115 	stw	r18,-60(r16)
 800245c:	8001f180 	call	8001f18 <_ZSt14get_unexpectedv>
 8002460:	80bff215 	stw	r2,-56(r16)
 8002464:	8001ef40 	call	8001ef4 <_ZSt13get_terminatev>
 8002468:	80bff315 	stw	r2,-52(r16)
 800246c:	0090caf4 	movhi	r2,17195
 8002470:	108ac004 	addi	r2,r2,11008
 8002474:	80bffb15 	stw	r2,-20(r16)
 8002478:	0091d3b4 	movhi	r2,18254
 800247c:	109550c4 	addi	r2,r2,21827
 8002480:	80bffc15 	stw	r2,-16(r16)
 8002484:	00820034 	movhi	r2,2048
 8002488:	1088f404 	addi	r2,r2,9168
 800248c:	8809883a 	mov	r4,r17
 8002490:	80bffd15 	stw	r2,-12(r16)
 8002494:	8002ad80 	call	8002ad8 <_Unwind_SjLj_RaiseException>
 8002498:	8809883a 	mov	r4,r17
 800249c:	80021f40 	call	80021f4 <__cxa_begin_catch>
 80024a0:	8001ea00 	call	8001ea0 <_ZSt9terminatev>

080024a4 <__cxa_rethrow>:
 80024a4:	defffe04 	addi	sp,sp,-8
 80024a8:	dfc00115 	stw	ra,4(sp)
 80024ac:	dc000015 	stw	r16,0(sp)
 80024b0:	8001b080 	call	8001b08 <__cxa_get_globals>
 80024b4:	10c00117 	ldw	r3,4(r2)
 80024b8:	11000017 	ldw	r4,0(r2)
 80024bc:	18c00044 	addi	r3,r3,1
 80024c0:	10c00115 	stw	r3,4(r2)
 80024c4:	20001126 	beq	r4,zero,800250c <__cxa_rethrow+0x68>
 80024c8:	21400b17 	ldw	r5,44(r4)
 80024cc:	01ef3574 	movhi	r7,48341
 80024d0:	39f54004 	addi	r7,r7,-11008
 80024d4:	29cf883a 	add	r7,r5,r7
 80024d8:	20c00c17 	ldw	r3,48(r4)
 80024dc:	394d803a 	cmpltu	r6,r7,r5
 80024e0:	016e2cb4 	movhi	r5,47282
 80024e4:	296aaf04 	addi	r5,r5,-21828
 80024e8:	1947883a 	add	r3,r3,r5
 80024ec:	30c7883a 	add	r3,r6,r3
 80024f0:	18000726 	beq	r3,zero,8002510 <__cxa_rethrow+0x6c>
 80024f4:	10000015 	stw	zero,0(r2)
 80024f8:	24000b04 	addi	r16,r4,44
 80024fc:	8009883a 	mov	r4,r16
 8002500:	8002c300 	call	8002c30 <_Unwind_SjLj_Resume_or_Rethrow>
 8002504:	8009883a 	mov	r4,r16
 8002508:	80021f40 	call	80021f4 <__cxa_begin_catch>
 800250c:	8001ea00 	call	8001ea0 <_ZSt9terminatev>
 8002510:	00c00044 	movi	r3,1
 8002514:	19fff736 	bltu	r3,r7,80024f4 <__alt_data_end+0xfc0024f4>
 8002518:	20800517 	ldw	r2,20(r4)
 800251c:	0085c83a 	sub	r2,zero,r2
 8002520:	20800515 	stw	r2,20(r4)
 8002524:	003ff406 	br	80024f8 <__alt_data_end+0xfc0024f8>

08002528 <_ZNSt9type_infoD1Ev>:
 8002528:	f800283a 	ret

0800252c <_ZNKSt9type_info14__is_pointer_pEv>:
 800252c:	0005883a 	mov	r2,zero
 8002530:	f800283a 	ret

08002534 <_ZNKSt9type_info15__is_function_pEv>:
 8002534:	0005883a 	mov	r2,zero
 8002538:	f800283a 	ret

0800253c <_ZNKSt9type_info11__do_upcastEPKN10__cxxabiv117__class_type_infoEPPv>:
 800253c:	0005883a 	mov	r2,zero
 8002540:	f800283a 	ret

08002544 <_ZNSt9type_infoD0Ev>:
 8002544:	8001ddc1 	jmpi	8001ddc <_ZdlPv>

08002548 <_ZNKSt9type_info10__do_catchEPKS_PPvj>:
 8002548:	21000117 	ldw	r4,4(r4)
 800254c:	29400117 	ldw	r5,4(r5)
 8002550:	21400c26 	beq	r4,r5,8002584 <_ZNKSt9type_info10__do_catchEPKS_PPvj+0x3c>
 8002554:	20c00007 	ldb	r3,0(r4)
 8002558:	00800a84 	movi	r2,42
 800255c:	18800726 	beq	r3,r2,800257c <_ZNKSt9type_info10__do_catchEPKS_PPvj+0x34>
 8002560:	deffff04 	addi	sp,sp,-4
 8002564:	dfc00015 	stw	ra,0(sp)
 8002568:	8003ce00 	call	8003ce0 <strcmp>
 800256c:	1005003a 	cmpeq	r2,r2,zero
 8002570:	dfc00017 	ldw	ra,0(sp)
 8002574:	dec00104 	addi	sp,sp,4
 8002578:	f800283a 	ret
 800257c:	0005883a 	mov	r2,zero
 8002580:	f800283a 	ret
 8002584:	00800044 	movi	r2,1
 8002588:	f800283a 	ret

0800258c <__cxa_allocate_exception>:
 800258c:	defffd04 	addi	sp,sp,-12
 8002590:	dc400115 	stw	r17,4(sp)
 8002594:	24401104 	addi	r17,r4,68
 8002598:	8809883a 	mov	r4,r17
 800259c:	dc000015 	stw	r16,0(sp)
 80025a0:	dfc00215 	stw	ra,8(sp)
 80025a4:	8002d200 	call	8002d20 <malloc>
 80025a8:	1021883a 	mov	r16,r2
 80025ac:	10000a26 	beq	r2,zero,80025d8 <__cxa_allocate_exception+0x4c>
 80025b0:	8009883a 	mov	r4,r16
 80025b4:	000b883a 	mov	r5,zero
 80025b8:	01801104 	movi	r6,68
 80025bc:	80034f00 	call	80034f0 <memset>
 80025c0:	80801104 	addi	r2,r16,68
 80025c4:	dfc00217 	ldw	ra,8(sp)
 80025c8:	dc400117 	ldw	r17,4(sp)
 80025cc:	dc000017 	ldw	r16,0(sp)
 80025d0:	dec00304 	addi	sp,sp,12
 80025d4:	f800283a 	ret
 80025d8:	014200b4 	movhi	r5,2050
 80025dc:	296a4804 	addi	r5,r5,-22240
 80025e0:	00808004 	movi	r2,512
 80025e4:	29800017 	ldw	r6,0(r5)
 80025e8:	14400736 	bltu	r2,r17,8002608 <__cxa_allocate_exception+0x7c>
 80025ec:	3005883a 	mov	r2,r6
 80025f0:	01000104 	movi	r4,4
 80025f4:	10c0004c 	andi	r3,r2,1
 80025f8:	18000426 	beq	r3,zero,800260c <__cxa_allocate_exception+0x80>
 80025fc:	84000044 	addi	r16,r16,1
 8002600:	1004d07a 	srli	r2,r2,1
 8002604:	813ffb1e 	bne	r16,r4,80025f4 <__alt_data_end+0xfc0025f4>
 8002608:	8001ea00 	call	8001ea0 <_ZSt9terminatev>
 800260c:	00800044 	movi	r2,1
 8002610:	1404983a 	sll	r2,r2,r16
 8002614:	8020927a 	slli	r16,r16,9
 8002618:	118cb03a 	or	r6,r2,r6
 800261c:	008200b4 	movhi	r2,2050
 8002620:	10aa9804 	addi	r2,r2,-21920
 8002624:	29800015 	stw	r6,0(r5)
 8002628:	80a1883a 	add	r16,r16,r2
 800262c:	003fe006 	br	80025b0 <__alt_data_end+0xfc0025b0>

08002630 <__cxa_free_exception>:
 8002630:	008200b4 	movhi	r2,2050
 8002634:	10aa9804 	addi	r2,r2,-21920
 8002638:	20800236 	bltu	r4,r2,8002644 <__cxa_free_exception+0x14>
 800263c:	10c20004 	addi	r3,r2,2048
 8002640:	20c00236 	bltu	r4,r3,800264c <__cxa_free_exception+0x1c>
 8002644:	213fef04 	addi	r4,r4,-68
 8002648:	8002d341 	jmpi	8002d34 <free>
 800264c:	2089c83a 	sub	r4,r4,r2
 8002650:	2008d27a 	srli	r4,r4,9
 8002654:	014200b4 	movhi	r5,2050
 8002658:	296a4804 	addi	r5,r5,-22240
 800265c:	00ffff84 	movi	r3,-2
 8002660:	28800017 	ldw	r2,0(r5)
 8002664:	1908183a 	rol	r4,r3,r4
 8002668:	2088703a 	and	r4,r4,r2
 800266c:	29000015 	stw	r4,0(r5)
 8002670:	f800283a 	ret

08002674 <__cxa_allocate_dependent_exception>:
 8002674:	defffe04 	addi	sp,sp,-8
 8002678:	01001004 	movi	r4,64
 800267c:	dc000015 	stw	r16,0(sp)
 8002680:	dfc00115 	stw	ra,4(sp)
 8002684:	8002d200 	call	8002d20 <malloc>
 8002688:	1021883a 	mov	r16,r2
 800268c:	10000926 	beq	r2,zero,80026b4 <__cxa_allocate_dependent_exception+0x40>
 8002690:	8009883a 	mov	r4,r16
 8002694:	000b883a 	mov	r5,zero
 8002698:	01801004 	movi	r6,64
 800269c:	80034f00 	call	80034f0 <memset>
 80026a0:	8005883a 	mov	r2,r16
 80026a4:	dfc00117 	ldw	ra,4(sp)
 80026a8:	dc000017 	ldw	r16,0(sp)
 80026ac:	dec00204 	addi	sp,sp,8
 80026b0:	f800283a 	ret
 80026b4:	01c200b4 	movhi	r7,2050
 80026b8:	39ea4704 	addi	r7,r7,-22244
 80026bc:	39800017 	ldw	r6,0(r7)
 80026c0:	0005883a 	mov	r2,zero
 80026c4:	01400104 	movi	r5,4
 80026c8:	3007883a 	mov	r3,r6
 80026cc:	1900004c 	andi	r4,r3,1
 80026d0:	20000426 	beq	r4,zero,80026e4 <__cxa_allocate_dependent_exception+0x70>
 80026d4:	10800044 	addi	r2,r2,1
 80026d8:	1806d07a 	srli	r3,r3,1
 80026dc:	117ffb1e 	bne	r2,r5,80026cc <__alt_data_end+0xfc0026cc>
 80026e0:	8001ea00 	call	8001ea0 <_ZSt9terminatev>
 80026e4:	00c00044 	movi	r3,1
 80026e8:	1886983a 	sll	r3,r3,r2
 80026ec:	100491ba 	slli	r2,r2,6
 80026f0:	040200b4 	movhi	r16,2050
 80026f4:	198cb03a 	or	r6,r3,r6
 80026f8:	842a5804 	addi	r16,r16,-22176
 80026fc:	39800015 	stw	r6,0(r7)
 8002700:	1421883a 	add	r16,r2,r16
 8002704:	003fe206 	br	8002690 <__alt_data_end+0xfc002690>

08002708 <__cxa_free_dependent_exception>:
 8002708:	008200b4 	movhi	r2,2050
 800270c:	10aa5804 	addi	r2,r2,-22176
 8002710:	20800236 	bltu	r4,r2,800271c <__cxa_free_dependent_exception+0x14>
 8002714:	10c04004 	addi	r3,r2,256
 8002718:	20c00136 	bltu	r4,r3,8002720 <__cxa_free_dependent_exception+0x18>
 800271c:	8002d341 	jmpi	8002d34 <free>
 8002720:	2089c83a 	sub	r4,r4,r2
 8002724:	2008d1ba 	srli	r4,r4,6
 8002728:	014200b4 	movhi	r5,2050
 800272c:	296a4704 	addi	r5,r5,-22244
 8002730:	00ffff84 	movi	r3,-2
 8002734:	28800017 	ldw	r2,0(r5)
 8002738:	1908183a 	rol	r4,r3,r4
 800273c:	2088703a 	and	r4,r4,r2
 8002740:	29000015 	stw	r4,0(r5)
 8002744:	f800283a 	ret

08002748 <_ZNSt9exceptionD1Ev>:
 8002748:	f800283a 	ret

0800274c <_ZNSt13bad_exceptionD1Ev>:
 800274c:	f800283a 	ret

08002750 <_ZNKSt9exception4whatEv>:
 8002750:	00820074 	movhi	r2,2049
 8002754:	109ae504 	addi	r2,r2,27540
 8002758:	f800283a 	ret

0800275c <_ZNKSt13bad_exception4whatEv>:
 800275c:	00820074 	movhi	r2,2049
 8002760:	109ae904 	addi	r2,r2,27556
 8002764:	f800283a 	ret

08002768 <_ZNSt9exceptionD0Ev>:
 8002768:	8001ddc1 	jmpi	8001ddc <_ZdlPv>

0800276c <_ZNSt13bad_exceptionD0Ev>:
 800276c:	8001ddc1 	jmpi	8001ddc <_ZdlPv>

08002770 <_ZN10__cxxabiv115__forced_unwindD1Ev>:
 8002770:	f800283a 	ret

08002774 <_ZN10__cxxabiv115__forced_unwindD0Ev>:
 8002774:	8001ddc1 	jmpi	8001ddc <_ZdlPv>

08002778 <_ZN10__cxxabiv119__foreign_exceptionD1Ev>:
 8002778:	f800283a 	ret

0800277c <_ZN10__cxxabiv119__foreign_exceptionD0Ev>:
 800277c:	8001ddc1 	jmpi	8001ddc <_ZdlPv>

08002780 <__cxa_pure_virtual>:
 8002780:	01420074 	movhi	r5,2049
 8002784:	deffff04 	addi	sp,sp,-4
 8002788:	295b1f04 	addi	r5,r5,27772
 800278c:	01000084 	movi	r4,2
 8002790:	018006c4 	movi	r6,27
 8002794:	dfc00015 	stw	ra,0(sp)
 8002798:	8013b280 	call	8013b28 <write>
 800279c:	8001ea00 	call	8001ea0 <_ZSt9terminatev>

080027a0 <__cxa_deleted_virtual>:
 80027a0:	01420074 	movhi	r5,2049
 80027a4:	deffff04 	addi	sp,sp,-4
 80027a8:	295b2604 	addi	r5,r5,27800
 80027ac:	01000084 	movi	r4,2
 80027b0:	01800784 	movi	r6,30
 80027b4:	dfc00015 	stw	ra,0(sp)
 80027b8:	8013b280 	call	8013b28 <write>
 80027bc:	8001ea00 	call	8001ea0 <_ZSt9terminatev>

080027c0 <__mulsi3>:
 80027c0:	0005883a 	mov	r2,zero
 80027c4:	20000726 	beq	r4,zero,80027e4 <__mulsi3+0x24>
 80027c8:	20c0004c 	andi	r3,r4,1
 80027cc:	2008d07a 	srli	r4,r4,1
 80027d0:	18000126 	beq	r3,zero,80027d8 <__mulsi3+0x18>
 80027d4:	1145883a 	add	r2,r2,r5
 80027d8:	294b883a 	add	r5,r5,r5
 80027dc:	203ffa1e 	bne	r4,zero,80027c8 <__alt_data_end+0xfc0027c8>
 80027e0:	f800283a 	ret
 80027e4:	f800283a 	ret

080027e8 <_Unwind_ForcedUnwind_Phase2>:
 80027e8:	defff404 	addi	sp,sp,-48
 80027ec:	dd800915 	stw	r22,36(sp)
 80027f0:	058200b4 	movhi	r22,2050
 80027f4:	ddc00a15 	stw	r23,40(sp)
 80027f8:	dd400815 	stw	r21,32(sp)
 80027fc:	dd000715 	stw	r20,28(sp)
 8002800:	dcc00615 	stw	r19,24(sp)
 8002804:	dc400415 	stw	r17,16(sp)
 8002808:	dc000315 	stw	r16,12(sp)
 800280c:	dfc00b15 	stw	ra,44(sp)
 8002810:	dc800515 	stw	r18,20(sp)
 8002814:	2021883a 	mov	r16,r4
 8002818:	2823883a 	mov	r17,r5
 800281c:	24c00317 	ldw	r19,12(r4)
 8002820:	25000417 	ldw	r20,16(r4)
 8002824:	28c00017 	ldw	r3,0(r5)
 8002828:	b5aa4904 	addi	r22,r22,-22236
 800282c:	054001c4 	movi	r21,7
 8002830:	05c00204 	movi	r23,8
 8002834:	00001606 	br	8002890 <_Unwind_ForcedUnwind_Phase2+0xa8>
 8002838:	81800017 	ldw	r6,0(r16)
 800283c:	81c00117 	ldw	r7,4(r16)
 8002840:	1c800617 	ldw	r18,24(r3)
 8002844:	dc000015 	stw	r16,0(sp)
 8002848:	dc400115 	stw	r17,4(sp)
 800284c:	dd000215 	stw	r20,8(sp)
 8002850:	983ee83a 	callr	r19
 8002854:	01000044 	movi	r4,1
 8002858:	01400284 	movi	r5,10
 800285c:	1000241e 	bne	r2,zero,80028f0 <_Unwind_ForcedUnwind_Phase2+0x108>
 8002860:	90000726 	beq	r18,zero,8002880 <_Unwind_ForcedUnwind_Phase2+0x98>
 8002864:	81800017 	ldw	r6,0(r16)
 8002868:	81c00117 	ldw	r7,4(r16)
 800286c:	dc000015 	stw	r16,0(sp)
 8002870:	dc400115 	stw	r17,4(sp)
 8002874:	903ee83a 	callr	r18
 8002878:	15401f26 	beq	r2,r21,80028f8 <_Unwind_ForcedUnwind_Phase2+0x110>
 800287c:	15c01c1e 	bne	r2,r23,80028f0 <_Unwind_ForcedUnwind_Phase2+0x108>
 8002880:	88800017 	ldw	r2,0(r17)
 8002884:	10c00017 	ldw	r3,0(r2)
 8002888:	b0c00015 	stw	r3,0(r22)
 800288c:	88c00015 	stw	r3,0(r17)
 8002890:	01000044 	movi	r4,1
 8002894:	01400284 	movi	r5,10
 8002898:	183fe71e 	bne	r3,zero,8002838 <__alt_data_end+0xfc002838>
 800289c:	81800017 	ldw	r6,0(r16)
 80028a0:	81c00117 	ldw	r7,4(r16)
 80028a4:	01000044 	movi	r4,1
 80028a8:	dc000015 	stw	r16,0(sp)
 80028ac:	dc400115 	stw	r17,4(sp)
 80028b0:	dd000215 	stw	r20,8(sp)
 80028b4:	01400684 	movi	r5,26
 80028b8:	983ee83a 	callr	r19
 80028bc:	10000c1e 	bne	r2,zero,80028f0 <_Unwind_ForcedUnwind_Phase2+0x108>
 80028c0:	00800144 	movi	r2,5
 80028c4:	dfc00b17 	ldw	ra,44(sp)
 80028c8:	ddc00a17 	ldw	r23,40(sp)
 80028cc:	dd800917 	ldw	r22,36(sp)
 80028d0:	dd400817 	ldw	r21,32(sp)
 80028d4:	dd000717 	ldw	r20,28(sp)
 80028d8:	dcc00617 	ldw	r19,24(sp)
 80028dc:	dc800517 	ldw	r18,20(sp)
 80028e0:	dc400417 	ldw	r17,16(sp)
 80028e4:	dc000317 	ldw	r16,12(sp)
 80028e8:	dec00c04 	addi	sp,sp,48
 80028ec:	f800283a 	ret
 80028f0:	00800084 	movi	r2,2
 80028f4:	003ff306 	br	80028c4 <__alt_data_end+0xfc0028c4>
 80028f8:	a805883a 	mov	r2,r21
 80028fc:	003ff106 	br	80028c4 <__alt_data_end+0xfc0028c4>

08002900 <_Unwind_RaiseException_Phase2>:
 8002900:	28c00017 	ldw	r3,0(r5)
 8002904:	defff804 	addi	sp,sp,-32
 8002908:	dcc00515 	stw	r19,20(sp)
 800290c:	dc800415 	stw	r18,16(sp)
 8002910:	dc400315 	stw	r17,12(sp)
 8002914:	dc000215 	stw	r16,8(sp)
 8002918:	dfc00715 	stw	ra,28(sp)
 800291c:	dd000615 	stw	r20,24(sp)
 8002920:	2823883a 	mov	r17,r5
 8002924:	2021883a 	mov	r16,r4
 8002928:	048001c4 	movi	r18,7
 800292c:	04c00204 	movi	r19,8
 8002930:	18001326 	beq	r3,zero,8002980 <_Unwind_RaiseException_Phase2+0x80>
 8002934:	81000417 	ldw	r4,16(r16)
 8002938:	1a000617 	ldw	r8,24(r3)
 800293c:	19001c26 	beq	r3,r4,80029b0 <_Unwind_RaiseException_Phase2+0xb0>
 8002940:	40000b26 	beq	r8,zero,8002970 <_Unwind_RaiseException_Phase2+0x70>
 8002944:	01400084 	movi	r5,2
 8002948:	0029883a 	mov	r20,zero
 800294c:	81800017 	ldw	r6,0(r16)
 8002950:	81c00117 	ldw	r7,4(r16)
 8002954:	01000044 	movi	r4,1
 8002958:	dc000015 	stw	r16,0(sp)
 800295c:	dc400115 	stw	r17,4(sp)
 8002960:	403ee83a 	callr	r8
 8002964:	14800f26 	beq	r2,r18,80029a4 <_Unwind_RaiseException_Phase2+0xa4>
 8002968:	14c0051e 	bne	r2,r19,8002980 <_Unwind_RaiseException_Phase2+0x80>
 800296c:	a0000f1e 	bne	r20,zero,80029ac <_Unwind_RaiseException_Phase2+0xac>
 8002970:	88c00017 	ldw	r3,0(r17)
 8002974:	18c00017 	ldw	r3,0(r3)
 8002978:	88c00015 	stw	r3,0(r17)
 800297c:	183fed1e 	bne	r3,zero,8002934 <__alt_data_end+0xfc002934>
 8002980:	00800084 	movi	r2,2
 8002984:	dfc00717 	ldw	ra,28(sp)
 8002988:	dd000617 	ldw	r20,24(sp)
 800298c:	dcc00517 	ldw	r19,20(sp)
 8002990:	dc800417 	ldw	r18,16(sp)
 8002994:	dc400317 	ldw	r17,12(sp)
 8002998:	dc000217 	ldw	r16,8(sp)
 800299c:	dec00804 	addi	sp,sp,32
 80029a0:	f800283a 	ret
 80029a4:	9005883a 	mov	r2,r18
 80029a8:	003ff606 	br	8002984 <__alt_data_end+0xfc002984>
 80029ac:	8002d080 	call	8002d08 <abort>
 80029b0:	403ffe26 	beq	r8,zero,80029ac <__alt_data_end+0xfc0029ac>
 80029b4:	01400184 	movi	r5,6
 80029b8:	05000104 	movi	r20,4
 80029bc:	003fe306 	br	800294c <__alt_data_end+0xfc00294c>

080029c0 <uw_install_context.isra.1>:
 80029c0:	20c00017 	ldw	r3,0(r4)
 80029c4:	deffff04 	addi	sp,sp,-4
 80029c8:	014200b4 	movhi	r5,2050
 80029cc:	19000917 	ldw	r4,36(r3)
 80029d0:	df000015 	stw	fp,0(sp)
 80029d4:	18800804 	addi	r2,r3,32
 80029d8:	d839883a 	mov	fp,sp
 80029dc:	296a4904 	addi	r5,r5,-22236
 80029e0:	28c00015 	stw	r3,0(r5)
 80029e4:	17000017 	ldw	fp,0(r2)
 80029e8:	1ec00a17 	ldw	sp,40(r3)
 80029ec:	2000683a 	jmp	r4

080029f0 <_Unwind_SjLj_Register>:
 80029f0:	008200b4 	movhi	r2,2050
 80029f4:	10aa4904 	addi	r2,r2,-22236
 80029f8:	10c00017 	ldw	r3,0(r2)
 80029fc:	11000015 	stw	r4,0(r2)
 8002a00:	20c00015 	stw	r3,0(r4)
 8002a04:	f800283a 	ret

08002a08 <_Unwind_SjLj_Unregister>:
 8002a08:	20c00017 	ldw	r3,0(r4)
 8002a0c:	008200b4 	movhi	r2,2050
 8002a10:	10aa4904 	addi	r2,r2,-22236
 8002a14:	10c00015 	stw	r3,0(r2)
 8002a18:	f800283a 	ret

08002a1c <_Unwind_GetGR>:
 8002a1c:	20800017 	ldw	r2,0(r4)
 8002a20:	29400084 	addi	r5,r5,2
 8002a24:	294b883a 	add	r5,r5,r5
 8002a28:	294b883a 	add	r5,r5,r5
 8002a2c:	114b883a 	add	r5,r2,r5
 8002a30:	28800017 	ldw	r2,0(r5)
 8002a34:	f800283a 	ret

08002a38 <_Unwind_GetCFA>:
 8002a38:	20800017 	ldw	r2,0(r4)
 8002a3c:	10000226 	beq	r2,zero,8002a48 <_Unwind_GetCFA+0x10>
 8002a40:	10800a17 	ldw	r2,40(r2)
 8002a44:	f800283a 	ret
 8002a48:	0005883a 	mov	r2,zero
 8002a4c:	f800283a 	ret

08002a50 <_Unwind_SetGR>:
 8002a50:	20800017 	ldw	r2,0(r4)
 8002a54:	29400084 	addi	r5,r5,2
 8002a58:	294b883a 	add	r5,r5,r5
 8002a5c:	294b883a 	add	r5,r5,r5
 8002a60:	114b883a 	add	r5,r2,r5
 8002a64:	29800015 	stw	r6,0(r5)
 8002a68:	f800283a 	ret

08002a6c <_Unwind_GetIP>:
 8002a6c:	20800017 	ldw	r2,0(r4)
 8002a70:	10800117 	ldw	r2,4(r2)
 8002a74:	10800044 	addi	r2,r2,1
 8002a78:	f800283a 	ret

08002a7c <_Unwind_GetIPInfo>:
 8002a7c:	20800017 	ldw	r2,0(r4)
 8002a80:	28000015 	stw	zero,0(r5)
 8002a84:	10000326 	beq	r2,zero,8002a94 <_Unwind_GetIPInfo+0x18>
 8002a88:	10800117 	ldw	r2,4(r2)
 8002a8c:	10800044 	addi	r2,r2,1
 8002a90:	f800283a 	ret
 8002a94:	0005883a 	mov	r2,zero
 8002a98:	f800283a 	ret

08002a9c <_Unwind_SetIP>:
 8002a9c:	20800017 	ldw	r2,0(r4)
 8002aa0:	297fffc4 	addi	r5,r5,-1
 8002aa4:	11400115 	stw	r5,4(r2)
 8002aa8:	f800283a 	ret

08002aac <_Unwind_GetLanguageSpecificData>:
 8002aac:	20800017 	ldw	r2,0(r4)
 8002ab0:	10800717 	ldw	r2,28(r2)
 8002ab4:	f800283a 	ret

08002ab8 <_Unwind_GetRegionStart>:
 8002ab8:	0005883a 	mov	r2,zero
 8002abc:	f800283a 	ret

08002ac0 <_Unwind_FindEnclosingFunction>:
 8002ac0:	0005883a 	mov	r2,zero
 8002ac4:	f800283a 	ret

08002ac8 <_Unwind_GetDataRelBase>:
 8002ac8:	0005883a 	mov	r2,zero
 8002acc:	f800283a 	ret

08002ad0 <_Unwind_GetTextRelBase>:
 8002ad0:	0005883a 	mov	r2,zero
 8002ad4:	f800283a 	ret

08002ad8 <_Unwind_SjLj_RaiseException>:
 8002ad8:	008200b4 	movhi	r2,2050
 8002adc:	defff804 	addi	sp,sp,-32
 8002ae0:	10aa4904 	addi	r2,r2,-22236
 8002ae4:	dc800515 	stw	r18,20(sp)
 8002ae8:	14800017 	ldw	r18,0(r2)
 8002aec:	dfc00715 	stw	ra,28(sp)
 8002af0:	dcc00615 	stw	r19,24(sp)
 8002af4:	dc400415 	stw	r17,16(sp)
 8002af8:	dc000315 	stw	r16,12(sp)
 8002afc:	dc800215 	stw	r18,8(sp)
 8002b00:	90001426 	beq	r18,zero,8002b54 <_Unwind_SjLj_RaiseException+0x7c>
 8002b04:	2021883a 	mov	r16,r4
 8002b08:	9005883a 	mov	r2,r18
 8002b0c:	04400184 	movi	r17,6
 8002b10:	04c00204 	movi	r19,8
 8002b14:	10800617 	ldw	r2,24(r2)
 8002b18:	10000a26 	beq	r2,zero,8002b44 <_Unwind_SjLj_RaiseException+0x6c>
 8002b1c:	81800017 	ldw	r6,0(r16)
 8002b20:	81c00117 	ldw	r7,4(r16)
 8002b24:	01000044 	movi	r4,1
 8002b28:	d8c00204 	addi	r3,sp,8
 8002b2c:	dc000015 	stw	r16,0(sp)
 8002b30:	d8c00115 	stw	r3,4(sp)
 8002b34:	200b883a 	mov	r5,r4
 8002b38:	103ee83a 	callr	r2
 8002b3c:	14400d26 	beq	r2,r17,8002b74 <_Unwind_SjLj_RaiseException+0x9c>
 8002b40:	14c0171e 	bne	r2,r19,8002ba0 <_Unwind_SjLj_RaiseException+0xc8>
 8002b44:	d8800217 	ldw	r2,8(sp)
 8002b48:	10800017 	ldw	r2,0(r2)
 8002b4c:	d8800215 	stw	r2,8(sp)
 8002b50:	103ff01e 	bne	r2,zero,8002b14 <__alt_data_end+0xfc002b14>
 8002b54:	00800144 	movi	r2,5
 8002b58:	dfc00717 	ldw	ra,28(sp)
 8002b5c:	dcc00617 	ldw	r19,24(sp)
 8002b60:	dc800517 	ldw	r18,20(sp)
 8002b64:	dc400417 	ldw	r17,16(sp)
 8002b68:	dc000317 	ldw	r16,12(sp)
 8002b6c:	dec00804 	addi	sp,sp,32
 8002b70:	f800283a 	ret
 8002b74:	d8800217 	ldw	r2,8(sp)
 8002b78:	80000315 	stw	zero,12(r16)
 8002b7c:	8009883a 	mov	r4,r16
 8002b80:	80800415 	stw	r2,16(r16)
 8002b84:	d9400204 	addi	r5,sp,8
 8002b88:	dc800215 	stw	r18,8(sp)
 8002b8c:	80029000 	call	8002900 <_Unwind_RaiseException_Phase2>
 8002b90:	00c001c4 	movi	r3,7
 8002b94:	10fff01e 	bne	r2,r3,8002b58 <__alt_data_end+0xfc002b58>
 8002b98:	d9000204 	addi	r4,sp,8
 8002b9c:	80029c00 	call	80029c0 <uw_install_context.isra.1>
 8002ba0:	008000c4 	movi	r2,3
 8002ba4:	003fec06 	br	8002b58 <__alt_data_end+0xfc002b58>

08002ba8 <_Unwind_SjLj_ForcedUnwind>:
 8002ba8:	00c200b4 	movhi	r3,2050
 8002bac:	18ea4904 	addi	r3,r3,-22236
 8002bb0:	defffe04 	addi	sp,sp,-8
 8002bb4:	18c00017 	ldw	r3,0(r3)
 8002bb8:	dfc00115 	stw	ra,4(sp)
 8002bbc:	21400315 	stw	r5,12(r4)
 8002bc0:	21800415 	stw	r6,16(r4)
 8002bc4:	d80b883a 	mov	r5,sp
 8002bc8:	d8c00015 	stw	r3,0(sp)
 8002bcc:	80027e80 	call	80027e8 <_Unwind_ForcedUnwind_Phase2>
 8002bd0:	00c001c4 	movi	r3,7
 8002bd4:	10c00326 	beq	r2,r3,8002be4 <_Unwind_SjLj_ForcedUnwind+0x3c>
 8002bd8:	dfc00117 	ldw	ra,4(sp)
 8002bdc:	dec00204 	addi	sp,sp,8
 8002be0:	f800283a 	ret
 8002be4:	d809883a 	mov	r4,sp
 8002be8:	80029c00 	call	80029c0 <uw_install_context.isra.1>

08002bec <_Unwind_SjLj_Resume>:
 8002bec:	00c200b4 	movhi	r3,2050
 8002bf0:	18ea4904 	addi	r3,r3,-22236
 8002bf4:	18c00017 	ldw	r3,0(r3)
 8002bf8:	20800317 	ldw	r2,12(r4)
 8002bfc:	defffe04 	addi	sp,sp,-8
 8002c00:	dfc00115 	stw	ra,4(sp)
 8002c04:	d8c00015 	stw	r3,0(sp)
 8002c08:	d80b883a 	mov	r5,sp
 8002c0c:	1000041e 	bne	r2,zero,8002c20 <_Unwind_SjLj_Resume+0x34>
 8002c10:	80029000 	call	8002900 <_Unwind_RaiseException_Phase2>
 8002c14:	00c001c4 	movi	r3,7
 8002c18:	10c00326 	beq	r2,r3,8002c28 <_Unwind_SjLj_Resume+0x3c>
 8002c1c:	8002d080 	call	8002d08 <abort>
 8002c20:	80027e80 	call	80027e8 <_Unwind_ForcedUnwind_Phase2>
 8002c24:	003ffb06 	br	8002c14 <__alt_data_end+0xfc002c14>
 8002c28:	d809883a 	mov	r4,sp
 8002c2c:	80029c00 	call	80029c0 <uw_install_context.isra.1>

08002c30 <_Unwind_SjLj_Resume_or_Rethrow>:
 8002c30:	20800317 	ldw	r2,12(r4)
 8002c34:	defffe04 	addi	sp,sp,-8
 8002c38:	dfc00115 	stw	ra,4(sp)
 8002c3c:	1000041e 	bne	r2,zero,8002c50 <_Unwind_SjLj_Resume_or_Rethrow+0x20>
 8002c40:	8002ad80 	call	8002ad8 <_Unwind_SjLj_RaiseException>
 8002c44:	dfc00117 	ldw	ra,4(sp)
 8002c48:	dec00204 	addi	sp,sp,8
 8002c4c:	f800283a 	ret
 8002c50:	008200b4 	movhi	r2,2050
 8002c54:	10aa4904 	addi	r2,r2,-22236
 8002c58:	10800017 	ldw	r2,0(r2)
 8002c5c:	d80b883a 	mov	r5,sp
 8002c60:	d8800015 	stw	r2,0(sp)
 8002c64:	80027e80 	call	80027e8 <_Unwind_ForcedUnwind_Phase2>
 8002c68:	00c001c4 	movi	r3,7
 8002c6c:	10c00126 	beq	r2,r3,8002c74 <_Unwind_SjLj_Resume_or_Rethrow+0x44>
 8002c70:	8002d080 	call	8002d08 <abort>
 8002c74:	d809883a 	mov	r4,sp
 8002c78:	80029c00 	call	80029c0 <uw_install_context.isra.1>

08002c7c <_Unwind_DeleteException>:
 8002c7c:	20800217 	ldw	r2,8(r4)
 8002c80:	200b883a 	mov	r5,r4
 8002c84:	10000226 	beq	r2,zero,8002c90 <_Unwind_DeleteException+0x14>
 8002c88:	01000044 	movi	r4,1
 8002c8c:	1000683a 	jmp	r2
 8002c90:	f800283a 	ret

08002c94 <_Unwind_Backtrace>:
 8002c94:	008200b4 	movhi	r2,2050
 8002c98:	10aa4904 	addi	r2,r2,-22236
 8002c9c:	10800017 	ldw	r2,0(r2)
 8002ca0:	defffc04 	addi	sp,sp,-16
 8002ca4:	dc400215 	stw	r17,8(sp)
 8002ca8:	dc000115 	stw	r16,4(sp)
 8002cac:	dfc00315 	stw	ra,12(sp)
 8002cb0:	2023883a 	mov	r17,r4
 8002cb4:	2821883a 	mov	r16,r5
 8002cb8:	d8800015 	stw	r2,0(sp)
 8002cbc:	00000506 	br	8002cd4 <_Unwind_Backtrace+0x40>
 8002cc0:	883ee83a 	callr	r17
 8002cc4:	10000e1e 	bne	r2,zero,8002d00 <_Unwind_Backtrace+0x6c>
 8002cc8:	d8800017 	ldw	r2,0(sp)
 8002ccc:	10800017 	ldw	r2,0(r2)
 8002cd0:	d8800015 	stw	r2,0(sp)
 8002cd4:	d809883a 	mov	r4,sp
 8002cd8:	800b883a 	mov	r5,r16
 8002cdc:	103ff81e 	bne	r2,zero,8002cc0 <__alt_data_end+0xfc002cc0>
 8002ce0:	883ee83a 	callr	r17
 8002ce4:	1000061e 	bne	r2,zero,8002d00 <_Unwind_Backtrace+0x6c>
 8002ce8:	00800144 	movi	r2,5
 8002cec:	dfc00317 	ldw	ra,12(sp)
 8002cf0:	dc400217 	ldw	r17,8(sp)
 8002cf4:	dc000117 	ldw	r16,4(sp)
 8002cf8:	dec00404 	addi	sp,sp,16
 8002cfc:	f800283a 	ret
 8002d00:	008000c4 	movi	r2,3
 8002d04:	003ff906 	br	8002cec <__alt_data_end+0xfc002cec>

08002d08 <abort>:
 8002d08:	deffff04 	addi	sp,sp,-4
 8002d0c:	01000184 	movi	r4,6
 8002d10:	dfc00015 	stw	ra,0(sp)
 8002d14:	80039ec0 	call	80039ec <raise>
 8002d18:	01000044 	movi	r4,1
 8002d1c:	80131b40 	call	80131b4 <_exit>

08002d20 <malloc>:
 8002d20:	008200b4 	movhi	r2,2050
 8002d24:	10a31904 	addi	r2,r2,-29596
 8002d28:	200b883a 	mov	r5,r4
 8002d2c:	11000017 	ldw	r4,0(r2)
 8002d30:	8002d481 	jmpi	8002d48 <_malloc_r>

08002d34 <free>:
 8002d34:	008200b4 	movhi	r2,2050
 8002d38:	10a31904 	addi	r2,r2,-29596
 8002d3c:	200b883a 	mov	r5,r4
 8002d40:	11000017 	ldw	r4,0(r2)
 8002d44:	800a1ec1 	jmpi	800a1ec <_free_r>

08002d48 <_malloc_r>:
 8002d48:	defff504 	addi	sp,sp,-44
 8002d4c:	dc800315 	stw	r18,12(sp)
 8002d50:	dfc00a15 	stw	ra,40(sp)
 8002d54:	df000915 	stw	fp,36(sp)
 8002d58:	ddc00815 	stw	r23,32(sp)
 8002d5c:	dd800715 	stw	r22,28(sp)
 8002d60:	dd400615 	stw	r21,24(sp)
 8002d64:	dd000515 	stw	r20,20(sp)
 8002d68:	dcc00415 	stw	r19,16(sp)
 8002d6c:	dc400215 	stw	r17,8(sp)
 8002d70:	dc000115 	stw	r16,4(sp)
 8002d74:	288002c4 	addi	r2,r5,11
 8002d78:	00c00584 	movi	r3,22
 8002d7c:	2025883a 	mov	r18,r4
 8002d80:	18802a2e 	bgeu	r3,r2,8002e2c <_malloc_r+0xe4>
 8002d84:	047ffe04 	movi	r17,-8
 8002d88:	1462703a 	and	r17,r2,r17
 8002d8c:	88009e16 	blt	r17,zero,8003008 <_malloc_r+0x2c0>
 8002d90:	89409d36 	bltu	r17,r5,8003008 <_malloc_r+0x2c0>
 8002d94:	80138140 	call	8013814 <__malloc_lock>
 8002d98:	00807dc4 	movi	r2,503
 8002d9c:	14402736 	bltu	r2,r17,8002e3c <_malloc_r+0xf4>
 8002da0:	8806d0fa 	srli	r3,r17,3
 8002da4:	04c20074 	movhi	r19,2049
 8002da8:	9cdc0f04 	addi	r19,r19,28732
 8002dac:	18c5883a 	add	r2,r3,r3
 8002db0:	1085883a 	add	r2,r2,r2
 8002db4:	1085883a 	add	r2,r2,r2
 8002db8:	9885883a 	add	r2,r19,r2
 8002dbc:	14000317 	ldw	r16,12(r2)
 8002dc0:	80814a26 	beq	r16,r2,80032ec <_malloc_r+0x5a4>
 8002dc4:	80c00117 	ldw	r3,4(r16)
 8002dc8:	81000317 	ldw	r4,12(r16)
 8002dcc:	00bfff04 	movi	r2,-4
 8002dd0:	1884703a 	and	r2,r3,r2
 8002dd4:	81400217 	ldw	r5,8(r16)
 8002dd8:	8085883a 	add	r2,r16,r2
 8002ddc:	10c00117 	ldw	r3,4(r2)
 8002de0:	29000315 	stw	r4,12(r5)
 8002de4:	21400215 	stw	r5,8(r4)
 8002de8:	18c00054 	ori	r3,r3,1
 8002dec:	10c00115 	stw	r3,4(r2)
 8002df0:	9009883a 	mov	r4,r18
 8002df4:	80138340 	call	8013834 <__malloc_unlock>
 8002df8:	80800204 	addi	r2,r16,8
 8002dfc:	dfc00a17 	ldw	ra,40(sp)
 8002e00:	df000917 	ldw	fp,36(sp)
 8002e04:	ddc00817 	ldw	r23,32(sp)
 8002e08:	dd800717 	ldw	r22,28(sp)
 8002e0c:	dd400617 	ldw	r21,24(sp)
 8002e10:	dd000517 	ldw	r20,20(sp)
 8002e14:	dcc00417 	ldw	r19,16(sp)
 8002e18:	dc800317 	ldw	r18,12(sp)
 8002e1c:	dc400217 	ldw	r17,8(sp)
 8002e20:	dc000117 	ldw	r16,4(sp)
 8002e24:	dec00b04 	addi	sp,sp,44
 8002e28:	f800283a 	ret
 8002e2c:	04400404 	movi	r17,16
 8002e30:	89407536 	bltu	r17,r5,8003008 <_malloc_r+0x2c0>
 8002e34:	80138140 	call	8013814 <__malloc_lock>
 8002e38:	003fd906 	br	8002da0 <__alt_data_end+0xfc002da0>
 8002e3c:	8806d27a 	srli	r3,r17,9
 8002e40:	18007526 	beq	r3,zero,8003018 <_malloc_r+0x2d0>
 8002e44:	00800104 	movi	r2,4
 8002e48:	10c0ef36 	bltu	r2,r3,8003208 <_malloc_r+0x4c0>
 8002e4c:	8806d1ba 	srli	r3,r17,6
 8002e50:	19c00e04 	addi	r7,r3,56
 8002e54:	39cb883a 	add	r5,r7,r7
 8002e58:	04c20074 	movhi	r19,2049
 8002e5c:	294b883a 	add	r5,r5,r5
 8002e60:	9cdc0f04 	addi	r19,r19,28732
 8002e64:	294b883a 	add	r5,r5,r5
 8002e68:	994b883a 	add	r5,r19,r5
 8002e6c:	2c000317 	ldw	r16,12(r5)
 8002e70:	2c000e26 	beq	r5,r16,8002eac <_malloc_r+0x164>
 8002e74:	80800117 	ldw	r2,4(r16)
 8002e78:	01bfff04 	movi	r6,-4
 8002e7c:	010003c4 	movi	r4,15
 8002e80:	1184703a 	and	r2,r2,r6
 8002e84:	1447c83a 	sub	r3,r2,r17
 8002e88:	20c00716 	blt	r4,r3,8002ea8 <_malloc_r+0x160>
 8002e8c:	1800650e 	bge	r3,zero,8003024 <_malloc_r+0x2dc>
 8002e90:	84000317 	ldw	r16,12(r16)
 8002e94:	2c000526 	beq	r5,r16,8002eac <_malloc_r+0x164>
 8002e98:	80800117 	ldw	r2,4(r16)
 8002e9c:	1184703a 	and	r2,r2,r6
 8002ea0:	1447c83a 	sub	r3,r2,r17
 8002ea4:	20fff90e 	bge	r4,r3,8002e8c <__alt_data_end+0xfc002e8c>
 8002ea8:	39ffffc4 	addi	r7,r7,-1
 8002eac:	38c00044 	addi	r3,r7,1
 8002eb0:	01820074 	movhi	r6,2049
 8002eb4:	9c000417 	ldw	r16,16(r19)
 8002eb8:	319c0f04 	addi	r6,r6,28732
 8002ebc:	32400204 	addi	r9,r6,8
 8002ec0:	82410326 	beq	r16,r9,80032d0 <_malloc_r+0x588>
 8002ec4:	81000117 	ldw	r4,4(r16)
 8002ec8:	00bfff04 	movi	r2,-4
 8002ecc:	208e703a 	and	r7,r4,r2
 8002ed0:	3c45c83a 	sub	r2,r7,r17
 8002ed4:	010003c4 	movi	r4,15
 8002ed8:	2080ee16 	blt	r4,r2,8003294 <_malloc_r+0x54c>
 8002edc:	32400515 	stw	r9,20(r6)
 8002ee0:	32400415 	stw	r9,16(r6)
 8002ee4:	1000510e 	bge	r2,zero,800302c <_malloc_r+0x2e4>
 8002ee8:	00807fc4 	movi	r2,511
 8002eec:	11c0ce36 	bltu	r2,r7,8003228 <_malloc_r+0x4e0>
 8002ef0:	3808d0fa 	srli	r4,r7,3
 8002ef4:	01c00044 	movi	r7,1
 8002ef8:	30800117 	ldw	r2,4(r6)
 8002efc:	210b883a 	add	r5,r4,r4
 8002f00:	294b883a 	add	r5,r5,r5
 8002f04:	2009d0ba 	srai	r4,r4,2
 8002f08:	294b883a 	add	r5,r5,r5
 8002f0c:	298b883a 	add	r5,r5,r6
 8002f10:	2a000217 	ldw	r8,8(r5)
 8002f14:	3908983a 	sll	r4,r7,r4
 8002f18:	81400315 	stw	r5,12(r16)
 8002f1c:	82000215 	stw	r8,8(r16)
 8002f20:	2088b03a 	or	r4,r4,r2
 8002f24:	2c000215 	stw	r16,8(r5)
 8002f28:	31000115 	stw	r4,4(r6)
 8002f2c:	44000315 	stw	r16,12(r8)
 8002f30:	1805d0ba 	srai	r2,r3,2
 8002f34:	01400044 	movi	r5,1
 8002f38:	288a983a 	sll	r5,r5,r2
 8002f3c:	21404336 	bltu	r4,r5,800304c <_malloc_r+0x304>
 8002f40:	2144703a 	and	r2,r4,r5
 8002f44:	10000a1e 	bne	r2,zero,8002f70 <_malloc_r+0x228>
 8002f48:	00bfff04 	movi	r2,-4
 8002f4c:	294b883a 	add	r5,r5,r5
 8002f50:	1886703a 	and	r3,r3,r2
 8002f54:	2144703a 	and	r2,r4,r5
 8002f58:	18c00104 	addi	r3,r3,4
 8002f5c:	1000041e 	bne	r2,zero,8002f70 <_malloc_r+0x228>
 8002f60:	294b883a 	add	r5,r5,r5
 8002f64:	2144703a 	and	r2,r4,r5
 8002f68:	18c00104 	addi	r3,r3,4
 8002f6c:	103ffc26 	beq	r2,zero,8002f60 <__alt_data_end+0xfc002f60>
 8002f70:	023fff04 	movi	r8,-4
 8002f74:	01c003c4 	movi	r7,15
 8002f78:	18c5883a 	add	r2,r3,r3
 8002f7c:	1085883a 	add	r2,r2,r2
 8002f80:	1085883a 	add	r2,r2,r2
 8002f84:	9895883a 	add	r10,r19,r2
 8002f88:	52c00304 	addi	r11,r10,12
 8002f8c:	1819883a 	mov	r12,r3
 8002f90:	5c000017 	ldw	r16,0(r11)
 8002f94:	59bffd04 	addi	r6,r11,-12
 8002f98:	8180041e 	bne	r16,r6,8002fac <_malloc_r+0x264>
 8002f9c:	0000ce06 	br	80032d8 <_malloc_r+0x590>
 8002fa0:	2000d70e 	bge	r4,zero,8003300 <_malloc_r+0x5b8>
 8002fa4:	84000317 	ldw	r16,12(r16)
 8002fa8:	8180cb26 	beq	r16,r6,80032d8 <_malloc_r+0x590>
 8002fac:	80800117 	ldw	r2,4(r16)
 8002fb0:	1204703a 	and	r2,r2,r8
 8002fb4:	1449c83a 	sub	r4,r2,r17
 8002fb8:	393ff90e 	bge	r7,r4,8002fa0 <__alt_data_end+0xfc002fa0>
 8002fbc:	80800317 	ldw	r2,12(r16)
 8002fc0:	80c00217 	ldw	r3,8(r16)
 8002fc4:	89400054 	ori	r5,r17,1
 8002fc8:	81400115 	stw	r5,4(r16)
 8002fcc:	18800315 	stw	r2,12(r3)
 8002fd0:	10c00215 	stw	r3,8(r2)
 8002fd4:	8463883a 	add	r17,r16,r17
 8002fd8:	9c400515 	stw	r17,20(r19)
 8002fdc:	9c400415 	stw	r17,16(r19)
 8002fe0:	20800054 	ori	r2,r4,1
 8002fe4:	88800115 	stw	r2,4(r17)
 8002fe8:	8a400315 	stw	r9,12(r17)
 8002fec:	8a400215 	stw	r9,8(r17)
 8002ff0:	8923883a 	add	r17,r17,r4
 8002ff4:	89000015 	stw	r4,0(r17)
 8002ff8:	9009883a 	mov	r4,r18
 8002ffc:	80138340 	call	8013834 <__malloc_unlock>
 8003000:	80800204 	addi	r2,r16,8
 8003004:	003f7d06 	br	8002dfc <__alt_data_end+0xfc002dfc>
 8003008:	00800304 	movi	r2,12
 800300c:	90800015 	stw	r2,0(r18)
 8003010:	0005883a 	mov	r2,zero
 8003014:	003f7906 	br	8002dfc <__alt_data_end+0xfc002dfc>
 8003018:	01401f84 	movi	r5,126
 800301c:	01c00fc4 	movi	r7,63
 8003020:	003f8d06 	br	8002e58 <__alt_data_end+0xfc002e58>
 8003024:	81000317 	ldw	r4,12(r16)
 8003028:	003f6a06 	br	8002dd4 <__alt_data_end+0xfc002dd4>
 800302c:	81c5883a 	add	r2,r16,r7
 8003030:	10c00117 	ldw	r3,4(r2)
 8003034:	9009883a 	mov	r4,r18
 8003038:	18c00054 	ori	r3,r3,1
 800303c:	10c00115 	stw	r3,4(r2)
 8003040:	80138340 	call	8013834 <__malloc_unlock>
 8003044:	80800204 	addi	r2,r16,8
 8003048:	003f6c06 	br	8002dfc <__alt_data_end+0xfc002dfc>
 800304c:	9c000217 	ldw	r16,8(r19)
 8003050:	00bfff04 	movi	r2,-4
 8003054:	85800117 	ldw	r22,4(r16)
 8003058:	b0ac703a 	and	r22,r22,r2
 800305c:	b4400336 	bltu	r22,r17,800306c <_malloc_r+0x324>
 8003060:	b445c83a 	sub	r2,r22,r17
 8003064:	00c003c4 	movi	r3,15
 8003068:	18805d16 	blt	r3,r2,80031e0 <_malloc_r+0x498>
 800306c:	05c200b4 	movhi	r23,2050
 8003070:	008200b4 	movhi	r2,2050
 8003074:	bde31604 	addi	r23,r23,-29608
 8003078:	10aa4c04 	addi	r2,r2,-22224
 800307c:	15400017 	ldw	r21,0(r2)
 8003080:	b9000017 	ldw	r4,0(r23)
 8003084:	00ffffc4 	movi	r3,-1
 8003088:	858d883a 	add	r6,r16,r22
 800308c:	8d6b883a 	add	r21,r17,r21
 8003090:	20c0e426 	beq	r4,r3,8003424 <_malloc_r+0x6dc>
 8003094:	ad4403c4 	addi	r21,r21,4111
 8003098:	00fc0004 	movi	r3,-4096
 800309c:	a8ea703a 	and	r21,r21,r3
 80030a0:	9009883a 	mov	r4,r18
 80030a4:	a80b883a 	mov	r5,r21
 80030a8:	d9800015 	stw	r6,0(sp)
 80030ac:	80037480 	call	8003748 <_sbrk_r>
 80030b0:	00ffffc4 	movi	r3,-1
 80030b4:	1029883a 	mov	r20,r2
 80030b8:	d9800017 	ldw	r6,0(sp)
 80030bc:	10c0a426 	beq	r2,r3,8003350 <_malloc_r+0x608>
 80030c0:	1180a236 	bltu	r2,r6,800334c <_malloc_r+0x604>
 80030c4:	070200b4 	movhi	fp,2050
 80030c8:	e72c9804 	addi	fp,fp,-19872
 80030cc:	e0c00017 	ldw	r3,0(fp)
 80030d0:	a8c7883a 	add	r3,r21,r3
 80030d4:	e0c00015 	stw	r3,0(fp)
 80030d8:	3500da26 	beq	r6,r20,8003444 <_malloc_r+0x6fc>
 80030dc:	b9000017 	ldw	r4,0(r23)
 80030e0:	00bfffc4 	movi	r2,-1
 80030e4:	2080e426 	beq	r4,r2,8003478 <_malloc_r+0x730>
 80030e8:	a185c83a 	sub	r2,r20,r6
 80030ec:	1885883a 	add	r2,r3,r2
 80030f0:	e0800015 	stw	r2,0(fp)
 80030f4:	a0c001cc 	andi	r3,r20,7
 80030f8:	1800b526 	beq	r3,zero,80033d0 <_malloc_r+0x688>
 80030fc:	a0e9c83a 	sub	r20,r20,r3
 8003100:	00840204 	movi	r2,4104
 8003104:	a5000204 	addi	r20,r20,8
 8003108:	10c7c83a 	sub	r3,r2,r3
 800310c:	a545883a 	add	r2,r20,r21
 8003110:	1083ffcc 	andi	r2,r2,4095
 8003114:	18abc83a 	sub	r21,r3,r2
 8003118:	9009883a 	mov	r4,r18
 800311c:	a80b883a 	mov	r5,r21
 8003120:	80037480 	call	8003748 <_sbrk_r>
 8003124:	00ffffc4 	movi	r3,-1
 8003128:	10c0d026 	beq	r2,r3,800346c <_malloc_r+0x724>
 800312c:	1507c83a 	sub	r3,r2,r20
 8003130:	a8c7883a 	add	r3,r21,r3
 8003134:	18c00054 	ori	r3,r3,1
 8003138:	e0800017 	ldw	r2,0(fp)
 800313c:	9d000215 	stw	r20,8(r19)
 8003140:	a0c00115 	stw	r3,4(r20)
 8003144:	a887883a 	add	r3,r21,r2
 8003148:	e0c00015 	stw	r3,0(fp)
 800314c:	84c00e26 	beq	r16,r19,8003188 <_malloc_r+0x440>
 8003150:	018003c4 	movi	r6,15
 8003154:	3580a02e 	bgeu	r6,r22,80033d8 <_malloc_r+0x690>
 8003158:	81400117 	ldw	r5,4(r16)
 800315c:	013ffe04 	movi	r4,-8
 8003160:	b0bffd04 	addi	r2,r22,-12
 8003164:	1104703a 	and	r2,r2,r4
 8003168:	2900004c 	andi	r4,r5,1
 800316c:	1108b03a 	or	r4,r2,r4
 8003170:	81000115 	stw	r4,4(r16)
 8003174:	01400144 	movi	r5,5
 8003178:	8089883a 	add	r4,r16,r2
 800317c:	21400115 	stw	r5,4(r4)
 8003180:	21400215 	stw	r5,8(r4)
 8003184:	3080c036 	bltu	r6,r2,8003488 <_malloc_r+0x740>
 8003188:	008200b4 	movhi	r2,2050
 800318c:	10aa4b04 	addi	r2,r2,-22228
 8003190:	11000017 	ldw	r4,0(r2)
 8003194:	20c0012e 	bgeu	r4,r3,800319c <_malloc_r+0x454>
 8003198:	10c00015 	stw	r3,0(r2)
 800319c:	008200b4 	movhi	r2,2050
 80031a0:	10aa4a04 	addi	r2,r2,-22232
 80031a4:	11000017 	ldw	r4,0(r2)
 80031a8:	9c000217 	ldw	r16,8(r19)
 80031ac:	20c0012e 	bgeu	r4,r3,80031b4 <_malloc_r+0x46c>
 80031b0:	10c00015 	stw	r3,0(r2)
 80031b4:	80c00117 	ldw	r3,4(r16)
 80031b8:	00bfff04 	movi	r2,-4
 80031bc:	1886703a 	and	r3,r3,r2
 80031c0:	1c45c83a 	sub	r2,r3,r17
 80031c4:	1c400236 	bltu	r3,r17,80031d0 <_malloc_r+0x488>
 80031c8:	00c003c4 	movi	r3,15
 80031cc:	18800416 	blt	r3,r2,80031e0 <_malloc_r+0x498>
 80031d0:	9009883a 	mov	r4,r18
 80031d4:	80138340 	call	8013834 <__malloc_unlock>
 80031d8:	0005883a 	mov	r2,zero
 80031dc:	003f0706 	br	8002dfc <__alt_data_end+0xfc002dfc>
 80031e0:	88c00054 	ori	r3,r17,1
 80031e4:	80c00115 	stw	r3,4(r16)
 80031e8:	8463883a 	add	r17,r16,r17
 80031ec:	10800054 	ori	r2,r2,1
 80031f0:	9c400215 	stw	r17,8(r19)
 80031f4:	88800115 	stw	r2,4(r17)
 80031f8:	9009883a 	mov	r4,r18
 80031fc:	80138340 	call	8013834 <__malloc_unlock>
 8003200:	80800204 	addi	r2,r16,8
 8003204:	003efd06 	br	8002dfc <__alt_data_end+0xfc002dfc>
 8003208:	00800504 	movi	r2,20
 800320c:	10c0482e 	bgeu	r2,r3,8003330 <_malloc_r+0x5e8>
 8003210:	00801504 	movi	r2,84
 8003214:	10c06836 	bltu	r2,r3,80033b8 <_malloc_r+0x670>
 8003218:	8806d33a 	srli	r3,r17,12
 800321c:	19c01b84 	addi	r7,r3,110
 8003220:	39cb883a 	add	r5,r7,r7
 8003224:	003f0c06 	br	8002e58 <__alt_data_end+0xfc002e58>
 8003228:	3804d27a 	srli	r2,r7,9
 800322c:	01000104 	movi	r4,4
 8003230:	2080422e 	bgeu	r4,r2,800333c <_malloc_r+0x5f4>
 8003234:	01000504 	movi	r4,20
 8003238:	20807c36 	bltu	r4,r2,800342c <_malloc_r+0x6e4>
 800323c:	110016c4 	addi	r4,r2,91
 8003240:	210b883a 	add	r5,r4,r4
 8003244:	294b883a 	add	r5,r5,r5
 8003248:	294b883a 	add	r5,r5,r5
 800324c:	994b883a 	add	r5,r19,r5
 8003250:	28800217 	ldw	r2,8(r5)
 8003254:	02020074 	movhi	r8,2049
 8003258:	421c0f04 	addi	r8,r8,28732
 800325c:	11406326 	beq	r2,r5,80033ec <_malloc_r+0x6a4>
 8003260:	01bfff04 	movi	r6,-4
 8003264:	11000117 	ldw	r4,4(r2)
 8003268:	2188703a 	and	r4,r4,r6
 800326c:	3900022e 	bgeu	r7,r4,8003278 <_malloc_r+0x530>
 8003270:	10800217 	ldw	r2,8(r2)
 8003274:	28bffb1e 	bne	r5,r2,8003264 <__alt_data_end+0xfc003264>
 8003278:	11800317 	ldw	r6,12(r2)
 800327c:	99000117 	ldw	r4,4(r19)
 8003280:	81800315 	stw	r6,12(r16)
 8003284:	80800215 	stw	r2,8(r16)
 8003288:	34000215 	stw	r16,8(r6)
 800328c:	14000315 	stw	r16,12(r2)
 8003290:	003f2706 	br	8002f30 <__alt_data_end+0xfc002f30>
 8003294:	88c00054 	ori	r3,r17,1
 8003298:	80c00115 	stw	r3,4(r16)
 800329c:	8463883a 	add	r17,r16,r17
 80032a0:	34400515 	stw	r17,20(r6)
 80032a4:	34400415 	stw	r17,16(r6)
 80032a8:	10c00054 	ori	r3,r2,1
 80032ac:	8a400315 	stw	r9,12(r17)
 80032b0:	8a400215 	stw	r9,8(r17)
 80032b4:	88c00115 	stw	r3,4(r17)
 80032b8:	88a3883a 	add	r17,r17,r2
 80032bc:	88800015 	stw	r2,0(r17)
 80032c0:	9009883a 	mov	r4,r18
 80032c4:	80138340 	call	8013834 <__malloc_unlock>
 80032c8:	80800204 	addi	r2,r16,8
 80032cc:	003ecb06 	br	8002dfc <__alt_data_end+0xfc002dfc>
 80032d0:	31000117 	ldw	r4,4(r6)
 80032d4:	003f1606 	br	8002f30 <__alt_data_end+0xfc002f30>
 80032d8:	63000044 	addi	r12,r12,1
 80032dc:	608000cc 	andi	r2,r12,3
 80032e0:	5ac00204 	addi	r11,r11,8
 80032e4:	103f2a1e 	bne	r2,zero,8002f90 <__alt_data_end+0xfc002f90>
 80032e8:	00002106 	br	8003370 <_malloc_r+0x628>
 80032ec:	80800204 	addi	r2,r16,8
 80032f0:	84000517 	ldw	r16,20(r16)
 80032f4:	143eb31e 	bne	r2,r16,8002dc4 <__alt_data_end+0xfc002dc4>
 80032f8:	18c00084 	addi	r3,r3,2
 80032fc:	003eec06 	br	8002eb0 <__alt_data_end+0xfc002eb0>
 8003300:	8085883a 	add	r2,r16,r2
 8003304:	10c00117 	ldw	r3,4(r2)
 8003308:	81000317 	ldw	r4,12(r16)
 800330c:	81400217 	ldw	r5,8(r16)
 8003310:	18c00054 	ori	r3,r3,1
 8003314:	10c00115 	stw	r3,4(r2)
 8003318:	29000315 	stw	r4,12(r5)
 800331c:	21400215 	stw	r5,8(r4)
 8003320:	9009883a 	mov	r4,r18
 8003324:	80138340 	call	8013834 <__malloc_unlock>
 8003328:	80800204 	addi	r2,r16,8
 800332c:	003eb306 	br	8002dfc <__alt_data_end+0xfc002dfc>
 8003330:	19c016c4 	addi	r7,r3,91
 8003334:	39cb883a 	add	r5,r7,r7
 8003338:	003ec706 	br	8002e58 <__alt_data_end+0xfc002e58>
 800333c:	3804d1ba 	srli	r2,r7,6
 8003340:	11000e04 	addi	r4,r2,56
 8003344:	210b883a 	add	r5,r4,r4
 8003348:	003fbe06 	br	8003244 <__alt_data_end+0xfc003244>
 800334c:	84ff5d26 	beq	r16,r19,80030c4 <__alt_data_end+0xfc0030c4>
 8003350:	9c000217 	ldw	r16,8(r19)
 8003354:	00bfff04 	movi	r2,-4
 8003358:	80c00117 	ldw	r3,4(r16)
 800335c:	1886703a 	and	r3,r3,r2
 8003360:	003f9706 	br	80031c0 <__alt_data_end+0xfc0031c0>
 8003364:	52800017 	ldw	r10,0(r10)
 8003368:	18ffffc4 	addi	r3,r3,-1
 800336c:	50805c1e 	bne	r10,r2,80034e0 <_malloc_r+0x798>
 8003370:	190000cc 	andi	r4,r3,3
 8003374:	50bffe04 	addi	r2,r10,-8
 8003378:	203ffa1e 	bne	r4,zero,8003364 <__alt_data_end+0xfc003364>
 800337c:	98800117 	ldw	r2,4(r19)
 8003380:	0146303a 	nor	r3,zero,r5
 8003384:	1884703a 	and	r2,r3,r2
 8003388:	98800115 	stw	r2,4(r19)
 800338c:	294b883a 	add	r5,r5,r5
 8003390:	117f2e36 	bltu	r2,r5,800304c <__alt_data_end+0xfc00304c>
 8003394:	283f2d26 	beq	r5,zero,800304c <__alt_data_end+0xfc00304c>
 8003398:	1146703a 	and	r3,r2,r5
 800339c:	1800521e 	bne	r3,zero,80034e8 <_malloc_r+0x7a0>
 80033a0:	6007883a 	mov	r3,r12
 80033a4:	294b883a 	add	r5,r5,r5
 80033a8:	1148703a 	and	r4,r2,r5
 80033ac:	18c00104 	addi	r3,r3,4
 80033b0:	203ffc26 	beq	r4,zero,80033a4 <__alt_data_end+0xfc0033a4>
 80033b4:	003ef006 	br	8002f78 <__alt_data_end+0xfc002f78>
 80033b8:	00805504 	movi	r2,340
 80033bc:	10c01336 	bltu	r2,r3,800340c <_malloc_r+0x6c4>
 80033c0:	8806d3fa 	srli	r3,r17,15
 80033c4:	19c01dc4 	addi	r7,r3,119
 80033c8:	39cb883a 	add	r5,r7,r7
 80033cc:	003ea206 	br	8002e58 <__alt_data_end+0xfc002e58>
 80033d0:	00c40004 	movi	r3,4096
 80033d4:	003f4d06 	br	800310c <__alt_data_end+0xfc00310c>
 80033d8:	00800044 	movi	r2,1
 80033dc:	a0800115 	stw	r2,4(r20)
 80033e0:	a021883a 	mov	r16,r20
 80033e4:	0007883a 	mov	r3,zero
 80033e8:	003f7506 	br	80031c0 <__alt_data_end+0xfc0031c0>
 80033ec:	200bd0ba 	srai	r5,r4,2
 80033f0:	01800044 	movi	r6,1
 80033f4:	41000117 	ldw	r4,4(r8)
 80033f8:	314a983a 	sll	r5,r6,r5
 80033fc:	100d883a 	mov	r6,r2
 8003400:	2908b03a 	or	r4,r5,r4
 8003404:	41000115 	stw	r4,4(r8)
 8003408:	003f9d06 	br	8003280 <__alt_data_end+0xfc003280>
 800340c:	00815504 	movi	r2,1364
 8003410:	10c01336 	bltu	r2,r3,8003460 <_malloc_r+0x718>
 8003414:	8806d4ba 	srli	r3,r17,18
 8003418:	19c01f04 	addi	r7,r3,124
 800341c:	39cb883a 	add	r5,r7,r7
 8003420:	003e8d06 	br	8002e58 <__alt_data_end+0xfc002e58>
 8003424:	ad400404 	addi	r21,r21,16
 8003428:	003f1d06 	br	80030a0 <__alt_data_end+0xfc0030a0>
 800342c:	01001504 	movi	r4,84
 8003430:	20801c36 	bltu	r4,r2,80034a4 <_malloc_r+0x75c>
 8003434:	3804d33a 	srli	r2,r7,12
 8003438:	11001b84 	addi	r4,r2,110
 800343c:	210b883a 	add	r5,r4,r4
 8003440:	003f8006 	br	8003244 <__alt_data_end+0xfc003244>
 8003444:	3083ffcc 	andi	r2,r6,4095
 8003448:	103f241e 	bne	r2,zero,80030dc <__alt_data_end+0xfc0030dc>
 800344c:	99000217 	ldw	r4,8(r19)
 8003450:	ad85883a 	add	r2,r21,r22
 8003454:	10800054 	ori	r2,r2,1
 8003458:	20800115 	stw	r2,4(r4)
 800345c:	003f4a06 	br	8003188 <__alt_data_end+0xfc003188>
 8003460:	01403f04 	movi	r5,252
 8003464:	01c01f84 	movi	r7,126
 8003468:	003e7b06 	br	8002e58 <__alt_data_end+0xfc002e58>
 800346c:	00c00044 	movi	r3,1
 8003470:	002b883a 	mov	r21,zero
 8003474:	003f3006 	br	8003138 <__alt_data_end+0xfc003138>
 8003478:	008200b4 	movhi	r2,2050
 800347c:	10a31604 	addi	r2,r2,-29608
 8003480:	15000015 	stw	r20,0(r2)
 8003484:	003f1b06 	br	80030f4 <__alt_data_end+0xfc0030f4>
 8003488:	9009883a 	mov	r4,r18
 800348c:	81400204 	addi	r5,r16,8
 8003490:	800a1ec0 	call	800a1ec <_free_r>
 8003494:	008200b4 	movhi	r2,2050
 8003498:	10ac9804 	addi	r2,r2,-19872
 800349c:	10c00017 	ldw	r3,0(r2)
 80034a0:	003f3906 	br	8003188 <__alt_data_end+0xfc003188>
 80034a4:	01005504 	movi	r4,340
 80034a8:	20800436 	bltu	r4,r2,80034bc <_malloc_r+0x774>
 80034ac:	3804d3fa 	srli	r2,r7,15
 80034b0:	11001dc4 	addi	r4,r2,119
 80034b4:	210b883a 	add	r5,r4,r4
 80034b8:	003f6206 	br	8003244 <__alt_data_end+0xfc003244>
 80034bc:	01015504 	movi	r4,1364
 80034c0:	20800436 	bltu	r4,r2,80034d4 <_malloc_r+0x78c>
 80034c4:	3804d4ba 	srli	r2,r7,18
 80034c8:	11001f04 	addi	r4,r2,124
 80034cc:	210b883a 	add	r5,r4,r4
 80034d0:	003f5c06 	br	8003244 <__alt_data_end+0xfc003244>
 80034d4:	01403f04 	movi	r5,252
 80034d8:	01001f84 	movi	r4,126
 80034dc:	003f5906 	br	8003244 <__alt_data_end+0xfc003244>
 80034e0:	98800117 	ldw	r2,4(r19)
 80034e4:	003fa906 	br	800338c <__alt_data_end+0xfc00338c>
 80034e8:	6007883a 	mov	r3,r12
 80034ec:	003ea206 	br	8002f78 <__alt_data_end+0xfc002f78>

080034f0 <memset>:
 80034f0:	20c000cc 	andi	r3,r4,3
 80034f4:	2005883a 	mov	r2,r4
 80034f8:	18004326 	beq	r3,zero,8003608 <memset+0x118>
 80034fc:	31ffffc4 	addi	r7,r6,-1
 8003500:	30004026 	beq	r6,zero,8003604 <memset+0x114>
 8003504:	2813883a 	mov	r9,r5
 8003508:	200d883a 	mov	r6,r4
 800350c:	2007883a 	mov	r3,r4
 8003510:	00000406 	br	8003524 <memset+0x34>
 8003514:	3a3fffc4 	addi	r8,r7,-1
 8003518:	31800044 	addi	r6,r6,1
 800351c:	38003926 	beq	r7,zero,8003604 <memset+0x114>
 8003520:	400f883a 	mov	r7,r8
 8003524:	18c00044 	addi	r3,r3,1
 8003528:	32400005 	stb	r9,0(r6)
 800352c:	1a0000cc 	andi	r8,r3,3
 8003530:	403ff81e 	bne	r8,zero,8003514 <__alt_data_end+0xfc003514>
 8003534:	010000c4 	movi	r4,3
 8003538:	21c02d2e 	bgeu	r4,r7,80035f0 <memset+0x100>
 800353c:	29803fcc 	andi	r6,r5,255
 8003540:	3008923a 	slli	r4,r6,8
 8003544:	218cb03a 	or	r6,r4,r6
 8003548:	3008943a 	slli	r4,r6,16
 800354c:	218cb03a 	or	r6,r4,r6
 8003550:	010003c4 	movi	r4,15
 8003554:	21c0182e 	bgeu	r4,r7,80035b8 <memset+0xc8>
 8003558:	3b3ffc04 	addi	r12,r7,-16
 800355c:	6018d13a 	srli	r12,r12,4
 8003560:	1a000104 	addi	r8,r3,4
 8003564:	1ac00204 	addi	r11,r3,8
 8003568:	6008913a 	slli	r4,r12,4
 800356c:	1a800304 	addi	r10,r3,12
 8003570:	1813883a 	mov	r9,r3
 8003574:	21000504 	addi	r4,r4,20
 8003578:	1909883a 	add	r4,r3,r4
 800357c:	49800015 	stw	r6,0(r9)
 8003580:	41800015 	stw	r6,0(r8)
 8003584:	59800015 	stw	r6,0(r11)
 8003588:	51800015 	stw	r6,0(r10)
 800358c:	42000404 	addi	r8,r8,16
 8003590:	4a400404 	addi	r9,r9,16
 8003594:	5ac00404 	addi	r11,r11,16
 8003598:	52800404 	addi	r10,r10,16
 800359c:	413ff71e 	bne	r8,r4,800357c <__alt_data_end+0xfc00357c>
 80035a0:	63000044 	addi	r12,r12,1
 80035a4:	6018913a 	slli	r12,r12,4
 80035a8:	39c003cc 	andi	r7,r7,15
 80035ac:	010000c4 	movi	r4,3
 80035b0:	1b07883a 	add	r3,r3,r12
 80035b4:	21c00e2e 	bgeu	r4,r7,80035f0 <memset+0x100>
 80035b8:	1813883a 	mov	r9,r3
 80035bc:	3811883a 	mov	r8,r7
 80035c0:	010000c4 	movi	r4,3
 80035c4:	49800015 	stw	r6,0(r9)
 80035c8:	423fff04 	addi	r8,r8,-4
 80035cc:	4a400104 	addi	r9,r9,4
 80035d0:	223ffc36 	bltu	r4,r8,80035c4 <__alt_data_end+0xfc0035c4>
 80035d4:	393fff04 	addi	r4,r7,-4
 80035d8:	2008d0ba 	srli	r4,r4,2
 80035dc:	39c000cc 	andi	r7,r7,3
 80035e0:	21000044 	addi	r4,r4,1
 80035e4:	2109883a 	add	r4,r4,r4
 80035e8:	2109883a 	add	r4,r4,r4
 80035ec:	1907883a 	add	r3,r3,r4
 80035f0:	38000426 	beq	r7,zero,8003604 <memset+0x114>
 80035f4:	19cf883a 	add	r7,r3,r7
 80035f8:	19400005 	stb	r5,0(r3)
 80035fc:	18c00044 	addi	r3,r3,1
 8003600:	19fffd1e 	bne	r3,r7,80035f8 <__alt_data_end+0xfc0035f8>
 8003604:	f800283a 	ret
 8003608:	2007883a 	mov	r3,r4
 800360c:	300f883a 	mov	r7,r6
 8003610:	003fc806 	br	8003534 <__alt_data_end+0xfc003534>

08003614 <_printf_r>:
 8003614:	defffd04 	addi	sp,sp,-12
 8003618:	dfc00015 	stw	ra,0(sp)
 800361c:	d9800115 	stw	r6,4(sp)
 8003620:	d9c00215 	stw	r7,8(sp)
 8003624:	280d883a 	mov	r6,r5
 8003628:	21400217 	ldw	r5,8(r4)
 800362c:	d9c00104 	addi	r7,sp,4
 8003630:	8005f1c0 	call	8005f1c <___vfprintf_internal_r>
 8003634:	dfc00017 	ldw	ra,0(sp)
 8003638:	dec00304 	addi	sp,sp,12
 800363c:	f800283a 	ret

08003640 <printf>:
 8003640:	defffc04 	addi	sp,sp,-16
 8003644:	dfc00015 	stw	ra,0(sp)
 8003648:	d9400115 	stw	r5,4(sp)
 800364c:	d9800215 	stw	r6,8(sp)
 8003650:	d9c00315 	stw	r7,12(sp)
 8003654:	008200b4 	movhi	r2,2050
 8003658:	10a31904 	addi	r2,r2,-29596
 800365c:	10800017 	ldw	r2,0(r2)
 8003660:	200b883a 	mov	r5,r4
 8003664:	d9800104 	addi	r6,sp,4
 8003668:	11000217 	ldw	r4,8(r2)
 800366c:	80080180 	call	8008018 <__vfprintf_internal>
 8003670:	dfc00017 	ldw	ra,0(sp)
 8003674:	dec00404 	addi	sp,sp,16
 8003678:	f800283a 	ret

0800367c <_puts_r>:
 800367c:	defff604 	addi	sp,sp,-40
 8003680:	dc000715 	stw	r16,28(sp)
 8003684:	2021883a 	mov	r16,r4
 8003688:	2809883a 	mov	r4,r5
 800368c:	dc400815 	stw	r17,32(sp)
 8003690:	dfc00915 	stw	ra,36(sp)
 8003694:	2823883a 	mov	r17,r5
 8003698:	8003e140 	call	8003e14 <strlen>
 800369c:	00c200b4 	movhi	r3,2050
 80036a0:	18e31904 	addi	r3,r3,-29596
 80036a4:	18c00017 	ldw	r3,0(r3)
 80036a8:	11000044 	addi	r4,r2,1
 80036ac:	d8800115 	stw	r2,4(sp)
 80036b0:	18c00217 	ldw	r3,8(r3)
 80036b4:	01420074 	movhi	r5,2049
 80036b8:	295b2e04 	addi	r5,r5,27832
 80036bc:	1880030b 	ldhu	r2,12(r3)
 80036c0:	d9400215 	stw	r5,8(sp)
 80036c4:	d9000615 	stw	r4,24(sp)
 80036c8:	01400044 	movi	r5,1
 80036cc:	01000084 	movi	r4,2
 80036d0:	d9000515 	stw	r4,20(sp)
 80036d4:	dc400015 	stw	r17,0(sp)
 80036d8:	d9400315 	stw	r5,12(sp)
 80036dc:	dec00415 	stw	sp,16(sp)
 80036e0:	1108000c 	andi	r4,r2,8192
 80036e4:	2000061e 	bne	r4,zero,8003700 <_puts_r+0x84>
 80036e8:	19401917 	ldw	r5,100(r3)
 80036ec:	0137ffc4 	movi	r4,-8193
 80036f0:	10880014 	ori	r2,r2,8192
 80036f4:	2908703a 	and	r4,r5,r4
 80036f8:	1880030d 	sth	r2,12(r3)
 80036fc:	19001915 	stw	r4,100(r3)
 8003700:	81400217 	ldw	r5,8(r16)
 8003704:	8009883a 	mov	r4,r16
 8003708:	d9800404 	addi	r6,sp,16
 800370c:	800a4dc0 	call	800a4dc <__sfvwrite_r>
 8003710:	1000061e 	bne	r2,zero,800372c <_puts_r+0xb0>
 8003714:	00800284 	movi	r2,10
 8003718:	dfc00917 	ldw	ra,36(sp)
 800371c:	dc400817 	ldw	r17,32(sp)
 8003720:	dc000717 	ldw	r16,28(sp)
 8003724:	dec00a04 	addi	sp,sp,40
 8003728:	f800283a 	ret
 800372c:	00bfffc4 	movi	r2,-1
 8003730:	003ff906 	br	8003718 <__alt_data_end+0xfc003718>

08003734 <puts>:
 8003734:	008200b4 	movhi	r2,2050
 8003738:	10a31904 	addi	r2,r2,-29596
 800373c:	200b883a 	mov	r5,r4
 8003740:	11000017 	ldw	r4,0(r2)
 8003744:	800367c1 	jmpi	800367c <_puts_r>

08003748 <_sbrk_r>:
 8003748:	defffd04 	addi	sp,sp,-12
 800374c:	dc000015 	stw	r16,0(sp)
 8003750:	040200b4 	movhi	r16,2050
 8003754:	dc400115 	stw	r17,4(sp)
 8003758:	842a4d04 	addi	r16,r16,-22220
 800375c:	2023883a 	mov	r17,r4
 8003760:	2809883a 	mov	r4,r5
 8003764:	dfc00215 	stw	ra,8(sp)
 8003768:	80000015 	stw	zero,0(r16)
 800376c:	8013a280 	call	8013a28 <sbrk>
 8003770:	00ffffc4 	movi	r3,-1
 8003774:	10c00526 	beq	r2,r3,800378c <_sbrk_r+0x44>
 8003778:	dfc00217 	ldw	ra,8(sp)
 800377c:	dc400117 	ldw	r17,4(sp)
 8003780:	dc000017 	ldw	r16,0(sp)
 8003784:	dec00304 	addi	sp,sp,12
 8003788:	f800283a 	ret
 800378c:	80c00017 	ldw	r3,0(r16)
 8003790:	183ff926 	beq	r3,zero,8003778 <__alt_data_end+0xfc003778>
 8003794:	88c00015 	stw	r3,0(r17)
 8003798:	003ff706 	br	8003778 <__alt_data_end+0xfc003778>

0800379c <_init_signal_r>:
 800379c:	2080b717 	ldw	r2,732(r4)
 80037a0:	defffe04 	addi	sp,sp,-8
 80037a4:	dc000015 	stw	r16,0(sp)
 80037a8:	dfc00115 	stw	ra,4(sp)
 80037ac:	2021883a 	mov	r16,r4
 80037b0:	10000526 	beq	r2,zero,80037c8 <_init_signal_r+0x2c>
 80037b4:	0005883a 	mov	r2,zero
 80037b8:	dfc00117 	ldw	ra,4(sp)
 80037bc:	dc000017 	ldw	r16,0(sp)
 80037c0:	dec00204 	addi	sp,sp,8
 80037c4:	f800283a 	ret
 80037c8:	01402004 	movi	r5,128
 80037cc:	8002d480 	call	8002d48 <_malloc_r>
 80037d0:	8080b715 	stw	r2,732(r16)
 80037d4:	10000926 	beq	r2,zero,80037fc <_init_signal_r+0x60>
 80037d8:	0007883a 	mov	r3,zero
 80037dc:	01002004 	movi	r4,128
 80037e0:	00000106 	br	80037e8 <_init_signal_r+0x4c>
 80037e4:	8080b717 	ldw	r2,732(r16)
 80037e8:	10c5883a 	add	r2,r2,r3
 80037ec:	10000015 	stw	zero,0(r2)
 80037f0:	18c00104 	addi	r3,r3,4
 80037f4:	193ffb1e 	bne	r3,r4,80037e4 <__alt_data_end+0xfc0037e4>
 80037f8:	003fee06 	br	80037b4 <__alt_data_end+0xfc0037b4>
 80037fc:	00bfffc4 	movi	r2,-1
 8003800:	003fed06 	br	80037b8 <__alt_data_end+0xfc0037b8>

08003804 <_signal_r>:
 8003804:	00c007c4 	movi	r3,31
 8003808:	19401536 	bltu	r3,r5,8003860 <_signal_r+0x5c>
 800380c:	2080b717 	ldw	r2,732(r4)
 8003810:	defffc04 	addi	sp,sp,-16
 8003814:	dc800215 	stw	r18,8(sp)
 8003818:	dc400115 	stw	r17,4(sp)
 800381c:	dc000015 	stw	r16,0(sp)
 8003820:	dfc00315 	stw	ra,12(sp)
 8003824:	3023883a 	mov	r17,r6
 8003828:	2021883a 	mov	r16,r4
 800382c:	2825883a 	mov	r18,r5
 8003830:	10000f26 	beq	r2,zero,8003870 <_signal_r+0x6c>
 8003834:	948b883a 	add	r5,r18,r18
 8003838:	294b883a 	add	r5,r5,r5
 800383c:	114b883a 	add	r5,r2,r5
 8003840:	28800017 	ldw	r2,0(r5)
 8003844:	2c400015 	stw	r17,0(r5)
 8003848:	dfc00317 	ldw	ra,12(sp)
 800384c:	dc800217 	ldw	r18,8(sp)
 8003850:	dc400117 	ldw	r17,4(sp)
 8003854:	dc000017 	ldw	r16,0(sp)
 8003858:	dec00404 	addi	sp,sp,16
 800385c:	f800283a 	ret
 8003860:	00c00584 	movi	r3,22
 8003864:	20c00015 	stw	r3,0(r4)
 8003868:	00bfffc4 	movi	r2,-1
 800386c:	f800283a 	ret
 8003870:	800379c0 	call	800379c <_init_signal_r>
 8003874:	1000021e 	bne	r2,zero,8003880 <_signal_r+0x7c>
 8003878:	8080b717 	ldw	r2,732(r16)
 800387c:	003fed06 	br	8003834 <__alt_data_end+0xfc003834>
 8003880:	00bfffc4 	movi	r2,-1
 8003884:	003ff006 	br	8003848 <__alt_data_end+0xfc003848>

08003888 <_raise_r>:
 8003888:	008007c4 	movi	r2,31
 800388c:	11402936 	bltu	r2,r5,8003934 <_raise_r+0xac>
 8003890:	20c0b717 	ldw	r3,732(r4)
 8003894:	defffd04 	addi	sp,sp,-12
 8003898:	dc400115 	stw	r17,4(sp)
 800389c:	dc000015 	stw	r16,0(sp)
 80038a0:	dfc00215 	stw	ra,8(sp)
 80038a4:	2023883a 	mov	r17,r4
 80038a8:	2821883a 	mov	r16,r5
 80038ac:	18001726 	beq	r3,zero,800390c <_raise_r+0x84>
 80038b0:	2945883a 	add	r2,r5,r5
 80038b4:	1085883a 	add	r2,r2,r2
 80038b8:	1887883a 	add	r3,r3,r2
 80038bc:	19400017 	ldw	r5,0(r3)
 80038c0:	28001226 	beq	r5,zero,800390c <_raise_r+0x84>
 80038c4:	00800044 	movi	r2,1
 80038c8:	28800e26 	beq	r5,r2,8003904 <_raise_r+0x7c>
 80038cc:	013fffc4 	movi	r4,-1
 80038d0:	29000926 	beq	r5,r4,80038f8 <_raise_r+0x70>
 80038d4:	18000015 	stw	zero,0(r3)
 80038d8:	8009883a 	mov	r4,r16
 80038dc:	283ee83a 	callr	r5
 80038e0:	0005883a 	mov	r2,zero
 80038e4:	dfc00217 	ldw	ra,8(sp)
 80038e8:	dc400117 	ldw	r17,4(sp)
 80038ec:	dc000017 	ldw	r16,0(sp)
 80038f0:	dec00304 	addi	sp,sp,12
 80038f4:	f800283a 	ret
 80038f8:	00c00584 	movi	r3,22
 80038fc:	88c00015 	stw	r3,0(r17)
 8003900:	003ff806 	br	80038e4 <__alt_data_end+0xfc0038e4>
 8003904:	0005883a 	mov	r2,zero
 8003908:	003ff606 	br	80038e4 <__alt_data_end+0xfc0038e4>
 800390c:	8809883a 	mov	r4,r17
 8003910:	8003a980 	call	8003a98 <_getpid_r>
 8003914:	8809883a 	mov	r4,r17
 8003918:	100b883a 	mov	r5,r2
 800391c:	800d883a 	mov	r6,r16
 8003920:	dfc00217 	ldw	ra,8(sp)
 8003924:	dc400117 	ldw	r17,4(sp)
 8003928:	dc000017 	ldw	r16,0(sp)
 800392c:	dec00304 	addi	sp,sp,12
 8003930:	8003a401 	jmpi	8003a40 <_kill_r>
 8003934:	00800584 	movi	r2,22
 8003938:	20800015 	stw	r2,0(r4)
 800393c:	00bfffc4 	movi	r2,-1
 8003940:	f800283a 	ret

08003944 <__sigtramp_r>:
 8003944:	008007c4 	movi	r2,31
 8003948:	11402436 	bltu	r2,r5,80039dc <__sigtramp_r+0x98>
 800394c:	20c0b717 	ldw	r3,732(r4)
 8003950:	defffd04 	addi	sp,sp,-12
 8003954:	dc400115 	stw	r17,4(sp)
 8003958:	dc000015 	stw	r16,0(sp)
 800395c:	dfc00215 	stw	ra,8(sp)
 8003960:	2021883a 	mov	r16,r4
 8003964:	2823883a 	mov	r17,r5
 8003968:	18001826 	beq	r3,zero,80039cc <__sigtramp_r+0x88>
 800396c:	8c45883a 	add	r2,r17,r17
 8003970:	1085883a 	add	r2,r2,r2
 8003974:	1885883a 	add	r2,r3,r2
 8003978:	10c00017 	ldw	r3,0(r2)
 800397c:	18001126 	beq	r3,zero,80039c4 <__sigtramp_r+0x80>
 8003980:	013fffc4 	movi	r4,-1
 8003984:	19000d26 	beq	r3,r4,80039bc <__sigtramp_r+0x78>
 8003988:	01000044 	movi	r4,1
 800398c:	19000926 	beq	r3,r4,80039b4 <__sigtramp_r+0x70>
 8003990:	10000015 	stw	zero,0(r2)
 8003994:	8809883a 	mov	r4,r17
 8003998:	183ee83a 	callr	r3
 800399c:	0005883a 	mov	r2,zero
 80039a0:	dfc00217 	ldw	ra,8(sp)
 80039a4:	dc400117 	ldw	r17,4(sp)
 80039a8:	dc000017 	ldw	r16,0(sp)
 80039ac:	dec00304 	addi	sp,sp,12
 80039b0:	f800283a 	ret
 80039b4:	008000c4 	movi	r2,3
 80039b8:	003ff906 	br	80039a0 <__alt_data_end+0xfc0039a0>
 80039bc:	00800084 	movi	r2,2
 80039c0:	003ff706 	br	80039a0 <__alt_data_end+0xfc0039a0>
 80039c4:	00800044 	movi	r2,1
 80039c8:	003ff506 	br	80039a0 <__alt_data_end+0xfc0039a0>
 80039cc:	800379c0 	call	800379c <_init_signal_r>
 80039d0:	1000041e 	bne	r2,zero,80039e4 <__sigtramp_r+0xa0>
 80039d4:	80c0b717 	ldw	r3,732(r16)
 80039d8:	003fe406 	br	800396c <__alt_data_end+0xfc00396c>
 80039dc:	00bfffc4 	movi	r2,-1
 80039e0:	f800283a 	ret
 80039e4:	00bfffc4 	movi	r2,-1
 80039e8:	003fed06 	br	80039a0 <__alt_data_end+0xfc0039a0>

080039ec <raise>:
 80039ec:	008200b4 	movhi	r2,2050
 80039f0:	10a31904 	addi	r2,r2,-29596
 80039f4:	200b883a 	mov	r5,r4
 80039f8:	11000017 	ldw	r4,0(r2)
 80039fc:	80038881 	jmpi	8003888 <_raise_r>

08003a00 <signal>:
 8003a00:	00c200b4 	movhi	r3,2050
 8003a04:	18e31904 	addi	r3,r3,-29596
 8003a08:	2005883a 	mov	r2,r4
 8003a0c:	19000017 	ldw	r4,0(r3)
 8003a10:	280d883a 	mov	r6,r5
 8003a14:	100b883a 	mov	r5,r2
 8003a18:	80038041 	jmpi	8003804 <_signal_r>

08003a1c <_init_signal>:
 8003a1c:	008200b4 	movhi	r2,2050
 8003a20:	10a31904 	addi	r2,r2,-29596
 8003a24:	11000017 	ldw	r4,0(r2)
 8003a28:	800379c1 	jmpi	800379c <_init_signal_r>

08003a2c <__sigtramp>:
 8003a2c:	008200b4 	movhi	r2,2050
 8003a30:	10a31904 	addi	r2,r2,-29596
 8003a34:	200b883a 	mov	r5,r4
 8003a38:	11000017 	ldw	r4,0(r2)
 8003a3c:	80039441 	jmpi	8003944 <__sigtramp_r>

08003a40 <_kill_r>:
 8003a40:	defffd04 	addi	sp,sp,-12
 8003a44:	dc000015 	stw	r16,0(sp)
 8003a48:	040200b4 	movhi	r16,2050
 8003a4c:	dc400115 	stw	r17,4(sp)
 8003a50:	842a4d04 	addi	r16,r16,-22220
 8003a54:	2023883a 	mov	r17,r4
 8003a58:	2809883a 	mov	r4,r5
 8003a5c:	300b883a 	mov	r5,r6
 8003a60:	dfc00215 	stw	ra,8(sp)
 8003a64:	80000015 	stw	zero,0(r16)
 8003a68:	801345c0 	call	801345c <kill>
 8003a6c:	00ffffc4 	movi	r3,-1
 8003a70:	10c00526 	beq	r2,r3,8003a88 <_kill_r+0x48>
 8003a74:	dfc00217 	ldw	ra,8(sp)
 8003a78:	dc400117 	ldw	r17,4(sp)
 8003a7c:	dc000017 	ldw	r16,0(sp)
 8003a80:	dec00304 	addi	sp,sp,12
 8003a84:	f800283a 	ret
 8003a88:	80c00017 	ldw	r3,0(r16)
 8003a8c:	183ff926 	beq	r3,zero,8003a74 <__alt_data_end+0xfc003a74>
 8003a90:	88c00015 	stw	r3,0(r17)
 8003a94:	003ff706 	br	8003a74 <__alt_data_end+0xfc003a74>

08003a98 <_getpid_r>:
 8003a98:	80132f01 	jmpi	80132f0 <getpid>

08003a9c <_snprintf_r>:
 8003a9c:	3005883a 	mov	r2,r6
 8003aa0:	30003016 	blt	r6,zero,8003b64 <_snprintf_r+0xc8>
 8003aa4:	deffe404 	addi	sp,sp,-112
 8003aa8:	00c08204 	movi	r3,520
 8003aac:	dc001a15 	stw	r16,104(sp)
 8003ab0:	dfc01b15 	stw	ra,108(sp)
 8003ab4:	d8c0030d 	sth	r3,12(sp)
 8003ab8:	d9400015 	stw	r5,0(sp)
 8003abc:	d9400415 	stw	r5,16(sp)
 8003ac0:	380d883a 	mov	r6,r7
 8003ac4:	2021883a 	mov	r16,r4
 8003ac8:	10001026 	beq	r2,zero,8003b0c <_snprintf_r+0x70>
 8003acc:	10bfffc4 	addi	r2,r2,-1
 8003ad0:	d8800215 	stw	r2,8(sp)
 8003ad4:	d8800515 	stw	r2,20(sp)
 8003ad8:	d80b883a 	mov	r5,sp
 8003adc:	00bfffc4 	movi	r2,-1
 8003ae0:	d9c01c04 	addi	r7,sp,112
 8003ae4:	d880038d 	sth	r2,14(sp)
 8003ae8:	8003eac0 	call	8003eac <___svfprintf_internal_r>
 8003aec:	00ffffc4 	movi	r3,-1
 8003af0:	10c01916 	blt	r2,r3,8003b58 <_snprintf_r+0xbc>
 8003af4:	d8c00017 	ldw	r3,0(sp)
 8003af8:	18000005 	stb	zero,0(r3)
 8003afc:	dfc01b17 	ldw	ra,108(sp)
 8003b00:	dc001a17 	ldw	r16,104(sp)
 8003b04:	dec01c04 	addi	sp,sp,112
 8003b08:	f800283a 	ret
 8003b0c:	00bfffc4 	movi	r2,-1
 8003b10:	d80b883a 	mov	r5,sp
 8003b14:	d9c01c04 	addi	r7,sp,112
 8003b18:	d8000215 	stw	zero,8(sp)
 8003b1c:	d8000515 	stw	zero,20(sp)
 8003b20:	d880038d 	sth	r2,14(sp)
 8003b24:	8003eac0 	call	8003eac <___svfprintf_internal_r>
 8003b28:	00ffffc4 	movi	r3,-1
 8003b2c:	10c00416 	blt	r2,r3,8003b40 <_snprintf_r+0xa4>
 8003b30:	dfc01b17 	ldw	ra,108(sp)
 8003b34:	dc001a17 	ldw	r16,104(sp)
 8003b38:	dec01c04 	addi	sp,sp,112
 8003b3c:	f800283a 	ret
 8003b40:	00c022c4 	movi	r3,139
 8003b44:	80c00015 	stw	r3,0(r16)
 8003b48:	dfc01b17 	ldw	ra,108(sp)
 8003b4c:	dc001a17 	ldw	r16,104(sp)
 8003b50:	dec01c04 	addi	sp,sp,112
 8003b54:	f800283a 	ret
 8003b58:	00c022c4 	movi	r3,139
 8003b5c:	80c00015 	stw	r3,0(r16)
 8003b60:	003fe406 	br	8003af4 <__alt_data_end+0xfc003af4>
 8003b64:	008022c4 	movi	r2,139
 8003b68:	20800015 	stw	r2,0(r4)
 8003b6c:	00bfffc4 	movi	r2,-1
 8003b70:	f800283a 	ret

08003b74 <snprintf>:
 8003b74:	deffe304 	addi	sp,sp,-116
 8003b78:	dfc01b15 	stw	ra,108(sp)
 8003b7c:	dc001a15 	stw	r16,104(sp)
 8003b80:	d9c01c15 	stw	r7,112(sp)
 8003b84:	008200b4 	movhi	r2,2050
 8003b88:	10a31904 	addi	r2,r2,-29596
 8003b8c:	14000017 	ldw	r16,0(r2)
 8003b90:	28002d16 	blt	r5,zero,8003c48 <snprintf+0xd4>
 8003b94:	00c08204 	movi	r3,520
 8003b98:	d8c0030d 	sth	r3,12(sp)
 8003b9c:	d9000015 	stw	r4,0(sp)
 8003ba0:	d9000415 	stw	r4,16(sp)
 8003ba4:	28001126 	beq	r5,zero,8003bec <snprintf+0x78>
 8003ba8:	28bfffc4 	addi	r2,r5,-1
 8003bac:	d8800215 	stw	r2,8(sp)
 8003bb0:	d8800515 	stw	r2,20(sp)
 8003bb4:	8009883a 	mov	r4,r16
 8003bb8:	00bfffc4 	movi	r2,-1
 8003bbc:	d80b883a 	mov	r5,sp
 8003bc0:	d9c01c04 	addi	r7,sp,112
 8003bc4:	d880038d 	sth	r2,14(sp)
 8003bc8:	8003eac0 	call	8003eac <___svfprintf_internal_r>
 8003bcc:	00ffffc4 	movi	r3,-1
 8003bd0:	10c01a16 	blt	r2,r3,8003c3c <snprintf+0xc8>
 8003bd4:	d8c00017 	ldw	r3,0(sp)
 8003bd8:	18000005 	stb	zero,0(r3)
 8003bdc:	dfc01b17 	ldw	ra,108(sp)
 8003be0:	dc001a17 	ldw	r16,104(sp)
 8003be4:	dec01d04 	addi	sp,sp,116
 8003be8:	f800283a 	ret
 8003bec:	00bfffc4 	movi	r2,-1
 8003bf0:	8009883a 	mov	r4,r16
 8003bf4:	d80b883a 	mov	r5,sp
 8003bf8:	d9c01c04 	addi	r7,sp,112
 8003bfc:	d8000215 	stw	zero,8(sp)
 8003c00:	d8000515 	stw	zero,20(sp)
 8003c04:	d880038d 	sth	r2,14(sp)
 8003c08:	8003eac0 	call	8003eac <___svfprintf_internal_r>
 8003c0c:	00ffffc4 	movi	r3,-1
 8003c10:	10c00416 	blt	r2,r3,8003c24 <snprintf+0xb0>
 8003c14:	dfc01b17 	ldw	ra,108(sp)
 8003c18:	dc001a17 	ldw	r16,104(sp)
 8003c1c:	dec01d04 	addi	sp,sp,116
 8003c20:	f800283a 	ret
 8003c24:	00c022c4 	movi	r3,139
 8003c28:	80c00015 	stw	r3,0(r16)
 8003c2c:	dfc01b17 	ldw	ra,108(sp)
 8003c30:	dc001a17 	ldw	r16,104(sp)
 8003c34:	dec01d04 	addi	sp,sp,116
 8003c38:	f800283a 	ret
 8003c3c:	00c022c4 	movi	r3,139
 8003c40:	80c00015 	stw	r3,0(r16)
 8003c44:	003fe306 	br	8003bd4 <__alt_data_end+0xfc003bd4>
 8003c48:	008022c4 	movi	r2,139
 8003c4c:	80800015 	stw	r2,0(r16)
 8003c50:	00bfffc4 	movi	r2,-1
 8003c54:	003fef06 	br	8003c14 <__alt_data_end+0xfc003c14>

08003c58 <strcat>:
 8003c58:	defffe04 	addi	sp,sp,-8
 8003c5c:	dc000015 	stw	r16,0(sp)
 8003c60:	dfc00115 	stw	ra,4(sp)
 8003c64:	208000cc 	andi	r2,r4,3
 8003c68:	2021883a 	mov	r16,r4
 8003c6c:	1000111e 	bne	r2,zero,8003cb4 <strcat+0x5c>
 8003c70:	20800017 	ldw	r2,0(r4)
 8003c74:	027fbff4 	movhi	r9,65279
 8003c78:	4a7fbfc4 	addi	r9,r9,-257
 8003c7c:	0086303a 	nor	r3,zero,r2
 8003c80:	02202074 	movhi	r8,32897
 8003c84:	1245883a 	add	r2,r2,r9
 8003c88:	42202004 	addi	r8,r8,-32640
 8003c8c:	10c4703a 	and	r2,r2,r3
 8003c90:	1204703a 	and	r2,r2,r8
 8003c94:	1000071e 	bne	r2,zero,8003cb4 <strcat+0x5c>
 8003c98:	21000104 	addi	r4,r4,4
 8003c9c:	21800017 	ldw	r6,0(r4)
 8003ca0:	324f883a 	add	r7,r6,r9
 8003ca4:	018c303a 	nor	r6,zero,r6
 8003ca8:	398c703a 	and	r6,r7,r6
 8003cac:	320c703a 	and	r6,r6,r8
 8003cb0:	303ff926 	beq	r6,zero,8003c98 <__alt_data_end+0xfc003c98>
 8003cb4:	20800007 	ldb	r2,0(r4)
 8003cb8:	10000326 	beq	r2,zero,8003cc8 <strcat+0x70>
 8003cbc:	21000044 	addi	r4,r4,1
 8003cc0:	21800007 	ldb	r6,0(r4)
 8003cc4:	303ffd1e 	bne	r6,zero,8003cbc <__alt_data_end+0xfc003cbc>
 8003cc8:	8003d840 	call	8003d84 <strcpy>
 8003ccc:	8005883a 	mov	r2,r16
 8003cd0:	dfc00117 	ldw	ra,4(sp)
 8003cd4:	dc000017 	ldw	r16,0(sp)
 8003cd8:	dec00204 	addi	sp,sp,8
 8003cdc:	f800283a 	ret

08003ce0 <strcmp>:
 8003ce0:	2144b03a 	or	r2,r4,r5
 8003ce4:	108000cc 	andi	r2,r2,3
 8003ce8:	1000171e 	bne	r2,zero,8003d48 <strcmp+0x68>
 8003cec:	20800017 	ldw	r2,0(r4)
 8003cf0:	28c00017 	ldw	r3,0(r5)
 8003cf4:	10c0141e 	bne	r2,r3,8003d48 <strcmp+0x68>
 8003cf8:	027fbff4 	movhi	r9,65279
 8003cfc:	4a7fbfc4 	addi	r9,r9,-257
 8003d00:	0086303a 	nor	r3,zero,r2
 8003d04:	02202074 	movhi	r8,32897
 8003d08:	1245883a 	add	r2,r2,r9
 8003d0c:	42202004 	addi	r8,r8,-32640
 8003d10:	10c4703a 	and	r2,r2,r3
 8003d14:	1204703a 	and	r2,r2,r8
 8003d18:	10000226 	beq	r2,zero,8003d24 <strcmp+0x44>
 8003d1c:	00001706 	br	8003d7c <strcmp+0x9c>
 8003d20:	1000161e 	bne	r2,zero,8003d7c <strcmp+0x9c>
 8003d24:	21000104 	addi	r4,r4,4
 8003d28:	20c00017 	ldw	r3,0(r4)
 8003d2c:	29400104 	addi	r5,r5,4
 8003d30:	29800017 	ldw	r6,0(r5)
 8003d34:	1a4f883a 	add	r7,r3,r9
 8003d38:	00c4303a 	nor	r2,zero,r3
 8003d3c:	3884703a 	and	r2,r7,r2
 8003d40:	1204703a 	and	r2,r2,r8
 8003d44:	19bff626 	beq	r3,r6,8003d20 <__alt_data_end+0xfc003d20>
 8003d48:	20800007 	ldb	r2,0(r4)
 8003d4c:	1000051e 	bne	r2,zero,8003d64 <strcmp+0x84>
 8003d50:	00000606 	br	8003d6c <strcmp+0x8c>
 8003d54:	21000044 	addi	r4,r4,1
 8003d58:	20800007 	ldb	r2,0(r4)
 8003d5c:	29400044 	addi	r5,r5,1
 8003d60:	10000226 	beq	r2,zero,8003d6c <strcmp+0x8c>
 8003d64:	28c00007 	ldb	r3,0(r5)
 8003d68:	10fffa26 	beq	r2,r3,8003d54 <__alt_data_end+0xfc003d54>
 8003d6c:	20800003 	ldbu	r2,0(r4)
 8003d70:	28c00003 	ldbu	r3,0(r5)
 8003d74:	10c5c83a 	sub	r2,r2,r3
 8003d78:	f800283a 	ret
 8003d7c:	0005883a 	mov	r2,zero
 8003d80:	f800283a 	ret

08003d84 <strcpy>:
 8003d84:	2906b03a 	or	r3,r5,r4
 8003d88:	18c000cc 	andi	r3,r3,3
 8003d8c:	2005883a 	mov	r2,r4
 8003d90:	1800161e 	bne	r3,zero,8003dec <strcpy+0x68>
 8003d94:	29c00017 	ldw	r7,0(r5)
 8003d98:	02ffbff4 	movhi	r11,65279
 8003d9c:	5affbfc4 	addi	r11,r11,-257
 8003da0:	02a02074 	movhi	r10,32897
 8003da4:	01c8303a 	nor	r4,zero,r7
 8003da8:	3ac7883a 	add	r3,r7,r11
 8003dac:	52a02004 	addi	r10,r10,-32640
 8003db0:	20c6703a 	and	r3,r4,r3
 8003db4:	1a86703a 	and	r3,r3,r10
 8003db8:	18000c1e 	bne	r3,zero,8003dec <strcpy+0x68>
 8003dbc:	1011883a 	mov	r8,r2
 8003dc0:	41c00015 	stw	r7,0(r8)
 8003dc4:	29400104 	addi	r5,r5,4
 8003dc8:	29c00017 	ldw	r7,0(r5)
 8003dcc:	41800104 	addi	r6,r8,4
 8003dd0:	3011883a 	mov	r8,r6
 8003dd4:	01d2303a 	nor	r9,zero,r7
 8003dd8:	3ac7883a 	add	r3,r7,r11
 8003ddc:	48c6703a 	and	r3,r9,r3
 8003de0:	1a86703a 	and	r3,r3,r10
 8003de4:	183ff626 	beq	r3,zero,8003dc0 <__alt_data_end+0xfc003dc0>
 8003de8:	00000106 	br	8003df0 <strcpy+0x6c>
 8003dec:	100d883a 	mov	r6,r2
 8003df0:	28c00003 	ldbu	r3,0(r5)
 8003df4:	31800044 	addi	r6,r6,1
 8003df8:	29400044 	addi	r5,r5,1
 8003dfc:	30ffffc5 	stb	r3,-1(r6)
 8003e00:	18c03fcc 	andi	r3,r3,255
 8003e04:	18c0201c 	xori	r3,r3,128
 8003e08:	18ffe004 	addi	r3,r3,-128
 8003e0c:	183ff81e 	bne	r3,zero,8003df0 <__alt_data_end+0xfc003df0>
 8003e10:	f800283a 	ret

08003e14 <strlen>:
 8003e14:	208000cc 	andi	r2,r4,3
 8003e18:	10002026 	beq	r2,zero,8003e9c <strlen+0x88>
 8003e1c:	20800007 	ldb	r2,0(r4)
 8003e20:	10002026 	beq	r2,zero,8003ea4 <strlen+0x90>
 8003e24:	2005883a 	mov	r2,r4
 8003e28:	00000206 	br	8003e34 <strlen+0x20>
 8003e2c:	10c00007 	ldb	r3,0(r2)
 8003e30:	18001826 	beq	r3,zero,8003e94 <strlen+0x80>
 8003e34:	10800044 	addi	r2,r2,1
 8003e38:	10c000cc 	andi	r3,r2,3
 8003e3c:	183ffb1e 	bne	r3,zero,8003e2c <__alt_data_end+0xfc003e2c>
 8003e40:	10c00017 	ldw	r3,0(r2)
 8003e44:	01ffbff4 	movhi	r7,65279
 8003e48:	39ffbfc4 	addi	r7,r7,-257
 8003e4c:	00ca303a 	nor	r5,zero,r3
 8003e50:	01a02074 	movhi	r6,32897
 8003e54:	19c7883a 	add	r3,r3,r7
 8003e58:	31a02004 	addi	r6,r6,-32640
 8003e5c:	1946703a 	and	r3,r3,r5
 8003e60:	1986703a 	and	r3,r3,r6
 8003e64:	1800091e 	bne	r3,zero,8003e8c <strlen+0x78>
 8003e68:	10800104 	addi	r2,r2,4
 8003e6c:	10c00017 	ldw	r3,0(r2)
 8003e70:	19cb883a 	add	r5,r3,r7
 8003e74:	00c6303a 	nor	r3,zero,r3
 8003e78:	28c6703a 	and	r3,r5,r3
 8003e7c:	1986703a 	and	r3,r3,r6
 8003e80:	183ff926 	beq	r3,zero,8003e68 <__alt_data_end+0xfc003e68>
 8003e84:	00000106 	br	8003e8c <strlen+0x78>
 8003e88:	10800044 	addi	r2,r2,1
 8003e8c:	10c00007 	ldb	r3,0(r2)
 8003e90:	183ffd1e 	bne	r3,zero,8003e88 <__alt_data_end+0xfc003e88>
 8003e94:	1105c83a 	sub	r2,r2,r4
 8003e98:	f800283a 	ret
 8003e9c:	2005883a 	mov	r2,r4
 8003ea0:	003fe706 	br	8003e40 <__alt_data_end+0xfc003e40>
 8003ea4:	0005883a 	mov	r2,zero
 8003ea8:	f800283a 	ret

08003eac <___svfprintf_internal_r>:
 8003eac:	deffb504 	addi	sp,sp,-300
 8003eb0:	dfc04a15 	stw	ra,296(sp)
 8003eb4:	dd804715 	stw	r22,284(sp)
 8003eb8:	d9002f15 	stw	r4,188(sp)
 8003ebc:	282d883a 	mov	r22,r5
 8003ec0:	d9802915 	stw	r6,164(sp)
 8003ec4:	d9c02d15 	stw	r7,180(sp)
 8003ec8:	df004915 	stw	fp,292(sp)
 8003ecc:	ddc04815 	stw	r23,288(sp)
 8003ed0:	dd404615 	stw	r21,280(sp)
 8003ed4:	dd004515 	stw	r20,276(sp)
 8003ed8:	dcc04415 	stw	r19,272(sp)
 8003edc:	dc804315 	stw	r18,268(sp)
 8003ee0:	dc404215 	stw	r17,264(sp)
 8003ee4:	dc004115 	stw	r16,260(sp)
 8003ee8:	800ab9c0 	call	800ab9c <_localeconv_r>
 8003eec:	10800017 	ldw	r2,0(r2)
 8003ef0:	1009883a 	mov	r4,r2
 8003ef4:	d8803515 	stw	r2,212(sp)
 8003ef8:	8003e140 	call	8003e14 <strlen>
 8003efc:	d8803915 	stw	r2,228(sp)
 8003f00:	b080030b 	ldhu	r2,12(r22)
 8003f04:	1080200c 	andi	r2,r2,128
 8003f08:	10000226 	beq	r2,zero,8003f14 <___svfprintf_internal_r+0x68>
 8003f0c:	b0800417 	ldw	r2,16(r22)
 8003f10:	10067426 	beq	r2,zero,80058e4 <___svfprintf_internal_r+0x1a38>
 8003f14:	d9001dc4 	addi	r4,sp,119
 8003f18:	ddc01e04 	addi	r23,sp,120
 8003f1c:	d9400404 	addi	r5,sp,16
 8003f20:	05020074 	movhi	r20,2049
 8003f24:	b905c83a 	sub	r2,r23,r4
 8003f28:	a51b3f84 	addi	r20,r20,27902
 8003f2c:	d9002815 	stw	r4,160(sp)
 8003f30:	d9401e15 	stw	r5,120(sp)
 8003f34:	d8002015 	stw	zero,128(sp)
 8003f38:	d8001f15 	stw	zero,124(sp)
 8003f3c:	d8003315 	stw	zero,204(sp)
 8003f40:	d8003715 	stw	zero,220(sp)
 8003f44:	d8003815 	stw	zero,224(sp)
 8003f48:	d8003b15 	stw	zero,236(sp)
 8003f4c:	d8003a15 	stw	zero,232(sp)
 8003f50:	d8003015 	stw	zero,192(sp)
 8003f54:	2811883a 	mov	r8,r5
 8003f58:	d8803d15 	stw	r2,244(sp)
 8003f5c:	d8c02917 	ldw	r3,164(sp)
 8003f60:	18800007 	ldb	r2,0(r3)
 8003f64:	1001fa26 	beq	r2,zero,8004750 <___svfprintf_internal_r+0x8a4>
 8003f68:	00c00944 	movi	r3,37
 8003f6c:	dc002917 	ldw	r16,164(sp)
 8003f70:	10c0021e 	bne	r2,r3,8003f7c <___svfprintf_internal_r+0xd0>
 8003f74:	00001606 	br	8003fd0 <___svfprintf_internal_r+0x124>
 8003f78:	10c08526 	beq	r2,r3,8004190 <___svfprintf_internal_r+0x2e4>
 8003f7c:	84000044 	addi	r16,r16,1
 8003f80:	80800007 	ldb	r2,0(r16)
 8003f84:	103ffc1e 	bne	r2,zero,8003f78 <__alt_data_end+0xfc003f78>
 8003f88:	d9002917 	ldw	r4,164(sp)
 8003f8c:	8123c83a 	sub	r17,r16,r4
 8003f90:	88000f26 	beq	r17,zero,8003fd0 <___svfprintf_internal_r+0x124>
 8003f94:	d8802917 	ldw	r2,164(sp)
 8003f98:	d8c02017 	ldw	r3,128(sp)
 8003f9c:	44400115 	stw	r17,4(r8)
 8003fa0:	40800015 	stw	r2,0(r8)
 8003fa4:	d8801f17 	ldw	r2,124(sp)
 8003fa8:	1c47883a 	add	r3,r3,r17
 8003fac:	d8c02015 	stw	r3,128(sp)
 8003fb0:	10800044 	addi	r2,r2,1
 8003fb4:	d8801f15 	stw	r2,124(sp)
 8003fb8:	00c001c4 	movi	r3,7
 8003fbc:	18807716 	blt	r3,r2,800419c <___svfprintf_internal_r+0x2f0>
 8003fc0:	42000204 	addi	r8,r8,8
 8003fc4:	d8c03017 	ldw	r3,192(sp)
 8003fc8:	1c47883a 	add	r3,r3,r17
 8003fcc:	d8c03015 	stw	r3,192(sp)
 8003fd0:	80800007 	ldb	r2,0(r16)
 8003fd4:	10007826 	beq	r2,zero,80041b8 <___svfprintf_internal_r+0x30c>
 8003fd8:	80800044 	addi	r2,r16,1
 8003fdc:	84000047 	ldb	r16,1(r16)
 8003fe0:	0027883a 	mov	r19,zero
 8003fe4:	0039883a 	mov	fp,zero
 8003fe8:	dcc02a05 	stb	r19,168(sp)
 8003fec:	d8002785 	stb	zero,158(sp)
 8003ff0:	027fffc4 	movi	r9,-1
 8003ff4:	d8002e15 	stw	zero,184(sp)
 8003ff8:	04401604 	movi	r17,88
 8003ffc:	04800244 	movi	r18,9
 8004000:	da002915 	stw	r8,164(sp)
 8004004:	e027883a 	mov	r19,fp
 8004008:	17000044 	addi	fp,r2,1
 800400c:	80bff804 	addi	r2,r16,-32
 8004010:	88830036 	bltu	r17,r2,8004c14 <___svfprintf_internal_r+0xd68>
 8004014:	100490ba 	slli	r2,r2,2
 8004018:	01020034 	movhi	r4,2048
 800401c:	21100b04 	addi	r4,r4,16428
 8004020:	1105883a 	add	r2,r2,r4
 8004024:	10800017 	ldw	r2,0(r2)
 8004028:	1000683a 	jmp	r2
 800402c:	08004a58 	cmpnei	zero,at,297
 8004030:	08004c14 	ori	zero,at,304
 8004034:	08004c14 	ori	zero,at,304
 8004038:	08004a74 	orhi	zero,at,297
 800403c:	08004c14 	ori	zero,at,304
 8004040:	08004c14 	ori	zero,at,304
 8004044:	08004c14 	ori	zero,at,304
 8004048:	08004c14 	ori	zero,at,304
 800404c:	08004c14 	ori	zero,at,304
 8004050:	08004c14 	ori	zero,at,304
 8004054:	08004b60 	cmpeqi	zero,at,301
 8004058:	08004b88 	cmpgei	zero,at,302
 800405c:	08004c14 	ori	zero,at,304
 8004060:	08004218 	cmpnei	zero,at,264
 8004064:	08004228 	cmpgeui	zero,at,264
 8004068:	08004c14 	ori	zero,at,304
 800406c:	08004278 	rdprs	zero,at,265
 8004070:	08004288 	cmpgei	zero,at,266
 8004074:	08004288 	cmpgei	zero,at,266
 8004078:	08004288 	cmpgei	zero,at,266
 800407c:	08004288 	cmpgei	zero,at,266
 8004080:	08004288 	cmpgei	zero,at,266
 8004084:	08004288 	cmpgei	zero,at,266
 8004088:	08004288 	cmpgei	zero,at,266
 800408c:	08004288 	cmpgei	zero,at,266
 8004090:	08004288 	cmpgei	zero,at,266
 8004094:	08004c14 	ori	zero,at,304
 8004098:	08004c14 	ori	zero,at,304
 800409c:	08004c14 	ori	zero,at,304
 80040a0:	08004c14 	ori	zero,at,304
 80040a4:	08004c14 	ori	zero,at,304
 80040a8:	08004c14 	ori	zero,at,304
 80040ac:	08004c14 	ori	zero,at,304
 80040b0:	08004c14 	ori	zero,at,304
 80040b4:	08004c14 	ori	zero,at,304
 80040b8:	08004c14 	ori	zero,at,304
 80040bc:	080042cc 	andi	zero,at,267
 80040c0:	08004758 	cmpnei	zero,at,285
 80040c4:	08004c14 	ori	zero,at,304
 80040c8:	08004758 	cmpnei	zero,at,285
 80040cc:	08004c14 	ori	zero,at,304
 80040d0:	08004c14 	ori	zero,at,304
 80040d4:	08004c14 	ori	zero,at,304
 80040d8:	08004c14 	ori	zero,at,304
 80040dc:	08004800 	call	800480 <__reset-0x77ffb80>
 80040e0:	08004c14 	ori	zero,at,304
 80040e4:	08004c14 	ori	zero,at,304
 80040e8:	08004810 	cmplti	zero,at,288
 80040ec:	08004c14 	ori	zero,at,304
 80040f0:	08004c14 	ori	zero,at,304
 80040f4:	08004c14 	ori	zero,at,304
 80040f8:	08004c14 	ori	zero,at,304
 80040fc:	08004c14 	ori	zero,at,304
 8004100:	08004850 	cmplti	zero,at,289
 8004104:	08004c14 	ori	zero,at,304
 8004108:	08004c14 	ori	zero,at,304
 800410c:	080049a4 	muli	zero,at,294
 8004110:	08004c14 	ori	zero,at,304
 8004114:	08004c14 	ori	zero,at,304
 8004118:	08004c14 	ori	zero,at,304
 800411c:	08004c14 	ori	zero,at,304
 8004120:	08004c14 	ori	zero,at,304
 8004124:	08004c14 	ori	zero,at,304
 8004128:	08004c14 	ori	zero,at,304
 800412c:	08004c14 	ori	zero,at,304
 8004130:	08004c14 	ori	zero,at,304
 8004134:	08004c14 	ori	zero,at,304
 8004138:	08004a0c 	andi	zero,at,296
 800413c:	080048d0 	cmplti	zero,at,291
 8004140:	08004758 	cmpnei	zero,at,285
 8004144:	08004758 	cmpnei	zero,at,285
 8004148:	08004758 	cmpnei	zero,at,285
 800414c:	0800493c 	xorhi	zero,at,292
 8004150:	080048d0 	cmplti	zero,at,291
 8004154:	08004c14 	ori	zero,at,304
 8004158:	08004c14 	ori	zero,at,304
 800415c:	0800494c 	andi	zero,at,293
 8004160:	08004c14 	ori	zero,at,304
 8004164:	08004964 	muli	zero,at,293
 8004168:	08004bd8 	cmpnei	zero,at,303
 800416c:	08004884 	addi	zero,at,290
 8004170:	08004b50 	cmplti	zero,at,301
 8004174:	08004c14 	ori	zero,at,304
 8004178:	08004a84 	addi	zero,at,298
 800417c:	08004c14 	ori	zero,at,304
 8004180:	08004b9c 	xori	zero,at,302
 8004184:	08004c14 	ori	zero,at,304
 8004188:	08004c14 	ori	zero,at,304
 800418c:	08004b04 	addi	zero,at,300
 8004190:	d9402917 	ldw	r5,164(sp)
 8004194:	8163c83a 	sub	r17,r16,r5
 8004198:	003f7d06 	br	8003f90 <__alt_data_end+0xfc003f90>
 800419c:	d9002f17 	ldw	r4,188(sp)
 80041a0:	b00b883a 	mov	r5,r22
 80041a4:	b80d883a 	mov	r6,r23
 80041a8:	800c89c0 	call	800c89c <__ssprint_r>
 80041ac:	1000081e 	bne	r2,zero,80041d0 <___svfprintf_internal_r+0x324>
 80041b0:	da000404 	addi	r8,sp,16
 80041b4:	003f8306 	br	8003fc4 <__alt_data_end+0xfc003fc4>
 80041b8:	d8802017 	ldw	r2,128(sp)
 80041bc:	10000426 	beq	r2,zero,80041d0 <___svfprintf_internal_r+0x324>
 80041c0:	d9002f17 	ldw	r4,188(sp)
 80041c4:	b00b883a 	mov	r5,r22
 80041c8:	d9801e04 	addi	r6,sp,120
 80041cc:	800c89c0 	call	800c89c <__ssprint_r>
 80041d0:	b080030b 	ldhu	r2,12(r22)
 80041d4:	1080100c 	andi	r2,r2,64
 80041d8:	10000d1e 	bne	r2,zero,8004210 <___svfprintf_internal_r+0x364>
 80041dc:	d8803017 	ldw	r2,192(sp)
 80041e0:	dfc04a17 	ldw	ra,296(sp)
 80041e4:	df004917 	ldw	fp,292(sp)
 80041e8:	ddc04817 	ldw	r23,288(sp)
 80041ec:	dd804717 	ldw	r22,284(sp)
 80041f0:	dd404617 	ldw	r21,280(sp)
 80041f4:	dd004517 	ldw	r20,276(sp)
 80041f8:	dcc04417 	ldw	r19,272(sp)
 80041fc:	dc804317 	ldw	r18,268(sp)
 8004200:	dc404217 	ldw	r17,264(sp)
 8004204:	dc004117 	ldw	r16,260(sp)
 8004208:	dec04b04 	addi	sp,sp,300
 800420c:	f800283a 	ret
 8004210:	00bfffc4 	movi	r2,-1
 8004214:	003ff206 	br	80041e0 <__alt_data_end+0xfc0041e0>
 8004218:	e005883a 	mov	r2,fp
 800421c:	9cc00114 	ori	r19,r19,4
 8004220:	e4000007 	ldb	r16,0(fp)
 8004224:	003f7806 	br	8004008 <__alt_data_end+0xfc004008>
 8004228:	e4000007 	ldb	r16,0(fp)
 800422c:	01000a84 	movi	r4,42
 8004230:	e0800044 	addi	r2,fp,1
 8004234:	81071026 	beq	r16,r4,8005e78 <___svfprintf_internal_r+0x1fcc>
 8004238:	857ff404 	addi	r21,r16,-48
 800423c:	1039883a 	mov	fp,r2
 8004240:	0013883a 	mov	r9,zero
 8004244:	957f7136 	bltu	r18,r21,800400c <__alt_data_end+0xfc00400c>
 8004248:	0009883a 	mov	r4,zero
 800424c:	01400284 	movi	r5,10
 8004250:	80027c00 	call	80027c0 <__mulsi3>
 8004254:	e4000007 	ldb	r16,0(fp)
 8004258:	a889883a 	add	r4,r21,r2
 800425c:	e7000044 	addi	fp,fp,1
 8004260:	857ff404 	addi	r21,r16,-48
 8004264:	957ff92e 	bgeu	r18,r21,800424c <__alt_data_end+0xfc00424c>
 8004268:	2013883a 	mov	r9,r4
 800426c:	203f670e 	bge	r4,zero,800400c <__alt_data_end+0xfc00400c>
 8004270:	027fffc4 	movi	r9,-1
 8004274:	003f6506 	br	800400c <__alt_data_end+0xfc00400c>
 8004278:	9cc02014 	ori	r19,r19,128
 800427c:	e005883a 	mov	r2,fp
 8004280:	e4000007 	ldb	r16,0(fp)
 8004284:	003f6006 	br	8004008 <__alt_data_end+0xfc004008>
 8004288:	857ff404 	addi	r21,r16,-48
 800428c:	d8002e15 	stw	zero,184(sp)
 8004290:	e021883a 	mov	r16,fp
 8004294:	0009883a 	mov	r4,zero
 8004298:	da402b15 	stw	r9,172(sp)
 800429c:	01400284 	movi	r5,10
 80042a0:	80027c00 	call	80027c0 <__mulsi3>
 80042a4:	81400007 	ldb	r5,0(r16)
 80042a8:	1549883a 	add	r4,r2,r21
 80042ac:	e7000044 	addi	fp,fp,1
 80042b0:	2d7ff404 	addi	r21,r5,-48
 80042b4:	e021883a 	mov	r16,fp
 80042b8:	957ff82e 	bgeu	r18,r21,800429c <__alt_data_end+0xfc00429c>
 80042bc:	2821883a 	mov	r16,r5
 80042c0:	d9002e15 	stw	r4,184(sp)
 80042c4:	da402b17 	ldw	r9,172(sp)
 80042c8:	003f5006 	br	800400c <__alt_data_end+0xfc00400c>
 80042cc:	da002917 	ldw	r8,164(sp)
 80042d0:	df002915 	stw	fp,164(sp)
 80042d4:	9839883a 	mov	fp,r19
 80042d8:	dcc02a03 	ldbu	r19,168(sp)
 80042dc:	e7000414 	ori	fp,fp,16
 80042e0:	e080080c 	andi	r2,fp,32
 80042e4:	dcc02785 	stb	r19,158(sp)
 80042e8:	d8c02d17 	ldw	r3,180(sp)
 80042ec:	10018026 	beq	r2,zero,80048f0 <___svfprintf_internal_r+0xa44>
 80042f0:	d9002d17 	ldw	r4,180(sp)
 80042f4:	18800117 	ldw	r2,4(r3)
 80042f8:	1c800017 	ldw	r18,0(r3)
 80042fc:	21000204 	addi	r4,r4,8
 8004300:	d9002d15 	stw	r4,180(sp)
 8004304:	102b883a 	mov	r21,r2
 8004308:	10018216 	blt	r2,zero,8004914 <___svfprintf_internal_r+0xa68>
 800430c:	dcc02783 	ldbu	r19,158(sp)
 8004310:	da403215 	stw	r9,200(sp)
 8004314:	00800044 	movi	r2,1
 8004318:	9546b03a 	or	r3,r18,r21
 800431c:	48000216 	blt	r9,zero,8004328 <___svfprintf_internal_r+0x47c>
 8004320:	013fdfc4 	movi	r4,-129
 8004324:	e138703a 	and	fp,fp,r4
 8004328:	1802471e 	bne	r3,zero,8004c48 <___svfprintf_internal_r+0xd9c>
 800432c:	48035226 	beq	r9,zero,8005078 <___svfprintf_internal_r+0x11cc>
 8004330:	10803fcc 	andi	r2,r2,255
 8004334:	00c00044 	movi	r3,1
 8004338:	10c26626 	beq	r2,r3,8004cd4 <___svfprintf_internal_r+0xe28>
 800433c:	00c00084 	movi	r3,2
 8004340:	10c2e826 	beq	r2,r3,8004ee4 <___svfprintf_internal_r+0x1038>
 8004344:	b807883a 	mov	r3,r23
 8004348:	9008d0fa 	srli	r4,r18,3
 800434c:	a80a977a 	slli	r5,r21,29
 8004350:	a82ad0fa 	srli	r21,r21,3
 8004354:	948001cc 	andi	r18,r18,7
 8004358:	90800c04 	addi	r2,r18,48
 800435c:	18ffffc4 	addi	r3,r3,-1
 8004360:	2924b03a 	or	r18,r5,r4
 8004364:	18800005 	stb	r2,0(r3)
 8004368:	9548b03a 	or	r4,r18,r21
 800436c:	203ff61e 	bne	r4,zero,8004348 <__alt_data_end+0xfc004348>
 8004370:	e100004c 	andi	r4,fp,1
 8004374:	d8c03115 	stw	r3,196(sp)
 8004378:	2002e826 	beq	r4,zero,8004f1c <___svfprintf_internal_r+0x1070>
 800437c:	10803fcc 	andi	r2,r2,255
 8004380:	1080201c 	xori	r2,r2,128
 8004384:	10bfe004 	addi	r2,r2,-128
 8004388:	01000c04 	movi	r4,48
 800438c:	11056d26 	beq	r2,r4,8005944 <___svfprintf_internal_r+0x1a98>
 8004390:	d9403117 	ldw	r5,196(sp)
 8004394:	193fffc5 	stb	r4,-1(r3)
 8004398:	297fffc4 	addi	r5,r5,-1
 800439c:	d9403115 	stw	r5,196(sp)
 80043a0:	b963c83a 	sub	r17,r23,r5
 80043a4:	8805883a 	mov	r2,r17
 80043a8:	8a40010e 	bge	r17,r9,80043b0 <___svfprintf_internal_r+0x504>
 80043ac:	4805883a 	mov	r2,r9
 80043b0:	d8802a15 	stw	r2,168(sp)
 80043b4:	d8003415 	stw	zero,208(sp)
 80043b8:	98803fcc 	andi	r2,r19,255
 80043bc:	1080201c 	xori	r2,r2,128
 80043c0:	10bfe004 	addi	r2,r2,-128
 80043c4:	10000326 	beq	r2,zero,80043d4 <___svfprintf_internal_r+0x528>
 80043c8:	d8c02a17 	ldw	r3,168(sp)
 80043cc:	18c00044 	addi	r3,r3,1
 80043d0:	d8c02a15 	stw	r3,168(sp)
 80043d4:	e0c0008c 	andi	r3,fp,2
 80043d8:	d8c02b15 	stw	r3,172(sp)
 80043dc:	18000326 	beq	r3,zero,80043ec <___svfprintf_internal_r+0x540>
 80043e0:	d8c02a17 	ldw	r3,168(sp)
 80043e4:	18c00084 	addi	r3,r3,2
 80043e8:	d8c02a15 	stw	r3,168(sp)
 80043ec:	e0c0210c 	andi	r3,fp,132
 80043f0:	d8c02c15 	stw	r3,176(sp)
 80043f4:	1802121e 	bne	r3,zero,8004c40 <___svfprintf_internal_r+0xd94>
 80043f8:	d9002e17 	ldw	r4,184(sp)
 80043fc:	d8c02a17 	ldw	r3,168(sp)
 8004400:	20ebc83a 	sub	r21,r4,r3
 8004404:	05420e0e 	bge	zero,r21,8004c40 <___svfprintf_internal_r+0xd94>
 8004408:	02400404 	movi	r9,16
 800440c:	d8c02017 	ldw	r3,128(sp)
 8004410:	d8801f17 	ldw	r2,124(sp)
 8004414:	4d45aa0e 	bge	r9,r21,8005ac0 <___svfprintf_internal_r+0x1c14>
 8004418:	01420074 	movhi	r5,2049
 800441c:	a809883a 	mov	r4,r21
 8004420:	295b4384 	addi	r5,r5,27918
 8004424:	dc003c15 	stw	r16,240(sp)
 8004428:	882b883a 	mov	r21,r17
 800442c:	d9403615 	stw	r5,216(sp)
 8004430:	4827883a 	mov	r19,r9
 8004434:	048001c4 	movi	r18,7
 8004438:	dc002f17 	ldw	r16,188(sp)
 800443c:	2023883a 	mov	r17,r4
 8004440:	00000306 	br	8004450 <___svfprintf_internal_r+0x5a4>
 8004444:	8c7ffc04 	addi	r17,r17,-16
 8004448:	42000204 	addi	r8,r8,8
 800444c:	9c40130e 	bge	r19,r17,800449c <___svfprintf_internal_r+0x5f0>
 8004450:	01020074 	movhi	r4,2049
 8004454:	18c00404 	addi	r3,r3,16
 8004458:	10800044 	addi	r2,r2,1
 800445c:	211b4384 	addi	r4,r4,27918
 8004460:	41000015 	stw	r4,0(r8)
 8004464:	44c00115 	stw	r19,4(r8)
 8004468:	d8c02015 	stw	r3,128(sp)
 800446c:	d8801f15 	stw	r2,124(sp)
 8004470:	90bff40e 	bge	r18,r2,8004444 <__alt_data_end+0xfc004444>
 8004474:	8009883a 	mov	r4,r16
 8004478:	b00b883a 	mov	r5,r22
 800447c:	b80d883a 	mov	r6,r23
 8004480:	800c89c0 	call	800c89c <__ssprint_r>
 8004484:	103f521e 	bne	r2,zero,80041d0 <__alt_data_end+0xfc0041d0>
 8004488:	8c7ffc04 	addi	r17,r17,-16
 800448c:	d8c02017 	ldw	r3,128(sp)
 8004490:	d8801f17 	ldw	r2,124(sp)
 8004494:	da000404 	addi	r8,sp,16
 8004498:	9c7fed16 	blt	r19,r17,8004450 <__alt_data_end+0xfc004450>
 800449c:	dc003c17 	ldw	r16,240(sp)
 80044a0:	8809883a 	mov	r4,r17
 80044a4:	a823883a 	mov	r17,r21
 80044a8:	202b883a 	mov	r21,r4
 80044ac:	d9403617 	ldw	r5,216(sp)
 80044b0:	a8c7883a 	add	r3,r21,r3
 80044b4:	10800044 	addi	r2,r2,1
 80044b8:	41400015 	stw	r5,0(r8)
 80044bc:	45400115 	stw	r21,4(r8)
 80044c0:	d8c02015 	stw	r3,128(sp)
 80044c4:	d8801f15 	stw	r2,124(sp)
 80044c8:	010001c4 	movi	r4,7
 80044cc:	20834416 	blt	r4,r2,80051e0 <___svfprintf_internal_r+0x1334>
 80044d0:	d8802787 	ldb	r2,158(sp)
 80044d4:	42000204 	addi	r8,r8,8
 80044d8:	10000c26 	beq	r2,zero,800450c <___svfprintf_internal_r+0x660>
 80044dc:	d8801f17 	ldw	r2,124(sp)
 80044e0:	d9002784 	addi	r4,sp,158
 80044e4:	18c00044 	addi	r3,r3,1
 80044e8:	10800044 	addi	r2,r2,1
 80044ec:	41000015 	stw	r4,0(r8)
 80044f0:	01000044 	movi	r4,1
 80044f4:	41000115 	stw	r4,4(r8)
 80044f8:	d8c02015 	stw	r3,128(sp)
 80044fc:	d8801f15 	stw	r2,124(sp)
 8004500:	010001c4 	movi	r4,7
 8004504:	2082ee16 	blt	r4,r2,80050c0 <___svfprintf_internal_r+0x1214>
 8004508:	42000204 	addi	r8,r8,8
 800450c:	d8802b17 	ldw	r2,172(sp)
 8004510:	10000c26 	beq	r2,zero,8004544 <___svfprintf_internal_r+0x698>
 8004514:	d8801f17 	ldw	r2,124(sp)
 8004518:	d9002704 	addi	r4,sp,156
 800451c:	18c00084 	addi	r3,r3,2
 8004520:	10800044 	addi	r2,r2,1
 8004524:	41000015 	stw	r4,0(r8)
 8004528:	01000084 	movi	r4,2
 800452c:	41000115 	stw	r4,4(r8)
 8004530:	d8c02015 	stw	r3,128(sp)
 8004534:	d8801f15 	stw	r2,124(sp)
 8004538:	010001c4 	movi	r4,7
 800453c:	2082e816 	blt	r4,r2,80050e0 <___svfprintf_internal_r+0x1234>
 8004540:	42000204 	addi	r8,r8,8
 8004544:	d9002c17 	ldw	r4,176(sp)
 8004548:	00802004 	movi	r2,128
 800454c:	20823126 	beq	r4,r2,8004e14 <___svfprintf_internal_r+0xf68>
 8004550:	d9403217 	ldw	r5,200(sp)
 8004554:	2c67c83a 	sub	r19,r5,r17
 8004558:	04c02f0e 	bge	zero,r19,8004618 <___svfprintf_internal_r+0x76c>
 800455c:	05400404 	movi	r21,16
 8004560:	d8801f17 	ldw	r2,124(sp)
 8004564:	acc4260e 	bge	r21,r19,8005600 <___svfprintf_internal_r+0x1754>
 8004568:	01420074 	movhi	r5,2049
 800456c:	9809883a 	mov	r4,r19
 8004570:	295b3f84 	addi	r5,r5,27902
 8004574:	dc002c15 	stw	r16,176(sp)
 8004578:	8827883a 	mov	r19,r17
 800457c:	d9402b15 	stw	r5,172(sp)
 8004580:	048001c4 	movi	r18,7
 8004584:	dc002f17 	ldw	r16,188(sp)
 8004588:	2023883a 	mov	r17,r4
 800458c:	00000306 	br	800459c <___svfprintf_internal_r+0x6f0>
 8004590:	8c7ffc04 	addi	r17,r17,-16
 8004594:	42000204 	addi	r8,r8,8
 8004598:	ac40110e 	bge	r21,r17,80045e0 <___svfprintf_internal_r+0x734>
 800459c:	18c00404 	addi	r3,r3,16
 80045a0:	10800044 	addi	r2,r2,1
 80045a4:	45000015 	stw	r20,0(r8)
 80045a8:	45400115 	stw	r21,4(r8)
 80045ac:	d8c02015 	stw	r3,128(sp)
 80045b0:	d8801f15 	stw	r2,124(sp)
 80045b4:	90bff60e 	bge	r18,r2,8004590 <__alt_data_end+0xfc004590>
 80045b8:	8009883a 	mov	r4,r16
 80045bc:	b00b883a 	mov	r5,r22
 80045c0:	b80d883a 	mov	r6,r23
 80045c4:	800c89c0 	call	800c89c <__ssprint_r>
 80045c8:	103f011e 	bne	r2,zero,80041d0 <__alt_data_end+0xfc0041d0>
 80045cc:	8c7ffc04 	addi	r17,r17,-16
 80045d0:	d8c02017 	ldw	r3,128(sp)
 80045d4:	d8801f17 	ldw	r2,124(sp)
 80045d8:	da000404 	addi	r8,sp,16
 80045dc:	ac7fef16 	blt	r21,r17,800459c <__alt_data_end+0xfc00459c>
 80045e0:	dc002c17 	ldw	r16,176(sp)
 80045e4:	8809883a 	mov	r4,r17
 80045e8:	9823883a 	mov	r17,r19
 80045ec:	2027883a 	mov	r19,r4
 80045f0:	d9002b17 	ldw	r4,172(sp)
 80045f4:	1cc7883a 	add	r3,r3,r19
 80045f8:	10800044 	addi	r2,r2,1
 80045fc:	41000015 	stw	r4,0(r8)
 8004600:	44c00115 	stw	r19,4(r8)
 8004604:	d8c02015 	stw	r3,128(sp)
 8004608:	d8801f15 	stw	r2,124(sp)
 800460c:	010001c4 	movi	r4,7
 8004610:	2082a316 	blt	r4,r2,80050a0 <___svfprintf_internal_r+0x11f4>
 8004614:	42000204 	addi	r8,r8,8
 8004618:	e080400c 	andi	r2,fp,256
 800461c:	1001b31e 	bne	r2,zero,8004cec <___svfprintf_internal_r+0xe40>
 8004620:	d8801f17 	ldw	r2,124(sp)
 8004624:	d9403117 	ldw	r5,196(sp)
 8004628:	1c47883a 	add	r3,r3,r17
 800462c:	10800044 	addi	r2,r2,1
 8004630:	41400015 	stw	r5,0(r8)
 8004634:	44400115 	stw	r17,4(r8)
 8004638:	d8c02015 	stw	r3,128(sp)
 800463c:	d8801f15 	stw	r2,124(sp)
 8004640:	010001c4 	movi	r4,7
 8004644:	20827e16 	blt	r4,r2,8005040 <___svfprintf_internal_r+0x1194>
 8004648:	42000204 	addi	r8,r8,8
 800464c:	e080010c 	andi	r2,fp,4
 8004650:	10003226 	beq	r2,zero,800471c <___svfprintf_internal_r+0x870>
 8004654:	d8802e17 	ldw	r2,184(sp)
 8004658:	d9002a17 	ldw	r4,168(sp)
 800465c:	1121c83a 	sub	r16,r2,r4
 8004660:	04002e0e 	bge	zero,r16,800471c <___svfprintf_internal_r+0x870>
 8004664:	04400404 	movi	r17,16
 8004668:	d8801f17 	ldw	r2,124(sp)
 800466c:	8c05550e 	bge	r17,r16,8005bc4 <___svfprintf_internal_r+0x1d18>
 8004670:	01020074 	movhi	r4,2049
 8004674:	211b4384 	addi	r4,r4,27918
 8004678:	d9003615 	stw	r4,216(sp)
 800467c:	048001c4 	movi	r18,7
 8004680:	dcc02f17 	ldw	r19,188(sp)
 8004684:	00000306 	br	8004694 <___svfprintf_internal_r+0x7e8>
 8004688:	843ffc04 	addi	r16,r16,-16
 800468c:	42000204 	addi	r8,r8,8
 8004690:	8c00130e 	bge	r17,r16,80046e0 <___svfprintf_internal_r+0x834>
 8004694:	01420074 	movhi	r5,2049
 8004698:	18c00404 	addi	r3,r3,16
 800469c:	10800044 	addi	r2,r2,1
 80046a0:	295b4384 	addi	r5,r5,27918
 80046a4:	41400015 	stw	r5,0(r8)
 80046a8:	44400115 	stw	r17,4(r8)
 80046ac:	d8c02015 	stw	r3,128(sp)
 80046b0:	d8801f15 	stw	r2,124(sp)
 80046b4:	90bff40e 	bge	r18,r2,8004688 <__alt_data_end+0xfc004688>
 80046b8:	9809883a 	mov	r4,r19
 80046bc:	b00b883a 	mov	r5,r22
 80046c0:	b80d883a 	mov	r6,r23
 80046c4:	800c89c0 	call	800c89c <__ssprint_r>
 80046c8:	103ec11e 	bne	r2,zero,80041d0 <__alt_data_end+0xfc0041d0>
 80046cc:	843ffc04 	addi	r16,r16,-16
 80046d0:	d8c02017 	ldw	r3,128(sp)
 80046d4:	d8801f17 	ldw	r2,124(sp)
 80046d8:	da000404 	addi	r8,sp,16
 80046dc:	8c3fed16 	blt	r17,r16,8004694 <__alt_data_end+0xfc004694>
 80046e0:	d9003617 	ldw	r4,216(sp)
 80046e4:	1c07883a 	add	r3,r3,r16
 80046e8:	10800044 	addi	r2,r2,1
 80046ec:	41000015 	stw	r4,0(r8)
 80046f0:	44000115 	stw	r16,4(r8)
 80046f4:	d8c02015 	stw	r3,128(sp)
 80046f8:	d8801f15 	stw	r2,124(sp)
 80046fc:	010001c4 	movi	r4,7
 8004700:	2080060e 	bge	r4,r2,800471c <___svfprintf_internal_r+0x870>
 8004704:	d9002f17 	ldw	r4,188(sp)
 8004708:	b00b883a 	mov	r5,r22
 800470c:	b80d883a 	mov	r6,r23
 8004710:	800c89c0 	call	800c89c <__ssprint_r>
 8004714:	103eae1e 	bne	r2,zero,80041d0 <__alt_data_end+0xfc0041d0>
 8004718:	d8c02017 	ldw	r3,128(sp)
 800471c:	df002a17 	ldw	fp,168(sp)
 8004720:	d9402e17 	ldw	r5,184(sp)
 8004724:	e140010e 	bge	fp,r5,800472c <___svfprintf_internal_r+0x880>
 8004728:	2839883a 	mov	fp,r5
 800472c:	d8803017 	ldw	r2,192(sp)
 8004730:	1705883a 	add	r2,r2,fp
 8004734:	d8803015 	stw	r2,192(sp)
 8004738:	1802491e 	bne	r3,zero,8005060 <___svfprintf_internal_r+0x11b4>
 800473c:	d8c02917 	ldw	r3,164(sp)
 8004740:	d8001f15 	stw	zero,124(sp)
 8004744:	da000404 	addi	r8,sp,16
 8004748:	18800007 	ldb	r2,0(r3)
 800474c:	103e061e 	bne	r2,zero,8003f68 <__alt_data_end+0xfc003f68>
 8004750:	dc002917 	ldw	r16,164(sp)
 8004754:	003e1e06 	br	8003fd0 <__alt_data_end+0xfc003fd0>
 8004758:	d9002d17 	ldw	r4,180(sp)
 800475c:	d9402d17 	ldw	r5,180(sp)
 8004760:	da002917 	ldw	r8,164(sp)
 8004764:	21000017 	ldw	r4,0(r4)
 8004768:	29400117 	ldw	r5,4(r5)
 800476c:	df002915 	stw	fp,164(sp)
 8004770:	9839883a 	mov	fp,r19
 8004774:	dcc02a03 	ldbu	r19,168(sp)
 8004778:	d9003715 	stw	r4,220(sp)
 800477c:	d9403815 	stw	r5,224(sp)
 8004780:	da004015 	stw	r8,256(sp)
 8004784:	da403f15 	stw	r9,252(sp)
 8004788:	dcc02785 	stb	r19,158(sp)
 800478c:	800c6ec0 	call	800c6ec <__fpclassifyd>
 8004790:	d8c02d17 	ldw	r3,180(sp)
 8004794:	04400044 	movi	r17,1
 8004798:	da004017 	ldw	r8,256(sp)
 800479c:	1c800204 	addi	r18,r3,8
 80047a0:	da403f17 	ldw	r9,252(sp)
 80047a4:	d9003717 	ldw	r4,220(sp)
 80047a8:	d9403817 	ldw	r5,224(sp)
 80047ac:	14433e1e 	bne	r2,r17,80054a8 <___svfprintf_internal_r+0x15fc>
 80047b0:	000d883a 	mov	r6,zero
 80047b4:	000f883a 	mov	r7,zero
 80047b8:	8011be40 	call	8011be4 <__ledf2>
 80047bc:	da004017 	ldw	r8,256(sp)
 80047c0:	10050c16 	blt	r2,zero,8005bf4 <___svfprintf_internal_r+0x1d48>
 80047c4:	dcc02783 	ldbu	r19,158(sp)
 80047c8:	008011c4 	movi	r2,71
 80047cc:	1404410e 	bge	r2,r16,80058d4 <___svfprintf_internal_r+0x1a28>
 80047d0:	01420074 	movhi	r5,2049
 80047d4:	295b3004 	addi	r5,r5,27840
 80047d8:	d9403115 	stw	r5,196(sp)
 80047dc:	00c000c4 	movi	r3,3
 80047e0:	00bfdfc4 	movi	r2,-129
 80047e4:	d8c02a15 	stw	r3,168(sp)
 80047e8:	e0b8703a 	and	fp,fp,r2
 80047ec:	dc802d15 	stw	r18,180(sp)
 80047f0:	1823883a 	mov	r17,r3
 80047f4:	d8003215 	stw	zero,200(sp)
 80047f8:	d8003415 	stw	zero,208(sp)
 80047fc:	003eee06 	br	80043b8 <__alt_data_end+0xfc0043b8>
 8004800:	9cc00214 	ori	r19,r19,8
 8004804:	e005883a 	mov	r2,fp
 8004808:	e4000007 	ldb	r16,0(fp)
 800480c:	003dfe06 	br	8004008 <__alt_data_end+0xfc004008>
 8004810:	da002917 	ldw	r8,164(sp)
 8004814:	df002915 	stw	fp,164(sp)
 8004818:	9f000414 	ori	fp,r19,16
 800481c:	e080080c 	andi	r2,fp,32
 8004820:	1000f226 	beq	r2,zero,8004bec <___svfprintf_internal_r+0xd40>
 8004824:	d9402d17 	ldw	r5,180(sp)
 8004828:	0005883a 	mov	r2,zero
 800482c:	2c800017 	ldw	r18,0(r5)
 8004830:	2d400117 	ldw	r21,4(r5)
 8004834:	29400204 	addi	r5,r5,8
 8004838:	d9402d15 	stw	r5,180(sp)
 800483c:	9546b03a 	or	r3,r18,r21
 8004840:	d8002785 	stb	zero,158(sp)
 8004844:	da403215 	stw	r9,200(sp)
 8004848:	0027883a 	mov	r19,zero
 800484c:	003eb306 	br	800431c <__alt_data_end+0xfc00431c>
 8004850:	da002917 	ldw	r8,164(sp)
 8004854:	df002915 	stw	fp,164(sp)
 8004858:	9f000414 	ori	fp,r19,16
 800485c:	e080080c 	andi	r2,fp,32
 8004860:	1000d326 	beq	r2,zero,8004bb0 <___svfprintf_internal_r+0xd04>
 8004864:	d9002d17 	ldw	r4,180(sp)
 8004868:	00800044 	movi	r2,1
 800486c:	24800017 	ldw	r18,0(r4)
 8004870:	25400117 	ldw	r21,4(r4)
 8004874:	21000204 	addi	r4,r4,8
 8004878:	d9002d15 	stw	r4,180(sp)
 800487c:	9546b03a 	or	r3,r18,r21
 8004880:	003fef06 	br	8004840 <__alt_data_end+0xfc004840>
 8004884:	d9402d17 	ldw	r5,180(sp)
 8004888:	00800c04 	movi	r2,48
 800488c:	d8802705 	stb	r2,156(sp)
 8004890:	2c800017 	ldw	r18,0(r5)
 8004894:	00801e04 	movi	r2,120
 8004898:	d8802745 	stb	r2,157(sp)
 800489c:	00820074 	movhi	r2,2049
 80048a0:	109b3804 	addi	r2,r2,27872
 80048a4:	29400104 	addi	r5,r5,4
 80048a8:	da002917 	ldw	r8,164(sp)
 80048ac:	d8803b15 	stw	r2,236(sp)
 80048b0:	df002915 	stw	fp,164(sp)
 80048b4:	002b883a 	mov	r21,zero
 80048b8:	9f000094 	ori	fp,r19,2
 80048bc:	d9402d15 	stw	r5,180(sp)
 80048c0:	00800084 	movi	r2,2
 80048c4:	04001e04 	movi	r16,120
 80048c8:	9007883a 	mov	r3,r18
 80048cc:	003fdc06 	br	8004840 <__alt_data_end+0xfc004840>
 80048d0:	da002917 	ldw	r8,164(sp)
 80048d4:	df002915 	stw	fp,164(sp)
 80048d8:	9839883a 	mov	fp,r19
 80048dc:	dcc02a03 	ldbu	r19,168(sp)
 80048e0:	e080080c 	andi	r2,fp,32
 80048e4:	d8c02d17 	ldw	r3,180(sp)
 80048e8:	dcc02785 	stb	r19,158(sp)
 80048ec:	103e801e 	bne	r2,zero,80042f0 <__alt_data_end+0xfc0042f0>
 80048f0:	e080040c 	andi	r2,fp,16
 80048f4:	10031f26 	beq	r2,zero,8005574 <___svfprintf_internal_r+0x16c8>
 80048f8:	1c800017 	ldw	r18,0(r3)
 80048fc:	d9402d17 	ldw	r5,180(sp)
 8004900:	902bd7fa 	srai	r21,r18,31
 8004904:	29400104 	addi	r5,r5,4
 8004908:	d9402d15 	stw	r5,180(sp)
 800490c:	a805883a 	mov	r2,r21
 8004910:	103e7e0e 	bge	r2,zero,800430c <__alt_data_end+0xfc00430c>
 8004914:	04a5c83a 	sub	r18,zero,r18
 8004918:	9004c03a 	cmpne	r2,r18,zero
 800491c:	056bc83a 	sub	r21,zero,r21
 8004920:	a8abc83a 	sub	r21,r21,r2
 8004924:	04c00b44 	movi	r19,45
 8004928:	dcc02785 	stb	r19,158(sp)
 800492c:	da403215 	stw	r9,200(sp)
 8004930:	00800044 	movi	r2,1
 8004934:	9546b03a 	or	r3,r18,r21
 8004938:	003e7806 	br	800431c <__alt_data_end+0xfc00431c>
 800493c:	9cc01014 	ori	r19,r19,64
 8004940:	e005883a 	mov	r2,fp
 8004944:	e4000007 	ldb	r16,0(fp)
 8004948:	003daf06 	br	8004008 <__alt_data_end+0xfc004008>
 800494c:	e4000007 	ldb	r16,0(fp)
 8004950:	00801b04 	movi	r2,108
 8004954:	80837726 	beq	r16,r2,8005734 <___svfprintf_internal_r+0x1888>
 8004958:	9cc00414 	ori	r19,r19,16
 800495c:	e005883a 	mov	r2,fp
 8004960:	003da906 	br	8004008 <__alt_data_end+0xfc004008>
 8004964:	da002917 	ldw	r8,164(sp)
 8004968:	df002915 	stw	fp,164(sp)
 800496c:	9839883a 	mov	fp,r19
 8004970:	dcc02a03 	ldbu	r19,168(sp)
 8004974:	e080080c 	andi	r2,fp,32
 8004978:	dcc02785 	stb	r19,158(sp)
 800497c:	1002f126 	beq	r2,zero,8005544 <___svfprintf_internal_r+0x1698>
 8004980:	d9402d17 	ldw	r5,180(sp)
 8004984:	d9003017 	ldw	r4,192(sp)
 8004988:	28800017 	ldw	r2,0(r5)
 800498c:	2007d7fa 	srai	r3,r4,31
 8004990:	29400104 	addi	r5,r5,4
 8004994:	d9402d15 	stw	r5,180(sp)
 8004998:	11000015 	stw	r4,0(r2)
 800499c:	10c00115 	stw	r3,4(r2)
 80049a0:	003d6e06 	br	8003f5c <__alt_data_end+0xfc003f5c>
 80049a4:	da002917 	ldw	r8,164(sp)
 80049a8:	df002915 	stw	fp,164(sp)
 80049ac:	9839883a 	mov	fp,r19
 80049b0:	dcc02a03 	ldbu	r19,168(sp)
 80049b4:	01420074 	movhi	r5,2049
 80049b8:	295b3304 	addi	r5,r5,27852
 80049bc:	dcc02785 	stb	r19,158(sp)
 80049c0:	d9403b15 	stw	r5,236(sp)
 80049c4:	e0c0080c 	andi	r3,fp,32
 80049c8:	d8802d17 	ldw	r2,180(sp)
 80049cc:	18005826 	beq	r3,zero,8004b30 <___svfprintf_internal_r+0xc84>
 80049d0:	d9402d17 	ldw	r5,180(sp)
 80049d4:	14800017 	ldw	r18,0(r2)
 80049d8:	15400117 	ldw	r21,4(r2)
 80049dc:	29400204 	addi	r5,r5,8
 80049e0:	d9402d15 	stw	r5,180(sp)
 80049e4:	e080004c 	andi	r2,fp,1
 80049e8:	10020626 	beq	r2,zero,8005204 <___svfprintf_internal_r+0x1358>
 80049ec:	9546b03a 	or	r3,r18,r21
 80049f0:	1802f326 	beq	r3,zero,80055c0 <___svfprintf_internal_r+0x1714>
 80049f4:	00800c04 	movi	r2,48
 80049f8:	d8802705 	stb	r2,156(sp)
 80049fc:	dc002745 	stb	r16,157(sp)
 8004a00:	e7000094 	ori	fp,fp,2
 8004a04:	00800084 	movi	r2,2
 8004a08:	003f8d06 	br	8004840 <__alt_data_end+0xfc004840>
 8004a0c:	d8c02d17 	ldw	r3,180(sp)
 8004a10:	d9002d17 	ldw	r4,180(sp)
 8004a14:	da002917 	ldw	r8,164(sp)
 8004a18:	18800017 	ldw	r2,0(r3)
 8004a1c:	21000104 	addi	r4,r4,4
 8004a20:	00c00044 	movi	r3,1
 8004a24:	df002915 	stw	fp,164(sp)
 8004a28:	d8c02a15 	stw	r3,168(sp)
 8004a2c:	9839883a 	mov	fp,r19
 8004a30:	d8002785 	stb	zero,158(sp)
 8004a34:	d8801405 	stb	r2,80(sp)
 8004a38:	d9002d15 	stw	r4,180(sp)
 8004a3c:	1823883a 	mov	r17,r3
 8004a40:	d8c01404 	addi	r3,sp,80
 8004a44:	d8003215 	stw	zero,200(sp)
 8004a48:	d8003415 	stw	zero,208(sp)
 8004a4c:	d8c03115 	stw	r3,196(sp)
 8004a50:	0005883a 	mov	r2,zero
 8004a54:	003e5f06 	br	80043d4 <__alt_data_end+0xfc0043d4>
 8004a58:	d8802a07 	ldb	r2,168(sp)
 8004a5c:	1002c21e 	bne	r2,zero,8005568 <___svfprintf_internal_r+0x16bc>
 8004a60:	00c00804 	movi	r3,32
 8004a64:	d8c02a05 	stb	r3,168(sp)
 8004a68:	e005883a 	mov	r2,fp
 8004a6c:	e4000007 	ldb	r16,0(fp)
 8004a70:	003d6506 	br	8004008 <__alt_data_end+0xfc004008>
 8004a74:	9cc00054 	ori	r19,r19,1
 8004a78:	e005883a 	mov	r2,fp
 8004a7c:	e4000007 	ldb	r16,0(fp)
 8004a80:	003d6106 	br	8004008 <__alt_data_end+0xfc004008>
 8004a84:	d8c02d17 	ldw	r3,180(sp)
 8004a88:	d9002d17 	ldw	r4,180(sp)
 8004a8c:	da002917 	ldw	r8,164(sp)
 8004a90:	18c00017 	ldw	r3,0(r3)
 8004a94:	df002915 	stw	fp,164(sp)
 8004a98:	d8002785 	stb	zero,158(sp)
 8004a9c:	d8c03115 	stw	r3,196(sp)
 8004aa0:	9839883a 	mov	fp,r19
 8004aa4:	24800104 	addi	r18,r4,4
 8004aa8:	18043526 	beq	r3,zero,8005b80 <___svfprintf_internal_r+0x1cd4>
 8004aac:	d9003117 	ldw	r4,196(sp)
 8004ab0:	4803e016 	blt	r9,zero,8005a34 <___svfprintf_internal_r+0x1b88>
 8004ab4:	480d883a 	mov	r6,r9
 8004ab8:	000b883a 	mov	r5,zero
 8004abc:	da004015 	stw	r8,256(sp)
 8004ac0:	da403f15 	stw	r9,252(sp)
 8004ac4:	800ad880 	call	800ad88 <memchr>
 8004ac8:	da004017 	ldw	r8,256(sp)
 8004acc:	da403f17 	ldw	r9,252(sp)
 8004ad0:	10045f26 	beq	r2,zero,8005c50 <___svfprintf_internal_r+0x1da4>
 8004ad4:	d8c03117 	ldw	r3,196(sp)
 8004ad8:	10e3c83a 	sub	r17,r2,r3
 8004adc:	4c40010e 	bge	r9,r17,8004ae4 <___svfprintf_internal_r+0xc38>
 8004ae0:	4823883a 	mov	r17,r9
 8004ae4:	8805883a 	mov	r2,r17
 8004ae8:	8803d716 	blt	r17,zero,8005a48 <___svfprintf_internal_r+0x1b9c>
 8004aec:	dcc02783 	ldbu	r19,158(sp)
 8004af0:	d8802a15 	stw	r2,168(sp)
 8004af4:	dc802d15 	stw	r18,180(sp)
 8004af8:	d8003215 	stw	zero,200(sp)
 8004afc:	d8003415 	stw	zero,208(sp)
 8004b00:	003e2d06 	br	80043b8 <__alt_data_end+0xfc0043b8>
 8004b04:	da002917 	ldw	r8,164(sp)
 8004b08:	df002915 	stw	fp,164(sp)
 8004b0c:	9839883a 	mov	fp,r19
 8004b10:	dcc02a03 	ldbu	r19,168(sp)
 8004b14:	01020074 	movhi	r4,2049
 8004b18:	211b3804 	addi	r4,r4,27872
 8004b1c:	d9003b15 	stw	r4,236(sp)
 8004b20:	dcc02785 	stb	r19,158(sp)
 8004b24:	e0c0080c 	andi	r3,fp,32
 8004b28:	d8802d17 	ldw	r2,180(sp)
 8004b2c:	183fa81e 	bne	r3,zero,80049d0 <__alt_data_end+0xfc0049d0>
 8004b30:	e0c0040c 	andi	r3,fp,16
 8004b34:	18027126 	beq	r3,zero,80054fc <___svfprintf_internal_r+0x1650>
 8004b38:	d8c02d17 	ldw	r3,180(sp)
 8004b3c:	14800017 	ldw	r18,0(r2)
 8004b40:	002b883a 	mov	r21,zero
 8004b44:	18c00104 	addi	r3,r3,4
 8004b48:	d8c02d15 	stw	r3,180(sp)
 8004b4c:	003fa506 	br	80049e4 <__alt_data_end+0xfc0049e4>
 8004b50:	9cc00814 	ori	r19,r19,32
 8004b54:	e005883a 	mov	r2,fp
 8004b58:	e4000007 	ldb	r16,0(fp)
 8004b5c:	003d2a06 	br	8004008 <__alt_data_end+0xfc004008>
 8004b60:	d9002d17 	ldw	r4,180(sp)
 8004b64:	d9402d17 	ldw	r5,180(sp)
 8004b68:	21000017 	ldw	r4,0(r4)
 8004b6c:	28c00104 	addi	r3,r5,4
 8004b70:	d9002e15 	stw	r4,184(sp)
 8004b74:	2002e916 	blt	r4,zero,800571c <___svfprintf_internal_r+0x1870>
 8004b78:	d8c02d15 	stw	r3,180(sp)
 8004b7c:	e005883a 	mov	r2,fp
 8004b80:	e4000007 	ldb	r16,0(fp)
 8004b84:	003d2006 	br	8004008 <__alt_data_end+0xfc004008>
 8004b88:	00c00ac4 	movi	r3,43
 8004b8c:	d8c02a05 	stb	r3,168(sp)
 8004b90:	e005883a 	mov	r2,fp
 8004b94:	e4000007 	ldb	r16,0(fp)
 8004b98:	003d1b06 	br	8004008 <__alt_data_end+0xfc004008>
 8004b9c:	da002917 	ldw	r8,164(sp)
 8004ba0:	df002915 	stw	fp,164(sp)
 8004ba4:	9839883a 	mov	fp,r19
 8004ba8:	e080080c 	andi	r2,fp,32
 8004bac:	103f2d1e 	bne	r2,zero,8004864 <__alt_data_end+0xfc004864>
 8004bb0:	e080040c 	andi	r2,fp,16
 8004bb4:	10027826 	beq	r2,zero,8005598 <___svfprintf_internal_r+0x16ec>
 8004bb8:	d9402d17 	ldw	r5,180(sp)
 8004bbc:	002b883a 	mov	r21,zero
 8004bc0:	00800044 	movi	r2,1
 8004bc4:	2c800017 	ldw	r18,0(r5)
 8004bc8:	29400104 	addi	r5,r5,4
 8004bcc:	d9402d15 	stw	r5,180(sp)
 8004bd0:	9007883a 	mov	r3,r18
 8004bd4:	003f1a06 	br	8004840 <__alt_data_end+0xfc004840>
 8004bd8:	da002917 	ldw	r8,164(sp)
 8004bdc:	df002915 	stw	fp,164(sp)
 8004be0:	9839883a 	mov	fp,r19
 8004be4:	e080080c 	andi	r2,fp,32
 8004be8:	103f0e1e 	bne	r2,zero,8004824 <__alt_data_end+0xfc004824>
 8004bec:	e080040c 	andi	r2,fp,16
 8004bf0:	10024a26 	beq	r2,zero,800551c <___svfprintf_internal_r+0x1670>
 8004bf4:	d8802d17 	ldw	r2,180(sp)
 8004bf8:	002b883a 	mov	r21,zero
 8004bfc:	14800017 	ldw	r18,0(r2)
 8004c00:	10800104 	addi	r2,r2,4
 8004c04:	d8802d15 	stw	r2,180(sp)
 8004c08:	9007883a 	mov	r3,r18
 8004c0c:	0005883a 	mov	r2,zero
 8004c10:	003f0b06 	br	8004840 <__alt_data_end+0xfc004840>
 8004c14:	da002917 	ldw	r8,164(sp)
 8004c18:	df002915 	stw	fp,164(sp)
 8004c1c:	9839883a 	mov	fp,r19
 8004c20:	dcc02a03 	ldbu	r19,168(sp)
 8004c24:	dcc02785 	stb	r19,158(sp)
 8004c28:	803d6326 	beq	r16,zero,80041b8 <__alt_data_end+0xfc0041b8>
 8004c2c:	00c00044 	movi	r3,1
 8004c30:	d8c02a15 	stw	r3,168(sp)
 8004c34:	dc001405 	stb	r16,80(sp)
 8004c38:	d8002785 	stb	zero,158(sp)
 8004c3c:	003f7f06 	br	8004a3c <__alt_data_end+0xfc004a3c>
 8004c40:	d8c02017 	ldw	r3,128(sp)
 8004c44:	003e2406 	br	80044d8 <__alt_data_end+0xfc0044d8>
 8004c48:	10803fcc 	andi	r2,r2,255
 8004c4c:	00c00044 	movi	r3,1
 8004c50:	10fdba1e 	bne	r2,r3,800433c <__alt_data_end+0xfc00433c>
 8004c54:	a800021e 	bne	r21,zero,8004c60 <___svfprintf_internal_r+0xdb4>
 8004c58:	00800244 	movi	r2,9
 8004c5c:	14801d2e 	bgeu	r2,r18,8004cd4 <___svfprintf_internal_r+0xe28>
 8004c60:	dc002a15 	stw	r16,168(sp)
 8004c64:	b823883a 	mov	r17,r23
 8004c68:	9021883a 	mov	r16,r18
 8004c6c:	da002b15 	stw	r8,172(sp)
 8004c70:	a825883a 	mov	r18,r21
 8004c74:	482b883a 	mov	r21,r9
 8004c78:	8009883a 	mov	r4,r16
 8004c7c:	900b883a 	mov	r5,r18
 8004c80:	01800284 	movi	r6,10
 8004c84:	000f883a 	mov	r7,zero
 8004c88:	801011c0 	call	801011c <__umoddi3>
 8004c8c:	10800c04 	addi	r2,r2,48
 8004c90:	8c7fffc4 	addi	r17,r17,-1
 8004c94:	8009883a 	mov	r4,r16
 8004c98:	900b883a 	mov	r5,r18
 8004c9c:	01800284 	movi	r6,10
 8004ca0:	000f883a 	mov	r7,zero
 8004ca4:	88800005 	stb	r2,0(r17)
 8004ca8:	800fadc0 	call	800fadc <__udivdi3>
 8004cac:	1021883a 	mov	r16,r2
 8004cb0:	10c4b03a 	or	r2,r2,r3
 8004cb4:	1825883a 	mov	r18,r3
 8004cb8:	103fef1e 	bne	r2,zero,8004c78 <__alt_data_end+0xfc004c78>
 8004cbc:	dc403115 	stw	r17,196(sp)
 8004cc0:	dc002a17 	ldw	r16,168(sp)
 8004cc4:	da002b17 	ldw	r8,172(sp)
 8004cc8:	a813883a 	mov	r9,r21
 8004ccc:	bc63c83a 	sub	r17,r23,r17
 8004cd0:	003db406 	br	80043a4 <__alt_data_end+0xfc0043a4>
 8004cd4:	94800c04 	addi	r18,r18,48
 8004cd8:	d8c01dc4 	addi	r3,sp,119
 8004cdc:	dc801dc5 	stb	r18,119(sp)
 8004ce0:	dc403d17 	ldw	r17,244(sp)
 8004ce4:	d8c03115 	stw	r3,196(sp)
 8004ce8:	003dae06 	br	80043a4 <__alt_data_end+0xfc0043a4>
 8004cec:	00801944 	movi	r2,101
 8004cf0:	14008c0e 	bge	r2,r16,8004f24 <___svfprintf_internal_r+0x1078>
 8004cf4:	d9003717 	ldw	r4,220(sp)
 8004cf8:	d9403817 	ldw	r5,224(sp)
 8004cfc:	000d883a 	mov	r6,zero
 8004d00:	000f883a 	mov	r7,zero
 8004d04:	d8c03e15 	stw	r3,248(sp)
 8004d08:	da004015 	stw	r8,256(sp)
 8004d0c:	8011a800 	call	8011a80 <__eqdf2>
 8004d10:	d8c03e17 	ldw	r3,248(sp)
 8004d14:	da004017 	ldw	r8,256(sp)
 8004d18:	1000fc1e 	bne	r2,zero,800510c <___svfprintf_internal_r+0x1260>
 8004d1c:	d8801f17 	ldw	r2,124(sp)
 8004d20:	01020074 	movhi	r4,2049
 8004d24:	211b3f04 	addi	r4,r4,27900
 8004d28:	18c00044 	addi	r3,r3,1
 8004d2c:	10800044 	addi	r2,r2,1
 8004d30:	41000015 	stw	r4,0(r8)
 8004d34:	01000044 	movi	r4,1
 8004d38:	41000115 	stw	r4,4(r8)
 8004d3c:	d8c02015 	stw	r3,128(sp)
 8004d40:	d8801f15 	stw	r2,124(sp)
 8004d44:	010001c4 	movi	r4,7
 8004d48:	20823116 	blt	r4,r2,8005610 <___svfprintf_internal_r+0x1764>
 8004d4c:	42000204 	addi	r8,r8,8
 8004d50:	d8802617 	ldw	r2,152(sp)
 8004d54:	d9403317 	ldw	r5,204(sp)
 8004d58:	11400216 	blt	r2,r5,8004d64 <___svfprintf_internal_r+0xeb8>
 8004d5c:	e080004c 	andi	r2,fp,1
 8004d60:	103e3a26 	beq	r2,zero,800464c <__alt_data_end+0xfc00464c>
 8004d64:	d8803917 	ldw	r2,228(sp)
 8004d68:	d9003517 	ldw	r4,212(sp)
 8004d6c:	d9403917 	ldw	r5,228(sp)
 8004d70:	1887883a 	add	r3,r3,r2
 8004d74:	d8801f17 	ldw	r2,124(sp)
 8004d78:	41000015 	stw	r4,0(r8)
 8004d7c:	41400115 	stw	r5,4(r8)
 8004d80:	10800044 	addi	r2,r2,1
 8004d84:	d8c02015 	stw	r3,128(sp)
 8004d88:	d8801f15 	stw	r2,124(sp)
 8004d8c:	010001c4 	movi	r4,7
 8004d90:	20826c16 	blt	r4,r2,8005744 <___svfprintf_internal_r+0x1898>
 8004d94:	42000204 	addi	r8,r8,8
 8004d98:	d8803317 	ldw	r2,204(sp)
 8004d9c:	143fffc4 	addi	r16,r2,-1
 8004da0:	043e2a0e 	bge	zero,r16,800464c <__alt_data_end+0xfc00464c>
 8004da4:	04400404 	movi	r17,16
 8004da8:	d8801f17 	ldw	r2,124(sp)
 8004dac:	8c00980e 	bge	r17,r16,8005010 <___svfprintf_internal_r+0x1164>
 8004db0:	01420074 	movhi	r5,2049
 8004db4:	295b3f84 	addi	r5,r5,27902
 8004db8:	d9402b15 	stw	r5,172(sp)
 8004dbc:	04c001c4 	movi	r19,7
 8004dc0:	dc802f17 	ldw	r18,188(sp)
 8004dc4:	00000306 	br	8004dd4 <___svfprintf_internal_r+0xf28>
 8004dc8:	42000204 	addi	r8,r8,8
 8004dcc:	843ffc04 	addi	r16,r16,-16
 8004dd0:	8c00920e 	bge	r17,r16,800501c <___svfprintf_internal_r+0x1170>
 8004dd4:	18c00404 	addi	r3,r3,16
 8004dd8:	10800044 	addi	r2,r2,1
 8004ddc:	45000015 	stw	r20,0(r8)
 8004de0:	44400115 	stw	r17,4(r8)
 8004de4:	d8c02015 	stw	r3,128(sp)
 8004de8:	d8801f15 	stw	r2,124(sp)
 8004dec:	98bff60e 	bge	r19,r2,8004dc8 <__alt_data_end+0xfc004dc8>
 8004df0:	9009883a 	mov	r4,r18
 8004df4:	b00b883a 	mov	r5,r22
 8004df8:	b80d883a 	mov	r6,r23
 8004dfc:	800c89c0 	call	800c89c <__ssprint_r>
 8004e00:	103cf31e 	bne	r2,zero,80041d0 <__alt_data_end+0xfc0041d0>
 8004e04:	d8c02017 	ldw	r3,128(sp)
 8004e08:	d8801f17 	ldw	r2,124(sp)
 8004e0c:	da000404 	addi	r8,sp,16
 8004e10:	003fee06 	br	8004dcc <__alt_data_end+0xfc004dcc>
 8004e14:	d9402e17 	ldw	r5,184(sp)
 8004e18:	d8802a17 	ldw	r2,168(sp)
 8004e1c:	28a7c83a 	sub	r19,r5,r2
 8004e20:	04fdcb0e 	bge	zero,r19,8004550 <__alt_data_end+0xfc004550>
 8004e24:	05400404 	movi	r21,16
 8004e28:	d8801f17 	ldw	r2,124(sp)
 8004e2c:	acc3840e 	bge	r21,r19,8005c40 <___svfprintf_internal_r+0x1d94>
 8004e30:	01420074 	movhi	r5,2049
 8004e34:	9809883a 	mov	r4,r19
 8004e38:	295b3f84 	addi	r5,r5,27902
 8004e3c:	dc002c15 	stw	r16,176(sp)
 8004e40:	8827883a 	mov	r19,r17
 8004e44:	d9402b15 	stw	r5,172(sp)
 8004e48:	048001c4 	movi	r18,7
 8004e4c:	dc002f17 	ldw	r16,188(sp)
 8004e50:	2023883a 	mov	r17,r4
 8004e54:	00000306 	br	8004e64 <___svfprintf_internal_r+0xfb8>
 8004e58:	8c7ffc04 	addi	r17,r17,-16
 8004e5c:	42000204 	addi	r8,r8,8
 8004e60:	ac40110e 	bge	r21,r17,8004ea8 <___svfprintf_internal_r+0xffc>
 8004e64:	18c00404 	addi	r3,r3,16
 8004e68:	10800044 	addi	r2,r2,1
 8004e6c:	45000015 	stw	r20,0(r8)
 8004e70:	45400115 	stw	r21,4(r8)
 8004e74:	d8c02015 	stw	r3,128(sp)
 8004e78:	d8801f15 	stw	r2,124(sp)
 8004e7c:	90bff60e 	bge	r18,r2,8004e58 <__alt_data_end+0xfc004e58>
 8004e80:	8009883a 	mov	r4,r16
 8004e84:	b00b883a 	mov	r5,r22
 8004e88:	b80d883a 	mov	r6,r23
 8004e8c:	800c89c0 	call	800c89c <__ssprint_r>
 8004e90:	103ccf1e 	bne	r2,zero,80041d0 <__alt_data_end+0xfc0041d0>
 8004e94:	8c7ffc04 	addi	r17,r17,-16
 8004e98:	d8c02017 	ldw	r3,128(sp)
 8004e9c:	d8801f17 	ldw	r2,124(sp)
 8004ea0:	da000404 	addi	r8,sp,16
 8004ea4:	ac7fef16 	blt	r21,r17,8004e64 <__alt_data_end+0xfc004e64>
 8004ea8:	dc002c17 	ldw	r16,176(sp)
 8004eac:	8809883a 	mov	r4,r17
 8004eb0:	9823883a 	mov	r17,r19
 8004eb4:	2027883a 	mov	r19,r4
 8004eb8:	d9002b17 	ldw	r4,172(sp)
 8004ebc:	1cc7883a 	add	r3,r3,r19
 8004ec0:	10800044 	addi	r2,r2,1
 8004ec4:	41000015 	stw	r4,0(r8)
 8004ec8:	44c00115 	stw	r19,4(r8)
 8004ecc:	d8c02015 	stw	r3,128(sp)
 8004ed0:	d8801f15 	stw	r2,124(sp)
 8004ed4:	010001c4 	movi	r4,7
 8004ed8:	20816b16 	blt	r4,r2,8005488 <___svfprintf_internal_r+0x15dc>
 8004edc:	42000204 	addi	r8,r8,8
 8004ee0:	003d9b06 	br	8004550 <__alt_data_end+0xfc004550>
 8004ee4:	d9403b17 	ldw	r5,236(sp)
 8004ee8:	b807883a 	mov	r3,r23
 8004eec:	908003cc 	andi	r2,r18,15
 8004ef0:	a808973a 	slli	r4,r21,28
 8004ef4:	2885883a 	add	r2,r5,r2
 8004ef8:	9024d13a 	srli	r18,r18,4
 8004efc:	10800003 	ldbu	r2,0(r2)
 8004f00:	a82ad13a 	srli	r21,r21,4
 8004f04:	18ffffc4 	addi	r3,r3,-1
 8004f08:	24a4b03a 	or	r18,r4,r18
 8004f0c:	18800005 	stb	r2,0(r3)
 8004f10:	9544b03a 	or	r2,r18,r21
 8004f14:	103ff51e 	bne	r2,zero,8004eec <__alt_data_end+0xfc004eec>
 8004f18:	d8c03115 	stw	r3,196(sp)
 8004f1c:	b8e3c83a 	sub	r17,r23,r3
 8004f20:	003d2006 	br	80043a4 <__alt_data_end+0xfc0043a4>
 8004f24:	d9403317 	ldw	r5,204(sp)
 8004f28:	00800044 	movi	r2,1
 8004f2c:	18c00044 	addi	r3,r3,1
 8004f30:	1141360e 	bge	r2,r5,800540c <___svfprintf_internal_r+0x1560>
 8004f34:	dc001f17 	ldw	r16,124(sp)
 8004f38:	d8803117 	ldw	r2,196(sp)
 8004f3c:	d8c02015 	stw	r3,128(sp)
 8004f40:	84000044 	addi	r16,r16,1
 8004f44:	40800015 	stw	r2,0(r8)
 8004f48:	00800044 	movi	r2,1
 8004f4c:	40800115 	stw	r2,4(r8)
 8004f50:	dc001f15 	stw	r16,124(sp)
 8004f54:	008001c4 	movi	r2,7
 8004f58:	14013916 	blt	r2,r16,8005440 <___svfprintf_internal_r+0x1594>
 8004f5c:	42000204 	addi	r8,r8,8
 8004f60:	d9003917 	ldw	r4,228(sp)
 8004f64:	d9403517 	ldw	r5,212(sp)
 8004f68:	84000044 	addi	r16,r16,1
 8004f6c:	1907883a 	add	r3,r3,r4
 8004f70:	41400015 	stw	r5,0(r8)
 8004f74:	41000115 	stw	r4,4(r8)
 8004f78:	d8c02015 	stw	r3,128(sp)
 8004f7c:	dc001f15 	stw	r16,124(sp)
 8004f80:	008001c4 	movi	r2,7
 8004f84:	14013716 	blt	r2,r16,8005464 <___svfprintf_internal_r+0x15b8>
 8004f88:	44400204 	addi	r17,r8,8
 8004f8c:	d9003717 	ldw	r4,220(sp)
 8004f90:	d9403817 	ldw	r5,224(sp)
 8004f94:	000d883a 	mov	r6,zero
 8004f98:	000f883a 	mov	r7,zero
 8004f9c:	d8c03e15 	stw	r3,248(sp)
 8004fa0:	8011a800 	call	8011a80 <__eqdf2>
 8004fa4:	d8c03e17 	ldw	r3,248(sp)
 8004fa8:	10009926 	beq	r2,zero,8005210 <___svfprintf_internal_r+0x1364>
 8004fac:	d9003317 	ldw	r4,204(sp)
 8004fb0:	d9403117 	ldw	r5,196(sp)
 8004fb4:	84000044 	addi	r16,r16,1
 8004fb8:	20bfffc4 	addi	r2,r4,-1
 8004fbc:	1887883a 	add	r3,r3,r2
 8004fc0:	29000044 	addi	r4,r5,1
 8004fc4:	88800115 	stw	r2,4(r17)
 8004fc8:	89000015 	stw	r4,0(r17)
 8004fcc:	d8c02015 	stw	r3,128(sp)
 8004fd0:	dc001f15 	stw	r16,124(sp)
 8004fd4:	008001c4 	movi	r2,7
 8004fd8:	1400b716 	blt	r2,r16,80052b8 <___svfprintf_internal_r+0x140c>
 8004fdc:	8c400204 	addi	r17,r17,8
 8004fe0:	d9403a17 	ldw	r5,232(sp)
 8004fe4:	dcc022c4 	addi	r19,sp,139
 8004fe8:	84000044 	addi	r16,r16,1
 8004fec:	28c7883a 	add	r3,r5,r3
 8004ff0:	8cc00015 	stw	r19,0(r17)
 8004ff4:	89400115 	stw	r5,4(r17)
 8004ff8:	d8c02015 	stw	r3,128(sp)
 8004ffc:	dc001f15 	stw	r16,124(sp)
 8005000:	008001c4 	movi	r2,7
 8005004:	14000e16 	blt	r2,r16,8005040 <___svfprintf_internal_r+0x1194>
 8005008:	8a000204 	addi	r8,r17,8
 800500c:	003d8f06 	br	800464c <__alt_data_end+0xfc00464c>
 8005010:	01020074 	movhi	r4,2049
 8005014:	211b3f84 	addi	r4,r4,27902
 8005018:	d9002b15 	stw	r4,172(sp)
 800501c:	d9002b17 	ldw	r4,172(sp)
 8005020:	1c07883a 	add	r3,r3,r16
 8005024:	44000115 	stw	r16,4(r8)
 8005028:	41000015 	stw	r4,0(r8)
 800502c:	10800044 	addi	r2,r2,1
 8005030:	d8c02015 	stw	r3,128(sp)
 8005034:	d8801f15 	stw	r2,124(sp)
 8005038:	010001c4 	movi	r4,7
 800503c:	20bd820e 	bge	r4,r2,8004648 <__alt_data_end+0xfc004648>
 8005040:	d9002f17 	ldw	r4,188(sp)
 8005044:	b00b883a 	mov	r5,r22
 8005048:	b80d883a 	mov	r6,r23
 800504c:	800c89c0 	call	800c89c <__ssprint_r>
 8005050:	103c5f1e 	bne	r2,zero,80041d0 <__alt_data_end+0xfc0041d0>
 8005054:	d8c02017 	ldw	r3,128(sp)
 8005058:	da000404 	addi	r8,sp,16
 800505c:	003d7b06 	br	800464c <__alt_data_end+0xfc00464c>
 8005060:	d9002f17 	ldw	r4,188(sp)
 8005064:	b00b883a 	mov	r5,r22
 8005068:	b80d883a 	mov	r6,r23
 800506c:	800c89c0 	call	800c89c <__ssprint_r>
 8005070:	103db226 	beq	r2,zero,800473c <__alt_data_end+0xfc00473c>
 8005074:	003c5606 	br	80041d0 <__alt_data_end+0xfc0041d0>
 8005078:	10803fcc 	andi	r2,r2,255
 800507c:	1000201e 	bne	r2,zero,8005100 <___svfprintf_internal_r+0x1254>
 8005080:	e080004c 	andi	r2,fp,1
 8005084:	10001e26 	beq	r2,zero,8005100 <___svfprintf_internal_r+0x1254>
 8005088:	00800c04 	movi	r2,48
 800508c:	d8c01dc4 	addi	r3,sp,119
 8005090:	d8801dc5 	stb	r2,119(sp)
 8005094:	dc403d17 	ldw	r17,244(sp)
 8005098:	d8c03115 	stw	r3,196(sp)
 800509c:	003cc106 	br	80043a4 <__alt_data_end+0xfc0043a4>
 80050a0:	d9002f17 	ldw	r4,188(sp)
 80050a4:	b00b883a 	mov	r5,r22
 80050a8:	b80d883a 	mov	r6,r23
 80050ac:	800c89c0 	call	800c89c <__ssprint_r>
 80050b0:	103c471e 	bne	r2,zero,80041d0 <__alt_data_end+0xfc0041d0>
 80050b4:	d8c02017 	ldw	r3,128(sp)
 80050b8:	da000404 	addi	r8,sp,16
 80050bc:	003d5606 	br	8004618 <__alt_data_end+0xfc004618>
 80050c0:	d9002f17 	ldw	r4,188(sp)
 80050c4:	b00b883a 	mov	r5,r22
 80050c8:	b80d883a 	mov	r6,r23
 80050cc:	800c89c0 	call	800c89c <__ssprint_r>
 80050d0:	103c3f1e 	bne	r2,zero,80041d0 <__alt_data_end+0xfc0041d0>
 80050d4:	d8c02017 	ldw	r3,128(sp)
 80050d8:	da000404 	addi	r8,sp,16
 80050dc:	003d0b06 	br	800450c <__alt_data_end+0xfc00450c>
 80050e0:	d9002f17 	ldw	r4,188(sp)
 80050e4:	b00b883a 	mov	r5,r22
 80050e8:	b80d883a 	mov	r6,r23
 80050ec:	800c89c0 	call	800c89c <__ssprint_r>
 80050f0:	103c371e 	bne	r2,zero,80041d0 <__alt_data_end+0xfc0041d0>
 80050f4:	d8c02017 	ldw	r3,128(sp)
 80050f8:	da000404 	addi	r8,sp,16
 80050fc:	003d1106 	br	8004544 <__alt_data_end+0xfc004544>
 8005100:	0023883a 	mov	r17,zero
 8005104:	ddc03115 	stw	r23,196(sp)
 8005108:	003ca606 	br	80043a4 <__alt_data_end+0xfc0043a4>
 800510c:	dc002617 	ldw	r16,152(sp)
 8005110:	0401470e 	bge	zero,r16,8005630 <___svfprintf_internal_r+0x1784>
 8005114:	d8803317 	ldw	r2,204(sp)
 8005118:	d9403117 	ldw	r5,196(sp)
 800511c:	d9003417 	ldw	r4,208(sp)
 8005120:	1023883a 	mov	r17,r2
 8005124:	28a1883a 	add	r16,r5,r2
 8005128:	2080010e 	bge	r4,r2,8005130 <___svfprintf_internal_r+0x1284>
 800512c:	2023883a 	mov	r17,r4
 8005130:	04400b0e 	bge	zero,r17,8005160 <___svfprintf_internal_r+0x12b4>
 8005134:	d8801f17 	ldw	r2,124(sp)
 8005138:	d9403117 	ldw	r5,196(sp)
 800513c:	1c47883a 	add	r3,r3,r17
 8005140:	10800044 	addi	r2,r2,1
 8005144:	41400015 	stw	r5,0(r8)
 8005148:	44400115 	stw	r17,4(r8)
 800514c:	d8c02015 	stw	r3,128(sp)
 8005150:	d8801f15 	stw	r2,124(sp)
 8005154:	010001c4 	movi	r4,7
 8005158:	20825f16 	blt	r4,r2,8005ad8 <___svfprintf_internal_r+0x1c2c>
 800515c:	42000204 	addi	r8,r8,8
 8005160:	88025b16 	blt	r17,zero,8005ad0 <___svfprintf_internal_r+0x1c24>
 8005164:	d8803417 	ldw	r2,208(sp)
 8005168:	1463c83a 	sub	r17,r2,r17
 800516c:	0440620e 	bge	zero,r17,80052f8 <___svfprintf_internal_r+0x144c>
 8005170:	04c00404 	movi	r19,16
 8005174:	d8801f17 	ldw	r2,124(sp)
 8005178:	9c41130e 	bge	r19,r17,80055c8 <___svfprintf_internal_r+0x171c>
 800517c:	01420074 	movhi	r5,2049
 8005180:	295b3f84 	addi	r5,r5,27902
 8005184:	d9402b15 	stw	r5,172(sp)
 8005188:	054001c4 	movi	r21,7
 800518c:	dc802f17 	ldw	r18,188(sp)
 8005190:	00000306 	br	80051a0 <___svfprintf_internal_r+0x12f4>
 8005194:	42000204 	addi	r8,r8,8
 8005198:	8c7ffc04 	addi	r17,r17,-16
 800519c:	9c410d0e 	bge	r19,r17,80055d4 <___svfprintf_internal_r+0x1728>
 80051a0:	18c00404 	addi	r3,r3,16
 80051a4:	10800044 	addi	r2,r2,1
 80051a8:	45000015 	stw	r20,0(r8)
 80051ac:	44c00115 	stw	r19,4(r8)
 80051b0:	d8c02015 	stw	r3,128(sp)
 80051b4:	d8801f15 	stw	r2,124(sp)
 80051b8:	a8bff60e 	bge	r21,r2,8005194 <__alt_data_end+0xfc005194>
 80051bc:	9009883a 	mov	r4,r18
 80051c0:	b00b883a 	mov	r5,r22
 80051c4:	b80d883a 	mov	r6,r23
 80051c8:	800c89c0 	call	800c89c <__ssprint_r>
 80051cc:	103c001e 	bne	r2,zero,80041d0 <__alt_data_end+0xfc0041d0>
 80051d0:	d8c02017 	ldw	r3,128(sp)
 80051d4:	d8801f17 	ldw	r2,124(sp)
 80051d8:	da000404 	addi	r8,sp,16
 80051dc:	003fee06 	br	8005198 <__alt_data_end+0xfc005198>
 80051e0:	d9002f17 	ldw	r4,188(sp)
 80051e4:	b00b883a 	mov	r5,r22
 80051e8:	b80d883a 	mov	r6,r23
 80051ec:	800c89c0 	call	800c89c <__ssprint_r>
 80051f0:	103bf71e 	bne	r2,zero,80041d0 <__alt_data_end+0xfc0041d0>
 80051f4:	d8c02017 	ldw	r3,128(sp)
 80051f8:	d8802787 	ldb	r2,158(sp)
 80051fc:	da000404 	addi	r8,sp,16
 8005200:	003cb506 	br	80044d8 <__alt_data_end+0xfc0044d8>
 8005204:	00800084 	movi	r2,2
 8005208:	9546b03a 	or	r3,r18,r21
 800520c:	003d8c06 	br	8004840 <__alt_data_end+0xfc004840>
 8005210:	d8803317 	ldw	r2,204(sp)
 8005214:	14ffffc4 	addi	r19,r2,-1
 8005218:	04ff710e 	bge	zero,r19,8004fe0 <__alt_data_end+0xfc004fe0>
 800521c:	05400404 	movi	r21,16
 8005220:	acc2f80e 	bge	r21,r19,8005e04 <___svfprintf_internal_r+0x1f58>
 8005224:	01420074 	movhi	r5,2049
 8005228:	295b3f84 	addi	r5,r5,27902
 800522c:	d9402b15 	stw	r5,172(sp)
 8005230:	01c001c4 	movi	r7,7
 8005234:	dc802f17 	ldw	r18,188(sp)
 8005238:	00000306 	br	8005248 <___svfprintf_internal_r+0x139c>
 800523c:	9cfffc04 	addi	r19,r19,-16
 8005240:	8c400204 	addi	r17,r17,8
 8005244:	acc0130e 	bge	r21,r19,8005294 <___svfprintf_internal_r+0x13e8>
 8005248:	18c00404 	addi	r3,r3,16
 800524c:	84000044 	addi	r16,r16,1
 8005250:	8d000015 	stw	r20,0(r17)
 8005254:	8d400115 	stw	r21,4(r17)
 8005258:	d8c02015 	stw	r3,128(sp)
 800525c:	dc001f15 	stw	r16,124(sp)
 8005260:	3c3ff60e 	bge	r7,r16,800523c <__alt_data_end+0xfc00523c>
 8005264:	9009883a 	mov	r4,r18
 8005268:	b00b883a 	mov	r5,r22
 800526c:	b80d883a 	mov	r6,r23
 8005270:	d9c03e15 	stw	r7,248(sp)
 8005274:	800c89c0 	call	800c89c <__ssprint_r>
 8005278:	d9c03e17 	ldw	r7,248(sp)
 800527c:	103bd41e 	bne	r2,zero,80041d0 <__alt_data_end+0xfc0041d0>
 8005280:	9cfffc04 	addi	r19,r19,-16
 8005284:	d8c02017 	ldw	r3,128(sp)
 8005288:	dc001f17 	ldw	r16,124(sp)
 800528c:	dc400404 	addi	r17,sp,16
 8005290:	acffed16 	blt	r21,r19,8005248 <__alt_data_end+0xfc005248>
 8005294:	d8802b17 	ldw	r2,172(sp)
 8005298:	1cc7883a 	add	r3,r3,r19
 800529c:	84000044 	addi	r16,r16,1
 80052a0:	88800015 	stw	r2,0(r17)
 80052a4:	8cc00115 	stw	r19,4(r17)
 80052a8:	d8c02015 	stw	r3,128(sp)
 80052ac:	dc001f15 	stw	r16,124(sp)
 80052b0:	008001c4 	movi	r2,7
 80052b4:	143f490e 	bge	r2,r16,8004fdc <__alt_data_end+0xfc004fdc>
 80052b8:	d9002f17 	ldw	r4,188(sp)
 80052bc:	b00b883a 	mov	r5,r22
 80052c0:	b80d883a 	mov	r6,r23
 80052c4:	800c89c0 	call	800c89c <__ssprint_r>
 80052c8:	103bc11e 	bne	r2,zero,80041d0 <__alt_data_end+0xfc0041d0>
 80052cc:	d8c02017 	ldw	r3,128(sp)
 80052d0:	dc001f17 	ldw	r16,124(sp)
 80052d4:	dc400404 	addi	r17,sp,16
 80052d8:	003f4106 	br	8004fe0 <__alt_data_end+0xfc004fe0>
 80052dc:	d9002f17 	ldw	r4,188(sp)
 80052e0:	b00b883a 	mov	r5,r22
 80052e4:	b80d883a 	mov	r6,r23
 80052e8:	800c89c0 	call	800c89c <__ssprint_r>
 80052ec:	103bb81e 	bne	r2,zero,80041d0 <__alt_data_end+0xfc0041d0>
 80052f0:	d8c02017 	ldw	r3,128(sp)
 80052f4:	da000404 	addi	r8,sp,16
 80052f8:	d9403117 	ldw	r5,196(sp)
 80052fc:	d9003417 	ldw	r4,208(sp)
 8005300:	d8802617 	ldw	r2,152(sp)
 8005304:	2923883a 	add	r17,r5,r4
 8005308:	d9403317 	ldw	r5,204(sp)
 800530c:	11400216 	blt	r2,r5,8005318 <___svfprintf_internal_r+0x146c>
 8005310:	e100004c 	andi	r4,fp,1
 8005314:	20000d26 	beq	r4,zero,800534c <___svfprintf_internal_r+0x14a0>
 8005318:	d9003917 	ldw	r4,228(sp)
 800531c:	d9403517 	ldw	r5,212(sp)
 8005320:	1907883a 	add	r3,r3,r4
 8005324:	d9001f17 	ldw	r4,124(sp)
 8005328:	41400015 	stw	r5,0(r8)
 800532c:	d9403917 	ldw	r5,228(sp)
 8005330:	21000044 	addi	r4,r4,1
 8005334:	d8c02015 	stw	r3,128(sp)
 8005338:	41400115 	stw	r5,4(r8)
 800533c:	d9001f15 	stw	r4,124(sp)
 8005340:	014001c4 	movi	r5,7
 8005344:	2901ec16 	blt	r5,r4,8005af8 <___svfprintf_internal_r+0x1c4c>
 8005348:	42000204 	addi	r8,r8,8
 800534c:	d9003317 	ldw	r4,204(sp)
 8005350:	2085c83a 	sub	r2,r4,r2
 8005354:	8449c83a 	sub	r4,r16,r17
 8005358:	1021883a 	mov	r16,r2
 800535c:	2080010e 	bge	r4,r2,8005364 <___svfprintf_internal_r+0x14b8>
 8005360:	2021883a 	mov	r16,r4
 8005364:	04000a0e 	bge	zero,r16,8005390 <___svfprintf_internal_r+0x14e4>
 8005368:	d9001f17 	ldw	r4,124(sp)
 800536c:	1c07883a 	add	r3,r3,r16
 8005370:	44400015 	stw	r17,0(r8)
 8005374:	21000044 	addi	r4,r4,1
 8005378:	44000115 	stw	r16,4(r8)
 800537c:	d8c02015 	stw	r3,128(sp)
 8005380:	d9001f15 	stw	r4,124(sp)
 8005384:	014001c4 	movi	r5,7
 8005388:	2901f216 	blt	r5,r4,8005b54 <___svfprintf_internal_r+0x1ca8>
 800538c:	42000204 	addi	r8,r8,8
 8005390:	80020a16 	blt	r16,zero,8005bbc <___svfprintf_internal_r+0x1d10>
 8005394:	1421c83a 	sub	r16,r2,r16
 8005398:	043cac0e 	bge	zero,r16,800464c <__alt_data_end+0xfc00464c>
 800539c:	04400404 	movi	r17,16
 80053a0:	d8801f17 	ldw	r2,124(sp)
 80053a4:	8c3f1a0e 	bge	r17,r16,8005010 <__alt_data_end+0xfc005010>
 80053a8:	01420074 	movhi	r5,2049
 80053ac:	295b3f84 	addi	r5,r5,27902
 80053b0:	d9402b15 	stw	r5,172(sp)
 80053b4:	04c001c4 	movi	r19,7
 80053b8:	dc802f17 	ldw	r18,188(sp)
 80053bc:	00000306 	br	80053cc <___svfprintf_internal_r+0x1520>
 80053c0:	42000204 	addi	r8,r8,8
 80053c4:	843ffc04 	addi	r16,r16,-16
 80053c8:	8c3f140e 	bge	r17,r16,800501c <__alt_data_end+0xfc00501c>
 80053cc:	18c00404 	addi	r3,r3,16
 80053d0:	10800044 	addi	r2,r2,1
 80053d4:	45000015 	stw	r20,0(r8)
 80053d8:	44400115 	stw	r17,4(r8)
 80053dc:	d8c02015 	stw	r3,128(sp)
 80053e0:	d8801f15 	stw	r2,124(sp)
 80053e4:	98bff60e 	bge	r19,r2,80053c0 <__alt_data_end+0xfc0053c0>
 80053e8:	9009883a 	mov	r4,r18
 80053ec:	b00b883a 	mov	r5,r22
 80053f0:	b80d883a 	mov	r6,r23
 80053f4:	800c89c0 	call	800c89c <__ssprint_r>
 80053f8:	103b751e 	bne	r2,zero,80041d0 <__alt_data_end+0xfc0041d0>
 80053fc:	d8c02017 	ldw	r3,128(sp)
 8005400:	d8801f17 	ldw	r2,124(sp)
 8005404:	da000404 	addi	r8,sp,16
 8005408:	003fee06 	br	80053c4 <__alt_data_end+0xfc0053c4>
 800540c:	e088703a 	and	r4,fp,r2
 8005410:	203ec81e 	bne	r4,zero,8004f34 <__alt_data_end+0xfc004f34>
 8005414:	dc001f17 	ldw	r16,124(sp)
 8005418:	d9003117 	ldw	r4,196(sp)
 800541c:	40800115 	stw	r2,4(r8)
 8005420:	84000044 	addi	r16,r16,1
 8005424:	41000015 	stw	r4,0(r8)
 8005428:	d8c02015 	stw	r3,128(sp)
 800542c:	dc001f15 	stw	r16,124(sp)
 8005430:	008001c4 	movi	r2,7
 8005434:	143fa016 	blt	r2,r16,80052b8 <__alt_data_end+0xfc0052b8>
 8005438:	44400204 	addi	r17,r8,8
 800543c:	003ee806 	br	8004fe0 <__alt_data_end+0xfc004fe0>
 8005440:	d9002f17 	ldw	r4,188(sp)
 8005444:	b00b883a 	mov	r5,r22
 8005448:	b80d883a 	mov	r6,r23
 800544c:	800c89c0 	call	800c89c <__ssprint_r>
 8005450:	103b5f1e 	bne	r2,zero,80041d0 <__alt_data_end+0xfc0041d0>
 8005454:	d8c02017 	ldw	r3,128(sp)
 8005458:	dc001f17 	ldw	r16,124(sp)
 800545c:	da000404 	addi	r8,sp,16
 8005460:	003ebf06 	br	8004f60 <__alt_data_end+0xfc004f60>
 8005464:	d9002f17 	ldw	r4,188(sp)
 8005468:	b00b883a 	mov	r5,r22
 800546c:	b80d883a 	mov	r6,r23
 8005470:	800c89c0 	call	800c89c <__ssprint_r>
 8005474:	103b561e 	bne	r2,zero,80041d0 <__alt_data_end+0xfc0041d0>
 8005478:	d8c02017 	ldw	r3,128(sp)
 800547c:	dc001f17 	ldw	r16,124(sp)
 8005480:	dc400404 	addi	r17,sp,16
 8005484:	003ec106 	br	8004f8c <__alt_data_end+0xfc004f8c>
 8005488:	d9002f17 	ldw	r4,188(sp)
 800548c:	b00b883a 	mov	r5,r22
 8005490:	b80d883a 	mov	r6,r23
 8005494:	800c89c0 	call	800c89c <__ssprint_r>
 8005498:	103b4d1e 	bne	r2,zero,80041d0 <__alt_data_end+0xfc0041d0>
 800549c:	d8c02017 	ldw	r3,128(sp)
 80054a0:	da000404 	addi	r8,sp,16
 80054a4:	003c2a06 	br	8004550 <__alt_data_end+0xfc004550>
 80054a8:	da004015 	stw	r8,256(sp)
 80054ac:	da403f15 	stw	r9,252(sp)
 80054b0:	800c6ec0 	call	800c6ec <__fpclassifyd>
 80054b4:	da004017 	ldw	r8,256(sp)
 80054b8:	da403f17 	ldw	r9,252(sp)
 80054bc:	1000a91e 	bne	r2,zero,8005764 <___svfprintf_internal_r+0x18b8>
 80054c0:	008011c4 	movi	r2,71
 80054c4:	14011016 	blt	r2,r16,8005908 <___svfprintf_internal_r+0x1a5c>
 80054c8:	01020074 	movhi	r4,2049
 80054cc:	211b3104 	addi	r4,r4,27844
 80054d0:	d9003115 	stw	r4,196(sp)
 80054d4:	00c000c4 	movi	r3,3
 80054d8:	00bfdfc4 	movi	r2,-129
 80054dc:	d8c02a15 	stw	r3,168(sp)
 80054e0:	e0b8703a 	and	fp,fp,r2
 80054e4:	dcc02783 	ldbu	r19,158(sp)
 80054e8:	dc802d15 	stw	r18,180(sp)
 80054ec:	1823883a 	mov	r17,r3
 80054f0:	d8003215 	stw	zero,200(sp)
 80054f4:	d8003415 	stw	zero,208(sp)
 80054f8:	003baf06 	br	80043b8 <__alt_data_end+0xfc0043b8>
 80054fc:	e0c0100c 	andi	r3,fp,64
 8005500:	18012a26 	beq	r3,zero,80059ac <___svfprintf_internal_r+0x1b00>
 8005504:	d9002d17 	ldw	r4,180(sp)
 8005508:	1480000b 	ldhu	r18,0(r2)
 800550c:	002b883a 	mov	r21,zero
 8005510:	21000104 	addi	r4,r4,4
 8005514:	d9002d15 	stw	r4,180(sp)
 8005518:	003d3206 	br	80049e4 <__alt_data_end+0xfc0049e4>
 800551c:	e080100c 	andi	r2,fp,64
 8005520:	10011326 	beq	r2,zero,8005970 <___svfprintf_internal_r+0x1ac4>
 8005524:	d8c02d17 	ldw	r3,180(sp)
 8005528:	002b883a 	mov	r21,zero
 800552c:	0005883a 	mov	r2,zero
 8005530:	1c80000b 	ldhu	r18,0(r3)
 8005534:	18c00104 	addi	r3,r3,4
 8005538:	d8c02d15 	stw	r3,180(sp)
 800553c:	9007883a 	mov	r3,r18
 8005540:	003cbf06 	br	8004840 <__alt_data_end+0xfc004840>
 8005544:	e080040c 	andi	r2,fp,16
 8005548:	10011e26 	beq	r2,zero,80059c4 <___svfprintf_internal_r+0x1b18>
 800554c:	d9402d17 	ldw	r5,180(sp)
 8005550:	d8c03017 	ldw	r3,192(sp)
 8005554:	28800017 	ldw	r2,0(r5)
 8005558:	29400104 	addi	r5,r5,4
 800555c:	d9402d15 	stw	r5,180(sp)
 8005560:	10c00015 	stw	r3,0(r2)
 8005564:	003a7d06 	br	8003f5c <__alt_data_end+0xfc003f5c>
 8005568:	e4000007 	ldb	r16,0(fp)
 800556c:	e005883a 	mov	r2,fp
 8005570:	003aa506 	br	8004008 <__alt_data_end+0xfc004008>
 8005574:	e080100c 	andi	r2,fp,64
 8005578:	10010526 	beq	r2,zero,8005990 <___svfprintf_internal_r+0x1ae4>
 800557c:	1c80000f 	ldh	r18,0(r3)
 8005580:	d8802d17 	ldw	r2,180(sp)
 8005584:	902bd7fa 	srai	r21,r18,31
 8005588:	10800104 	addi	r2,r2,4
 800558c:	d8802d15 	stw	r2,180(sp)
 8005590:	a805883a 	mov	r2,r21
 8005594:	003b5c06 	br	8004308 <__alt_data_end+0xfc004308>
 8005598:	e080100c 	andi	r2,fp,64
 800559c:	1000ec26 	beq	r2,zero,8005950 <___svfprintf_internal_r+0x1aa4>
 80055a0:	d8802d17 	ldw	r2,180(sp)
 80055a4:	002b883a 	mov	r21,zero
 80055a8:	1480000b 	ldhu	r18,0(r2)
 80055ac:	10800104 	addi	r2,r2,4
 80055b0:	d8802d15 	stw	r2,180(sp)
 80055b4:	9007883a 	mov	r3,r18
 80055b8:	00800044 	movi	r2,1
 80055bc:	003ca006 	br	8004840 <__alt_data_end+0xfc004840>
 80055c0:	00800084 	movi	r2,2
 80055c4:	003c9e06 	br	8004840 <__alt_data_end+0xfc004840>
 80055c8:	01020074 	movhi	r4,2049
 80055cc:	211b3f84 	addi	r4,r4,27902
 80055d0:	d9002b15 	stw	r4,172(sp)
 80055d4:	d9002b17 	ldw	r4,172(sp)
 80055d8:	1c47883a 	add	r3,r3,r17
 80055dc:	10800044 	addi	r2,r2,1
 80055e0:	41000015 	stw	r4,0(r8)
 80055e4:	44400115 	stw	r17,4(r8)
 80055e8:	d8c02015 	stw	r3,128(sp)
 80055ec:	d8801f15 	stw	r2,124(sp)
 80055f0:	010001c4 	movi	r4,7
 80055f4:	20bf3916 	blt	r4,r2,80052dc <__alt_data_end+0xfc0052dc>
 80055f8:	42000204 	addi	r8,r8,8
 80055fc:	003f3e06 	br	80052f8 <__alt_data_end+0xfc0052f8>
 8005600:	01020074 	movhi	r4,2049
 8005604:	211b3f84 	addi	r4,r4,27902
 8005608:	d9002b15 	stw	r4,172(sp)
 800560c:	003bf806 	br	80045f0 <__alt_data_end+0xfc0045f0>
 8005610:	d9002f17 	ldw	r4,188(sp)
 8005614:	b00b883a 	mov	r5,r22
 8005618:	b80d883a 	mov	r6,r23
 800561c:	800c89c0 	call	800c89c <__ssprint_r>
 8005620:	103aeb1e 	bne	r2,zero,80041d0 <__alt_data_end+0xfc0041d0>
 8005624:	d8c02017 	ldw	r3,128(sp)
 8005628:	da000404 	addi	r8,sp,16
 800562c:	003dc806 	br	8004d50 <__alt_data_end+0xfc004d50>
 8005630:	d8801f17 	ldw	r2,124(sp)
 8005634:	01420074 	movhi	r5,2049
 8005638:	01000044 	movi	r4,1
 800563c:	18c00044 	addi	r3,r3,1
 8005640:	10800044 	addi	r2,r2,1
 8005644:	295b3f04 	addi	r5,r5,27900
 8005648:	41000115 	stw	r4,4(r8)
 800564c:	41400015 	stw	r5,0(r8)
 8005650:	d8c02015 	stw	r3,128(sp)
 8005654:	d8801f15 	stw	r2,124(sp)
 8005658:	010001c4 	movi	r4,7
 800565c:	2080ae16 	blt	r4,r2,8005918 <___svfprintf_internal_r+0x1a6c>
 8005660:	42000204 	addi	r8,r8,8
 8005664:	8000041e 	bne	r16,zero,8005678 <___svfprintf_internal_r+0x17cc>
 8005668:	d8803317 	ldw	r2,204(sp)
 800566c:	1000021e 	bne	r2,zero,8005678 <___svfprintf_internal_r+0x17cc>
 8005670:	e080004c 	andi	r2,fp,1
 8005674:	103bf526 	beq	r2,zero,800464c <__alt_data_end+0xfc00464c>
 8005678:	d9003917 	ldw	r4,228(sp)
 800567c:	d8801f17 	ldw	r2,124(sp)
 8005680:	d9403517 	ldw	r5,212(sp)
 8005684:	1907883a 	add	r3,r3,r4
 8005688:	10800044 	addi	r2,r2,1
 800568c:	41000115 	stw	r4,4(r8)
 8005690:	41400015 	stw	r5,0(r8)
 8005694:	d8c02015 	stw	r3,128(sp)
 8005698:	d8801f15 	stw	r2,124(sp)
 800569c:	010001c4 	movi	r4,7
 80056a0:	2081ac16 	blt	r4,r2,8005d54 <___svfprintf_internal_r+0x1ea8>
 80056a4:	42000204 	addi	r8,r8,8
 80056a8:	0421c83a 	sub	r16,zero,r16
 80056ac:	0400d60e 	bge	zero,r16,8005a08 <___svfprintf_internal_r+0x1b5c>
 80056b0:	04400404 	movi	r17,16
 80056b4:	8c01190e 	bge	r17,r16,8005b1c <___svfprintf_internal_r+0x1c70>
 80056b8:	01420074 	movhi	r5,2049
 80056bc:	295b3f84 	addi	r5,r5,27902
 80056c0:	d9402b15 	stw	r5,172(sp)
 80056c4:	04c001c4 	movi	r19,7
 80056c8:	dc802f17 	ldw	r18,188(sp)
 80056cc:	00000306 	br	80056dc <___svfprintf_internal_r+0x1830>
 80056d0:	42000204 	addi	r8,r8,8
 80056d4:	843ffc04 	addi	r16,r16,-16
 80056d8:	8c01130e 	bge	r17,r16,8005b28 <___svfprintf_internal_r+0x1c7c>
 80056dc:	18c00404 	addi	r3,r3,16
 80056e0:	10800044 	addi	r2,r2,1
 80056e4:	45000015 	stw	r20,0(r8)
 80056e8:	44400115 	stw	r17,4(r8)
 80056ec:	d8c02015 	stw	r3,128(sp)
 80056f0:	d8801f15 	stw	r2,124(sp)
 80056f4:	98bff60e 	bge	r19,r2,80056d0 <__alt_data_end+0xfc0056d0>
 80056f8:	9009883a 	mov	r4,r18
 80056fc:	b00b883a 	mov	r5,r22
 8005700:	b80d883a 	mov	r6,r23
 8005704:	800c89c0 	call	800c89c <__ssprint_r>
 8005708:	103ab11e 	bne	r2,zero,80041d0 <__alt_data_end+0xfc0041d0>
 800570c:	d8c02017 	ldw	r3,128(sp)
 8005710:	d8801f17 	ldw	r2,124(sp)
 8005714:	da000404 	addi	r8,sp,16
 8005718:	003fee06 	br	80056d4 <__alt_data_end+0xfc0056d4>
 800571c:	d8802e17 	ldw	r2,184(sp)
 8005720:	d8c02d15 	stw	r3,180(sp)
 8005724:	0085c83a 	sub	r2,zero,r2
 8005728:	d8802e15 	stw	r2,184(sp)
 800572c:	e005883a 	mov	r2,fp
 8005730:	003aba06 	br	800421c <__alt_data_end+0xfc00421c>
 8005734:	e0800044 	addi	r2,fp,1
 8005738:	9cc00814 	ori	r19,r19,32
 800573c:	e4000047 	ldb	r16,1(fp)
 8005740:	003a3106 	br	8004008 <__alt_data_end+0xfc004008>
 8005744:	d9002f17 	ldw	r4,188(sp)
 8005748:	b00b883a 	mov	r5,r22
 800574c:	b80d883a 	mov	r6,r23
 8005750:	800c89c0 	call	800c89c <__ssprint_r>
 8005754:	103a9e1e 	bne	r2,zero,80041d0 <__alt_data_end+0xfc0041d0>
 8005758:	d8c02017 	ldw	r3,128(sp)
 800575c:	da000404 	addi	r8,sp,16
 8005760:	003d8d06 	br	8004d98 <__alt_data_end+0xfc004d98>
 8005764:	04fff7c4 	movi	r19,-33
 8005768:	00bfffc4 	movi	r2,-1
 800576c:	84e6703a 	and	r19,r16,r19
 8005770:	48807226 	beq	r9,r2,800593c <___svfprintf_internal_r+0x1a90>
 8005774:	008011c4 	movi	r2,71
 8005778:	98818026 	beq	r19,r2,8005d7c <___svfprintf_internal_r+0x1ed0>
 800577c:	d9003817 	ldw	r4,224(sp)
 8005780:	e0c04014 	ori	r3,fp,256
 8005784:	d8c02d15 	stw	r3,180(sp)
 8005788:	20017f16 	blt	r4,zero,8005d88 <___svfprintf_internal_r+0x1edc>
 800578c:	dc403817 	ldw	r17,224(sp)
 8005790:	d8002a05 	stb	zero,168(sp)
 8005794:	00801984 	movi	r2,102
 8005798:	8080ad26 	beq	r16,r2,8005a50 <___svfprintf_internal_r+0x1ba4>
 800579c:	00801184 	movi	r2,70
 80057a0:	8080ab26 	beq	r16,r2,8005a50 <___svfprintf_internal_r+0x1ba4>
 80057a4:	00801144 	movi	r2,69
 80057a8:	98818426 	beq	r19,r2,8005dbc <___svfprintf_internal_r+0x1f10>
 80057ac:	482b883a 	mov	r21,r9
 80057b0:	d8802604 	addi	r2,sp,152
 80057b4:	d8800115 	stw	r2,4(sp)
 80057b8:	d9002f17 	ldw	r4,188(sp)
 80057bc:	d8802504 	addi	r2,sp,148
 80057c0:	d9403717 	ldw	r5,220(sp)
 80057c4:	d8800215 	stw	r2,8(sp)
 80057c8:	d8802104 	addi	r2,sp,132
 80057cc:	dd400015 	stw	r21,0(sp)
 80057d0:	d8800315 	stw	r2,12(sp)
 80057d4:	880d883a 	mov	r6,r17
 80057d8:	01c00084 	movi	r7,2
 80057dc:	da004015 	stw	r8,256(sp)
 80057e0:	da403f15 	stw	r9,252(sp)
 80057e4:	80083940 	call	8008394 <_dtoa_r>
 80057e8:	d8803115 	stw	r2,196(sp)
 80057ec:	008019c4 	movi	r2,103
 80057f0:	da004017 	ldw	r8,256(sp)
 80057f4:	da403f17 	ldw	r9,252(sp)
 80057f8:	80800226 	beq	r16,r2,8005804 <___svfprintf_internal_r+0x1958>
 80057fc:	008011c4 	movi	r2,71
 8005800:	8080a51e 	bne	r16,r2,8005a98 <___svfprintf_internal_r+0x1bec>
 8005804:	e080004c 	andi	r2,fp,1
 8005808:	10017226 	beq	r2,zero,8005dd4 <___svfprintf_internal_r+0x1f28>
 800580c:	d8c03117 	ldw	r3,196(sp)
 8005810:	1d55883a 	add	r10,r3,r21
 8005814:	d9003717 	ldw	r4,220(sp)
 8005818:	880b883a 	mov	r5,r17
 800581c:	000d883a 	mov	r6,zero
 8005820:	000f883a 	mov	r7,zero
 8005824:	da004015 	stw	r8,256(sp)
 8005828:	da403f15 	stw	r9,252(sp)
 800582c:	da803e15 	stw	r10,248(sp)
 8005830:	8011a800 	call	8011a80 <__eqdf2>
 8005834:	da004017 	ldw	r8,256(sp)
 8005838:	da403f17 	ldw	r9,252(sp)
 800583c:	da803e17 	ldw	r10,248(sp)
 8005840:	1000fd26 	beq	r2,zero,8005c38 <___svfprintf_internal_r+0x1d8c>
 8005844:	d8802117 	ldw	r2,132(sp)
 8005848:	1280062e 	bgeu	r2,r10,8005864 <___svfprintf_internal_r+0x19b8>
 800584c:	01000c04 	movi	r4,48
 8005850:	10c00044 	addi	r3,r2,1
 8005854:	d8c02115 	stw	r3,132(sp)
 8005858:	11000005 	stb	r4,0(r2)
 800585c:	d8802117 	ldw	r2,132(sp)
 8005860:	12bffb36 	bltu	r2,r10,8005850 <__alt_data_end+0xfc005850>
 8005864:	d8c03117 	ldw	r3,196(sp)
 8005868:	10c5c83a 	sub	r2,r2,r3
 800586c:	d8803315 	stw	r2,204(sp)
 8005870:	008011c4 	movi	r2,71
 8005874:	9880e226 	beq	r19,r2,8005c00 <___svfprintf_internal_r+0x1d54>
 8005878:	00801944 	movi	r2,101
 800587c:	1401a30e 	bge	r2,r16,8005f0c <___svfprintf_internal_r+0x2060>
 8005880:	d8c02617 	ldw	r3,152(sp)
 8005884:	00801984 	movi	r2,102
 8005888:	d8c03415 	stw	r3,208(sp)
 800588c:	80815326 	beq	r16,r2,8005ddc <___svfprintf_internal_r+0x1f30>
 8005890:	d8c03417 	ldw	r3,208(sp)
 8005894:	d9003317 	ldw	r4,204(sp)
 8005898:	19013f16 	blt	r3,r4,8005d98 <___svfprintf_internal_r+0x1eec>
 800589c:	e080004c 	andi	r2,fp,1
 80058a0:	10014826 	beq	r2,zero,8005dc4 <___svfprintf_internal_r+0x1f18>
 80058a4:	d8c03417 	ldw	r3,208(sp)
 80058a8:	1c400044 	addi	r17,r3,1
 80058ac:	8839883a 	mov	fp,r17
 80058b0:	88014016 	blt	r17,zero,8005db4 <___svfprintf_internal_r+0x1f08>
 80058b4:	dd402a07 	ldb	r21,168(sp)
 80058b8:	a800c61e 	bne	r21,zero,8005bd4 <___svfprintf_internal_r+0x1d28>
 80058bc:	df002a15 	stw	fp,168(sp)
 80058c0:	dcc02783 	ldbu	r19,158(sp)
 80058c4:	df002d17 	ldw	fp,180(sp)
 80058c8:	d8003215 	stw	zero,200(sp)
 80058cc:	dc802d15 	stw	r18,180(sp)
 80058d0:	003ab906 	br	80043b8 <__alt_data_end+0xfc0043b8>
 80058d4:	01020074 	movhi	r4,2049
 80058d8:	211b2f04 	addi	r4,r4,27836
 80058dc:	d9003115 	stw	r4,196(sp)
 80058e0:	003bbe06 	br	80047dc <__alt_data_end+0xfc0047dc>
 80058e4:	d9002f17 	ldw	r4,188(sp)
 80058e8:	04001004 	movi	r16,64
 80058ec:	800b883a 	mov	r5,r16
 80058f0:	8002d480 	call	8002d48 <_malloc_r>
 80058f4:	b0800015 	stw	r2,0(r22)
 80058f8:	b0800415 	stw	r2,16(r22)
 80058fc:	10017c26 	beq	r2,zero,8005ef0 <___svfprintf_internal_r+0x2044>
 8005900:	b4000515 	stw	r16,20(r22)
 8005904:	00398306 	br	8003f14 <__alt_data_end+0xfc003f14>
 8005908:	01420074 	movhi	r5,2049
 800590c:	295b3204 	addi	r5,r5,27848
 8005910:	d9403115 	stw	r5,196(sp)
 8005914:	003eef06 	br	80054d4 <__alt_data_end+0xfc0054d4>
 8005918:	d9002f17 	ldw	r4,188(sp)
 800591c:	b00b883a 	mov	r5,r22
 8005920:	b80d883a 	mov	r6,r23
 8005924:	800c89c0 	call	800c89c <__ssprint_r>
 8005928:	103a291e 	bne	r2,zero,80041d0 <__alt_data_end+0xfc0041d0>
 800592c:	dc002617 	ldw	r16,152(sp)
 8005930:	d8c02017 	ldw	r3,128(sp)
 8005934:	da000404 	addi	r8,sp,16
 8005938:	003f4a06 	br	8005664 <__alt_data_end+0xfc005664>
 800593c:	02400184 	movi	r9,6
 8005940:	003f8e06 	br	800577c <__alt_data_end+0xfc00577c>
 8005944:	d8c03117 	ldw	r3,196(sp)
 8005948:	b8e3c83a 	sub	r17,r23,r3
 800594c:	003a9506 	br	80043a4 <__alt_data_end+0xfc0043a4>
 8005950:	d8c02d17 	ldw	r3,180(sp)
 8005954:	002b883a 	mov	r21,zero
 8005958:	00800044 	movi	r2,1
 800595c:	1c800017 	ldw	r18,0(r3)
 8005960:	18c00104 	addi	r3,r3,4
 8005964:	d8c02d15 	stw	r3,180(sp)
 8005968:	9007883a 	mov	r3,r18
 800596c:	003bb406 	br	8004840 <__alt_data_end+0xfc004840>
 8005970:	d9002d17 	ldw	r4,180(sp)
 8005974:	002b883a 	mov	r21,zero
 8005978:	0005883a 	mov	r2,zero
 800597c:	24800017 	ldw	r18,0(r4)
 8005980:	21000104 	addi	r4,r4,4
 8005984:	d9002d15 	stw	r4,180(sp)
 8005988:	9007883a 	mov	r3,r18
 800598c:	003bac06 	br	8004840 <__alt_data_end+0xfc004840>
 8005990:	1c800017 	ldw	r18,0(r3)
 8005994:	d8c02d17 	ldw	r3,180(sp)
 8005998:	902bd7fa 	srai	r21,r18,31
 800599c:	18c00104 	addi	r3,r3,4
 80059a0:	d8c02d15 	stw	r3,180(sp)
 80059a4:	a805883a 	mov	r2,r21
 80059a8:	003a5706 	br	8004308 <__alt_data_end+0xfc004308>
 80059ac:	d9402d17 	ldw	r5,180(sp)
 80059b0:	14800017 	ldw	r18,0(r2)
 80059b4:	002b883a 	mov	r21,zero
 80059b8:	29400104 	addi	r5,r5,4
 80059bc:	d9402d15 	stw	r5,180(sp)
 80059c0:	003c0806 	br	80049e4 <__alt_data_end+0xfc0049e4>
 80059c4:	e080100c 	andi	r2,fp,64
 80059c8:	10009426 	beq	r2,zero,8005c1c <___svfprintf_internal_r+0x1d70>
 80059cc:	d9002d17 	ldw	r4,180(sp)
 80059d0:	d9403017 	ldw	r5,192(sp)
 80059d4:	20800017 	ldw	r2,0(r4)
 80059d8:	21000104 	addi	r4,r4,4
 80059dc:	d9002d15 	stw	r4,180(sp)
 80059e0:	1140000d 	sth	r5,0(r2)
 80059e4:	00395d06 	br	8003f5c <__alt_data_end+0xfc003f5c>
 80059e8:	d9002f17 	ldw	r4,188(sp)
 80059ec:	b00b883a 	mov	r5,r22
 80059f0:	b80d883a 	mov	r6,r23
 80059f4:	800c89c0 	call	800c89c <__ssprint_r>
 80059f8:	1039f51e 	bne	r2,zero,80041d0 <__alt_data_end+0xfc0041d0>
 80059fc:	d8c02017 	ldw	r3,128(sp)
 8005a00:	d8801f17 	ldw	r2,124(sp)
 8005a04:	da000404 	addi	r8,sp,16
 8005a08:	d9403317 	ldw	r5,204(sp)
 8005a0c:	d9003117 	ldw	r4,196(sp)
 8005a10:	10800044 	addi	r2,r2,1
 8005a14:	28c7883a 	add	r3,r5,r3
 8005a18:	41000015 	stw	r4,0(r8)
 8005a1c:	41400115 	stw	r5,4(r8)
 8005a20:	d8c02015 	stw	r3,128(sp)
 8005a24:	d8801f15 	stw	r2,124(sp)
 8005a28:	010001c4 	movi	r4,7
 8005a2c:	20bb060e 	bge	r4,r2,8004648 <__alt_data_end+0xfc004648>
 8005a30:	003d8306 	br	8005040 <__alt_data_end+0xfc005040>
 8005a34:	da004015 	stw	r8,256(sp)
 8005a38:	8003e140 	call	8003e14 <strlen>
 8005a3c:	1023883a 	mov	r17,r2
 8005a40:	da004017 	ldw	r8,256(sp)
 8005a44:	883c290e 	bge	r17,zero,8004aec <__alt_data_end+0xfc004aec>
 8005a48:	0005883a 	mov	r2,zero
 8005a4c:	003c2706 	br	8004aec <__alt_data_end+0xfc004aec>
 8005a50:	d8802604 	addi	r2,sp,152
 8005a54:	d8800115 	stw	r2,4(sp)
 8005a58:	d9002f17 	ldw	r4,188(sp)
 8005a5c:	d8802504 	addi	r2,sp,148
 8005a60:	d9403717 	ldw	r5,220(sp)
 8005a64:	d8800215 	stw	r2,8(sp)
 8005a68:	d8802104 	addi	r2,sp,132
 8005a6c:	da400015 	stw	r9,0(sp)
 8005a70:	d8800315 	stw	r2,12(sp)
 8005a74:	880d883a 	mov	r6,r17
 8005a78:	01c000c4 	movi	r7,3
 8005a7c:	da004015 	stw	r8,256(sp)
 8005a80:	da403f15 	stw	r9,252(sp)
 8005a84:	80083940 	call	8008394 <_dtoa_r>
 8005a88:	da403f17 	ldw	r9,252(sp)
 8005a8c:	da004017 	ldw	r8,256(sp)
 8005a90:	d8803115 	stw	r2,196(sp)
 8005a94:	482b883a 	mov	r21,r9
 8005a98:	d8c03117 	ldw	r3,196(sp)
 8005a9c:	00801184 	movi	r2,70
 8005aa0:	1d55883a 	add	r10,r3,r21
 8005aa4:	98bf5b1e 	bne	r19,r2,8005814 <__alt_data_end+0xfc005814>
 8005aa8:	19000007 	ldb	r4,0(r3)
 8005aac:	00800c04 	movi	r2,48
 8005ab0:	2080d826 	beq	r4,r2,8005e14 <___svfprintf_internal_r+0x1f68>
 8005ab4:	d8c02617 	ldw	r3,152(sp)
 8005ab8:	50d5883a 	add	r10,r10,r3
 8005abc:	003f5506 	br	8005814 <__alt_data_end+0xfc005814>
 8005ac0:	01020074 	movhi	r4,2049
 8005ac4:	211b4384 	addi	r4,r4,27918
 8005ac8:	d9003615 	stw	r4,216(sp)
 8005acc:	003a7706 	br	80044ac <__alt_data_end+0xfc0044ac>
 8005ad0:	0023883a 	mov	r17,zero
 8005ad4:	003da306 	br	8005164 <__alt_data_end+0xfc005164>
 8005ad8:	d9002f17 	ldw	r4,188(sp)
 8005adc:	b00b883a 	mov	r5,r22
 8005ae0:	b80d883a 	mov	r6,r23
 8005ae4:	800c89c0 	call	800c89c <__ssprint_r>
 8005ae8:	1039b91e 	bne	r2,zero,80041d0 <__alt_data_end+0xfc0041d0>
 8005aec:	d8c02017 	ldw	r3,128(sp)
 8005af0:	da000404 	addi	r8,sp,16
 8005af4:	003d9a06 	br	8005160 <__alt_data_end+0xfc005160>
 8005af8:	d9002f17 	ldw	r4,188(sp)
 8005afc:	b00b883a 	mov	r5,r22
 8005b00:	b80d883a 	mov	r6,r23
 8005b04:	800c89c0 	call	800c89c <__ssprint_r>
 8005b08:	1039b11e 	bne	r2,zero,80041d0 <__alt_data_end+0xfc0041d0>
 8005b0c:	d8802617 	ldw	r2,152(sp)
 8005b10:	d8c02017 	ldw	r3,128(sp)
 8005b14:	da000404 	addi	r8,sp,16
 8005b18:	003e0c06 	br	800534c <__alt_data_end+0xfc00534c>
 8005b1c:	01020074 	movhi	r4,2049
 8005b20:	211b3f84 	addi	r4,r4,27902
 8005b24:	d9002b15 	stw	r4,172(sp)
 8005b28:	d9002b17 	ldw	r4,172(sp)
 8005b2c:	1c07883a 	add	r3,r3,r16
 8005b30:	10800044 	addi	r2,r2,1
 8005b34:	41000015 	stw	r4,0(r8)
 8005b38:	44000115 	stw	r16,4(r8)
 8005b3c:	d8c02015 	stw	r3,128(sp)
 8005b40:	d8801f15 	stw	r2,124(sp)
 8005b44:	010001c4 	movi	r4,7
 8005b48:	20bfa716 	blt	r4,r2,80059e8 <__alt_data_end+0xfc0059e8>
 8005b4c:	42000204 	addi	r8,r8,8
 8005b50:	003fad06 	br	8005a08 <__alt_data_end+0xfc005a08>
 8005b54:	d9002f17 	ldw	r4,188(sp)
 8005b58:	b00b883a 	mov	r5,r22
 8005b5c:	b80d883a 	mov	r6,r23
 8005b60:	800c89c0 	call	800c89c <__ssprint_r>
 8005b64:	10399a1e 	bne	r2,zero,80041d0 <__alt_data_end+0xfc0041d0>
 8005b68:	d8802617 	ldw	r2,152(sp)
 8005b6c:	d9403317 	ldw	r5,204(sp)
 8005b70:	d8c02017 	ldw	r3,128(sp)
 8005b74:	da000404 	addi	r8,sp,16
 8005b78:	2885c83a 	sub	r2,r5,r2
 8005b7c:	003e0406 	br	8005390 <__alt_data_end+0xfc005390>
 8005b80:	00800184 	movi	r2,6
 8005b84:	1240012e 	bgeu	r2,r9,8005b8c <___svfprintf_internal_r+0x1ce0>
 8005b88:	1013883a 	mov	r9,r2
 8005b8c:	4823883a 	mov	r17,r9
 8005b90:	4805883a 	mov	r2,r9
 8005b94:	4800b616 	blt	r9,zero,8005e70 <___svfprintf_internal_r+0x1fc4>
 8005b98:	01420074 	movhi	r5,2049
 8005b9c:	295b3d04 	addi	r5,r5,27892
 8005ba0:	d8802a15 	stw	r2,168(sp)
 8005ba4:	dc802d15 	stw	r18,180(sp)
 8005ba8:	d8003215 	stw	zero,200(sp)
 8005bac:	d8003415 	stw	zero,208(sp)
 8005bb0:	d9403115 	stw	r5,196(sp)
 8005bb4:	0005883a 	mov	r2,zero
 8005bb8:	003a0606 	br	80043d4 <__alt_data_end+0xfc0043d4>
 8005bbc:	0021883a 	mov	r16,zero
 8005bc0:	003df406 	br	8005394 <__alt_data_end+0xfc005394>
 8005bc4:	01420074 	movhi	r5,2049
 8005bc8:	295b4384 	addi	r5,r5,27918
 8005bcc:	d9403615 	stw	r5,216(sp)
 8005bd0:	003ac306 	br	80046e0 <__alt_data_end+0xfc0046e0>
 8005bd4:	00800b44 	movi	r2,45
 8005bd8:	d8802785 	stb	r2,158(sp)
 8005bdc:	df002a15 	stw	fp,168(sp)
 8005be0:	d8003215 	stw	zero,200(sp)
 8005be4:	df002d17 	ldw	fp,180(sp)
 8005be8:	00800b44 	movi	r2,45
 8005bec:	dc802d15 	stw	r18,180(sp)
 8005bf0:	0039f506 	br	80043c8 <__alt_data_end+0xfc0043c8>
 8005bf4:	04c00b44 	movi	r19,45
 8005bf8:	dcc02785 	stb	r19,158(sp)
 8005bfc:	003af206 	br	80047c8 <__alt_data_end+0xfc0047c8>
 8005c00:	d8c02617 	ldw	r3,152(sp)
 8005c04:	00bfff44 	movi	r2,-3
 8005c08:	18801816 	blt	r3,r2,8005c6c <___svfprintf_internal_r+0x1dc0>
 8005c0c:	48c01716 	blt	r9,r3,8005c6c <___svfprintf_internal_r+0x1dc0>
 8005c10:	d8c03415 	stw	r3,208(sp)
 8005c14:	040019c4 	movi	r16,103
 8005c18:	003f1d06 	br	8005890 <__alt_data_end+0xfc005890>
 8005c1c:	d8c02d17 	ldw	r3,180(sp)
 8005c20:	d9003017 	ldw	r4,192(sp)
 8005c24:	18800017 	ldw	r2,0(r3)
 8005c28:	18c00104 	addi	r3,r3,4
 8005c2c:	d8c02d15 	stw	r3,180(sp)
 8005c30:	11000015 	stw	r4,0(r2)
 8005c34:	0038c906 	br	8003f5c <__alt_data_end+0xfc003f5c>
 8005c38:	5005883a 	mov	r2,r10
 8005c3c:	003f0906 	br	8005864 <__alt_data_end+0xfc005864>
 8005c40:	01020074 	movhi	r4,2049
 8005c44:	211b3f84 	addi	r4,r4,27902
 8005c48:	d9002b15 	stw	r4,172(sp)
 8005c4c:	003c9a06 	br	8004eb8 <__alt_data_end+0xfc004eb8>
 8005c50:	da402a15 	stw	r9,168(sp)
 8005c54:	dcc02783 	ldbu	r19,158(sp)
 8005c58:	4823883a 	mov	r17,r9
 8005c5c:	dc802d15 	stw	r18,180(sp)
 8005c60:	d8003215 	stw	zero,200(sp)
 8005c64:	d8003415 	stw	zero,208(sp)
 8005c68:	0039d306 	br	80043b8 <__alt_data_end+0xfc0043b8>
 8005c6c:	843fff84 	addi	r16,r16,-2
 8005c70:	1d7fffc4 	addi	r21,r3,-1
 8005c74:	dd402615 	stw	r21,152(sp)
 8005c78:	dc0022c5 	stb	r16,139(sp)
 8005c7c:	a8008f16 	blt	r21,zero,8005ebc <___svfprintf_internal_r+0x2010>
 8005c80:	00800ac4 	movi	r2,43
 8005c84:	d8802305 	stb	r2,140(sp)
 8005c88:	00800244 	movi	r2,9
 8005c8c:	1540710e 	bge	r2,r21,8005e54 <___svfprintf_internal_r+0x1fa8>
 8005c90:	dcc022c4 	addi	r19,sp,139
 8005c94:	dc002b15 	stw	r16,172(sp)
 8005c98:	4023883a 	mov	r17,r8
 8005c9c:	9821883a 	mov	r16,r19
 8005ca0:	a809883a 	mov	r4,r21
 8005ca4:	01400284 	movi	r5,10
 8005ca8:	80107f80 	call	80107f8 <__modsi3>
 8005cac:	10800c04 	addi	r2,r2,48
 8005cb0:	843fffc4 	addi	r16,r16,-1
 8005cb4:	a809883a 	mov	r4,r21
 8005cb8:	01400284 	movi	r5,10
 8005cbc:	80800005 	stb	r2,0(r16)
 8005cc0:	80107a40 	call	80107a4 <__divsi3>
 8005cc4:	01000244 	movi	r4,9
 8005cc8:	102b883a 	mov	r21,r2
 8005ccc:	20bff416 	blt	r4,r2,8005ca0 <__alt_data_end+0xfc005ca0>
 8005cd0:	8811883a 	mov	r8,r17
 8005cd4:	10800c04 	addi	r2,r2,48
 8005cd8:	8023883a 	mov	r17,r16
 8005cdc:	897fffc4 	addi	r5,r17,-1
 8005ce0:	88bfffc5 	stb	r2,-1(r17)
 8005ce4:	dc002b17 	ldw	r16,172(sp)
 8005ce8:	2cc08a2e 	bgeu	r5,r19,8005f14 <___svfprintf_internal_r+0x2068>
 8005cec:	d9802384 	addi	r6,sp,142
 8005cf0:	344dc83a 	sub	r6,r6,r17
 8005cf4:	d9002344 	addi	r4,sp,141
 8005cf8:	998d883a 	add	r6,r19,r6
 8005cfc:	00000106 	br	8005d04 <___svfprintf_internal_r+0x1e58>
 8005d00:	28800003 	ldbu	r2,0(r5)
 8005d04:	20800005 	stb	r2,0(r4)
 8005d08:	21000044 	addi	r4,r4,1
 8005d0c:	29400044 	addi	r5,r5,1
 8005d10:	21bffb1e 	bne	r4,r6,8005d00 <__alt_data_end+0xfc005d00>
 8005d14:	d8802304 	addi	r2,sp,140
 8005d18:	1445c83a 	sub	r2,r2,r17
 8005d1c:	d9402344 	addi	r5,sp,141
 8005d20:	2885883a 	add	r2,r5,r2
 8005d24:	14e7c83a 	sub	r19,r2,r19
 8005d28:	d8803317 	ldw	r2,204(sp)
 8005d2c:	d8c03317 	ldw	r3,204(sp)
 8005d30:	dcc03a15 	stw	r19,232(sp)
 8005d34:	14e3883a 	add	r17,r2,r19
 8005d38:	00800044 	movi	r2,1
 8005d3c:	10c0690e 	bge	r2,r3,8005ee4 <___svfprintf_internal_r+0x2038>
 8005d40:	8c400044 	addi	r17,r17,1
 8005d44:	8839883a 	mov	fp,r17
 8005d48:	88006416 	blt	r17,zero,8005edc <___svfprintf_internal_r+0x2030>
 8005d4c:	d8003415 	stw	zero,208(sp)
 8005d50:	003ed806 	br	80058b4 <__alt_data_end+0xfc0058b4>
 8005d54:	d9002f17 	ldw	r4,188(sp)
 8005d58:	b00b883a 	mov	r5,r22
 8005d5c:	b80d883a 	mov	r6,r23
 8005d60:	800c89c0 	call	800c89c <__ssprint_r>
 8005d64:	10391a1e 	bne	r2,zero,80041d0 <__alt_data_end+0xfc0041d0>
 8005d68:	dc002617 	ldw	r16,152(sp)
 8005d6c:	d8c02017 	ldw	r3,128(sp)
 8005d70:	d8801f17 	ldw	r2,124(sp)
 8005d74:	da000404 	addi	r8,sp,16
 8005d78:	003e4b06 	br	80056a8 <__alt_data_end+0xfc0056a8>
 8005d7c:	483e7f1e 	bne	r9,zero,800577c <__alt_data_end+0xfc00577c>
 8005d80:	8813883a 	mov	r9,r17
 8005d84:	003e7d06 	br	800577c <__alt_data_end+0xfc00577c>
 8005d88:	00c00b44 	movi	r3,45
 8005d8c:	2460003c 	xorhi	r17,r4,32768
 8005d90:	d8c02a05 	stb	r3,168(sp)
 8005d94:	003e7f06 	br	8005794 <__alt_data_end+0xfc005794>
 8005d98:	d8c03417 	ldw	r3,208(sp)
 8005d9c:	00c03e0e 	bge	zero,r3,8005e98 <___svfprintf_internal_r+0x1fec>
 8005da0:	04400044 	movi	r17,1
 8005da4:	d9003317 	ldw	r4,204(sp)
 8005da8:	8923883a 	add	r17,r17,r4
 8005dac:	8839883a 	mov	fp,r17
 8005db0:	883ec00e 	bge	r17,zero,80058b4 <__alt_data_end+0xfc0058b4>
 8005db4:	0039883a 	mov	fp,zero
 8005db8:	003ebe06 	br	80058b4 <__alt_data_end+0xfc0058b4>
 8005dbc:	4d400044 	addi	r21,r9,1
 8005dc0:	003e7b06 	br	80057b0 <__alt_data_end+0xfc0057b0>
 8005dc4:	1839883a 	mov	fp,r3
 8005dc8:	18004e16 	blt	r3,zero,8005f04 <___svfprintf_internal_r+0x2058>
 8005dcc:	dc403417 	ldw	r17,208(sp)
 8005dd0:	003eb806 	br	80058b4 <__alt_data_end+0xfc0058b4>
 8005dd4:	d8802117 	ldw	r2,132(sp)
 8005dd8:	003ea206 	br	8005864 <__alt_data_end+0xfc005864>
 8005ddc:	00c0310e 	bge	zero,r3,8005ea4 <___svfprintf_internal_r+0x1ff8>
 8005de0:	4800021e 	bne	r9,zero,8005dec <___svfprintf_internal_r+0x1f40>
 8005de4:	e080004c 	andi	r2,fp,1
 8005de8:	103ff626 	beq	r2,zero,8005dc4 <__alt_data_end+0xfc005dc4>
 8005dec:	d8c03417 	ldw	r3,208(sp)
 8005df0:	4a400044 	addi	r9,r9,1
 8005df4:	1a63883a 	add	r17,r3,r9
 8005df8:	8839883a 	mov	fp,r17
 8005dfc:	883ead0e 	bge	r17,zero,80058b4 <__alt_data_end+0xfc0058b4>
 8005e00:	003fec06 	br	8005db4 <__alt_data_end+0xfc005db4>
 8005e04:	01020074 	movhi	r4,2049
 8005e08:	211b3f84 	addi	r4,r4,27902
 8005e0c:	d9002b15 	stw	r4,172(sp)
 8005e10:	003d2006 	br	8005294 <__alt_data_end+0xfc005294>
 8005e14:	d9003717 	ldw	r4,220(sp)
 8005e18:	880b883a 	mov	r5,r17
 8005e1c:	000d883a 	mov	r6,zero
 8005e20:	000f883a 	mov	r7,zero
 8005e24:	da004015 	stw	r8,256(sp)
 8005e28:	da403f15 	stw	r9,252(sp)
 8005e2c:	da803e15 	stw	r10,248(sp)
 8005e30:	8011a800 	call	8011a80 <__eqdf2>
 8005e34:	da004017 	ldw	r8,256(sp)
 8005e38:	da403f17 	ldw	r9,252(sp)
 8005e3c:	da803e17 	ldw	r10,248(sp)
 8005e40:	103f1c26 	beq	r2,zero,8005ab4 <__alt_data_end+0xfc005ab4>
 8005e44:	00800044 	movi	r2,1
 8005e48:	1547c83a 	sub	r3,r2,r21
 8005e4c:	d8c02615 	stw	r3,152(sp)
 8005e50:	003f1906 	br	8005ab8 <__alt_data_end+0xfc005ab8>
 8005e54:	00800c04 	movi	r2,48
 8005e58:	a8c00c04 	addi	r3,r21,48
 8005e5c:	d8802345 	stb	r2,141(sp)
 8005e60:	d8c02385 	stb	r3,142(sp)
 8005e64:	d88023c4 	addi	r2,sp,143
 8005e68:	dcc022c4 	addi	r19,sp,139
 8005e6c:	003fad06 	br	8005d24 <__alt_data_end+0xfc005d24>
 8005e70:	0005883a 	mov	r2,zero
 8005e74:	003f4806 	br	8005b98 <__alt_data_end+0xfc005b98>
 8005e78:	d9402d17 	ldw	r5,180(sp)
 8005e7c:	2a400017 	ldw	r9,0(r5)
 8005e80:	28c00104 	addi	r3,r5,4
 8005e84:	d8c02d15 	stw	r3,180(sp)
 8005e88:	483e2c0e 	bge	r9,zero,800573c <__alt_data_end+0xfc00573c>
 8005e8c:	027fffc4 	movi	r9,-1
 8005e90:	e4000047 	ldb	r16,1(fp)
 8005e94:	00385c06 	br	8004008 <__alt_data_end+0xfc004008>
 8005e98:	04400084 	movi	r17,2
 8005e9c:	88e3c83a 	sub	r17,r17,r3
 8005ea0:	003fc006 	br	8005da4 <__alt_data_end+0xfc005da4>
 8005ea4:	4800091e 	bne	r9,zero,8005ecc <___svfprintf_internal_r+0x2020>
 8005ea8:	e080004c 	andi	r2,fp,1
 8005eac:	1000071e 	bne	r2,zero,8005ecc <___svfprintf_internal_r+0x2020>
 8005eb0:	07000044 	movi	fp,1
 8005eb4:	e023883a 	mov	r17,fp
 8005eb8:	003e7e06 	br	80058b4 <__alt_data_end+0xfc0058b4>
 8005ebc:	00800b44 	movi	r2,45
 8005ec0:	056bc83a 	sub	r21,zero,r21
 8005ec4:	d8802305 	stb	r2,140(sp)
 8005ec8:	003f6f06 	br	8005c88 <__alt_data_end+0xfc005c88>
 8005ecc:	4c400084 	addi	r17,r9,2
 8005ed0:	8839883a 	mov	fp,r17
 8005ed4:	883e770e 	bge	r17,zero,80058b4 <__alt_data_end+0xfc0058b4>
 8005ed8:	003fb606 	br	8005db4 <__alt_data_end+0xfc005db4>
 8005edc:	0039883a 	mov	fp,zero
 8005ee0:	003f9a06 	br	8005d4c <__alt_data_end+0xfc005d4c>
 8005ee4:	e084703a 	and	r2,fp,r2
 8005ee8:	103f9626 	beq	r2,zero,8005d44 <__alt_data_end+0xfc005d44>
 8005eec:	003f9406 	br	8005d40 <__alt_data_end+0xfc005d40>
 8005ef0:	d8c02f17 	ldw	r3,188(sp)
 8005ef4:	00800304 	movi	r2,12
 8005ef8:	18800015 	stw	r2,0(r3)
 8005efc:	00bfffc4 	movi	r2,-1
 8005f00:	0038b706 	br	80041e0 <__alt_data_end+0xfc0041e0>
 8005f04:	0039883a 	mov	fp,zero
 8005f08:	003fb006 	br	8005dcc <__alt_data_end+0xfc005dcc>
 8005f0c:	d8c02617 	ldw	r3,152(sp)
 8005f10:	003f5706 	br	8005c70 <__alt_data_end+0xfc005c70>
 8005f14:	d8802344 	addi	r2,sp,141
 8005f18:	003f8206 	br	8005d24 <__alt_data_end+0xfc005d24>

08005f1c <___vfprintf_internal_r>:
 8005f1c:	defeb604 	addi	sp,sp,-1320
 8005f20:	dfc14915 	stw	ra,1316(sp)
 8005f24:	ddc14715 	stw	r23,1308(sp)
 8005f28:	dd814615 	stw	r22,1304(sp)
 8005f2c:	202f883a 	mov	r23,r4
 8005f30:	282d883a 	mov	r22,r5
 8005f34:	d9812a15 	stw	r6,1192(sp)
 8005f38:	d9c12d15 	stw	r7,1204(sp)
 8005f3c:	df014815 	stw	fp,1312(sp)
 8005f40:	dd414515 	stw	r21,1300(sp)
 8005f44:	dd014415 	stw	r20,1296(sp)
 8005f48:	dcc14315 	stw	r19,1292(sp)
 8005f4c:	dc814215 	stw	r18,1288(sp)
 8005f50:	dc414115 	stw	r17,1284(sp)
 8005f54:	dc014015 	stw	r16,1280(sp)
 8005f58:	800ab9c0 	call	800ab9c <_localeconv_r>
 8005f5c:	10800017 	ldw	r2,0(r2)
 8005f60:	1009883a 	mov	r4,r2
 8005f64:	d8813515 	stw	r2,1236(sp)
 8005f68:	8003e140 	call	8003e14 <strlen>
 8005f6c:	d8813815 	stw	r2,1248(sp)
 8005f70:	b8000226 	beq	r23,zero,8005f7c <___vfprintf_internal_r+0x60>
 8005f74:	b8800e17 	ldw	r2,56(r23)
 8005f78:	10010526 	beq	r2,zero,8006390 <___vfprintf_internal_r+0x474>
 8005f7c:	b0c0030b 	ldhu	r3,12(r22)
 8005f80:	1908000c 	andi	r4,r3,8192
 8005f84:	1805883a 	mov	r2,r3
 8005f88:	2000071e 	bne	r4,zero,8005fa8 <___vfprintf_internal_r+0x8c>
 8005f8c:	b1001917 	ldw	r4,100(r22)
 8005f90:	18880014 	ori	r2,r3,8192
 8005f94:	00f7ffc4 	movi	r3,-8193
 8005f98:	20c8703a 	and	r4,r4,r3
 8005f9c:	b080030d 	sth	r2,12(r22)
 8005fa0:	1007883a 	mov	r3,r2
 8005fa4:	b1001915 	stw	r4,100(r22)
 8005fa8:	1100020c 	andi	r4,r2,8
 8005fac:	2000a826 	beq	r4,zero,8006250 <___vfprintf_internal_r+0x334>
 8005fb0:	b1000417 	ldw	r4,16(r22)
 8005fb4:	2000a626 	beq	r4,zero,8006250 <___vfprintf_internal_r+0x334>
 8005fb8:	1080068c 	andi	r2,r2,26
 8005fbc:	01000284 	movi	r4,10
 8005fc0:	1100ac26 	beq	r2,r4,8006274 <___vfprintf_internal_r+0x358>
 8005fc4:	d8c10e04 	addi	r3,sp,1080
 8005fc8:	d9010dc4 	addi	r4,sp,1079
 8005fcc:	d9400404 	addi	r5,sp,16
 8005fd0:	05020074 	movhi	r20,2049
 8005fd4:	1905c83a 	sub	r2,r3,r4
 8005fd8:	a51b4784 	addi	r20,r20,27934
 8005fdc:	d8c12815 	stw	r3,1184(sp)
 8005fe0:	d9012915 	stw	r4,1188(sp)
 8005fe4:	d9411e15 	stw	r5,1144(sp)
 8005fe8:	d8012015 	stw	zero,1152(sp)
 8005fec:	d8011f15 	stw	zero,1148(sp)
 8005ff0:	d8013315 	stw	zero,1228(sp)
 8005ff4:	d8013715 	stw	zero,1244(sp)
 8005ff8:	d8013915 	stw	zero,1252(sp)
 8005ffc:	d8013b15 	stw	zero,1260(sp)
 8006000:	d8013a15 	stw	zero,1256(sp)
 8006004:	d8012f15 	stw	zero,1212(sp)
 8006008:	2811883a 	mov	r8,r5
 800600c:	d8813c15 	stw	r2,1264(sp)
 8006010:	d8c12a17 	ldw	r3,1192(sp)
 8006014:	18800007 	ldb	r2,0(r3)
 8006018:	10021326 	beq	r2,zero,8006868 <___vfprintf_internal_r+0x94c>
 800601c:	00c00944 	movi	r3,37
 8006020:	dc012a17 	ldw	r16,1192(sp)
 8006024:	10c0021e 	bne	r2,r3,8006030 <___vfprintf_internal_r+0x114>
 8006028:	00001606 	br	8006084 <___vfprintf_internal_r+0x168>
 800602c:	10c08526 	beq	r2,r3,8006244 <___vfprintf_internal_r+0x328>
 8006030:	84000044 	addi	r16,r16,1
 8006034:	80800007 	ldb	r2,0(r16)
 8006038:	103ffc1e 	bne	r2,zero,800602c <__alt_data_end+0xfc00602c>
 800603c:	d9012a17 	ldw	r4,1192(sp)
 8006040:	8123c83a 	sub	r17,r16,r4
 8006044:	88000f26 	beq	r17,zero,8006084 <___vfprintf_internal_r+0x168>
 8006048:	d8812a17 	ldw	r2,1192(sp)
 800604c:	d8c12017 	ldw	r3,1152(sp)
 8006050:	44400115 	stw	r17,4(r8)
 8006054:	40800015 	stw	r2,0(r8)
 8006058:	d8811f17 	ldw	r2,1148(sp)
 800605c:	1c47883a 	add	r3,r3,r17
 8006060:	d8c12015 	stw	r3,1152(sp)
 8006064:	10800044 	addi	r2,r2,1
 8006068:	d8811f15 	stw	r2,1148(sp)
 800606c:	00c001c4 	movi	r3,7
 8006070:	1880b516 	blt	r3,r2,8006348 <___vfprintf_internal_r+0x42c>
 8006074:	42000204 	addi	r8,r8,8
 8006078:	d8c12f17 	ldw	r3,1212(sp)
 800607c:	1c47883a 	add	r3,r3,r17
 8006080:	d8c12f15 	stw	r3,1212(sp)
 8006084:	80800007 	ldb	r2,0(r16)
 8006088:	1000b626 	beq	r2,zero,8006364 <___vfprintf_internal_r+0x448>
 800608c:	80800044 	addi	r2,r16,1
 8006090:	84000047 	ldb	r16,1(r16)
 8006094:	0027883a 	mov	r19,zero
 8006098:	0039883a 	mov	fp,zero
 800609c:	dcc12b05 	stb	r19,1196(sp)
 80060a0:	d8012785 	stb	zero,1182(sp)
 80060a4:	027fffc4 	movi	r9,-1
 80060a8:	d8012e15 	stw	zero,1208(sp)
 80060ac:	04401604 	movi	r17,88
 80060b0:	04800244 	movi	r18,9
 80060b4:	da012a15 	stw	r8,1192(sp)
 80060b8:	e027883a 	mov	r19,fp
 80060bc:	17000044 	addi	fp,r2,1
 80060c0:	80bff804 	addi	r2,r16,-32
 80060c4:	88831236 	bltu	r17,r2,8006d10 <___vfprintf_internal_r+0xdf4>
 80060c8:	100490ba 	slli	r2,r2,2
 80060cc:	01020034 	movhi	r4,2048
 80060d0:	21183804 	addi	r4,r4,24800
 80060d4:	1105883a 	add	r2,r2,r4
 80060d8:	10800017 	ldw	r2,0(r2)
 80060dc:	1000683a 	jmp	r2
 80060e0:	08006c2c 	andhi	zero,at,432
 80060e4:	08006d10 	cmplti	zero,at,436
 80060e8:	08006d10 	cmplti	zero,at,436
 80060ec:	08006c48 	cmpgei	zero,at,433
 80060f0:	08006d10 	cmplti	zero,at,436
 80060f4:	08006d10 	cmplti	zero,at,436
 80060f8:	08006d10 	cmplti	zero,at,436
 80060fc:	08006d10 	cmplti	zero,at,436
 8006100:	08006d10 	cmplti	zero,at,436
 8006104:	08006d10 	cmplti	zero,at,436
 8006108:	08006c58 	cmpnei	zero,at,433
 800610c:	08006c80 	call	8006c8 <__reset-0x77ff938>
 8006110:	08006d10 	cmplti	zero,at,436
 8006114:	0800639c 	xori	zero,at,398
 8006118:	080063ac 	andhi	zero,at,398
 800611c:	08006d10 	cmplti	zero,at,436
 8006120:	080063fc 	xorhi	zero,at,399
 8006124:	0800640c 	andi	zero,at,400
 8006128:	0800640c 	andi	zero,at,400
 800612c:	0800640c 	andi	zero,at,400
 8006130:	0800640c 	andi	zero,at,400
 8006134:	0800640c 	andi	zero,at,400
 8006138:	0800640c 	andi	zero,at,400
 800613c:	0800640c 	andi	zero,at,400
 8006140:	0800640c 	andi	zero,at,400
 8006144:	0800640c 	andi	zero,at,400
 8006148:	08006d10 	cmplti	zero,at,436
 800614c:	08006d10 	cmplti	zero,at,436
 8006150:	08006d10 	cmplti	zero,at,436
 8006154:	08006d10 	cmplti	zero,at,436
 8006158:	08006d10 	cmplti	zero,at,436
 800615c:	08006d10 	cmplti	zero,at,436
 8006160:	08006d10 	cmplti	zero,at,436
 8006164:	08006d10 	cmplti	zero,at,436
 8006168:	08006d10 	cmplti	zero,at,436
 800616c:	08006d10 	cmplti	zero,at,436
 8006170:	08006450 	cmplti	zero,at,401
 8006174:	08006870 	cmpltui	zero,at,417
 8006178:	08006d10 	cmplti	zero,at,436
 800617c:	08006870 	cmpltui	zero,at,417
 8006180:	08006d10 	cmplti	zero,at,436
 8006184:	08006d10 	cmplti	zero,at,436
 8006188:	08006d10 	cmplti	zero,at,436
 800618c:	08006d10 	cmplti	zero,at,436
 8006190:	08006918 	cmpnei	zero,at,420
 8006194:	08006d10 	cmplti	zero,at,436
 8006198:	08006d10 	cmplti	zero,at,436
 800619c:	08006928 	cmpgeui	zero,at,420
 80061a0:	08006d10 	cmplti	zero,at,436
 80061a4:	08006d10 	cmplti	zero,at,436
 80061a8:	08006d10 	cmplti	zero,at,436
 80061ac:	08006d10 	cmplti	zero,at,436
 80061b0:	08006d10 	cmplti	zero,at,436
 80061b4:	0800696c 	andhi	zero,at,421
 80061b8:	08006d10 	cmplti	zero,at,436
 80061bc:	08006d10 	cmplti	zero,at,436
 80061c0:	080069a4 	muli	zero,at,422
 80061c4:	08006d10 	cmplti	zero,at,436
 80061c8:	08006d10 	cmplti	zero,at,436
 80061cc:	08006d10 	cmplti	zero,at,436
 80061d0:	08006d10 	cmplti	zero,at,436
 80061d4:	08006d10 	cmplti	zero,at,436
 80061d8:	08006d10 	cmplti	zero,at,436
 80061dc:	08006d10 	cmplti	zero,at,436
 80061e0:	08006d10 	cmplti	zero,at,436
 80061e4:	08006d10 	cmplti	zero,at,436
 80061e8:	08006d10 	cmplti	zero,at,436
 80061ec:	08006be0 	cmpeqi	zero,at,431
 80061f0:	08006b8c 	andi	zero,at,430
 80061f4:	08006870 	cmpltui	zero,at,417
 80061f8:	08006870 	cmpltui	zero,at,417
 80061fc:	08006870 	cmpltui	zero,at,417
 8006200:	08006bd0 	cmplti	zero,at,431
 8006204:	08006b8c 	andi	zero,at,430
 8006208:	08006d10 	cmplti	zero,at,436
 800620c:	08006d10 	cmplti	zero,at,436
 8006210:	08006aa8 	cmpgeui	zero,at,426
 8006214:	08006d10 	cmplti	zero,at,436
 8006218:	08006ac0 	call	8006ac <__reset-0x77ff954>
 800621c:	08006b00 	call	8006b0 <__reset-0x77ff950>
 8006220:	08006b40 	call	8006b4 <__reset-0x77ff94c>
 8006224:	08006a0c 	andi	zero,at,424
 8006228:	08006d10 	cmplti	zero,at,436
 800622c:	08006c94 	ori	zero,at,434
 8006230:	08006d10 	cmplti	zero,at,436
 8006234:	08006a1c 	xori	zero,at,424
 8006238:	08006d10 	cmplti	zero,at,436
 800623c:	08006d10 	cmplti	zero,at,436
 8006240:	08006a5c 	xori	zero,at,425
 8006244:	d9412a17 	ldw	r5,1192(sp)
 8006248:	8163c83a 	sub	r17,r16,r5
 800624c:	003f7d06 	br	8006044 <__alt_data_end+0xfc006044>
 8006250:	b809883a 	mov	r4,r23
 8006254:	b00b883a 	mov	r5,r22
 8006258:	800803c0 	call	800803c <__swsetup_r>
 800625c:	10002d1e 	bne	r2,zero,8006314 <___vfprintf_internal_r+0x3f8>
 8006260:	b0c0030b 	ldhu	r3,12(r22)
 8006264:	01000284 	movi	r4,10
 8006268:	1805883a 	mov	r2,r3
 800626c:	1080068c 	andi	r2,r2,26
 8006270:	113f541e 	bne	r2,r4,8005fc4 <__alt_data_end+0xfc005fc4>
 8006274:	b080038b 	ldhu	r2,14(r22)
 8006278:	113fffcc 	andi	r4,r2,65535
 800627c:	2120001c 	xori	r4,r4,32768
 8006280:	21200004 	addi	r4,r4,-32768
 8006284:	203f4f16 	blt	r4,zero,8005fc4 <__alt_data_end+0xfc005fc4>
 8006288:	b2c01917 	ldw	r11,100(r22)
 800628c:	b2800717 	ldw	r10,28(r22)
 8006290:	b2400917 	ldw	r9,36(r22)
 8006294:	d9812a17 	ldw	r6,1192(sp)
 8006298:	d9c12d17 	ldw	r7,1204(sp)
 800629c:	02010004 	movi	r8,1024
 80062a0:	18ffff4c 	andi	r3,r3,65533
 80062a4:	d881078d 	sth	r2,1054(sp)
 80062a8:	b809883a 	mov	r4,r23
 80062ac:	d8800404 	addi	r2,sp,16
 80062b0:	d9410404 	addi	r5,sp,1040
 80062b4:	d8c1070d 	sth	r3,1052(sp)
 80062b8:	dac11d15 	stw	r11,1140(sp)
 80062bc:	da810b15 	stw	r10,1068(sp)
 80062c0:	da410d15 	stw	r9,1076(sp)
 80062c4:	d8810415 	stw	r2,1040(sp)
 80062c8:	d8810815 	stw	r2,1056(sp)
 80062cc:	da010615 	stw	r8,1048(sp)
 80062d0:	da010915 	stw	r8,1060(sp)
 80062d4:	d8010a15 	stw	zero,1064(sp)
 80062d8:	8005f1c0 	call	8005f1c <___vfprintf_internal_r>
 80062dc:	1021883a 	mov	r16,r2
 80062e0:	10000416 	blt	r2,zero,80062f4 <___vfprintf_internal_r+0x3d8>
 80062e4:	b809883a 	mov	r4,r23
 80062e8:	d9410404 	addi	r5,sp,1040
 80062ec:	8009abc0 	call	8009abc <_fflush_r>
 80062f0:	1007301e 	bne	r2,zero,8007fb4 <___vfprintf_internal_r+0x2098>
 80062f4:	d881070b 	ldhu	r2,1052(sp)
 80062f8:	1080100c 	andi	r2,r2,64
 80062fc:	10000326 	beq	r2,zero,800630c <___vfprintf_internal_r+0x3f0>
 8006300:	b080030b 	ldhu	r2,12(r22)
 8006304:	10801014 	ori	r2,r2,64
 8006308:	b080030d 	sth	r2,12(r22)
 800630c:	8005883a 	mov	r2,r16
 8006310:	00000106 	br	8006318 <___vfprintf_internal_r+0x3fc>
 8006314:	00bfffc4 	movi	r2,-1
 8006318:	dfc14917 	ldw	ra,1316(sp)
 800631c:	df014817 	ldw	fp,1312(sp)
 8006320:	ddc14717 	ldw	r23,1308(sp)
 8006324:	dd814617 	ldw	r22,1304(sp)
 8006328:	dd414517 	ldw	r21,1300(sp)
 800632c:	dd014417 	ldw	r20,1296(sp)
 8006330:	dcc14317 	ldw	r19,1292(sp)
 8006334:	dc814217 	ldw	r18,1288(sp)
 8006338:	dc414117 	ldw	r17,1284(sp)
 800633c:	dc014017 	ldw	r16,1280(sp)
 8006340:	dec14a04 	addi	sp,sp,1320
 8006344:	f800283a 	ret
 8006348:	b809883a 	mov	r4,r23
 800634c:	b00b883a 	mov	r5,r22
 8006350:	d9811e04 	addi	r6,sp,1144
 8006354:	800dd300 	call	800dd30 <__sprint_r>
 8006358:	1000081e 	bne	r2,zero,800637c <___vfprintf_internal_r+0x460>
 800635c:	da000404 	addi	r8,sp,16
 8006360:	003f4506 	br	8006078 <__alt_data_end+0xfc006078>
 8006364:	d8812017 	ldw	r2,1152(sp)
 8006368:	10000426 	beq	r2,zero,800637c <___vfprintf_internal_r+0x460>
 800636c:	b809883a 	mov	r4,r23
 8006370:	b00b883a 	mov	r5,r22
 8006374:	d9811e04 	addi	r6,sp,1144
 8006378:	800dd300 	call	800dd30 <__sprint_r>
 800637c:	b080030b 	ldhu	r2,12(r22)
 8006380:	1080100c 	andi	r2,r2,64
 8006384:	103fe31e 	bne	r2,zero,8006314 <__alt_data_end+0xfc006314>
 8006388:	d8812f17 	ldw	r2,1212(sp)
 800638c:	003fe206 	br	8006318 <__alt_data_end+0xfc006318>
 8006390:	b809883a 	mov	r4,r23
 8006394:	800a0780 	call	800a078 <__sinit>
 8006398:	003ef806 	br	8005f7c <__alt_data_end+0xfc005f7c>
 800639c:	e005883a 	mov	r2,fp
 80063a0:	9cc00114 	ori	r19,r19,4
 80063a4:	e4000007 	ldb	r16,0(fp)
 80063a8:	003f4406 	br	80060bc <__alt_data_end+0xfc0060bc>
 80063ac:	e4000007 	ldb	r16,0(fp)
 80063b0:	01000a84 	movi	r4,42
 80063b4:	e0800044 	addi	r2,fp,1
 80063b8:	8106f626 	beq	r16,r4,8007f94 <___vfprintf_internal_r+0x2078>
 80063bc:	857ff404 	addi	r21,r16,-48
 80063c0:	1039883a 	mov	fp,r2
 80063c4:	0013883a 	mov	r9,zero
 80063c8:	957f3d36 	bltu	r18,r21,80060c0 <__alt_data_end+0xfc0060c0>
 80063cc:	0009883a 	mov	r4,zero
 80063d0:	01400284 	movi	r5,10
 80063d4:	80027c00 	call	80027c0 <__mulsi3>
 80063d8:	e4000007 	ldb	r16,0(fp)
 80063dc:	a889883a 	add	r4,r21,r2
 80063e0:	e7000044 	addi	fp,fp,1
 80063e4:	857ff404 	addi	r21,r16,-48
 80063e8:	957ff92e 	bgeu	r18,r21,80063d0 <__alt_data_end+0xfc0063d0>
 80063ec:	2013883a 	mov	r9,r4
 80063f0:	203f330e 	bge	r4,zero,80060c0 <__alt_data_end+0xfc0060c0>
 80063f4:	027fffc4 	movi	r9,-1
 80063f8:	003f3106 	br	80060c0 <__alt_data_end+0xfc0060c0>
 80063fc:	9cc02014 	ori	r19,r19,128
 8006400:	e005883a 	mov	r2,fp
 8006404:	e4000007 	ldb	r16,0(fp)
 8006408:	003f2c06 	br	80060bc <__alt_data_end+0xfc0060bc>
 800640c:	857ff404 	addi	r21,r16,-48
 8006410:	d8012e15 	stw	zero,1208(sp)
 8006414:	e021883a 	mov	r16,fp
 8006418:	0009883a 	mov	r4,zero
 800641c:	da412c15 	stw	r9,1200(sp)
 8006420:	01400284 	movi	r5,10
 8006424:	80027c00 	call	80027c0 <__mulsi3>
 8006428:	81400007 	ldb	r5,0(r16)
 800642c:	1549883a 	add	r4,r2,r21
 8006430:	e7000044 	addi	fp,fp,1
 8006434:	2d7ff404 	addi	r21,r5,-48
 8006438:	e021883a 	mov	r16,fp
 800643c:	957ff82e 	bgeu	r18,r21,8006420 <__alt_data_end+0xfc006420>
 8006440:	2821883a 	mov	r16,r5
 8006444:	d9012e15 	stw	r4,1208(sp)
 8006448:	da412c17 	ldw	r9,1200(sp)
 800644c:	003f1c06 	br	80060c0 <__alt_data_end+0xfc0060c0>
 8006450:	da012a17 	ldw	r8,1192(sp)
 8006454:	df012a15 	stw	fp,1192(sp)
 8006458:	9839883a 	mov	fp,r19
 800645c:	dcc12b03 	ldbu	r19,1196(sp)
 8006460:	e7000414 	ori	fp,fp,16
 8006464:	e080080c 	andi	r2,fp,32
 8006468:	dcc12785 	stb	r19,1182(sp)
 800646c:	d8c12d17 	ldw	r3,1204(sp)
 8006470:	1001ce26 	beq	r2,zero,8006bac <___vfprintf_internal_r+0xc90>
 8006474:	d9012d17 	ldw	r4,1204(sp)
 8006478:	18800117 	ldw	r2,4(r3)
 800647c:	1c800017 	ldw	r18,0(r3)
 8006480:	21000204 	addi	r4,r4,8
 8006484:	d9012d15 	stw	r4,1204(sp)
 8006488:	102b883a 	mov	r21,r2
 800648c:	10044916 	blt	r2,zero,80075b4 <___vfprintf_internal_r+0x1698>
 8006490:	dcc12783 	ldbu	r19,1182(sp)
 8006494:	da413215 	stw	r9,1224(sp)
 8006498:	00800044 	movi	r2,1
 800649c:	9546b03a 	or	r3,r18,r21
 80064a0:	48000216 	blt	r9,zero,80064ac <___vfprintf_internal_r+0x590>
 80064a4:	013fdfc4 	movi	r4,-129
 80064a8:	e138703a 	and	fp,fp,r4
 80064ac:	1802251e 	bne	r3,zero,8006d44 <___vfprintf_internal_r+0xe28>
 80064b0:	48031726 	beq	r9,zero,8007110 <___vfprintf_internal_r+0x11f4>
 80064b4:	10803fcc 	andi	r2,r2,255
 80064b8:	00c00044 	movi	r3,1
 80064bc:	10c24526 	beq	r2,r3,8006dd4 <___vfprintf_internal_r+0xeb8>
 80064c0:	00c00084 	movi	r3,2
 80064c4:	10c33426 	beq	r2,r3,8007198 <___vfprintf_internal_r+0x127c>
 80064c8:	d8c10e04 	addi	r3,sp,1080
 80064cc:	9008d0fa 	srli	r4,r18,3
 80064d0:	a80a977a 	slli	r5,r21,29
 80064d4:	a82ad0fa 	srli	r21,r21,3
 80064d8:	948001cc 	andi	r18,r18,7
 80064dc:	90800c04 	addi	r2,r18,48
 80064e0:	18ffffc4 	addi	r3,r3,-1
 80064e4:	2924b03a 	or	r18,r5,r4
 80064e8:	18800005 	stb	r2,0(r3)
 80064ec:	9548b03a 	or	r4,r18,r21
 80064f0:	203ff61e 	bne	r4,zero,80064cc <__alt_data_end+0xfc0064cc>
 80064f4:	e100004c 	andi	r4,fp,1
 80064f8:	d8c13115 	stw	r3,1220(sp)
 80064fc:	20039a1e 	bne	r4,zero,8007368 <___vfprintf_internal_r+0x144c>
 8006500:	d8812817 	ldw	r2,1184(sp)
 8006504:	10e3c83a 	sub	r17,r2,r3
 8006508:	8805883a 	mov	r2,r17
 800650c:	8a40010e 	bge	r17,r9,8006514 <___vfprintf_internal_r+0x5f8>
 8006510:	4805883a 	mov	r2,r9
 8006514:	d8812b15 	stw	r2,1196(sp)
 8006518:	d8013415 	stw	zero,1232(sp)
 800651c:	98803fcc 	andi	r2,r19,255
 8006520:	1080201c 	xori	r2,r2,128
 8006524:	10bfe004 	addi	r2,r2,-128
 8006528:	10000326 	beq	r2,zero,8006538 <___vfprintf_internal_r+0x61c>
 800652c:	d8c12b17 	ldw	r3,1196(sp)
 8006530:	18c00044 	addi	r3,r3,1
 8006534:	d8c12b15 	stw	r3,1196(sp)
 8006538:	e0c0008c 	andi	r3,fp,2
 800653c:	d8c12c15 	stw	r3,1200(sp)
 8006540:	18000326 	beq	r3,zero,8006550 <___vfprintf_internal_r+0x634>
 8006544:	d8c12b17 	ldw	r3,1196(sp)
 8006548:	18c00084 	addi	r3,r3,2
 800654c:	d8c12b15 	stw	r3,1196(sp)
 8006550:	e0c0210c 	andi	r3,fp,132
 8006554:	d8c13015 	stw	r3,1216(sp)
 8006558:	1801f81e 	bne	r3,zero,8006d3c <___vfprintf_internal_r+0xe20>
 800655c:	d9012e17 	ldw	r4,1208(sp)
 8006560:	d8c12b17 	ldw	r3,1196(sp)
 8006564:	20ebc83a 	sub	r21,r4,r3
 8006568:	0541f40e 	bge	zero,r21,8006d3c <___vfprintf_internal_r+0xe20>
 800656c:	02400404 	movi	r9,16
 8006570:	d8c12017 	ldw	r3,1152(sp)
 8006574:	d8811f17 	ldw	r2,1148(sp)
 8006578:	4d45750e 	bge	r9,r21,8007b50 <___vfprintf_internal_r+0x1c34>
 800657c:	01420074 	movhi	r5,2049
 8006580:	295b4b84 	addi	r5,r5,27950
 8006584:	d9413615 	stw	r5,1240(sp)
 8006588:	4827883a 	mov	r19,r9
 800658c:	048001c4 	movi	r18,7
 8006590:	00000306 	br	80065a0 <___vfprintf_internal_r+0x684>
 8006594:	ad7ffc04 	addi	r21,r21,-16
 8006598:	42000204 	addi	r8,r8,8
 800659c:	9d40130e 	bge	r19,r21,80065ec <___vfprintf_internal_r+0x6d0>
 80065a0:	01020074 	movhi	r4,2049
 80065a4:	18c00404 	addi	r3,r3,16
 80065a8:	10800044 	addi	r2,r2,1
 80065ac:	211b4b84 	addi	r4,r4,27950
 80065b0:	41000015 	stw	r4,0(r8)
 80065b4:	44c00115 	stw	r19,4(r8)
 80065b8:	d8c12015 	stw	r3,1152(sp)
 80065bc:	d8811f15 	stw	r2,1148(sp)
 80065c0:	90bff40e 	bge	r18,r2,8006594 <__alt_data_end+0xfc006594>
 80065c4:	b809883a 	mov	r4,r23
 80065c8:	b00b883a 	mov	r5,r22
 80065cc:	d9811e04 	addi	r6,sp,1144
 80065d0:	800dd300 	call	800dd30 <__sprint_r>
 80065d4:	103f691e 	bne	r2,zero,800637c <__alt_data_end+0xfc00637c>
 80065d8:	ad7ffc04 	addi	r21,r21,-16
 80065dc:	d8c12017 	ldw	r3,1152(sp)
 80065e0:	d8811f17 	ldw	r2,1148(sp)
 80065e4:	da000404 	addi	r8,sp,16
 80065e8:	9d7fed16 	blt	r19,r21,80065a0 <__alt_data_end+0xfc0065a0>
 80065ec:	d9413617 	ldw	r5,1240(sp)
 80065f0:	a8c7883a 	add	r3,r21,r3
 80065f4:	10800044 	addi	r2,r2,1
 80065f8:	41400015 	stw	r5,0(r8)
 80065fc:	45400115 	stw	r21,4(r8)
 8006600:	d8c12015 	stw	r3,1152(sp)
 8006604:	d8811f15 	stw	r2,1148(sp)
 8006608:	010001c4 	movi	r4,7
 800660c:	20832b16 	blt	r4,r2,80072bc <___vfprintf_internal_r+0x13a0>
 8006610:	d8812787 	ldb	r2,1182(sp)
 8006614:	42000204 	addi	r8,r8,8
 8006618:	10000c26 	beq	r2,zero,800664c <___vfprintf_internal_r+0x730>
 800661c:	d8811f17 	ldw	r2,1148(sp)
 8006620:	d9012784 	addi	r4,sp,1182
 8006624:	18c00044 	addi	r3,r3,1
 8006628:	10800044 	addi	r2,r2,1
 800662c:	41000015 	stw	r4,0(r8)
 8006630:	01000044 	movi	r4,1
 8006634:	41000115 	stw	r4,4(r8)
 8006638:	d8c12015 	stw	r3,1152(sp)
 800663c:	d8811f15 	stw	r2,1148(sp)
 8006640:	010001c4 	movi	r4,7
 8006644:	2082c416 	blt	r4,r2,8007158 <___vfprintf_internal_r+0x123c>
 8006648:	42000204 	addi	r8,r8,8
 800664c:	d8812c17 	ldw	r2,1200(sp)
 8006650:	10000c26 	beq	r2,zero,8006684 <___vfprintf_internal_r+0x768>
 8006654:	d8811f17 	ldw	r2,1148(sp)
 8006658:	d9012704 	addi	r4,sp,1180
 800665c:	18c00084 	addi	r3,r3,2
 8006660:	10800044 	addi	r2,r2,1
 8006664:	41000015 	stw	r4,0(r8)
 8006668:	01000084 	movi	r4,2
 800666c:	41000115 	stw	r4,4(r8)
 8006670:	d8c12015 	stw	r3,1152(sp)
 8006674:	d8811f15 	stw	r2,1148(sp)
 8006678:	010001c4 	movi	r4,7
 800667c:	2082be16 	blt	r4,r2,8007178 <___vfprintf_internal_r+0x125c>
 8006680:	42000204 	addi	r8,r8,8
 8006684:	d9013017 	ldw	r4,1216(sp)
 8006688:	00802004 	movi	r2,128
 800668c:	20822026 	beq	r4,r2,8006f10 <___vfprintf_internal_r+0xff4>
 8006690:	d9413217 	ldw	r5,1224(sp)
 8006694:	2c67c83a 	sub	r19,r5,r17
 8006698:	04c0260e 	bge	zero,r19,8006734 <___vfprintf_internal_r+0x818>
 800669c:	05400404 	movi	r21,16
 80066a0:	d8811f17 	ldw	r2,1148(sp)
 80066a4:	acc4720e 	bge	r21,r19,8007870 <___vfprintf_internal_r+0x1954>
 80066a8:	01420074 	movhi	r5,2049
 80066ac:	295b4784 	addi	r5,r5,27934
 80066b0:	d9412c15 	stw	r5,1200(sp)
 80066b4:	048001c4 	movi	r18,7
 80066b8:	00000306 	br	80066c8 <___vfprintf_internal_r+0x7ac>
 80066bc:	9cfffc04 	addi	r19,r19,-16
 80066c0:	42000204 	addi	r8,r8,8
 80066c4:	acc0110e 	bge	r21,r19,800670c <___vfprintf_internal_r+0x7f0>
 80066c8:	18c00404 	addi	r3,r3,16
 80066cc:	10800044 	addi	r2,r2,1
 80066d0:	45000015 	stw	r20,0(r8)
 80066d4:	45400115 	stw	r21,4(r8)
 80066d8:	d8c12015 	stw	r3,1152(sp)
 80066dc:	d8811f15 	stw	r2,1148(sp)
 80066e0:	90bff60e 	bge	r18,r2,80066bc <__alt_data_end+0xfc0066bc>
 80066e4:	b809883a 	mov	r4,r23
 80066e8:	b00b883a 	mov	r5,r22
 80066ec:	d9811e04 	addi	r6,sp,1144
 80066f0:	800dd300 	call	800dd30 <__sprint_r>
 80066f4:	103f211e 	bne	r2,zero,800637c <__alt_data_end+0xfc00637c>
 80066f8:	9cfffc04 	addi	r19,r19,-16
 80066fc:	d8c12017 	ldw	r3,1152(sp)
 8006700:	d8811f17 	ldw	r2,1148(sp)
 8006704:	da000404 	addi	r8,sp,16
 8006708:	acffef16 	blt	r21,r19,80066c8 <__alt_data_end+0xfc0066c8>
 800670c:	d9012c17 	ldw	r4,1200(sp)
 8006710:	1cc7883a 	add	r3,r3,r19
 8006714:	10800044 	addi	r2,r2,1
 8006718:	41000015 	stw	r4,0(r8)
 800671c:	44c00115 	stw	r19,4(r8)
 8006720:	d8c12015 	stw	r3,1152(sp)
 8006724:	d8811f15 	stw	r2,1148(sp)
 8006728:	010001c4 	movi	r4,7
 800672c:	20828216 	blt	r4,r2,8007138 <___vfprintf_internal_r+0x121c>
 8006730:	42000204 	addi	r8,r8,8
 8006734:	e080400c 	andi	r2,fp,256
 8006738:	1001ac1e 	bne	r2,zero,8006dec <___vfprintf_internal_r+0xed0>
 800673c:	d8811f17 	ldw	r2,1148(sp)
 8006740:	d9413117 	ldw	r5,1220(sp)
 8006744:	1c47883a 	add	r3,r3,r17
 8006748:	10800044 	addi	r2,r2,1
 800674c:	41400015 	stw	r5,0(r8)
 8006750:	44400115 	stw	r17,4(r8)
 8006754:	d8c12015 	stw	r3,1152(sp)
 8006758:	d8811f15 	stw	r2,1148(sp)
 800675c:	010001c4 	movi	r4,7
 8006760:	20825d16 	blt	r4,r2,80070d8 <___vfprintf_internal_r+0x11bc>
 8006764:	42000204 	addi	r8,r8,8
 8006768:	e080010c 	andi	r2,fp,4
 800676c:	10003126 	beq	r2,zero,8006834 <___vfprintf_internal_r+0x918>
 8006770:	d8812e17 	ldw	r2,1208(sp)
 8006774:	d9012b17 	ldw	r4,1196(sp)
 8006778:	1121c83a 	sub	r16,r2,r4
 800677c:	04002d0e 	bge	zero,r16,8006834 <___vfprintf_internal_r+0x918>
 8006780:	04400404 	movi	r17,16
 8006784:	d8811f17 	ldw	r2,1148(sp)
 8006788:	8c05340e 	bge	r17,r16,8007c5c <___vfprintf_internal_r+0x1d40>
 800678c:	01020074 	movhi	r4,2049
 8006790:	211b4b84 	addi	r4,r4,27950
 8006794:	d9013615 	stw	r4,1240(sp)
 8006798:	048001c4 	movi	r18,7
 800679c:	00000306 	br	80067ac <___vfprintf_internal_r+0x890>
 80067a0:	843ffc04 	addi	r16,r16,-16
 80067a4:	42000204 	addi	r8,r8,8
 80067a8:	8c00130e 	bge	r17,r16,80067f8 <___vfprintf_internal_r+0x8dc>
 80067ac:	01420074 	movhi	r5,2049
 80067b0:	18c00404 	addi	r3,r3,16
 80067b4:	10800044 	addi	r2,r2,1
 80067b8:	295b4b84 	addi	r5,r5,27950
 80067bc:	41400015 	stw	r5,0(r8)
 80067c0:	44400115 	stw	r17,4(r8)
 80067c4:	d8c12015 	stw	r3,1152(sp)
 80067c8:	d8811f15 	stw	r2,1148(sp)
 80067cc:	90bff40e 	bge	r18,r2,80067a0 <__alt_data_end+0xfc0067a0>
 80067d0:	b809883a 	mov	r4,r23
 80067d4:	b00b883a 	mov	r5,r22
 80067d8:	d9811e04 	addi	r6,sp,1144
 80067dc:	800dd300 	call	800dd30 <__sprint_r>
 80067e0:	103ee61e 	bne	r2,zero,800637c <__alt_data_end+0xfc00637c>
 80067e4:	843ffc04 	addi	r16,r16,-16
 80067e8:	d8c12017 	ldw	r3,1152(sp)
 80067ec:	d8811f17 	ldw	r2,1148(sp)
 80067f0:	da000404 	addi	r8,sp,16
 80067f4:	8c3fed16 	blt	r17,r16,80067ac <__alt_data_end+0xfc0067ac>
 80067f8:	d9013617 	ldw	r4,1240(sp)
 80067fc:	1c07883a 	add	r3,r3,r16
 8006800:	10800044 	addi	r2,r2,1
 8006804:	41000015 	stw	r4,0(r8)
 8006808:	44000115 	stw	r16,4(r8)
 800680c:	d8c12015 	stw	r3,1152(sp)
 8006810:	d8811f15 	stw	r2,1148(sp)
 8006814:	010001c4 	movi	r4,7
 8006818:	2080060e 	bge	r4,r2,8006834 <___vfprintf_internal_r+0x918>
 800681c:	b809883a 	mov	r4,r23
 8006820:	b00b883a 	mov	r5,r22
 8006824:	d9811e04 	addi	r6,sp,1144
 8006828:	800dd300 	call	800dd30 <__sprint_r>
 800682c:	103ed31e 	bne	r2,zero,800637c <__alt_data_end+0xfc00637c>
 8006830:	d8c12017 	ldw	r3,1152(sp)
 8006834:	df012b17 	ldw	fp,1196(sp)
 8006838:	d9412e17 	ldw	r5,1208(sp)
 800683c:	e140010e 	bge	fp,r5,8006844 <___vfprintf_internal_r+0x928>
 8006840:	2839883a 	mov	fp,r5
 8006844:	d8812f17 	ldw	r2,1212(sp)
 8006848:	1705883a 	add	r2,r2,fp
 800684c:	d8812f15 	stw	r2,1212(sp)
 8006850:	1802291e 	bne	r3,zero,80070f8 <___vfprintf_internal_r+0x11dc>
 8006854:	d8c12a17 	ldw	r3,1192(sp)
 8006858:	d8011f15 	stw	zero,1148(sp)
 800685c:	da000404 	addi	r8,sp,16
 8006860:	18800007 	ldb	r2,0(r3)
 8006864:	103ded1e 	bne	r2,zero,800601c <__alt_data_end+0xfc00601c>
 8006868:	dc012a17 	ldw	r16,1192(sp)
 800686c:	003e0506 	br	8006084 <__alt_data_end+0xfc006084>
 8006870:	d9012d17 	ldw	r4,1204(sp)
 8006874:	d9412d17 	ldw	r5,1204(sp)
 8006878:	da012a17 	ldw	r8,1192(sp)
 800687c:	21000017 	ldw	r4,0(r4)
 8006880:	29400117 	ldw	r5,4(r5)
 8006884:	df012a15 	stw	fp,1192(sp)
 8006888:	9839883a 	mov	fp,r19
 800688c:	dcc12b03 	ldbu	r19,1196(sp)
 8006890:	d9013715 	stw	r4,1244(sp)
 8006894:	d9413915 	stw	r5,1252(sp)
 8006898:	da013f15 	stw	r8,1276(sp)
 800689c:	da413e15 	stw	r9,1272(sp)
 80068a0:	dcc12785 	stb	r19,1182(sp)
 80068a4:	800c6ec0 	call	800c6ec <__fpclassifyd>
 80068a8:	d8c12d17 	ldw	r3,1204(sp)
 80068ac:	04400044 	movi	r17,1
 80068b0:	da013f17 	ldw	r8,1276(sp)
 80068b4:	1c800204 	addi	r18,r3,8
 80068b8:	da413e17 	ldw	r9,1272(sp)
 80068bc:	d9013717 	ldw	r4,1244(sp)
 80068c0:	d9413917 	ldw	r5,1252(sp)
 80068c4:	1443451e 	bne	r2,r17,80075dc <___vfprintf_internal_r+0x16c0>
 80068c8:	000d883a 	mov	r6,zero
 80068cc:	000f883a 	mov	r7,zero
 80068d0:	8011be40 	call	8011be4 <__ledf2>
 80068d4:	da013f17 	ldw	r8,1276(sp)
 80068d8:	1004fe16 	blt	r2,zero,8007cd4 <___vfprintf_internal_r+0x1db8>
 80068dc:	dcc12783 	ldbu	r19,1182(sp)
 80068e0:	008011c4 	movi	r2,71
 80068e4:	14045d0e 	bge	r2,r16,8007a5c <___vfprintf_internal_r+0x1b40>
 80068e8:	01420074 	movhi	r5,2049
 80068ec:	295b3004 	addi	r5,r5,27840
 80068f0:	d9413115 	stw	r5,1220(sp)
 80068f4:	00c000c4 	movi	r3,3
 80068f8:	00bfdfc4 	movi	r2,-129
 80068fc:	d8c12b15 	stw	r3,1196(sp)
 8006900:	e0b8703a 	and	fp,fp,r2
 8006904:	dc812d15 	stw	r18,1204(sp)
 8006908:	1823883a 	mov	r17,r3
 800690c:	d8013215 	stw	zero,1224(sp)
 8006910:	d8013415 	stw	zero,1232(sp)
 8006914:	003f0106 	br	800651c <__alt_data_end+0xfc00651c>
 8006918:	9cc00214 	ori	r19,r19,8
 800691c:	e005883a 	mov	r2,fp
 8006920:	e4000007 	ldb	r16,0(fp)
 8006924:	003de506 	br	80060bc <__alt_data_end+0xfc0060bc>
 8006928:	da012a17 	ldw	r8,1192(sp)
 800692c:	df012a15 	stw	fp,1192(sp)
 8006930:	9f000414 	ori	fp,r19,16
 8006934:	e0c0080c 	andi	r3,fp,32
 8006938:	d8812d17 	ldw	r2,1204(sp)
 800693c:	18007626 	beq	r3,zero,8006b18 <___vfprintf_internal_r+0xbfc>
 8006940:	d9412d17 	ldw	r5,1204(sp)
 8006944:	14800017 	ldw	r18,0(r2)
 8006948:	15400117 	ldw	r21,4(r2)
 800694c:	29400204 	addi	r5,r5,8
 8006950:	d9412d15 	stw	r5,1204(sp)
 8006954:	0005883a 	mov	r2,zero
 8006958:	9546b03a 	or	r3,r18,r21
 800695c:	d8012785 	stb	zero,1182(sp)
 8006960:	da413215 	stw	r9,1224(sp)
 8006964:	0027883a 	mov	r19,zero
 8006968:	003ecd06 	br	80064a0 <__alt_data_end+0xfc0064a0>
 800696c:	da012a17 	ldw	r8,1192(sp)
 8006970:	df012a15 	stw	fp,1192(sp)
 8006974:	9f000414 	ori	fp,r19,16
 8006978:	e0c0080c 	andi	r3,fp,32
 800697c:	d8812d17 	ldw	r2,1204(sp)
 8006980:	18002c26 	beq	r3,zero,8006a34 <___vfprintf_internal_r+0xb18>
 8006984:	d9012d17 	ldw	r4,1204(sp)
 8006988:	14800017 	ldw	r18,0(r2)
 800698c:	15400117 	ldw	r21,4(r2)
 8006990:	21000204 	addi	r4,r4,8
 8006994:	d9012d15 	stw	r4,1204(sp)
 8006998:	00800044 	movi	r2,1
 800699c:	9546b03a 	or	r3,r18,r21
 80069a0:	003fee06 	br	800695c <__alt_data_end+0xfc00695c>
 80069a4:	da012a17 	ldw	r8,1192(sp)
 80069a8:	df012a15 	stw	fp,1192(sp)
 80069ac:	9839883a 	mov	fp,r19
 80069b0:	dcc12b03 	ldbu	r19,1196(sp)
 80069b4:	01420074 	movhi	r5,2049
 80069b8:	295b3304 	addi	r5,r5,27852
 80069bc:	dcc12785 	stb	r19,1182(sp)
 80069c0:	d9413b15 	stw	r5,1260(sp)
 80069c4:	e0c0080c 	andi	r3,fp,32
 80069c8:	d8812d17 	ldw	r2,1204(sp)
 80069cc:	18002e26 	beq	r3,zero,8006a88 <___vfprintf_internal_r+0xb6c>
 80069d0:	d9412d17 	ldw	r5,1204(sp)
 80069d4:	14800017 	ldw	r18,0(r2)
 80069d8:	15400117 	ldw	r21,4(r2)
 80069dc:	29400204 	addi	r5,r5,8
 80069e0:	d9412d15 	stw	r5,1204(sp)
 80069e4:	e080004c 	andi	r2,fp,1
 80069e8:	10025c26 	beq	r2,zero,800735c <___vfprintf_internal_r+0x1440>
 80069ec:	9546b03a 	or	r3,r18,r21
 80069f0:	18038f26 	beq	r3,zero,8007830 <___vfprintf_internal_r+0x1914>
 80069f4:	00800c04 	movi	r2,48
 80069f8:	d8812705 	stb	r2,1180(sp)
 80069fc:	dc012745 	stb	r16,1181(sp)
 8006a00:	e7000094 	ori	fp,fp,2
 8006a04:	00800084 	movi	r2,2
 8006a08:	003fd406 	br	800695c <__alt_data_end+0xfc00695c>
 8006a0c:	9cc00814 	ori	r19,r19,32
 8006a10:	e005883a 	mov	r2,fp
 8006a14:	e4000007 	ldb	r16,0(fp)
 8006a18:	003da806 	br	80060bc <__alt_data_end+0xfc0060bc>
 8006a1c:	da012a17 	ldw	r8,1192(sp)
 8006a20:	df012a15 	stw	fp,1192(sp)
 8006a24:	9839883a 	mov	fp,r19
 8006a28:	e0c0080c 	andi	r3,fp,32
 8006a2c:	d8812d17 	ldw	r2,1204(sp)
 8006a30:	183fd41e 	bne	r3,zero,8006984 <__alt_data_end+0xfc006984>
 8006a34:	e0c0040c 	andi	r3,fp,16
 8006a38:	18035f26 	beq	r3,zero,80077b8 <___vfprintf_internal_r+0x189c>
 8006a3c:	d9412d17 	ldw	r5,1204(sp)
 8006a40:	14800017 	ldw	r18,0(r2)
 8006a44:	002b883a 	mov	r21,zero
 8006a48:	29400104 	addi	r5,r5,4
 8006a4c:	d9412d15 	stw	r5,1204(sp)
 8006a50:	00800044 	movi	r2,1
 8006a54:	9007883a 	mov	r3,r18
 8006a58:	003fc006 	br	800695c <__alt_data_end+0xfc00695c>
 8006a5c:	da012a17 	ldw	r8,1192(sp)
 8006a60:	df012a15 	stw	fp,1192(sp)
 8006a64:	9839883a 	mov	fp,r19
 8006a68:	dcc12b03 	ldbu	r19,1196(sp)
 8006a6c:	01020074 	movhi	r4,2049
 8006a70:	211b3804 	addi	r4,r4,27872
 8006a74:	d9013b15 	stw	r4,1260(sp)
 8006a78:	dcc12785 	stb	r19,1182(sp)
 8006a7c:	e0c0080c 	andi	r3,fp,32
 8006a80:	d8812d17 	ldw	r2,1204(sp)
 8006a84:	183fd21e 	bne	r3,zero,80069d0 <__alt_data_end+0xfc0069d0>
 8006a88:	e0c0040c 	andi	r3,fp,16
 8006a8c:	18035426 	beq	r3,zero,80077e0 <___vfprintf_internal_r+0x18c4>
 8006a90:	d8c12d17 	ldw	r3,1204(sp)
 8006a94:	14800017 	ldw	r18,0(r2)
 8006a98:	002b883a 	mov	r21,zero
 8006a9c:	18c00104 	addi	r3,r3,4
 8006aa0:	d8c12d15 	stw	r3,1204(sp)
 8006aa4:	003fcf06 	br	80069e4 <__alt_data_end+0xfc0069e4>
 8006aa8:	e4000007 	ldb	r16,0(fp)
 8006aac:	00801b04 	movi	r2,108
 8006ab0:	8083f726 	beq	r16,r2,8007a90 <___vfprintf_internal_r+0x1b74>
 8006ab4:	9cc00414 	ori	r19,r19,16
 8006ab8:	e005883a 	mov	r2,fp
 8006abc:	003d7f06 	br	80060bc <__alt_data_end+0xfc0060bc>
 8006ac0:	da012a17 	ldw	r8,1192(sp)
 8006ac4:	df012a15 	stw	fp,1192(sp)
 8006ac8:	9839883a 	mov	fp,r19
 8006acc:	dcc12b03 	ldbu	r19,1196(sp)
 8006ad0:	e080080c 	andi	r2,fp,32
 8006ad4:	dcc12785 	stb	r19,1182(sp)
 8006ad8:	10032226 	beq	r2,zero,8007764 <___vfprintf_internal_r+0x1848>
 8006adc:	d9412d17 	ldw	r5,1204(sp)
 8006ae0:	d9012f17 	ldw	r4,1212(sp)
 8006ae4:	28800017 	ldw	r2,0(r5)
 8006ae8:	2007d7fa 	srai	r3,r4,31
 8006aec:	29400104 	addi	r5,r5,4
 8006af0:	d9412d15 	stw	r5,1204(sp)
 8006af4:	11000015 	stw	r4,0(r2)
 8006af8:	10c00115 	stw	r3,4(r2)
 8006afc:	003d4406 	br	8006010 <__alt_data_end+0xfc006010>
 8006b00:	da012a17 	ldw	r8,1192(sp)
 8006b04:	df012a15 	stw	fp,1192(sp)
 8006b08:	9839883a 	mov	fp,r19
 8006b0c:	e0c0080c 	andi	r3,fp,32
 8006b10:	d8812d17 	ldw	r2,1204(sp)
 8006b14:	183f8a1e 	bne	r3,zero,8006940 <__alt_data_end+0xfc006940>
 8006b18:	e0c0040c 	andi	r3,fp,16
 8006b1c:	18031c26 	beq	r3,zero,8007790 <___vfprintf_internal_r+0x1874>
 8006b20:	14800017 	ldw	r18,0(r2)
 8006b24:	d8812d17 	ldw	r2,1204(sp)
 8006b28:	002b883a 	mov	r21,zero
 8006b2c:	9007883a 	mov	r3,r18
 8006b30:	10800104 	addi	r2,r2,4
 8006b34:	d8812d15 	stw	r2,1204(sp)
 8006b38:	0005883a 	mov	r2,zero
 8006b3c:	003f8706 	br	800695c <__alt_data_end+0xfc00695c>
 8006b40:	d9412d17 	ldw	r5,1204(sp)
 8006b44:	00800c04 	movi	r2,48
 8006b48:	d8812705 	stb	r2,1180(sp)
 8006b4c:	2c800017 	ldw	r18,0(r5)
 8006b50:	00801e04 	movi	r2,120
 8006b54:	d8812745 	stb	r2,1181(sp)
 8006b58:	00820074 	movhi	r2,2049
 8006b5c:	109b3804 	addi	r2,r2,27872
 8006b60:	29400104 	addi	r5,r5,4
 8006b64:	da012a17 	ldw	r8,1192(sp)
 8006b68:	d8813b15 	stw	r2,1260(sp)
 8006b6c:	df012a15 	stw	fp,1192(sp)
 8006b70:	002b883a 	mov	r21,zero
 8006b74:	9f000094 	ori	fp,r19,2
 8006b78:	d9412d15 	stw	r5,1204(sp)
 8006b7c:	00800084 	movi	r2,2
 8006b80:	04001e04 	movi	r16,120
 8006b84:	9007883a 	mov	r3,r18
 8006b88:	003f7406 	br	800695c <__alt_data_end+0xfc00695c>
 8006b8c:	da012a17 	ldw	r8,1192(sp)
 8006b90:	df012a15 	stw	fp,1192(sp)
 8006b94:	9839883a 	mov	fp,r19
 8006b98:	dcc12b03 	ldbu	r19,1196(sp)
 8006b9c:	e080080c 	andi	r2,fp,32
 8006ba0:	d8c12d17 	ldw	r3,1204(sp)
 8006ba4:	dcc12785 	stb	r19,1182(sp)
 8006ba8:	103e321e 	bne	r2,zero,8006474 <__alt_data_end+0xfc006474>
 8006bac:	e080040c 	andi	r2,fp,16
 8006bb0:	10031326 	beq	r2,zero,8007800 <___vfprintf_internal_r+0x18e4>
 8006bb4:	1c800017 	ldw	r18,0(r3)
 8006bb8:	d9412d17 	ldw	r5,1204(sp)
 8006bbc:	902bd7fa 	srai	r21,r18,31
 8006bc0:	29400104 	addi	r5,r5,4
 8006bc4:	d9412d15 	stw	r5,1204(sp)
 8006bc8:	a805883a 	mov	r2,r21
 8006bcc:	003e2f06 	br	800648c <__alt_data_end+0xfc00648c>
 8006bd0:	9cc01014 	ori	r19,r19,64
 8006bd4:	e005883a 	mov	r2,fp
 8006bd8:	e4000007 	ldb	r16,0(fp)
 8006bdc:	003d3706 	br	80060bc <__alt_data_end+0xfc0060bc>
 8006be0:	d8c12d17 	ldw	r3,1204(sp)
 8006be4:	d9012d17 	ldw	r4,1204(sp)
 8006be8:	da012a17 	ldw	r8,1192(sp)
 8006bec:	18800017 	ldw	r2,0(r3)
 8006bf0:	21000104 	addi	r4,r4,4
 8006bf4:	00c00044 	movi	r3,1
 8006bf8:	df012a15 	stw	fp,1192(sp)
 8006bfc:	d8c12b15 	stw	r3,1196(sp)
 8006c00:	9839883a 	mov	fp,r19
 8006c04:	d8012785 	stb	zero,1182(sp)
 8006c08:	d8810405 	stb	r2,1040(sp)
 8006c0c:	d9012d15 	stw	r4,1204(sp)
 8006c10:	1823883a 	mov	r17,r3
 8006c14:	d8c10404 	addi	r3,sp,1040
 8006c18:	d8013215 	stw	zero,1224(sp)
 8006c1c:	d8013415 	stw	zero,1232(sp)
 8006c20:	d8c13115 	stw	r3,1220(sp)
 8006c24:	0005883a 	mov	r2,zero
 8006c28:	003e4306 	br	8006538 <__alt_data_end+0xfc006538>
 8006c2c:	d8812b07 	ldb	r2,1196(sp)
 8006c30:	1002fc1e 	bne	r2,zero,8007824 <___vfprintf_internal_r+0x1908>
 8006c34:	00c00804 	movi	r3,32
 8006c38:	d8c12b05 	stb	r3,1196(sp)
 8006c3c:	e005883a 	mov	r2,fp
 8006c40:	e4000007 	ldb	r16,0(fp)
 8006c44:	003d1d06 	br	80060bc <__alt_data_end+0xfc0060bc>
 8006c48:	9cc00054 	ori	r19,r19,1
 8006c4c:	e005883a 	mov	r2,fp
 8006c50:	e4000007 	ldb	r16,0(fp)
 8006c54:	003d1906 	br	80060bc <__alt_data_end+0xfc0060bc>
 8006c58:	d9012d17 	ldw	r4,1204(sp)
 8006c5c:	d9412d17 	ldw	r5,1204(sp)
 8006c60:	21000017 	ldw	r4,0(r4)
 8006c64:	28c00104 	addi	r3,r5,4
 8006c68:	d9012e15 	stw	r4,1208(sp)
 8006c6c:	20038c16 	blt	r4,zero,8007aa0 <___vfprintf_internal_r+0x1b84>
 8006c70:	d8c12d15 	stw	r3,1204(sp)
 8006c74:	e005883a 	mov	r2,fp
 8006c78:	e4000007 	ldb	r16,0(fp)
 8006c7c:	003d0f06 	br	80060bc <__alt_data_end+0xfc0060bc>
 8006c80:	00c00ac4 	movi	r3,43
 8006c84:	d8c12b05 	stb	r3,1196(sp)
 8006c88:	e005883a 	mov	r2,fp
 8006c8c:	e4000007 	ldb	r16,0(fp)
 8006c90:	003d0a06 	br	80060bc <__alt_data_end+0xfc0060bc>
 8006c94:	d8c12d17 	ldw	r3,1204(sp)
 8006c98:	d9012d17 	ldw	r4,1204(sp)
 8006c9c:	da012a17 	ldw	r8,1192(sp)
 8006ca0:	18c00017 	ldw	r3,0(r3)
 8006ca4:	df012a15 	stw	fp,1192(sp)
 8006ca8:	d8012785 	stb	zero,1182(sp)
 8006cac:	d8c13115 	stw	r3,1220(sp)
 8006cb0:	9839883a 	mov	fp,r19
 8006cb4:	24800104 	addi	r18,r4,4
 8006cb8:	1803f726 	beq	r3,zero,8007c98 <___vfprintf_internal_r+0x1d7c>
 8006cbc:	d9013117 	ldw	r4,1220(sp)
 8006cc0:	48038916 	blt	r9,zero,8007ae8 <___vfprintf_internal_r+0x1bcc>
 8006cc4:	480d883a 	mov	r6,r9
 8006cc8:	000b883a 	mov	r5,zero
 8006ccc:	da013f15 	stw	r8,1276(sp)
 8006cd0:	da413e15 	stw	r9,1272(sp)
 8006cd4:	800ad880 	call	800ad88 <memchr>
 8006cd8:	da013f17 	ldw	r8,1276(sp)
 8006cdc:	da413e17 	ldw	r9,1272(sp)
 8006ce0:	10045926 	beq	r2,zero,8007e48 <___vfprintf_internal_r+0x1f2c>
 8006ce4:	d8c13117 	ldw	r3,1220(sp)
 8006ce8:	10e3c83a 	sub	r17,r2,r3
 8006cec:	4c433516 	blt	r9,r17,80079c4 <___vfprintf_internal_r+0x1aa8>
 8006cf0:	8805883a 	mov	r2,r17
 8006cf4:	88038116 	blt	r17,zero,8007afc <___vfprintf_internal_r+0x1be0>
 8006cf8:	dcc12783 	ldbu	r19,1182(sp)
 8006cfc:	d8812b15 	stw	r2,1196(sp)
 8006d00:	dc812d15 	stw	r18,1204(sp)
 8006d04:	d8013215 	stw	zero,1224(sp)
 8006d08:	d8013415 	stw	zero,1232(sp)
 8006d0c:	003e0306 	br	800651c <__alt_data_end+0xfc00651c>
 8006d10:	da012a17 	ldw	r8,1192(sp)
 8006d14:	df012a15 	stw	fp,1192(sp)
 8006d18:	9839883a 	mov	fp,r19
 8006d1c:	dcc12b03 	ldbu	r19,1196(sp)
 8006d20:	dcc12785 	stb	r19,1182(sp)
 8006d24:	803d8f26 	beq	r16,zero,8006364 <__alt_data_end+0xfc006364>
 8006d28:	00c00044 	movi	r3,1
 8006d2c:	d8c12b15 	stw	r3,1196(sp)
 8006d30:	dc010405 	stb	r16,1040(sp)
 8006d34:	d8012785 	stb	zero,1182(sp)
 8006d38:	003fb506 	br	8006c10 <__alt_data_end+0xfc006c10>
 8006d3c:	d8c12017 	ldw	r3,1152(sp)
 8006d40:	003e3506 	br	8006618 <__alt_data_end+0xfc006618>
 8006d44:	10803fcc 	andi	r2,r2,255
 8006d48:	00c00044 	movi	r3,1
 8006d4c:	10fddc1e 	bne	r2,r3,80064c0 <__alt_data_end+0xfc0064c0>
 8006d50:	a800021e 	bne	r21,zero,8006d5c <___vfprintf_internal_r+0xe40>
 8006d54:	00800244 	movi	r2,9
 8006d58:	14801e2e 	bgeu	r2,r18,8006dd4 <___vfprintf_internal_r+0xeb8>
 8006d5c:	dc012b15 	stw	r16,1196(sp)
 8006d60:	dc410e04 	addi	r17,sp,1080
 8006d64:	9021883a 	mov	r16,r18
 8006d68:	da012c15 	stw	r8,1200(sp)
 8006d6c:	a825883a 	mov	r18,r21
 8006d70:	482b883a 	mov	r21,r9
 8006d74:	8009883a 	mov	r4,r16
 8006d78:	900b883a 	mov	r5,r18
 8006d7c:	01800284 	movi	r6,10
 8006d80:	000f883a 	mov	r7,zero
 8006d84:	801011c0 	call	801011c <__umoddi3>
 8006d88:	10800c04 	addi	r2,r2,48
 8006d8c:	8c7fffc4 	addi	r17,r17,-1
 8006d90:	8009883a 	mov	r4,r16
 8006d94:	900b883a 	mov	r5,r18
 8006d98:	01800284 	movi	r6,10
 8006d9c:	000f883a 	mov	r7,zero
 8006da0:	88800005 	stb	r2,0(r17)
 8006da4:	800fadc0 	call	800fadc <__udivdi3>
 8006da8:	1021883a 	mov	r16,r2
 8006dac:	10c4b03a 	or	r2,r2,r3
 8006db0:	1825883a 	mov	r18,r3
 8006db4:	103fef1e 	bne	r2,zero,8006d74 <__alt_data_end+0xfc006d74>
 8006db8:	d9012817 	ldw	r4,1184(sp)
 8006dbc:	dc413115 	stw	r17,1220(sp)
 8006dc0:	dc012b17 	ldw	r16,1196(sp)
 8006dc4:	da012c17 	ldw	r8,1200(sp)
 8006dc8:	a813883a 	mov	r9,r21
 8006dcc:	2463c83a 	sub	r17,r4,r17
 8006dd0:	003dcd06 	br	8006508 <__alt_data_end+0xfc006508>
 8006dd4:	94800c04 	addi	r18,r18,48
 8006dd8:	d8c10dc4 	addi	r3,sp,1079
 8006ddc:	dc810dc5 	stb	r18,1079(sp)
 8006de0:	dc413c17 	ldw	r17,1264(sp)
 8006de4:	d8c13115 	stw	r3,1220(sp)
 8006de8:	003dc706 	br	8006508 <__alt_data_end+0xfc006508>
 8006dec:	00801944 	movi	r2,101
 8006df0:	1400720e 	bge	r2,r16,8006fbc <___vfprintf_internal_r+0x10a0>
 8006df4:	d9013717 	ldw	r4,1244(sp)
 8006df8:	d9413917 	ldw	r5,1252(sp)
 8006dfc:	000d883a 	mov	r6,zero
 8006e00:	000f883a 	mov	r7,zero
 8006e04:	d8c13d15 	stw	r3,1268(sp)
 8006e08:	da013f15 	stw	r8,1276(sp)
 8006e0c:	8011a800 	call	8011a80 <__eqdf2>
 8006e10:	d8c13d17 	ldw	r3,1268(sp)
 8006e14:	da013f17 	ldw	r8,1276(sp)
 8006e18:	1000f41e 	bne	r2,zero,80071ec <___vfprintf_internal_r+0x12d0>
 8006e1c:	d8811f17 	ldw	r2,1148(sp)
 8006e20:	01020074 	movhi	r4,2049
 8006e24:	211b3f04 	addi	r4,r4,27900
 8006e28:	18c00044 	addi	r3,r3,1
 8006e2c:	10800044 	addi	r2,r2,1
 8006e30:	41000015 	stw	r4,0(r8)
 8006e34:	01000044 	movi	r4,1
 8006e38:	41000115 	stw	r4,4(r8)
 8006e3c:	d8c12015 	stw	r3,1152(sp)
 8006e40:	d8811f15 	stw	r2,1148(sp)
 8006e44:	010001c4 	movi	r4,7
 8006e48:	20828d16 	blt	r4,r2,8007880 <___vfprintf_internal_r+0x1964>
 8006e4c:	42000204 	addi	r8,r8,8
 8006e50:	d8812617 	ldw	r2,1176(sp)
 8006e54:	d9413317 	ldw	r5,1228(sp)
 8006e58:	11400216 	blt	r2,r5,8006e64 <___vfprintf_internal_r+0xf48>
 8006e5c:	e080004c 	andi	r2,fp,1
 8006e60:	103e4126 	beq	r2,zero,8006768 <__alt_data_end+0xfc006768>
 8006e64:	d8813817 	ldw	r2,1248(sp)
 8006e68:	d9013517 	ldw	r4,1236(sp)
 8006e6c:	d9413817 	ldw	r5,1248(sp)
 8006e70:	1887883a 	add	r3,r3,r2
 8006e74:	d8811f17 	ldw	r2,1148(sp)
 8006e78:	41000015 	stw	r4,0(r8)
 8006e7c:	41400115 	stw	r5,4(r8)
 8006e80:	10800044 	addi	r2,r2,1
 8006e84:	d8c12015 	stw	r3,1152(sp)
 8006e88:	d8811f15 	stw	r2,1148(sp)
 8006e8c:	010001c4 	movi	r4,7
 8006e90:	20830916 	blt	r4,r2,8007ab8 <___vfprintf_internal_r+0x1b9c>
 8006e94:	42000204 	addi	r8,r8,8
 8006e98:	d8813317 	ldw	r2,1228(sp)
 8006e9c:	143fffc4 	addi	r16,r2,-1
 8006ea0:	043e310e 	bge	zero,r16,8006768 <__alt_data_end+0xfc006768>
 8006ea4:	04400404 	movi	r17,16
 8006ea8:	d8811f17 	ldw	r2,1148(sp)
 8006eac:	8c007e0e 	bge	r17,r16,80070a8 <___vfprintf_internal_r+0x118c>
 8006eb0:	01420074 	movhi	r5,2049
 8006eb4:	295b4784 	addi	r5,r5,27934
 8006eb8:	d9412c15 	stw	r5,1200(sp)
 8006ebc:	04c001c4 	movi	r19,7
 8006ec0:	00000306 	br	8006ed0 <___vfprintf_internal_r+0xfb4>
 8006ec4:	42000204 	addi	r8,r8,8
 8006ec8:	843ffc04 	addi	r16,r16,-16
 8006ecc:	8c00790e 	bge	r17,r16,80070b4 <___vfprintf_internal_r+0x1198>
 8006ed0:	18c00404 	addi	r3,r3,16
 8006ed4:	10800044 	addi	r2,r2,1
 8006ed8:	45000015 	stw	r20,0(r8)
 8006edc:	44400115 	stw	r17,4(r8)
 8006ee0:	d8c12015 	stw	r3,1152(sp)
 8006ee4:	d8811f15 	stw	r2,1148(sp)
 8006ee8:	98bff60e 	bge	r19,r2,8006ec4 <__alt_data_end+0xfc006ec4>
 8006eec:	b809883a 	mov	r4,r23
 8006ef0:	b00b883a 	mov	r5,r22
 8006ef4:	d9811e04 	addi	r6,sp,1144
 8006ef8:	800dd300 	call	800dd30 <__sprint_r>
 8006efc:	103d1f1e 	bne	r2,zero,800637c <__alt_data_end+0xfc00637c>
 8006f00:	d8c12017 	ldw	r3,1152(sp)
 8006f04:	d8811f17 	ldw	r2,1148(sp)
 8006f08:	da000404 	addi	r8,sp,16
 8006f0c:	003fee06 	br	8006ec8 <__alt_data_end+0xfc006ec8>
 8006f10:	d9412e17 	ldw	r5,1208(sp)
 8006f14:	d8812b17 	ldw	r2,1196(sp)
 8006f18:	28a7c83a 	sub	r19,r5,r2
 8006f1c:	04fddc0e 	bge	zero,r19,8006690 <__alt_data_end+0xfc006690>
 8006f20:	05400404 	movi	r21,16
 8006f24:	d8811f17 	ldw	r2,1148(sp)
 8006f28:	acc3870e 	bge	r21,r19,8007d48 <___vfprintf_internal_r+0x1e2c>
 8006f2c:	01420074 	movhi	r5,2049
 8006f30:	295b4784 	addi	r5,r5,27934
 8006f34:	d9412c15 	stw	r5,1200(sp)
 8006f38:	048001c4 	movi	r18,7
 8006f3c:	00000306 	br	8006f4c <___vfprintf_internal_r+0x1030>
 8006f40:	9cfffc04 	addi	r19,r19,-16
 8006f44:	42000204 	addi	r8,r8,8
 8006f48:	acc0110e 	bge	r21,r19,8006f90 <___vfprintf_internal_r+0x1074>
 8006f4c:	18c00404 	addi	r3,r3,16
 8006f50:	10800044 	addi	r2,r2,1
 8006f54:	45000015 	stw	r20,0(r8)
 8006f58:	45400115 	stw	r21,4(r8)
 8006f5c:	d8c12015 	stw	r3,1152(sp)
 8006f60:	d8811f15 	stw	r2,1148(sp)
 8006f64:	90bff60e 	bge	r18,r2,8006f40 <__alt_data_end+0xfc006f40>
 8006f68:	b809883a 	mov	r4,r23
 8006f6c:	b00b883a 	mov	r5,r22
 8006f70:	d9811e04 	addi	r6,sp,1144
 8006f74:	800dd300 	call	800dd30 <__sprint_r>
 8006f78:	103d001e 	bne	r2,zero,800637c <__alt_data_end+0xfc00637c>
 8006f7c:	9cfffc04 	addi	r19,r19,-16
 8006f80:	d8c12017 	ldw	r3,1152(sp)
 8006f84:	d8811f17 	ldw	r2,1148(sp)
 8006f88:	da000404 	addi	r8,sp,16
 8006f8c:	acffef16 	blt	r21,r19,8006f4c <__alt_data_end+0xfc006f4c>
 8006f90:	d9012c17 	ldw	r4,1200(sp)
 8006f94:	1cc7883a 	add	r3,r3,r19
 8006f98:	10800044 	addi	r2,r2,1
 8006f9c:	41000015 	stw	r4,0(r8)
 8006fa0:	44c00115 	stw	r19,4(r8)
 8006fa4:	d8c12015 	stw	r3,1152(sp)
 8006fa8:	d8811f15 	stw	r2,1148(sp)
 8006fac:	010001c4 	movi	r4,7
 8006fb0:	20817816 	blt	r4,r2,8007594 <___vfprintf_internal_r+0x1678>
 8006fb4:	42000204 	addi	r8,r8,8
 8006fb8:	003db506 	br	8006690 <__alt_data_end+0xfc006690>
 8006fbc:	d9413317 	ldw	r5,1228(sp)
 8006fc0:	00800044 	movi	r2,1
 8006fc4:	18c00044 	addi	r3,r3,1
 8006fc8:	11413e0e 	bge	r2,r5,80074c4 <___vfprintf_internal_r+0x15a8>
 8006fcc:	dc011f17 	ldw	r16,1148(sp)
 8006fd0:	d8813117 	ldw	r2,1220(sp)
 8006fd4:	d8c12015 	stw	r3,1152(sp)
 8006fd8:	84000044 	addi	r16,r16,1
 8006fdc:	40800015 	stw	r2,0(r8)
 8006fe0:	00800044 	movi	r2,1
 8006fe4:	40800115 	stw	r2,4(r8)
 8006fe8:	dc011f15 	stw	r16,1148(sp)
 8006fec:	008001c4 	movi	r2,7
 8006ff0:	14015616 	blt	r2,r16,800754c <___vfprintf_internal_r+0x1630>
 8006ff4:	42000204 	addi	r8,r8,8
 8006ff8:	d9013817 	ldw	r4,1248(sp)
 8006ffc:	d9413517 	ldw	r5,1236(sp)
 8007000:	84000044 	addi	r16,r16,1
 8007004:	1907883a 	add	r3,r3,r4
 8007008:	41400015 	stw	r5,0(r8)
 800700c:	41000115 	stw	r4,4(r8)
 8007010:	d8c12015 	stw	r3,1152(sp)
 8007014:	dc011f15 	stw	r16,1148(sp)
 8007018:	008001c4 	movi	r2,7
 800701c:	14015416 	blt	r2,r16,8007570 <___vfprintf_internal_r+0x1654>
 8007020:	44400204 	addi	r17,r8,8
 8007024:	d9013717 	ldw	r4,1244(sp)
 8007028:	d9413917 	ldw	r5,1252(sp)
 800702c:	000d883a 	mov	r6,zero
 8007030:	000f883a 	mov	r7,zero
 8007034:	d8c13d15 	stw	r3,1268(sp)
 8007038:	8011a800 	call	8011a80 <__eqdf2>
 800703c:	d8c13d17 	ldw	r3,1268(sp)
 8007040:	1000a726 	beq	r2,zero,80072e0 <___vfprintf_internal_r+0x13c4>
 8007044:	d9013317 	ldw	r4,1228(sp)
 8007048:	d9413117 	ldw	r5,1220(sp)
 800704c:	84000044 	addi	r16,r16,1
 8007050:	20bfffc4 	addi	r2,r4,-1
 8007054:	1887883a 	add	r3,r3,r2
 8007058:	29000044 	addi	r4,r5,1
 800705c:	88800115 	stw	r2,4(r17)
 8007060:	89000015 	stw	r4,0(r17)
 8007064:	d8c12015 	stw	r3,1152(sp)
 8007068:	dc011f15 	stw	r16,1148(sp)
 800706c:	008001c4 	movi	r2,7
 8007070:	14012d16 	blt	r2,r16,8007528 <___vfprintf_internal_r+0x160c>
 8007074:	8c400204 	addi	r17,r17,8
 8007078:	d9413a17 	ldw	r5,1256(sp)
 800707c:	dcc122c4 	addi	r19,sp,1163
 8007080:	84000044 	addi	r16,r16,1
 8007084:	28c7883a 	add	r3,r5,r3
 8007088:	8cc00015 	stw	r19,0(r17)
 800708c:	89400115 	stw	r5,4(r17)
 8007090:	d8c12015 	stw	r3,1152(sp)
 8007094:	dc011f15 	stw	r16,1148(sp)
 8007098:	008001c4 	movi	r2,7
 800709c:	14000e16 	blt	r2,r16,80070d8 <___vfprintf_internal_r+0x11bc>
 80070a0:	8a000204 	addi	r8,r17,8
 80070a4:	003db006 	br	8006768 <__alt_data_end+0xfc006768>
 80070a8:	01020074 	movhi	r4,2049
 80070ac:	211b4784 	addi	r4,r4,27934
 80070b0:	d9012c15 	stw	r4,1200(sp)
 80070b4:	d9012c17 	ldw	r4,1200(sp)
 80070b8:	1c07883a 	add	r3,r3,r16
 80070bc:	44000115 	stw	r16,4(r8)
 80070c0:	41000015 	stw	r4,0(r8)
 80070c4:	10800044 	addi	r2,r2,1
 80070c8:	d8c12015 	stw	r3,1152(sp)
 80070cc:	d8811f15 	stw	r2,1148(sp)
 80070d0:	010001c4 	movi	r4,7
 80070d4:	20bda30e 	bge	r4,r2,8006764 <__alt_data_end+0xfc006764>
 80070d8:	b809883a 	mov	r4,r23
 80070dc:	b00b883a 	mov	r5,r22
 80070e0:	d9811e04 	addi	r6,sp,1144
 80070e4:	800dd300 	call	800dd30 <__sprint_r>
 80070e8:	103ca41e 	bne	r2,zero,800637c <__alt_data_end+0xfc00637c>
 80070ec:	d8c12017 	ldw	r3,1152(sp)
 80070f0:	da000404 	addi	r8,sp,16
 80070f4:	003d9c06 	br	8006768 <__alt_data_end+0xfc006768>
 80070f8:	b809883a 	mov	r4,r23
 80070fc:	b00b883a 	mov	r5,r22
 8007100:	d9811e04 	addi	r6,sp,1144
 8007104:	800dd300 	call	800dd30 <__sprint_r>
 8007108:	103dd226 	beq	r2,zero,8006854 <__alt_data_end+0xfc006854>
 800710c:	003c9b06 	br	800637c <__alt_data_end+0xfc00637c>
 8007110:	10803fcc 	andi	r2,r2,255
 8007114:	1000311e 	bne	r2,zero,80071dc <___vfprintf_internal_r+0x12c0>
 8007118:	e080004c 	andi	r2,fp,1
 800711c:	10002f26 	beq	r2,zero,80071dc <___vfprintf_internal_r+0x12c0>
 8007120:	00800c04 	movi	r2,48
 8007124:	d8c10dc4 	addi	r3,sp,1079
 8007128:	d8810dc5 	stb	r2,1079(sp)
 800712c:	dc413c17 	ldw	r17,1264(sp)
 8007130:	d8c13115 	stw	r3,1220(sp)
 8007134:	003cf406 	br	8006508 <__alt_data_end+0xfc006508>
 8007138:	b809883a 	mov	r4,r23
 800713c:	b00b883a 	mov	r5,r22
 8007140:	d9811e04 	addi	r6,sp,1144
 8007144:	800dd300 	call	800dd30 <__sprint_r>
 8007148:	103c8c1e 	bne	r2,zero,800637c <__alt_data_end+0xfc00637c>
 800714c:	d8c12017 	ldw	r3,1152(sp)
 8007150:	da000404 	addi	r8,sp,16
 8007154:	003d7706 	br	8006734 <__alt_data_end+0xfc006734>
 8007158:	b809883a 	mov	r4,r23
 800715c:	b00b883a 	mov	r5,r22
 8007160:	d9811e04 	addi	r6,sp,1144
 8007164:	800dd300 	call	800dd30 <__sprint_r>
 8007168:	103c841e 	bne	r2,zero,800637c <__alt_data_end+0xfc00637c>
 800716c:	d8c12017 	ldw	r3,1152(sp)
 8007170:	da000404 	addi	r8,sp,16
 8007174:	003d3506 	br	800664c <__alt_data_end+0xfc00664c>
 8007178:	b809883a 	mov	r4,r23
 800717c:	b00b883a 	mov	r5,r22
 8007180:	d9811e04 	addi	r6,sp,1144
 8007184:	800dd300 	call	800dd30 <__sprint_r>
 8007188:	103c7c1e 	bne	r2,zero,800637c <__alt_data_end+0xfc00637c>
 800718c:	d8c12017 	ldw	r3,1152(sp)
 8007190:	da000404 	addi	r8,sp,16
 8007194:	003d3b06 	br	8006684 <__alt_data_end+0xfc006684>
 8007198:	d9413b17 	ldw	r5,1260(sp)
 800719c:	d8c10e04 	addi	r3,sp,1080
 80071a0:	908003cc 	andi	r2,r18,15
 80071a4:	a808973a 	slli	r4,r21,28
 80071a8:	2885883a 	add	r2,r5,r2
 80071ac:	9024d13a 	srli	r18,r18,4
 80071b0:	10800003 	ldbu	r2,0(r2)
 80071b4:	a82ad13a 	srli	r21,r21,4
 80071b8:	18ffffc4 	addi	r3,r3,-1
 80071bc:	24a4b03a 	or	r18,r4,r18
 80071c0:	18800005 	stb	r2,0(r3)
 80071c4:	9544b03a 	or	r2,r18,r21
 80071c8:	103ff51e 	bne	r2,zero,80071a0 <__alt_data_end+0xfc0071a0>
 80071cc:	d9412817 	ldw	r5,1184(sp)
 80071d0:	d8c13115 	stw	r3,1220(sp)
 80071d4:	28e3c83a 	sub	r17,r5,r3
 80071d8:	003ccb06 	br	8006508 <__alt_data_end+0xfc006508>
 80071dc:	d8c10e04 	addi	r3,sp,1080
 80071e0:	0023883a 	mov	r17,zero
 80071e4:	d8c13115 	stw	r3,1220(sp)
 80071e8:	003cc706 	br	8006508 <__alt_data_end+0xfc006508>
 80071ec:	dc012617 	ldw	r16,1176(sp)
 80071f0:	0401ab0e 	bge	zero,r16,80078a0 <___vfprintf_internal_r+0x1984>
 80071f4:	d8813317 	ldw	r2,1228(sp)
 80071f8:	d9413117 	ldw	r5,1220(sp)
 80071fc:	d9013417 	ldw	r4,1232(sp)
 8007200:	1023883a 	mov	r17,r2
 8007204:	28a1883a 	add	r16,r5,r2
 8007208:	2080010e 	bge	r4,r2,8007210 <___vfprintf_internal_r+0x12f4>
 800720c:	2023883a 	mov	r17,r4
 8007210:	04400b0e 	bge	zero,r17,8007240 <___vfprintf_internal_r+0x1324>
 8007214:	d8811f17 	ldw	r2,1148(sp)
 8007218:	d9413117 	ldw	r5,1220(sp)
 800721c:	1c47883a 	add	r3,r3,r17
 8007220:	10800044 	addi	r2,r2,1
 8007224:	41400015 	stw	r5,0(r8)
 8007228:	44400115 	stw	r17,4(r8)
 800722c:	d8c12015 	stw	r3,1152(sp)
 8007230:	d8811f15 	stw	r2,1148(sp)
 8007234:	010001c4 	movi	r4,7
 8007238:	20826716 	blt	r4,r2,8007bd8 <___vfprintf_internal_r+0x1cbc>
 800723c:	42000204 	addi	r8,r8,8
 8007240:	88026316 	blt	r17,zero,8007bd0 <___vfprintf_internal_r+0x1cb4>
 8007244:	d8813417 	ldw	r2,1232(sp)
 8007248:	1463c83a 	sub	r17,r2,r17
 800724c:	0440590e 	bge	zero,r17,80073b4 <___vfprintf_internal_r+0x1498>
 8007250:	04c00404 	movi	r19,16
 8007254:	d8811f17 	ldw	r2,1148(sp)
 8007258:	9c41770e 	bge	r19,r17,8007838 <___vfprintf_internal_r+0x191c>
 800725c:	01420074 	movhi	r5,2049
 8007260:	295b4784 	addi	r5,r5,27934
 8007264:	d9412c15 	stw	r5,1200(sp)
 8007268:	054001c4 	movi	r21,7
 800726c:	00000306 	br	800727c <___vfprintf_internal_r+0x1360>
 8007270:	42000204 	addi	r8,r8,8
 8007274:	8c7ffc04 	addi	r17,r17,-16
 8007278:	9c41720e 	bge	r19,r17,8007844 <___vfprintf_internal_r+0x1928>
 800727c:	18c00404 	addi	r3,r3,16
 8007280:	10800044 	addi	r2,r2,1
 8007284:	45000015 	stw	r20,0(r8)
 8007288:	44c00115 	stw	r19,4(r8)
 800728c:	d8c12015 	stw	r3,1152(sp)
 8007290:	d8811f15 	stw	r2,1148(sp)
 8007294:	a8bff60e 	bge	r21,r2,8007270 <__alt_data_end+0xfc007270>
 8007298:	b809883a 	mov	r4,r23
 800729c:	b00b883a 	mov	r5,r22
 80072a0:	d9811e04 	addi	r6,sp,1144
 80072a4:	800dd300 	call	800dd30 <__sprint_r>
 80072a8:	103c341e 	bne	r2,zero,800637c <__alt_data_end+0xfc00637c>
 80072ac:	d8c12017 	ldw	r3,1152(sp)
 80072b0:	d8811f17 	ldw	r2,1148(sp)
 80072b4:	da000404 	addi	r8,sp,16
 80072b8:	003fee06 	br	8007274 <__alt_data_end+0xfc007274>
 80072bc:	b809883a 	mov	r4,r23
 80072c0:	b00b883a 	mov	r5,r22
 80072c4:	d9811e04 	addi	r6,sp,1144
 80072c8:	800dd300 	call	800dd30 <__sprint_r>
 80072cc:	103c2b1e 	bne	r2,zero,800637c <__alt_data_end+0xfc00637c>
 80072d0:	d8c12017 	ldw	r3,1152(sp)
 80072d4:	d8812787 	ldb	r2,1182(sp)
 80072d8:	da000404 	addi	r8,sp,16
 80072dc:	003cce06 	br	8006618 <__alt_data_end+0xfc006618>
 80072e0:	d8813317 	ldw	r2,1228(sp)
 80072e4:	14ffffc4 	addi	r19,r2,-1
 80072e8:	04ff630e 	bge	zero,r19,8007078 <__alt_data_end+0xfc007078>
 80072ec:	05400404 	movi	r21,16
 80072f0:	acc0810e 	bge	r21,r19,80074f8 <___vfprintf_internal_r+0x15dc>
 80072f4:	01420074 	movhi	r5,2049
 80072f8:	295b4784 	addi	r5,r5,27934
 80072fc:	d9412c15 	stw	r5,1200(sp)
 8007300:	01c001c4 	movi	r7,7
 8007304:	00000306 	br	8007314 <___vfprintf_internal_r+0x13f8>
 8007308:	8c400204 	addi	r17,r17,8
 800730c:	9cfffc04 	addi	r19,r19,-16
 8007310:	acc07c0e 	bge	r21,r19,8007504 <___vfprintf_internal_r+0x15e8>
 8007314:	18c00404 	addi	r3,r3,16
 8007318:	84000044 	addi	r16,r16,1
 800731c:	8d000015 	stw	r20,0(r17)
 8007320:	8d400115 	stw	r21,4(r17)
 8007324:	d8c12015 	stw	r3,1152(sp)
 8007328:	dc011f15 	stw	r16,1148(sp)
 800732c:	3c3ff60e 	bge	r7,r16,8007308 <__alt_data_end+0xfc007308>
 8007330:	b809883a 	mov	r4,r23
 8007334:	b00b883a 	mov	r5,r22
 8007338:	d9811e04 	addi	r6,sp,1144
 800733c:	d9c13d15 	stw	r7,1268(sp)
 8007340:	800dd300 	call	800dd30 <__sprint_r>
 8007344:	d9c13d17 	ldw	r7,1268(sp)
 8007348:	103c0c1e 	bne	r2,zero,800637c <__alt_data_end+0xfc00637c>
 800734c:	d8c12017 	ldw	r3,1152(sp)
 8007350:	dc011f17 	ldw	r16,1148(sp)
 8007354:	dc400404 	addi	r17,sp,16
 8007358:	003fec06 	br	800730c <__alt_data_end+0xfc00730c>
 800735c:	00800084 	movi	r2,2
 8007360:	9546b03a 	or	r3,r18,r21
 8007364:	003d7d06 	br	800695c <__alt_data_end+0xfc00695c>
 8007368:	10803fcc 	andi	r2,r2,255
 800736c:	1080201c 	xori	r2,r2,128
 8007370:	10bfe004 	addi	r2,r2,-128
 8007374:	01000c04 	movi	r4,48
 8007378:	1101d726 	beq	r2,r4,8007ad8 <___vfprintf_internal_r+0x1bbc>
 800737c:	d9413117 	ldw	r5,1220(sp)
 8007380:	d8812817 	ldw	r2,1184(sp)
 8007384:	193fffc5 	stb	r4,-1(r3)
 8007388:	297fffc4 	addi	r5,r5,-1
 800738c:	d9413115 	stw	r5,1220(sp)
 8007390:	1163c83a 	sub	r17,r2,r5
 8007394:	003c5c06 	br	8006508 <__alt_data_end+0xfc006508>
 8007398:	b809883a 	mov	r4,r23
 800739c:	b00b883a 	mov	r5,r22
 80073a0:	d9811e04 	addi	r6,sp,1144
 80073a4:	800dd300 	call	800dd30 <__sprint_r>
 80073a8:	103bf41e 	bne	r2,zero,800637c <__alt_data_end+0xfc00637c>
 80073ac:	d8c12017 	ldw	r3,1152(sp)
 80073b0:	da000404 	addi	r8,sp,16
 80073b4:	d9413117 	ldw	r5,1220(sp)
 80073b8:	d9013417 	ldw	r4,1232(sp)
 80073bc:	d8812617 	ldw	r2,1176(sp)
 80073c0:	2923883a 	add	r17,r5,r4
 80073c4:	d9413317 	ldw	r5,1228(sp)
 80073c8:	11400216 	blt	r2,r5,80073d4 <___vfprintf_internal_r+0x14b8>
 80073cc:	e100004c 	andi	r4,fp,1
 80073d0:	20000d26 	beq	r4,zero,8007408 <___vfprintf_internal_r+0x14ec>
 80073d4:	d9013817 	ldw	r4,1248(sp)
 80073d8:	d9413517 	ldw	r5,1236(sp)
 80073dc:	1907883a 	add	r3,r3,r4
 80073e0:	d9011f17 	ldw	r4,1148(sp)
 80073e4:	41400015 	stw	r5,0(r8)
 80073e8:	d9413817 	ldw	r5,1248(sp)
 80073ec:	21000044 	addi	r4,r4,1
 80073f0:	d8c12015 	stw	r3,1152(sp)
 80073f4:	41400115 	stw	r5,4(r8)
 80073f8:	d9011f15 	stw	r4,1148(sp)
 80073fc:	014001c4 	movi	r5,7
 8007400:	2901fd16 	blt	r5,r4,8007bf8 <___vfprintf_internal_r+0x1cdc>
 8007404:	42000204 	addi	r8,r8,8
 8007408:	d9013317 	ldw	r4,1228(sp)
 800740c:	2085c83a 	sub	r2,r4,r2
 8007410:	8449c83a 	sub	r4,r16,r17
 8007414:	1021883a 	mov	r16,r2
 8007418:	2080010e 	bge	r4,r2,8007420 <___vfprintf_internal_r+0x1504>
 800741c:	2021883a 	mov	r16,r4
 8007420:	04000a0e 	bge	zero,r16,800744c <___vfprintf_internal_r+0x1530>
 8007424:	d9011f17 	ldw	r4,1148(sp)
 8007428:	1c07883a 	add	r3,r3,r16
 800742c:	44400015 	stw	r17,0(r8)
 8007430:	21000044 	addi	r4,r4,1
 8007434:	44000115 	stw	r16,4(r8)
 8007438:	d8c12015 	stw	r3,1152(sp)
 800743c:	d9011f15 	stw	r4,1148(sp)
 8007440:	014001c4 	movi	r5,7
 8007444:	29020916 	blt	r5,r4,8007c6c <___vfprintf_internal_r+0x1d50>
 8007448:	42000204 	addi	r8,r8,8
 800744c:	80020116 	blt	r16,zero,8007c54 <___vfprintf_internal_r+0x1d38>
 8007450:	1421c83a 	sub	r16,r2,r16
 8007454:	043cc40e 	bge	zero,r16,8006768 <__alt_data_end+0xfc006768>
 8007458:	04400404 	movi	r17,16
 800745c:	d8811f17 	ldw	r2,1148(sp)
 8007460:	8c3f110e 	bge	r17,r16,80070a8 <__alt_data_end+0xfc0070a8>
 8007464:	01420074 	movhi	r5,2049
 8007468:	295b4784 	addi	r5,r5,27934
 800746c:	d9412c15 	stw	r5,1200(sp)
 8007470:	04c001c4 	movi	r19,7
 8007474:	00000306 	br	8007484 <___vfprintf_internal_r+0x1568>
 8007478:	42000204 	addi	r8,r8,8
 800747c:	843ffc04 	addi	r16,r16,-16
 8007480:	8c3f0c0e 	bge	r17,r16,80070b4 <__alt_data_end+0xfc0070b4>
 8007484:	18c00404 	addi	r3,r3,16
 8007488:	10800044 	addi	r2,r2,1
 800748c:	45000015 	stw	r20,0(r8)
 8007490:	44400115 	stw	r17,4(r8)
 8007494:	d8c12015 	stw	r3,1152(sp)
 8007498:	d8811f15 	stw	r2,1148(sp)
 800749c:	98bff60e 	bge	r19,r2,8007478 <__alt_data_end+0xfc007478>
 80074a0:	b809883a 	mov	r4,r23
 80074a4:	b00b883a 	mov	r5,r22
 80074a8:	d9811e04 	addi	r6,sp,1144
 80074ac:	800dd300 	call	800dd30 <__sprint_r>
 80074b0:	103bb21e 	bne	r2,zero,800637c <__alt_data_end+0xfc00637c>
 80074b4:	d8c12017 	ldw	r3,1152(sp)
 80074b8:	d8811f17 	ldw	r2,1148(sp)
 80074bc:	da000404 	addi	r8,sp,16
 80074c0:	003fee06 	br	800747c <__alt_data_end+0xfc00747c>
 80074c4:	e088703a 	and	r4,fp,r2
 80074c8:	203ec01e 	bne	r4,zero,8006fcc <__alt_data_end+0xfc006fcc>
 80074cc:	dc011f17 	ldw	r16,1148(sp)
 80074d0:	d9013117 	ldw	r4,1220(sp)
 80074d4:	40800115 	stw	r2,4(r8)
 80074d8:	84000044 	addi	r16,r16,1
 80074dc:	41000015 	stw	r4,0(r8)
 80074e0:	d8c12015 	stw	r3,1152(sp)
 80074e4:	dc011f15 	stw	r16,1148(sp)
 80074e8:	008001c4 	movi	r2,7
 80074ec:	14000e16 	blt	r2,r16,8007528 <___vfprintf_internal_r+0x160c>
 80074f0:	44400204 	addi	r17,r8,8
 80074f4:	003ee006 	br	8007078 <__alt_data_end+0xfc007078>
 80074f8:	01020074 	movhi	r4,2049
 80074fc:	211b4784 	addi	r4,r4,27934
 8007500:	d9012c15 	stw	r4,1200(sp)
 8007504:	d8812c17 	ldw	r2,1200(sp)
 8007508:	1cc7883a 	add	r3,r3,r19
 800750c:	84000044 	addi	r16,r16,1
 8007510:	88800015 	stw	r2,0(r17)
 8007514:	8cc00115 	stw	r19,4(r17)
 8007518:	d8c12015 	stw	r3,1152(sp)
 800751c:	dc011f15 	stw	r16,1148(sp)
 8007520:	008001c4 	movi	r2,7
 8007524:	143ed30e 	bge	r2,r16,8007074 <__alt_data_end+0xfc007074>
 8007528:	b809883a 	mov	r4,r23
 800752c:	b00b883a 	mov	r5,r22
 8007530:	d9811e04 	addi	r6,sp,1144
 8007534:	800dd300 	call	800dd30 <__sprint_r>
 8007538:	103b901e 	bne	r2,zero,800637c <__alt_data_end+0xfc00637c>
 800753c:	d8c12017 	ldw	r3,1152(sp)
 8007540:	dc011f17 	ldw	r16,1148(sp)
 8007544:	dc400404 	addi	r17,sp,16
 8007548:	003ecb06 	br	8007078 <__alt_data_end+0xfc007078>
 800754c:	b809883a 	mov	r4,r23
 8007550:	b00b883a 	mov	r5,r22
 8007554:	d9811e04 	addi	r6,sp,1144
 8007558:	800dd300 	call	800dd30 <__sprint_r>
 800755c:	103b871e 	bne	r2,zero,800637c <__alt_data_end+0xfc00637c>
 8007560:	d8c12017 	ldw	r3,1152(sp)
 8007564:	dc011f17 	ldw	r16,1148(sp)
 8007568:	da000404 	addi	r8,sp,16
 800756c:	003ea206 	br	8006ff8 <__alt_data_end+0xfc006ff8>
 8007570:	b809883a 	mov	r4,r23
 8007574:	b00b883a 	mov	r5,r22
 8007578:	d9811e04 	addi	r6,sp,1144
 800757c:	800dd300 	call	800dd30 <__sprint_r>
 8007580:	103b7e1e 	bne	r2,zero,800637c <__alt_data_end+0xfc00637c>
 8007584:	d8c12017 	ldw	r3,1152(sp)
 8007588:	dc011f17 	ldw	r16,1148(sp)
 800758c:	dc400404 	addi	r17,sp,16
 8007590:	003ea406 	br	8007024 <__alt_data_end+0xfc007024>
 8007594:	b809883a 	mov	r4,r23
 8007598:	b00b883a 	mov	r5,r22
 800759c:	d9811e04 	addi	r6,sp,1144
 80075a0:	800dd300 	call	800dd30 <__sprint_r>
 80075a4:	103b751e 	bne	r2,zero,800637c <__alt_data_end+0xfc00637c>
 80075a8:	d8c12017 	ldw	r3,1152(sp)
 80075ac:	da000404 	addi	r8,sp,16
 80075b0:	003c3706 	br	8006690 <__alt_data_end+0xfc006690>
 80075b4:	04a5c83a 	sub	r18,zero,r18
 80075b8:	9004c03a 	cmpne	r2,r18,zero
 80075bc:	056bc83a 	sub	r21,zero,r21
 80075c0:	a8abc83a 	sub	r21,r21,r2
 80075c4:	04c00b44 	movi	r19,45
 80075c8:	dcc12785 	stb	r19,1182(sp)
 80075cc:	da413215 	stw	r9,1224(sp)
 80075d0:	00800044 	movi	r2,1
 80075d4:	9546b03a 	or	r3,r18,r21
 80075d8:	003bb106 	br	80064a0 <__alt_data_end+0xfc0064a0>
 80075dc:	da013f15 	stw	r8,1276(sp)
 80075e0:	da413e15 	stw	r9,1272(sp)
 80075e4:	800c6ec0 	call	800c6ec <__fpclassifyd>
 80075e8:	da013f17 	ldw	r8,1276(sp)
 80075ec:	da413e17 	ldw	r9,1272(sp)
 80075f0:	1000e526 	beq	r2,zero,8007988 <___vfprintf_internal_r+0x1a6c>
 80075f4:	04fff7c4 	movi	r19,-33
 80075f8:	00bfffc4 	movi	r2,-1
 80075fc:	84e6703a 	and	r19,r16,r19
 8007600:	48822926 	beq	r9,r2,8007ea8 <___vfprintf_internal_r+0x1f8c>
 8007604:	008011c4 	movi	r2,71
 8007608:	98821626 	beq	r19,r2,8007e64 <___vfprintf_internal_r+0x1f48>
 800760c:	d9013917 	ldw	r4,1252(sp)
 8007610:	e0c04014 	ori	r3,fp,256
 8007614:	d8c12d15 	stw	r3,1204(sp)
 8007618:	20021f16 	blt	r4,zero,8007e98 <___vfprintf_internal_r+0x1f7c>
 800761c:	dc413917 	ldw	r17,1252(sp)
 8007620:	d8012b05 	stb	zero,1196(sp)
 8007624:	00801984 	movi	r2,102
 8007628:	80814d26 	beq	r16,r2,8007b60 <___vfprintf_internal_r+0x1c44>
 800762c:	00801184 	movi	r2,70
 8007630:	80814b26 	beq	r16,r2,8007b60 <___vfprintf_internal_r+0x1c44>
 8007634:	00801144 	movi	r2,69
 8007638:	98821d26 	beq	r19,r2,8007eb0 <___vfprintf_internal_r+0x1f94>
 800763c:	482b883a 	mov	r21,r9
 8007640:	d8812604 	addi	r2,sp,1176
 8007644:	d8800115 	stw	r2,4(sp)
 8007648:	d9413717 	ldw	r5,1244(sp)
 800764c:	d8812504 	addi	r2,sp,1172
 8007650:	d8800215 	stw	r2,8(sp)
 8007654:	d8812104 	addi	r2,sp,1156
 8007658:	dd400015 	stw	r21,0(sp)
 800765c:	d8800315 	stw	r2,12(sp)
 8007660:	b809883a 	mov	r4,r23
 8007664:	880d883a 	mov	r6,r17
 8007668:	01c00084 	movi	r7,2
 800766c:	da013f15 	stw	r8,1276(sp)
 8007670:	da413e15 	stw	r9,1272(sp)
 8007674:	80083940 	call	8008394 <_dtoa_r>
 8007678:	d8813115 	stw	r2,1220(sp)
 800767c:	008019c4 	movi	r2,103
 8007680:	da013f17 	ldw	r8,1276(sp)
 8007684:	da413e17 	ldw	r9,1272(sp)
 8007688:	80800226 	beq	r16,r2,8007694 <___vfprintf_internal_r+0x1778>
 800768c:	008011c4 	movi	r2,71
 8007690:	8081451e 	bne	r16,r2,8007ba8 <___vfprintf_internal_r+0x1c8c>
 8007694:	e080004c 	andi	r2,fp,1
 8007698:	10021e26 	beq	r2,zero,8007f14 <___vfprintf_internal_r+0x1ff8>
 800769c:	d8c13117 	ldw	r3,1220(sp)
 80076a0:	1d55883a 	add	r10,r3,r21
 80076a4:	d9013717 	ldw	r4,1244(sp)
 80076a8:	880b883a 	mov	r5,r17
 80076ac:	000d883a 	mov	r6,zero
 80076b0:	000f883a 	mov	r7,zero
 80076b4:	da013f15 	stw	r8,1276(sp)
 80076b8:	da413e15 	stw	r9,1272(sp)
 80076bc:	da813d15 	stw	r10,1268(sp)
 80076c0:	8011a800 	call	8011a80 <__eqdf2>
 80076c4:	da013f17 	ldw	r8,1276(sp)
 80076c8:	da413e17 	ldw	r9,1272(sp)
 80076cc:	da813d17 	ldw	r10,1268(sp)
 80076d0:	1001a126 	beq	r2,zero,8007d58 <___vfprintf_internal_r+0x1e3c>
 80076d4:	d8812117 	ldw	r2,1156(sp)
 80076d8:	1280062e 	bgeu	r2,r10,80076f4 <___vfprintf_internal_r+0x17d8>
 80076dc:	01000c04 	movi	r4,48
 80076e0:	10c00044 	addi	r3,r2,1
 80076e4:	d8c12115 	stw	r3,1156(sp)
 80076e8:	11000005 	stb	r4,0(r2)
 80076ec:	d8812117 	ldw	r2,1156(sp)
 80076f0:	12bffb36 	bltu	r2,r10,80076e0 <__alt_data_end+0xfc0076e0>
 80076f4:	d8c13117 	ldw	r3,1220(sp)
 80076f8:	10c5c83a 	sub	r2,r2,r3
 80076fc:	d8813315 	stw	r2,1228(sp)
 8007700:	008011c4 	movi	r2,71
 8007704:	98818926 	beq	r19,r2,8007d2c <___vfprintf_internal_r+0x1e10>
 8007708:	00801944 	movi	r2,101
 800770c:	14023c0e 	bge	r2,r16,8008000 <___vfprintf_internal_r+0x20e4>
 8007710:	d8c12617 	ldw	r3,1176(sp)
 8007714:	00801984 	movi	r2,102
 8007718:	d8c13415 	stw	r3,1232(sp)
 800771c:	8081ef26 	beq	r16,r2,8007edc <___vfprintf_internal_r+0x1fc0>
 8007720:	d8c13417 	ldw	r3,1232(sp)
 8007724:	d9013317 	ldw	r4,1228(sp)
 8007728:	1901e316 	blt	r3,r4,8007eb8 <___vfprintf_internal_r+0x1f9c>
 800772c:	e080004c 	andi	r2,fp,1
 8007730:	1001f426 	beq	r2,zero,8007f04 <___vfprintf_internal_r+0x1fe8>
 8007734:	d8c13417 	ldw	r3,1232(sp)
 8007738:	1c400044 	addi	r17,r3,1
 800773c:	8839883a 	mov	fp,r17
 8007740:	8801e416 	blt	r17,zero,8007ed4 <___vfprintf_internal_r+0x1fb8>
 8007744:	dd412b07 	ldb	r21,1196(sp)
 8007748:	a801701e 	bne	r21,zero,8007d0c <___vfprintf_internal_r+0x1df0>
 800774c:	df012b15 	stw	fp,1196(sp)
 8007750:	dcc12783 	ldbu	r19,1182(sp)
 8007754:	df012d17 	ldw	fp,1204(sp)
 8007758:	d8013215 	stw	zero,1224(sp)
 800775c:	dc812d15 	stw	r18,1204(sp)
 8007760:	003b6e06 	br	800651c <__alt_data_end+0xfc00651c>
 8007764:	e080040c 	andi	r2,fp,16
 8007768:	1000b51e 	bne	r2,zero,8007a40 <___vfprintf_internal_r+0x1b24>
 800776c:	e080100c 	andi	r2,fp,64
 8007770:	10015b26 	beq	r2,zero,8007ce0 <___vfprintf_internal_r+0x1dc4>
 8007774:	d9012d17 	ldw	r4,1204(sp)
 8007778:	d9412f17 	ldw	r5,1212(sp)
 800777c:	20800017 	ldw	r2,0(r4)
 8007780:	21000104 	addi	r4,r4,4
 8007784:	d9012d15 	stw	r4,1204(sp)
 8007788:	1140000d 	sth	r5,0(r2)
 800778c:	003a2006 	br	8006010 <__alt_data_end+0xfc006010>
 8007790:	e0c0100c 	andi	r3,fp,64
 8007794:	1800a226 	beq	r3,zero,8007a20 <___vfprintf_internal_r+0x1b04>
 8007798:	d8c12d17 	ldw	r3,1204(sp)
 800779c:	1480000b 	ldhu	r18,0(r2)
 80077a0:	002b883a 	mov	r21,zero
 80077a4:	18c00104 	addi	r3,r3,4
 80077a8:	d8c12d15 	stw	r3,1204(sp)
 80077ac:	0005883a 	mov	r2,zero
 80077b0:	9007883a 	mov	r3,r18
 80077b4:	003c6906 	br	800695c <__alt_data_end+0xfc00695c>
 80077b8:	e0c0100c 	andi	r3,fp,64
 80077bc:	18009026 	beq	r3,zero,8007a00 <___vfprintf_internal_r+0x1ae4>
 80077c0:	1480000b 	ldhu	r18,0(r2)
 80077c4:	d8812d17 	ldw	r2,1204(sp)
 80077c8:	002b883a 	mov	r21,zero
 80077cc:	9007883a 	mov	r3,r18
 80077d0:	10800104 	addi	r2,r2,4
 80077d4:	d8812d15 	stw	r2,1204(sp)
 80077d8:	00800044 	movi	r2,1
 80077dc:	003c5f06 	br	800695c <__alt_data_end+0xfc00695c>
 80077e0:	e0c0100c 	andi	r3,fp,64
 80077e4:	18008026 	beq	r3,zero,80079e8 <___vfprintf_internal_r+0x1acc>
 80077e8:	d9012d17 	ldw	r4,1204(sp)
 80077ec:	1480000b 	ldhu	r18,0(r2)
 80077f0:	002b883a 	mov	r21,zero
 80077f4:	21000104 	addi	r4,r4,4
 80077f8:	d9012d15 	stw	r4,1204(sp)
 80077fc:	003c7906 	br	80069e4 <__alt_data_end+0xfc0069e4>
 8007800:	e080100c 	andi	r2,fp,64
 8007804:	10007126 	beq	r2,zero,80079cc <___vfprintf_internal_r+0x1ab0>
 8007808:	1c80000f 	ldh	r18,0(r3)
 800780c:	d8812d17 	ldw	r2,1204(sp)
 8007810:	902bd7fa 	srai	r21,r18,31
 8007814:	10800104 	addi	r2,r2,4
 8007818:	d8812d15 	stw	r2,1204(sp)
 800781c:	a805883a 	mov	r2,r21
 8007820:	003b1a06 	br	800648c <__alt_data_end+0xfc00648c>
 8007824:	e4000007 	ldb	r16,0(fp)
 8007828:	e005883a 	mov	r2,fp
 800782c:	003a2306 	br	80060bc <__alt_data_end+0xfc0060bc>
 8007830:	00800084 	movi	r2,2
 8007834:	003c4906 	br	800695c <__alt_data_end+0xfc00695c>
 8007838:	01020074 	movhi	r4,2049
 800783c:	211b4784 	addi	r4,r4,27934
 8007840:	d9012c15 	stw	r4,1200(sp)
 8007844:	d9012c17 	ldw	r4,1200(sp)
 8007848:	1c47883a 	add	r3,r3,r17
 800784c:	10800044 	addi	r2,r2,1
 8007850:	41000015 	stw	r4,0(r8)
 8007854:	44400115 	stw	r17,4(r8)
 8007858:	d8c12015 	stw	r3,1152(sp)
 800785c:	d8811f15 	stw	r2,1148(sp)
 8007860:	010001c4 	movi	r4,7
 8007864:	20becc16 	blt	r4,r2,8007398 <__alt_data_end+0xfc007398>
 8007868:	42000204 	addi	r8,r8,8
 800786c:	003ed106 	br	80073b4 <__alt_data_end+0xfc0073b4>
 8007870:	01020074 	movhi	r4,2049
 8007874:	211b4784 	addi	r4,r4,27934
 8007878:	d9012c15 	stw	r4,1200(sp)
 800787c:	003ba306 	br	800670c <__alt_data_end+0xfc00670c>
 8007880:	b809883a 	mov	r4,r23
 8007884:	b00b883a 	mov	r5,r22
 8007888:	d9811e04 	addi	r6,sp,1144
 800788c:	800dd300 	call	800dd30 <__sprint_r>
 8007890:	103aba1e 	bne	r2,zero,800637c <__alt_data_end+0xfc00637c>
 8007894:	d8c12017 	ldw	r3,1152(sp)
 8007898:	da000404 	addi	r8,sp,16
 800789c:	003d6c06 	br	8006e50 <__alt_data_end+0xfc006e50>
 80078a0:	d8811f17 	ldw	r2,1148(sp)
 80078a4:	01420074 	movhi	r5,2049
 80078a8:	01000044 	movi	r4,1
 80078ac:	18c00044 	addi	r3,r3,1
 80078b0:	10800044 	addi	r2,r2,1
 80078b4:	295b3f04 	addi	r5,r5,27900
 80078b8:	41000115 	stw	r4,4(r8)
 80078bc:	41400015 	stw	r5,0(r8)
 80078c0:	d8c12015 	stw	r3,1152(sp)
 80078c4:	d8811f15 	stw	r2,1148(sp)
 80078c8:	010001c4 	movi	r4,7
 80078cc:	20806716 	blt	r4,r2,8007a6c <___vfprintf_internal_r+0x1b50>
 80078d0:	42000204 	addi	r8,r8,8
 80078d4:	8000041e 	bne	r16,zero,80078e8 <___vfprintf_internal_r+0x19cc>
 80078d8:	d8813317 	ldw	r2,1228(sp)
 80078dc:	1000021e 	bne	r2,zero,80078e8 <___vfprintf_internal_r+0x19cc>
 80078e0:	e080004c 	andi	r2,fp,1
 80078e4:	103ba026 	beq	r2,zero,8006768 <__alt_data_end+0xfc006768>
 80078e8:	d9013817 	ldw	r4,1248(sp)
 80078ec:	d8811f17 	ldw	r2,1148(sp)
 80078f0:	d9413517 	ldw	r5,1236(sp)
 80078f4:	1907883a 	add	r3,r3,r4
 80078f8:	10800044 	addi	r2,r2,1
 80078fc:	41000115 	stw	r4,4(r8)
 8007900:	41400015 	stw	r5,0(r8)
 8007904:	d8c12015 	stw	r3,1152(sp)
 8007908:	d8811f15 	stw	r2,1148(sp)
 800790c:	010001c4 	movi	r4,7
 8007910:	20815716 	blt	r4,r2,8007e70 <___vfprintf_internal_r+0x1f54>
 8007914:	42000204 	addi	r8,r8,8
 8007918:	0421c83a 	sub	r16,zero,r16
 800791c:	0400810e 	bge	zero,r16,8007b24 <___vfprintf_internal_r+0x1c08>
 8007920:	04400404 	movi	r17,16
 8007924:	8c00bd0e 	bge	r17,r16,8007c1c <___vfprintf_internal_r+0x1d00>
 8007928:	01420074 	movhi	r5,2049
 800792c:	295b4784 	addi	r5,r5,27934
 8007930:	d9412c15 	stw	r5,1200(sp)
 8007934:	04c001c4 	movi	r19,7
 8007938:	00000306 	br	8007948 <___vfprintf_internal_r+0x1a2c>
 800793c:	42000204 	addi	r8,r8,8
 8007940:	843ffc04 	addi	r16,r16,-16
 8007944:	8c00b80e 	bge	r17,r16,8007c28 <___vfprintf_internal_r+0x1d0c>
 8007948:	18c00404 	addi	r3,r3,16
 800794c:	10800044 	addi	r2,r2,1
 8007950:	45000015 	stw	r20,0(r8)
 8007954:	44400115 	stw	r17,4(r8)
 8007958:	d8c12015 	stw	r3,1152(sp)
 800795c:	d8811f15 	stw	r2,1148(sp)
 8007960:	98bff60e 	bge	r19,r2,800793c <__alt_data_end+0xfc00793c>
 8007964:	b809883a 	mov	r4,r23
 8007968:	b00b883a 	mov	r5,r22
 800796c:	d9811e04 	addi	r6,sp,1144
 8007970:	800dd300 	call	800dd30 <__sprint_r>
 8007974:	103a811e 	bne	r2,zero,800637c <__alt_data_end+0xfc00637c>
 8007978:	d8c12017 	ldw	r3,1152(sp)
 800797c:	d8811f17 	ldw	r2,1148(sp)
 8007980:	da000404 	addi	r8,sp,16
 8007984:	003fee06 	br	8007940 <__alt_data_end+0xfc007940>
 8007988:	008011c4 	movi	r2,71
 800798c:	1400db16 	blt	r2,r16,8007cfc <___vfprintf_internal_r+0x1de0>
 8007990:	01020074 	movhi	r4,2049
 8007994:	211b3104 	addi	r4,r4,27844
 8007998:	d9013115 	stw	r4,1220(sp)
 800799c:	00c000c4 	movi	r3,3
 80079a0:	00bfdfc4 	movi	r2,-129
 80079a4:	d8c12b15 	stw	r3,1196(sp)
 80079a8:	e0b8703a 	and	fp,fp,r2
 80079ac:	dcc12783 	ldbu	r19,1182(sp)
 80079b0:	dc812d15 	stw	r18,1204(sp)
 80079b4:	1823883a 	mov	r17,r3
 80079b8:	d8013215 	stw	zero,1224(sp)
 80079bc:	d8013415 	stw	zero,1232(sp)
 80079c0:	003ad606 	br	800651c <__alt_data_end+0xfc00651c>
 80079c4:	4823883a 	mov	r17,r9
 80079c8:	003cc906 	br	8006cf0 <__alt_data_end+0xfc006cf0>
 80079cc:	1c800017 	ldw	r18,0(r3)
 80079d0:	d8c12d17 	ldw	r3,1204(sp)
 80079d4:	902bd7fa 	srai	r21,r18,31
 80079d8:	18c00104 	addi	r3,r3,4
 80079dc:	d8c12d15 	stw	r3,1204(sp)
 80079e0:	a805883a 	mov	r2,r21
 80079e4:	003aa906 	br	800648c <__alt_data_end+0xfc00648c>
 80079e8:	d9412d17 	ldw	r5,1204(sp)
 80079ec:	14800017 	ldw	r18,0(r2)
 80079f0:	002b883a 	mov	r21,zero
 80079f4:	29400104 	addi	r5,r5,4
 80079f8:	d9412d15 	stw	r5,1204(sp)
 80079fc:	003bf906 	br	80069e4 <__alt_data_end+0xfc0069e4>
 8007a00:	d8c12d17 	ldw	r3,1204(sp)
 8007a04:	14800017 	ldw	r18,0(r2)
 8007a08:	002b883a 	mov	r21,zero
 8007a0c:	18c00104 	addi	r3,r3,4
 8007a10:	d8c12d15 	stw	r3,1204(sp)
 8007a14:	00800044 	movi	r2,1
 8007a18:	9007883a 	mov	r3,r18
 8007a1c:	003bcf06 	br	800695c <__alt_data_end+0xfc00695c>
 8007a20:	d9012d17 	ldw	r4,1204(sp)
 8007a24:	14800017 	ldw	r18,0(r2)
 8007a28:	002b883a 	mov	r21,zero
 8007a2c:	21000104 	addi	r4,r4,4
 8007a30:	d9012d15 	stw	r4,1204(sp)
 8007a34:	0005883a 	mov	r2,zero
 8007a38:	9007883a 	mov	r3,r18
 8007a3c:	003bc706 	br	800695c <__alt_data_end+0xfc00695c>
 8007a40:	d9412d17 	ldw	r5,1204(sp)
 8007a44:	d8c12f17 	ldw	r3,1212(sp)
 8007a48:	28800017 	ldw	r2,0(r5)
 8007a4c:	29400104 	addi	r5,r5,4
 8007a50:	d9412d15 	stw	r5,1204(sp)
 8007a54:	10c00015 	stw	r3,0(r2)
 8007a58:	00396d06 	br	8006010 <__alt_data_end+0xfc006010>
 8007a5c:	01020074 	movhi	r4,2049
 8007a60:	211b2f04 	addi	r4,r4,27836
 8007a64:	d9013115 	stw	r4,1220(sp)
 8007a68:	003ba206 	br	80068f4 <__alt_data_end+0xfc0068f4>
 8007a6c:	b809883a 	mov	r4,r23
 8007a70:	b00b883a 	mov	r5,r22
 8007a74:	d9811e04 	addi	r6,sp,1144
 8007a78:	800dd300 	call	800dd30 <__sprint_r>
 8007a7c:	103a3f1e 	bne	r2,zero,800637c <__alt_data_end+0xfc00637c>
 8007a80:	dc012617 	ldw	r16,1176(sp)
 8007a84:	d8c12017 	ldw	r3,1152(sp)
 8007a88:	da000404 	addi	r8,sp,16
 8007a8c:	003f9106 	br	80078d4 <__alt_data_end+0xfc0078d4>
 8007a90:	e0800044 	addi	r2,fp,1
 8007a94:	9cc00814 	ori	r19,r19,32
 8007a98:	e4000047 	ldb	r16,1(fp)
 8007a9c:	00398706 	br	80060bc <__alt_data_end+0xfc0060bc>
 8007aa0:	d8812e17 	ldw	r2,1208(sp)
 8007aa4:	d8c12d15 	stw	r3,1204(sp)
 8007aa8:	0085c83a 	sub	r2,zero,r2
 8007aac:	d8812e15 	stw	r2,1208(sp)
 8007ab0:	e005883a 	mov	r2,fp
 8007ab4:	003a3a06 	br	80063a0 <__alt_data_end+0xfc0063a0>
 8007ab8:	b809883a 	mov	r4,r23
 8007abc:	b00b883a 	mov	r5,r22
 8007ac0:	d9811e04 	addi	r6,sp,1144
 8007ac4:	800dd300 	call	800dd30 <__sprint_r>
 8007ac8:	103a2c1e 	bne	r2,zero,800637c <__alt_data_end+0xfc00637c>
 8007acc:	d8c12017 	ldw	r3,1152(sp)
 8007ad0:	da000404 	addi	r8,sp,16
 8007ad4:	003cf006 	br	8006e98 <__alt_data_end+0xfc006e98>
 8007ad8:	d8c12817 	ldw	r3,1184(sp)
 8007adc:	d9013117 	ldw	r4,1220(sp)
 8007ae0:	1923c83a 	sub	r17,r3,r4
 8007ae4:	003a8806 	br	8006508 <__alt_data_end+0xfc006508>
 8007ae8:	da013f15 	stw	r8,1276(sp)
 8007aec:	8003e140 	call	8003e14 <strlen>
 8007af0:	1023883a 	mov	r17,r2
 8007af4:	da013f17 	ldw	r8,1276(sp)
 8007af8:	883c7f0e 	bge	r17,zero,8006cf8 <__alt_data_end+0xfc006cf8>
 8007afc:	0005883a 	mov	r2,zero
 8007b00:	003c7d06 	br	8006cf8 <__alt_data_end+0xfc006cf8>
 8007b04:	b809883a 	mov	r4,r23
 8007b08:	b00b883a 	mov	r5,r22
 8007b0c:	d9811e04 	addi	r6,sp,1144
 8007b10:	800dd300 	call	800dd30 <__sprint_r>
 8007b14:	103a191e 	bne	r2,zero,800637c <__alt_data_end+0xfc00637c>
 8007b18:	d8c12017 	ldw	r3,1152(sp)
 8007b1c:	d8811f17 	ldw	r2,1148(sp)
 8007b20:	da000404 	addi	r8,sp,16
 8007b24:	d9413317 	ldw	r5,1228(sp)
 8007b28:	d9013117 	ldw	r4,1220(sp)
 8007b2c:	10800044 	addi	r2,r2,1
 8007b30:	28c7883a 	add	r3,r5,r3
 8007b34:	41000015 	stw	r4,0(r8)
 8007b38:	41400115 	stw	r5,4(r8)
 8007b3c:	d8c12015 	stw	r3,1152(sp)
 8007b40:	d8811f15 	stw	r2,1148(sp)
 8007b44:	010001c4 	movi	r4,7
 8007b48:	20bb060e 	bge	r4,r2,8006764 <__alt_data_end+0xfc006764>
 8007b4c:	003d6206 	br	80070d8 <__alt_data_end+0xfc0070d8>
 8007b50:	01020074 	movhi	r4,2049
 8007b54:	211b4b84 	addi	r4,r4,27950
 8007b58:	d9013615 	stw	r4,1240(sp)
 8007b5c:	003aa306 	br	80065ec <__alt_data_end+0xfc0065ec>
 8007b60:	d8812604 	addi	r2,sp,1176
 8007b64:	d8800115 	stw	r2,4(sp)
 8007b68:	d9413717 	ldw	r5,1244(sp)
 8007b6c:	d8812504 	addi	r2,sp,1172
 8007b70:	d8800215 	stw	r2,8(sp)
 8007b74:	d8812104 	addi	r2,sp,1156
 8007b78:	da400015 	stw	r9,0(sp)
 8007b7c:	d8800315 	stw	r2,12(sp)
 8007b80:	b809883a 	mov	r4,r23
 8007b84:	880d883a 	mov	r6,r17
 8007b88:	01c000c4 	movi	r7,3
 8007b8c:	da013f15 	stw	r8,1276(sp)
 8007b90:	da413e15 	stw	r9,1272(sp)
 8007b94:	80083940 	call	8008394 <_dtoa_r>
 8007b98:	da413e17 	ldw	r9,1272(sp)
 8007b9c:	da013f17 	ldw	r8,1276(sp)
 8007ba0:	d8813115 	stw	r2,1220(sp)
 8007ba4:	482b883a 	mov	r21,r9
 8007ba8:	d8c13117 	ldw	r3,1220(sp)
 8007bac:	00801184 	movi	r2,70
 8007bb0:	1d55883a 	add	r10,r3,r21
 8007bb4:	98bebb1e 	bne	r19,r2,80076a4 <__alt_data_end+0xfc0076a4>
 8007bb8:	19000007 	ldb	r4,0(r3)
 8007bbc:	00800c04 	movi	r2,48
 8007bc0:	2080dd26 	beq	r4,r2,8007f38 <___vfprintf_internal_r+0x201c>
 8007bc4:	d8c12617 	ldw	r3,1176(sp)
 8007bc8:	50d5883a 	add	r10,r10,r3
 8007bcc:	003eb506 	br	80076a4 <__alt_data_end+0xfc0076a4>
 8007bd0:	0023883a 	mov	r17,zero
 8007bd4:	003d9b06 	br	8007244 <__alt_data_end+0xfc007244>
 8007bd8:	b809883a 	mov	r4,r23
 8007bdc:	b00b883a 	mov	r5,r22
 8007be0:	d9811e04 	addi	r6,sp,1144
 8007be4:	800dd300 	call	800dd30 <__sprint_r>
 8007be8:	1039e41e 	bne	r2,zero,800637c <__alt_data_end+0xfc00637c>
 8007bec:	d8c12017 	ldw	r3,1152(sp)
 8007bf0:	da000404 	addi	r8,sp,16
 8007bf4:	003d9206 	br	8007240 <__alt_data_end+0xfc007240>
 8007bf8:	b809883a 	mov	r4,r23
 8007bfc:	b00b883a 	mov	r5,r22
 8007c00:	d9811e04 	addi	r6,sp,1144
 8007c04:	800dd300 	call	800dd30 <__sprint_r>
 8007c08:	1039dc1e 	bne	r2,zero,800637c <__alt_data_end+0xfc00637c>
 8007c0c:	d8812617 	ldw	r2,1176(sp)
 8007c10:	d8c12017 	ldw	r3,1152(sp)
 8007c14:	da000404 	addi	r8,sp,16
 8007c18:	003dfb06 	br	8007408 <__alt_data_end+0xfc007408>
 8007c1c:	01020074 	movhi	r4,2049
 8007c20:	211b4784 	addi	r4,r4,27934
 8007c24:	d9012c15 	stw	r4,1200(sp)
 8007c28:	d9012c17 	ldw	r4,1200(sp)
 8007c2c:	1c07883a 	add	r3,r3,r16
 8007c30:	10800044 	addi	r2,r2,1
 8007c34:	41000015 	stw	r4,0(r8)
 8007c38:	44000115 	stw	r16,4(r8)
 8007c3c:	d8c12015 	stw	r3,1152(sp)
 8007c40:	d8811f15 	stw	r2,1148(sp)
 8007c44:	010001c4 	movi	r4,7
 8007c48:	20bfae16 	blt	r4,r2,8007b04 <__alt_data_end+0xfc007b04>
 8007c4c:	42000204 	addi	r8,r8,8
 8007c50:	003fb406 	br	8007b24 <__alt_data_end+0xfc007b24>
 8007c54:	0021883a 	mov	r16,zero
 8007c58:	003dfd06 	br	8007450 <__alt_data_end+0xfc007450>
 8007c5c:	01420074 	movhi	r5,2049
 8007c60:	295b4b84 	addi	r5,r5,27950
 8007c64:	d9413615 	stw	r5,1240(sp)
 8007c68:	003ae306 	br	80067f8 <__alt_data_end+0xfc0067f8>
 8007c6c:	b809883a 	mov	r4,r23
 8007c70:	b00b883a 	mov	r5,r22
 8007c74:	d9811e04 	addi	r6,sp,1144
 8007c78:	800dd300 	call	800dd30 <__sprint_r>
 8007c7c:	1039bf1e 	bne	r2,zero,800637c <__alt_data_end+0xfc00637c>
 8007c80:	d8812617 	ldw	r2,1176(sp)
 8007c84:	d9413317 	ldw	r5,1228(sp)
 8007c88:	d8c12017 	ldw	r3,1152(sp)
 8007c8c:	da000404 	addi	r8,sp,16
 8007c90:	2885c83a 	sub	r2,r5,r2
 8007c94:	003ded06 	br	800744c <__alt_data_end+0xfc00744c>
 8007c98:	00800184 	movi	r2,6
 8007c9c:	1240012e 	bgeu	r2,r9,8007ca4 <___vfprintf_internal_r+0x1d88>
 8007ca0:	1013883a 	mov	r9,r2
 8007ca4:	4823883a 	mov	r17,r9
 8007ca8:	4805883a 	mov	r2,r9
 8007cac:	4800b216 	blt	r9,zero,8007f78 <___vfprintf_internal_r+0x205c>
 8007cb0:	01420074 	movhi	r5,2049
 8007cb4:	295b3d04 	addi	r5,r5,27892
 8007cb8:	d8812b15 	stw	r2,1196(sp)
 8007cbc:	dc812d15 	stw	r18,1204(sp)
 8007cc0:	d8013215 	stw	zero,1224(sp)
 8007cc4:	d8013415 	stw	zero,1232(sp)
 8007cc8:	d9413115 	stw	r5,1220(sp)
 8007ccc:	0005883a 	mov	r2,zero
 8007cd0:	003a1906 	br	8006538 <__alt_data_end+0xfc006538>
 8007cd4:	04c00b44 	movi	r19,45
 8007cd8:	dcc12785 	stb	r19,1182(sp)
 8007cdc:	003b0006 	br	80068e0 <__alt_data_end+0xfc0068e0>
 8007ce0:	d8c12d17 	ldw	r3,1204(sp)
 8007ce4:	d9012f17 	ldw	r4,1212(sp)
 8007ce8:	18800017 	ldw	r2,0(r3)
 8007cec:	18c00104 	addi	r3,r3,4
 8007cf0:	d8c12d15 	stw	r3,1204(sp)
 8007cf4:	11000015 	stw	r4,0(r2)
 8007cf8:	0038c506 	br	8006010 <__alt_data_end+0xfc006010>
 8007cfc:	01420074 	movhi	r5,2049
 8007d00:	295b3204 	addi	r5,r5,27848
 8007d04:	d9413115 	stw	r5,1220(sp)
 8007d08:	003f2406 	br	800799c <__alt_data_end+0xfc00799c>
 8007d0c:	00800b44 	movi	r2,45
 8007d10:	d8812785 	stb	r2,1182(sp)
 8007d14:	df012b15 	stw	fp,1196(sp)
 8007d18:	d8013215 	stw	zero,1224(sp)
 8007d1c:	df012d17 	ldw	fp,1204(sp)
 8007d20:	00800b44 	movi	r2,45
 8007d24:	dc812d15 	stw	r18,1204(sp)
 8007d28:	003a0006 	br	800652c <__alt_data_end+0xfc00652c>
 8007d2c:	d8c12617 	ldw	r3,1176(sp)
 8007d30:	00bfff44 	movi	r2,-3
 8007d34:	18800a16 	blt	r3,r2,8007d60 <___vfprintf_internal_r+0x1e44>
 8007d38:	48c00916 	blt	r9,r3,8007d60 <___vfprintf_internal_r+0x1e44>
 8007d3c:	d8c13415 	stw	r3,1232(sp)
 8007d40:	040019c4 	movi	r16,103
 8007d44:	003e7606 	br	8007720 <__alt_data_end+0xfc007720>
 8007d48:	01020074 	movhi	r4,2049
 8007d4c:	211b4784 	addi	r4,r4,27934
 8007d50:	d9012c15 	stw	r4,1200(sp)
 8007d54:	003c8e06 	br	8006f90 <__alt_data_end+0xfc006f90>
 8007d58:	5005883a 	mov	r2,r10
 8007d5c:	003e6506 	br	80076f4 <__alt_data_end+0xfc0076f4>
 8007d60:	843fff84 	addi	r16,r16,-2
 8007d64:	1d7fffc4 	addi	r21,r3,-1
 8007d68:	dd412615 	stw	r21,1176(sp)
 8007d6c:	dc0122c5 	stb	r16,1163(sp)
 8007d70:	a8009216 	blt	r21,zero,8007fbc <___vfprintf_internal_r+0x20a0>
 8007d74:	00800ac4 	movi	r2,43
 8007d78:	d8812305 	stb	r2,1164(sp)
 8007d7c:	00800244 	movi	r2,9
 8007d80:	1540660e 	bge	r2,r21,8007f1c <___vfprintf_internal_r+0x2000>
 8007d84:	dcc122c4 	addi	r19,sp,1163
 8007d88:	dc012c15 	stw	r16,1200(sp)
 8007d8c:	4023883a 	mov	r17,r8
 8007d90:	9821883a 	mov	r16,r19
 8007d94:	a809883a 	mov	r4,r21
 8007d98:	01400284 	movi	r5,10
 8007d9c:	80107f80 	call	80107f8 <__modsi3>
 8007da0:	10800c04 	addi	r2,r2,48
 8007da4:	843fffc4 	addi	r16,r16,-1
 8007da8:	a809883a 	mov	r4,r21
 8007dac:	01400284 	movi	r5,10
 8007db0:	80800005 	stb	r2,0(r16)
 8007db4:	80107a40 	call	80107a4 <__divsi3>
 8007db8:	01000244 	movi	r4,9
 8007dbc:	102b883a 	mov	r21,r2
 8007dc0:	20bff416 	blt	r4,r2,8007d94 <__alt_data_end+0xfc007d94>
 8007dc4:	8811883a 	mov	r8,r17
 8007dc8:	10800c04 	addi	r2,r2,48
 8007dcc:	8023883a 	mov	r17,r16
 8007dd0:	897fffc4 	addi	r5,r17,-1
 8007dd4:	88bfffc5 	stb	r2,-1(r17)
 8007dd8:	dc012c17 	ldw	r16,1200(sp)
 8007ddc:	2cc08a2e 	bgeu	r5,r19,8008008 <___vfprintf_internal_r+0x20ec>
 8007de0:	d9812384 	addi	r6,sp,1166
 8007de4:	344dc83a 	sub	r6,r6,r17
 8007de8:	d9012344 	addi	r4,sp,1165
 8007dec:	998d883a 	add	r6,r19,r6
 8007df0:	00000106 	br	8007df8 <___vfprintf_internal_r+0x1edc>
 8007df4:	28800003 	ldbu	r2,0(r5)
 8007df8:	20800005 	stb	r2,0(r4)
 8007dfc:	21000044 	addi	r4,r4,1
 8007e00:	29400044 	addi	r5,r5,1
 8007e04:	21bffb1e 	bne	r4,r6,8007df4 <__alt_data_end+0xfc007df4>
 8007e08:	d8812304 	addi	r2,sp,1164
 8007e0c:	1445c83a 	sub	r2,r2,r17
 8007e10:	d9412344 	addi	r5,sp,1165
 8007e14:	2885883a 	add	r2,r5,r2
 8007e18:	14e7c83a 	sub	r19,r2,r19
 8007e1c:	d8813317 	ldw	r2,1228(sp)
 8007e20:	d8c13317 	ldw	r3,1228(sp)
 8007e24:	dcc13a15 	stw	r19,1256(sp)
 8007e28:	14e3883a 	add	r17,r2,r19
 8007e2c:	00800044 	movi	r2,1
 8007e30:	10c0550e 	bge	r2,r3,8007f88 <___vfprintf_internal_r+0x206c>
 8007e34:	8c400044 	addi	r17,r17,1
 8007e38:	8839883a 	mov	fp,r17
 8007e3c:	88005016 	blt	r17,zero,8007f80 <___vfprintf_internal_r+0x2064>
 8007e40:	d8013415 	stw	zero,1232(sp)
 8007e44:	003e3f06 	br	8007744 <__alt_data_end+0xfc007744>
 8007e48:	da412b15 	stw	r9,1196(sp)
 8007e4c:	dcc12783 	ldbu	r19,1182(sp)
 8007e50:	4823883a 	mov	r17,r9
 8007e54:	dc812d15 	stw	r18,1204(sp)
 8007e58:	d8013215 	stw	zero,1224(sp)
 8007e5c:	d8013415 	stw	zero,1232(sp)
 8007e60:	0039ae06 	br	800651c <__alt_data_end+0xfc00651c>
 8007e64:	483de91e 	bne	r9,zero,800760c <__alt_data_end+0xfc00760c>
 8007e68:	8813883a 	mov	r9,r17
 8007e6c:	003de706 	br	800760c <__alt_data_end+0xfc00760c>
 8007e70:	b809883a 	mov	r4,r23
 8007e74:	b00b883a 	mov	r5,r22
 8007e78:	d9811e04 	addi	r6,sp,1144
 8007e7c:	800dd300 	call	800dd30 <__sprint_r>
 8007e80:	10393e1e 	bne	r2,zero,800637c <__alt_data_end+0xfc00637c>
 8007e84:	dc012617 	ldw	r16,1176(sp)
 8007e88:	d8c12017 	ldw	r3,1152(sp)
 8007e8c:	d8811f17 	ldw	r2,1148(sp)
 8007e90:	da000404 	addi	r8,sp,16
 8007e94:	003ea006 	br	8007918 <__alt_data_end+0xfc007918>
 8007e98:	00c00b44 	movi	r3,45
 8007e9c:	2460003c 	xorhi	r17,r4,32768
 8007ea0:	d8c12b05 	stb	r3,1196(sp)
 8007ea4:	003ddf06 	br	8007624 <__alt_data_end+0xfc007624>
 8007ea8:	02400184 	movi	r9,6
 8007eac:	003dd706 	br	800760c <__alt_data_end+0xfc00760c>
 8007eb0:	4d400044 	addi	r21,r9,1
 8007eb4:	003de206 	br	8007640 <__alt_data_end+0xfc007640>
 8007eb8:	d8c13417 	ldw	r3,1232(sp)
 8007ebc:	00c0490e 	bge	zero,r3,8007fe4 <___vfprintf_internal_r+0x20c8>
 8007ec0:	04400044 	movi	r17,1
 8007ec4:	d9013317 	ldw	r4,1228(sp)
 8007ec8:	8923883a 	add	r17,r17,r4
 8007ecc:	8839883a 	mov	fp,r17
 8007ed0:	883e1c0e 	bge	r17,zero,8007744 <__alt_data_end+0xfc007744>
 8007ed4:	0039883a 	mov	fp,zero
 8007ed8:	003e1a06 	br	8007744 <__alt_data_end+0xfc007744>
 8007edc:	00c03b0e 	bge	zero,r3,8007fcc <___vfprintf_internal_r+0x20b0>
 8007ee0:	4800021e 	bne	r9,zero,8007eec <___vfprintf_internal_r+0x1fd0>
 8007ee4:	e080004c 	andi	r2,fp,1
 8007ee8:	10000626 	beq	r2,zero,8007f04 <___vfprintf_internal_r+0x1fe8>
 8007eec:	d8c13417 	ldw	r3,1232(sp)
 8007ef0:	4a400044 	addi	r9,r9,1
 8007ef4:	1a63883a 	add	r17,r3,r9
 8007ef8:	8839883a 	mov	fp,r17
 8007efc:	883e110e 	bge	r17,zero,8007744 <__alt_data_end+0xfc007744>
 8007f00:	003ff406 	br	8007ed4 <__alt_data_end+0xfc007ed4>
 8007f04:	1839883a 	mov	fp,r3
 8007f08:	18004116 	blt	r3,zero,8008010 <___vfprintf_internal_r+0x20f4>
 8007f0c:	dc413417 	ldw	r17,1232(sp)
 8007f10:	003e0c06 	br	8007744 <__alt_data_end+0xfc007744>
 8007f14:	d8812117 	ldw	r2,1156(sp)
 8007f18:	003df606 	br	80076f4 <__alt_data_end+0xfc0076f4>
 8007f1c:	00800c04 	movi	r2,48
 8007f20:	a8c00c04 	addi	r3,r21,48
 8007f24:	d8812345 	stb	r2,1165(sp)
 8007f28:	d8c12385 	stb	r3,1166(sp)
 8007f2c:	d88123c4 	addi	r2,sp,1167
 8007f30:	dcc122c4 	addi	r19,sp,1163
 8007f34:	003fb806 	br	8007e18 <__alt_data_end+0xfc007e18>
 8007f38:	d9013717 	ldw	r4,1244(sp)
 8007f3c:	880b883a 	mov	r5,r17
 8007f40:	000d883a 	mov	r6,zero
 8007f44:	000f883a 	mov	r7,zero
 8007f48:	da013f15 	stw	r8,1276(sp)
 8007f4c:	da413e15 	stw	r9,1272(sp)
 8007f50:	da813d15 	stw	r10,1268(sp)
 8007f54:	8011a800 	call	8011a80 <__eqdf2>
 8007f58:	da013f17 	ldw	r8,1276(sp)
 8007f5c:	da413e17 	ldw	r9,1272(sp)
 8007f60:	da813d17 	ldw	r10,1268(sp)
 8007f64:	103f1726 	beq	r2,zero,8007bc4 <__alt_data_end+0xfc007bc4>
 8007f68:	00800044 	movi	r2,1
 8007f6c:	1547c83a 	sub	r3,r2,r21
 8007f70:	d8c12615 	stw	r3,1176(sp)
 8007f74:	003f1406 	br	8007bc8 <__alt_data_end+0xfc007bc8>
 8007f78:	0005883a 	mov	r2,zero
 8007f7c:	003f4c06 	br	8007cb0 <__alt_data_end+0xfc007cb0>
 8007f80:	0039883a 	mov	fp,zero
 8007f84:	003fae06 	br	8007e40 <__alt_data_end+0xfc007e40>
 8007f88:	e084703a 	and	r2,fp,r2
 8007f8c:	103faa26 	beq	r2,zero,8007e38 <__alt_data_end+0xfc007e38>
 8007f90:	003fa806 	br	8007e34 <__alt_data_end+0xfc007e34>
 8007f94:	d9412d17 	ldw	r5,1204(sp)
 8007f98:	2a400017 	ldw	r9,0(r5)
 8007f9c:	28c00104 	addi	r3,r5,4
 8007fa0:	d8c12d15 	stw	r3,1204(sp)
 8007fa4:	483ebc0e 	bge	r9,zero,8007a98 <__alt_data_end+0xfc007a98>
 8007fa8:	027fffc4 	movi	r9,-1
 8007fac:	e4000047 	ldb	r16,1(fp)
 8007fb0:	00384206 	br	80060bc <__alt_data_end+0xfc0060bc>
 8007fb4:	043fffc4 	movi	r16,-1
 8007fb8:	0038ce06 	br	80062f4 <__alt_data_end+0xfc0062f4>
 8007fbc:	00800b44 	movi	r2,45
 8007fc0:	056bc83a 	sub	r21,zero,r21
 8007fc4:	d8812305 	stb	r2,1164(sp)
 8007fc8:	003f6c06 	br	8007d7c <__alt_data_end+0xfc007d7c>
 8007fcc:	4800081e 	bne	r9,zero,8007ff0 <___vfprintf_internal_r+0x20d4>
 8007fd0:	e080004c 	andi	r2,fp,1
 8007fd4:	1000061e 	bne	r2,zero,8007ff0 <___vfprintf_internal_r+0x20d4>
 8007fd8:	07000044 	movi	fp,1
 8007fdc:	e023883a 	mov	r17,fp
 8007fe0:	003dd806 	br	8007744 <__alt_data_end+0xfc007744>
 8007fe4:	04400084 	movi	r17,2
 8007fe8:	88e3c83a 	sub	r17,r17,r3
 8007fec:	003fb506 	br	8007ec4 <__alt_data_end+0xfc007ec4>
 8007ff0:	4c400084 	addi	r17,r9,2
 8007ff4:	8839883a 	mov	fp,r17
 8007ff8:	883dd20e 	bge	r17,zero,8007744 <__alt_data_end+0xfc007744>
 8007ffc:	003fb506 	br	8007ed4 <__alt_data_end+0xfc007ed4>
 8008000:	d8c12617 	ldw	r3,1176(sp)
 8008004:	003f5706 	br	8007d64 <__alt_data_end+0xfc007d64>
 8008008:	d8812344 	addi	r2,sp,1165
 800800c:	003f8206 	br	8007e18 <__alt_data_end+0xfc007e18>
 8008010:	0039883a 	mov	fp,zero
 8008014:	003fbd06 	br	8007f0c <__alt_data_end+0xfc007f0c>

08008018 <__vfprintf_internal>:
 8008018:	2007883a 	mov	r3,r4
 800801c:	010200b4 	movhi	r4,2050
 8008020:	21231904 	addi	r4,r4,-29596
 8008024:	21000017 	ldw	r4,0(r4)
 8008028:	2805883a 	mov	r2,r5
 800802c:	300f883a 	mov	r7,r6
 8008030:	180b883a 	mov	r5,r3
 8008034:	100d883a 	mov	r6,r2
 8008038:	8005f1c1 	jmpi	8005f1c <___vfprintf_internal_r>

0800803c <__swsetup_r>:
 800803c:	008200b4 	movhi	r2,2050
 8008040:	defffd04 	addi	sp,sp,-12
 8008044:	10a31904 	addi	r2,r2,-29596
 8008048:	dc400115 	stw	r17,4(sp)
 800804c:	2023883a 	mov	r17,r4
 8008050:	11000017 	ldw	r4,0(r2)
 8008054:	dc000015 	stw	r16,0(sp)
 8008058:	dfc00215 	stw	ra,8(sp)
 800805c:	2821883a 	mov	r16,r5
 8008060:	20000226 	beq	r4,zero,800806c <__swsetup_r+0x30>
 8008064:	20c00e17 	ldw	r3,56(r4)
 8008068:	18002e26 	beq	r3,zero,8008124 <__swsetup_r+0xe8>
 800806c:	8080030b 	ldhu	r2,12(r16)
 8008070:	10c0020c 	andi	r3,r2,8
 8008074:	100d883a 	mov	r6,r2
 8008078:	18000f26 	beq	r3,zero,80080b8 <__swsetup_r+0x7c>
 800807c:	80c00417 	ldw	r3,16(r16)
 8008080:	18001526 	beq	r3,zero,80080d8 <__swsetup_r+0x9c>
 8008084:	1100004c 	andi	r4,r2,1
 8008088:	20001c1e 	bne	r4,zero,80080fc <__swsetup_r+0xc0>
 800808c:	1080008c 	andi	r2,r2,2
 8008090:	1000261e 	bne	r2,zero,800812c <__swsetup_r+0xf0>
 8008094:	80800517 	ldw	r2,20(r16)
 8008098:	80800215 	stw	r2,8(r16)
 800809c:	18001c26 	beq	r3,zero,8008110 <__swsetup_r+0xd4>
 80080a0:	0005883a 	mov	r2,zero
 80080a4:	dfc00217 	ldw	ra,8(sp)
 80080a8:	dc400117 	ldw	r17,4(sp)
 80080ac:	dc000017 	ldw	r16,0(sp)
 80080b0:	dec00304 	addi	sp,sp,12
 80080b4:	f800283a 	ret
 80080b8:	3080040c 	andi	r2,r6,16
 80080bc:	10001726 	beq	r2,zero,800811c <__swsetup_r+0xe0>
 80080c0:	3080010c 	andi	r2,r6,4
 80080c4:	10001b1e 	bne	r2,zero,8008134 <__swsetup_r+0xf8>
 80080c8:	80c00417 	ldw	r3,16(r16)
 80080cc:	30800214 	ori	r2,r6,8
 80080d0:	8080030d 	sth	r2,12(r16)
 80080d4:	183feb1e 	bne	r3,zero,8008084 <__alt_data_end+0xfc008084>
 80080d8:	1140a00c 	andi	r5,r2,640
 80080dc:	01008004 	movi	r4,512
 80080e0:	293fe826 	beq	r5,r4,8008084 <__alt_data_end+0xfc008084>
 80080e4:	8809883a 	mov	r4,r17
 80080e8:	800b883a 	mov	r5,r16
 80080ec:	800abd00 	call	800abd0 <__smakebuf_r>
 80080f0:	8080030b 	ldhu	r2,12(r16)
 80080f4:	80c00417 	ldw	r3,16(r16)
 80080f8:	003fe206 	br	8008084 <__alt_data_end+0xfc008084>
 80080fc:	80800517 	ldw	r2,20(r16)
 8008100:	80000215 	stw	zero,8(r16)
 8008104:	0085c83a 	sub	r2,zero,r2
 8008108:	80800615 	stw	r2,24(r16)
 800810c:	183fe41e 	bne	r3,zero,80080a0 <__alt_data_end+0xfc0080a0>
 8008110:	8080030b 	ldhu	r2,12(r16)
 8008114:	1080200c 	andi	r2,r2,128
 8008118:	103fe226 	beq	r2,zero,80080a4 <__alt_data_end+0xfc0080a4>
 800811c:	00bfffc4 	movi	r2,-1
 8008120:	003fe006 	br	80080a4 <__alt_data_end+0xfc0080a4>
 8008124:	800a0780 	call	800a078 <__sinit>
 8008128:	003fd006 	br	800806c <__alt_data_end+0xfc00806c>
 800812c:	0005883a 	mov	r2,zero
 8008130:	003fd906 	br	8008098 <__alt_data_end+0xfc008098>
 8008134:	81400c17 	ldw	r5,48(r16)
 8008138:	28000626 	beq	r5,zero,8008154 <__swsetup_r+0x118>
 800813c:	80801004 	addi	r2,r16,64
 8008140:	28800326 	beq	r5,r2,8008150 <__swsetup_r+0x114>
 8008144:	8809883a 	mov	r4,r17
 8008148:	800a1ec0 	call	800a1ec <_free_r>
 800814c:	8180030b 	ldhu	r6,12(r16)
 8008150:	80000c15 	stw	zero,48(r16)
 8008154:	80c00417 	ldw	r3,16(r16)
 8008158:	00bff6c4 	movi	r2,-37
 800815c:	118c703a 	and	r6,r2,r6
 8008160:	80000115 	stw	zero,4(r16)
 8008164:	80c00015 	stw	r3,0(r16)
 8008168:	003fd806 	br	80080cc <__alt_data_end+0xfc0080cc>

0800816c <quorem>:
 800816c:	defff204 	addi	sp,sp,-56
 8008170:	ddc00b15 	stw	r23,44(sp)
 8008174:	20800417 	ldw	r2,16(r4)
 8008178:	2dc00417 	ldw	r23,16(r5)
 800817c:	dfc00d15 	stw	ra,52(sp)
 8008180:	df000c15 	stw	fp,48(sp)
 8008184:	dd800a15 	stw	r22,40(sp)
 8008188:	dd400915 	stw	r21,36(sp)
 800818c:	dd000815 	stw	r20,32(sp)
 8008190:	dcc00715 	stw	r19,28(sp)
 8008194:	dc800615 	stw	r18,24(sp)
 8008198:	dc400515 	stw	r17,20(sp)
 800819c:	dc000415 	stw	r16,16(sp)
 80081a0:	15c07a16 	blt	r2,r23,800838c <quorem+0x220>
 80081a4:	bdffffc4 	addi	r23,r23,-1
 80081a8:	bde9883a 	add	r20,r23,r23
 80081ac:	28c00504 	addi	r3,r5,20
 80081b0:	a529883a 	add	r20,r20,r20
 80081b4:	1d39883a 	add	fp,r3,r20
 80081b8:	24c00504 	addi	r19,r4,20
 80081bc:	d9400215 	stw	r5,8(sp)
 80081c0:	9d29883a 	add	r20,r19,r20
 80081c4:	e1400017 	ldw	r5,0(fp)
 80081c8:	d9000015 	stw	r4,0(sp)
 80081cc:	a1000017 	ldw	r4,0(r20)
 80081d0:	29400044 	addi	r5,r5,1
 80081d4:	d8c00115 	stw	r3,4(sp)
 80081d8:	dd000315 	stw	r20,12(sp)
 80081dc:	80108540 	call	8010854 <__udivsi3>
 80081e0:	1025883a 	mov	r18,r2
 80081e4:	10003026 	beq	r2,zero,80082a8 <quorem+0x13c>
 80081e8:	dc400117 	ldw	r17,4(sp)
 80081ec:	9829883a 	mov	r20,r19
 80081f0:	002d883a 	mov	r22,zero
 80081f4:	0021883a 	mov	r16,zero
 80081f8:	8d400017 	ldw	r21,0(r17)
 80081fc:	900b883a 	mov	r5,r18
 8008200:	8c400104 	addi	r17,r17,4
 8008204:	a93fffcc 	andi	r4,r21,65535
 8008208:	80027c00 	call	80027c0 <__mulsi3>
 800820c:	a808d43a 	srli	r4,r21,16
 8008210:	900b883a 	mov	r5,r18
 8008214:	b0ad883a 	add	r22,r22,r2
 8008218:	80027c00 	call	80027c0 <__mulsi3>
 800821c:	a1000017 	ldw	r4,0(r20)
 8008220:	b00cd43a 	srli	r6,r22,16
 8008224:	b0ffffcc 	andi	r3,r22,65535
 8008228:	217fffcc 	andi	r5,r4,65535
 800822c:	2c21883a 	add	r16,r5,r16
 8008230:	80c7c83a 	sub	r3,r16,r3
 8008234:	2008d43a 	srli	r4,r4,16
 8008238:	3085883a 	add	r2,r6,r2
 800823c:	1821d43a 	srai	r16,r3,16
 8008240:	117fffcc 	andi	r5,r2,65535
 8008244:	2149c83a 	sub	r4,r4,r5
 8008248:	2421883a 	add	r16,r4,r16
 800824c:	8008943a 	slli	r4,r16,16
 8008250:	18ffffcc 	andi	r3,r3,65535
 8008254:	102cd43a 	srli	r22,r2,16
 8008258:	20c8b03a 	or	r4,r4,r3
 800825c:	a1000015 	stw	r4,0(r20)
 8008260:	8021d43a 	srai	r16,r16,16
 8008264:	a5000104 	addi	r20,r20,4
 8008268:	e47fe32e 	bgeu	fp,r17,80081f8 <__alt_data_end+0xfc0081f8>
 800826c:	d8c00317 	ldw	r3,12(sp)
 8008270:	18800017 	ldw	r2,0(r3)
 8008274:	10000c1e 	bne	r2,zero,80082a8 <quorem+0x13c>
 8008278:	18bfff04 	addi	r2,r3,-4
 800827c:	9880082e 	bgeu	r19,r2,80082a0 <quorem+0x134>
 8008280:	18ffff17 	ldw	r3,-4(r3)
 8008284:	18000326 	beq	r3,zero,8008294 <quorem+0x128>
 8008288:	00000506 	br	80082a0 <quorem+0x134>
 800828c:	10c00017 	ldw	r3,0(r2)
 8008290:	1800031e 	bne	r3,zero,80082a0 <quorem+0x134>
 8008294:	10bfff04 	addi	r2,r2,-4
 8008298:	bdffffc4 	addi	r23,r23,-1
 800829c:	98bffb36 	bltu	r19,r2,800828c <__alt_data_end+0xfc00828c>
 80082a0:	d8c00017 	ldw	r3,0(sp)
 80082a4:	1dc00415 	stw	r23,16(r3)
 80082a8:	d9000017 	ldw	r4,0(sp)
 80082ac:	d9400217 	ldw	r5,8(sp)
 80082b0:	800ba800 	call	800ba80 <__mcmp>
 80082b4:	10002816 	blt	r2,zero,8008358 <quorem+0x1ec>
 80082b8:	dc400117 	ldw	r17,4(sp)
 80082bc:	94800044 	addi	r18,r18,1
 80082c0:	980d883a 	mov	r6,r19
 80082c4:	0007883a 	mov	r3,zero
 80082c8:	31000017 	ldw	r4,0(r6)
 80082cc:	89400017 	ldw	r5,0(r17)
 80082d0:	31800104 	addi	r6,r6,4
 80082d4:	20bfffcc 	andi	r2,r4,65535
 80082d8:	10c7883a 	add	r3,r2,r3
 80082dc:	28bfffcc 	andi	r2,r5,65535
 80082e0:	1885c83a 	sub	r2,r3,r2
 80082e4:	280ad43a 	srli	r5,r5,16
 80082e8:	2008d43a 	srli	r4,r4,16
 80082ec:	1007d43a 	srai	r3,r2,16
 80082f0:	10bfffcc 	andi	r2,r2,65535
 80082f4:	2149c83a 	sub	r4,r4,r5
 80082f8:	20c9883a 	add	r4,r4,r3
 80082fc:	200a943a 	slli	r5,r4,16
 8008300:	8c400104 	addi	r17,r17,4
 8008304:	2007d43a 	srai	r3,r4,16
 8008308:	2884b03a 	or	r2,r5,r2
 800830c:	30bfff15 	stw	r2,-4(r6)
 8008310:	e47fed2e 	bgeu	fp,r17,80082c8 <__alt_data_end+0xfc0082c8>
 8008314:	bdc5883a 	add	r2,r23,r23
 8008318:	1085883a 	add	r2,r2,r2
 800831c:	9887883a 	add	r3,r19,r2
 8008320:	18800017 	ldw	r2,0(r3)
 8008324:	10000c1e 	bne	r2,zero,8008358 <quorem+0x1ec>
 8008328:	18bfff04 	addi	r2,r3,-4
 800832c:	9880082e 	bgeu	r19,r2,8008350 <quorem+0x1e4>
 8008330:	18ffff17 	ldw	r3,-4(r3)
 8008334:	18000326 	beq	r3,zero,8008344 <quorem+0x1d8>
 8008338:	00000506 	br	8008350 <quorem+0x1e4>
 800833c:	10c00017 	ldw	r3,0(r2)
 8008340:	1800031e 	bne	r3,zero,8008350 <quorem+0x1e4>
 8008344:	10bfff04 	addi	r2,r2,-4
 8008348:	bdffffc4 	addi	r23,r23,-1
 800834c:	98bffb36 	bltu	r19,r2,800833c <__alt_data_end+0xfc00833c>
 8008350:	d8c00017 	ldw	r3,0(sp)
 8008354:	1dc00415 	stw	r23,16(r3)
 8008358:	9005883a 	mov	r2,r18
 800835c:	dfc00d17 	ldw	ra,52(sp)
 8008360:	df000c17 	ldw	fp,48(sp)
 8008364:	ddc00b17 	ldw	r23,44(sp)
 8008368:	dd800a17 	ldw	r22,40(sp)
 800836c:	dd400917 	ldw	r21,36(sp)
 8008370:	dd000817 	ldw	r20,32(sp)
 8008374:	dcc00717 	ldw	r19,28(sp)
 8008378:	dc800617 	ldw	r18,24(sp)
 800837c:	dc400517 	ldw	r17,20(sp)
 8008380:	dc000417 	ldw	r16,16(sp)
 8008384:	dec00e04 	addi	sp,sp,56
 8008388:	f800283a 	ret
 800838c:	0005883a 	mov	r2,zero
 8008390:	003ff206 	br	800835c <__alt_data_end+0xfc00835c>

08008394 <_dtoa_r>:
 8008394:	20801017 	ldw	r2,64(r4)
 8008398:	deffde04 	addi	sp,sp,-136
 800839c:	dd401d15 	stw	r21,116(sp)
 80083a0:	dcc01b15 	stw	r19,108(sp)
 80083a4:	dc801a15 	stw	r18,104(sp)
 80083a8:	dc401915 	stw	r17,100(sp)
 80083ac:	dc001815 	stw	r16,96(sp)
 80083b0:	dfc02115 	stw	ra,132(sp)
 80083b4:	df002015 	stw	fp,128(sp)
 80083b8:	ddc01f15 	stw	r23,124(sp)
 80083bc:	dd801e15 	stw	r22,120(sp)
 80083c0:	dd001c15 	stw	r20,112(sp)
 80083c4:	d9c00315 	stw	r7,12(sp)
 80083c8:	2021883a 	mov	r16,r4
 80083cc:	302b883a 	mov	r21,r6
 80083d0:	2825883a 	mov	r18,r5
 80083d4:	dc402417 	ldw	r17,144(sp)
 80083d8:	3027883a 	mov	r19,r6
 80083dc:	10000826 	beq	r2,zero,8008400 <_dtoa_r+0x6c>
 80083e0:	21801117 	ldw	r6,68(r4)
 80083e4:	00c00044 	movi	r3,1
 80083e8:	100b883a 	mov	r5,r2
 80083ec:	1986983a 	sll	r3,r3,r6
 80083f0:	11800115 	stw	r6,4(r2)
 80083f4:	10c00215 	stw	r3,8(r2)
 80083f8:	800b1ac0 	call	800b1ac <_Bfree>
 80083fc:	80001015 	stw	zero,64(r16)
 8008400:	a8002d16 	blt	r21,zero,80084b8 <_dtoa_r+0x124>
 8008404:	88000015 	stw	zero,0(r17)
 8008408:	a8dffc2c 	andhi	r3,r21,32752
 800840c:	009ffc34 	movhi	r2,32752
 8008410:	18801b26 	beq	r3,r2,8008480 <_dtoa_r+0xec>
 8008414:	9009883a 	mov	r4,r18
 8008418:	980b883a 	mov	r5,r19
 800841c:	000d883a 	mov	r6,zero
 8008420:	000f883a 	mov	r7,zero
 8008424:	8011a800 	call	8011a80 <__eqdf2>
 8008428:	10002a1e 	bne	r2,zero,80084d4 <_dtoa_r+0x140>
 800842c:	d8c02317 	ldw	r3,140(sp)
 8008430:	d9002517 	ldw	r4,148(sp)
 8008434:	00800044 	movi	r2,1
 8008438:	18800015 	stw	r2,0(r3)
 800843c:	2001a226 	beq	r4,zero,8008ac8 <_dtoa_r+0x734>
 8008440:	00820074 	movhi	r2,2049
 8008444:	109b3f44 	addi	r2,r2,27901
 8008448:	20800015 	stw	r2,0(r4)
 800844c:	10bfffc4 	addi	r2,r2,-1
 8008450:	dfc02117 	ldw	ra,132(sp)
 8008454:	df002017 	ldw	fp,128(sp)
 8008458:	ddc01f17 	ldw	r23,124(sp)
 800845c:	dd801e17 	ldw	r22,120(sp)
 8008460:	dd401d17 	ldw	r21,116(sp)
 8008464:	dd001c17 	ldw	r20,112(sp)
 8008468:	dcc01b17 	ldw	r19,108(sp)
 800846c:	dc801a17 	ldw	r18,104(sp)
 8008470:	dc401917 	ldw	r17,100(sp)
 8008474:	dc001817 	ldw	r16,96(sp)
 8008478:	dec02204 	addi	sp,sp,136
 800847c:	f800283a 	ret
 8008480:	d8c02317 	ldw	r3,140(sp)
 8008484:	0089c3c4 	movi	r2,9999
 8008488:	18800015 	stw	r2,0(r3)
 800848c:	90017c26 	beq	r18,zero,8008a80 <_dtoa_r+0x6ec>
 8008490:	00820074 	movhi	r2,2049
 8008494:	109b5304 	addi	r2,r2,27980
 8008498:	d9002517 	ldw	r4,148(sp)
 800849c:	203fec26 	beq	r4,zero,8008450 <__alt_data_end+0xfc008450>
 80084a0:	10c000c7 	ldb	r3,3(r2)
 80084a4:	18017d1e 	bne	r3,zero,8008a9c <_dtoa_r+0x708>
 80084a8:	10c000c4 	addi	r3,r2,3
 80084ac:	d9802517 	ldw	r6,148(sp)
 80084b0:	30c00015 	stw	r3,0(r6)
 80084b4:	003fe606 	br	8008450 <__alt_data_end+0xfc008450>
 80084b8:	04e00034 	movhi	r19,32768
 80084bc:	9cffffc4 	addi	r19,r19,-1
 80084c0:	00800044 	movi	r2,1
 80084c4:	ace6703a 	and	r19,r21,r19
 80084c8:	88800015 	stw	r2,0(r17)
 80084cc:	982b883a 	mov	r21,r19
 80084d0:	003fcd06 	br	8008408 <__alt_data_end+0xfc008408>
 80084d4:	d8800204 	addi	r2,sp,8
 80084d8:	a822d53a 	srli	r17,r21,20
 80084dc:	d8800015 	stw	r2,0(sp)
 80084e0:	8009883a 	mov	r4,r16
 80084e4:	900b883a 	mov	r5,r18
 80084e8:	980d883a 	mov	r6,r19
 80084ec:	d9c00104 	addi	r7,sp,4
 80084f0:	800bdf40 	call	800bdf4 <__d2b>
 80084f4:	1039883a 	mov	fp,r2
 80084f8:	88016a1e 	bne	r17,zero,8008aa4 <_dtoa_r+0x710>
 80084fc:	dd000217 	ldw	r20,8(sp)
 8008500:	dc400117 	ldw	r17,4(sp)
 8008504:	00befbc4 	movi	r2,-1041
 8008508:	a463883a 	add	r17,r20,r17
 800850c:	8882ea16 	blt	r17,r2,80090b8 <_dtoa_r+0xd24>
 8008510:	00bf0384 	movi	r2,-1010
 8008514:	1445c83a 	sub	r2,r2,r17
 8008518:	89010484 	addi	r4,r17,1042
 800851c:	a8aa983a 	sll	r21,r21,r2
 8008520:	9108d83a 	srl	r4,r18,r4
 8008524:	a908b03a 	or	r4,r21,r4
 8008528:	8012f580 	call	8012f58 <__floatunsidf>
 800852c:	017f8434 	movhi	r5,65040
 8008530:	01800044 	movi	r6,1
 8008534:	1009883a 	mov	r4,r2
 8008538:	194b883a 	add	r5,r3,r5
 800853c:	8c7fffc4 	addi	r17,r17,-1
 8008540:	d9800f15 	stw	r6,60(sp)
 8008544:	000d883a 	mov	r6,zero
 8008548:	01cffe34 	movhi	r7,16376
 800854c:	80125300 	call	8012530 <__subdf3>
 8008550:	0198dbf4 	movhi	r6,25455
 8008554:	01cff4f4 	movhi	r7,16339
 8008558:	1009883a 	mov	r4,r2
 800855c:	180b883a 	mov	r5,r3
 8008560:	3190d844 	addi	r6,r6,17249
 8008564:	39e1e9c4 	addi	r7,r7,-30809
 8008568:	8011cc40 	call	8011cc4 <__muldf3>
 800856c:	01a2d874 	movhi	r6,35681
 8008570:	01cff1f4 	movhi	r7,16327
 8008574:	180b883a 	mov	r5,r3
 8008578:	31b22cc4 	addi	r6,r6,-14157
 800857c:	39e28a04 	addi	r7,r7,-30168
 8008580:	1009883a 	mov	r4,r2
 8008584:	80108640 	call	8010864 <__adddf3>
 8008588:	8809883a 	mov	r4,r17
 800858c:	102d883a 	mov	r22,r2
 8008590:	182b883a 	mov	r21,r3
 8008594:	8012e880 	call	8012e88 <__floatsidf>
 8008598:	019427f4 	movhi	r6,20639
 800859c:	01cff4f4 	movhi	r7,16339
 80085a0:	1009883a 	mov	r4,r2
 80085a4:	180b883a 	mov	r5,r3
 80085a8:	319e7ec4 	addi	r6,r6,31227
 80085ac:	39d104c4 	addi	r7,r7,17427
 80085b0:	8011cc40 	call	8011cc4 <__muldf3>
 80085b4:	b009883a 	mov	r4,r22
 80085b8:	a80b883a 	mov	r5,r21
 80085bc:	100d883a 	mov	r6,r2
 80085c0:	180f883a 	mov	r7,r3
 80085c4:	80108640 	call	8010864 <__adddf3>
 80085c8:	1009883a 	mov	r4,r2
 80085cc:	180b883a 	mov	r5,r3
 80085d0:	102d883a 	mov	r22,r2
 80085d4:	182b883a 	mov	r21,r3
 80085d8:	8012e000 	call	8012e00 <__fixdfsi>
 80085dc:	b009883a 	mov	r4,r22
 80085e0:	a80b883a 	mov	r5,r21
 80085e4:	000d883a 	mov	r6,zero
 80085e8:	000f883a 	mov	r7,zero
 80085ec:	d8800515 	stw	r2,20(sp)
 80085f0:	8011be40 	call	8011be4 <__ledf2>
 80085f4:	10023116 	blt	r2,zero,8008ebc <_dtoa_r+0xb28>
 80085f8:	d8c00517 	ldw	r3,20(sp)
 80085fc:	00800584 	movi	r2,22
 8008600:	10c21f36 	bltu	r2,r3,8008e80 <_dtoa_r+0xaec>
 8008604:	180490fa 	slli	r2,r3,3
 8008608:	00c20074 	movhi	r3,2049
 800860c:	18db6f04 	addi	r3,r3,28092
 8008610:	1885883a 	add	r2,r3,r2
 8008614:	11000017 	ldw	r4,0(r2)
 8008618:	11400117 	ldw	r5,4(r2)
 800861c:	900d883a 	mov	r6,r18
 8008620:	980f883a 	mov	r7,r19
 8008624:	8011b040 	call	8011b04 <__gedf2>
 8008628:	0082a70e 	bge	zero,r2,80090c8 <_dtoa_r+0xd34>
 800862c:	d9000517 	ldw	r4,20(sp)
 8008630:	d8000c15 	stw	zero,48(sp)
 8008634:	213fffc4 	addi	r4,r4,-1
 8008638:	d9000515 	stw	r4,20(sp)
 800863c:	a463c83a 	sub	r17,r20,r17
 8008640:	8dbfffc4 	addi	r22,r17,-1
 8008644:	b0021916 	blt	r22,zero,8008eac <_dtoa_r+0xb18>
 8008648:	d8000815 	stw	zero,32(sp)
 800864c:	d8800517 	ldw	r2,20(sp)
 8008650:	10020e16 	blt	r2,zero,8008e8c <_dtoa_r+0xaf8>
 8008654:	b0ad883a 	add	r22,r22,r2
 8008658:	d8800a15 	stw	r2,40(sp)
 800865c:	d8000915 	stw	zero,36(sp)
 8008660:	d8c00317 	ldw	r3,12(sp)
 8008664:	00800244 	movi	r2,9
 8008668:	10c11a36 	bltu	r2,r3,8008ad4 <_dtoa_r+0x740>
 800866c:	00800144 	movi	r2,5
 8008670:	10c4fc0e 	bge	r2,r3,8009a64 <_dtoa_r+0x16d0>
 8008674:	18ffff04 	addi	r3,r3,-4
 8008678:	d8c00315 	stw	r3,12(sp)
 800867c:	0029883a 	mov	r20,zero
 8008680:	d9800317 	ldw	r6,12(sp)
 8008684:	008000c4 	movi	r2,3
 8008688:	3083bd26 	beq	r6,r2,8009580 <_dtoa_r+0x11ec>
 800868c:	1183670e 	bge	r2,r6,800942c <_dtoa_r+0x1098>
 8008690:	d8c00317 	ldw	r3,12(sp)
 8008694:	00800104 	movi	r2,4
 8008698:	1882e726 	beq	r3,r2,8009238 <_dtoa_r+0xea4>
 800869c:	00800144 	movi	r2,5
 80086a0:	1884f21e 	bne	r3,r2,8009a6c <_dtoa_r+0x16d8>
 80086a4:	00800044 	movi	r2,1
 80086a8:	d8800b15 	stw	r2,44(sp)
 80086ac:	d8c02217 	ldw	r3,136(sp)
 80086b0:	d9000517 	ldw	r4,20(sp)
 80086b4:	1907883a 	add	r3,r3,r4
 80086b8:	19800044 	addi	r6,r3,1
 80086bc:	d8c00d15 	stw	r3,52(sp)
 80086c0:	d9800615 	stw	r6,24(sp)
 80086c4:	0183c30e 	bge	zero,r6,80095d4 <_dtoa_r+0x1240>
 80086c8:	d9800617 	ldw	r6,24(sp)
 80086cc:	3023883a 	mov	r17,r6
 80086d0:	80001115 	stw	zero,68(r16)
 80086d4:	008005c4 	movi	r2,23
 80086d8:	1184f62e 	bgeu	r2,r6,8009ab4 <_dtoa_r+0x1720>
 80086dc:	00c00044 	movi	r3,1
 80086e0:	00800104 	movi	r2,4
 80086e4:	1085883a 	add	r2,r2,r2
 80086e8:	11000504 	addi	r4,r2,20
 80086ec:	180b883a 	mov	r5,r3
 80086f0:	18c00044 	addi	r3,r3,1
 80086f4:	313ffb2e 	bgeu	r6,r4,80086e4 <__alt_data_end+0xfc0086e4>
 80086f8:	81401115 	stw	r5,68(r16)
 80086fc:	8009883a 	mov	r4,r16
 8008700:	800b1040 	call	800b104 <_Balloc>
 8008704:	d8800715 	stw	r2,28(sp)
 8008708:	80801015 	stw	r2,64(r16)
 800870c:	00800384 	movi	r2,14
 8008710:	1440fd36 	bltu	r2,r17,8008b08 <_dtoa_r+0x774>
 8008714:	a000fc26 	beq	r20,zero,8008b08 <_dtoa_r+0x774>
 8008718:	d8800517 	ldw	r2,20(sp)
 800871c:	0083b90e 	bge	zero,r2,8009604 <_dtoa_r+0x1270>
 8008720:	d8c00517 	ldw	r3,20(sp)
 8008724:	108003cc 	andi	r2,r2,15
 8008728:	100490fa 	slli	r2,r2,3
 800872c:	182fd13a 	srai	r23,r3,4
 8008730:	00c20074 	movhi	r3,2049
 8008734:	18db6f04 	addi	r3,r3,28092
 8008738:	1885883a 	add	r2,r3,r2
 800873c:	b8c0040c 	andi	r3,r23,16
 8008740:	12c00017 	ldw	r11,0(r2)
 8008744:	12800117 	ldw	r10,4(r2)
 8008748:	18039726 	beq	r3,zero,80095a8 <_dtoa_r+0x1214>
 800874c:	00820074 	movhi	r2,2049
 8008750:	109b6504 	addi	r2,r2,28052
 8008754:	11800817 	ldw	r6,32(r2)
 8008758:	11c00917 	ldw	r7,36(r2)
 800875c:	9009883a 	mov	r4,r18
 8008760:	980b883a 	mov	r5,r19
 8008764:	da801615 	stw	r10,88(sp)
 8008768:	dac01515 	stw	r11,84(sp)
 800876c:	80111000 	call	8011100 <__divdf3>
 8008770:	da801617 	ldw	r10,88(sp)
 8008774:	dac01517 	ldw	r11,84(sp)
 8008778:	bdc003cc 	andi	r23,r23,15
 800877c:	044000c4 	movi	r17,3
 8008780:	d8800e15 	stw	r2,56(sp)
 8008784:	182b883a 	mov	r21,r3
 8008788:	b8001126 	beq	r23,zero,80087d0 <_dtoa_r+0x43c>
 800878c:	05020074 	movhi	r20,2049
 8008790:	a51b6504 	addi	r20,r20,28052
 8008794:	5805883a 	mov	r2,r11
 8008798:	5007883a 	mov	r3,r10
 800879c:	b980004c 	andi	r6,r23,1
 80087a0:	1009883a 	mov	r4,r2
 80087a4:	b82fd07a 	srai	r23,r23,1
 80087a8:	180b883a 	mov	r5,r3
 80087ac:	30000426 	beq	r6,zero,80087c0 <_dtoa_r+0x42c>
 80087b0:	a1800017 	ldw	r6,0(r20)
 80087b4:	a1c00117 	ldw	r7,4(r20)
 80087b8:	8c400044 	addi	r17,r17,1
 80087bc:	8011cc40 	call	8011cc4 <__muldf3>
 80087c0:	a5000204 	addi	r20,r20,8
 80087c4:	b83ff51e 	bne	r23,zero,800879c <__alt_data_end+0xfc00879c>
 80087c8:	1017883a 	mov	r11,r2
 80087cc:	1815883a 	mov	r10,r3
 80087d0:	d9000e17 	ldw	r4,56(sp)
 80087d4:	a80b883a 	mov	r5,r21
 80087d8:	580d883a 	mov	r6,r11
 80087dc:	500f883a 	mov	r7,r10
 80087e0:	80111000 	call	8011100 <__divdf3>
 80087e4:	1029883a 	mov	r20,r2
 80087e8:	182b883a 	mov	r21,r3
 80087ec:	d9800c17 	ldw	r6,48(sp)
 80087f0:	30000626 	beq	r6,zero,800880c <_dtoa_r+0x478>
 80087f4:	a009883a 	mov	r4,r20
 80087f8:	a80b883a 	mov	r5,r21
 80087fc:	000d883a 	mov	r6,zero
 8008800:	01cffc34 	movhi	r7,16368
 8008804:	8011be40 	call	8011be4 <__ledf2>
 8008808:	10043216 	blt	r2,zero,80098d4 <_dtoa_r+0x1540>
 800880c:	8809883a 	mov	r4,r17
 8008810:	8012e880 	call	8012e88 <__floatsidf>
 8008814:	1009883a 	mov	r4,r2
 8008818:	180b883a 	mov	r5,r3
 800881c:	a00d883a 	mov	r6,r20
 8008820:	a80f883a 	mov	r7,r21
 8008824:	8011cc40 	call	8011cc4 <__muldf3>
 8008828:	000d883a 	mov	r6,zero
 800882c:	1009883a 	mov	r4,r2
 8008830:	180b883a 	mov	r5,r3
 8008834:	01d00734 	movhi	r7,16412
 8008838:	80108640 	call	8010864 <__adddf3>
 800883c:	1023883a 	mov	r17,r2
 8008840:	d9800617 	ldw	r6,24(sp)
 8008844:	00bf3034 	movhi	r2,64704
 8008848:	1885883a 	add	r2,r3,r2
 800884c:	d8800e15 	stw	r2,56(sp)
 8008850:	30032e26 	beq	r6,zero,800950c <_dtoa_r+0x1178>
 8008854:	d8c00517 	ldw	r3,20(sp)
 8008858:	da800617 	ldw	r10,24(sp)
 800885c:	d8c01215 	stw	r3,72(sp)
 8008860:	d9000b17 	ldw	r4,44(sp)
 8008864:	2003b026 	beq	r4,zero,8009728 <_dtoa_r+0x1394>
 8008868:	50bfffc4 	addi	r2,r10,-1
 800886c:	100490fa 	slli	r2,r2,3
 8008870:	00c20074 	movhi	r3,2049
 8008874:	18db6f04 	addi	r3,r3,28092
 8008878:	1885883a 	add	r2,r3,r2
 800887c:	11800017 	ldw	r6,0(r2)
 8008880:	11c00117 	ldw	r7,4(r2)
 8008884:	d8800717 	ldw	r2,28(sp)
 8008888:	0009883a 	mov	r4,zero
 800888c:	014ff834 	movhi	r5,16352
 8008890:	da801615 	stw	r10,88(sp)
 8008894:	15c00044 	addi	r23,r2,1
 8008898:	80111000 	call	8011100 <__divdf3>
 800889c:	d9c00e17 	ldw	r7,56(sp)
 80088a0:	880d883a 	mov	r6,r17
 80088a4:	1009883a 	mov	r4,r2
 80088a8:	180b883a 	mov	r5,r3
 80088ac:	80125300 	call	8012530 <__subdf3>
 80088b0:	a80b883a 	mov	r5,r21
 80088b4:	a009883a 	mov	r4,r20
 80088b8:	d8c01015 	stw	r3,64(sp)
 80088bc:	d8800e15 	stw	r2,56(sp)
 80088c0:	8012e000 	call	8012e00 <__fixdfsi>
 80088c4:	1009883a 	mov	r4,r2
 80088c8:	d8801715 	stw	r2,92(sp)
 80088cc:	8012e880 	call	8012e88 <__floatsidf>
 80088d0:	a009883a 	mov	r4,r20
 80088d4:	a80b883a 	mov	r5,r21
 80088d8:	100d883a 	mov	r6,r2
 80088dc:	180f883a 	mov	r7,r3
 80088e0:	80125300 	call	8012530 <__subdf3>
 80088e4:	da001717 	ldw	r8,92(sp)
 80088e8:	1829883a 	mov	r20,r3
 80088ec:	d8c00717 	ldw	r3,28(sp)
 80088f0:	d9000e17 	ldw	r4,56(sp)
 80088f4:	d9401017 	ldw	r5,64(sp)
 80088f8:	42000c04 	addi	r8,r8,48
 80088fc:	1023883a 	mov	r17,r2
 8008900:	1a000005 	stb	r8,0(r3)
 8008904:	880d883a 	mov	r6,r17
 8008908:	a00f883a 	mov	r7,r20
 800890c:	402b883a 	mov	r21,r8
 8008910:	8011b040 	call	8011b04 <__gedf2>
 8008914:	00844516 	blt	zero,r2,8009a2c <_dtoa_r+0x1698>
 8008918:	0009883a 	mov	r4,zero
 800891c:	014ffc34 	movhi	r5,16368
 8008920:	880d883a 	mov	r6,r17
 8008924:	a00f883a 	mov	r7,r20
 8008928:	80125300 	call	8012530 <__subdf3>
 800892c:	d9000e17 	ldw	r4,56(sp)
 8008930:	d9401017 	ldw	r5,64(sp)
 8008934:	100d883a 	mov	r6,r2
 8008938:	180f883a 	mov	r7,r3
 800893c:	8011b040 	call	8011b04 <__gedf2>
 8008940:	da801617 	ldw	r10,88(sp)
 8008944:	00843616 	blt	zero,r2,8009a20 <_dtoa_r+0x168c>
 8008948:	00800044 	movi	r2,1
 800894c:	12806e0e 	bge	r2,r10,8008b08 <_dtoa_r+0x774>
 8008950:	d9000717 	ldw	r4,28(sp)
 8008954:	dd801315 	stw	r22,76(sp)
 8008958:	dc001115 	stw	r16,68(sp)
 800895c:	2295883a 	add	r10,r4,r10
 8008960:	dcc01415 	stw	r19,80(sp)
 8008964:	502d883a 	mov	r22,r10
 8008968:	dcc01017 	ldw	r19,64(sp)
 800896c:	b821883a 	mov	r16,r23
 8008970:	dc801015 	stw	r18,64(sp)
 8008974:	dc800e17 	ldw	r18,56(sp)
 8008978:	00000906 	br	80089a0 <_dtoa_r+0x60c>
 800897c:	80125300 	call	8012530 <__subdf3>
 8008980:	1009883a 	mov	r4,r2
 8008984:	180b883a 	mov	r5,r3
 8008988:	900d883a 	mov	r6,r18
 800898c:	980f883a 	mov	r7,r19
 8008990:	8011be40 	call	8011be4 <__ledf2>
 8008994:	10040e16 	blt	r2,zero,80099d0 <_dtoa_r+0x163c>
 8008998:	b821883a 	mov	r16,r23
 800899c:	bd841026 	beq	r23,r22,80099e0 <_dtoa_r+0x164c>
 80089a0:	9009883a 	mov	r4,r18
 80089a4:	980b883a 	mov	r5,r19
 80089a8:	000d883a 	mov	r6,zero
 80089ac:	01d00934 	movhi	r7,16420
 80089b0:	8011cc40 	call	8011cc4 <__muldf3>
 80089b4:	000d883a 	mov	r6,zero
 80089b8:	01d00934 	movhi	r7,16420
 80089bc:	8809883a 	mov	r4,r17
 80089c0:	a00b883a 	mov	r5,r20
 80089c4:	1025883a 	mov	r18,r2
 80089c8:	1827883a 	mov	r19,r3
 80089cc:	8011cc40 	call	8011cc4 <__muldf3>
 80089d0:	180b883a 	mov	r5,r3
 80089d4:	1009883a 	mov	r4,r2
 80089d8:	1823883a 	mov	r17,r3
 80089dc:	1029883a 	mov	r20,r2
 80089e0:	8012e000 	call	8012e00 <__fixdfsi>
 80089e4:	1009883a 	mov	r4,r2
 80089e8:	102b883a 	mov	r21,r2
 80089ec:	8012e880 	call	8012e88 <__floatsidf>
 80089f0:	a009883a 	mov	r4,r20
 80089f4:	880b883a 	mov	r5,r17
 80089f8:	100d883a 	mov	r6,r2
 80089fc:	180f883a 	mov	r7,r3
 8008a00:	80125300 	call	8012530 <__subdf3>
 8008a04:	ad400c04 	addi	r21,r21,48
 8008a08:	1009883a 	mov	r4,r2
 8008a0c:	180b883a 	mov	r5,r3
 8008a10:	900d883a 	mov	r6,r18
 8008a14:	980f883a 	mov	r7,r19
 8008a18:	85400005 	stb	r21,0(r16)
 8008a1c:	1023883a 	mov	r17,r2
 8008a20:	1829883a 	mov	r20,r3
 8008a24:	8011be40 	call	8011be4 <__ledf2>
 8008a28:	bdc00044 	addi	r23,r23,1
 8008a2c:	0009883a 	mov	r4,zero
 8008a30:	014ffc34 	movhi	r5,16368
 8008a34:	880d883a 	mov	r6,r17
 8008a38:	a00f883a 	mov	r7,r20
 8008a3c:	103fcf0e 	bge	r2,zero,800897c <__alt_data_end+0xfc00897c>
 8008a40:	d9801217 	ldw	r6,72(sp)
 8008a44:	dc001117 	ldw	r16,68(sp)
 8008a48:	d9800515 	stw	r6,20(sp)
 8008a4c:	8009883a 	mov	r4,r16
 8008a50:	e00b883a 	mov	r5,fp
 8008a54:	800b1ac0 	call	800b1ac <_Bfree>
 8008a58:	d8c00517 	ldw	r3,20(sp)
 8008a5c:	d9002317 	ldw	r4,140(sp)
 8008a60:	d9802517 	ldw	r6,148(sp)
 8008a64:	b8000005 	stb	zero,0(r23)
 8008a68:	18800044 	addi	r2,r3,1
 8008a6c:	20800015 	stw	r2,0(r4)
 8008a70:	30027226 	beq	r6,zero,800943c <_dtoa_r+0x10a8>
 8008a74:	35c00015 	stw	r23,0(r6)
 8008a78:	d8800717 	ldw	r2,28(sp)
 8008a7c:	003e7406 	br	8008450 <__alt_data_end+0xfc008450>
 8008a80:	00800434 	movhi	r2,16
 8008a84:	10bfffc4 	addi	r2,r2,-1
 8008a88:	a8aa703a 	and	r21,r21,r2
 8008a8c:	a83e801e 	bne	r21,zero,8008490 <__alt_data_end+0xfc008490>
 8008a90:	00820074 	movhi	r2,2049
 8008a94:	109b5004 	addi	r2,r2,27968
 8008a98:	003e7f06 	br	8008498 <__alt_data_end+0xfc008498>
 8008a9c:	10c00204 	addi	r3,r2,8
 8008aa0:	003e8206 	br	80084ac <__alt_data_end+0xfc0084ac>
 8008aa4:	01400434 	movhi	r5,16
 8008aa8:	297fffc4 	addi	r5,r5,-1
 8008aac:	994a703a 	and	r5,r19,r5
 8008ab0:	9009883a 	mov	r4,r18
 8008ab4:	8c7f0044 	addi	r17,r17,-1023
 8008ab8:	294ffc34 	orhi	r5,r5,16368
 8008abc:	dd000217 	ldw	r20,8(sp)
 8008ac0:	d8000f15 	stw	zero,60(sp)
 8008ac4:	003e9f06 	br	8008544 <__alt_data_end+0xfc008544>
 8008ac8:	00820074 	movhi	r2,2049
 8008acc:	109b3f04 	addi	r2,r2,27900
 8008ad0:	003e5f06 	br	8008450 <__alt_data_end+0xfc008450>
 8008ad4:	80001115 	stw	zero,68(r16)
 8008ad8:	8009883a 	mov	r4,r16
 8008adc:	000b883a 	mov	r5,zero
 8008ae0:	800b1040 	call	800b104 <_Balloc>
 8008ae4:	01bfffc4 	movi	r6,-1
 8008ae8:	d8800715 	stw	r2,28(sp)
 8008aec:	80801015 	stw	r2,64(r16)
 8008af0:	00800044 	movi	r2,1
 8008af4:	d9800615 	stw	r6,24(sp)
 8008af8:	d8800b15 	stw	r2,44(sp)
 8008afc:	d8002215 	stw	zero,136(sp)
 8008b00:	d9800d15 	stw	r6,52(sp)
 8008b04:	d8000315 	stw	zero,12(sp)
 8008b08:	d8800117 	ldw	r2,4(sp)
 8008b0c:	10008e16 	blt	r2,zero,8008d48 <_dtoa_r+0x9b4>
 8008b10:	d9000517 	ldw	r4,20(sp)
 8008b14:	00c00384 	movi	r3,14
 8008b18:	19008b16 	blt	r3,r4,8008d48 <_dtoa_r+0x9b4>
 8008b1c:	200490fa 	slli	r2,r4,3
 8008b20:	00c20074 	movhi	r3,2049
 8008b24:	d9802217 	ldw	r6,136(sp)
 8008b28:	18db6f04 	addi	r3,r3,28092
 8008b2c:	1885883a 	add	r2,r3,r2
 8008b30:	14400017 	ldw	r17,0(r2)
 8008b34:	15000117 	ldw	r20,4(r2)
 8008b38:	3001c716 	blt	r6,zero,8009258 <_dtoa_r+0xec4>
 8008b3c:	880d883a 	mov	r6,r17
 8008b40:	a00f883a 	mov	r7,r20
 8008b44:	9009883a 	mov	r4,r18
 8008b48:	980b883a 	mov	r5,r19
 8008b4c:	80111000 	call	8011100 <__divdf3>
 8008b50:	180b883a 	mov	r5,r3
 8008b54:	1009883a 	mov	r4,r2
 8008b58:	8012e000 	call	8012e00 <__fixdfsi>
 8008b5c:	1009883a 	mov	r4,r2
 8008b60:	102d883a 	mov	r22,r2
 8008b64:	8012e880 	call	8012e88 <__floatsidf>
 8008b68:	1009883a 	mov	r4,r2
 8008b6c:	180b883a 	mov	r5,r3
 8008b70:	880d883a 	mov	r6,r17
 8008b74:	a00f883a 	mov	r7,r20
 8008b78:	8011cc40 	call	8011cc4 <__muldf3>
 8008b7c:	9009883a 	mov	r4,r18
 8008b80:	980b883a 	mov	r5,r19
 8008b84:	100d883a 	mov	r6,r2
 8008b88:	180f883a 	mov	r7,r3
 8008b8c:	80125300 	call	8012530 <__subdf3>
 8008b90:	d9000717 	ldw	r4,28(sp)
 8008b94:	d9800617 	ldw	r6,24(sp)
 8008b98:	180b883a 	mov	r5,r3
 8008b9c:	b0c00c04 	addi	r3,r22,48
 8008ba0:	20c00005 	stb	r3,0(r4)
 8008ba4:	25c00044 	addi	r23,r4,1
 8008ba8:	01000044 	movi	r4,1
 8008bac:	1011883a 	mov	r8,r2
 8008bb0:	2807883a 	mov	r3,r5
 8008bb4:	31003d26 	beq	r6,r4,8008cac <_dtoa_r+0x918>
 8008bb8:	000d883a 	mov	r6,zero
 8008bbc:	01d00934 	movhi	r7,16420
 8008bc0:	1009883a 	mov	r4,r2
 8008bc4:	8011cc40 	call	8011cc4 <__muldf3>
 8008bc8:	1009883a 	mov	r4,r2
 8008bcc:	180b883a 	mov	r5,r3
 8008bd0:	000d883a 	mov	r6,zero
 8008bd4:	000f883a 	mov	r7,zero
 8008bd8:	1027883a 	mov	r19,r2
 8008bdc:	182b883a 	mov	r21,r3
 8008be0:	8011a800 	call	8011a80 <__eqdf2>
 8008be4:	103f9926 	beq	r2,zero,8008a4c <__alt_data_end+0xfc008a4c>
 8008be8:	d8c00617 	ldw	r3,24(sp)
 8008bec:	d9000717 	ldw	r4,28(sp)
 8008bf0:	b825883a 	mov	r18,r23
 8008bf4:	18bfffc4 	addi	r2,r3,-1
 8008bf8:	20ad883a 	add	r22,r4,r2
 8008bfc:	dc000315 	stw	r16,12(sp)
 8008c00:	00000a06 	br	8008c2c <_dtoa_r+0x898>
 8008c04:	8011cc40 	call	8011cc4 <__muldf3>
 8008c08:	1009883a 	mov	r4,r2
 8008c0c:	180b883a 	mov	r5,r3
 8008c10:	000d883a 	mov	r6,zero
 8008c14:	000f883a 	mov	r7,zero
 8008c18:	1027883a 	mov	r19,r2
 8008c1c:	182b883a 	mov	r21,r3
 8008c20:	b825883a 	mov	r18,r23
 8008c24:	8011a800 	call	8011a80 <__eqdf2>
 8008c28:	10022626 	beq	r2,zero,80094c4 <_dtoa_r+0x1130>
 8008c2c:	880d883a 	mov	r6,r17
 8008c30:	a00f883a 	mov	r7,r20
 8008c34:	9809883a 	mov	r4,r19
 8008c38:	a80b883a 	mov	r5,r21
 8008c3c:	80111000 	call	8011100 <__divdf3>
 8008c40:	180b883a 	mov	r5,r3
 8008c44:	1009883a 	mov	r4,r2
 8008c48:	8012e000 	call	8012e00 <__fixdfsi>
 8008c4c:	1009883a 	mov	r4,r2
 8008c50:	1021883a 	mov	r16,r2
 8008c54:	8012e880 	call	8012e88 <__floatsidf>
 8008c58:	1009883a 	mov	r4,r2
 8008c5c:	180b883a 	mov	r5,r3
 8008c60:	880d883a 	mov	r6,r17
 8008c64:	a00f883a 	mov	r7,r20
 8008c68:	8011cc40 	call	8011cc4 <__muldf3>
 8008c6c:	9809883a 	mov	r4,r19
 8008c70:	a80b883a 	mov	r5,r21
 8008c74:	100d883a 	mov	r6,r2
 8008c78:	180f883a 	mov	r7,r3
 8008c7c:	80125300 	call	8012530 <__subdf3>
 8008c80:	82000c04 	addi	r8,r16,48
 8008c84:	92000005 	stb	r8,0(r18)
 8008c88:	1009883a 	mov	r4,r2
 8008c8c:	180b883a 	mov	r5,r3
 8008c90:	000d883a 	mov	r6,zero
 8008c94:	01d00934 	movhi	r7,16420
 8008c98:	1011883a 	mov	r8,r2
 8008c9c:	bdc00044 	addi	r23,r23,1
 8008ca0:	95bfd81e 	bne	r18,r22,8008c04 <__alt_data_end+0xfc008c04>
 8008ca4:	802d883a 	mov	r22,r16
 8008ca8:	dc000317 	ldw	r16,12(sp)
 8008cac:	4009883a 	mov	r4,r8
 8008cb0:	180b883a 	mov	r5,r3
 8008cb4:	400d883a 	mov	r6,r8
 8008cb8:	180f883a 	mov	r7,r3
 8008cbc:	80108640 	call	8010864 <__adddf3>
 8008cc0:	8809883a 	mov	r4,r17
 8008cc4:	a00b883a 	mov	r5,r20
 8008cc8:	100d883a 	mov	r6,r2
 8008ccc:	180f883a 	mov	r7,r3
 8008cd0:	1027883a 	mov	r19,r2
 8008cd4:	1825883a 	mov	r18,r3
 8008cd8:	8011be40 	call	8011be4 <__ledf2>
 8008cdc:	10000816 	blt	r2,zero,8008d00 <_dtoa_r+0x96c>
 8008ce0:	8809883a 	mov	r4,r17
 8008ce4:	a00b883a 	mov	r5,r20
 8008ce8:	980d883a 	mov	r6,r19
 8008cec:	900f883a 	mov	r7,r18
 8008cf0:	8011a800 	call	8011a80 <__eqdf2>
 8008cf4:	103f551e 	bne	r2,zero,8008a4c <__alt_data_end+0xfc008a4c>
 8008cf8:	b580004c 	andi	r22,r22,1
 8008cfc:	b03f5326 	beq	r22,zero,8008a4c <__alt_data_end+0xfc008a4c>
 8008d00:	bd7fffc3 	ldbu	r21,-1(r23)
 8008d04:	b8bfffc4 	addi	r2,r23,-1
 8008d08:	1007883a 	mov	r3,r2
 8008d0c:	01400e44 	movi	r5,57
 8008d10:	d9800717 	ldw	r6,28(sp)
 8008d14:	00000506 	br	8008d2c <_dtoa_r+0x998>
 8008d18:	18ffffc4 	addi	r3,r3,-1
 8008d1c:	30825e26 	beq	r6,r2,8009698 <_dtoa_r+0x1304>
 8008d20:	1d400003 	ldbu	r21,0(r3)
 8008d24:	102f883a 	mov	r23,r2
 8008d28:	10bfffc4 	addi	r2,r2,-1
 8008d2c:	a9003fcc 	andi	r4,r21,255
 8008d30:	2100201c 	xori	r4,r4,128
 8008d34:	213fe004 	addi	r4,r4,-128
 8008d38:	217ff726 	beq	r4,r5,8008d18 <__alt_data_end+0xfc008d18>
 8008d3c:	aa000044 	addi	r8,r21,1
 8008d40:	12000005 	stb	r8,0(r2)
 8008d44:	003f4106 	br	8008a4c <__alt_data_end+0xfc008a4c>
 8008d48:	d8c00b17 	ldw	r3,44(sp)
 8008d4c:	18006726 	beq	r3,zero,8008eec <_dtoa_r+0xb58>
 8008d50:	d9000317 	ldw	r4,12(sp)
 8008d54:	00c00044 	movi	r3,1
 8008d58:	19016a0e 	bge	r3,r4,8009304 <_dtoa_r+0xf70>
 8008d5c:	d8800617 	ldw	r2,24(sp)
 8008d60:	d8c00917 	ldw	r3,36(sp)
 8008d64:	157fffc4 	addi	r21,r2,-1
 8008d68:	1d420716 	blt	r3,r21,8009588 <_dtoa_r+0x11f4>
 8008d6c:	1d6bc83a 	sub	r21,r3,r21
 8008d70:	d8800617 	ldw	r2,24(sp)
 8008d74:	1002c716 	blt	r2,zero,8009894 <_dtoa_r+0x1500>
 8008d78:	dd000817 	ldw	r20,32(sp)
 8008d7c:	d8800617 	ldw	r2,24(sp)
 8008d80:	d9800817 	ldw	r6,32(sp)
 8008d84:	8009883a 	mov	r4,r16
 8008d88:	01400044 	movi	r5,1
 8008d8c:	308d883a 	add	r6,r6,r2
 8008d90:	d9800815 	stw	r6,32(sp)
 8008d94:	b0ad883a 	add	r22,r22,r2
 8008d98:	800b52c0 	call	800b52c <__i2b>
 8008d9c:	1023883a 	mov	r17,r2
 8008da0:	a0000826 	beq	r20,zero,8008dc4 <_dtoa_r+0xa30>
 8008da4:	0580070e 	bge	zero,r22,8008dc4 <_dtoa_r+0xa30>
 8008da8:	b005883a 	mov	r2,r22
 8008dac:	a5812016 	blt	r20,r22,8009230 <_dtoa_r+0xe9c>
 8008db0:	d8c00817 	ldw	r3,32(sp)
 8008db4:	a0a9c83a 	sub	r20,r20,r2
 8008db8:	b0adc83a 	sub	r22,r22,r2
 8008dbc:	1887c83a 	sub	r3,r3,r2
 8008dc0:	d8c00815 	stw	r3,32(sp)
 8008dc4:	d9000917 	ldw	r4,36(sp)
 8008dc8:	0100140e 	bge	zero,r4,8008e1c <_dtoa_r+0xa88>
 8008dcc:	d9800b17 	ldw	r6,44(sp)
 8008dd0:	3001e526 	beq	r6,zero,8009568 <_dtoa_r+0x11d4>
 8008dd4:	05400e0e 	bge	zero,r21,8008e10 <_dtoa_r+0xa7c>
 8008dd8:	880b883a 	mov	r5,r17
 8008ddc:	8009883a 	mov	r4,r16
 8008de0:	a80d883a 	mov	r6,r21
 8008de4:	800b7f80 	call	800b7f8 <__pow5mult>
 8008de8:	e00d883a 	mov	r6,fp
 8008dec:	8009883a 	mov	r4,r16
 8008df0:	100b883a 	mov	r5,r2
 8008df4:	1023883a 	mov	r17,r2
 8008df8:	800b5680 	call	800b568 <__multiply>
 8008dfc:	102f883a 	mov	r23,r2
 8008e00:	e00b883a 	mov	r5,fp
 8008e04:	8009883a 	mov	r4,r16
 8008e08:	800b1ac0 	call	800b1ac <_Bfree>
 8008e0c:	b839883a 	mov	fp,r23
 8008e10:	d8800917 	ldw	r2,36(sp)
 8008e14:	154dc83a 	sub	r6,r2,r21
 8008e18:	3001281e 	bne	r6,zero,80092bc <_dtoa_r+0xf28>
 8008e1c:	05c00044 	movi	r23,1
 8008e20:	8009883a 	mov	r4,r16
 8008e24:	b80b883a 	mov	r5,r23
 8008e28:	800b52c0 	call	800b52c <__i2b>
 8008e2c:	d8c00a17 	ldw	r3,40(sp)
 8008e30:	102b883a 	mov	r21,r2
 8008e34:	00c0310e 	bge	zero,r3,8008efc <_dtoa_r+0xb68>
 8008e38:	8009883a 	mov	r4,r16
 8008e3c:	100b883a 	mov	r5,r2
 8008e40:	180d883a 	mov	r6,r3
 8008e44:	800b7f80 	call	800b7f8 <__pow5mult>
 8008e48:	d9000317 	ldw	r4,12(sp)
 8008e4c:	102b883a 	mov	r21,r2
 8008e50:	b9011f0e 	bge	r23,r4,80092d0 <_dtoa_r+0xf3c>
 8008e54:	0027883a 	mov	r19,zero
 8008e58:	a8800417 	ldw	r2,16(r21)
 8008e5c:	10800104 	addi	r2,r2,4
 8008e60:	1085883a 	add	r2,r2,r2
 8008e64:	1085883a 	add	r2,r2,r2
 8008e68:	a885883a 	add	r2,r21,r2
 8008e6c:	11000017 	ldw	r4,0(r2)
 8008e70:	800b4140 	call	800b414 <__hi0bits>
 8008e74:	00c00804 	movi	r3,32
 8008e78:	1885c83a 	sub	r2,r3,r2
 8008e7c:	00002506 	br	8008f14 <_dtoa_r+0xb80>
 8008e80:	01800044 	movi	r6,1
 8008e84:	d9800c15 	stw	r6,48(sp)
 8008e88:	003dec06 	br	800863c <__alt_data_end+0xfc00863c>
 8008e8c:	d8c00817 	ldw	r3,32(sp)
 8008e90:	d9000517 	ldw	r4,20(sp)
 8008e94:	d8000a15 	stw	zero,40(sp)
 8008e98:	1907c83a 	sub	r3,r3,r4
 8008e9c:	010dc83a 	sub	r6,zero,r4
 8008ea0:	d8c00815 	stw	r3,32(sp)
 8008ea4:	d9800915 	stw	r6,36(sp)
 8008ea8:	003ded06 	br	8008660 <__alt_data_end+0xfc008660>
 8008eac:	05adc83a 	sub	r22,zero,r22
 8008eb0:	dd800815 	stw	r22,32(sp)
 8008eb4:	002d883a 	mov	r22,zero
 8008eb8:	003de406 	br	800864c <__alt_data_end+0xfc00864c>
 8008ebc:	d9000517 	ldw	r4,20(sp)
 8008ec0:	8012e880 	call	8012e88 <__floatsidf>
 8008ec4:	1009883a 	mov	r4,r2
 8008ec8:	180b883a 	mov	r5,r3
 8008ecc:	b00d883a 	mov	r6,r22
 8008ed0:	a80f883a 	mov	r7,r21
 8008ed4:	8011a800 	call	8011a80 <__eqdf2>
 8008ed8:	103dc726 	beq	r2,zero,80085f8 <__alt_data_end+0xfc0085f8>
 8008edc:	d8800517 	ldw	r2,20(sp)
 8008ee0:	10bfffc4 	addi	r2,r2,-1
 8008ee4:	d8800515 	stw	r2,20(sp)
 8008ee8:	003dc306 	br	80085f8 <__alt_data_end+0xfc0085f8>
 8008eec:	dd400917 	ldw	r21,36(sp)
 8008ef0:	dd000817 	ldw	r20,32(sp)
 8008ef4:	0023883a 	mov	r17,zero
 8008ef8:	003fa906 	br	8008da0 <__alt_data_end+0xfc008da0>
 8008efc:	d9800317 	ldw	r6,12(sp)
 8008f00:	b981670e 	bge	r23,r6,80094a0 <_dtoa_r+0x110c>
 8008f04:	0027883a 	mov	r19,zero
 8008f08:	d8c00a17 	ldw	r3,40(sp)
 8008f0c:	183fd21e 	bne	r3,zero,8008e58 <__alt_data_end+0xfc008e58>
 8008f10:	00800044 	movi	r2,1
 8008f14:	1585883a 	add	r2,r2,r22
 8008f18:	108007cc 	andi	r2,r2,31
 8008f1c:	10005f26 	beq	r2,zero,800909c <_dtoa_r+0xd08>
 8008f20:	00c00804 	movi	r3,32
 8008f24:	1887c83a 	sub	r3,r3,r2
 8008f28:	01000104 	movi	r4,4
 8008f2c:	20c2dd0e 	bge	r4,r3,8009aa4 <_dtoa_r+0x1710>
 8008f30:	d9000817 	ldw	r4,32(sp)
 8008f34:	00c00704 	movi	r3,28
 8008f38:	1885c83a 	sub	r2,r3,r2
 8008f3c:	2089883a 	add	r4,r4,r2
 8008f40:	d9000815 	stw	r4,32(sp)
 8008f44:	a0a9883a 	add	r20,r20,r2
 8008f48:	b0ad883a 	add	r22,r22,r2
 8008f4c:	d8800817 	ldw	r2,32(sp)
 8008f50:	0080050e 	bge	zero,r2,8008f68 <_dtoa_r+0xbd4>
 8008f54:	e00b883a 	mov	r5,fp
 8008f58:	8009883a 	mov	r4,r16
 8008f5c:	100d883a 	mov	r6,r2
 8008f60:	800b9380 	call	800b938 <__lshift>
 8008f64:	1039883a 	mov	fp,r2
 8008f68:	0580050e 	bge	zero,r22,8008f80 <_dtoa_r+0xbec>
 8008f6c:	a80b883a 	mov	r5,r21
 8008f70:	8009883a 	mov	r4,r16
 8008f74:	b00d883a 	mov	r6,r22
 8008f78:	800b9380 	call	800b938 <__lshift>
 8008f7c:	102b883a 	mov	r21,r2
 8008f80:	d8c00c17 	ldw	r3,48(sp)
 8008f84:	1801161e 	bne	r3,zero,80093e0 <_dtoa_r+0x104c>
 8008f88:	d8c00617 	ldw	r3,24(sp)
 8008f8c:	00c12d0e 	bge	zero,r3,8009444 <_dtoa_r+0x10b0>
 8008f90:	d8c00b17 	ldw	r3,44(sp)
 8008f94:	1800571e 	bne	r3,zero,80090f4 <_dtoa_r+0xd60>
 8008f98:	dc800717 	ldw	r18,28(sp)
 8008f9c:	dcc00617 	ldw	r19,24(sp)
 8008fa0:	9029883a 	mov	r20,r18
 8008fa4:	00000206 	br	8008fb0 <_dtoa_r+0xc1c>
 8008fa8:	800b1d40 	call	800b1d4 <__multadd>
 8008fac:	1039883a 	mov	fp,r2
 8008fb0:	e009883a 	mov	r4,fp
 8008fb4:	a80b883a 	mov	r5,r21
 8008fb8:	800816c0 	call	800816c <quorem>
 8008fbc:	10800c04 	addi	r2,r2,48
 8008fc0:	90800005 	stb	r2,0(r18)
 8008fc4:	94800044 	addi	r18,r18,1
 8008fc8:	9507c83a 	sub	r3,r18,r20
 8008fcc:	8009883a 	mov	r4,r16
 8008fd0:	e00b883a 	mov	r5,fp
 8008fd4:	01800284 	movi	r6,10
 8008fd8:	000f883a 	mov	r7,zero
 8008fdc:	1cfff216 	blt	r3,r19,8008fa8 <__alt_data_end+0xfc008fa8>
 8008fe0:	1011883a 	mov	r8,r2
 8008fe4:	d8800617 	ldw	r2,24(sp)
 8008fe8:	00822e0e 	bge	zero,r2,80098a4 <_dtoa_r+0x1510>
 8008fec:	d9000717 	ldw	r4,28(sp)
 8008ff0:	0025883a 	mov	r18,zero
 8008ff4:	20af883a 	add	r23,r4,r2
 8008ff8:	e00b883a 	mov	r5,fp
 8008ffc:	01800044 	movi	r6,1
 8009000:	8009883a 	mov	r4,r16
 8009004:	da001715 	stw	r8,92(sp)
 8009008:	800b9380 	call	800b938 <__lshift>
 800900c:	1009883a 	mov	r4,r2
 8009010:	a80b883a 	mov	r5,r21
 8009014:	1039883a 	mov	fp,r2
 8009018:	800ba800 	call	800ba80 <__mcmp>
 800901c:	da001717 	ldw	r8,92(sp)
 8009020:	00816e0e 	bge	zero,r2,80095dc <_dtoa_r+0x1248>
 8009024:	b93fffc3 	ldbu	r4,-1(r23)
 8009028:	b8bfffc4 	addi	r2,r23,-1
 800902c:	1007883a 	mov	r3,r2
 8009030:	01800e44 	movi	r6,57
 8009034:	d9c00717 	ldw	r7,28(sp)
 8009038:	00000506 	br	8009050 <_dtoa_r+0xcbc>
 800903c:	18ffffc4 	addi	r3,r3,-1
 8009040:	38811926 	beq	r7,r2,80094a8 <_dtoa_r+0x1114>
 8009044:	19000003 	ldbu	r4,0(r3)
 8009048:	102f883a 	mov	r23,r2
 800904c:	10bfffc4 	addi	r2,r2,-1
 8009050:	21403fcc 	andi	r5,r4,255
 8009054:	2940201c 	xori	r5,r5,128
 8009058:	297fe004 	addi	r5,r5,-128
 800905c:	29bff726 	beq	r5,r6,800903c <__alt_data_end+0xfc00903c>
 8009060:	21000044 	addi	r4,r4,1
 8009064:	11000005 	stb	r4,0(r2)
 8009068:	8009883a 	mov	r4,r16
 800906c:	a80b883a 	mov	r5,r21
 8009070:	800b1ac0 	call	800b1ac <_Bfree>
 8009074:	883e7526 	beq	r17,zero,8008a4c <__alt_data_end+0xfc008a4c>
 8009078:	90000426 	beq	r18,zero,800908c <_dtoa_r+0xcf8>
 800907c:	94400326 	beq	r18,r17,800908c <_dtoa_r+0xcf8>
 8009080:	8009883a 	mov	r4,r16
 8009084:	900b883a 	mov	r5,r18
 8009088:	800b1ac0 	call	800b1ac <_Bfree>
 800908c:	8009883a 	mov	r4,r16
 8009090:	880b883a 	mov	r5,r17
 8009094:	800b1ac0 	call	800b1ac <_Bfree>
 8009098:	003e6c06 	br	8008a4c <__alt_data_end+0xfc008a4c>
 800909c:	00800704 	movi	r2,28
 80090a0:	d9800817 	ldw	r6,32(sp)
 80090a4:	a0a9883a 	add	r20,r20,r2
 80090a8:	b0ad883a 	add	r22,r22,r2
 80090ac:	308d883a 	add	r6,r6,r2
 80090b0:	d9800815 	stw	r6,32(sp)
 80090b4:	003fa506 	br	8008f4c <__alt_data_end+0xfc008f4c>
 80090b8:	013efb84 	movi	r4,-1042
 80090bc:	246bc83a 	sub	r21,r4,r17
 80090c0:	9548983a 	sll	r4,r18,r21
 80090c4:	003d1806 	br	8008528 <__alt_data_end+0xfc008528>
 80090c8:	d8000c15 	stw	zero,48(sp)
 80090cc:	003d5b06 	br	800863c <__alt_data_end+0xfc00863c>
 80090d0:	880b883a 	mov	r5,r17
 80090d4:	8009883a 	mov	r4,r16
 80090d8:	01800284 	movi	r6,10
 80090dc:	000f883a 	mov	r7,zero
 80090e0:	800b1d40 	call	800b1d4 <__multadd>
 80090e4:	1023883a 	mov	r17,r2
 80090e8:	d8800d17 	ldw	r2,52(sp)
 80090ec:	0082550e 	bge	zero,r2,8009a44 <_dtoa_r+0x16b0>
 80090f0:	d8800615 	stw	r2,24(sp)
 80090f4:	0500050e 	bge	zero,r20,800910c <_dtoa_r+0xd78>
 80090f8:	880b883a 	mov	r5,r17
 80090fc:	8009883a 	mov	r4,r16
 8009100:	a00d883a 	mov	r6,r20
 8009104:	800b9380 	call	800b938 <__lshift>
 8009108:	1023883a 	mov	r17,r2
 800910c:	98016a1e 	bne	r19,zero,80096b8 <_dtoa_r+0x1324>
 8009110:	8829883a 	mov	r20,r17
 8009114:	d9000617 	ldw	r4,24(sp)
 8009118:	dcc00717 	ldw	r19,28(sp)
 800911c:	9480004c 	andi	r18,r18,1
 8009120:	20bfffc4 	addi	r2,r4,-1
 8009124:	9885883a 	add	r2,r19,r2
 8009128:	d8800415 	stw	r2,16(sp)
 800912c:	dc800615 	stw	r18,24(sp)
 8009130:	e009883a 	mov	r4,fp
 8009134:	a80b883a 	mov	r5,r21
 8009138:	800816c0 	call	800816c <quorem>
 800913c:	e009883a 	mov	r4,fp
 8009140:	880b883a 	mov	r5,r17
 8009144:	102f883a 	mov	r23,r2
 8009148:	800ba800 	call	800ba80 <__mcmp>
 800914c:	8009883a 	mov	r4,r16
 8009150:	a80b883a 	mov	r5,r21
 8009154:	a00d883a 	mov	r6,r20
 8009158:	102d883a 	mov	r22,r2
 800915c:	800bae00 	call	800bae0 <__mdiff>
 8009160:	1007883a 	mov	r3,r2
 8009164:	10800317 	ldw	r2,12(r2)
 8009168:	bc800c04 	addi	r18,r23,48
 800916c:	1000971e 	bne	r2,zero,80093cc <_dtoa_r+0x1038>
 8009170:	180b883a 	mov	r5,r3
 8009174:	e009883a 	mov	r4,fp
 8009178:	d8c01515 	stw	r3,84(sp)
 800917c:	800ba800 	call	800ba80 <__mcmp>
 8009180:	d8c01517 	ldw	r3,84(sp)
 8009184:	8009883a 	mov	r4,r16
 8009188:	d8801515 	stw	r2,84(sp)
 800918c:	180b883a 	mov	r5,r3
 8009190:	800b1ac0 	call	800b1ac <_Bfree>
 8009194:	d8801517 	ldw	r2,84(sp)
 8009198:	1000041e 	bne	r2,zero,80091ac <_dtoa_r+0xe18>
 800919c:	d9800317 	ldw	r6,12(sp)
 80091a0:	3000021e 	bne	r6,zero,80091ac <_dtoa_r+0xe18>
 80091a4:	d8c00617 	ldw	r3,24(sp)
 80091a8:	18007626 	beq	r3,zero,8009384 <_dtoa_r+0xff0>
 80091ac:	b0005b16 	blt	r22,zero,800931c <_dtoa_r+0xf88>
 80091b0:	b000041e 	bne	r22,zero,80091c4 <_dtoa_r+0xe30>
 80091b4:	d9000317 	ldw	r4,12(sp)
 80091b8:	2000021e 	bne	r4,zero,80091c4 <_dtoa_r+0xe30>
 80091bc:	d8c00617 	ldw	r3,24(sp)
 80091c0:	18005626 	beq	r3,zero,800931c <_dtoa_r+0xf88>
 80091c4:	00814d16 	blt	zero,r2,80096fc <_dtoa_r+0x1368>
 80091c8:	d8c00417 	ldw	r3,16(sp)
 80091cc:	9d800044 	addi	r22,r19,1
 80091d0:	9c800005 	stb	r18,0(r19)
 80091d4:	b02f883a 	mov	r23,r22
 80091d8:	98c14c26 	beq	r19,r3,800970c <_dtoa_r+0x1378>
 80091dc:	e00b883a 	mov	r5,fp
 80091e0:	8009883a 	mov	r4,r16
 80091e4:	01800284 	movi	r6,10
 80091e8:	000f883a 	mov	r7,zero
 80091ec:	800b1d40 	call	800b1d4 <__multadd>
 80091f0:	1039883a 	mov	fp,r2
 80091f4:	8d006d26 	beq	r17,r20,80093ac <_dtoa_r+0x1018>
 80091f8:	880b883a 	mov	r5,r17
 80091fc:	01800284 	movi	r6,10
 8009200:	000f883a 	mov	r7,zero
 8009204:	8009883a 	mov	r4,r16
 8009208:	800b1d40 	call	800b1d4 <__multadd>
 800920c:	a00b883a 	mov	r5,r20
 8009210:	8009883a 	mov	r4,r16
 8009214:	01800284 	movi	r6,10
 8009218:	000f883a 	mov	r7,zero
 800921c:	1023883a 	mov	r17,r2
 8009220:	800b1d40 	call	800b1d4 <__multadd>
 8009224:	1029883a 	mov	r20,r2
 8009228:	b027883a 	mov	r19,r22
 800922c:	003fc006 	br	8009130 <__alt_data_end+0xfc009130>
 8009230:	a005883a 	mov	r2,r20
 8009234:	003ede06 	br	8008db0 <__alt_data_end+0xfc008db0>
 8009238:	01000044 	movi	r4,1
 800923c:	d9000b15 	stw	r4,44(sp)
 8009240:	d9802217 	ldw	r6,136(sp)
 8009244:	0180dc0e 	bge	zero,r6,80095b8 <_dtoa_r+0x1224>
 8009248:	3023883a 	mov	r17,r6
 800924c:	d9800d15 	stw	r6,52(sp)
 8009250:	d9800615 	stw	r6,24(sp)
 8009254:	003d1e06 	br	80086d0 <__alt_data_end+0xfc0086d0>
 8009258:	d8800617 	ldw	r2,24(sp)
 800925c:	00be3716 	blt	zero,r2,8008b3c <__alt_data_end+0xfc008b3c>
 8009260:	1000be1e 	bne	r2,zero,800955c <_dtoa_r+0x11c8>
 8009264:	8809883a 	mov	r4,r17
 8009268:	a00b883a 	mov	r5,r20
 800926c:	000d883a 	mov	r6,zero
 8009270:	01d00534 	movhi	r7,16404
 8009274:	8011cc40 	call	8011cc4 <__muldf3>
 8009278:	1009883a 	mov	r4,r2
 800927c:	180b883a 	mov	r5,r3
 8009280:	900d883a 	mov	r6,r18
 8009284:	980f883a 	mov	r7,r19
 8009288:	8011b040 	call	8011b04 <__gedf2>
 800928c:	002b883a 	mov	r21,zero
 8009290:	0023883a 	mov	r17,zero
 8009294:	10007a16 	blt	r2,zero,8009480 <_dtoa_r+0x10ec>
 8009298:	d9002217 	ldw	r4,136(sp)
 800929c:	ddc00717 	ldw	r23,28(sp)
 80092a0:	0108303a 	nor	r4,zero,r4
 80092a4:	d9000515 	stw	r4,20(sp)
 80092a8:	8009883a 	mov	r4,r16
 80092ac:	a80b883a 	mov	r5,r21
 80092b0:	800b1ac0 	call	800b1ac <_Bfree>
 80092b4:	883f751e 	bne	r17,zero,800908c <__alt_data_end+0xfc00908c>
 80092b8:	003de406 	br	8008a4c <__alt_data_end+0xfc008a4c>
 80092bc:	e00b883a 	mov	r5,fp
 80092c0:	8009883a 	mov	r4,r16
 80092c4:	800b7f80 	call	800b7f8 <__pow5mult>
 80092c8:	1039883a 	mov	fp,r2
 80092cc:	003ed306 	br	8008e1c <__alt_data_end+0xfc008e1c>
 80092d0:	903ee01e 	bne	r18,zero,8008e54 <__alt_data_end+0xfc008e54>
 80092d4:	00800434 	movhi	r2,16
 80092d8:	10bfffc4 	addi	r2,r2,-1
 80092dc:	9884703a 	and	r2,r19,r2
 80092e0:	103f081e 	bne	r2,zero,8008f04 <__alt_data_end+0xfc008f04>
 80092e4:	9cdffc2c 	andhi	r19,r19,32752
 80092e8:	983f0626 	beq	r19,zero,8008f04 <__alt_data_end+0xfc008f04>
 80092ec:	d8800817 	ldw	r2,32(sp)
 80092f0:	b5800044 	addi	r22,r22,1
 80092f4:	04c00044 	movi	r19,1
 80092f8:	10800044 	addi	r2,r2,1
 80092fc:	d8800815 	stw	r2,32(sp)
 8009300:	003f0106 	br	8008f08 <__alt_data_end+0xfc008f08>
 8009304:	d9800f17 	ldw	r6,60(sp)
 8009308:	30016826 	beq	r6,zero,80098ac <_dtoa_r+0x1518>
 800930c:	10810cc4 	addi	r2,r2,1075
 8009310:	dd400917 	ldw	r21,36(sp)
 8009314:	dd000817 	ldw	r20,32(sp)
 8009318:	003e9906 	br	8008d80 <__alt_data_end+0xfc008d80>
 800931c:	9011883a 	mov	r8,r18
 8009320:	4007883a 	mov	r3,r8
 8009324:	e02d883a 	mov	r22,fp
 8009328:	0080100e 	bge	zero,r2,800936c <_dtoa_r+0xfd8>
 800932c:	01800044 	movi	r6,1
 8009330:	8009883a 	mov	r4,r16
 8009334:	e00b883a 	mov	r5,fp
 8009338:	da001515 	stw	r8,84(sp)
 800933c:	da001715 	stw	r8,92(sp)
 8009340:	800b9380 	call	800b938 <__lshift>
 8009344:	1009883a 	mov	r4,r2
 8009348:	a80b883a 	mov	r5,r21
 800934c:	102d883a 	mov	r22,r2
 8009350:	800ba800 	call	800ba80 <__mcmp>
 8009354:	d8c01517 	ldw	r3,84(sp)
 8009358:	da001717 	ldw	r8,92(sp)
 800935c:	0081a50e 	bge	zero,r2,80099f4 <_dtoa_r+0x1660>
 8009360:	00800e44 	movi	r2,57
 8009364:	40817b26 	beq	r8,r2,8009954 <_dtoa_r+0x15c0>
 8009368:	40c00044 	addi	r3,r8,1
 800936c:	8825883a 	mov	r18,r17
 8009370:	9dc00044 	addi	r23,r19,1
 8009374:	98c00005 	stb	r3,0(r19)
 8009378:	a023883a 	mov	r17,r20
 800937c:	b039883a 	mov	fp,r22
 8009380:	003f3906 	br	8009068 <__alt_data_end+0xfc009068>
 8009384:	00800e44 	movi	r2,57
 8009388:	9011883a 	mov	r8,r18
 800938c:	90817226 	beq	r18,r2,8009958 <_dtoa_r+0x15c4>
 8009390:	0580010e 	bge	zero,r22,8009398 <_dtoa_r+0x1004>
 8009394:	ba000c44 	addi	r8,r23,49
 8009398:	8825883a 	mov	r18,r17
 800939c:	9dc00044 	addi	r23,r19,1
 80093a0:	9a000005 	stb	r8,0(r19)
 80093a4:	a023883a 	mov	r17,r20
 80093a8:	003f2f06 	br	8009068 <__alt_data_end+0xfc009068>
 80093ac:	880b883a 	mov	r5,r17
 80093b0:	8009883a 	mov	r4,r16
 80093b4:	01800284 	movi	r6,10
 80093b8:	000f883a 	mov	r7,zero
 80093bc:	800b1d40 	call	800b1d4 <__multadd>
 80093c0:	1023883a 	mov	r17,r2
 80093c4:	1029883a 	mov	r20,r2
 80093c8:	003f9706 	br	8009228 <__alt_data_end+0xfc009228>
 80093cc:	8009883a 	mov	r4,r16
 80093d0:	180b883a 	mov	r5,r3
 80093d4:	800b1ac0 	call	800b1ac <_Bfree>
 80093d8:	00800044 	movi	r2,1
 80093dc:	003f7306 	br	80091ac <__alt_data_end+0xfc0091ac>
 80093e0:	e009883a 	mov	r4,fp
 80093e4:	a80b883a 	mov	r5,r21
 80093e8:	800ba800 	call	800ba80 <__mcmp>
 80093ec:	103ee60e 	bge	r2,zero,8008f88 <__alt_data_end+0xfc008f88>
 80093f0:	8009883a 	mov	r4,r16
 80093f4:	e00b883a 	mov	r5,fp
 80093f8:	01800284 	movi	r6,10
 80093fc:	000f883a 	mov	r7,zero
 8009400:	800b1d40 	call	800b1d4 <__multadd>
 8009404:	d9000517 	ldw	r4,20(sp)
 8009408:	d9800b17 	ldw	r6,44(sp)
 800940c:	1039883a 	mov	fp,r2
 8009410:	213fffc4 	addi	r4,r4,-1
 8009414:	d9000515 	stw	r4,20(sp)
 8009418:	303f2d1e 	bne	r6,zero,80090d0 <__alt_data_end+0xfc0090d0>
 800941c:	d9000d17 	ldw	r4,52(sp)
 8009420:	0101780e 	bge	zero,r4,8009a04 <_dtoa_r+0x1670>
 8009424:	d9000615 	stw	r4,24(sp)
 8009428:	003edb06 	br	8008f98 <__alt_data_end+0xfc008f98>
 800942c:	00800084 	movi	r2,2
 8009430:	30818e1e 	bne	r6,r2,8009a6c <_dtoa_r+0x16d8>
 8009434:	d8000b15 	stw	zero,44(sp)
 8009438:	003f8106 	br	8009240 <__alt_data_end+0xfc009240>
 800943c:	d8800717 	ldw	r2,28(sp)
 8009440:	003c0306 	br	8008450 <__alt_data_end+0xfc008450>
 8009444:	d9000317 	ldw	r4,12(sp)
 8009448:	00800084 	movi	r2,2
 800944c:	113ed00e 	bge	r2,r4,8008f90 <__alt_data_end+0xfc008f90>
 8009450:	d8c00617 	ldw	r3,24(sp)
 8009454:	183f901e 	bne	r3,zero,8009298 <__alt_data_end+0xfc009298>
 8009458:	a80b883a 	mov	r5,r21
 800945c:	8009883a 	mov	r4,r16
 8009460:	01800144 	movi	r6,5
 8009464:	000f883a 	mov	r7,zero
 8009468:	800b1d40 	call	800b1d4 <__multadd>
 800946c:	e009883a 	mov	r4,fp
 8009470:	100b883a 	mov	r5,r2
 8009474:	102b883a 	mov	r21,r2
 8009478:	800ba800 	call	800ba80 <__mcmp>
 800947c:	00bf860e 	bge	zero,r2,8009298 <__alt_data_end+0xfc009298>
 8009480:	d9800717 	ldw	r6,28(sp)
 8009484:	00800c44 	movi	r2,49
 8009488:	30800005 	stb	r2,0(r6)
 800948c:	d8800517 	ldw	r2,20(sp)
 8009490:	35c00044 	addi	r23,r6,1
 8009494:	10800044 	addi	r2,r2,1
 8009498:	d8800515 	stw	r2,20(sp)
 800949c:	003f8206 	br	80092a8 <__alt_data_end+0xfc0092a8>
 80094a0:	903e981e 	bne	r18,zero,8008f04 <__alt_data_end+0xfc008f04>
 80094a4:	003f8b06 	br	80092d4 <__alt_data_end+0xfc0092d4>
 80094a8:	d9800517 	ldw	r6,20(sp)
 80094ac:	d8c00717 	ldw	r3,28(sp)
 80094b0:	00800c44 	movi	r2,49
 80094b4:	31800044 	addi	r6,r6,1
 80094b8:	d9800515 	stw	r6,20(sp)
 80094bc:	18800005 	stb	r2,0(r3)
 80094c0:	003ee906 	br	8009068 <__alt_data_end+0xfc009068>
 80094c4:	dc000317 	ldw	r16,12(sp)
 80094c8:	003d6006 	br	8008a4c <__alt_data_end+0xfc008a4c>
 80094cc:	8809883a 	mov	r4,r17
 80094d0:	8012e880 	call	8012e88 <__floatsidf>
 80094d4:	a009883a 	mov	r4,r20
 80094d8:	a80b883a 	mov	r5,r21
 80094dc:	100d883a 	mov	r6,r2
 80094e0:	180f883a 	mov	r7,r3
 80094e4:	8011cc40 	call	8011cc4 <__muldf3>
 80094e8:	1009883a 	mov	r4,r2
 80094ec:	180b883a 	mov	r5,r3
 80094f0:	000d883a 	mov	r6,zero
 80094f4:	01d00734 	movhi	r7,16412
 80094f8:	80108640 	call	8010864 <__adddf3>
 80094fc:	1023883a 	mov	r17,r2
 8009500:	00bf3034 	movhi	r2,64704
 8009504:	1885883a 	add	r2,r3,r2
 8009508:	d8800e15 	stw	r2,56(sp)
 800950c:	a009883a 	mov	r4,r20
 8009510:	a80b883a 	mov	r5,r21
 8009514:	000d883a 	mov	r6,zero
 8009518:	01d00534 	movhi	r7,16404
 800951c:	80125300 	call	8012530 <__subdf3>
 8009520:	d9c00e17 	ldw	r7,56(sp)
 8009524:	1009883a 	mov	r4,r2
 8009528:	180b883a 	mov	r5,r3
 800952c:	880d883a 	mov	r6,r17
 8009530:	102b883a 	mov	r21,r2
 8009534:	1829883a 	mov	r20,r3
 8009538:	8011b040 	call	8011b04 <__gedf2>
 800953c:	00807716 	blt	zero,r2,800971c <_dtoa_r+0x1388>
 8009540:	d8800e17 	ldw	r2,56(sp)
 8009544:	a809883a 	mov	r4,r21
 8009548:	a00b883a 	mov	r5,r20
 800954c:	11e0003c 	xorhi	r7,r2,32768
 8009550:	880d883a 	mov	r6,r17
 8009554:	8011be40 	call	8011be4 <__ledf2>
 8009558:	103d6b0e 	bge	r2,zero,8008b08 <__alt_data_end+0xfc008b08>
 800955c:	002b883a 	mov	r21,zero
 8009560:	0023883a 	mov	r17,zero
 8009564:	003f4c06 	br	8009298 <__alt_data_end+0xfc009298>
 8009568:	d9800917 	ldw	r6,36(sp)
 800956c:	e00b883a 	mov	r5,fp
 8009570:	8009883a 	mov	r4,r16
 8009574:	800b7f80 	call	800b7f8 <__pow5mult>
 8009578:	1039883a 	mov	fp,r2
 800957c:	003e2706 	br	8008e1c <__alt_data_end+0xfc008e1c>
 8009580:	d8000b15 	stw	zero,44(sp)
 8009584:	003c4906 	br	80086ac <__alt_data_end+0xfc0086ac>
 8009588:	d9000917 	ldw	r4,36(sp)
 800958c:	d9800a17 	ldw	r6,40(sp)
 8009590:	dd400915 	stw	r21,36(sp)
 8009594:	a905c83a 	sub	r2,r21,r4
 8009598:	308d883a 	add	r6,r6,r2
 800959c:	d9800a15 	stw	r6,40(sp)
 80095a0:	002b883a 	mov	r21,zero
 80095a4:	003df206 	br	8008d70 <__alt_data_end+0xfc008d70>
 80095a8:	dc800e15 	stw	r18,56(sp)
 80095ac:	982b883a 	mov	r21,r19
 80095b0:	04400084 	movi	r17,2
 80095b4:	003c7406 	br	8008788 <__alt_data_end+0xfc008788>
 80095b8:	04400044 	movi	r17,1
 80095bc:	dc400d15 	stw	r17,52(sp)
 80095c0:	dc400615 	stw	r17,24(sp)
 80095c4:	dc402215 	stw	r17,136(sp)
 80095c8:	80001115 	stw	zero,68(r16)
 80095cc:	000b883a 	mov	r5,zero
 80095d0:	003c4a06 	br	80086fc <__alt_data_end+0xfc0086fc>
 80095d4:	3023883a 	mov	r17,r6
 80095d8:	003ffb06 	br	80095c8 <__alt_data_end+0xfc0095c8>
 80095dc:	1000021e 	bne	r2,zero,80095e8 <_dtoa_r+0x1254>
 80095e0:	4200004c 	andi	r8,r8,1
 80095e4:	403e8f1e 	bne	r8,zero,8009024 <__alt_data_end+0xfc009024>
 80095e8:	01000c04 	movi	r4,48
 80095ec:	00000106 	br	80095f4 <_dtoa_r+0x1260>
 80095f0:	102f883a 	mov	r23,r2
 80095f4:	b8bfffc4 	addi	r2,r23,-1
 80095f8:	10c00007 	ldb	r3,0(r2)
 80095fc:	193ffc26 	beq	r3,r4,80095f0 <__alt_data_end+0xfc0095f0>
 8009600:	003e9906 	br	8009068 <__alt_data_end+0xfc009068>
 8009604:	d9000517 	ldw	r4,20(sp)
 8009608:	012fc83a 	sub	r23,zero,r4
 800960c:	b800ad26 	beq	r23,zero,80098c4 <_dtoa_r+0x1530>
 8009610:	b88003cc 	andi	r2,r23,15
 8009614:	100490fa 	slli	r2,r2,3
 8009618:	00c20074 	movhi	r3,2049
 800961c:	18db6f04 	addi	r3,r3,28092
 8009620:	1885883a 	add	r2,r3,r2
 8009624:	11800017 	ldw	r6,0(r2)
 8009628:	11c00117 	ldw	r7,4(r2)
 800962c:	b82fd13a 	srai	r23,r23,4
 8009630:	9009883a 	mov	r4,r18
 8009634:	980b883a 	mov	r5,r19
 8009638:	8011cc40 	call	8011cc4 <__muldf3>
 800963c:	1029883a 	mov	r20,r2
 8009640:	182b883a 	mov	r21,r3
 8009644:	b800f426 	beq	r23,zero,8009a18 <_dtoa_r+0x1684>
 8009648:	02020074 	movhi	r8,2049
 800964c:	421b6504 	addi	r8,r8,28052
 8009650:	8029883a 	mov	r20,r16
 8009654:	04400084 	movi	r17,2
 8009658:	4021883a 	mov	r16,r8
 800965c:	b980004c 	andi	r6,r23,1
 8009660:	1009883a 	mov	r4,r2
 8009664:	b82fd07a 	srai	r23,r23,1
 8009668:	180b883a 	mov	r5,r3
 800966c:	30000426 	beq	r6,zero,8009680 <_dtoa_r+0x12ec>
 8009670:	81800017 	ldw	r6,0(r16)
 8009674:	81c00117 	ldw	r7,4(r16)
 8009678:	8c400044 	addi	r17,r17,1
 800967c:	8011cc40 	call	8011cc4 <__muldf3>
 8009680:	84000204 	addi	r16,r16,8
 8009684:	b83ff51e 	bne	r23,zero,800965c <__alt_data_end+0xfc00965c>
 8009688:	a021883a 	mov	r16,r20
 800968c:	182b883a 	mov	r21,r3
 8009690:	1029883a 	mov	r20,r2
 8009694:	003c5506 	br	80087ec <__alt_data_end+0xfc0087ec>
 8009698:	d9800517 	ldw	r6,20(sp)
 800969c:	d9000717 	ldw	r4,28(sp)
 80096a0:	00c00c04 	movi	r3,48
 80096a4:	31800044 	addi	r6,r6,1
 80096a8:	d9800515 	stw	r6,20(sp)
 80096ac:	20c00005 	stb	r3,0(r4)
 80096b0:	02000c44 	movi	r8,49
 80096b4:	003da206 	br	8008d40 <__alt_data_end+0xfc008d40>
 80096b8:	89400117 	ldw	r5,4(r17)
 80096bc:	8009883a 	mov	r4,r16
 80096c0:	800b1040 	call	800b104 <_Balloc>
 80096c4:	89800417 	ldw	r6,16(r17)
 80096c8:	11000304 	addi	r4,r2,12
 80096cc:	89400304 	addi	r5,r17,12
 80096d0:	31800084 	addi	r6,r6,2
 80096d4:	318d883a 	add	r6,r6,r6
 80096d8:	318d883a 	add	r6,r6,r6
 80096dc:	1027883a 	mov	r19,r2
 80096e0:	800ae700 	call	800ae70 <memcpy>
 80096e4:	8009883a 	mov	r4,r16
 80096e8:	980b883a 	mov	r5,r19
 80096ec:	01800044 	movi	r6,1
 80096f0:	800b9380 	call	800b938 <__lshift>
 80096f4:	1029883a 	mov	r20,r2
 80096f8:	003e8606 	br	8009114 <__alt_data_end+0xfc009114>
 80096fc:	00800e44 	movi	r2,57
 8009700:	90809526 	beq	r18,r2,8009958 <_dtoa_r+0x15c4>
 8009704:	92000044 	addi	r8,r18,1
 8009708:	003f2306 	br	8009398 <__alt_data_end+0xfc009398>
 800970c:	9011883a 	mov	r8,r18
 8009710:	8825883a 	mov	r18,r17
 8009714:	a023883a 	mov	r17,r20
 8009718:	003e3706 	br	8008ff8 <__alt_data_end+0xfc008ff8>
 800971c:	002b883a 	mov	r21,zero
 8009720:	0023883a 	mov	r17,zero
 8009724:	003f5606 	br	8009480 <__alt_data_end+0xfc009480>
 8009728:	51bfffc4 	addi	r6,r10,-1
 800972c:	300490fa 	slli	r2,r6,3
 8009730:	00c20074 	movhi	r3,2049
 8009734:	18db6f04 	addi	r3,r3,28092
 8009738:	1885883a 	add	r2,r3,r2
 800973c:	d9c00e17 	ldw	r7,56(sp)
 8009740:	11000017 	ldw	r4,0(r2)
 8009744:	11400117 	ldw	r5,4(r2)
 8009748:	d8800717 	ldw	r2,28(sp)
 800974c:	d9801015 	stw	r6,64(sp)
 8009750:	880d883a 	mov	r6,r17
 8009754:	da801615 	stw	r10,88(sp)
 8009758:	15c00044 	addi	r23,r2,1
 800975c:	8011cc40 	call	8011cc4 <__muldf3>
 8009760:	a80b883a 	mov	r5,r21
 8009764:	a009883a 	mov	r4,r20
 8009768:	d8c01115 	stw	r3,68(sp)
 800976c:	d8800e15 	stw	r2,56(sp)
 8009770:	8012e000 	call	8012e00 <__fixdfsi>
 8009774:	1009883a 	mov	r4,r2
 8009778:	1023883a 	mov	r17,r2
 800977c:	8012e880 	call	8012e88 <__floatsidf>
 8009780:	a009883a 	mov	r4,r20
 8009784:	a80b883a 	mov	r5,r21
 8009788:	100d883a 	mov	r6,r2
 800978c:	180f883a 	mov	r7,r3
 8009790:	80125300 	call	8012530 <__subdf3>
 8009794:	1813883a 	mov	r9,r3
 8009798:	d8c00717 	ldw	r3,28(sp)
 800979c:	8c400c04 	addi	r17,r17,48
 80097a0:	1011883a 	mov	r8,r2
 80097a4:	1c400005 	stb	r17,0(r3)
 80097a8:	da801617 	ldw	r10,88(sp)
 80097ac:	00800044 	movi	r2,1
 80097b0:	50802326 	beq	r10,r2,8009840 <_dtoa_r+0x14ac>
 80097b4:	d8800717 	ldw	r2,28(sp)
 80097b8:	b82b883a 	mov	r21,r23
 80097bc:	dc001315 	stw	r16,76(sp)
 80097c0:	12a9883a 	add	r20,r2,r10
 80097c4:	4807883a 	mov	r3,r9
 80097c8:	4005883a 	mov	r2,r8
 80097cc:	dc801415 	stw	r18,80(sp)
 80097d0:	000d883a 	mov	r6,zero
 80097d4:	01d00934 	movhi	r7,16420
 80097d8:	1009883a 	mov	r4,r2
 80097dc:	180b883a 	mov	r5,r3
 80097e0:	8011cc40 	call	8011cc4 <__muldf3>
 80097e4:	180b883a 	mov	r5,r3
 80097e8:	1009883a 	mov	r4,r2
 80097ec:	1821883a 	mov	r16,r3
 80097f0:	1025883a 	mov	r18,r2
 80097f4:	8012e000 	call	8012e00 <__fixdfsi>
 80097f8:	1009883a 	mov	r4,r2
 80097fc:	1023883a 	mov	r17,r2
 8009800:	8012e880 	call	8012e88 <__floatsidf>
 8009804:	9009883a 	mov	r4,r18
 8009808:	800b883a 	mov	r5,r16
 800980c:	100d883a 	mov	r6,r2
 8009810:	180f883a 	mov	r7,r3
 8009814:	8c400c04 	addi	r17,r17,48
 8009818:	80125300 	call	8012530 <__subdf3>
 800981c:	ad400044 	addi	r21,r21,1
 8009820:	ac7fffc5 	stb	r17,-1(r21)
 8009824:	ad3fea1e 	bne	r21,r20,80097d0 <__alt_data_end+0xfc0097d0>
 8009828:	1813883a 	mov	r9,r3
 800982c:	d8c01017 	ldw	r3,64(sp)
 8009830:	dc001317 	ldw	r16,76(sp)
 8009834:	dc801417 	ldw	r18,80(sp)
 8009838:	1011883a 	mov	r8,r2
 800983c:	b8ef883a 	add	r23,r23,r3
 8009840:	d9000e17 	ldw	r4,56(sp)
 8009844:	d9401117 	ldw	r5,68(sp)
 8009848:	000d883a 	mov	r6,zero
 800984c:	01cff834 	movhi	r7,16352
 8009850:	da001715 	stw	r8,92(sp)
 8009854:	da401515 	stw	r9,84(sp)
 8009858:	80108640 	call	8010864 <__adddf3>
 800985c:	da001717 	ldw	r8,92(sp)
 8009860:	da401517 	ldw	r9,84(sp)
 8009864:	1009883a 	mov	r4,r2
 8009868:	400d883a 	mov	r6,r8
 800986c:	480f883a 	mov	r7,r9
 8009870:	180b883a 	mov	r5,r3
 8009874:	8011be40 	call	8011be4 <__ledf2>
 8009878:	da001717 	ldw	r8,92(sp)
 800987c:	da401517 	ldw	r9,84(sp)
 8009880:	10003b0e 	bge	r2,zero,8009970 <_dtoa_r+0x15dc>
 8009884:	d9001217 	ldw	r4,72(sp)
 8009888:	bd7fffc3 	ldbu	r21,-1(r23)
 800988c:	d9000515 	stw	r4,20(sp)
 8009890:	003d1c06 	br	8008d04 <__alt_data_end+0xfc008d04>
 8009894:	d8c00817 	ldw	r3,32(sp)
 8009898:	18a9c83a 	sub	r20,r3,r2
 800989c:	0005883a 	mov	r2,zero
 80098a0:	003d3706 	br	8008d80 <__alt_data_end+0xfc008d80>
 80098a4:	00800044 	movi	r2,1
 80098a8:	003dd006 	br	8008fec <__alt_data_end+0xfc008fec>
 80098ac:	d8c00217 	ldw	r3,8(sp)
 80098b0:	00800d84 	movi	r2,54
 80098b4:	dd400917 	ldw	r21,36(sp)
 80098b8:	10c5c83a 	sub	r2,r2,r3
 80098bc:	dd000817 	ldw	r20,32(sp)
 80098c0:	003d2f06 	br	8008d80 <__alt_data_end+0xfc008d80>
 80098c4:	9029883a 	mov	r20,r18
 80098c8:	982b883a 	mov	r21,r19
 80098cc:	04400084 	movi	r17,2
 80098d0:	003bc606 	br	80087ec <__alt_data_end+0xfc0087ec>
 80098d4:	d8800617 	ldw	r2,24(sp)
 80098d8:	103efc26 	beq	r2,zero,80094cc <__alt_data_end+0xfc0094cc>
 80098dc:	d8c00d17 	ldw	r3,52(sp)
 80098e0:	00fc890e 	bge	zero,r3,8008b08 <__alt_data_end+0xfc008b08>
 80098e4:	a80b883a 	mov	r5,r21
 80098e8:	a009883a 	mov	r4,r20
 80098ec:	000d883a 	mov	r6,zero
 80098f0:	01d00934 	movhi	r7,16420
 80098f4:	8011cc40 	call	8011cc4 <__muldf3>
 80098f8:	89000044 	addi	r4,r17,1
 80098fc:	1029883a 	mov	r20,r2
 8009900:	182b883a 	mov	r21,r3
 8009904:	8012e880 	call	8012e88 <__floatsidf>
 8009908:	a009883a 	mov	r4,r20
 800990c:	a80b883a 	mov	r5,r21
 8009910:	100d883a 	mov	r6,r2
 8009914:	180f883a 	mov	r7,r3
 8009918:	8011cc40 	call	8011cc4 <__muldf3>
 800991c:	1009883a 	mov	r4,r2
 8009920:	180b883a 	mov	r5,r3
 8009924:	000d883a 	mov	r6,zero
 8009928:	01d00734 	movhi	r7,16412
 800992c:	80108640 	call	8010864 <__adddf3>
 8009930:	d9000517 	ldw	r4,20(sp)
 8009934:	1023883a 	mov	r17,r2
 8009938:	00bf3034 	movhi	r2,64704
 800993c:	213fffc4 	addi	r4,r4,-1
 8009940:	1885883a 	add	r2,r3,r2
 8009944:	d9001215 	stw	r4,72(sp)
 8009948:	d8800e15 	stw	r2,56(sp)
 800994c:	da800d17 	ldw	r10,52(sp)
 8009950:	003bc306 	br	8008860 <__alt_data_end+0xfc008860>
 8009954:	b039883a 	mov	fp,r22
 8009958:	01000e44 	movi	r4,57
 800995c:	8825883a 	mov	r18,r17
 8009960:	9dc00044 	addi	r23,r19,1
 8009964:	99000005 	stb	r4,0(r19)
 8009968:	a023883a 	mov	r17,r20
 800996c:	003dae06 	br	8009028 <__alt_data_end+0xfc009028>
 8009970:	d9800e17 	ldw	r6,56(sp)
 8009974:	d9c01117 	ldw	r7,68(sp)
 8009978:	0009883a 	mov	r4,zero
 800997c:	014ff834 	movhi	r5,16352
 8009980:	da001715 	stw	r8,92(sp)
 8009984:	da401515 	stw	r9,84(sp)
 8009988:	80125300 	call	8012530 <__subdf3>
 800998c:	da001717 	ldw	r8,92(sp)
 8009990:	da401517 	ldw	r9,84(sp)
 8009994:	1009883a 	mov	r4,r2
 8009998:	180b883a 	mov	r5,r3
 800999c:	400d883a 	mov	r6,r8
 80099a0:	480f883a 	mov	r7,r9
 80099a4:	8011b040 	call	8011b04 <__gedf2>
 80099a8:	00bc570e 	bge	zero,r2,8008b08 <__alt_data_end+0xfc008b08>
 80099ac:	01000c04 	movi	r4,48
 80099b0:	00000106 	br	80099b8 <_dtoa_r+0x1624>
 80099b4:	102f883a 	mov	r23,r2
 80099b8:	b8bfffc4 	addi	r2,r23,-1
 80099bc:	10c00007 	ldb	r3,0(r2)
 80099c0:	193ffc26 	beq	r3,r4,80099b4 <__alt_data_end+0xfc0099b4>
 80099c4:	d9801217 	ldw	r6,72(sp)
 80099c8:	d9800515 	stw	r6,20(sp)
 80099cc:	003c1f06 	br	8008a4c <__alt_data_end+0xfc008a4c>
 80099d0:	d8801217 	ldw	r2,72(sp)
 80099d4:	dc001117 	ldw	r16,68(sp)
 80099d8:	d8800515 	stw	r2,20(sp)
 80099dc:	003cc906 	br	8008d04 <__alt_data_end+0xfc008d04>
 80099e0:	dd801317 	ldw	r22,76(sp)
 80099e4:	dc001117 	ldw	r16,68(sp)
 80099e8:	dcc01417 	ldw	r19,80(sp)
 80099ec:	dc801017 	ldw	r18,64(sp)
 80099f0:	003c4506 	br	8008b08 <__alt_data_end+0xfc008b08>
 80099f4:	103e5d1e 	bne	r2,zero,800936c <__alt_data_end+0xfc00936c>
 80099f8:	4080004c 	andi	r2,r8,1
 80099fc:	103e5b26 	beq	r2,zero,800936c <__alt_data_end+0xfc00936c>
 8009a00:	003e5706 	br	8009360 <__alt_data_end+0xfc009360>
 8009a04:	d8c00317 	ldw	r3,12(sp)
 8009a08:	00800084 	movi	r2,2
 8009a0c:	10c00a16 	blt	r2,r3,8009a38 <_dtoa_r+0x16a4>
 8009a10:	d9000d17 	ldw	r4,52(sp)
 8009a14:	003e8306 	br	8009424 <__alt_data_end+0xfc009424>
 8009a18:	04400084 	movi	r17,2
 8009a1c:	003b7306 	br	80087ec <__alt_data_end+0xfc0087ec>
 8009a20:	d9801217 	ldw	r6,72(sp)
 8009a24:	d9800515 	stw	r6,20(sp)
 8009a28:	003cb606 	br	8008d04 <__alt_data_end+0xfc008d04>
 8009a2c:	d9001217 	ldw	r4,72(sp)
 8009a30:	d9000515 	stw	r4,20(sp)
 8009a34:	003c0506 	br	8008a4c <__alt_data_end+0xfc008a4c>
 8009a38:	d9800d17 	ldw	r6,52(sp)
 8009a3c:	d9800615 	stw	r6,24(sp)
 8009a40:	003e8306 	br	8009450 <__alt_data_end+0xfc009450>
 8009a44:	d9800317 	ldw	r6,12(sp)
 8009a48:	00800084 	movi	r2,2
 8009a4c:	11800216 	blt	r2,r6,8009a58 <_dtoa_r+0x16c4>
 8009a50:	d8800d17 	ldw	r2,52(sp)
 8009a54:	003da606 	br	80090f0 <__alt_data_end+0xfc0090f0>
 8009a58:	d8800d17 	ldw	r2,52(sp)
 8009a5c:	d8800615 	stw	r2,24(sp)
 8009a60:	003e7b06 	br	8009450 <__alt_data_end+0xfc009450>
 8009a64:	05000044 	movi	r20,1
 8009a68:	003b0506 	br	8008680 <__alt_data_end+0xfc008680>
 8009a6c:	8009883a 	mov	r4,r16
 8009a70:	80001115 	stw	zero,68(r16)
 8009a74:	000b883a 	mov	r5,zero
 8009a78:	800b1040 	call	800b104 <_Balloc>
 8009a7c:	d8800715 	stw	r2,28(sp)
 8009a80:	d8c00717 	ldw	r3,28(sp)
 8009a84:	00bfffc4 	movi	r2,-1
 8009a88:	01000044 	movi	r4,1
 8009a8c:	d8800615 	stw	r2,24(sp)
 8009a90:	80c01015 	stw	r3,64(r16)
 8009a94:	d9000b15 	stw	r4,44(sp)
 8009a98:	d8002215 	stw	zero,136(sp)
 8009a9c:	d8800d15 	stw	r2,52(sp)
 8009aa0:	003c1906 	br	8008b08 <__alt_data_end+0xfc008b08>
 8009aa4:	193d2926 	beq	r3,r4,8008f4c <__alt_data_end+0xfc008f4c>
 8009aa8:	00c00f04 	movi	r3,60
 8009aac:	1885c83a 	sub	r2,r3,r2
 8009ab0:	003d7b06 	br	80090a0 <__alt_data_end+0xfc0090a0>
 8009ab4:	000b883a 	mov	r5,zero
 8009ab8:	003b1006 	br	80086fc <__alt_data_end+0xfc0086fc>

08009abc <_fflush_r>:
 8009abc:	defffb04 	addi	sp,sp,-20
 8009ac0:	dcc00315 	stw	r19,12(sp)
 8009ac4:	dc000015 	stw	r16,0(sp)
 8009ac8:	dfc00415 	stw	ra,16(sp)
 8009acc:	dc800215 	stw	r18,8(sp)
 8009ad0:	dc400115 	stw	r17,4(sp)
 8009ad4:	2027883a 	mov	r19,r4
 8009ad8:	2821883a 	mov	r16,r5
 8009adc:	20000226 	beq	r4,zero,8009ae8 <_fflush_r+0x2c>
 8009ae0:	20800e17 	ldw	r2,56(r4)
 8009ae4:	10005326 	beq	r2,zero,8009c34 <_fflush_r+0x178>
 8009ae8:	8080030b 	ldhu	r2,12(r16)
 8009aec:	10ffffcc 	andi	r3,r2,65535
 8009af0:	18e0001c 	xori	r3,r3,32768
 8009af4:	18e00004 	addi	r3,r3,-32768
 8009af8:	18002c26 	beq	r3,zero,8009bac <_fflush_r+0xf0>
 8009afc:	10c0020c 	andi	r3,r2,8
 8009b00:	1800321e 	bne	r3,zero,8009bcc <_fflush_r+0x110>
 8009b04:	80c00117 	ldw	r3,4(r16)
 8009b08:	10820014 	ori	r2,r2,2048
 8009b0c:	8080030d 	sth	r2,12(r16)
 8009b10:	00c0570e 	bge	zero,r3,8009c70 <_fflush_r+0x1b4>
 8009b14:	82000a17 	ldw	r8,40(r16)
 8009b18:	40002426 	beq	r8,zero,8009bac <_fflush_r+0xf0>
 8009b1c:	9c400017 	ldw	r17,0(r19)
 8009b20:	10c4000c 	andi	r3,r2,4096
 8009b24:	98000015 	stw	zero,0(r19)
 8009b28:	18004626 	beq	r3,zero,8009c44 <_fflush_r+0x188>
 8009b2c:	81801417 	ldw	r6,80(r16)
 8009b30:	10c0010c 	andi	r3,r2,4
 8009b34:	18000626 	beq	r3,zero,8009b50 <_fflush_r+0x94>
 8009b38:	80c00117 	ldw	r3,4(r16)
 8009b3c:	80800c17 	ldw	r2,48(r16)
 8009b40:	30cdc83a 	sub	r6,r6,r3
 8009b44:	10000226 	beq	r2,zero,8009b50 <_fflush_r+0x94>
 8009b48:	80800f17 	ldw	r2,60(r16)
 8009b4c:	308dc83a 	sub	r6,r6,r2
 8009b50:	81400717 	ldw	r5,28(r16)
 8009b54:	9809883a 	mov	r4,r19
 8009b58:	000f883a 	mov	r7,zero
 8009b5c:	403ee83a 	callr	r8
 8009b60:	00ffffc4 	movi	r3,-1
 8009b64:	10c04526 	beq	r2,r3,8009c7c <_fflush_r+0x1c0>
 8009b68:	80c0030b 	ldhu	r3,12(r16)
 8009b6c:	81000417 	ldw	r4,16(r16)
 8009b70:	80000115 	stw	zero,4(r16)
 8009b74:	197dffcc 	andi	r5,r3,63487
 8009b78:	8140030d 	sth	r5,12(r16)
 8009b7c:	81000015 	stw	r4,0(r16)
 8009b80:	18c4000c 	andi	r3,r3,4096
 8009b84:	18000126 	beq	r3,zero,8009b8c <_fflush_r+0xd0>
 8009b88:	80801415 	stw	r2,80(r16)
 8009b8c:	81400c17 	ldw	r5,48(r16)
 8009b90:	9c400015 	stw	r17,0(r19)
 8009b94:	28000526 	beq	r5,zero,8009bac <_fflush_r+0xf0>
 8009b98:	80801004 	addi	r2,r16,64
 8009b9c:	28800226 	beq	r5,r2,8009ba8 <_fflush_r+0xec>
 8009ba0:	9809883a 	mov	r4,r19
 8009ba4:	800a1ec0 	call	800a1ec <_free_r>
 8009ba8:	80000c15 	stw	zero,48(r16)
 8009bac:	0005883a 	mov	r2,zero
 8009bb0:	dfc00417 	ldw	ra,16(sp)
 8009bb4:	dcc00317 	ldw	r19,12(sp)
 8009bb8:	dc800217 	ldw	r18,8(sp)
 8009bbc:	dc400117 	ldw	r17,4(sp)
 8009bc0:	dc000017 	ldw	r16,0(sp)
 8009bc4:	dec00504 	addi	sp,sp,20
 8009bc8:	f800283a 	ret
 8009bcc:	84800417 	ldw	r18,16(r16)
 8009bd0:	903ff626 	beq	r18,zero,8009bac <__alt_data_end+0xfc009bac>
 8009bd4:	84400017 	ldw	r17,0(r16)
 8009bd8:	108000cc 	andi	r2,r2,3
 8009bdc:	84800015 	stw	r18,0(r16)
 8009be0:	8ca3c83a 	sub	r17,r17,r18
 8009be4:	10001526 	beq	r2,zero,8009c3c <_fflush_r+0x180>
 8009be8:	0005883a 	mov	r2,zero
 8009bec:	80800215 	stw	r2,8(r16)
 8009bf0:	04400316 	blt	zero,r17,8009c00 <_fflush_r+0x144>
 8009bf4:	003fed06 	br	8009bac <__alt_data_end+0xfc009bac>
 8009bf8:	90a5883a 	add	r18,r18,r2
 8009bfc:	047feb0e 	bge	zero,r17,8009bac <__alt_data_end+0xfc009bac>
 8009c00:	80800917 	ldw	r2,36(r16)
 8009c04:	81400717 	ldw	r5,28(r16)
 8009c08:	880f883a 	mov	r7,r17
 8009c0c:	900d883a 	mov	r6,r18
 8009c10:	9809883a 	mov	r4,r19
 8009c14:	103ee83a 	callr	r2
 8009c18:	88a3c83a 	sub	r17,r17,r2
 8009c1c:	00bff616 	blt	zero,r2,8009bf8 <__alt_data_end+0xfc009bf8>
 8009c20:	80c0030b 	ldhu	r3,12(r16)
 8009c24:	00bfffc4 	movi	r2,-1
 8009c28:	18c01014 	ori	r3,r3,64
 8009c2c:	80c0030d 	sth	r3,12(r16)
 8009c30:	003fdf06 	br	8009bb0 <__alt_data_end+0xfc009bb0>
 8009c34:	800a0780 	call	800a078 <__sinit>
 8009c38:	003fab06 	br	8009ae8 <__alt_data_end+0xfc009ae8>
 8009c3c:	80800517 	ldw	r2,20(r16)
 8009c40:	003fea06 	br	8009bec <__alt_data_end+0xfc009bec>
 8009c44:	81400717 	ldw	r5,28(r16)
 8009c48:	000d883a 	mov	r6,zero
 8009c4c:	9809883a 	mov	r4,r19
 8009c50:	01c00044 	movi	r7,1
 8009c54:	403ee83a 	callr	r8
 8009c58:	100d883a 	mov	r6,r2
 8009c5c:	00bfffc4 	movi	r2,-1
 8009c60:	30801326 	beq	r6,r2,8009cb0 <_fflush_r+0x1f4>
 8009c64:	8080030b 	ldhu	r2,12(r16)
 8009c68:	82000a17 	ldw	r8,40(r16)
 8009c6c:	003fb006 	br	8009b30 <__alt_data_end+0xfc009b30>
 8009c70:	80c00f17 	ldw	r3,60(r16)
 8009c74:	00ffa716 	blt	zero,r3,8009b14 <__alt_data_end+0xfc009b14>
 8009c78:	003fcc06 	br	8009bac <__alt_data_end+0xfc009bac>
 8009c7c:	98c00017 	ldw	r3,0(r19)
 8009c80:	183fb926 	beq	r3,zero,8009b68 <__alt_data_end+0xfc009b68>
 8009c84:	01000744 	movi	r4,29
 8009c88:	19000226 	beq	r3,r4,8009c94 <_fflush_r+0x1d8>
 8009c8c:	01000584 	movi	r4,22
 8009c90:	1900101e 	bne	r3,r4,8009cd4 <_fflush_r+0x218>
 8009c94:	8080030b 	ldhu	r2,12(r16)
 8009c98:	80c00417 	ldw	r3,16(r16)
 8009c9c:	80000115 	stw	zero,4(r16)
 8009ca0:	10bdffcc 	andi	r2,r2,63487
 8009ca4:	8080030d 	sth	r2,12(r16)
 8009ca8:	80c00015 	stw	r3,0(r16)
 8009cac:	003fb706 	br	8009b8c <__alt_data_end+0xfc009b8c>
 8009cb0:	98800017 	ldw	r2,0(r19)
 8009cb4:	103feb26 	beq	r2,zero,8009c64 <__alt_data_end+0xfc009c64>
 8009cb8:	00c00744 	movi	r3,29
 8009cbc:	10c00226 	beq	r2,r3,8009cc8 <_fflush_r+0x20c>
 8009cc0:	00c00584 	movi	r3,22
 8009cc4:	10ffd61e 	bne	r2,r3,8009c20 <__alt_data_end+0xfc009c20>
 8009cc8:	9c400015 	stw	r17,0(r19)
 8009ccc:	0005883a 	mov	r2,zero
 8009cd0:	003fb706 	br	8009bb0 <__alt_data_end+0xfc009bb0>
 8009cd4:	80c0030b 	ldhu	r3,12(r16)
 8009cd8:	18c01014 	ori	r3,r3,64
 8009cdc:	80c0030d 	sth	r3,12(r16)
 8009ce0:	003fb306 	br	8009bb0 <__alt_data_end+0xfc009bb0>

08009ce4 <fflush>:
 8009ce4:	20000526 	beq	r4,zero,8009cfc <fflush+0x18>
 8009ce8:	008200b4 	movhi	r2,2050
 8009cec:	10a31904 	addi	r2,r2,-29596
 8009cf0:	200b883a 	mov	r5,r4
 8009cf4:	11000017 	ldw	r4,0(r2)
 8009cf8:	8009abc1 	jmpi	8009abc <_fflush_r>
 8009cfc:	008200b4 	movhi	r2,2050
 8009d00:	10a31804 	addi	r2,r2,-29600
 8009d04:	11000017 	ldw	r4,0(r2)
 8009d08:	01420074 	movhi	r5,2049
 8009d0c:	2966af04 	addi	r5,r5,-25924
 8009d10:	800aa381 	jmpi	800aa38 <_fwalk_reent>

08009d14 <__fp_lock>:
 8009d14:	0005883a 	mov	r2,zero
 8009d18:	f800283a 	ret

08009d1c <__fp_unlock>:
 8009d1c:	0005883a 	mov	r2,zero
 8009d20:	f800283a 	ret

08009d24 <_cleanup_r>:
 8009d24:	01420074 	movhi	r5,2049
 8009d28:	297d0604 	addi	r5,r5,-3048
 8009d2c:	800a9801 	jmpi	800a980 <_fwalk>

08009d30 <__sinit.part.1>:
 8009d30:	defff604 	addi	sp,sp,-40
 8009d34:	00c20074 	movhi	r3,2049
 8009d38:	dfc00915 	stw	ra,36(sp)
 8009d3c:	df000815 	stw	fp,32(sp)
 8009d40:	ddc00715 	stw	r23,28(sp)
 8009d44:	dd800615 	stw	r22,24(sp)
 8009d48:	dd400515 	stw	r21,20(sp)
 8009d4c:	dd000415 	stw	r20,16(sp)
 8009d50:	dcc00315 	stw	r19,12(sp)
 8009d54:	dc800215 	stw	r18,8(sp)
 8009d58:	dc400115 	stw	r17,4(sp)
 8009d5c:	dc000015 	stw	r16,0(sp)
 8009d60:	18e74904 	addi	r3,r3,-25308
 8009d64:	24000117 	ldw	r16,4(r4)
 8009d68:	20c00f15 	stw	r3,60(r4)
 8009d6c:	07000044 	movi	fp,1
 8009d70:	00c000c4 	movi	r3,3
 8009d74:	2080bb04 	addi	r2,r4,748
 8009d78:	20c0b915 	stw	r3,740(r4)
 8009d7c:	27000e15 	stw	fp,56(r4)
 8009d80:	2080ba15 	stw	r2,744(r4)
 8009d84:	2000b815 	stw	zero,736(r4)
 8009d88:	05c00204 	movi	r23,8
 8009d8c:	00800104 	movi	r2,4
 8009d90:	2025883a 	mov	r18,r4
 8009d94:	b80d883a 	mov	r6,r23
 8009d98:	81001704 	addi	r4,r16,92
 8009d9c:	000b883a 	mov	r5,zero
 8009da0:	80000015 	stw	zero,0(r16)
 8009da4:	80000115 	stw	zero,4(r16)
 8009da8:	80000215 	stw	zero,8(r16)
 8009dac:	8080030d 	sth	r2,12(r16)
 8009db0:	80001915 	stw	zero,100(r16)
 8009db4:	8000038d 	sth	zero,14(r16)
 8009db8:	80000415 	stw	zero,16(r16)
 8009dbc:	80000515 	stw	zero,20(r16)
 8009dc0:	80000615 	stw	zero,24(r16)
 8009dc4:	80034f00 	call	80034f0 <memset>
 8009dc8:	05820074 	movhi	r22,2049
 8009dcc:	94400217 	ldw	r17,8(r18)
 8009dd0:	05420074 	movhi	r21,2049
 8009dd4:	05020074 	movhi	r20,2049
 8009dd8:	04c20074 	movhi	r19,2049
 8009ddc:	b5b1d804 	addi	r22,r22,-14496
 8009de0:	ad71ef04 	addi	r21,r21,-14404
 8009de4:	a5320e04 	addi	r20,r20,-14280
 8009de8:	9cf22504 	addi	r19,r19,-14188
 8009dec:	85800815 	stw	r22,32(r16)
 8009df0:	85400915 	stw	r21,36(r16)
 8009df4:	85000a15 	stw	r20,40(r16)
 8009df8:	84c00b15 	stw	r19,44(r16)
 8009dfc:	84000715 	stw	r16,28(r16)
 8009e00:	00800284 	movi	r2,10
 8009e04:	89001704 	addi	r4,r17,92
 8009e08:	b80d883a 	mov	r6,r23
 8009e0c:	000b883a 	mov	r5,zero
 8009e10:	88000015 	stw	zero,0(r17)
 8009e14:	88000115 	stw	zero,4(r17)
 8009e18:	88000215 	stw	zero,8(r17)
 8009e1c:	8880030d 	sth	r2,12(r17)
 8009e20:	88001915 	stw	zero,100(r17)
 8009e24:	8f00038d 	sth	fp,14(r17)
 8009e28:	88000415 	stw	zero,16(r17)
 8009e2c:	88000515 	stw	zero,20(r17)
 8009e30:	88000615 	stw	zero,24(r17)
 8009e34:	80034f00 	call	80034f0 <memset>
 8009e38:	94000317 	ldw	r16,12(r18)
 8009e3c:	00800484 	movi	r2,18
 8009e40:	8c400715 	stw	r17,28(r17)
 8009e44:	8d800815 	stw	r22,32(r17)
 8009e48:	8d400915 	stw	r21,36(r17)
 8009e4c:	8d000a15 	stw	r20,40(r17)
 8009e50:	8cc00b15 	stw	r19,44(r17)
 8009e54:	8080030d 	sth	r2,12(r16)
 8009e58:	00800084 	movi	r2,2
 8009e5c:	80000015 	stw	zero,0(r16)
 8009e60:	80000115 	stw	zero,4(r16)
 8009e64:	80000215 	stw	zero,8(r16)
 8009e68:	80001915 	stw	zero,100(r16)
 8009e6c:	8080038d 	sth	r2,14(r16)
 8009e70:	80000415 	stw	zero,16(r16)
 8009e74:	80000515 	stw	zero,20(r16)
 8009e78:	80000615 	stw	zero,24(r16)
 8009e7c:	81001704 	addi	r4,r16,92
 8009e80:	000b883a 	mov	r5,zero
 8009e84:	b80d883a 	mov	r6,r23
 8009e88:	80034f00 	call	80034f0 <memset>
 8009e8c:	84000715 	stw	r16,28(r16)
 8009e90:	85800815 	stw	r22,32(r16)
 8009e94:	85400915 	stw	r21,36(r16)
 8009e98:	85000a15 	stw	r20,40(r16)
 8009e9c:	84c00b15 	stw	r19,44(r16)
 8009ea0:	dfc00917 	ldw	ra,36(sp)
 8009ea4:	df000817 	ldw	fp,32(sp)
 8009ea8:	ddc00717 	ldw	r23,28(sp)
 8009eac:	dd800617 	ldw	r22,24(sp)
 8009eb0:	dd400517 	ldw	r21,20(sp)
 8009eb4:	dd000417 	ldw	r20,16(sp)
 8009eb8:	dcc00317 	ldw	r19,12(sp)
 8009ebc:	dc800217 	ldw	r18,8(sp)
 8009ec0:	dc400117 	ldw	r17,4(sp)
 8009ec4:	dc000017 	ldw	r16,0(sp)
 8009ec8:	dec00a04 	addi	sp,sp,40
 8009ecc:	f800283a 	ret

08009ed0 <__sfmoreglue>:
 8009ed0:	defffc04 	addi	sp,sp,-16
 8009ed4:	dc800215 	stw	r18,8(sp)
 8009ed8:	2825883a 	mov	r18,r5
 8009edc:	dc000015 	stw	r16,0(sp)
 8009ee0:	01401a04 	movi	r5,104
 8009ee4:	2021883a 	mov	r16,r4
 8009ee8:	9009883a 	mov	r4,r18
 8009eec:	dfc00315 	stw	ra,12(sp)
 8009ef0:	dc400115 	stw	r17,4(sp)
 8009ef4:	80027c00 	call	80027c0 <__mulsi3>
 8009ef8:	8009883a 	mov	r4,r16
 8009efc:	11400304 	addi	r5,r2,12
 8009f00:	1023883a 	mov	r17,r2
 8009f04:	8002d480 	call	8002d48 <_malloc_r>
 8009f08:	1021883a 	mov	r16,r2
 8009f0c:	10000726 	beq	r2,zero,8009f2c <__sfmoreglue+0x5c>
 8009f10:	11000304 	addi	r4,r2,12
 8009f14:	10000015 	stw	zero,0(r2)
 8009f18:	14800115 	stw	r18,4(r2)
 8009f1c:	11000215 	stw	r4,8(r2)
 8009f20:	000b883a 	mov	r5,zero
 8009f24:	880d883a 	mov	r6,r17
 8009f28:	80034f00 	call	80034f0 <memset>
 8009f2c:	8005883a 	mov	r2,r16
 8009f30:	dfc00317 	ldw	ra,12(sp)
 8009f34:	dc800217 	ldw	r18,8(sp)
 8009f38:	dc400117 	ldw	r17,4(sp)
 8009f3c:	dc000017 	ldw	r16,0(sp)
 8009f40:	dec00404 	addi	sp,sp,16
 8009f44:	f800283a 	ret

08009f48 <__sfp>:
 8009f48:	008200b4 	movhi	r2,2050
 8009f4c:	defffb04 	addi	sp,sp,-20
 8009f50:	10a31804 	addi	r2,r2,-29600
 8009f54:	dc800215 	stw	r18,8(sp)
 8009f58:	14800017 	ldw	r18,0(r2)
 8009f5c:	dcc00315 	stw	r19,12(sp)
 8009f60:	dfc00415 	stw	ra,16(sp)
 8009f64:	90800e17 	ldw	r2,56(r18)
 8009f68:	dc400115 	stw	r17,4(sp)
 8009f6c:	dc000015 	stw	r16,0(sp)
 8009f70:	2027883a 	mov	r19,r4
 8009f74:	1000021e 	bne	r2,zero,8009f80 <__sfp+0x38>
 8009f78:	9009883a 	mov	r4,r18
 8009f7c:	8009d300 	call	8009d30 <__sinit.part.1>
 8009f80:	9480b804 	addi	r18,r18,736
 8009f84:	047fffc4 	movi	r17,-1
 8009f88:	91400117 	ldw	r5,4(r18)
 8009f8c:	94000217 	ldw	r16,8(r18)
 8009f90:	297fffc4 	addi	r5,r5,-1
 8009f94:	28000a16 	blt	r5,zero,8009fc0 <__sfp+0x78>
 8009f98:	8080030f 	ldh	r2,12(r16)
 8009f9c:	10000c26 	beq	r2,zero,8009fd0 <__sfp+0x88>
 8009fa0:	80c01d04 	addi	r3,r16,116
 8009fa4:	00000206 	br	8009fb0 <__sfp+0x68>
 8009fa8:	18bfe60f 	ldh	r2,-104(r3)
 8009fac:	10000826 	beq	r2,zero,8009fd0 <__sfp+0x88>
 8009fb0:	297fffc4 	addi	r5,r5,-1
 8009fb4:	1c3ffd04 	addi	r16,r3,-12
 8009fb8:	18c01a04 	addi	r3,r3,104
 8009fbc:	2c7ffa1e 	bne	r5,r17,8009fa8 <__alt_data_end+0xfc009fa8>
 8009fc0:	90800017 	ldw	r2,0(r18)
 8009fc4:	10001d26 	beq	r2,zero,800a03c <__sfp+0xf4>
 8009fc8:	1025883a 	mov	r18,r2
 8009fcc:	003fee06 	br	8009f88 <__alt_data_end+0xfc009f88>
 8009fd0:	00bfffc4 	movi	r2,-1
 8009fd4:	8080038d 	sth	r2,14(r16)
 8009fd8:	00800044 	movi	r2,1
 8009fdc:	8080030d 	sth	r2,12(r16)
 8009fe0:	80001915 	stw	zero,100(r16)
 8009fe4:	80000015 	stw	zero,0(r16)
 8009fe8:	80000215 	stw	zero,8(r16)
 8009fec:	80000115 	stw	zero,4(r16)
 8009ff0:	80000415 	stw	zero,16(r16)
 8009ff4:	80000515 	stw	zero,20(r16)
 8009ff8:	80000615 	stw	zero,24(r16)
 8009ffc:	81001704 	addi	r4,r16,92
 800a000:	000b883a 	mov	r5,zero
 800a004:	01800204 	movi	r6,8
 800a008:	80034f00 	call	80034f0 <memset>
 800a00c:	8005883a 	mov	r2,r16
 800a010:	80000c15 	stw	zero,48(r16)
 800a014:	80000d15 	stw	zero,52(r16)
 800a018:	80001115 	stw	zero,68(r16)
 800a01c:	80001215 	stw	zero,72(r16)
 800a020:	dfc00417 	ldw	ra,16(sp)
 800a024:	dcc00317 	ldw	r19,12(sp)
 800a028:	dc800217 	ldw	r18,8(sp)
 800a02c:	dc400117 	ldw	r17,4(sp)
 800a030:	dc000017 	ldw	r16,0(sp)
 800a034:	dec00504 	addi	sp,sp,20
 800a038:	f800283a 	ret
 800a03c:	9809883a 	mov	r4,r19
 800a040:	01400104 	movi	r5,4
 800a044:	8009ed00 	call	8009ed0 <__sfmoreglue>
 800a048:	90800015 	stw	r2,0(r18)
 800a04c:	103fde1e 	bne	r2,zero,8009fc8 <__alt_data_end+0xfc009fc8>
 800a050:	00800304 	movi	r2,12
 800a054:	98800015 	stw	r2,0(r19)
 800a058:	0005883a 	mov	r2,zero
 800a05c:	003ff006 	br	800a020 <__alt_data_end+0xfc00a020>

0800a060 <_cleanup>:
 800a060:	008200b4 	movhi	r2,2050
 800a064:	10a31804 	addi	r2,r2,-29600
 800a068:	11000017 	ldw	r4,0(r2)
 800a06c:	01420074 	movhi	r5,2049
 800a070:	297d0604 	addi	r5,r5,-3048
 800a074:	800a9801 	jmpi	800a980 <_fwalk>

0800a078 <__sinit>:
 800a078:	20800e17 	ldw	r2,56(r4)
 800a07c:	10000126 	beq	r2,zero,800a084 <__sinit+0xc>
 800a080:	f800283a 	ret
 800a084:	8009d301 	jmpi	8009d30 <__sinit.part.1>

0800a088 <__sfp_lock_acquire>:
 800a088:	f800283a 	ret

0800a08c <__sfp_lock_release>:
 800a08c:	f800283a 	ret

0800a090 <__sinit_lock_acquire>:
 800a090:	f800283a 	ret

0800a094 <__sinit_lock_release>:
 800a094:	f800283a 	ret

0800a098 <__fp_lock_all>:
 800a098:	008200b4 	movhi	r2,2050
 800a09c:	10a31904 	addi	r2,r2,-29596
 800a0a0:	11000017 	ldw	r4,0(r2)
 800a0a4:	01420074 	movhi	r5,2049
 800a0a8:	29674504 	addi	r5,r5,-25324
 800a0ac:	800a9801 	jmpi	800a980 <_fwalk>

0800a0b0 <__fp_unlock_all>:
 800a0b0:	008200b4 	movhi	r2,2050
 800a0b4:	10a31904 	addi	r2,r2,-29596
 800a0b8:	11000017 	ldw	r4,0(r2)
 800a0bc:	01420074 	movhi	r5,2049
 800a0c0:	29674704 	addi	r5,r5,-25316
 800a0c4:	800a9801 	jmpi	800a980 <_fwalk>

0800a0c8 <_malloc_trim_r>:
 800a0c8:	defffb04 	addi	sp,sp,-20
 800a0cc:	dcc00315 	stw	r19,12(sp)
 800a0d0:	04c20074 	movhi	r19,2049
 800a0d4:	dc800215 	stw	r18,8(sp)
 800a0d8:	dc400115 	stw	r17,4(sp)
 800a0dc:	dc000015 	stw	r16,0(sp)
 800a0e0:	dfc00415 	stw	ra,16(sp)
 800a0e4:	2821883a 	mov	r16,r5
 800a0e8:	9cdc0f04 	addi	r19,r19,28732
 800a0ec:	2025883a 	mov	r18,r4
 800a0f0:	80138140 	call	8013814 <__malloc_lock>
 800a0f4:	98800217 	ldw	r2,8(r19)
 800a0f8:	14400117 	ldw	r17,4(r2)
 800a0fc:	00bfff04 	movi	r2,-4
 800a100:	88a2703a 	and	r17,r17,r2
 800a104:	8c21c83a 	sub	r16,r17,r16
 800a108:	8403fbc4 	addi	r16,r16,4079
 800a10c:	8020d33a 	srli	r16,r16,12
 800a110:	0083ffc4 	movi	r2,4095
 800a114:	843fffc4 	addi	r16,r16,-1
 800a118:	8020933a 	slli	r16,r16,12
 800a11c:	1400060e 	bge	r2,r16,800a138 <_malloc_trim_r+0x70>
 800a120:	9009883a 	mov	r4,r18
 800a124:	000b883a 	mov	r5,zero
 800a128:	80037480 	call	8003748 <_sbrk_r>
 800a12c:	98c00217 	ldw	r3,8(r19)
 800a130:	1c47883a 	add	r3,r3,r17
 800a134:	10c00a26 	beq	r2,r3,800a160 <_malloc_trim_r+0x98>
 800a138:	9009883a 	mov	r4,r18
 800a13c:	80138340 	call	8013834 <__malloc_unlock>
 800a140:	0005883a 	mov	r2,zero
 800a144:	dfc00417 	ldw	ra,16(sp)
 800a148:	dcc00317 	ldw	r19,12(sp)
 800a14c:	dc800217 	ldw	r18,8(sp)
 800a150:	dc400117 	ldw	r17,4(sp)
 800a154:	dc000017 	ldw	r16,0(sp)
 800a158:	dec00504 	addi	sp,sp,20
 800a15c:	f800283a 	ret
 800a160:	9009883a 	mov	r4,r18
 800a164:	040bc83a 	sub	r5,zero,r16
 800a168:	80037480 	call	8003748 <_sbrk_r>
 800a16c:	00ffffc4 	movi	r3,-1
 800a170:	10c00d26 	beq	r2,r3,800a1a8 <_malloc_trim_r+0xe0>
 800a174:	00c200b4 	movhi	r3,2050
 800a178:	18ec9804 	addi	r3,r3,-19872
 800a17c:	18800017 	ldw	r2,0(r3)
 800a180:	99000217 	ldw	r4,8(r19)
 800a184:	8c23c83a 	sub	r17,r17,r16
 800a188:	8c400054 	ori	r17,r17,1
 800a18c:	1421c83a 	sub	r16,r2,r16
 800a190:	24400115 	stw	r17,4(r4)
 800a194:	9009883a 	mov	r4,r18
 800a198:	1c000015 	stw	r16,0(r3)
 800a19c:	80138340 	call	8013834 <__malloc_unlock>
 800a1a0:	00800044 	movi	r2,1
 800a1a4:	003fe706 	br	800a144 <__alt_data_end+0xfc00a144>
 800a1a8:	9009883a 	mov	r4,r18
 800a1ac:	000b883a 	mov	r5,zero
 800a1b0:	80037480 	call	8003748 <_sbrk_r>
 800a1b4:	99000217 	ldw	r4,8(r19)
 800a1b8:	014003c4 	movi	r5,15
 800a1bc:	1107c83a 	sub	r3,r2,r4
 800a1c0:	28ffdd0e 	bge	r5,r3,800a138 <__alt_data_end+0xfc00a138>
 800a1c4:	014200b4 	movhi	r5,2050
 800a1c8:	29631604 	addi	r5,r5,-29608
 800a1cc:	29400017 	ldw	r5,0(r5)
 800a1d0:	18c00054 	ori	r3,r3,1
 800a1d4:	20c00115 	stw	r3,4(r4)
 800a1d8:	00c200b4 	movhi	r3,2050
 800a1dc:	1145c83a 	sub	r2,r2,r5
 800a1e0:	18ec9804 	addi	r3,r3,-19872
 800a1e4:	18800015 	stw	r2,0(r3)
 800a1e8:	003fd306 	br	800a138 <__alt_data_end+0xfc00a138>

0800a1ec <_free_r>:
 800a1ec:	28004c26 	beq	r5,zero,800a320 <_free_r+0x134>
 800a1f0:	defffd04 	addi	sp,sp,-12
 800a1f4:	dc400115 	stw	r17,4(sp)
 800a1f8:	dc000015 	stw	r16,0(sp)
 800a1fc:	2023883a 	mov	r17,r4
 800a200:	2821883a 	mov	r16,r5
 800a204:	dfc00215 	stw	ra,8(sp)
 800a208:	80138140 	call	8013814 <__malloc_lock>
 800a20c:	813fff17 	ldw	r4,-4(r16)
 800a210:	00bfff84 	movi	r2,-2
 800a214:	02420074 	movhi	r9,2049
 800a218:	81bffe04 	addi	r6,r16,-8
 800a21c:	2084703a 	and	r2,r4,r2
 800a220:	4a5c0f04 	addi	r9,r9,28732
 800a224:	308b883a 	add	r5,r6,r2
 800a228:	2a000117 	ldw	r8,4(r5)
 800a22c:	49c00217 	ldw	r7,8(r9)
 800a230:	00ffff04 	movi	r3,-4
 800a234:	40c6703a 	and	r3,r8,r3
 800a238:	39405326 	beq	r7,r5,800a388 <_free_r+0x19c>
 800a23c:	28c00115 	stw	r3,4(r5)
 800a240:	2100004c 	andi	r4,r4,1
 800a244:	2000091e 	bne	r4,zero,800a26c <_free_r+0x80>
 800a248:	81fffe17 	ldw	r7,-8(r16)
 800a24c:	4a000204 	addi	r8,r9,8
 800a250:	31cdc83a 	sub	r6,r6,r7
 800a254:	31000217 	ldw	r4,8(r6)
 800a258:	11c5883a 	add	r2,r2,r7
 800a25c:	22006126 	beq	r4,r8,800a3e4 <_free_r+0x1f8>
 800a260:	31c00317 	ldw	r7,12(r6)
 800a264:	21c00315 	stw	r7,12(r4)
 800a268:	39000215 	stw	r4,8(r7)
 800a26c:	28c9883a 	add	r4,r5,r3
 800a270:	21c00117 	ldw	r7,4(r4)
 800a274:	39c0004c 	andi	r7,r7,1
 800a278:	38000d1e 	bne	r7,zero,800a2b0 <_free_r+0xc4>
 800a27c:	29000217 	ldw	r4,8(r5)
 800a280:	10c5883a 	add	r2,r2,r3
 800a284:	00c20074 	movhi	r3,2049
 800a288:	18dc1104 	addi	r3,r3,28740
 800a28c:	20c07526 	beq	r4,r3,800a464 <_free_r+0x278>
 800a290:	29c00317 	ldw	r7,12(r5)
 800a294:	11400054 	ori	r5,r2,1
 800a298:	3087883a 	add	r3,r6,r2
 800a29c:	21c00315 	stw	r7,12(r4)
 800a2a0:	39000215 	stw	r4,8(r7)
 800a2a4:	31400115 	stw	r5,4(r6)
 800a2a8:	18800015 	stw	r2,0(r3)
 800a2ac:	00000406 	br	800a2c0 <_free_r+0xd4>
 800a2b0:	10c00054 	ori	r3,r2,1
 800a2b4:	30c00115 	stw	r3,4(r6)
 800a2b8:	3087883a 	add	r3,r6,r2
 800a2bc:	18800015 	stw	r2,0(r3)
 800a2c0:	00c07fc4 	movi	r3,511
 800a2c4:	18801736 	bltu	r3,r2,800a324 <_free_r+0x138>
 800a2c8:	1004d0fa 	srli	r2,r2,3
 800a2cc:	01400044 	movi	r5,1
 800a2d0:	49000117 	ldw	r4,4(r9)
 800a2d4:	1087883a 	add	r3,r2,r2
 800a2d8:	18c7883a 	add	r3,r3,r3
 800a2dc:	1005d0ba 	srai	r2,r2,2
 800a2e0:	18c7883a 	add	r3,r3,r3
 800a2e4:	1a47883a 	add	r3,r3,r9
 800a2e8:	19c00217 	ldw	r7,8(r3)
 800a2ec:	2884983a 	sll	r2,r5,r2
 800a2f0:	30c00315 	stw	r3,12(r6)
 800a2f4:	31c00215 	stw	r7,8(r6)
 800a2f8:	1104b03a 	or	r2,r2,r4
 800a2fc:	19800215 	stw	r6,8(r3)
 800a300:	48800115 	stw	r2,4(r9)
 800a304:	39800315 	stw	r6,12(r7)
 800a308:	8809883a 	mov	r4,r17
 800a30c:	dfc00217 	ldw	ra,8(sp)
 800a310:	dc400117 	ldw	r17,4(sp)
 800a314:	dc000017 	ldw	r16,0(sp)
 800a318:	dec00304 	addi	sp,sp,12
 800a31c:	80138341 	jmpi	8013834 <__malloc_unlock>
 800a320:	f800283a 	ret
 800a324:	1006d27a 	srli	r3,r2,9
 800a328:	01000104 	movi	r4,4
 800a32c:	20c04036 	bltu	r4,r3,800a430 <_free_r+0x244>
 800a330:	1006d1ba 	srli	r3,r2,6
 800a334:	19400e04 	addi	r5,r3,56
 800a338:	2947883a 	add	r3,r5,r5
 800a33c:	18c7883a 	add	r3,r3,r3
 800a340:	18c7883a 	add	r3,r3,r3
 800a344:	1a49883a 	add	r4,r3,r9
 800a348:	20c00217 	ldw	r3,8(r4)
 800a34c:	01c20074 	movhi	r7,2049
 800a350:	39dc0f04 	addi	r7,r7,28732
 800a354:	19003b26 	beq	r3,r4,800a444 <_free_r+0x258>
 800a358:	01ffff04 	movi	r7,-4
 800a35c:	19400117 	ldw	r5,4(r3)
 800a360:	29ca703a 	and	r5,r5,r7
 800a364:	1140022e 	bgeu	r2,r5,800a370 <_free_r+0x184>
 800a368:	18c00217 	ldw	r3,8(r3)
 800a36c:	20fffb1e 	bne	r4,r3,800a35c <__alt_data_end+0xfc00a35c>
 800a370:	18800317 	ldw	r2,12(r3)
 800a374:	30800315 	stw	r2,12(r6)
 800a378:	30c00215 	stw	r3,8(r6)
 800a37c:	11800215 	stw	r6,8(r2)
 800a380:	19800315 	stw	r6,12(r3)
 800a384:	003fe006 	br	800a308 <__alt_data_end+0xfc00a308>
 800a388:	2100004c 	andi	r4,r4,1
 800a38c:	1885883a 	add	r2,r3,r2
 800a390:	2000071e 	bne	r4,zero,800a3b0 <_free_r+0x1c4>
 800a394:	817ffe17 	ldw	r5,-8(r16)
 800a398:	314dc83a 	sub	r6,r6,r5
 800a39c:	30c00317 	ldw	r3,12(r6)
 800a3a0:	31000217 	ldw	r4,8(r6)
 800a3a4:	1145883a 	add	r2,r2,r5
 800a3a8:	20c00315 	stw	r3,12(r4)
 800a3ac:	19000215 	stw	r4,8(r3)
 800a3b0:	10c00054 	ori	r3,r2,1
 800a3b4:	30c00115 	stw	r3,4(r6)
 800a3b8:	00c200b4 	movhi	r3,2050
 800a3bc:	18e31704 	addi	r3,r3,-29604
 800a3c0:	18c00017 	ldw	r3,0(r3)
 800a3c4:	49800215 	stw	r6,8(r9)
 800a3c8:	10ffcf36 	bltu	r2,r3,800a308 <__alt_data_end+0xfc00a308>
 800a3cc:	008200b4 	movhi	r2,2050
 800a3d0:	10aa4c04 	addi	r2,r2,-22224
 800a3d4:	11400017 	ldw	r5,0(r2)
 800a3d8:	8809883a 	mov	r4,r17
 800a3dc:	800a0c80 	call	800a0c8 <_malloc_trim_r>
 800a3e0:	003fc906 	br	800a308 <__alt_data_end+0xfc00a308>
 800a3e4:	28c9883a 	add	r4,r5,r3
 800a3e8:	21000117 	ldw	r4,4(r4)
 800a3ec:	2100004c 	andi	r4,r4,1
 800a3f0:	20000a1e 	bne	r4,zero,800a41c <_free_r+0x230>
 800a3f4:	29000317 	ldw	r4,12(r5)
 800a3f8:	29400217 	ldw	r5,8(r5)
 800a3fc:	10c5883a 	add	r2,r2,r3
 800a400:	10c00054 	ori	r3,r2,1
 800a404:	29000315 	stw	r4,12(r5)
 800a408:	21400215 	stw	r5,8(r4)
 800a40c:	30c00115 	stw	r3,4(r6)
 800a410:	308d883a 	add	r6,r6,r2
 800a414:	30800015 	stw	r2,0(r6)
 800a418:	003fbb06 	br	800a308 <__alt_data_end+0xfc00a308>
 800a41c:	10c00054 	ori	r3,r2,1
 800a420:	30c00115 	stw	r3,4(r6)
 800a424:	308d883a 	add	r6,r6,r2
 800a428:	30800015 	stw	r2,0(r6)
 800a42c:	003fb606 	br	800a308 <__alt_data_end+0xfc00a308>
 800a430:	01000504 	movi	r4,20
 800a434:	20c01436 	bltu	r4,r3,800a488 <_free_r+0x29c>
 800a438:	194016c4 	addi	r5,r3,91
 800a43c:	2947883a 	add	r3,r5,r5
 800a440:	003fbe06 	br	800a33c <__alt_data_end+0xfc00a33c>
 800a444:	280bd0ba 	srai	r5,r5,2
 800a448:	00800044 	movi	r2,1
 800a44c:	39000117 	ldw	r4,4(r7)
 800a450:	114a983a 	sll	r5,r2,r5
 800a454:	1805883a 	mov	r2,r3
 800a458:	2908b03a 	or	r4,r5,r4
 800a45c:	39000115 	stw	r4,4(r7)
 800a460:	003fc406 	br	800a374 <__alt_data_end+0xfc00a374>
 800a464:	49800515 	stw	r6,20(r9)
 800a468:	49800415 	stw	r6,16(r9)
 800a46c:	10c00054 	ori	r3,r2,1
 800a470:	31000315 	stw	r4,12(r6)
 800a474:	31000215 	stw	r4,8(r6)
 800a478:	30c00115 	stw	r3,4(r6)
 800a47c:	308d883a 	add	r6,r6,r2
 800a480:	30800015 	stw	r2,0(r6)
 800a484:	003fa006 	br	800a308 <__alt_data_end+0xfc00a308>
 800a488:	01001504 	movi	r4,84
 800a48c:	20c00436 	bltu	r4,r3,800a4a0 <_free_r+0x2b4>
 800a490:	1006d33a 	srli	r3,r2,12
 800a494:	19401b84 	addi	r5,r3,110
 800a498:	2947883a 	add	r3,r5,r5
 800a49c:	003fa706 	br	800a33c <__alt_data_end+0xfc00a33c>
 800a4a0:	01005504 	movi	r4,340
 800a4a4:	20c00436 	bltu	r4,r3,800a4b8 <_free_r+0x2cc>
 800a4a8:	1006d3fa 	srli	r3,r2,15
 800a4ac:	19401dc4 	addi	r5,r3,119
 800a4b0:	2947883a 	add	r3,r5,r5
 800a4b4:	003fa106 	br	800a33c <__alt_data_end+0xfc00a33c>
 800a4b8:	01015504 	movi	r4,1364
 800a4bc:	20c00436 	bltu	r4,r3,800a4d0 <_free_r+0x2e4>
 800a4c0:	1006d4ba 	srli	r3,r2,18
 800a4c4:	19401f04 	addi	r5,r3,124
 800a4c8:	2947883a 	add	r3,r5,r5
 800a4cc:	003f9b06 	br	800a33c <__alt_data_end+0xfc00a33c>
 800a4d0:	00c03f04 	movi	r3,252
 800a4d4:	01401f84 	movi	r5,126
 800a4d8:	003f9806 	br	800a33c <__alt_data_end+0xfc00a33c>

0800a4dc <__sfvwrite_r>:
 800a4dc:	30800217 	ldw	r2,8(r6)
 800a4e0:	10004526 	beq	r2,zero,800a5f8 <__sfvwrite_r+0x11c>
 800a4e4:	28c0030b 	ldhu	r3,12(r5)
 800a4e8:	defff404 	addi	sp,sp,-48
 800a4ec:	dd400715 	stw	r21,28(sp)
 800a4f0:	dcc00515 	stw	r19,20(sp)
 800a4f4:	dc000215 	stw	r16,8(sp)
 800a4f8:	dfc00b15 	stw	ra,44(sp)
 800a4fc:	df000a15 	stw	fp,40(sp)
 800a500:	ddc00915 	stw	r23,36(sp)
 800a504:	dd800815 	stw	r22,32(sp)
 800a508:	dd000615 	stw	r20,24(sp)
 800a50c:	dc800415 	stw	r18,16(sp)
 800a510:	dc400315 	stw	r17,12(sp)
 800a514:	1880020c 	andi	r2,r3,8
 800a518:	2821883a 	mov	r16,r5
 800a51c:	202b883a 	mov	r21,r4
 800a520:	3027883a 	mov	r19,r6
 800a524:	10002526 	beq	r2,zero,800a5bc <__sfvwrite_r+0xe0>
 800a528:	28800417 	ldw	r2,16(r5)
 800a52c:	10002326 	beq	r2,zero,800a5bc <__sfvwrite_r+0xe0>
 800a530:	1880008c 	andi	r2,r3,2
 800a534:	9c400017 	ldw	r17,0(r19)
 800a538:	10003126 	beq	r2,zero,800a600 <__sfvwrite_r+0x124>
 800a53c:	0029883a 	mov	r20,zero
 800a540:	0025883a 	mov	r18,zero
 800a544:	05810004 	movi	r22,1024
 800a548:	a00d883a 	mov	r6,r20
 800a54c:	a809883a 	mov	r4,r21
 800a550:	90002526 	beq	r18,zero,800a5e8 <__sfvwrite_r+0x10c>
 800a554:	900f883a 	mov	r7,r18
 800a558:	81400717 	ldw	r5,28(r16)
 800a55c:	b480012e 	bgeu	r22,r18,800a564 <__sfvwrite_r+0x88>
 800a560:	01c10004 	movi	r7,1024
 800a564:	80800917 	ldw	r2,36(r16)
 800a568:	103ee83a 	callr	r2
 800a56c:	0080510e 	bge	zero,r2,800a6b4 <__sfvwrite_r+0x1d8>
 800a570:	98c00217 	ldw	r3,8(r19)
 800a574:	a0a9883a 	add	r20,r20,r2
 800a578:	90a5c83a 	sub	r18,r18,r2
 800a57c:	1885c83a 	sub	r2,r3,r2
 800a580:	98800215 	stw	r2,8(r19)
 800a584:	103ff01e 	bne	r2,zero,800a548 <__alt_data_end+0xfc00a548>
 800a588:	0005883a 	mov	r2,zero
 800a58c:	dfc00b17 	ldw	ra,44(sp)
 800a590:	df000a17 	ldw	fp,40(sp)
 800a594:	ddc00917 	ldw	r23,36(sp)
 800a598:	dd800817 	ldw	r22,32(sp)
 800a59c:	dd400717 	ldw	r21,28(sp)
 800a5a0:	dd000617 	ldw	r20,24(sp)
 800a5a4:	dcc00517 	ldw	r19,20(sp)
 800a5a8:	dc800417 	ldw	r18,16(sp)
 800a5ac:	dc400317 	ldw	r17,12(sp)
 800a5b0:	dc000217 	ldw	r16,8(sp)
 800a5b4:	dec00c04 	addi	sp,sp,48
 800a5b8:	f800283a 	ret
 800a5bc:	a809883a 	mov	r4,r21
 800a5c0:	800b883a 	mov	r5,r16
 800a5c4:	800803c0 	call	800803c <__swsetup_r>
 800a5c8:	80c0030b 	ldhu	r3,12(r16)
 800a5cc:	103fd826 	beq	r2,zero,800a530 <__alt_data_end+0xfc00a530>
 800a5d0:	18c01014 	ori	r3,r3,64
 800a5d4:	80c0030d 	sth	r3,12(r16)
 800a5d8:	00c00244 	movi	r3,9
 800a5dc:	00bfffc4 	movi	r2,-1
 800a5e0:	a8c00015 	stw	r3,0(r21)
 800a5e4:	003fe906 	br	800a58c <__alt_data_end+0xfc00a58c>
 800a5e8:	8d000017 	ldw	r20,0(r17)
 800a5ec:	8c800117 	ldw	r18,4(r17)
 800a5f0:	8c400204 	addi	r17,r17,8
 800a5f4:	003fd406 	br	800a548 <__alt_data_end+0xfc00a548>
 800a5f8:	0005883a 	mov	r2,zero
 800a5fc:	f800283a 	ret
 800a600:	1880004c 	andi	r2,r3,1
 800a604:	1000301e 	bne	r2,zero,800a6c8 <__sfvwrite_r+0x1ec>
 800a608:	002f883a 	mov	r23,zero
 800a60c:	0025883a 	mov	r18,zero
 800a610:	90001c26 	beq	r18,zero,800a684 <__sfvwrite_r+0x1a8>
 800a614:	1880800c 	andi	r2,r3,512
 800a618:	85000217 	ldw	r20,8(r16)
 800a61c:	10006c26 	beq	r2,zero,800a7d0 <__sfvwrite_r+0x2f4>
 800a620:	a02d883a 	mov	r22,r20
 800a624:	95008536 	bltu	r18,r20,800a83c <__sfvwrite_r+0x360>
 800a628:	1881200c 	andi	r2,r3,1152
 800a62c:	10009d1e 	bne	r2,zero,800a8a4 <__sfvwrite_r+0x3c8>
 800a630:	81000017 	ldw	r4,0(r16)
 800a634:	a039883a 	mov	fp,r20
 800a638:	9029883a 	mov	r20,r18
 800a63c:	b80b883a 	mov	r5,r23
 800a640:	b00d883a 	mov	r6,r22
 800a644:	800afa80 	call	800afa8 <memmove>
 800a648:	80c00217 	ldw	r3,8(r16)
 800a64c:	81000017 	ldw	r4,0(r16)
 800a650:	9005883a 	mov	r2,r18
 800a654:	1f39c83a 	sub	fp,r3,fp
 800a658:	258f883a 	add	r7,r4,r22
 800a65c:	87000215 	stw	fp,8(r16)
 800a660:	81c00015 	stw	r7,0(r16)
 800a664:	98c00217 	ldw	r3,8(r19)
 800a668:	b8af883a 	add	r23,r23,r2
 800a66c:	90a5c83a 	sub	r18,r18,r2
 800a670:	1d05c83a 	sub	r2,r3,r20
 800a674:	98800215 	stw	r2,8(r19)
 800a678:	103fc326 	beq	r2,zero,800a588 <__alt_data_end+0xfc00a588>
 800a67c:	80c0030b 	ldhu	r3,12(r16)
 800a680:	903fe41e 	bne	r18,zero,800a614 <__alt_data_end+0xfc00a614>
 800a684:	8dc00017 	ldw	r23,0(r17)
 800a688:	8c800117 	ldw	r18,4(r17)
 800a68c:	8c400204 	addi	r17,r17,8
 800a690:	003fdf06 	br	800a610 <__alt_data_end+0xfc00a610>
 800a694:	800c14c0 	call	800c14c <_realloc_r>
 800a698:	102d883a 	mov	r22,r2
 800a69c:	1000a01e 	bne	r2,zero,800a920 <__sfvwrite_r+0x444>
 800a6a0:	81400417 	ldw	r5,16(r16)
 800a6a4:	a809883a 	mov	r4,r21
 800a6a8:	800a1ec0 	call	800a1ec <_free_r>
 800a6ac:	00800304 	movi	r2,12
 800a6b0:	a8800015 	stw	r2,0(r21)
 800a6b4:	80c0030b 	ldhu	r3,12(r16)
 800a6b8:	00bfffc4 	movi	r2,-1
 800a6bc:	18c01014 	ori	r3,r3,64
 800a6c0:	80c0030d 	sth	r3,12(r16)
 800a6c4:	003fb106 	br	800a58c <__alt_data_end+0xfc00a58c>
 800a6c8:	0029883a 	mov	r20,zero
 800a6cc:	0011883a 	mov	r8,zero
 800a6d0:	0039883a 	mov	fp,zero
 800a6d4:	0025883a 	mov	r18,zero
 800a6d8:	90001f26 	beq	r18,zero,800a758 <__sfvwrite_r+0x27c>
 800a6dc:	40006826 	beq	r8,zero,800a880 <__sfvwrite_r+0x3a4>
 800a6e0:	a02f883a 	mov	r23,r20
 800a6e4:	9500012e 	bgeu	r18,r20,800a6ec <__sfvwrite_r+0x210>
 800a6e8:	902f883a 	mov	r23,r18
 800a6ec:	81000017 	ldw	r4,0(r16)
 800a6f0:	80800417 	ldw	r2,16(r16)
 800a6f4:	b82d883a 	mov	r22,r23
 800a6f8:	81800217 	ldw	r6,8(r16)
 800a6fc:	81c00517 	ldw	r7,20(r16)
 800a700:	1100022e 	bgeu	r2,r4,800a70c <__sfvwrite_r+0x230>
 800a704:	31c7883a 	add	r3,r6,r7
 800a708:	1dc01816 	blt	r3,r23,800a76c <__sfvwrite_r+0x290>
 800a70c:	b9c03f16 	blt	r23,r7,800a80c <__sfvwrite_r+0x330>
 800a710:	80800917 	ldw	r2,36(r16)
 800a714:	81400717 	ldw	r5,28(r16)
 800a718:	a809883a 	mov	r4,r21
 800a71c:	da000115 	stw	r8,4(sp)
 800a720:	e00d883a 	mov	r6,fp
 800a724:	103ee83a 	callr	r2
 800a728:	102d883a 	mov	r22,r2
 800a72c:	da000117 	ldw	r8,4(sp)
 800a730:	00bfe00e 	bge	zero,r2,800a6b4 <__alt_data_end+0xfc00a6b4>
 800a734:	a5a9c83a 	sub	r20,r20,r22
 800a738:	a0001f26 	beq	r20,zero,800a7b8 <__sfvwrite_r+0x2dc>
 800a73c:	98800217 	ldw	r2,8(r19)
 800a740:	e5b9883a 	add	fp,fp,r22
 800a744:	95a5c83a 	sub	r18,r18,r22
 800a748:	15adc83a 	sub	r22,r2,r22
 800a74c:	9d800215 	stw	r22,8(r19)
 800a750:	b03f8d26 	beq	r22,zero,800a588 <__alt_data_end+0xfc00a588>
 800a754:	903fe11e 	bne	r18,zero,800a6dc <__alt_data_end+0xfc00a6dc>
 800a758:	8f000017 	ldw	fp,0(r17)
 800a75c:	8c800117 	ldw	r18,4(r17)
 800a760:	0011883a 	mov	r8,zero
 800a764:	8c400204 	addi	r17,r17,8
 800a768:	003fdb06 	br	800a6d8 <__alt_data_end+0xfc00a6d8>
 800a76c:	180d883a 	mov	r6,r3
 800a770:	e00b883a 	mov	r5,fp
 800a774:	da000115 	stw	r8,4(sp)
 800a778:	d8c00015 	stw	r3,0(sp)
 800a77c:	800afa80 	call	800afa8 <memmove>
 800a780:	d8c00017 	ldw	r3,0(sp)
 800a784:	80800017 	ldw	r2,0(r16)
 800a788:	a809883a 	mov	r4,r21
 800a78c:	800b883a 	mov	r5,r16
 800a790:	10c5883a 	add	r2,r2,r3
 800a794:	80800015 	stw	r2,0(r16)
 800a798:	d8c00015 	stw	r3,0(sp)
 800a79c:	8009abc0 	call	8009abc <_fflush_r>
 800a7a0:	d8c00017 	ldw	r3,0(sp)
 800a7a4:	da000117 	ldw	r8,4(sp)
 800a7a8:	103fc21e 	bne	r2,zero,800a6b4 <__alt_data_end+0xfc00a6b4>
 800a7ac:	182d883a 	mov	r22,r3
 800a7b0:	a5a9c83a 	sub	r20,r20,r22
 800a7b4:	a03fe11e 	bne	r20,zero,800a73c <__alt_data_end+0xfc00a73c>
 800a7b8:	a809883a 	mov	r4,r21
 800a7bc:	800b883a 	mov	r5,r16
 800a7c0:	8009abc0 	call	8009abc <_fflush_r>
 800a7c4:	103fbb1e 	bne	r2,zero,800a6b4 <__alt_data_end+0xfc00a6b4>
 800a7c8:	0011883a 	mov	r8,zero
 800a7cc:	003fdb06 	br	800a73c <__alt_data_end+0xfc00a73c>
 800a7d0:	81000017 	ldw	r4,0(r16)
 800a7d4:	80800417 	ldw	r2,16(r16)
 800a7d8:	1100012e 	bgeu	r2,r4,800a7e0 <__sfvwrite_r+0x304>
 800a7dc:	a4805a36 	bltu	r20,r18,800a948 <__sfvwrite_r+0x46c>
 800a7e0:	81c00517 	ldw	r7,20(r16)
 800a7e4:	91c01a36 	bltu	r18,r7,800a850 <__sfvwrite_r+0x374>
 800a7e8:	80800917 	ldw	r2,36(r16)
 800a7ec:	81400717 	ldw	r5,28(r16)
 800a7f0:	a809883a 	mov	r4,r21
 800a7f4:	b80d883a 	mov	r6,r23
 800a7f8:	103ee83a 	callr	r2
 800a7fc:	1029883a 	mov	r20,r2
 800a800:	00bfac0e 	bge	zero,r2,800a6b4 <__alt_data_end+0xfc00a6b4>
 800a804:	a005883a 	mov	r2,r20
 800a808:	003f9606 	br	800a664 <__alt_data_end+0xfc00a664>
 800a80c:	b80d883a 	mov	r6,r23
 800a810:	e00b883a 	mov	r5,fp
 800a814:	da000115 	stw	r8,4(sp)
 800a818:	800afa80 	call	800afa8 <memmove>
 800a81c:	80800217 	ldw	r2,8(r16)
 800a820:	80c00017 	ldw	r3,0(r16)
 800a824:	da000117 	ldw	r8,4(sp)
 800a828:	15c5c83a 	sub	r2,r2,r23
 800a82c:	1def883a 	add	r23,r3,r23
 800a830:	80800215 	stw	r2,8(r16)
 800a834:	85c00015 	stw	r23,0(r16)
 800a838:	003fbe06 	br	800a734 <__alt_data_end+0xfc00a734>
 800a83c:	81000017 	ldw	r4,0(r16)
 800a840:	9039883a 	mov	fp,r18
 800a844:	9029883a 	mov	r20,r18
 800a848:	902d883a 	mov	r22,r18
 800a84c:	003f7b06 	br	800a63c <__alt_data_end+0xfc00a63c>
 800a850:	b80b883a 	mov	r5,r23
 800a854:	900d883a 	mov	r6,r18
 800a858:	800afa80 	call	800afa8 <memmove>
 800a85c:	80c00217 	ldw	r3,8(r16)
 800a860:	80800017 	ldw	r2,0(r16)
 800a864:	9029883a 	mov	r20,r18
 800a868:	1c87c83a 	sub	r3,r3,r18
 800a86c:	1485883a 	add	r2,r2,r18
 800a870:	80800015 	stw	r2,0(r16)
 800a874:	80c00215 	stw	r3,8(r16)
 800a878:	9005883a 	mov	r2,r18
 800a87c:	003f7906 	br	800a664 <__alt_data_end+0xfc00a664>
 800a880:	e009883a 	mov	r4,fp
 800a884:	01400284 	movi	r5,10
 800a888:	900d883a 	mov	r6,r18
 800a88c:	800ad880 	call	800ad88 <memchr>
 800a890:	10003826 	beq	r2,zero,800a974 <__sfvwrite_r+0x498>
 800a894:	10800044 	addi	r2,r2,1
 800a898:	1729c83a 	sub	r20,r2,fp
 800a89c:	02000044 	movi	r8,1
 800a8a0:	003f8f06 	br	800a6e0 <__alt_data_end+0xfc00a6e0>
 800a8a4:	80800517 	ldw	r2,20(r16)
 800a8a8:	81400417 	ldw	r5,16(r16)
 800a8ac:	87000017 	ldw	fp,0(r16)
 800a8b0:	10a9883a 	add	r20,r2,r2
 800a8b4:	a085883a 	add	r2,r20,r2
 800a8b8:	1028d7fa 	srli	r20,r2,31
 800a8bc:	e179c83a 	sub	fp,fp,r5
 800a8c0:	e1000044 	addi	r4,fp,1
 800a8c4:	a085883a 	add	r2,r20,r2
 800a8c8:	1029d07a 	srai	r20,r2,1
 800a8cc:	2485883a 	add	r2,r4,r18
 800a8d0:	a00d883a 	mov	r6,r20
 800a8d4:	a080022e 	bgeu	r20,r2,800a8e0 <__sfvwrite_r+0x404>
 800a8d8:	1029883a 	mov	r20,r2
 800a8dc:	100d883a 	mov	r6,r2
 800a8e0:	18c1000c 	andi	r3,r3,1024
 800a8e4:	a809883a 	mov	r4,r21
 800a8e8:	183f6a26 	beq	r3,zero,800a694 <__alt_data_end+0xfc00a694>
 800a8ec:	300b883a 	mov	r5,r6
 800a8f0:	8002d480 	call	8002d48 <_malloc_r>
 800a8f4:	102d883a 	mov	r22,r2
 800a8f8:	103f6c26 	beq	r2,zero,800a6ac <__alt_data_end+0xfc00a6ac>
 800a8fc:	81400417 	ldw	r5,16(r16)
 800a900:	1009883a 	mov	r4,r2
 800a904:	e00d883a 	mov	r6,fp
 800a908:	800ae700 	call	800ae70 <memcpy>
 800a90c:	8080030b 	ldhu	r2,12(r16)
 800a910:	00fedfc4 	movi	r3,-1153
 800a914:	10c4703a 	and	r2,r2,r3
 800a918:	10802014 	ori	r2,r2,128
 800a91c:	8080030d 	sth	r2,12(r16)
 800a920:	b709883a 	add	r4,r22,fp
 800a924:	a707c83a 	sub	r3,r20,fp
 800a928:	85800415 	stw	r22,16(r16)
 800a92c:	85000515 	stw	r20,20(r16)
 800a930:	81000015 	stw	r4,0(r16)
 800a934:	9039883a 	mov	fp,r18
 800a938:	80c00215 	stw	r3,8(r16)
 800a93c:	9029883a 	mov	r20,r18
 800a940:	902d883a 	mov	r22,r18
 800a944:	003f3d06 	br	800a63c <__alt_data_end+0xfc00a63c>
 800a948:	b80b883a 	mov	r5,r23
 800a94c:	a00d883a 	mov	r6,r20
 800a950:	800afa80 	call	800afa8 <memmove>
 800a954:	80800017 	ldw	r2,0(r16)
 800a958:	a809883a 	mov	r4,r21
 800a95c:	800b883a 	mov	r5,r16
 800a960:	1505883a 	add	r2,r2,r20
 800a964:	80800015 	stw	r2,0(r16)
 800a968:	8009abc0 	call	8009abc <_fflush_r>
 800a96c:	103fa526 	beq	r2,zero,800a804 <__alt_data_end+0xfc00a804>
 800a970:	003f5006 	br	800a6b4 <__alt_data_end+0xfc00a6b4>
 800a974:	95000044 	addi	r20,r18,1
 800a978:	02000044 	movi	r8,1
 800a97c:	003f5806 	br	800a6e0 <__alt_data_end+0xfc00a6e0>

0800a980 <_fwalk>:
 800a980:	defff804 	addi	sp,sp,-32
 800a984:	dd400515 	stw	r21,20(sp)
 800a988:	2540b804 	addi	r21,r4,736
 800a98c:	dd800615 	stw	r22,24(sp)
 800a990:	dd000415 	stw	r20,16(sp)
 800a994:	dfc00715 	stw	ra,28(sp)
 800a998:	dcc00315 	stw	r19,12(sp)
 800a99c:	dc800215 	stw	r18,8(sp)
 800a9a0:	dc400115 	stw	r17,4(sp)
 800a9a4:	dc000015 	stw	r16,0(sp)
 800a9a8:	2829883a 	mov	r20,r5
 800a9ac:	002d883a 	mov	r22,zero
 800a9b0:	800a0880 	call	800a088 <__sfp_lock_acquire>
 800a9b4:	a8001426 	beq	r21,zero,800aa08 <_fwalk+0x88>
 800a9b8:	04ffffc4 	movi	r19,-1
 800a9bc:	ac400117 	ldw	r17,4(r21)
 800a9c0:	ac800217 	ldw	r18,8(r21)
 800a9c4:	8c7fffc4 	addi	r17,r17,-1
 800a9c8:	88000d16 	blt	r17,zero,800aa00 <_fwalk+0x80>
 800a9cc:	94000304 	addi	r16,r18,12
 800a9d0:	94800384 	addi	r18,r18,14
 800a9d4:	80c0000f 	ldh	r3,0(r16)
 800a9d8:	8c7fffc4 	addi	r17,r17,-1
 800a9dc:	813ffd04 	addi	r4,r16,-12
 800a9e0:	18000426 	beq	r3,zero,800a9f4 <_fwalk+0x74>
 800a9e4:	90c0000f 	ldh	r3,0(r18)
 800a9e8:	1cc00226 	beq	r3,r19,800a9f4 <_fwalk+0x74>
 800a9ec:	a03ee83a 	callr	r20
 800a9f0:	b0acb03a 	or	r22,r22,r2
 800a9f4:	84001a04 	addi	r16,r16,104
 800a9f8:	94801a04 	addi	r18,r18,104
 800a9fc:	8cfff51e 	bne	r17,r19,800a9d4 <__alt_data_end+0xfc00a9d4>
 800aa00:	ad400017 	ldw	r21,0(r21)
 800aa04:	a83fed1e 	bne	r21,zero,800a9bc <__alt_data_end+0xfc00a9bc>
 800aa08:	800a08c0 	call	800a08c <__sfp_lock_release>
 800aa0c:	b005883a 	mov	r2,r22
 800aa10:	dfc00717 	ldw	ra,28(sp)
 800aa14:	dd800617 	ldw	r22,24(sp)
 800aa18:	dd400517 	ldw	r21,20(sp)
 800aa1c:	dd000417 	ldw	r20,16(sp)
 800aa20:	dcc00317 	ldw	r19,12(sp)
 800aa24:	dc800217 	ldw	r18,8(sp)
 800aa28:	dc400117 	ldw	r17,4(sp)
 800aa2c:	dc000017 	ldw	r16,0(sp)
 800aa30:	dec00804 	addi	sp,sp,32
 800aa34:	f800283a 	ret

0800aa38 <_fwalk_reent>:
 800aa38:	defff804 	addi	sp,sp,-32
 800aa3c:	dd400515 	stw	r21,20(sp)
 800aa40:	2540b804 	addi	r21,r4,736
 800aa44:	dd800615 	stw	r22,24(sp)
 800aa48:	dd000415 	stw	r20,16(sp)
 800aa4c:	dcc00315 	stw	r19,12(sp)
 800aa50:	dfc00715 	stw	ra,28(sp)
 800aa54:	dc800215 	stw	r18,8(sp)
 800aa58:	dc400115 	stw	r17,4(sp)
 800aa5c:	dc000015 	stw	r16,0(sp)
 800aa60:	2027883a 	mov	r19,r4
 800aa64:	2829883a 	mov	r20,r5
 800aa68:	002d883a 	mov	r22,zero
 800aa6c:	800a0880 	call	800a088 <__sfp_lock_acquire>
 800aa70:	a8001326 	beq	r21,zero,800aac0 <_fwalk_reent+0x88>
 800aa74:	04bfffc4 	movi	r18,-1
 800aa78:	ac400117 	ldw	r17,4(r21)
 800aa7c:	ac000217 	ldw	r16,8(r21)
 800aa80:	8c7fffc4 	addi	r17,r17,-1
 800aa84:	88000c16 	blt	r17,zero,800aab8 <_fwalk_reent+0x80>
 800aa88:	84000304 	addi	r16,r16,12
 800aa8c:	80c0000f 	ldh	r3,0(r16)
 800aa90:	8c7fffc4 	addi	r17,r17,-1
 800aa94:	817ffd04 	addi	r5,r16,-12
 800aa98:	18000526 	beq	r3,zero,800aab0 <_fwalk_reent+0x78>
 800aa9c:	80c0008f 	ldh	r3,2(r16)
 800aaa0:	9809883a 	mov	r4,r19
 800aaa4:	1c800226 	beq	r3,r18,800aab0 <_fwalk_reent+0x78>
 800aaa8:	a03ee83a 	callr	r20
 800aaac:	b0acb03a 	or	r22,r22,r2
 800aab0:	84001a04 	addi	r16,r16,104
 800aab4:	8cbff51e 	bne	r17,r18,800aa8c <__alt_data_end+0xfc00aa8c>
 800aab8:	ad400017 	ldw	r21,0(r21)
 800aabc:	a83fee1e 	bne	r21,zero,800aa78 <__alt_data_end+0xfc00aa78>
 800aac0:	800a08c0 	call	800a08c <__sfp_lock_release>
 800aac4:	b005883a 	mov	r2,r22
 800aac8:	dfc00717 	ldw	ra,28(sp)
 800aacc:	dd800617 	ldw	r22,24(sp)
 800aad0:	dd400517 	ldw	r21,20(sp)
 800aad4:	dd000417 	ldw	r20,16(sp)
 800aad8:	dcc00317 	ldw	r19,12(sp)
 800aadc:	dc800217 	ldw	r18,8(sp)
 800aae0:	dc400117 	ldw	r17,4(sp)
 800aae4:	dc000017 	ldw	r16,0(sp)
 800aae8:	dec00804 	addi	sp,sp,32
 800aaec:	f800283a 	ret

0800aaf0 <_setlocale_r>:
 800aaf0:	30001b26 	beq	r6,zero,800ab60 <_setlocale_r+0x70>
 800aaf4:	01420074 	movhi	r5,2049
 800aaf8:	defffe04 	addi	sp,sp,-8
 800aafc:	295b5504 	addi	r5,r5,27988
 800ab00:	3009883a 	mov	r4,r6
 800ab04:	dc000015 	stw	r16,0(sp)
 800ab08:	dfc00115 	stw	ra,4(sp)
 800ab0c:	3021883a 	mov	r16,r6
 800ab10:	8003ce00 	call	8003ce0 <strcmp>
 800ab14:	1000061e 	bne	r2,zero,800ab30 <_setlocale_r+0x40>
 800ab18:	00820074 	movhi	r2,2049
 800ab1c:	109b5404 	addi	r2,r2,27984
 800ab20:	dfc00117 	ldw	ra,4(sp)
 800ab24:	dc000017 	ldw	r16,0(sp)
 800ab28:	dec00204 	addi	sp,sp,8
 800ab2c:	f800283a 	ret
 800ab30:	01420074 	movhi	r5,2049
 800ab34:	295b5404 	addi	r5,r5,27984
 800ab38:	8009883a 	mov	r4,r16
 800ab3c:	8003ce00 	call	8003ce0 <strcmp>
 800ab40:	103ff526 	beq	r2,zero,800ab18 <__alt_data_end+0xfc00ab18>
 800ab44:	01420074 	movhi	r5,2049
 800ab48:	295b3704 	addi	r5,r5,27868
 800ab4c:	8009883a 	mov	r4,r16
 800ab50:	8003ce00 	call	8003ce0 <strcmp>
 800ab54:	103ff026 	beq	r2,zero,800ab18 <__alt_data_end+0xfc00ab18>
 800ab58:	0005883a 	mov	r2,zero
 800ab5c:	003ff006 	br	800ab20 <__alt_data_end+0xfc00ab20>
 800ab60:	00820074 	movhi	r2,2049
 800ab64:	109b5404 	addi	r2,r2,27984
 800ab68:	f800283a 	ret

0800ab6c <__locale_charset>:
 800ab6c:	00820074 	movhi	r2,2049
 800ab70:	109e2204 	addi	r2,r2,30856
 800ab74:	f800283a 	ret

0800ab78 <__locale_mb_cur_max>:
 800ab78:	008200b4 	movhi	r2,2050
 800ab7c:	10a31a04 	addi	r2,r2,-29592
 800ab80:	10800017 	ldw	r2,0(r2)
 800ab84:	f800283a 	ret

0800ab88 <__locale_msgcharset>:
 800ab88:	00820074 	movhi	r2,2049
 800ab8c:	109e1a04 	addi	r2,r2,30824
 800ab90:	f800283a 	ret

0800ab94 <__locale_cjk_lang>:
 800ab94:	0005883a 	mov	r2,zero
 800ab98:	f800283a 	ret

0800ab9c <_localeconv_r>:
 800ab9c:	00820074 	movhi	r2,2049
 800aba0:	109e2a04 	addi	r2,r2,30888
 800aba4:	f800283a 	ret

0800aba8 <setlocale>:
 800aba8:	00c200b4 	movhi	r3,2050
 800abac:	18e31904 	addi	r3,r3,-29596
 800abb0:	2005883a 	mov	r2,r4
 800abb4:	19000017 	ldw	r4,0(r3)
 800abb8:	280d883a 	mov	r6,r5
 800abbc:	100b883a 	mov	r5,r2
 800abc0:	800aaf01 	jmpi	800aaf0 <_setlocale_r>

0800abc4 <localeconv>:
 800abc4:	00820074 	movhi	r2,2049
 800abc8:	109e2a04 	addi	r2,r2,30888
 800abcc:	f800283a 	ret

0800abd0 <__smakebuf_r>:
 800abd0:	2880030b 	ldhu	r2,12(r5)
 800abd4:	10c0008c 	andi	r3,r2,2
 800abd8:	1800401e 	bne	r3,zero,800acdc <__smakebuf_r+0x10c>
 800abdc:	deffec04 	addi	sp,sp,-80
 800abe0:	dc000f15 	stw	r16,60(sp)
 800abe4:	2821883a 	mov	r16,r5
 800abe8:	2940038f 	ldh	r5,14(r5)
 800abec:	dc401015 	stw	r17,64(sp)
 800abf0:	dfc01315 	stw	ra,76(sp)
 800abf4:	dcc01215 	stw	r19,72(sp)
 800abf8:	dc801115 	stw	r18,68(sp)
 800abfc:	2023883a 	mov	r17,r4
 800ac00:	28001b16 	blt	r5,zero,800ac70 <__smakebuf_r+0xa0>
 800ac04:	d80d883a 	mov	r6,sp
 800ac08:	800f6080 	call	800f608 <_fstat_r>
 800ac0c:	10001716 	blt	r2,zero,800ac6c <__smakebuf_r+0x9c>
 800ac10:	d8800117 	ldw	r2,4(sp)
 800ac14:	00e00014 	movui	r3,32768
 800ac18:	10bc000c 	andi	r2,r2,61440
 800ac1c:	10c03726 	beq	r2,r3,800acfc <__smakebuf_r+0x12c>
 800ac20:	80c0030b 	ldhu	r3,12(r16)
 800ac24:	18c20014 	ori	r3,r3,2048
 800ac28:	80c0030d 	sth	r3,12(r16)
 800ac2c:	00c80004 	movi	r3,8192
 800ac30:	10c03c1e 	bne	r2,r3,800ad24 <__smakebuf_r+0x154>
 800ac34:	8140038f 	ldh	r5,14(r16)
 800ac38:	8809883a 	mov	r4,r17
 800ac3c:	800f6600 	call	800f660 <_isatty_r>
 800ac40:	10004e26 	beq	r2,zero,800ad7c <__smakebuf_r+0x1ac>
 800ac44:	8080030b 	ldhu	r2,12(r16)
 800ac48:	04c00044 	movi	r19,1
 800ac4c:	80c010c4 	addi	r3,r16,67
 800ac50:	14c4b03a 	or	r2,r2,r19
 800ac54:	8080030d 	sth	r2,12(r16)
 800ac58:	80c00015 	stw	r3,0(r16)
 800ac5c:	80c00415 	stw	r3,16(r16)
 800ac60:	84c00515 	stw	r19,20(r16)
 800ac64:	04810004 	movi	r18,1024
 800ac68:	00000706 	br	800ac88 <__smakebuf_r+0xb8>
 800ac6c:	8080030b 	ldhu	r2,12(r16)
 800ac70:	10c0200c 	andi	r3,r2,128
 800ac74:	18001f1e 	bne	r3,zero,800acf4 <__smakebuf_r+0x124>
 800ac78:	04810004 	movi	r18,1024
 800ac7c:	10820014 	ori	r2,r2,2048
 800ac80:	8080030d 	sth	r2,12(r16)
 800ac84:	0027883a 	mov	r19,zero
 800ac88:	8809883a 	mov	r4,r17
 800ac8c:	900b883a 	mov	r5,r18
 800ac90:	8002d480 	call	8002d48 <_malloc_r>
 800ac94:	10002e26 	beq	r2,zero,800ad50 <__smakebuf_r+0x180>
 800ac98:	80c0030b 	ldhu	r3,12(r16)
 800ac9c:	01020074 	movhi	r4,2049
 800aca0:	21274904 	addi	r4,r4,-25308
 800aca4:	89000f15 	stw	r4,60(r17)
 800aca8:	18c02014 	ori	r3,r3,128
 800acac:	80c0030d 	sth	r3,12(r16)
 800acb0:	80800015 	stw	r2,0(r16)
 800acb4:	80800415 	stw	r2,16(r16)
 800acb8:	84800515 	stw	r18,20(r16)
 800acbc:	98001c1e 	bne	r19,zero,800ad30 <__smakebuf_r+0x160>
 800acc0:	dfc01317 	ldw	ra,76(sp)
 800acc4:	dcc01217 	ldw	r19,72(sp)
 800acc8:	dc801117 	ldw	r18,68(sp)
 800accc:	dc401017 	ldw	r17,64(sp)
 800acd0:	dc000f17 	ldw	r16,60(sp)
 800acd4:	dec01404 	addi	sp,sp,80
 800acd8:	f800283a 	ret
 800acdc:	288010c4 	addi	r2,r5,67
 800ace0:	28800015 	stw	r2,0(r5)
 800ace4:	28800415 	stw	r2,16(r5)
 800ace8:	00800044 	movi	r2,1
 800acec:	28800515 	stw	r2,20(r5)
 800acf0:	f800283a 	ret
 800acf4:	04801004 	movi	r18,64
 800acf8:	003fe006 	br	800ac7c <__alt_data_end+0xfc00ac7c>
 800acfc:	81000a17 	ldw	r4,40(r16)
 800ad00:	00c20074 	movhi	r3,2049
 800ad04:	18f20e04 	addi	r3,r3,-14280
 800ad08:	20ffc51e 	bne	r4,r3,800ac20 <__alt_data_end+0xfc00ac20>
 800ad0c:	80c0030b 	ldhu	r3,12(r16)
 800ad10:	01010004 	movi	r4,1024
 800ad14:	81001315 	stw	r4,76(r16)
 800ad18:	1906b03a 	or	r3,r3,r4
 800ad1c:	80c0030d 	sth	r3,12(r16)
 800ad20:	003fc206 	br	800ac2c <__alt_data_end+0xfc00ac2c>
 800ad24:	0027883a 	mov	r19,zero
 800ad28:	04810004 	movi	r18,1024
 800ad2c:	003fd606 	br	800ac88 <__alt_data_end+0xfc00ac88>
 800ad30:	8140038f 	ldh	r5,14(r16)
 800ad34:	8809883a 	mov	r4,r17
 800ad38:	800f6600 	call	800f660 <_isatty_r>
 800ad3c:	103fe026 	beq	r2,zero,800acc0 <__alt_data_end+0xfc00acc0>
 800ad40:	8080030b 	ldhu	r2,12(r16)
 800ad44:	10800054 	ori	r2,r2,1
 800ad48:	8080030d 	sth	r2,12(r16)
 800ad4c:	003fdc06 	br	800acc0 <__alt_data_end+0xfc00acc0>
 800ad50:	8080030b 	ldhu	r2,12(r16)
 800ad54:	10c0800c 	andi	r3,r2,512
 800ad58:	183fd91e 	bne	r3,zero,800acc0 <__alt_data_end+0xfc00acc0>
 800ad5c:	10800094 	ori	r2,r2,2
 800ad60:	80c010c4 	addi	r3,r16,67
 800ad64:	8080030d 	sth	r2,12(r16)
 800ad68:	00800044 	movi	r2,1
 800ad6c:	80c00015 	stw	r3,0(r16)
 800ad70:	80c00415 	stw	r3,16(r16)
 800ad74:	80800515 	stw	r2,20(r16)
 800ad78:	003fd106 	br	800acc0 <__alt_data_end+0xfc00acc0>
 800ad7c:	04c00044 	movi	r19,1
 800ad80:	04810004 	movi	r18,1024
 800ad84:	003fc006 	br	800ac88 <__alt_data_end+0xfc00ac88>

0800ad88 <memchr>:
 800ad88:	208000cc 	andi	r2,r4,3
 800ad8c:	280f883a 	mov	r7,r5
 800ad90:	10003526 	beq	r2,zero,800ae68 <memchr+0xe0>
 800ad94:	30bfffc4 	addi	r2,r6,-1
 800ad98:	30001b26 	beq	r6,zero,800ae08 <memchr+0x80>
 800ad9c:	21800003 	ldbu	r6,0(r4)
 800ada0:	28c03fcc 	andi	r3,r5,255
 800ada4:	30c01a26 	beq	r6,r3,800ae10 <memchr+0x88>
 800ada8:	180d883a 	mov	r6,r3
 800adac:	00000406 	br	800adc0 <memchr+0x38>
 800adb0:	10001526 	beq	r2,zero,800ae08 <memchr+0x80>
 800adb4:	20c00003 	ldbu	r3,0(r4)
 800adb8:	10bfffc4 	addi	r2,r2,-1
 800adbc:	19801426 	beq	r3,r6,800ae10 <memchr+0x88>
 800adc0:	21000044 	addi	r4,r4,1
 800adc4:	20c000cc 	andi	r3,r4,3
 800adc8:	183ff91e 	bne	r3,zero,800adb0 <__alt_data_end+0xfc00adb0>
 800adcc:	024000c4 	movi	r9,3
 800add0:	48801136 	bltu	r9,r2,800ae18 <memchr+0x90>
 800add4:	10000c26 	beq	r2,zero,800ae08 <memchr+0x80>
 800add8:	20c00003 	ldbu	r3,0(r4)
 800addc:	29403fcc 	andi	r5,r5,255
 800ade0:	19400b26 	beq	r3,r5,800ae10 <memchr+0x88>
 800ade4:	20c00044 	addi	r3,r4,1
 800ade8:	2085883a 	add	r2,r4,r2
 800adec:	39803fcc 	andi	r6,r7,255
 800adf0:	00000306 	br	800ae00 <memchr+0x78>
 800adf4:	18c00044 	addi	r3,r3,1
 800adf8:	197fffc3 	ldbu	r5,-1(r3)
 800adfc:	29800426 	beq	r5,r6,800ae10 <memchr+0x88>
 800ae00:	1809883a 	mov	r4,r3
 800ae04:	18bffb1e 	bne	r3,r2,800adf4 <__alt_data_end+0xfc00adf4>
 800ae08:	0005883a 	mov	r2,zero
 800ae0c:	f800283a 	ret
 800ae10:	2005883a 	mov	r2,r4
 800ae14:	f800283a 	ret
 800ae18:	28c03fcc 	andi	r3,r5,255
 800ae1c:	1810923a 	slli	r8,r3,8
 800ae20:	02ffbff4 	movhi	r11,65279
 800ae24:	02a02074 	movhi	r10,32897
 800ae28:	40c6b03a 	or	r3,r8,r3
 800ae2c:	1810943a 	slli	r8,r3,16
 800ae30:	5affbfc4 	addi	r11,r11,-257
 800ae34:	52a02004 	addi	r10,r10,-32640
 800ae38:	40d0b03a 	or	r8,r8,r3
 800ae3c:	20c00017 	ldw	r3,0(r4)
 800ae40:	40c6f03a 	xor	r3,r8,r3
 800ae44:	1acd883a 	add	r6,r3,r11
 800ae48:	00c6303a 	nor	r3,zero,r3
 800ae4c:	30c6703a 	and	r3,r6,r3
 800ae50:	1a86703a 	and	r3,r3,r10
 800ae54:	183fdf1e 	bne	r3,zero,800add4 <__alt_data_end+0xfc00add4>
 800ae58:	10bfff04 	addi	r2,r2,-4
 800ae5c:	21000104 	addi	r4,r4,4
 800ae60:	48bff636 	bltu	r9,r2,800ae3c <__alt_data_end+0xfc00ae3c>
 800ae64:	003fdb06 	br	800add4 <__alt_data_end+0xfc00add4>
 800ae68:	3005883a 	mov	r2,r6
 800ae6c:	003fd706 	br	800adcc <__alt_data_end+0xfc00adcc>

0800ae70 <memcpy>:
 800ae70:	deffff04 	addi	sp,sp,-4
 800ae74:	dc000015 	stw	r16,0(sp)
 800ae78:	00c003c4 	movi	r3,15
 800ae7c:	2005883a 	mov	r2,r4
 800ae80:	1980432e 	bgeu	r3,r6,800af90 <memcpy+0x120>
 800ae84:	2146b03a 	or	r3,r4,r5
 800ae88:	18c000cc 	andi	r3,r3,3
 800ae8c:	1800421e 	bne	r3,zero,800af98 <memcpy+0x128>
 800ae90:	343ffc04 	addi	r16,r6,-16
 800ae94:	8020d13a 	srli	r16,r16,4
 800ae98:	28c00104 	addi	r3,r5,4
 800ae9c:	23400104 	addi	r13,r4,4
 800aea0:	801e913a 	slli	r15,r16,4
 800aea4:	2b000204 	addi	r12,r5,8
 800aea8:	22c00204 	addi	r11,r4,8
 800aeac:	7bc00504 	addi	r15,r15,20
 800aeb0:	2a800304 	addi	r10,r5,12
 800aeb4:	22400304 	addi	r9,r4,12
 800aeb8:	2bdf883a 	add	r15,r5,r15
 800aebc:	2811883a 	mov	r8,r5
 800aec0:	200f883a 	mov	r7,r4
 800aec4:	41000017 	ldw	r4,0(r8)
 800aec8:	39c00404 	addi	r7,r7,16
 800aecc:	18c00404 	addi	r3,r3,16
 800aed0:	393ffc15 	stw	r4,-16(r7)
 800aed4:	1bbffc17 	ldw	r14,-16(r3)
 800aed8:	6b400404 	addi	r13,r13,16
 800aedc:	5ac00404 	addi	r11,r11,16
 800aee0:	6bbffc15 	stw	r14,-16(r13)
 800aee4:	63800017 	ldw	r14,0(r12)
 800aee8:	4a400404 	addi	r9,r9,16
 800aeec:	42000404 	addi	r8,r8,16
 800aef0:	5bbffc15 	stw	r14,-16(r11)
 800aef4:	53800017 	ldw	r14,0(r10)
 800aef8:	63000404 	addi	r12,r12,16
 800aefc:	52800404 	addi	r10,r10,16
 800af00:	4bbffc15 	stw	r14,-16(r9)
 800af04:	1bffef1e 	bne	r3,r15,800aec4 <__alt_data_end+0xfc00aec4>
 800af08:	81c00044 	addi	r7,r16,1
 800af0c:	380e913a 	slli	r7,r7,4
 800af10:	310003cc 	andi	r4,r6,15
 800af14:	02c000c4 	movi	r11,3
 800af18:	11c7883a 	add	r3,r2,r7
 800af1c:	29cb883a 	add	r5,r5,r7
 800af20:	59001f2e 	bgeu	r11,r4,800afa0 <memcpy+0x130>
 800af24:	1813883a 	mov	r9,r3
 800af28:	2811883a 	mov	r8,r5
 800af2c:	200f883a 	mov	r7,r4
 800af30:	42800017 	ldw	r10,0(r8)
 800af34:	4a400104 	addi	r9,r9,4
 800af38:	39ffff04 	addi	r7,r7,-4
 800af3c:	4abfff15 	stw	r10,-4(r9)
 800af40:	42000104 	addi	r8,r8,4
 800af44:	59fffa36 	bltu	r11,r7,800af30 <__alt_data_end+0xfc00af30>
 800af48:	213fff04 	addi	r4,r4,-4
 800af4c:	2008d0ba 	srli	r4,r4,2
 800af50:	318000cc 	andi	r6,r6,3
 800af54:	21000044 	addi	r4,r4,1
 800af58:	2109883a 	add	r4,r4,r4
 800af5c:	2109883a 	add	r4,r4,r4
 800af60:	1907883a 	add	r3,r3,r4
 800af64:	290b883a 	add	r5,r5,r4
 800af68:	30000626 	beq	r6,zero,800af84 <memcpy+0x114>
 800af6c:	198d883a 	add	r6,r3,r6
 800af70:	29c00003 	ldbu	r7,0(r5)
 800af74:	18c00044 	addi	r3,r3,1
 800af78:	29400044 	addi	r5,r5,1
 800af7c:	19ffffc5 	stb	r7,-1(r3)
 800af80:	19bffb1e 	bne	r3,r6,800af70 <__alt_data_end+0xfc00af70>
 800af84:	dc000017 	ldw	r16,0(sp)
 800af88:	dec00104 	addi	sp,sp,4
 800af8c:	f800283a 	ret
 800af90:	2007883a 	mov	r3,r4
 800af94:	003ff406 	br	800af68 <__alt_data_end+0xfc00af68>
 800af98:	2007883a 	mov	r3,r4
 800af9c:	003ff306 	br	800af6c <__alt_data_end+0xfc00af6c>
 800afa0:	200d883a 	mov	r6,r4
 800afa4:	003ff006 	br	800af68 <__alt_data_end+0xfc00af68>

0800afa8 <memmove>:
 800afa8:	2005883a 	mov	r2,r4
 800afac:	29000b2e 	bgeu	r5,r4,800afdc <memmove+0x34>
 800afb0:	298f883a 	add	r7,r5,r6
 800afb4:	21c0092e 	bgeu	r4,r7,800afdc <memmove+0x34>
 800afb8:	2187883a 	add	r3,r4,r6
 800afbc:	198bc83a 	sub	r5,r3,r6
 800afc0:	30004b26 	beq	r6,zero,800b0f0 <memmove+0x148>
 800afc4:	39ffffc4 	addi	r7,r7,-1
 800afc8:	39000003 	ldbu	r4,0(r7)
 800afcc:	18ffffc4 	addi	r3,r3,-1
 800afd0:	19000005 	stb	r4,0(r3)
 800afd4:	197ffb1e 	bne	r3,r5,800afc4 <__alt_data_end+0xfc00afc4>
 800afd8:	f800283a 	ret
 800afdc:	00c003c4 	movi	r3,15
 800afe0:	1980412e 	bgeu	r3,r6,800b0e8 <memmove+0x140>
 800afe4:	1146b03a 	or	r3,r2,r5
 800afe8:	18c000cc 	andi	r3,r3,3
 800afec:	1800411e 	bne	r3,zero,800b0f4 <memmove+0x14c>
 800aff0:	33fffc04 	addi	r15,r6,-16
 800aff4:	781ed13a 	srli	r15,r15,4
 800aff8:	28c00104 	addi	r3,r5,4
 800affc:	13400104 	addi	r13,r2,4
 800b000:	781c913a 	slli	r14,r15,4
 800b004:	2b000204 	addi	r12,r5,8
 800b008:	12c00204 	addi	r11,r2,8
 800b00c:	73800504 	addi	r14,r14,20
 800b010:	2a800304 	addi	r10,r5,12
 800b014:	12400304 	addi	r9,r2,12
 800b018:	2b9d883a 	add	r14,r5,r14
 800b01c:	2811883a 	mov	r8,r5
 800b020:	100f883a 	mov	r7,r2
 800b024:	41000017 	ldw	r4,0(r8)
 800b028:	39c00404 	addi	r7,r7,16
 800b02c:	18c00404 	addi	r3,r3,16
 800b030:	393ffc15 	stw	r4,-16(r7)
 800b034:	193ffc17 	ldw	r4,-16(r3)
 800b038:	6b400404 	addi	r13,r13,16
 800b03c:	5ac00404 	addi	r11,r11,16
 800b040:	693ffc15 	stw	r4,-16(r13)
 800b044:	61000017 	ldw	r4,0(r12)
 800b048:	4a400404 	addi	r9,r9,16
 800b04c:	42000404 	addi	r8,r8,16
 800b050:	593ffc15 	stw	r4,-16(r11)
 800b054:	51000017 	ldw	r4,0(r10)
 800b058:	63000404 	addi	r12,r12,16
 800b05c:	52800404 	addi	r10,r10,16
 800b060:	493ffc15 	stw	r4,-16(r9)
 800b064:	1bbfef1e 	bne	r3,r14,800b024 <__alt_data_end+0xfc00b024>
 800b068:	79000044 	addi	r4,r15,1
 800b06c:	2008913a 	slli	r4,r4,4
 800b070:	328003cc 	andi	r10,r6,15
 800b074:	02c000c4 	movi	r11,3
 800b078:	1107883a 	add	r3,r2,r4
 800b07c:	290b883a 	add	r5,r5,r4
 800b080:	5a801e2e 	bgeu	r11,r10,800b0fc <memmove+0x154>
 800b084:	1813883a 	mov	r9,r3
 800b088:	2811883a 	mov	r8,r5
 800b08c:	500f883a 	mov	r7,r10
 800b090:	41000017 	ldw	r4,0(r8)
 800b094:	4a400104 	addi	r9,r9,4
 800b098:	39ffff04 	addi	r7,r7,-4
 800b09c:	493fff15 	stw	r4,-4(r9)
 800b0a0:	42000104 	addi	r8,r8,4
 800b0a4:	59fffa36 	bltu	r11,r7,800b090 <__alt_data_end+0xfc00b090>
 800b0a8:	513fff04 	addi	r4,r10,-4
 800b0ac:	2008d0ba 	srli	r4,r4,2
 800b0b0:	318000cc 	andi	r6,r6,3
 800b0b4:	21000044 	addi	r4,r4,1
 800b0b8:	2109883a 	add	r4,r4,r4
 800b0bc:	2109883a 	add	r4,r4,r4
 800b0c0:	1907883a 	add	r3,r3,r4
 800b0c4:	290b883a 	add	r5,r5,r4
 800b0c8:	30000926 	beq	r6,zero,800b0f0 <memmove+0x148>
 800b0cc:	198d883a 	add	r6,r3,r6
 800b0d0:	29c00003 	ldbu	r7,0(r5)
 800b0d4:	18c00044 	addi	r3,r3,1
 800b0d8:	29400044 	addi	r5,r5,1
 800b0dc:	19ffffc5 	stb	r7,-1(r3)
 800b0e0:	19bffb1e 	bne	r3,r6,800b0d0 <__alt_data_end+0xfc00b0d0>
 800b0e4:	f800283a 	ret
 800b0e8:	1007883a 	mov	r3,r2
 800b0ec:	003ff606 	br	800b0c8 <__alt_data_end+0xfc00b0c8>
 800b0f0:	f800283a 	ret
 800b0f4:	1007883a 	mov	r3,r2
 800b0f8:	003ff406 	br	800b0cc <__alt_data_end+0xfc00b0cc>
 800b0fc:	500d883a 	mov	r6,r10
 800b100:	003ff106 	br	800b0c8 <__alt_data_end+0xfc00b0c8>

0800b104 <_Balloc>:
 800b104:	20801317 	ldw	r2,76(r4)
 800b108:	defffc04 	addi	sp,sp,-16
 800b10c:	dc400115 	stw	r17,4(sp)
 800b110:	dc000015 	stw	r16,0(sp)
 800b114:	dfc00315 	stw	ra,12(sp)
 800b118:	dc800215 	stw	r18,8(sp)
 800b11c:	2023883a 	mov	r17,r4
 800b120:	2821883a 	mov	r16,r5
 800b124:	10000f26 	beq	r2,zero,800b164 <_Balloc+0x60>
 800b128:	8407883a 	add	r3,r16,r16
 800b12c:	18c7883a 	add	r3,r3,r3
 800b130:	10c7883a 	add	r3,r2,r3
 800b134:	18800017 	ldw	r2,0(r3)
 800b138:	10001126 	beq	r2,zero,800b180 <_Balloc+0x7c>
 800b13c:	11000017 	ldw	r4,0(r2)
 800b140:	19000015 	stw	r4,0(r3)
 800b144:	10000415 	stw	zero,16(r2)
 800b148:	10000315 	stw	zero,12(r2)
 800b14c:	dfc00317 	ldw	ra,12(sp)
 800b150:	dc800217 	ldw	r18,8(sp)
 800b154:	dc400117 	ldw	r17,4(sp)
 800b158:	dc000017 	ldw	r16,0(sp)
 800b15c:	dec00404 	addi	sp,sp,16
 800b160:	f800283a 	ret
 800b164:	01400104 	movi	r5,4
 800b168:	01800844 	movi	r6,33
 800b16c:	800f2400 	call	800f240 <_calloc_r>
 800b170:	88801315 	stw	r2,76(r17)
 800b174:	103fec1e 	bne	r2,zero,800b128 <__alt_data_end+0xfc00b128>
 800b178:	0005883a 	mov	r2,zero
 800b17c:	003ff306 	br	800b14c <__alt_data_end+0xfc00b14c>
 800b180:	01400044 	movi	r5,1
 800b184:	2c24983a 	sll	r18,r5,r16
 800b188:	8809883a 	mov	r4,r17
 800b18c:	91800144 	addi	r6,r18,5
 800b190:	318d883a 	add	r6,r6,r6
 800b194:	318d883a 	add	r6,r6,r6
 800b198:	800f2400 	call	800f240 <_calloc_r>
 800b19c:	103ff626 	beq	r2,zero,800b178 <__alt_data_end+0xfc00b178>
 800b1a0:	14000115 	stw	r16,4(r2)
 800b1a4:	14800215 	stw	r18,8(r2)
 800b1a8:	003fe606 	br	800b144 <__alt_data_end+0xfc00b144>

0800b1ac <_Bfree>:
 800b1ac:	28000826 	beq	r5,zero,800b1d0 <_Bfree+0x24>
 800b1b0:	28c00117 	ldw	r3,4(r5)
 800b1b4:	20801317 	ldw	r2,76(r4)
 800b1b8:	18c7883a 	add	r3,r3,r3
 800b1bc:	18c7883a 	add	r3,r3,r3
 800b1c0:	10c5883a 	add	r2,r2,r3
 800b1c4:	10c00017 	ldw	r3,0(r2)
 800b1c8:	28c00015 	stw	r3,0(r5)
 800b1cc:	11400015 	stw	r5,0(r2)
 800b1d0:	f800283a 	ret

0800b1d4 <__multadd>:
 800b1d4:	defff704 	addi	sp,sp,-36
 800b1d8:	dc800215 	stw	r18,8(sp)
 800b1dc:	2c800417 	ldw	r18,16(r5)
 800b1e0:	ddc00715 	stw	r23,28(sp)
 800b1e4:	dd800615 	stw	r22,24(sp)
 800b1e8:	dd000415 	stw	r20,16(sp)
 800b1ec:	dcc00315 	stw	r19,12(sp)
 800b1f0:	dc400115 	stw	r17,4(sp)
 800b1f4:	dc000015 	stw	r16,0(sp)
 800b1f8:	dfc00815 	stw	ra,32(sp)
 800b1fc:	dd400515 	stw	r21,20(sp)
 800b200:	2827883a 	mov	r19,r5
 800b204:	2029883a 	mov	r20,r4
 800b208:	3023883a 	mov	r17,r6
 800b20c:	3821883a 	mov	r16,r7
 800b210:	2d800504 	addi	r22,r5,20
 800b214:	002f883a 	mov	r23,zero
 800b218:	b5400017 	ldw	r21,0(r22)
 800b21c:	880b883a 	mov	r5,r17
 800b220:	bdc00044 	addi	r23,r23,1
 800b224:	a93fffcc 	andi	r4,r21,65535
 800b228:	80027c00 	call	80027c0 <__mulsi3>
 800b22c:	1421883a 	add	r16,r2,r16
 800b230:	a808d43a 	srli	r4,r21,16
 800b234:	802ad43a 	srli	r21,r16,16
 800b238:	880b883a 	mov	r5,r17
 800b23c:	80027c00 	call	80027c0 <__mulsi3>
 800b240:	a88f883a 	add	r7,r21,r2
 800b244:	3804943a 	slli	r2,r7,16
 800b248:	80ffffcc 	andi	r3,r16,65535
 800b24c:	b5800104 	addi	r22,r22,4
 800b250:	10c7883a 	add	r3,r2,r3
 800b254:	b0ffff15 	stw	r3,-4(r22)
 800b258:	3820d43a 	srli	r16,r7,16
 800b25c:	bcbfee16 	blt	r23,r18,800b218 <__alt_data_end+0xfc00b218>
 800b260:	80000926 	beq	r16,zero,800b288 <__multadd+0xb4>
 800b264:	98800217 	ldw	r2,8(r19)
 800b268:	9080130e 	bge	r18,r2,800b2b8 <__multadd+0xe4>
 800b26c:	90800144 	addi	r2,r18,5
 800b270:	1085883a 	add	r2,r2,r2
 800b274:	1085883a 	add	r2,r2,r2
 800b278:	9885883a 	add	r2,r19,r2
 800b27c:	14000015 	stw	r16,0(r2)
 800b280:	94800044 	addi	r18,r18,1
 800b284:	9c800415 	stw	r18,16(r19)
 800b288:	9805883a 	mov	r2,r19
 800b28c:	dfc00817 	ldw	ra,32(sp)
 800b290:	ddc00717 	ldw	r23,28(sp)
 800b294:	dd800617 	ldw	r22,24(sp)
 800b298:	dd400517 	ldw	r21,20(sp)
 800b29c:	dd000417 	ldw	r20,16(sp)
 800b2a0:	dcc00317 	ldw	r19,12(sp)
 800b2a4:	dc800217 	ldw	r18,8(sp)
 800b2a8:	dc400117 	ldw	r17,4(sp)
 800b2ac:	dc000017 	ldw	r16,0(sp)
 800b2b0:	dec00904 	addi	sp,sp,36
 800b2b4:	f800283a 	ret
 800b2b8:	99400117 	ldw	r5,4(r19)
 800b2bc:	a009883a 	mov	r4,r20
 800b2c0:	29400044 	addi	r5,r5,1
 800b2c4:	800b1040 	call	800b104 <_Balloc>
 800b2c8:	99800417 	ldw	r6,16(r19)
 800b2cc:	99400304 	addi	r5,r19,12
 800b2d0:	11000304 	addi	r4,r2,12
 800b2d4:	31800084 	addi	r6,r6,2
 800b2d8:	318d883a 	add	r6,r6,r6
 800b2dc:	318d883a 	add	r6,r6,r6
 800b2e0:	1023883a 	mov	r17,r2
 800b2e4:	800ae700 	call	800ae70 <memcpy>
 800b2e8:	99000117 	ldw	r4,4(r19)
 800b2ec:	a0c01317 	ldw	r3,76(r20)
 800b2f0:	2109883a 	add	r4,r4,r4
 800b2f4:	2109883a 	add	r4,r4,r4
 800b2f8:	1907883a 	add	r3,r3,r4
 800b2fc:	18800017 	ldw	r2,0(r3)
 800b300:	98800015 	stw	r2,0(r19)
 800b304:	1cc00015 	stw	r19,0(r3)
 800b308:	8827883a 	mov	r19,r17
 800b30c:	003fd706 	br	800b26c <__alt_data_end+0xfc00b26c>

0800b310 <__s2b>:
 800b310:	defff904 	addi	sp,sp,-28
 800b314:	dc400115 	stw	r17,4(sp)
 800b318:	dc000015 	stw	r16,0(sp)
 800b31c:	2023883a 	mov	r17,r4
 800b320:	2821883a 	mov	r16,r5
 800b324:	39000204 	addi	r4,r7,8
 800b328:	01400244 	movi	r5,9
 800b32c:	dcc00315 	stw	r19,12(sp)
 800b330:	dc800215 	stw	r18,8(sp)
 800b334:	dfc00615 	stw	ra,24(sp)
 800b338:	dd400515 	stw	r21,20(sp)
 800b33c:	dd000415 	stw	r20,16(sp)
 800b340:	3825883a 	mov	r18,r7
 800b344:	3027883a 	mov	r19,r6
 800b348:	80107a40 	call	80107a4 <__divsi3>
 800b34c:	00c00044 	movi	r3,1
 800b350:	000b883a 	mov	r5,zero
 800b354:	1880030e 	bge	r3,r2,800b364 <__s2b+0x54>
 800b358:	18c7883a 	add	r3,r3,r3
 800b35c:	29400044 	addi	r5,r5,1
 800b360:	18bffd16 	blt	r3,r2,800b358 <__alt_data_end+0xfc00b358>
 800b364:	8809883a 	mov	r4,r17
 800b368:	800b1040 	call	800b104 <_Balloc>
 800b36c:	d8c00717 	ldw	r3,28(sp)
 800b370:	10c00515 	stw	r3,20(r2)
 800b374:	00c00044 	movi	r3,1
 800b378:	10c00415 	stw	r3,16(r2)
 800b37c:	00c00244 	movi	r3,9
 800b380:	1cc0210e 	bge	r3,r19,800b408 <__s2b+0xf8>
 800b384:	80eb883a 	add	r21,r16,r3
 800b388:	a829883a 	mov	r20,r21
 800b38c:	84e1883a 	add	r16,r16,r19
 800b390:	a1c00007 	ldb	r7,0(r20)
 800b394:	8809883a 	mov	r4,r17
 800b398:	a5000044 	addi	r20,r20,1
 800b39c:	100b883a 	mov	r5,r2
 800b3a0:	01800284 	movi	r6,10
 800b3a4:	39fff404 	addi	r7,r7,-48
 800b3a8:	800b1d40 	call	800b1d4 <__multadd>
 800b3ac:	a43ff81e 	bne	r20,r16,800b390 <__alt_data_end+0xfc00b390>
 800b3b0:	ace1883a 	add	r16,r21,r19
 800b3b4:	843ffe04 	addi	r16,r16,-8
 800b3b8:	9c800a0e 	bge	r19,r18,800b3e4 <__s2b+0xd4>
 800b3bc:	94e5c83a 	sub	r18,r18,r19
 800b3c0:	84a5883a 	add	r18,r16,r18
 800b3c4:	81c00007 	ldb	r7,0(r16)
 800b3c8:	8809883a 	mov	r4,r17
 800b3cc:	84000044 	addi	r16,r16,1
 800b3d0:	100b883a 	mov	r5,r2
 800b3d4:	01800284 	movi	r6,10
 800b3d8:	39fff404 	addi	r7,r7,-48
 800b3dc:	800b1d40 	call	800b1d4 <__multadd>
 800b3e0:	84bff81e 	bne	r16,r18,800b3c4 <__alt_data_end+0xfc00b3c4>
 800b3e4:	dfc00617 	ldw	ra,24(sp)
 800b3e8:	dd400517 	ldw	r21,20(sp)
 800b3ec:	dd000417 	ldw	r20,16(sp)
 800b3f0:	dcc00317 	ldw	r19,12(sp)
 800b3f4:	dc800217 	ldw	r18,8(sp)
 800b3f8:	dc400117 	ldw	r17,4(sp)
 800b3fc:	dc000017 	ldw	r16,0(sp)
 800b400:	dec00704 	addi	sp,sp,28
 800b404:	f800283a 	ret
 800b408:	84000284 	addi	r16,r16,10
 800b40c:	1827883a 	mov	r19,r3
 800b410:	003fe906 	br	800b3b8 <__alt_data_end+0xfc00b3b8>

0800b414 <__hi0bits>:
 800b414:	20bfffec 	andhi	r2,r4,65535
 800b418:	1000141e 	bne	r2,zero,800b46c <__hi0bits+0x58>
 800b41c:	2008943a 	slli	r4,r4,16
 800b420:	00800404 	movi	r2,16
 800b424:	20ffc02c 	andhi	r3,r4,65280
 800b428:	1800021e 	bne	r3,zero,800b434 <__hi0bits+0x20>
 800b42c:	2008923a 	slli	r4,r4,8
 800b430:	10800204 	addi	r2,r2,8
 800b434:	20fc002c 	andhi	r3,r4,61440
 800b438:	1800021e 	bne	r3,zero,800b444 <__hi0bits+0x30>
 800b43c:	2008913a 	slli	r4,r4,4
 800b440:	10800104 	addi	r2,r2,4
 800b444:	20f0002c 	andhi	r3,r4,49152
 800b448:	1800031e 	bne	r3,zero,800b458 <__hi0bits+0x44>
 800b44c:	2109883a 	add	r4,r4,r4
 800b450:	10800084 	addi	r2,r2,2
 800b454:	2109883a 	add	r4,r4,r4
 800b458:	20000316 	blt	r4,zero,800b468 <__hi0bits+0x54>
 800b45c:	2110002c 	andhi	r4,r4,16384
 800b460:	2000041e 	bne	r4,zero,800b474 <__hi0bits+0x60>
 800b464:	00800804 	movi	r2,32
 800b468:	f800283a 	ret
 800b46c:	0005883a 	mov	r2,zero
 800b470:	003fec06 	br	800b424 <__alt_data_end+0xfc00b424>
 800b474:	10800044 	addi	r2,r2,1
 800b478:	f800283a 	ret

0800b47c <__lo0bits>:
 800b47c:	20c00017 	ldw	r3,0(r4)
 800b480:	188001cc 	andi	r2,r3,7
 800b484:	10000826 	beq	r2,zero,800b4a8 <__lo0bits+0x2c>
 800b488:	1880004c 	andi	r2,r3,1
 800b48c:	1000211e 	bne	r2,zero,800b514 <__lo0bits+0x98>
 800b490:	1880008c 	andi	r2,r3,2
 800b494:	1000211e 	bne	r2,zero,800b51c <__lo0bits+0xa0>
 800b498:	1806d0ba 	srli	r3,r3,2
 800b49c:	00800084 	movi	r2,2
 800b4a0:	20c00015 	stw	r3,0(r4)
 800b4a4:	f800283a 	ret
 800b4a8:	18bfffcc 	andi	r2,r3,65535
 800b4ac:	10001326 	beq	r2,zero,800b4fc <__lo0bits+0x80>
 800b4b0:	0005883a 	mov	r2,zero
 800b4b4:	19403fcc 	andi	r5,r3,255
 800b4b8:	2800021e 	bne	r5,zero,800b4c4 <__lo0bits+0x48>
 800b4bc:	1806d23a 	srli	r3,r3,8
 800b4c0:	10800204 	addi	r2,r2,8
 800b4c4:	194003cc 	andi	r5,r3,15
 800b4c8:	2800021e 	bne	r5,zero,800b4d4 <__lo0bits+0x58>
 800b4cc:	1806d13a 	srli	r3,r3,4
 800b4d0:	10800104 	addi	r2,r2,4
 800b4d4:	194000cc 	andi	r5,r3,3
 800b4d8:	2800021e 	bne	r5,zero,800b4e4 <__lo0bits+0x68>
 800b4dc:	1806d0ba 	srli	r3,r3,2
 800b4e0:	10800084 	addi	r2,r2,2
 800b4e4:	1940004c 	andi	r5,r3,1
 800b4e8:	2800081e 	bne	r5,zero,800b50c <__lo0bits+0x90>
 800b4ec:	1806d07a 	srli	r3,r3,1
 800b4f0:	1800051e 	bne	r3,zero,800b508 <__lo0bits+0x8c>
 800b4f4:	00800804 	movi	r2,32
 800b4f8:	f800283a 	ret
 800b4fc:	1806d43a 	srli	r3,r3,16
 800b500:	00800404 	movi	r2,16
 800b504:	003feb06 	br	800b4b4 <__alt_data_end+0xfc00b4b4>
 800b508:	10800044 	addi	r2,r2,1
 800b50c:	20c00015 	stw	r3,0(r4)
 800b510:	f800283a 	ret
 800b514:	0005883a 	mov	r2,zero
 800b518:	f800283a 	ret
 800b51c:	1806d07a 	srli	r3,r3,1
 800b520:	00800044 	movi	r2,1
 800b524:	20c00015 	stw	r3,0(r4)
 800b528:	f800283a 	ret

0800b52c <__i2b>:
 800b52c:	defffd04 	addi	sp,sp,-12
 800b530:	dc000015 	stw	r16,0(sp)
 800b534:	04000044 	movi	r16,1
 800b538:	dc400115 	stw	r17,4(sp)
 800b53c:	2823883a 	mov	r17,r5
 800b540:	800b883a 	mov	r5,r16
 800b544:	dfc00215 	stw	ra,8(sp)
 800b548:	800b1040 	call	800b104 <_Balloc>
 800b54c:	14400515 	stw	r17,20(r2)
 800b550:	14000415 	stw	r16,16(r2)
 800b554:	dfc00217 	ldw	ra,8(sp)
 800b558:	dc400117 	ldw	r17,4(sp)
 800b55c:	dc000017 	ldw	r16,0(sp)
 800b560:	dec00304 	addi	sp,sp,12
 800b564:	f800283a 	ret

0800b568 <__multiply>:
 800b568:	deffef04 	addi	sp,sp,-68
 800b56c:	dc400815 	stw	r17,32(sp)
 800b570:	dc000715 	stw	r16,28(sp)
 800b574:	2c400417 	ldw	r17,16(r5)
 800b578:	34000417 	ldw	r16,16(r6)
 800b57c:	dd800d15 	stw	r22,52(sp)
 800b580:	dc800915 	stw	r18,36(sp)
 800b584:	dfc01015 	stw	ra,64(sp)
 800b588:	df000f15 	stw	fp,60(sp)
 800b58c:	ddc00e15 	stw	r23,56(sp)
 800b590:	dd400c15 	stw	r21,48(sp)
 800b594:	dd000b15 	stw	r20,44(sp)
 800b598:	dcc00a15 	stw	r19,40(sp)
 800b59c:	2825883a 	mov	r18,r5
 800b5a0:	302d883a 	mov	r22,r6
 800b5a4:	8c009116 	blt	r17,r16,800b7ec <__multiply+0x284>
 800b5a8:	8005883a 	mov	r2,r16
 800b5ac:	8821883a 	mov	r16,r17
 800b5b0:	1023883a 	mov	r17,r2
 800b5b4:	90800217 	ldw	r2,8(r18)
 800b5b8:	8447883a 	add	r3,r16,r17
 800b5bc:	d8c00215 	stw	r3,8(sp)
 800b5c0:	91400117 	ldw	r5,4(r18)
 800b5c4:	10c0010e 	bge	r2,r3,800b5cc <__multiply+0x64>
 800b5c8:	29400044 	addi	r5,r5,1
 800b5cc:	800b1040 	call	800b104 <_Balloc>
 800b5d0:	d8c00217 	ldw	r3,8(sp)
 800b5d4:	d8800615 	stw	r2,24(sp)
 800b5d8:	18eb883a 	add	r21,r3,r3
 800b5dc:	ad6b883a 	add	r21,r21,r21
 800b5e0:	10c00504 	addi	r3,r2,20
 800b5e4:	1d6b883a 	add	r21,r3,r21
 800b5e8:	d8c00115 	stw	r3,4(sp)
 800b5ec:	dd400315 	stw	r21,12(sp)
 800b5f0:	1805883a 	mov	r2,r3
 800b5f4:	1d40042e 	bgeu	r3,r21,800b608 <__multiply+0xa0>
 800b5f8:	d8c00317 	ldw	r3,12(sp)
 800b5fc:	10000015 	stw	zero,0(r2)
 800b600:	10800104 	addi	r2,r2,4
 800b604:	10fffc36 	bltu	r2,r3,800b5f8 <__alt_data_end+0xfc00b5f8>
 800b608:	8c63883a 	add	r17,r17,r17
 800b60c:	b5800504 	addi	r22,r22,20
 800b610:	8c63883a 	add	r17,r17,r17
 800b614:	94800504 	addi	r18,r18,20
 800b618:	8421883a 	add	r16,r16,r16
 800b61c:	b463883a 	add	r17,r22,r17
 800b620:	8421883a 	add	r16,r16,r16
 800b624:	dd800015 	stw	r22,0(sp)
 800b628:	dc800415 	stw	r18,16(sp)
 800b62c:	dc400515 	stw	r17,20(sp)
 800b630:	9429883a 	add	r20,r18,r16
 800b634:	b4404f2e 	bgeu	r22,r17,800b774 <__multiply+0x20c>
 800b638:	d8c00017 	ldw	r3,0(sp)
 800b63c:	1c800017 	ldw	r18,0(r3)
 800b640:	943fffcc 	andi	r16,r18,65535
 800b644:	80001e26 	beq	r16,zero,800b6c0 <__multiply+0x158>
 800b648:	dd800117 	ldw	r22,4(sp)
 800b64c:	dd400417 	ldw	r21,16(sp)
 800b650:	0025883a 	mov	r18,zero
 800b654:	adc00017 	ldw	r23,0(r21)
 800b658:	b4c00017 	ldw	r19,0(r22)
 800b65c:	800b883a 	mov	r5,r16
 800b660:	b93fffcc 	andi	r4,r23,65535
 800b664:	80027c00 	call	80027c0 <__mulsi3>
 800b668:	9c7fffcc 	andi	r17,r19,65535
 800b66c:	8885883a 	add	r2,r17,r2
 800b670:	b808d43a 	srli	r4,r23,16
 800b674:	14a3883a 	add	r17,r2,r18
 800b678:	9826d43a 	srli	r19,r19,16
 800b67c:	8824d43a 	srli	r18,r17,16
 800b680:	800b883a 	mov	r5,r16
 800b684:	80027c00 	call	80027c0 <__mulsi3>
 800b688:	9885883a 	add	r2,r19,r2
 800b68c:	14a7883a 	add	r19,r2,r18
 800b690:	88ffffcc 	andi	r3,r17,65535
 800b694:	9822943a 	slli	r17,r19,16
 800b698:	ad400104 	addi	r21,r21,4
 800b69c:	b005883a 	mov	r2,r22
 800b6a0:	88c6b03a 	or	r3,r17,r3
 800b6a4:	b0c00015 	stw	r3,0(r22)
 800b6a8:	9824d43a 	srli	r18,r19,16
 800b6ac:	b5800104 	addi	r22,r22,4
 800b6b0:	ad3fe836 	bltu	r21,r20,800b654 <__alt_data_end+0xfc00b654>
 800b6b4:	d8c00017 	ldw	r3,0(sp)
 800b6b8:	14800115 	stw	r18,4(r2)
 800b6bc:	1c800017 	ldw	r18,0(r3)
 800b6c0:	9024d43a 	srli	r18,r18,16
 800b6c4:	90002226 	beq	r18,zero,800b750 <__multiply+0x1e8>
 800b6c8:	d8c00117 	ldw	r3,4(sp)
 800b6cc:	dd800417 	ldw	r22,16(sp)
 800b6d0:	002f883a 	mov	r23,zero
 800b6d4:	1f000017 	ldw	fp,0(r3)
 800b6d8:	1823883a 	mov	r17,r3
 800b6dc:	182b883a 	mov	r21,r3
 800b6e0:	e021883a 	mov	r16,fp
 800b6e4:	00000106 	br	800b6ec <__multiply+0x184>
 800b6e8:	982b883a 	mov	r21,r19
 800b6ec:	b100000b 	ldhu	r4,0(r22)
 800b6f0:	8020d43a 	srli	r16,r16,16
 800b6f4:	900b883a 	mov	r5,r18
 800b6f8:	80027c00 	call	80027c0 <__mulsi3>
 800b6fc:	1405883a 	add	r2,r2,r16
 800b700:	15ef883a 	add	r23,r2,r23
 800b704:	b804943a 	slli	r2,r23,16
 800b708:	e0ffffcc 	andi	r3,fp,65535
 800b70c:	8c400104 	addi	r17,r17,4
 800b710:	10c6b03a 	or	r3,r2,r3
 800b714:	88ffff15 	stw	r3,-4(r17)
 800b718:	b5800104 	addi	r22,r22,4
 800b71c:	b13fff17 	ldw	r4,-4(r22)
 800b720:	acc00104 	addi	r19,r21,4
 800b724:	900b883a 	mov	r5,r18
 800b728:	2008d43a 	srli	r4,r4,16
 800b72c:	9c000017 	ldw	r16,0(r19)
 800b730:	80027c00 	call	80027c0 <__mulsi3>
 800b734:	b806d43a 	srli	r3,r23,16
 800b738:	813fffcc 	andi	r4,r16,65535
 800b73c:	1105883a 	add	r2,r2,r4
 800b740:	10f9883a 	add	fp,r2,r3
 800b744:	e02ed43a 	srli	r23,fp,16
 800b748:	b53fe736 	bltu	r22,r20,800b6e8 <__alt_data_end+0xfc00b6e8>
 800b74c:	af000115 	stw	fp,4(r21)
 800b750:	d8c00017 	ldw	r3,0(sp)
 800b754:	d9000517 	ldw	r4,20(sp)
 800b758:	18c00104 	addi	r3,r3,4
 800b75c:	d8c00015 	stw	r3,0(sp)
 800b760:	d8c00117 	ldw	r3,4(sp)
 800b764:	18c00104 	addi	r3,r3,4
 800b768:	d8c00115 	stw	r3,4(sp)
 800b76c:	d8c00017 	ldw	r3,0(sp)
 800b770:	193fb136 	bltu	r3,r4,800b638 <__alt_data_end+0xfc00b638>
 800b774:	d8c00217 	ldw	r3,8(sp)
 800b778:	00c00c0e 	bge	zero,r3,800b7ac <__multiply+0x244>
 800b77c:	d8c00317 	ldw	r3,12(sp)
 800b780:	18bfff17 	ldw	r2,-4(r3)
 800b784:	1d7fff04 	addi	r21,r3,-4
 800b788:	10000326 	beq	r2,zero,800b798 <__multiply+0x230>
 800b78c:	00000706 	br	800b7ac <__multiply+0x244>
 800b790:	a8800017 	ldw	r2,0(r21)
 800b794:	1000051e 	bne	r2,zero,800b7ac <__multiply+0x244>
 800b798:	d8c00217 	ldw	r3,8(sp)
 800b79c:	ad7fff04 	addi	r21,r21,-4
 800b7a0:	18ffffc4 	addi	r3,r3,-1
 800b7a4:	d8c00215 	stw	r3,8(sp)
 800b7a8:	183ff91e 	bne	r3,zero,800b790 <__alt_data_end+0xfc00b790>
 800b7ac:	d8c00617 	ldw	r3,24(sp)
 800b7b0:	d9000217 	ldw	r4,8(sp)
 800b7b4:	1805883a 	mov	r2,r3
 800b7b8:	19000415 	stw	r4,16(r3)
 800b7bc:	dfc01017 	ldw	ra,64(sp)
 800b7c0:	df000f17 	ldw	fp,60(sp)
 800b7c4:	ddc00e17 	ldw	r23,56(sp)
 800b7c8:	dd800d17 	ldw	r22,52(sp)
 800b7cc:	dd400c17 	ldw	r21,48(sp)
 800b7d0:	dd000b17 	ldw	r20,44(sp)
 800b7d4:	dcc00a17 	ldw	r19,40(sp)
 800b7d8:	dc800917 	ldw	r18,36(sp)
 800b7dc:	dc400817 	ldw	r17,32(sp)
 800b7e0:	dc000717 	ldw	r16,28(sp)
 800b7e4:	dec01104 	addi	sp,sp,68
 800b7e8:	f800283a 	ret
 800b7ec:	3025883a 	mov	r18,r6
 800b7f0:	282d883a 	mov	r22,r5
 800b7f4:	003f6f06 	br	800b5b4 <__alt_data_end+0xfc00b5b4>

0800b7f8 <__pow5mult>:
 800b7f8:	defffa04 	addi	sp,sp,-24
 800b7fc:	dcc00315 	stw	r19,12(sp)
 800b800:	dc800215 	stw	r18,8(sp)
 800b804:	dc000015 	stw	r16,0(sp)
 800b808:	dfc00515 	stw	ra,20(sp)
 800b80c:	dd000415 	stw	r20,16(sp)
 800b810:	dc400115 	stw	r17,4(sp)
 800b814:	308000cc 	andi	r2,r6,3
 800b818:	3021883a 	mov	r16,r6
 800b81c:	2027883a 	mov	r19,r4
 800b820:	2825883a 	mov	r18,r5
 800b824:	10002e1e 	bne	r2,zero,800b8e0 <__pow5mult+0xe8>
 800b828:	8021d0ba 	srai	r16,r16,2
 800b82c:	80001a26 	beq	r16,zero,800b898 <__pow5mult+0xa0>
 800b830:	9c401217 	ldw	r17,72(r19)
 800b834:	8800061e 	bne	r17,zero,800b850 <__pow5mult+0x58>
 800b838:	00003406 	br	800b90c <__pow5mult+0x114>
 800b83c:	8021d07a 	srai	r16,r16,1
 800b840:	80001526 	beq	r16,zero,800b898 <__pow5mult+0xa0>
 800b844:	88800017 	ldw	r2,0(r17)
 800b848:	10001c26 	beq	r2,zero,800b8bc <__pow5mult+0xc4>
 800b84c:	1023883a 	mov	r17,r2
 800b850:	80c0004c 	andi	r3,r16,1
 800b854:	183ff926 	beq	r3,zero,800b83c <__alt_data_end+0xfc00b83c>
 800b858:	900b883a 	mov	r5,r18
 800b85c:	880d883a 	mov	r6,r17
 800b860:	9809883a 	mov	r4,r19
 800b864:	800b5680 	call	800b568 <__multiply>
 800b868:	90001b26 	beq	r18,zero,800b8d8 <__pow5mult+0xe0>
 800b86c:	91c00117 	ldw	r7,4(r18)
 800b870:	98c01317 	ldw	r3,76(r19)
 800b874:	8021d07a 	srai	r16,r16,1
 800b878:	39cf883a 	add	r7,r7,r7
 800b87c:	39cf883a 	add	r7,r7,r7
 800b880:	19c7883a 	add	r3,r3,r7
 800b884:	19000017 	ldw	r4,0(r3)
 800b888:	91000015 	stw	r4,0(r18)
 800b88c:	1c800015 	stw	r18,0(r3)
 800b890:	1025883a 	mov	r18,r2
 800b894:	803feb1e 	bne	r16,zero,800b844 <__alt_data_end+0xfc00b844>
 800b898:	9005883a 	mov	r2,r18
 800b89c:	dfc00517 	ldw	ra,20(sp)
 800b8a0:	dd000417 	ldw	r20,16(sp)
 800b8a4:	dcc00317 	ldw	r19,12(sp)
 800b8a8:	dc800217 	ldw	r18,8(sp)
 800b8ac:	dc400117 	ldw	r17,4(sp)
 800b8b0:	dc000017 	ldw	r16,0(sp)
 800b8b4:	dec00604 	addi	sp,sp,24
 800b8b8:	f800283a 	ret
 800b8bc:	9809883a 	mov	r4,r19
 800b8c0:	880b883a 	mov	r5,r17
 800b8c4:	880d883a 	mov	r6,r17
 800b8c8:	800b5680 	call	800b568 <__multiply>
 800b8cc:	88800015 	stw	r2,0(r17)
 800b8d0:	10000015 	stw	zero,0(r2)
 800b8d4:	003fdd06 	br	800b84c <__alt_data_end+0xfc00b84c>
 800b8d8:	1025883a 	mov	r18,r2
 800b8dc:	003fd706 	br	800b83c <__alt_data_end+0xfc00b83c>
 800b8e0:	10bfffc4 	addi	r2,r2,-1
 800b8e4:	1085883a 	add	r2,r2,r2
 800b8e8:	00c20074 	movhi	r3,2049
 800b8ec:	18db5804 	addi	r3,r3,28000
 800b8f0:	1085883a 	add	r2,r2,r2
 800b8f4:	1885883a 	add	r2,r3,r2
 800b8f8:	11800017 	ldw	r6,0(r2)
 800b8fc:	000f883a 	mov	r7,zero
 800b900:	800b1d40 	call	800b1d4 <__multadd>
 800b904:	1025883a 	mov	r18,r2
 800b908:	003fc706 	br	800b828 <__alt_data_end+0xfc00b828>
 800b90c:	05000044 	movi	r20,1
 800b910:	9809883a 	mov	r4,r19
 800b914:	a00b883a 	mov	r5,r20
 800b918:	800b1040 	call	800b104 <_Balloc>
 800b91c:	1023883a 	mov	r17,r2
 800b920:	00809c44 	movi	r2,625
 800b924:	88800515 	stw	r2,20(r17)
 800b928:	8d000415 	stw	r20,16(r17)
 800b92c:	9c401215 	stw	r17,72(r19)
 800b930:	88000015 	stw	zero,0(r17)
 800b934:	003fc606 	br	800b850 <__alt_data_end+0xfc00b850>

0800b938 <__lshift>:
 800b938:	defff904 	addi	sp,sp,-28
 800b93c:	dd000415 	stw	r20,16(sp)
 800b940:	dcc00315 	stw	r19,12(sp)
 800b944:	3029d17a 	srai	r20,r6,5
 800b948:	2cc00417 	ldw	r19,16(r5)
 800b94c:	28800217 	ldw	r2,8(r5)
 800b950:	dd400515 	stw	r21,20(sp)
 800b954:	a4e7883a 	add	r19,r20,r19
 800b958:	dc800215 	stw	r18,8(sp)
 800b95c:	dc400115 	stw	r17,4(sp)
 800b960:	dc000015 	stw	r16,0(sp)
 800b964:	dfc00615 	stw	ra,24(sp)
 800b968:	9c000044 	addi	r16,r19,1
 800b96c:	2823883a 	mov	r17,r5
 800b970:	302b883a 	mov	r21,r6
 800b974:	2025883a 	mov	r18,r4
 800b978:	29400117 	ldw	r5,4(r5)
 800b97c:	1400030e 	bge	r2,r16,800b98c <__lshift+0x54>
 800b980:	1085883a 	add	r2,r2,r2
 800b984:	29400044 	addi	r5,r5,1
 800b988:	143ffd16 	blt	r2,r16,800b980 <__alt_data_end+0xfc00b980>
 800b98c:	9009883a 	mov	r4,r18
 800b990:	800b1040 	call	800b104 <_Balloc>
 800b994:	11c00504 	addi	r7,r2,20
 800b998:	0500090e 	bge	zero,r20,800b9c0 <__lshift+0x88>
 800b99c:	3811883a 	mov	r8,r7
 800b9a0:	0007883a 	mov	r3,zero
 800b9a4:	40000015 	stw	zero,0(r8)
 800b9a8:	18c00044 	addi	r3,r3,1
 800b9ac:	42000104 	addi	r8,r8,4
 800b9b0:	1d3ffc1e 	bne	r3,r20,800b9a4 <__alt_data_end+0xfc00b9a4>
 800b9b4:	18c7883a 	add	r3,r3,r3
 800b9b8:	18c7883a 	add	r3,r3,r3
 800b9bc:	38cf883a 	add	r7,r7,r3
 800b9c0:	89000417 	ldw	r4,16(r17)
 800b9c4:	88c00504 	addi	r3,r17,20
 800b9c8:	a98007cc 	andi	r6,r21,31
 800b9cc:	2109883a 	add	r4,r4,r4
 800b9d0:	2109883a 	add	r4,r4,r4
 800b9d4:	1909883a 	add	r4,r3,r4
 800b9d8:	30002326 	beq	r6,zero,800ba68 <__lshift+0x130>
 800b9dc:	01400804 	movi	r5,32
 800b9e0:	298bc83a 	sub	r5,r5,r6
 800b9e4:	0013883a 	mov	r9,zero
 800b9e8:	1a000017 	ldw	r8,0(r3)
 800b9ec:	3815883a 	mov	r10,r7
 800b9f0:	39c00104 	addi	r7,r7,4
 800b9f4:	4190983a 	sll	r8,r8,r6
 800b9f8:	18c00104 	addi	r3,r3,4
 800b9fc:	4a10b03a 	or	r8,r9,r8
 800ba00:	3a3fff15 	stw	r8,-4(r7)
 800ba04:	1a3fff17 	ldw	r8,-4(r3)
 800ba08:	4152d83a 	srl	r9,r8,r5
 800ba0c:	193ff636 	bltu	r3,r4,800b9e8 <__alt_data_end+0xfc00b9e8>
 800ba10:	52400115 	stw	r9,4(r10)
 800ba14:	48000126 	beq	r9,zero,800ba1c <__lshift+0xe4>
 800ba18:	9c000084 	addi	r16,r19,2
 800ba1c:	89000117 	ldw	r4,4(r17)
 800ba20:	90c01317 	ldw	r3,76(r18)
 800ba24:	843fffc4 	addi	r16,r16,-1
 800ba28:	2109883a 	add	r4,r4,r4
 800ba2c:	2109883a 	add	r4,r4,r4
 800ba30:	1907883a 	add	r3,r3,r4
 800ba34:	19000017 	ldw	r4,0(r3)
 800ba38:	14000415 	stw	r16,16(r2)
 800ba3c:	89000015 	stw	r4,0(r17)
 800ba40:	1c400015 	stw	r17,0(r3)
 800ba44:	dfc00617 	ldw	ra,24(sp)
 800ba48:	dd400517 	ldw	r21,20(sp)
 800ba4c:	dd000417 	ldw	r20,16(sp)
 800ba50:	dcc00317 	ldw	r19,12(sp)
 800ba54:	dc800217 	ldw	r18,8(sp)
 800ba58:	dc400117 	ldw	r17,4(sp)
 800ba5c:	dc000017 	ldw	r16,0(sp)
 800ba60:	dec00704 	addi	sp,sp,28
 800ba64:	f800283a 	ret
 800ba68:	19400017 	ldw	r5,0(r3)
 800ba6c:	39c00104 	addi	r7,r7,4
 800ba70:	18c00104 	addi	r3,r3,4
 800ba74:	397fff15 	stw	r5,-4(r7)
 800ba78:	193ffb36 	bltu	r3,r4,800ba68 <__alt_data_end+0xfc00ba68>
 800ba7c:	003fe706 	br	800ba1c <__alt_data_end+0xfc00ba1c>

0800ba80 <__mcmp>:
 800ba80:	20800417 	ldw	r2,16(r4)
 800ba84:	28c00417 	ldw	r3,16(r5)
 800ba88:	10c5c83a 	sub	r2,r2,r3
 800ba8c:	1000111e 	bne	r2,zero,800bad4 <__mcmp+0x54>
 800ba90:	18c7883a 	add	r3,r3,r3
 800ba94:	18c7883a 	add	r3,r3,r3
 800ba98:	21000504 	addi	r4,r4,20
 800ba9c:	29400504 	addi	r5,r5,20
 800baa0:	20c5883a 	add	r2,r4,r3
 800baa4:	28cb883a 	add	r5,r5,r3
 800baa8:	00000106 	br	800bab0 <__mcmp+0x30>
 800baac:	20800a2e 	bgeu	r4,r2,800bad8 <__mcmp+0x58>
 800bab0:	10bfff04 	addi	r2,r2,-4
 800bab4:	297fff04 	addi	r5,r5,-4
 800bab8:	11800017 	ldw	r6,0(r2)
 800babc:	28c00017 	ldw	r3,0(r5)
 800bac0:	30fffa26 	beq	r6,r3,800baac <__alt_data_end+0xfc00baac>
 800bac4:	30c00236 	bltu	r6,r3,800bad0 <__mcmp+0x50>
 800bac8:	00800044 	movi	r2,1
 800bacc:	f800283a 	ret
 800bad0:	00bfffc4 	movi	r2,-1
 800bad4:	f800283a 	ret
 800bad8:	0005883a 	mov	r2,zero
 800badc:	f800283a 	ret

0800bae0 <__mdiff>:
 800bae0:	defffb04 	addi	sp,sp,-20
 800bae4:	dc000015 	stw	r16,0(sp)
 800bae8:	2821883a 	mov	r16,r5
 800baec:	dcc00315 	stw	r19,12(sp)
 800baf0:	300b883a 	mov	r5,r6
 800baf4:	2027883a 	mov	r19,r4
 800baf8:	8009883a 	mov	r4,r16
 800bafc:	dc800215 	stw	r18,8(sp)
 800bb00:	dfc00415 	stw	ra,16(sp)
 800bb04:	dc400115 	stw	r17,4(sp)
 800bb08:	3025883a 	mov	r18,r6
 800bb0c:	800ba800 	call	800ba80 <__mcmp>
 800bb10:	10005226 	beq	r2,zero,800bc5c <__mdiff+0x17c>
 800bb14:	10004c16 	blt	r2,zero,800bc48 <__mdiff+0x168>
 800bb18:	0023883a 	mov	r17,zero
 800bb1c:	81400117 	ldw	r5,4(r16)
 800bb20:	9809883a 	mov	r4,r19
 800bb24:	800b1040 	call	800b104 <_Balloc>
 800bb28:	83400417 	ldw	r13,16(r16)
 800bb2c:	93800417 	ldw	r14,16(r18)
 800bb30:	81000504 	addi	r4,r16,20
 800bb34:	6b59883a 	add	r12,r13,r13
 800bb38:	739d883a 	add	r14,r14,r14
 800bb3c:	6319883a 	add	r12,r12,r12
 800bb40:	91800504 	addi	r6,r18,20
 800bb44:	739d883a 	add	r14,r14,r14
 800bb48:	14400315 	stw	r17,12(r2)
 800bb4c:	2319883a 	add	r12,r4,r12
 800bb50:	339d883a 	add	r14,r6,r14
 800bb54:	12400504 	addi	r9,r2,20
 800bb58:	0007883a 	mov	r3,zero
 800bb5c:	22000017 	ldw	r8,0(r4)
 800bb60:	32800017 	ldw	r10,0(r6)
 800bb64:	4ac00104 	addi	r11,r9,4
 800bb68:	41ffffcc 	andi	r7,r8,65535
 800bb6c:	38c7883a 	add	r3,r7,r3
 800bb70:	51ffffcc 	andi	r7,r10,65535
 800bb74:	19cfc83a 	sub	r7,r3,r7
 800bb78:	4010d43a 	srli	r8,r8,16
 800bb7c:	5014d43a 	srli	r10,r10,16
 800bb80:	3807d43a 	srai	r3,r7,16
 800bb84:	39ffffcc 	andi	r7,r7,65535
 800bb88:	4291c83a 	sub	r8,r8,r10
 800bb8c:	40c7883a 	add	r3,r8,r3
 800bb90:	1810943a 	slli	r8,r3,16
 800bb94:	31800104 	addi	r6,r6,4
 800bb98:	21000104 	addi	r4,r4,4
 800bb9c:	41ceb03a 	or	r7,r8,r7
 800bba0:	49c00015 	stw	r7,0(r9)
 800bba4:	1807d43a 	srai	r3,r3,16
 800bba8:	580b883a 	mov	r5,r11
 800bbac:	5813883a 	mov	r9,r11
 800bbb0:	33bfea36 	bltu	r6,r14,800bb5c <__alt_data_end+0xfc00bb5c>
 800bbb4:	2011883a 	mov	r8,r4
 800bbb8:	2300152e 	bgeu	r4,r12,800bc10 <__mdiff+0x130>
 800bbbc:	21400017 	ldw	r5,0(r4)
 800bbc0:	4a400104 	addi	r9,r9,4
 800bbc4:	21000104 	addi	r4,r4,4
 800bbc8:	29ffffcc 	andi	r7,r5,65535
 800bbcc:	38c7883a 	add	r3,r7,r3
 800bbd0:	280ad43a 	srli	r5,r5,16
 800bbd4:	180dd43a 	srai	r6,r3,16
 800bbd8:	19ffffcc 	andi	r7,r3,65535
 800bbdc:	3147883a 	add	r3,r6,r5
 800bbe0:	180a943a 	slli	r5,r3,16
 800bbe4:	1807d43a 	srai	r3,r3,16
 800bbe8:	29ceb03a 	or	r7,r5,r7
 800bbec:	49ffff15 	stw	r7,-4(r9)
 800bbf0:	233ff236 	bltu	r4,r12,800bbbc <__alt_data_end+0xfc00bbbc>
 800bbf4:	0206303a 	nor	r3,zero,r8
 800bbf8:	1b07883a 	add	r3,r3,r12
 800bbfc:	1806d0ba 	srli	r3,r3,2
 800bc00:	18c00044 	addi	r3,r3,1
 800bc04:	18c7883a 	add	r3,r3,r3
 800bc08:	18c7883a 	add	r3,r3,r3
 800bc0c:	58cb883a 	add	r5,r11,r3
 800bc10:	28ffff04 	addi	r3,r5,-4
 800bc14:	3800041e 	bne	r7,zero,800bc28 <__mdiff+0x148>
 800bc18:	18ffff04 	addi	r3,r3,-4
 800bc1c:	19000017 	ldw	r4,0(r3)
 800bc20:	6b7fffc4 	addi	r13,r13,-1
 800bc24:	203ffc26 	beq	r4,zero,800bc18 <__alt_data_end+0xfc00bc18>
 800bc28:	13400415 	stw	r13,16(r2)
 800bc2c:	dfc00417 	ldw	ra,16(sp)
 800bc30:	dcc00317 	ldw	r19,12(sp)
 800bc34:	dc800217 	ldw	r18,8(sp)
 800bc38:	dc400117 	ldw	r17,4(sp)
 800bc3c:	dc000017 	ldw	r16,0(sp)
 800bc40:	dec00504 	addi	sp,sp,20
 800bc44:	f800283a 	ret
 800bc48:	8005883a 	mov	r2,r16
 800bc4c:	04400044 	movi	r17,1
 800bc50:	9021883a 	mov	r16,r18
 800bc54:	1025883a 	mov	r18,r2
 800bc58:	003fb006 	br	800bb1c <__alt_data_end+0xfc00bb1c>
 800bc5c:	9809883a 	mov	r4,r19
 800bc60:	000b883a 	mov	r5,zero
 800bc64:	800b1040 	call	800b104 <_Balloc>
 800bc68:	00c00044 	movi	r3,1
 800bc6c:	10c00415 	stw	r3,16(r2)
 800bc70:	10000515 	stw	zero,20(r2)
 800bc74:	003fed06 	br	800bc2c <__alt_data_end+0xfc00bc2c>

0800bc78 <__ulp>:
 800bc78:	295ffc2c 	andhi	r5,r5,32752
 800bc7c:	00bf3034 	movhi	r2,64704
 800bc80:	2887883a 	add	r3,r5,r2
 800bc84:	00c0020e 	bge	zero,r3,800bc90 <__ulp+0x18>
 800bc88:	0005883a 	mov	r2,zero
 800bc8c:	f800283a 	ret
 800bc90:	00c7c83a 	sub	r3,zero,r3
 800bc94:	180bd53a 	srai	r5,r3,20
 800bc98:	008004c4 	movi	r2,19
 800bc9c:	11400a0e 	bge	r2,r5,800bcc8 <__ulp+0x50>
 800bca0:	00800c84 	movi	r2,50
 800bca4:	0007883a 	mov	r3,zero
 800bca8:	11400516 	blt	r2,r5,800bcc0 <__ulp+0x48>
 800bcac:	00800cc4 	movi	r2,51
 800bcb0:	114bc83a 	sub	r5,r2,r5
 800bcb4:	00800044 	movi	r2,1
 800bcb8:	1144983a 	sll	r2,r2,r5
 800bcbc:	f800283a 	ret
 800bcc0:	00800044 	movi	r2,1
 800bcc4:	f800283a 	ret
 800bcc8:	00800234 	movhi	r2,8
 800bccc:	1147d83a 	sra	r3,r2,r5
 800bcd0:	0005883a 	mov	r2,zero
 800bcd4:	f800283a 	ret

0800bcd8 <__b2d>:
 800bcd8:	defffa04 	addi	sp,sp,-24
 800bcdc:	dc000015 	stw	r16,0(sp)
 800bce0:	24000417 	ldw	r16,16(r4)
 800bce4:	dc400115 	stw	r17,4(sp)
 800bce8:	24400504 	addi	r17,r4,20
 800bcec:	8421883a 	add	r16,r16,r16
 800bcf0:	8421883a 	add	r16,r16,r16
 800bcf4:	8c21883a 	add	r16,r17,r16
 800bcf8:	dc800215 	stw	r18,8(sp)
 800bcfc:	84bfff17 	ldw	r18,-4(r16)
 800bd00:	dd000415 	stw	r20,16(sp)
 800bd04:	dcc00315 	stw	r19,12(sp)
 800bd08:	9009883a 	mov	r4,r18
 800bd0c:	2829883a 	mov	r20,r5
 800bd10:	dfc00515 	stw	ra,20(sp)
 800bd14:	800b4140 	call	800b414 <__hi0bits>
 800bd18:	00c00804 	movi	r3,32
 800bd1c:	1887c83a 	sub	r3,r3,r2
 800bd20:	a0c00015 	stw	r3,0(r20)
 800bd24:	00c00284 	movi	r3,10
 800bd28:	84ffff04 	addi	r19,r16,-4
 800bd2c:	18801216 	blt	r3,r2,800bd78 <__b2d+0xa0>
 800bd30:	014002c4 	movi	r5,11
 800bd34:	2889c83a 	sub	r4,r5,r2
 800bd38:	9106d83a 	srl	r3,r18,r4
 800bd3c:	18cffc34 	orhi	r3,r3,16368
 800bd40:	8cc0282e 	bgeu	r17,r19,800bde4 <__b2d+0x10c>
 800bd44:	817ffe17 	ldw	r5,-8(r16)
 800bd48:	290ad83a 	srl	r5,r5,r4
 800bd4c:	10800544 	addi	r2,r2,21
 800bd50:	9084983a 	sll	r2,r18,r2
 800bd54:	2884b03a 	or	r2,r5,r2
 800bd58:	dfc00517 	ldw	ra,20(sp)
 800bd5c:	dd000417 	ldw	r20,16(sp)
 800bd60:	dcc00317 	ldw	r19,12(sp)
 800bd64:	dc800217 	ldw	r18,8(sp)
 800bd68:	dc400117 	ldw	r17,4(sp)
 800bd6c:	dc000017 	ldw	r16,0(sp)
 800bd70:	dec00604 	addi	sp,sp,24
 800bd74:	f800283a 	ret
 800bd78:	113ffd44 	addi	r4,r2,-11
 800bd7c:	8cc00f2e 	bgeu	r17,r19,800bdbc <__b2d+0xe4>
 800bd80:	81bffe04 	addi	r6,r16,-8
 800bd84:	817ffe17 	ldw	r5,-8(r16)
 800bd88:	20001326 	beq	r4,zero,800bdd8 <__b2d+0x100>
 800bd8c:	00c00ac4 	movi	r3,43
 800bd90:	1885c83a 	sub	r2,r3,r2
 800bd94:	2886d83a 	srl	r3,r5,r2
 800bd98:	9124983a 	sll	r18,r18,r4
 800bd9c:	90e4b03a 	or	r18,r18,r3
 800bda0:	90cffc34 	orhi	r3,r18,16368
 800bda4:	8980112e 	bgeu	r17,r6,800bdec <__b2d+0x114>
 800bda8:	81bffd17 	ldw	r6,-12(r16)
 800bdac:	308cd83a 	srl	r6,r6,r2
 800bdb0:	2904983a 	sll	r2,r5,r4
 800bdb4:	1184b03a 	or	r2,r2,r6
 800bdb8:	003fe706 	br	800bd58 <__alt_data_end+0xfc00bd58>
 800bdbc:	20000526 	beq	r4,zero,800bdd4 <__b2d+0xfc>
 800bdc0:	9124983a 	sll	r18,r18,r4
 800bdc4:	000d883a 	mov	r6,zero
 800bdc8:	000b883a 	mov	r5,zero
 800bdcc:	90cffc34 	orhi	r3,r18,16368
 800bdd0:	003ff706 	br	800bdb0 <__alt_data_end+0xfc00bdb0>
 800bdd4:	000b883a 	mov	r5,zero
 800bdd8:	90cffc34 	orhi	r3,r18,16368
 800bddc:	2805883a 	mov	r2,r5
 800bde0:	003fdd06 	br	800bd58 <__alt_data_end+0xfc00bd58>
 800bde4:	000b883a 	mov	r5,zero
 800bde8:	003fd806 	br	800bd4c <__alt_data_end+0xfc00bd4c>
 800bdec:	000d883a 	mov	r6,zero
 800bdf0:	003fef06 	br	800bdb0 <__alt_data_end+0xfc00bdb0>

0800bdf4 <__d2b>:
 800bdf4:	defff704 	addi	sp,sp,-36
 800bdf8:	dc000215 	stw	r16,8(sp)
 800bdfc:	3021883a 	mov	r16,r6
 800be00:	dc400315 	stw	r17,12(sp)
 800be04:	8022907a 	slli	r17,r16,1
 800be08:	dd400715 	stw	r21,28(sp)
 800be0c:	282b883a 	mov	r21,r5
 800be10:	01400044 	movi	r5,1
 800be14:	dd000615 	stw	r20,24(sp)
 800be18:	dcc00515 	stw	r19,20(sp)
 800be1c:	dc800415 	stw	r18,16(sp)
 800be20:	dfc00815 	stw	ra,32(sp)
 800be24:	3829883a 	mov	r20,r7
 800be28:	dc800917 	ldw	r18,36(sp)
 800be2c:	8822d57a 	srli	r17,r17,21
 800be30:	800b1040 	call	800b104 <_Balloc>
 800be34:	1027883a 	mov	r19,r2
 800be38:	00800434 	movhi	r2,16
 800be3c:	10bfffc4 	addi	r2,r2,-1
 800be40:	808c703a 	and	r6,r16,r2
 800be44:	88000126 	beq	r17,zero,800be4c <__d2b+0x58>
 800be48:	31800434 	orhi	r6,r6,16
 800be4c:	d9800015 	stw	r6,0(sp)
 800be50:	a8001f26 	beq	r21,zero,800bed0 <__d2b+0xdc>
 800be54:	d9000104 	addi	r4,sp,4
 800be58:	dd400115 	stw	r21,4(sp)
 800be5c:	800b47c0 	call	800b47c <__lo0bits>
 800be60:	d8c00017 	ldw	r3,0(sp)
 800be64:	1000291e 	bne	r2,zero,800bf0c <__d2b+0x118>
 800be68:	d9000117 	ldw	r4,4(sp)
 800be6c:	99000515 	stw	r4,20(r19)
 800be70:	1820c03a 	cmpne	r16,r3,zero
 800be74:	84000044 	addi	r16,r16,1
 800be78:	98c00615 	stw	r3,24(r19)
 800be7c:	9c000415 	stw	r16,16(r19)
 800be80:	88001b1e 	bne	r17,zero,800bef0 <__d2b+0xfc>
 800be84:	800690ba 	slli	r3,r16,2
 800be88:	10bef384 	addi	r2,r2,-1074
 800be8c:	a0800015 	stw	r2,0(r20)
 800be90:	98c5883a 	add	r2,r19,r3
 800be94:	11000417 	ldw	r4,16(r2)
 800be98:	8020917a 	slli	r16,r16,5
 800be9c:	800b4140 	call	800b414 <__hi0bits>
 800bea0:	8085c83a 	sub	r2,r16,r2
 800bea4:	90800015 	stw	r2,0(r18)
 800bea8:	9805883a 	mov	r2,r19
 800beac:	dfc00817 	ldw	ra,32(sp)
 800beb0:	dd400717 	ldw	r21,28(sp)
 800beb4:	dd000617 	ldw	r20,24(sp)
 800beb8:	dcc00517 	ldw	r19,20(sp)
 800bebc:	dc800417 	ldw	r18,16(sp)
 800bec0:	dc400317 	ldw	r17,12(sp)
 800bec4:	dc000217 	ldw	r16,8(sp)
 800bec8:	dec00904 	addi	sp,sp,36
 800becc:	f800283a 	ret
 800bed0:	d809883a 	mov	r4,sp
 800bed4:	800b47c0 	call	800b47c <__lo0bits>
 800bed8:	d8c00017 	ldw	r3,0(sp)
 800bedc:	04000044 	movi	r16,1
 800bee0:	9c000415 	stw	r16,16(r19)
 800bee4:	98c00515 	stw	r3,20(r19)
 800bee8:	10800804 	addi	r2,r2,32
 800beec:	883fe526 	beq	r17,zero,800be84 <__alt_data_end+0xfc00be84>
 800bef0:	8c7ef344 	addi	r17,r17,-1075
 800bef4:	88a3883a 	add	r17,r17,r2
 800bef8:	00c00d44 	movi	r3,53
 800befc:	a4400015 	stw	r17,0(r20)
 800bf00:	1885c83a 	sub	r2,r3,r2
 800bf04:	90800015 	stw	r2,0(r18)
 800bf08:	003fe706 	br	800bea8 <__alt_data_end+0xfc00bea8>
 800bf0c:	01000804 	movi	r4,32
 800bf10:	2089c83a 	sub	r4,r4,r2
 800bf14:	1908983a 	sll	r4,r3,r4
 800bf18:	d9400117 	ldw	r5,4(sp)
 800bf1c:	1886d83a 	srl	r3,r3,r2
 800bf20:	2148b03a 	or	r4,r4,r5
 800bf24:	99000515 	stw	r4,20(r19)
 800bf28:	d8c00015 	stw	r3,0(sp)
 800bf2c:	003fd006 	br	800be70 <__alt_data_end+0xfc00be70>

0800bf30 <__ratio>:
 800bf30:	defff904 	addi	sp,sp,-28
 800bf34:	dc400315 	stw	r17,12(sp)
 800bf38:	2823883a 	mov	r17,r5
 800bf3c:	d9400104 	addi	r5,sp,4
 800bf40:	dfc00615 	stw	ra,24(sp)
 800bf44:	dcc00515 	stw	r19,20(sp)
 800bf48:	dc800415 	stw	r18,16(sp)
 800bf4c:	2027883a 	mov	r19,r4
 800bf50:	dc000215 	stw	r16,8(sp)
 800bf54:	800bcd80 	call	800bcd8 <__b2d>
 800bf58:	8809883a 	mov	r4,r17
 800bf5c:	d80b883a 	mov	r5,sp
 800bf60:	1025883a 	mov	r18,r2
 800bf64:	1821883a 	mov	r16,r3
 800bf68:	800bcd80 	call	800bcd8 <__b2d>
 800bf6c:	8a400417 	ldw	r9,16(r17)
 800bf70:	9a000417 	ldw	r8,16(r19)
 800bf74:	100d883a 	mov	r6,r2
 800bf78:	d8800017 	ldw	r2,0(sp)
 800bf7c:	4251c83a 	sub	r8,r8,r9
 800bf80:	4012917a 	slli	r9,r8,5
 800bf84:	da000117 	ldw	r8,4(sp)
 800bf88:	4091c83a 	sub	r8,r8,r2
 800bf8c:	4251883a 	add	r8,r8,r9
 800bf90:	02000d0e 	bge	zero,r8,800bfc8 <__ratio+0x98>
 800bf94:	4010953a 	slli	r8,r8,20
 800bf98:	4421883a 	add	r16,r8,r16
 800bf9c:	9009883a 	mov	r4,r18
 800bfa0:	800b883a 	mov	r5,r16
 800bfa4:	180f883a 	mov	r7,r3
 800bfa8:	80111000 	call	8011100 <__divdf3>
 800bfac:	dfc00617 	ldw	ra,24(sp)
 800bfb0:	dcc00517 	ldw	r19,20(sp)
 800bfb4:	dc800417 	ldw	r18,16(sp)
 800bfb8:	dc400317 	ldw	r17,12(sp)
 800bfbc:	dc000217 	ldw	r16,8(sp)
 800bfc0:	dec00704 	addi	sp,sp,28
 800bfc4:	f800283a 	ret
 800bfc8:	4010953a 	slli	r8,r8,20
 800bfcc:	1a07c83a 	sub	r3,r3,r8
 800bfd0:	003ff206 	br	800bf9c <__alt_data_end+0xfc00bf9c>

0800bfd4 <_mprec_log10>:
 800bfd4:	defffe04 	addi	sp,sp,-8
 800bfd8:	dc000015 	stw	r16,0(sp)
 800bfdc:	dfc00115 	stw	ra,4(sp)
 800bfe0:	008005c4 	movi	r2,23
 800bfe4:	2021883a 	mov	r16,r4
 800bfe8:	11000d0e 	bge	r2,r4,800c020 <_mprec_log10+0x4c>
 800bfec:	0005883a 	mov	r2,zero
 800bff0:	00cffc34 	movhi	r3,16368
 800bff4:	843fffc4 	addi	r16,r16,-1
 800bff8:	1009883a 	mov	r4,r2
 800bffc:	180b883a 	mov	r5,r3
 800c000:	000d883a 	mov	r6,zero
 800c004:	01d00934 	movhi	r7,16420
 800c008:	8011cc40 	call	8011cc4 <__muldf3>
 800c00c:	803ff91e 	bne	r16,zero,800bff4 <__alt_data_end+0xfc00bff4>
 800c010:	dfc00117 	ldw	ra,4(sp)
 800c014:	dc000017 	ldw	r16,0(sp)
 800c018:	dec00204 	addi	sp,sp,8
 800c01c:	f800283a 	ret
 800c020:	202090fa 	slli	r16,r4,3
 800c024:	00820074 	movhi	r2,2049
 800c028:	109b6f04 	addi	r2,r2,28092
 800c02c:	1421883a 	add	r16,r2,r16
 800c030:	80800017 	ldw	r2,0(r16)
 800c034:	80c00117 	ldw	r3,4(r16)
 800c038:	dfc00117 	ldw	ra,4(sp)
 800c03c:	dc000017 	ldw	r16,0(sp)
 800c040:	dec00204 	addi	sp,sp,8
 800c044:	f800283a 	ret

0800c048 <__copybits>:
 800c048:	297fffc4 	addi	r5,r5,-1
 800c04c:	280fd17a 	srai	r7,r5,5
 800c050:	30c00417 	ldw	r3,16(r6)
 800c054:	30800504 	addi	r2,r6,20
 800c058:	39c00044 	addi	r7,r7,1
 800c05c:	18c7883a 	add	r3,r3,r3
 800c060:	39cf883a 	add	r7,r7,r7
 800c064:	18c7883a 	add	r3,r3,r3
 800c068:	39cf883a 	add	r7,r7,r7
 800c06c:	10c7883a 	add	r3,r2,r3
 800c070:	21cf883a 	add	r7,r4,r7
 800c074:	10c00d2e 	bgeu	r2,r3,800c0ac <__copybits+0x64>
 800c078:	200b883a 	mov	r5,r4
 800c07c:	12000017 	ldw	r8,0(r2)
 800c080:	29400104 	addi	r5,r5,4
 800c084:	10800104 	addi	r2,r2,4
 800c088:	2a3fff15 	stw	r8,-4(r5)
 800c08c:	10fffb36 	bltu	r2,r3,800c07c <__alt_data_end+0xfc00c07c>
 800c090:	1985c83a 	sub	r2,r3,r6
 800c094:	10bffac4 	addi	r2,r2,-21
 800c098:	1004d0ba 	srli	r2,r2,2
 800c09c:	10800044 	addi	r2,r2,1
 800c0a0:	1085883a 	add	r2,r2,r2
 800c0a4:	1085883a 	add	r2,r2,r2
 800c0a8:	2089883a 	add	r4,r4,r2
 800c0ac:	21c0032e 	bgeu	r4,r7,800c0bc <__copybits+0x74>
 800c0b0:	20000015 	stw	zero,0(r4)
 800c0b4:	21000104 	addi	r4,r4,4
 800c0b8:	21fffd36 	bltu	r4,r7,800c0b0 <__alt_data_end+0xfc00c0b0>
 800c0bc:	f800283a 	ret

0800c0c0 <__any_on>:
 800c0c0:	20c00417 	ldw	r3,16(r4)
 800c0c4:	2805d17a 	srai	r2,r5,5
 800c0c8:	21000504 	addi	r4,r4,20
 800c0cc:	18800d0e 	bge	r3,r2,800c104 <__any_on+0x44>
 800c0d0:	18c7883a 	add	r3,r3,r3
 800c0d4:	18c7883a 	add	r3,r3,r3
 800c0d8:	20c7883a 	add	r3,r4,r3
 800c0dc:	20c0192e 	bgeu	r4,r3,800c144 <__any_on+0x84>
 800c0e0:	18bfff17 	ldw	r2,-4(r3)
 800c0e4:	18ffff04 	addi	r3,r3,-4
 800c0e8:	1000041e 	bne	r2,zero,800c0fc <__any_on+0x3c>
 800c0ec:	20c0142e 	bgeu	r4,r3,800c140 <__any_on+0x80>
 800c0f0:	18ffff04 	addi	r3,r3,-4
 800c0f4:	19400017 	ldw	r5,0(r3)
 800c0f8:	283ffc26 	beq	r5,zero,800c0ec <__alt_data_end+0xfc00c0ec>
 800c0fc:	00800044 	movi	r2,1
 800c100:	f800283a 	ret
 800c104:	10c00a0e 	bge	r2,r3,800c130 <__any_on+0x70>
 800c108:	1085883a 	add	r2,r2,r2
 800c10c:	1085883a 	add	r2,r2,r2
 800c110:	294007cc 	andi	r5,r5,31
 800c114:	2087883a 	add	r3,r4,r2
 800c118:	283ff026 	beq	r5,zero,800c0dc <__alt_data_end+0xfc00c0dc>
 800c11c:	19800017 	ldw	r6,0(r3)
 800c120:	3144d83a 	srl	r2,r6,r5
 800c124:	114a983a 	sll	r5,r2,r5
 800c128:	29bff41e 	bne	r5,r6,800c0fc <__alt_data_end+0xfc00c0fc>
 800c12c:	003feb06 	br	800c0dc <__alt_data_end+0xfc00c0dc>
 800c130:	1085883a 	add	r2,r2,r2
 800c134:	1085883a 	add	r2,r2,r2
 800c138:	2087883a 	add	r3,r4,r2
 800c13c:	003fe706 	br	800c0dc <__alt_data_end+0xfc00c0dc>
 800c140:	f800283a 	ret
 800c144:	0005883a 	mov	r2,zero
 800c148:	f800283a 	ret

0800c14c <_realloc_r>:
 800c14c:	defff604 	addi	sp,sp,-40
 800c150:	dcc00315 	stw	r19,12(sp)
 800c154:	dc400115 	stw	r17,4(sp)
 800c158:	dfc00915 	stw	ra,36(sp)
 800c15c:	df000815 	stw	fp,32(sp)
 800c160:	ddc00715 	stw	r23,28(sp)
 800c164:	dd800615 	stw	r22,24(sp)
 800c168:	dd400515 	stw	r21,20(sp)
 800c16c:	dd000415 	stw	r20,16(sp)
 800c170:	dc800215 	stw	r18,8(sp)
 800c174:	dc000015 	stw	r16,0(sp)
 800c178:	2827883a 	mov	r19,r5
 800c17c:	3023883a 	mov	r17,r6
 800c180:	2800bf26 	beq	r5,zero,800c480 <_realloc_r+0x334>
 800c184:	2025883a 	mov	r18,r4
 800c188:	80138140 	call	8013814 <__malloc_lock>
 800c18c:	98ffff17 	ldw	r3,-4(r19)
 800c190:	01bfff04 	movi	r6,-4
 800c194:	890002c4 	addi	r4,r17,11
 800c198:	01c00584 	movi	r7,22
 800c19c:	9d7ffe04 	addi	r21,r19,-8
 800c1a0:	19a0703a 	and	r16,r3,r6
 800c1a4:	39003f2e 	bgeu	r7,r4,800c2a4 <_realloc_r+0x158>
 800c1a8:	053ffe04 	movi	r20,-8
 800c1ac:	2528703a 	and	r20,r4,r20
 800c1b0:	a00f883a 	mov	r7,r20
 800c1b4:	a0008216 	blt	r20,zero,800c3c0 <_realloc_r+0x274>
 800c1b8:	a4408136 	bltu	r20,r17,800c3c0 <_realloc_r+0x274>
 800c1bc:	81c03c0e 	bge	r16,r7,800c2b0 <_realloc_r+0x164>
 800c1c0:	07020074 	movhi	fp,2049
 800c1c4:	e71c0f04 	addi	fp,fp,28732
 800c1c8:	e1000217 	ldw	r4,8(fp)
 800c1cc:	ac05883a 	add	r2,r21,r16
 800c1d0:	2080bf26 	beq	r4,r2,800c4d0 <_realloc_r+0x384>
 800c1d4:	11000117 	ldw	r4,4(r2)
 800c1d8:	023fff84 	movi	r8,-2
 800c1dc:	2210703a 	and	r8,r4,r8
 800c1e0:	1211883a 	add	r8,r2,r8
 800c1e4:	41400117 	ldw	r5,4(r8)
 800c1e8:	2940004c 	andi	r5,r5,1
 800c1ec:	28004a1e 	bne	r5,zero,800c318 <_realloc_r+0x1cc>
 800c1f0:	017fff04 	movi	r5,-4
 800c1f4:	2148703a 	and	r4,r4,r5
 800c1f8:	2409883a 	add	r4,r4,r16
 800c1fc:	21c0ad0e 	bge	r4,r7,800c4b4 <_realloc_r+0x368>
 800c200:	18c0004c 	andi	r3,r3,1
 800c204:	18007f1e 	bne	r3,zero,800c404 <_realloc_r+0x2b8>
 800c208:	9dfffe17 	ldw	r23,-8(r19)
 800c20c:	adefc83a 	sub	r23,r21,r23
 800c210:	bd800117 	ldw	r22,4(r23)
 800c214:	b14a703a 	and	r5,r22,r5
 800c218:	216d883a 	add	r22,r4,r5
 800c21c:	b1c04516 	blt	r22,r7,800c334 <_realloc_r+0x1e8>
 800c220:	10c00317 	ldw	r3,12(r2)
 800c224:	10800217 	ldw	r2,8(r2)
 800c228:	81bfff04 	addi	r6,r16,-4
 800c22c:	bc400204 	addi	r17,r23,8
 800c230:	10c00315 	stw	r3,12(r2)
 800c234:	18800215 	stw	r2,8(r3)
 800c238:	b9400217 	ldw	r5,8(r23)
 800c23c:	b8c00317 	ldw	r3,12(r23)
 800c240:	00800904 	movi	r2,36
 800c244:	28c00315 	stw	r3,12(r5)
 800c248:	19400215 	stw	r5,8(r3)
 800c24c:	1180ef36 	bltu	r2,r6,800c60c <_realloc_r+0x4c0>
 800c250:	008004c4 	movi	r2,19
 800c254:	1180da2e 	bgeu	r2,r6,800c5c0 <_realloc_r+0x474>
 800c258:	98800017 	ldw	r2,0(r19)
 800c25c:	b8800215 	stw	r2,8(r23)
 800c260:	98800117 	ldw	r2,4(r19)
 800c264:	b8800315 	stw	r2,12(r23)
 800c268:	008006c4 	movi	r2,27
 800c26c:	1180fc2e 	bgeu	r2,r6,800c660 <_realloc_r+0x514>
 800c270:	98800217 	ldw	r2,8(r19)
 800c274:	b8800415 	stw	r2,16(r23)
 800c278:	98800317 	ldw	r2,12(r19)
 800c27c:	b8800515 	stw	r2,20(r23)
 800c280:	00800904 	movi	r2,36
 800c284:	3080421e 	bne	r6,r2,800c390 <_realloc_r+0x244>
 800c288:	98800417 	ldw	r2,16(r19)
 800c28c:	9cc00604 	addi	r19,r19,24
 800c290:	b8c00804 	addi	r3,r23,32
 800c294:	b8800615 	stw	r2,24(r23)
 800c298:	98bfff17 	ldw	r2,-4(r19)
 800c29c:	b8800715 	stw	r2,28(r23)
 800c2a0:	00003d06 	br	800c398 <_realloc_r+0x24c>
 800c2a4:	01c00404 	movi	r7,16
 800c2a8:	3829883a 	mov	r20,r7
 800c2ac:	003fc206 	br	800c1b8 <__alt_data_end+0xfc00c1b8>
 800c2b0:	9823883a 	mov	r17,r19
 800c2b4:	850fc83a 	sub	r7,r16,r20
 800c2b8:	008003c4 	movi	r2,15
 800c2bc:	18c0004c 	andi	r3,r3,1
 800c2c0:	11c04336 	bltu	r2,r7,800c3d0 <_realloc_r+0x284>
 800c2c4:	1c06b03a 	or	r3,r3,r16
 800c2c8:	a8c00115 	stw	r3,4(r21)
 800c2cc:	ac21883a 	add	r16,r21,r16
 800c2d0:	80c00117 	ldw	r3,4(r16)
 800c2d4:	18c00054 	ori	r3,r3,1
 800c2d8:	80c00115 	stw	r3,4(r16)
 800c2dc:	9009883a 	mov	r4,r18
 800c2e0:	80138340 	call	8013834 <__malloc_unlock>
 800c2e4:	8805883a 	mov	r2,r17
 800c2e8:	dfc00917 	ldw	ra,36(sp)
 800c2ec:	df000817 	ldw	fp,32(sp)
 800c2f0:	ddc00717 	ldw	r23,28(sp)
 800c2f4:	dd800617 	ldw	r22,24(sp)
 800c2f8:	dd400517 	ldw	r21,20(sp)
 800c2fc:	dd000417 	ldw	r20,16(sp)
 800c300:	dcc00317 	ldw	r19,12(sp)
 800c304:	dc800217 	ldw	r18,8(sp)
 800c308:	dc400117 	ldw	r17,4(sp)
 800c30c:	dc000017 	ldw	r16,0(sp)
 800c310:	dec00a04 	addi	sp,sp,40
 800c314:	f800283a 	ret
 800c318:	18c0004c 	andi	r3,r3,1
 800c31c:	1800391e 	bne	r3,zero,800c404 <_realloc_r+0x2b8>
 800c320:	9dfffe17 	ldw	r23,-8(r19)
 800c324:	00bfff04 	movi	r2,-4
 800c328:	adefc83a 	sub	r23,r21,r23
 800c32c:	b9400117 	ldw	r5,4(r23)
 800c330:	288a703a 	and	r5,r5,r2
 800c334:	2c2d883a 	add	r22,r5,r16
 800c338:	b1c03216 	blt	r22,r7,800c404 <_realloc_r+0x2b8>
 800c33c:	b8800317 	ldw	r2,12(r23)
 800c340:	b8c00217 	ldw	r3,8(r23)
 800c344:	81bfff04 	addi	r6,r16,-4
 800c348:	01000904 	movi	r4,36
 800c34c:	18800315 	stw	r2,12(r3)
 800c350:	10c00215 	stw	r3,8(r2)
 800c354:	bc400204 	addi	r17,r23,8
 800c358:	2180ac36 	bltu	r4,r6,800c60c <_realloc_r+0x4c0>
 800c35c:	008004c4 	movi	r2,19
 800c360:	1180972e 	bgeu	r2,r6,800c5c0 <_realloc_r+0x474>
 800c364:	98800017 	ldw	r2,0(r19)
 800c368:	b8800215 	stw	r2,8(r23)
 800c36c:	98800117 	ldw	r2,4(r19)
 800c370:	b8800315 	stw	r2,12(r23)
 800c374:	008006c4 	movi	r2,27
 800c378:	1180b92e 	bgeu	r2,r6,800c660 <_realloc_r+0x514>
 800c37c:	98800217 	ldw	r2,8(r19)
 800c380:	b8800415 	stw	r2,16(r23)
 800c384:	98800317 	ldw	r2,12(r19)
 800c388:	b8800515 	stw	r2,20(r23)
 800c38c:	313fbe26 	beq	r6,r4,800c288 <__alt_data_end+0xfc00c288>
 800c390:	b8c00604 	addi	r3,r23,24
 800c394:	9cc00404 	addi	r19,r19,16
 800c398:	98800017 	ldw	r2,0(r19)
 800c39c:	b021883a 	mov	r16,r22
 800c3a0:	b82b883a 	mov	r21,r23
 800c3a4:	18800015 	stw	r2,0(r3)
 800c3a8:	98800117 	ldw	r2,4(r19)
 800c3ac:	18800115 	stw	r2,4(r3)
 800c3b0:	98800217 	ldw	r2,8(r19)
 800c3b4:	18800215 	stw	r2,8(r3)
 800c3b8:	b8c00117 	ldw	r3,4(r23)
 800c3bc:	003fbd06 	br	800c2b4 <__alt_data_end+0xfc00c2b4>
 800c3c0:	00800304 	movi	r2,12
 800c3c4:	90800015 	stw	r2,0(r18)
 800c3c8:	0005883a 	mov	r2,zero
 800c3cc:	003fc606 	br	800c2e8 <__alt_data_end+0xfc00c2e8>
 800c3d0:	1d06b03a 	or	r3,r3,r20
 800c3d4:	ad0b883a 	add	r5,r21,r20
 800c3d8:	a8c00115 	stw	r3,4(r21)
 800c3dc:	38800054 	ori	r2,r7,1
 800c3e0:	28800115 	stw	r2,4(r5)
 800c3e4:	29cf883a 	add	r7,r5,r7
 800c3e8:	38800117 	ldw	r2,4(r7)
 800c3ec:	9009883a 	mov	r4,r18
 800c3f0:	29400204 	addi	r5,r5,8
 800c3f4:	10800054 	ori	r2,r2,1
 800c3f8:	38800115 	stw	r2,4(r7)
 800c3fc:	800a1ec0 	call	800a1ec <_free_r>
 800c400:	003fb606 	br	800c2dc <__alt_data_end+0xfc00c2dc>
 800c404:	880b883a 	mov	r5,r17
 800c408:	9009883a 	mov	r4,r18
 800c40c:	8002d480 	call	8002d48 <_malloc_r>
 800c410:	1023883a 	mov	r17,r2
 800c414:	1000aa26 	beq	r2,zero,800c6c0 <_realloc_r+0x574>
 800c418:	98ffff17 	ldw	r3,-4(r19)
 800c41c:	113ffe04 	addi	r4,r2,-8
 800c420:	00bfff84 	movi	r2,-2
 800c424:	1884703a 	and	r2,r3,r2
 800c428:	a885883a 	add	r2,r21,r2
 800c42c:	20808626 	beq	r4,r2,800c648 <_realloc_r+0x4fc>
 800c430:	81bfff04 	addi	r6,r16,-4
 800c434:	00800904 	movi	r2,36
 800c438:	11807036 	bltu	r2,r6,800c5fc <_realloc_r+0x4b0>
 800c43c:	00c004c4 	movi	r3,19
 800c440:	19805636 	bltu	r3,r6,800c59c <_realloc_r+0x450>
 800c444:	8805883a 	mov	r2,r17
 800c448:	9807883a 	mov	r3,r19
 800c44c:	19000017 	ldw	r4,0(r3)
 800c450:	11000015 	stw	r4,0(r2)
 800c454:	19000117 	ldw	r4,4(r3)
 800c458:	11000115 	stw	r4,4(r2)
 800c45c:	18c00217 	ldw	r3,8(r3)
 800c460:	10c00215 	stw	r3,8(r2)
 800c464:	980b883a 	mov	r5,r19
 800c468:	9009883a 	mov	r4,r18
 800c46c:	800a1ec0 	call	800a1ec <_free_r>
 800c470:	9009883a 	mov	r4,r18
 800c474:	80138340 	call	8013834 <__malloc_unlock>
 800c478:	8805883a 	mov	r2,r17
 800c47c:	003f9a06 	br	800c2e8 <__alt_data_end+0xfc00c2e8>
 800c480:	300b883a 	mov	r5,r6
 800c484:	dfc00917 	ldw	ra,36(sp)
 800c488:	df000817 	ldw	fp,32(sp)
 800c48c:	ddc00717 	ldw	r23,28(sp)
 800c490:	dd800617 	ldw	r22,24(sp)
 800c494:	dd400517 	ldw	r21,20(sp)
 800c498:	dd000417 	ldw	r20,16(sp)
 800c49c:	dcc00317 	ldw	r19,12(sp)
 800c4a0:	dc800217 	ldw	r18,8(sp)
 800c4a4:	dc400117 	ldw	r17,4(sp)
 800c4a8:	dc000017 	ldw	r16,0(sp)
 800c4ac:	dec00a04 	addi	sp,sp,40
 800c4b0:	8002d481 	jmpi	8002d48 <_malloc_r>
 800c4b4:	11400317 	ldw	r5,12(r2)
 800c4b8:	10800217 	ldw	r2,8(r2)
 800c4bc:	9823883a 	mov	r17,r19
 800c4c0:	2021883a 	mov	r16,r4
 800c4c4:	11400315 	stw	r5,12(r2)
 800c4c8:	28800215 	stw	r2,8(r5)
 800c4cc:	003f7906 	br	800c2b4 <__alt_data_end+0xfc00c2b4>
 800c4d0:	21000117 	ldw	r4,4(r4)
 800c4d4:	00bfff04 	movi	r2,-4
 800c4d8:	a1800404 	addi	r6,r20,16
 800c4dc:	2088703a 	and	r4,r4,r2
 800c4e0:	2409883a 	add	r4,r4,r16
 800c4e4:	2180380e 	bge	r4,r6,800c5c8 <_realloc_r+0x47c>
 800c4e8:	18c0004c 	andi	r3,r3,1
 800c4ec:	183fc51e 	bne	r3,zero,800c404 <__alt_data_end+0xfc00c404>
 800c4f0:	9dfffe17 	ldw	r23,-8(r19)
 800c4f4:	adefc83a 	sub	r23,r21,r23
 800c4f8:	b9400117 	ldw	r5,4(r23)
 800c4fc:	288a703a 	and	r5,r5,r2
 800c500:	216d883a 	add	r22,r4,r5
 800c504:	b1bf8b16 	blt	r22,r6,800c334 <__alt_data_end+0xfc00c334>
 800c508:	b8800317 	ldw	r2,12(r23)
 800c50c:	b8c00217 	ldw	r3,8(r23)
 800c510:	81bfff04 	addi	r6,r16,-4
 800c514:	01000904 	movi	r4,36
 800c518:	18800315 	stw	r2,12(r3)
 800c51c:	10c00215 	stw	r3,8(r2)
 800c520:	bc400204 	addi	r17,r23,8
 800c524:	21805a36 	bltu	r4,r6,800c690 <_realloc_r+0x544>
 800c528:	008004c4 	movi	r2,19
 800c52c:	1180562e 	bgeu	r2,r6,800c688 <_realloc_r+0x53c>
 800c530:	98800017 	ldw	r2,0(r19)
 800c534:	b8800215 	stw	r2,8(r23)
 800c538:	98800117 	ldw	r2,4(r19)
 800c53c:	b8800315 	stw	r2,12(r23)
 800c540:	008006c4 	movi	r2,27
 800c544:	11805636 	bltu	r2,r6,800c6a0 <_realloc_r+0x554>
 800c548:	b8800404 	addi	r2,r23,16
 800c54c:	9cc00204 	addi	r19,r19,8
 800c550:	98c00017 	ldw	r3,0(r19)
 800c554:	10c00015 	stw	r3,0(r2)
 800c558:	98c00117 	ldw	r3,4(r19)
 800c55c:	10c00115 	stw	r3,4(r2)
 800c560:	98c00217 	ldw	r3,8(r19)
 800c564:	10c00215 	stw	r3,8(r2)
 800c568:	bd07883a 	add	r3,r23,r20
 800c56c:	b505c83a 	sub	r2,r22,r20
 800c570:	e0c00215 	stw	r3,8(fp)
 800c574:	10800054 	ori	r2,r2,1
 800c578:	18800115 	stw	r2,4(r3)
 800c57c:	b8800117 	ldw	r2,4(r23)
 800c580:	9009883a 	mov	r4,r18
 800c584:	1080004c 	andi	r2,r2,1
 800c588:	a0a8b03a 	or	r20,r20,r2
 800c58c:	bd000115 	stw	r20,4(r23)
 800c590:	80138340 	call	8013834 <__malloc_unlock>
 800c594:	8805883a 	mov	r2,r17
 800c598:	003f5306 	br	800c2e8 <__alt_data_end+0xfc00c2e8>
 800c59c:	98c00017 	ldw	r3,0(r19)
 800c5a0:	88c00015 	stw	r3,0(r17)
 800c5a4:	98c00117 	ldw	r3,4(r19)
 800c5a8:	88c00115 	stw	r3,4(r17)
 800c5ac:	00c006c4 	movi	r3,27
 800c5b0:	19801d36 	bltu	r3,r6,800c628 <_realloc_r+0x4dc>
 800c5b4:	88800204 	addi	r2,r17,8
 800c5b8:	98c00204 	addi	r3,r19,8
 800c5bc:	003fa306 	br	800c44c <__alt_data_end+0xfc00c44c>
 800c5c0:	8807883a 	mov	r3,r17
 800c5c4:	003f7406 	br	800c398 <__alt_data_end+0xfc00c398>
 800c5c8:	ad2b883a 	add	r21,r21,r20
 800c5cc:	2505c83a 	sub	r2,r4,r20
 800c5d0:	e5400215 	stw	r21,8(fp)
 800c5d4:	10800054 	ori	r2,r2,1
 800c5d8:	a8800115 	stw	r2,4(r21)
 800c5dc:	98bfff17 	ldw	r2,-4(r19)
 800c5e0:	9009883a 	mov	r4,r18
 800c5e4:	1080004c 	andi	r2,r2,1
 800c5e8:	a0a8b03a 	or	r20,r20,r2
 800c5ec:	9d3fff15 	stw	r20,-4(r19)
 800c5f0:	80138340 	call	8013834 <__malloc_unlock>
 800c5f4:	9805883a 	mov	r2,r19
 800c5f8:	003f3b06 	br	800c2e8 <__alt_data_end+0xfc00c2e8>
 800c5fc:	8809883a 	mov	r4,r17
 800c600:	980b883a 	mov	r5,r19
 800c604:	800afa80 	call	800afa8 <memmove>
 800c608:	003f9606 	br	800c464 <__alt_data_end+0xfc00c464>
 800c60c:	8809883a 	mov	r4,r17
 800c610:	980b883a 	mov	r5,r19
 800c614:	800afa80 	call	800afa8 <memmove>
 800c618:	b8c00117 	ldw	r3,4(r23)
 800c61c:	b021883a 	mov	r16,r22
 800c620:	b82b883a 	mov	r21,r23
 800c624:	003f2306 	br	800c2b4 <__alt_data_end+0xfc00c2b4>
 800c628:	98c00217 	ldw	r3,8(r19)
 800c62c:	88c00215 	stw	r3,8(r17)
 800c630:	98c00317 	ldw	r3,12(r19)
 800c634:	88c00315 	stw	r3,12(r17)
 800c638:	30800c26 	beq	r6,r2,800c66c <_realloc_r+0x520>
 800c63c:	88800404 	addi	r2,r17,16
 800c640:	98c00404 	addi	r3,r19,16
 800c644:	003f8106 	br	800c44c <__alt_data_end+0xfc00c44c>
 800c648:	893fff17 	ldw	r4,-4(r17)
 800c64c:	00bfff04 	movi	r2,-4
 800c650:	9823883a 	mov	r17,r19
 800c654:	2084703a 	and	r2,r4,r2
 800c658:	80a1883a 	add	r16,r16,r2
 800c65c:	003f1506 	br	800c2b4 <__alt_data_end+0xfc00c2b4>
 800c660:	b8c00404 	addi	r3,r23,16
 800c664:	9cc00204 	addi	r19,r19,8
 800c668:	003f4b06 	br	800c398 <__alt_data_end+0xfc00c398>
 800c66c:	99000417 	ldw	r4,16(r19)
 800c670:	88800604 	addi	r2,r17,24
 800c674:	98c00604 	addi	r3,r19,24
 800c678:	89000415 	stw	r4,16(r17)
 800c67c:	99000517 	ldw	r4,20(r19)
 800c680:	89000515 	stw	r4,20(r17)
 800c684:	003f7106 	br	800c44c <__alt_data_end+0xfc00c44c>
 800c688:	8805883a 	mov	r2,r17
 800c68c:	003fb006 	br	800c550 <__alt_data_end+0xfc00c550>
 800c690:	8809883a 	mov	r4,r17
 800c694:	980b883a 	mov	r5,r19
 800c698:	800afa80 	call	800afa8 <memmove>
 800c69c:	003fb206 	br	800c568 <__alt_data_end+0xfc00c568>
 800c6a0:	98800217 	ldw	r2,8(r19)
 800c6a4:	b8800415 	stw	r2,16(r23)
 800c6a8:	98800317 	ldw	r2,12(r19)
 800c6ac:	b8800515 	stw	r2,20(r23)
 800c6b0:	31000726 	beq	r6,r4,800c6d0 <_realloc_r+0x584>
 800c6b4:	b8800604 	addi	r2,r23,24
 800c6b8:	9cc00404 	addi	r19,r19,16
 800c6bc:	003fa406 	br	800c550 <__alt_data_end+0xfc00c550>
 800c6c0:	9009883a 	mov	r4,r18
 800c6c4:	80138340 	call	8013834 <__malloc_unlock>
 800c6c8:	0005883a 	mov	r2,zero
 800c6cc:	003f0606 	br	800c2e8 <__alt_data_end+0xfc00c2e8>
 800c6d0:	98c00417 	ldw	r3,16(r19)
 800c6d4:	9cc00604 	addi	r19,r19,24
 800c6d8:	b8800804 	addi	r2,r23,32
 800c6dc:	b8c00615 	stw	r3,24(r23)
 800c6e0:	98ffff17 	ldw	r3,-4(r19)
 800c6e4:	b8c00715 	stw	r3,28(r23)
 800c6e8:	003f9906 	br	800c550 <__alt_data_end+0xfc00c550>

0800c6ec <__fpclassifyd>:
 800c6ec:	00a00034 	movhi	r2,32768
 800c6f0:	10bfffc4 	addi	r2,r2,-1
 800c6f4:	2884703a 	and	r2,r5,r2
 800c6f8:	10000726 	beq	r2,zero,800c718 <__fpclassifyd+0x2c>
 800c6fc:	00fffc34 	movhi	r3,65520
 800c700:	019ff834 	movhi	r6,32736
 800c704:	28c7883a 	add	r3,r5,r3
 800c708:	31bfffc4 	addi	r6,r6,-1
 800c70c:	30c00536 	bltu	r6,r3,800c724 <__fpclassifyd+0x38>
 800c710:	00800104 	movi	r2,4
 800c714:	f800283a 	ret
 800c718:	2000021e 	bne	r4,zero,800c724 <__fpclassifyd+0x38>
 800c71c:	00800084 	movi	r2,2
 800c720:	f800283a 	ret
 800c724:	00dffc34 	movhi	r3,32752
 800c728:	019ff834 	movhi	r6,32736
 800c72c:	28cb883a 	add	r5,r5,r3
 800c730:	31bfffc4 	addi	r6,r6,-1
 800c734:	317ff62e 	bgeu	r6,r5,800c710 <__alt_data_end+0xfc00c710>
 800c738:	01400434 	movhi	r5,16
 800c73c:	297fffc4 	addi	r5,r5,-1
 800c740:	28800236 	bltu	r5,r2,800c74c <__fpclassifyd+0x60>
 800c744:	008000c4 	movi	r2,3
 800c748:	f800283a 	ret
 800c74c:	10c00226 	beq	r2,r3,800c758 <__fpclassifyd+0x6c>
 800c750:	0005883a 	mov	r2,zero
 800c754:	f800283a 	ret
 800c758:	2005003a 	cmpeq	r2,r4,zero
 800c75c:	f800283a 	ret

0800c760 <__sread>:
 800c760:	defffe04 	addi	sp,sp,-8
 800c764:	dc000015 	stw	r16,0(sp)
 800c768:	2821883a 	mov	r16,r5
 800c76c:	2940038f 	ldh	r5,14(r5)
 800c770:	dfc00115 	stw	ra,4(sp)
 800c774:	800f7100 	call	800f710 <_read_r>
 800c778:	10000716 	blt	r2,zero,800c798 <__sread+0x38>
 800c77c:	80c01417 	ldw	r3,80(r16)
 800c780:	1887883a 	add	r3,r3,r2
 800c784:	80c01415 	stw	r3,80(r16)
 800c788:	dfc00117 	ldw	ra,4(sp)
 800c78c:	dc000017 	ldw	r16,0(sp)
 800c790:	dec00204 	addi	sp,sp,8
 800c794:	f800283a 	ret
 800c798:	80c0030b 	ldhu	r3,12(r16)
 800c79c:	18fbffcc 	andi	r3,r3,61439
 800c7a0:	80c0030d 	sth	r3,12(r16)
 800c7a4:	dfc00117 	ldw	ra,4(sp)
 800c7a8:	dc000017 	ldw	r16,0(sp)
 800c7ac:	dec00204 	addi	sp,sp,8
 800c7b0:	f800283a 	ret

0800c7b4 <__seofread>:
 800c7b4:	0005883a 	mov	r2,zero
 800c7b8:	f800283a 	ret

0800c7bc <__swrite>:
 800c7bc:	2880030b 	ldhu	r2,12(r5)
 800c7c0:	defffb04 	addi	sp,sp,-20
 800c7c4:	dcc00315 	stw	r19,12(sp)
 800c7c8:	dc800215 	stw	r18,8(sp)
 800c7cc:	dc400115 	stw	r17,4(sp)
 800c7d0:	dc000015 	stw	r16,0(sp)
 800c7d4:	dfc00415 	stw	ra,16(sp)
 800c7d8:	10c0400c 	andi	r3,r2,256
 800c7dc:	2821883a 	mov	r16,r5
 800c7e0:	2027883a 	mov	r19,r4
 800c7e4:	3025883a 	mov	r18,r6
 800c7e8:	3823883a 	mov	r17,r7
 800c7ec:	18000526 	beq	r3,zero,800c804 <__swrite+0x48>
 800c7f0:	2940038f 	ldh	r5,14(r5)
 800c7f4:	000d883a 	mov	r6,zero
 800c7f8:	01c00084 	movi	r7,2
 800c7fc:	800f6b40 	call	800f6b4 <_lseek_r>
 800c800:	8080030b 	ldhu	r2,12(r16)
 800c804:	8140038f 	ldh	r5,14(r16)
 800c808:	10bbffcc 	andi	r2,r2,61439
 800c80c:	9809883a 	mov	r4,r19
 800c810:	900d883a 	mov	r6,r18
 800c814:	880f883a 	mov	r7,r17
 800c818:	8080030d 	sth	r2,12(r16)
 800c81c:	dfc00417 	ldw	ra,16(sp)
 800c820:	dcc00317 	ldw	r19,12(sp)
 800c824:	dc800217 	ldw	r18,8(sp)
 800c828:	dc400117 	ldw	r17,4(sp)
 800c82c:	dc000017 	ldw	r16,0(sp)
 800c830:	dec00504 	addi	sp,sp,20
 800c834:	800f1901 	jmpi	800f190 <_write_r>

0800c838 <__sseek>:
 800c838:	defffe04 	addi	sp,sp,-8
 800c83c:	dc000015 	stw	r16,0(sp)
 800c840:	2821883a 	mov	r16,r5
 800c844:	2940038f 	ldh	r5,14(r5)
 800c848:	dfc00115 	stw	ra,4(sp)
 800c84c:	800f6b40 	call	800f6b4 <_lseek_r>
 800c850:	00ffffc4 	movi	r3,-1
 800c854:	10c00826 	beq	r2,r3,800c878 <__sseek+0x40>
 800c858:	80c0030b 	ldhu	r3,12(r16)
 800c85c:	80801415 	stw	r2,80(r16)
 800c860:	18c40014 	ori	r3,r3,4096
 800c864:	80c0030d 	sth	r3,12(r16)
 800c868:	dfc00117 	ldw	ra,4(sp)
 800c86c:	dc000017 	ldw	r16,0(sp)
 800c870:	dec00204 	addi	sp,sp,8
 800c874:	f800283a 	ret
 800c878:	80c0030b 	ldhu	r3,12(r16)
 800c87c:	18fbffcc 	andi	r3,r3,61439
 800c880:	80c0030d 	sth	r3,12(r16)
 800c884:	dfc00117 	ldw	ra,4(sp)
 800c888:	dc000017 	ldw	r16,0(sp)
 800c88c:	dec00204 	addi	sp,sp,8
 800c890:	f800283a 	ret

0800c894 <__sclose>:
 800c894:	2940038f 	ldh	r5,14(r5)
 800c898:	800f1ec1 	jmpi	800f1ec <_close_r>

0800c89c <__ssprint_r>:
 800c89c:	30800217 	ldw	r2,8(r6)
 800c8a0:	defff604 	addi	sp,sp,-40
 800c8a4:	ddc00715 	stw	r23,28(sp)
 800c8a8:	dcc00315 	stw	r19,12(sp)
 800c8ac:	dfc00915 	stw	ra,36(sp)
 800c8b0:	df000815 	stw	fp,32(sp)
 800c8b4:	dd800615 	stw	r22,24(sp)
 800c8b8:	dd400515 	stw	r21,20(sp)
 800c8bc:	dd000415 	stw	r20,16(sp)
 800c8c0:	dc800215 	stw	r18,8(sp)
 800c8c4:	dc400115 	stw	r17,4(sp)
 800c8c8:	dc000015 	stw	r16,0(sp)
 800c8cc:	3027883a 	mov	r19,r6
 800c8d0:	35c00017 	ldw	r23,0(r6)
 800c8d4:	10005526 	beq	r2,zero,800ca2c <__ssprint_r+0x190>
 800c8d8:	2029883a 	mov	r20,r4
 800c8dc:	29000017 	ldw	r4,0(r5)
 800c8e0:	2821883a 	mov	r16,r5
 800c8e4:	0039883a 	mov	fp,zero
 800c8e8:	0023883a 	mov	r17,zero
 800c8ec:	88003926 	beq	r17,zero,800c9d4 <__ssprint_r+0x138>
 800c8f0:	84800217 	ldw	r18,8(r16)
 800c8f4:	902d883a 	mov	r22,r18
 800c8f8:	8c803a36 	bltu	r17,r18,800c9e4 <__ssprint_r+0x148>
 800c8fc:	80c0030b 	ldhu	r3,12(r16)
 800c900:	1881200c 	andi	r2,r3,1152
 800c904:	10002626 	beq	r2,zero,800c9a0 <__ssprint_r+0x104>
 800c908:	80800517 	ldw	r2,20(r16)
 800c90c:	81400417 	ldw	r5,16(r16)
 800c910:	89c00044 	addi	r7,r17,1
 800c914:	108d883a 	add	r6,r2,r2
 800c918:	3085883a 	add	r2,r6,r2
 800c91c:	100cd7fa 	srli	r6,r2,31
 800c920:	216dc83a 	sub	r22,r4,r5
 800c924:	3d89883a 	add	r4,r7,r22
 800c928:	3085883a 	add	r2,r6,r2
 800c92c:	1025d07a 	srai	r18,r2,1
 800c930:	900d883a 	mov	r6,r18
 800c934:	9100022e 	bgeu	r18,r4,800c940 <__ssprint_r+0xa4>
 800c938:	2025883a 	mov	r18,r4
 800c93c:	200d883a 	mov	r6,r4
 800c940:	18c1000c 	andi	r3,r3,1024
 800c944:	a009883a 	mov	r4,r20
 800c948:	18002926 	beq	r3,zero,800c9f0 <__ssprint_r+0x154>
 800c94c:	300b883a 	mov	r5,r6
 800c950:	8002d480 	call	8002d48 <_malloc_r>
 800c954:	102b883a 	mov	r21,r2
 800c958:	10002b26 	beq	r2,zero,800ca08 <__ssprint_r+0x16c>
 800c95c:	81400417 	ldw	r5,16(r16)
 800c960:	1009883a 	mov	r4,r2
 800c964:	b00d883a 	mov	r6,r22
 800c968:	800ae700 	call	800ae70 <memcpy>
 800c96c:	8080030b 	ldhu	r2,12(r16)
 800c970:	00fedfc4 	movi	r3,-1153
 800c974:	10c4703a 	and	r2,r2,r3
 800c978:	10802014 	ori	r2,r2,128
 800c97c:	8080030d 	sth	r2,12(r16)
 800c980:	ad89883a 	add	r4,r21,r22
 800c984:	95adc83a 	sub	r22,r18,r22
 800c988:	84800515 	stw	r18,20(r16)
 800c98c:	85800215 	stw	r22,8(r16)
 800c990:	85400415 	stw	r21,16(r16)
 800c994:	81000015 	stw	r4,0(r16)
 800c998:	8825883a 	mov	r18,r17
 800c99c:	882d883a 	mov	r22,r17
 800c9a0:	e00b883a 	mov	r5,fp
 800c9a4:	b00d883a 	mov	r6,r22
 800c9a8:	800afa80 	call	800afa8 <memmove>
 800c9ac:	80c00217 	ldw	r3,8(r16)
 800c9b0:	81000017 	ldw	r4,0(r16)
 800c9b4:	98800217 	ldw	r2,8(r19)
 800c9b8:	1ca5c83a 	sub	r18,r3,r18
 800c9bc:	2589883a 	add	r4,r4,r22
 800c9c0:	84800215 	stw	r18,8(r16)
 800c9c4:	81000015 	stw	r4,0(r16)
 800c9c8:	1463c83a 	sub	r17,r2,r17
 800c9cc:	9c400215 	stw	r17,8(r19)
 800c9d0:	88001626 	beq	r17,zero,800ca2c <__ssprint_r+0x190>
 800c9d4:	bf000017 	ldw	fp,0(r23)
 800c9d8:	bc400117 	ldw	r17,4(r23)
 800c9dc:	bdc00204 	addi	r23,r23,8
 800c9e0:	003fc206 	br	800c8ec <__alt_data_end+0xfc00c8ec>
 800c9e4:	8825883a 	mov	r18,r17
 800c9e8:	882d883a 	mov	r22,r17
 800c9ec:	003fec06 	br	800c9a0 <__alt_data_end+0xfc00c9a0>
 800c9f0:	800c14c0 	call	800c14c <_realloc_r>
 800c9f4:	102b883a 	mov	r21,r2
 800c9f8:	103fe11e 	bne	r2,zero,800c980 <__alt_data_end+0xfc00c980>
 800c9fc:	81400417 	ldw	r5,16(r16)
 800ca00:	a009883a 	mov	r4,r20
 800ca04:	800a1ec0 	call	800a1ec <_free_r>
 800ca08:	80c0030b 	ldhu	r3,12(r16)
 800ca0c:	00800304 	movi	r2,12
 800ca10:	a0800015 	stw	r2,0(r20)
 800ca14:	18c01014 	ori	r3,r3,64
 800ca18:	80c0030d 	sth	r3,12(r16)
 800ca1c:	00bfffc4 	movi	r2,-1
 800ca20:	98000215 	stw	zero,8(r19)
 800ca24:	98000115 	stw	zero,4(r19)
 800ca28:	00000206 	br	800ca34 <__ssprint_r+0x198>
 800ca2c:	98000115 	stw	zero,4(r19)
 800ca30:	0005883a 	mov	r2,zero
 800ca34:	dfc00917 	ldw	ra,36(sp)
 800ca38:	df000817 	ldw	fp,32(sp)
 800ca3c:	ddc00717 	ldw	r23,28(sp)
 800ca40:	dd800617 	ldw	r22,24(sp)
 800ca44:	dd400517 	ldw	r21,20(sp)
 800ca48:	dd000417 	ldw	r20,16(sp)
 800ca4c:	dcc00317 	ldw	r19,12(sp)
 800ca50:	dc800217 	ldw	r18,8(sp)
 800ca54:	dc400117 	ldw	r17,4(sp)
 800ca58:	dc000017 	ldw	r16,0(sp)
 800ca5c:	dec00a04 	addi	sp,sp,40
 800ca60:	f800283a 	ret

0800ca64 <___svfiprintf_internal_r>:
 800ca64:	2880030b 	ldhu	r2,12(r5)
 800ca68:	deffc804 	addi	sp,sp,-224
 800ca6c:	dd403315 	stw	r21,204(sp)
 800ca70:	dfc03715 	stw	ra,220(sp)
 800ca74:	df003615 	stw	fp,216(sp)
 800ca78:	ddc03515 	stw	r23,212(sp)
 800ca7c:	dd803415 	stw	r22,208(sp)
 800ca80:	dd003215 	stw	r20,200(sp)
 800ca84:	dcc03115 	stw	r19,196(sp)
 800ca88:	dc803015 	stw	r18,192(sp)
 800ca8c:	dc402f15 	stw	r17,188(sp)
 800ca90:	dc002e15 	stw	r16,184(sp)
 800ca94:	d9402215 	stw	r5,136(sp)
 800ca98:	d9002915 	stw	r4,164(sp)
 800ca9c:	1080200c 	andi	r2,r2,128
 800caa0:	d9c02415 	stw	r7,144(sp)
 800caa4:	302b883a 	mov	r21,r6
 800caa8:	10000226 	beq	r2,zero,800cab4 <___svfiprintf_internal_r+0x50>
 800caac:	28800417 	ldw	r2,16(r5)
 800cab0:	10042526 	beq	r2,zero,800db48 <___svfiprintf_internal_r+0x10e4>
 800cab4:	d8801a04 	addi	r2,sp,104
 800cab8:	d8c019c4 	addi	r3,sp,103
 800cabc:	dc402917 	ldw	r17,164(sp)
 800cac0:	04c20074 	movhi	r19,2049
 800cac4:	10c9c83a 	sub	r4,r2,r3
 800cac8:	9cdba104 	addi	r19,r19,28292
 800cacc:	d8801e15 	stw	r2,120(sp)
 800cad0:	d8c01f15 	stw	r3,124(sp)
 800cad4:	dec01a15 	stw	sp,104(sp)
 800cad8:	d8001c15 	stw	zero,112(sp)
 800cadc:	d8001b15 	stw	zero,108(sp)
 800cae0:	d8002a15 	stw	zero,168(sp)
 800cae4:	d8002615 	stw	zero,152(sp)
 800cae8:	d811883a 	mov	r8,sp
 800caec:	d9002c15 	stw	r4,176(sp)
 800caf0:	a8800007 	ldb	r2,0(r21)
 800caf4:	1002af26 	beq	r2,zero,800d5b4 <___svfiprintf_internal_r+0xb50>
 800caf8:	01000944 	movi	r4,37
 800cafc:	1102ad26 	beq	r2,r4,800d5b4 <___svfiprintf_internal_r+0xb50>
 800cb00:	a805883a 	mov	r2,r21
 800cb04:	00000106 	br	800cb0c <___svfiprintf_internal_r+0xa8>
 800cb08:	19000326 	beq	r3,r4,800cb18 <___svfiprintf_internal_r+0xb4>
 800cb0c:	10800044 	addi	r2,r2,1
 800cb10:	10c00007 	ldb	r3,0(r2)
 800cb14:	183ffc1e 	bne	r3,zero,800cb08 <__alt_data_end+0xfc00cb08>
 800cb18:	1561c83a 	sub	r16,r2,r21
 800cb1c:	1025883a 	mov	r18,r2
 800cb20:	80000e26 	beq	r16,zero,800cb5c <___svfiprintf_internal_r+0xf8>
 800cb24:	d8c01c17 	ldw	r3,112(sp)
 800cb28:	d8801b17 	ldw	r2,108(sp)
 800cb2c:	45400015 	stw	r21,0(r8)
 800cb30:	1c07883a 	add	r3,r3,r16
 800cb34:	10800044 	addi	r2,r2,1
 800cb38:	d8c01c15 	stw	r3,112(sp)
 800cb3c:	44000115 	stw	r16,4(r8)
 800cb40:	d8801b15 	stw	r2,108(sp)
 800cb44:	00c001c4 	movi	r3,7
 800cb48:	18832616 	blt	r3,r2,800d7e4 <___svfiprintf_internal_r+0xd80>
 800cb4c:	42000204 	addi	r8,r8,8
 800cb50:	d9402617 	ldw	r5,152(sp)
 800cb54:	2c0b883a 	add	r5,r5,r16
 800cb58:	d9402615 	stw	r5,152(sp)
 800cb5c:	90800007 	ldb	r2,0(r18)
 800cb60:	1002b226 	beq	r2,zero,800d62c <___svfiprintf_internal_r+0xbc8>
 800cb64:	00bfffc4 	movi	r2,-1
 800cb68:	95400044 	addi	r21,r18,1
 800cb6c:	91800047 	ldb	r6,1(r18)
 800cb70:	d8001d85 	stb	zero,118(sp)
 800cb74:	002d883a 	mov	r22,zero
 800cb78:	d8802015 	stw	r2,128(sp)
 800cb7c:	d8002315 	stw	zero,140(sp)
 800cb80:	0021883a 	mov	r16,zero
 800cb84:	04801604 	movi	r18,88
 800cb88:	05000244 	movi	r20,9
 800cb8c:	402f883a 	mov	r23,r8
 800cb90:	ad400044 	addi	r21,r21,1
 800cb94:	30bff804 	addi	r2,r6,-32
 800cb98:	9081ae36 	bltu	r18,r2,800d254 <___svfiprintf_internal_r+0x7f0>
 800cb9c:	100490ba 	slli	r2,r2,2
 800cba0:	00c20074 	movhi	r3,2049
 800cba4:	18f2ed04 	addi	r3,r3,-13388
 800cba8:	10c5883a 	add	r2,r2,r3
 800cbac:	10800017 	ldw	r2,0(r2)
 800cbb0:	1000683a 	jmp	r2
 800cbb4:	0800cd64 	muli	zero,at,821
 800cbb8:	0800d254 	ori	zero,at,841
 800cbbc:	0800d254 	ori	zero,at,841
 800cbc0:	0800cd58 	cmpnei	zero,at,821
 800cbc4:	0800d254 	ori	zero,at,841
 800cbc8:	0800d254 	ori	zero,at,841
 800cbcc:	0800d254 	ori	zero,at,841
 800cbd0:	0800d254 	ori	zero,at,841
 800cbd4:	0800d254 	ori	zero,at,841
 800cbd8:	0800d254 	ori	zero,at,841
 800cbdc:	0800cd18 	cmpnei	zero,at,820
 800cbe0:	0800cd4c 	andi	zero,at,821
 800cbe4:	0800d254 	ori	zero,at,841
 800cbe8:	0800cd40 	call	800cd4 <__reset-0x77ff32c>
 800cbec:	0800d288 	cmpgei	zero,at,842
 800cbf0:	0800d254 	ori	zero,at,841
 800cbf4:	0800d27c 	xorhi	zero,at,841
 800cbf8:	0800d210 	cmplti	zero,at,840
 800cbfc:	0800d210 	cmplti	zero,at,840
 800cc00:	0800d210 	cmplti	zero,at,840
 800cc04:	0800d210 	cmplti	zero,at,840
 800cc08:	0800d210 	cmplti	zero,at,840
 800cc0c:	0800d210 	cmplti	zero,at,840
 800cc10:	0800d210 	cmplti	zero,at,840
 800cc14:	0800d210 	cmplti	zero,at,840
 800cc18:	0800d210 	cmplti	zero,at,840
 800cc1c:	0800d254 	ori	zero,at,841
 800cc20:	0800d254 	ori	zero,at,841
 800cc24:	0800d254 	ori	zero,at,841
 800cc28:	0800d254 	ori	zero,at,841
 800cc2c:	0800d254 	ori	zero,at,841
 800cc30:	0800d254 	ori	zero,at,841
 800cc34:	0800d254 	ori	zero,at,841
 800cc38:	0800d254 	ori	zero,at,841
 800cc3c:	0800d254 	ori	zero,at,841
 800cc40:	0800d254 	ori	zero,at,841
 800cc44:	0800d1a4 	muli	zero,at,838
 800cc48:	0800d254 	ori	zero,at,841
 800cc4c:	0800d254 	ori	zero,at,841
 800cc50:	0800d254 	ori	zero,at,841
 800cc54:	0800d254 	ori	zero,at,841
 800cc58:	0800d254 	ori	zero,at,841
 800cc5c:	0800d254 	ori	zero,at,841
 800cc60:	0800d254 	ori	zero,at,841
 800cc64:	0800d254 	ori	zero,at,841
 800cc68:	0800d254 	ori	zero,at,841
 800cc6c:	0800d254 	ori	zero,at,841
 800cc70:	0800d314 	ori	zero,at,844
 800cc74:	0800d254 	ori	zero,at,841
 800cc78:	0800d254 	ori	zero,at,841
 800cc7c:	0800d254 	ori	zero,at,841
 800cc80:	0800d254 	ori	zero,at,841
 800cc84:	0800d254 	ori	zero,at,841
 800cc88:	0800d2d0 	cmplti	zero,at,843
 800cc8c:	0800d254 	ori	zero,at,841
 800cc90:	0800d254 	ori	zero,at,841
 800cc94:	0800d15c 	xori	zero,at,837
 800cc98:	0800d254 	ori	zero,at,841
 800cc9c:	0800d254 	ori	zero,at,841
 800cca0:	0800d254 	ori	zero,at,841
 800cca4:	0800d254 	ori	zero,at,841
 800cca8:	0800d254 	ori	zero,at,841
 800ccac:	0800d254 	ori	zero,at,841
 800ccb0:	0800d254 	ori	zero,at,841
 800ccb4:	0800d254 	ori	zero,at,841
 800ccb8:	0800d254 	ori	zero,at,841
 800ccbc:	0800d254 	ori	zero,at,841
 800ccc0:	0800d024 	muli	zero,at,832
 800ccc4:	0800cfc8 	cmpgei	zero,at,831
 800ccc8:	0800d254 	ori	zero,at,841
 800cccc:	0800d254 	ori	zero,at,841
 800ccd0:	0800d254 	ori	zero,at,841
 800ccd4:	0800cfbc 	xorhi	zero,at,830
 800ccd8:	0800cfc8 	cmpgei	zero,at,831
 800ccdc:	0800d254 	ori	zero,at,841
 800cce0:	0800d254 	ori	zero,at,841
 800cce4:	0800d00c 	andi	zero,at,832
 800cce8:	0800d254 	ori	zero,at,841
 800ccec:	0800cf88 	cmpgei	zero,at,830
 800ccf0:	0800cf58 	cmpnei	zero,at,829
 800ccf4:	0800cf10 	cmplti	zero,at,828
 800ccf8:	0800cf04 	addi	zero,at,828
 800ccfc:	0800d254 	ori	zero,at,841
 800cd00:	0800ce9c 	xori	zero,at,826
 800cd04:	0800d254 	ori	zero,at,841
 800cd08:	0800cdcc 	andi	zero,at,823
 800cd0c:	0800d254 	ori	zero,at,841
 800cd10:	0800d254 	ori	zero,at,841
 800cd14:	0800cd80 	call	800cd8 <__reset-0x77ff328>
 800cd18:	d9402417 	ldw	r5,144(sp)
 800cd1c:	d8c02417 	ldw	r3,144(sp)
 800cd20:	29400017 	ldw	r5,0(r5)
 800cd24:	18800104 	addi	r2,r3,4
 800cd28:	d9402315 	stw	r5,140(sp)
 800cd2c:	2802f70e 	bge	r5,zero,800d90c <___svfiprintf_internal_r+0xea8>
 800cd30:	d9002317 	ldw	r4,140(sp)
 800cd34:	d8802415 	stw	r2,144(sp)
 800cd38:	0109c83a 	sub	r4,zero,r4
 800cd3c:	d9002315 	stw	r4,140(sp)
 800cd40:	84000114 	ori	r16,r16,4
 800cd44:	a9800007 	ldb	r6,0(r21)
 800cd48:	003f9106 	br	800cb90 <__alt_data_end+0xfc00cb90>
 800cd4c:	05800ac4 	movi	r22,43
 800cd50:	a9800007 	ldb	r6,0(r21)
 800cd54:	003f8e06 	br	800cb90 <__alt_data_end+0xfc00cb90>
 800cd58:	84000054 	ori	r16,r16,1
 800cd5c:	a9800007 	ldb	r6,0(r21)
 800cd60:	003f8b06 	br	800cb90 <__alt_data_end+0xfc00cb90>
 800cd64:	b0803fcc 	andi	r2,r22,255
 800cd68:	1080201c 	xori	r2,r2,128
 800cd6c:	10bfe004 	addi	r2,r2,-128
 800cd70:	1003221e 	bne	r2,zero,800d9fc <___svfiprintf_internal_r+0xf98>
 800cd74:	05800804 	movi	r22,32
 800cd78:	a9800007 	ldb	r6,0(r21)
 800cd7c:	003f8406 	br	800cb90 <__alt_data_end+0xfc00cb90>
 800cd80:	01420074 	movhi	r5,2049
 800cd84:	295b3804 	addi	r5,r5,27872
 800cd88:	d9402a15 	stw	r5,168(sp)
 800cd8c:	dd801d85 	stb	r22,118(sp)
 800cd90:	80c0080c 	andi	r3,r16,32
 800cd94:	b811883a 	mov	r8,r23
 800cd98:	d8802417 	ldw	r2,144(sp)
 800cd9c:	1800f726 	beq	r3,zero,800d17c <___svfiprintf_internal_r+0x718>
 800cda0:	d8c02417 	ldw	r3,144(sp)
 800cda4:	14800017 	ldw	r18,0(r2)
 800cda8:	15800117 	ldw	r22,4(r2)
 800cdac:	18c00204 	addi	r3,r3,8
 800cdb0:	d8c02415 	stw	r3,144(sp)
 800cdb4:	8080004c 	andi	r2,r16,1
 800cdb8:	1002bd26 	beq	r2,zero,800d8b0 <___svfiprintf_internal_r+0xe4c>
 800cdbc:	9586b03a 	or	r3,r18,r22
 800cdc0:	1803081e 	bne	r3,zero,800d9e4 <___svfiprintf_internal_r+0xf80>
 800cdc4:	00800084 	movi	r2,2
 800cdc8:	00000b06 	br	800cdf8 <___svfiprintf_internal_r+0x394>
 800cdcc:	80c0080c 	andi	r3,r16,32
 800cdd0:	b811883a 	mov	r8,r23
 800cdd4:	d8802417 	ldw	r2,144(sp)
 800cdd8:	18014226 	beq	r3,zero,800d2e4 <___svfiprintf_internal_r+0x880>
 800cddc:	d9402417 	ldw	r5,144(sp)
 800cde0:	14800017 	ldw	r18,0(r2)
 800cde4:	15800117 	ldw	r22,4(r2)
 800cde8:	29400204 	addi	r5,r5,8
 800cdec:	d9402415 	stw	r5,144(sp)
 800cdf0:	00800044 	movi	r2,1
 800cdf4:	9586b03a 	or	r3,r18,r22
 800cdf8:	dd002017 	ldw	r20,128(sp)
 800cdfc:	d8001d85 	stb	zero,118(sp)
 800ce00:	002f883a 	mov	r23,zero
 800ce04:	d9002017 	ldw	r4,128(sp)
 800ce08:	20000216 	blt	r4,zero,800ce14 <___svfiprintf_internal_r+0x3b0>
 800ce0c:	013fdfc4 	movi	r4,-129
 800ce10:	8120703a 	and	r16,r16,r4
 800ce14:	1801e91e 	bne	r3,zero,800d5bc <___svfiprintf_internal_r+0xb58>
 800ce18:	d9402017 	ldw	r5,128(sp)
 800ce1c:	28025f26 	beq	r5,zero,800d79c <___svfiprintf_internal_r+0xd38>
 800ce20:	10803fcc 	andi	r2,r2,255
 800ce24:	00c00044 	movi	r3,1
 800ce28:	10c2b226 	beq	r2,r3,800d8f4 <___svfiprintf_internal_r+0xe90>
 800ce2c:	00c00084 	movi	r3,2
 800ce30:	10c27c26 	beq	r2,r3,800d824 <___svfiprintf_internal_r+0xdc0>
 800ce34:	d8c01a04 	addi	r3,sp,104
 800ce38:	9008d0fa 	srli	r4,r18,3
 800ce3c:	b00a977a 	slli	r5,r22,29
 800ce40:	b02cd0fa 	srli	r22,r22,3
 800ce44:	948001cc 	andi	r18,r18,7
 800ce48:	90800c04 	addi	r2,r18,48
 800ce4c:	18ffffc4 	addi	r3,r3,-1
 800ce50:	2924b03a 	or	r18,r5,r4
 800ce54:	18800005 	stb	r2,0(r3)
 800ce58:	9588b03a 	or	r4,r18,r22
 800ce5c:	203ff61e 	bne	r4,zero,800ce38 <__alt_data_end+0xfc00ce38>
 800ce60:	8100004c 	andi	r4,r16,1
 800ce64:	d8c02715 	stw	r3,156(sp)
 800ce68:	20029d26 	beq	r4,zero,800d8e0 <___svfiprintf_internal_r+0xe7c>
 800ce6c:	10803fcc 	andi	r2,r2,255
 800ce70:	1080201c 	xori	r2,r2,128
 800ce74:	10bfe004 	addi	r2,r2,-128
 800ce78:	01000c04 	movi	r4,48
 800ce7c:	11031826 	beq	r2,r4,800dae0 <___svfiprintf_internal_r+0x107c>
 800ce80:	d9402717 	ldw	r5,156(sp)
 800ce84:	d8801e17 	ldw	r2,120(sp)
 800ce88:	193fffc5 	stb	r4,-1(r3)
 800ce8c:	297fffc4 	addi	r5,r5,-1
 800ce90:	d9402715 	stw	r5,156(sp)
 800ce94:	1169c83a 	sub	r20,r2,r5
 800ce98:	00024606 	br	800d7b4 <___svfiprintf_internal_r+0xd50>
 800ce9c:	d9402417 	ldw	r5,144(sp)
 800cea0:	d8802417 	ldw	r2,144(sp)
 800cea4:	d8001d85 	stb	zero,118(sp)
 800cea8:	29400017 	ldw	r5,0(r5)
 800ceac:	b811883a 	mov	r8,r23
 800ceb0:	15800104 	addi	r22,r2,4
 800ceb4:	d9402715 	stw	r5,156(sp)
 800ceb8:	28031826 	beq	r5,zero,800db1c <___svfiprintf_internal_r+0x10b8>
 800cebc:	d9002017 	ldw	r4,128(sp)
 800cec0:	20030b16 	blt	r4,zero,800daf0 <___svfiprintf_internal_r+0x108c>
 800cec4:	d9002717 	ldw	r4,156(sp)
 800cec8:	d9802017 	ldw	r6,128(sp)
 800cecc:	000b883a 	mov	r5,zero
 800ced0:	ddc02d15 	stw	r23,180(sp)
 800ced4:	800ad880 	call	800ad88 <memchr>
 800ced8:	da002d17 	ldw	r8,180(sp)
 800cedc:	10033926 	beq	r2,zero,800dbc4 <___svfiprintf_internal_r+0x1160>
 800cee0:	d8c02717 	ldw	r3,156(sp)
 800cee4:	d9002017 	ldw	r4,128(sp)
 800cee8:	10e9c83a 	sub	r20,r2,r3
 800ceec:	2500010e 	bge	r4,r20,800cef4 <___svfiprintf_internal_r+0x490>
 800cef0:	2029883a 	mov	r20,r4
 800cef4:	ddc01d83 	ldbu	r23,118(sp)
 800cef8:	dd802415 	stw	r22,144(sp)
 800cefc:	d8002015 	stw	zero,128(sp)
 800cf00:	00022c06 	br	800d7b4 <___svfiprintf_internal_r+0xd50>
 800cf04:	84000814 	ori	r16,r16,32
 800cf08:	a9800007 	ldb	r6,0(r21)
 800cf0c:	003f2006 	br	800cb90 <__alt_data_end+0xfc00cb90>
 800cf10:	d8802417 	ldw	r2,144(sp)
 800cf14:	d8c02417 	ldw	r3,144(sp)
 800cf18:	01020074 	movhi	r4,2049
 800cf1c:	14800017 	ldw	r18,0(r2)
 800cf20:	00800c04 	movi	r2,48
 800cf24:	18c00104 	addi	r3,r3,4
 800cf28:	d8801d05 	stb	r2,116(sp)
 800cf2c:	211b3804 	addi	r4,r4,27872
 800cf30:	00801e04 	movi	r2,120
 800cf34:	d8801d45 	stb	r2,117(sp)
 800cf38:	d8c02415 	stw	r3,144(sp)
 800cf3c:	b811883a 	mov	r8,r23
 800cf40:	002d883a 	mov	r22,zero
 800cf44:	84000094 	ori	r16,r16,2
 800cf48:	d9002a15 	stw	r4,168(sp)
 800cf4c:	00800084 	movi	r2,2
 800cf50:	9007883a 	mov	r3,r18
 800cf54:	003fa806 	br	800cdf8 <__alt_data_end+0xfc00cdf8>
 800cf58:	80c0080c 	andi	r3,r16,32
 800cf5c:	b811883a 	mov	r8,r23
 800cf60:	d8802417 	ldw	r2,144(sp)
 800cf64:	1800f026 	beq	r3,zero,800d328 <___svfiprintf_internal_r+0x8c4>
 800cf68:	14800017 	ldw	r18,0(r2)
 800cf6c:	15800117 	ldw	r22,4(r2)
 800cf70:	d8802417 	ldw	r2,144(sp)
 800cf74:	9586b03a 	or	r3,r18,r22
 800cf78:	10800204 	addi	r2,r2,8
 800cf7c:	d8802415 	stw	r2,144(sp)
 800cf80:	0005883a 	mov	r2,zero
 800cf84:	003f9c06 	br	800cdf8 <__alt_data_end+0xfc00cdf8>
 800cf88:	dd801d85 	stb	r22,118(sp)
 800cf8c:	8080080c 	andi	r2,r16,32
 800cf90:	b811883a 	mov	r8,r23
 800cf94:	10028a1e 	bne	r2,zero,800d9c0 <___svfiprintf_internal_r+0xf5c>
 800cf98:	8080040c 	andi	r2,r16,16
 800cf9c:	1002c726 	beq	r2,zero,800dabc <___svfiprintf_internal_r+0x1058>
 800cfa0:	d8c02417 	ldw	r3,144(sp)
 800cfa4:	d9002617 	ldw	r4,152(sp)
 800cfa8:	18800017 	ldw	r2,0(r3)
 800cfac:	18c00104 	addi	r3,r3,4
 800cfb0:	d8c02415 	stw	r3,144(sp)
 800cfb4:	11000015 	stw	r4,0(r2)
 800cfb8:	003ecd06 	br	800caf0 <__alt_data_end+0xfc00caf0>
 800cfbc:	84001014 	ori	r16,r16,64
 800cfc0:	a9800007 	ldb	r6,0(r21)
 800cfc4:	003ef206 	br	800cb90 <__alt_data_end+0xfc00cb90>
 800cfc8:	dd801d85 	stb	r22,118(sp)
 800cfcc:	8080080c 	andi	r2,r16,32
 800cfd0:	b811883a 	mov	r8,r23
 800cfd4:	d8c02417 	ldw	r3,144(sp)
 800cfd8:	10007826 	beq	r2,zero,800d1bc <___svfiprintf_internal_r+0x758>
 800cfdc:	d9002417 	ldw	r4,144(sp)
 800cfe0:	18800117 	ldw	r2,4(r3)
 800cfe4:	1c800017 	ldw	r18,0(r3)
 800cfe8:	21000204 	addi	r4,r4,8
 800cfec:	d9002415 	stw	r4,144(sp)
 800cff0:	102d883a 	mov	r22,r2
 800cff4:	10007c16 	blt	r2,zero,800d1e8 <___svfiprintf_internal_r+0x784>
 800cff8:	ddc01d83 	ldbu	r23,118(sp)
 800cffc:	dd002017 	ldw	r20,128(sp)
 800d000:	00800044 	movi	r2,1
 800d004:	9586b03a 	or	r3,r18,r22
 800d008:	003f7e06 	br	800ce04 <__alt_data_end+0xfc00ce04>
 800d00c:	a9800007 	ldb	r6,0(r21)
 800d010:	01001b04 	movi	r4,108
 800d014:	a805883a 	mov	r2,r21
 800d018:	31027a26 	beq	r6,r4,800da04 <___svfiprintf_internal_r+0xfa0>
 800d01c:	84000414 	ori	r16,r16,16
 800d020:	003edb06 	br	800cb90 <__alt_data_end+0xfc00cb90>
 800d024:	d9402417 	ldw	r5,144(sp)
 800d028:	04800044 	movi	r18,1
 800d02c:	d8c01004 	addi	r3,sp,64
 800d030:	28800017 	ldw	r2,0(r5)
 800d034:	29400104 	addi	r5,r5,4
 800d038:	b811883a 	mov	r8,r23
 800d03c:	d8001d85 	stb	zero,118(sp)
 800d040:	d8801005 	stb	r2,64(sp)
 800d044:	d9402415 	stw	r5,144(sp)
 800d048:	9029883a 	mov	r20,r18
 800d04c:	d8c02715 	stw	r3,156(sp)
 800d050:	d8002015 	stw	zero,128(sp)
 800d054:	80c0008c 	andi	r3,r16,2
 800d058:	d8c02115 	stw	r3,132(sp)
 800d05c:	18000126 	beq	r3,zero,800d064 <___svfiprintf_internal_r+0x600>
 800d060:	94800084 	addi	r18,r18,2
 800d064:	80c0210c 	andi	r3,r16,132
 800d068:	d8c02515 	stw	r3,148(sp)
 800d06c:	1800ba1e 	bne	r3,zero,800d358 <___svfiprintf_internal_r+0x8f4>
 800d070:	d9002317 	ldw	r4,140(sp)
 800d074:	24b9c83a 	sub	fp,r4,r18
 800d078:	0700b70e 	bge	zero,fp,800d358 <___svfiprintf_internal_r+0x8f4>
 800d07c:	02400404 	movi	r9,16
 800d080:	d8c01c17 	ldw	r3,112(sp)
 800d084:	d8801b17 	ldw	r2,108(sp)
 800d088:	4f02c00e 	bge	r9,fp,800db8c <___svfiprintf_internal_r+0x1128>
 800d08c:	01020074 	movhi	r4,2049
 800d090:	211ba504 	addi	r4,r4,28308
 800d094:	d9002815 	stw	r4,160(sp)
 800d098:	a809883a 	mov	r4,r21
 800d09c:	dc002b15 	stw	r16,172(sp)
 800d0a0:	a02b883a 	mov	r21,r20
 800d0a4:	482f883a 	mov	r23,r9
 800d0a8:	9029883a 	mov	r20,r18
 800d0ac:	058001c4 	movi	r22,7
 800d0b0:	e025883a 	mov	r18,fp
 800d0b4:	dc002217 	ldw	r16,136(sp)
 800d0b8:	2039883a 	mov	fp,r4
 800d0bc:	00000306 	br	800d0cc <___svfiprintf_internal_r+0x668>
 800d0c0:	94bffc04 	addi	r18,r18,-16
 800d0c4:	42000204 	addi	r8,r8,8
 800d0c8:	bc80130e 	bge	r23,r18,800d118 <___svfiprintf_internal_r+0x6b4>
 800d0cc:	01420074 	movhi	r5,2049
 800d0d0:	18c00404 	addi	r3,r3,16
 800d0d4:	10800044 	addi	r2,r2,1
 800d0d8:	295ba504 	addi	r5,r5,28308
 800d0dc:	41400015 	stw	r5,0(r8)
 800d0e0:	45c00115 	stw	r23,4(r8)
 800d0e4:	d8c01c15 	stw	r3,112(sp)
 800d0e8:	d8801b15 	stw	r2,108(sp)
 800d0ec:	b0bff40e 	bge	r22,r2,800d0c0 <__alt_data_end+0xfc00d0c0>
 800d0f0:	8809883a 	mov	r4,r17
 800d0f4:	800b883a 	mov	r5,r16
 800d0f8:	d9801a04 	addi	r6,sp,104
 800d0fc:	800c89c0 	call	800c89c <__ssprint_r>
 800d100:	1001501e 	bne	r2,zero,800d644 <___svfiprintf_internal_r+0xbe0>
 800d104:	94bffc04 	addi	r18,r18,-16
 800d108:	d8c01c17 	ldw	r3,112(sp)
 800d10c:	d8801b17 	ldw	r2,108(sp)
 800d110:	d811883a 	mov	r8,sp
 800d114:	bcbfed16 	blt	r23,r18,800d0cc <__alt_data_end+0xfc00d0cc>
 800d118:	dc002b17 	ldw	r16,172(sp)
 800d11c:	e009883a 	mov	r4,fp
 800d120:	9039883a 	mov	fp,r18
 800d124:	a025883a 	mov	r18,r20
 800d128:	a829883a 	mov	r20,r21
 800d12c:	202b883a 	mov	r21,r4
 800d130:	d9002817 	ldw	r4,160(sp)
 800d134:	e0c7883a 	add	r3,fp,r3
 800d138:	10800044 	addi	r2,r2,1
 800d13c:	41000015 	stw	r4,0(r8)
 800d140:	47000115 	stw	fp,4(r8)
 800d144:	d8c01c15 	stw	r3,112(sp)
 800d148:	d8801b15 	stw	r2,108(sp)
 800d14c:	010001c4 	movi	r4,7
 800d150:	2081da16 	blt	r4,r2,800d8bc <___svfiprintf_internal_r+0xe58>
 800d154:	42000204 	addi	r8,r8,8
 800d158:	00008106 	br	800d360 <___svfiprintf_internal_r+0x8fc>
 800d15c:	01020074 	movhi	r4,2049
 800d160:	211b3304 	addi	r4,r4,27852
 800d164:	dd801d85 	stb	r22,118(sp)
 800d168:	d9002a15 	stw	r4,168(sp)
 800d16c:	80c0080c 	andi	r3,r16,32
 800d170:	b811883a 	mov	r8,r23
 800d174:	d8802417 	ldw	r2,144(sp)
 800d178:	183f091e 	bne	r3,zero,800cda0 <__alt_data_end+0xfc00cda0>
 800d17c:	80c0040c 	andi	r3,r16,16
 800d180:	1801f21e 	bne	r3,zero,800d94c <___svfiprintf_internal_r+0xee8>
 800d184:	80c0100c 	andi	r3,r16,64
 800d188:	18024626 	beq	r3,zero,800daa4 <___svfiprintf_internal_r+0x1040>
 800d18c:	d9402417 	ldw	r5,144(sp)
 800d190:	1480000b 	ldhu	r18,0(r2)
 800d194:	002d883a 	mov	r22,zero
 800d198:	29400104 	addi	r5,r5,4
 800d19c:	d9402415 	stw	r5,144(sp)
 800d1a0:	003f0406 	br	800cdb4 <__alt_data_end+0xfc00cdb4>
 800d1a4:	84000414 	ori	r16,r16,16
 800d1a8:	dd801d85 	stb	r22,118(sp)
 800d1ac:	8080080c 	andi	r2,r16,32
 800d1b0:	b811883a 	mov	r8,r23
 800d1b4:	d8c02417 	ldw	r3,144(sp)
 800d1b8:	103f881e 	bne	r2,zero,800cfdc <__alt_data_end+0xfc00cfdc>
 800d1bc:	8080040c 	andi	r2,r16,16
 800d1c0:	1001f81e 	bne	r2,zero,800d9a4 <___svfiprintf_internal_r+0xf40>
 800d1c4:	8080100c 	andi	r2,r16,64
 800d1c8:	10021f26 	beq	r2,zero,800da48 <___svfiprintf_internal_r+0xfe4>
 800d1cc:	1c80000f 	ldh	r18,0(r3)
 800d1d0:	d8802417 	ldw	r2,144(sp)
 800d1d4:	902dd7fa 	srai	r22,r18,31
 800d1d8:	10800104 	addi	r2,r2,4
 800d1dc:	d8802415 	stw	r2,144(sp)
 800d1e0:	b005883a 	mov	r2,r22
 800d1e4:	103f840e 	bge	r2,zero,800cff8 <__alt_data_end+0xfc00cff8>
 800d1e8:	04a5c83a 	sub	r18,zero,r18
 800d1ec:	9004c03a 	cmpne	r2,r18,zero
 800d1f0:	05adc83a 	sub	r22,zero,r22
 800d1f4:	b0adc83a 	sub	r22,r22,r2
 800d1f8:	05c00b44 	movi	r23,45
 800d1fc:	ddc01d85 	stb	r23,118(sp)
 800d200:	dd002017 	ldw	r20,128(sp)
 800d204:	00800044 	movi	r2,1
 800d208:	9586b03a 	or	r3,r18,r22
 800d20c:	003efd06 	br	800ce04 <__alt_data_end+0xfc00ce04>
 800d210:	dc002115 	stw	r16,132(sp)
 800d214:	d8002315 	stw	zero,140(sp)
 800d218:	373ff404 	addi	fp,r6,-48
 800d21c:	0009883a 	mov	r4,zero
 800d220:	a821883a 	mov	r16,r21
 800d224:	01400284 	movi	r5,10
 800d228:	80027c00 	call	80027c0 <__mulsi3>
 800d22c:	81800007 	ldb	r6,0(r16)
 800d230:	1709883a 	add	r4,r2,fp
 800d234:	ad400044 	addi	r21,r21,1
 800d238:	373ff404 	addi	fp,r6,-48
 800d23c:	a821883a 	mov	r16,r21
 800d240:	a73ff82e 	bgeu	r20,fp,800d224 <__alt_data_end+0xfc00d224>
 800d244:	d9002315 	stw	r4,140(sp)
 800d248:	30bff804 	addi	r2,r6,-32
 800d24c:	dc002117 	ldw	r16,132(sp)
 800d250:	90be522e 	bgeu	r18,r2,800cb9c <__alt_data_end+0xfc00cb9c>
 800d254:	dd801d85 	stb	r22,118(sp)
 800d258:	b811883a 	mov	r8,r23
 800d25c:	3000f326 	beq	r6,zero,800d62c <___svfiprintf_internal_r+0xbc8>
 800d260:	04800044 	movi	r18,1
 800d264:	d8c01004 	addi	r3,sp,64
 800d268:	d9801005 	stb	r6,64(sp)
 800d26c:	d8001d85 	stb	zero,118(sp)
 800d270:	9029883a 	mov	r20,r18
 800d274:	d8c02715 	stw	r3,156(sp)
 800d278:	003f7506 	br	800d050 <__alt_data_end+0xfc00d050>
 800d27c:	84002014 	ori	r16,r16,128
 800d280:	a9800007 	ldb	r6,0(r21)
 800d284:	003e4206 	br	800cb90 <__alt_data_end+0xfc00cb90>
 800d288:	a9800007 	ldb	r6,0(r21)
 800d28c:	01400a84 	movi	r5,42
 800d290:	a8800044 	addi	r2,r21,1
 800d294:	31425226 	beq	r6,r5,800dbe0 <___svfiprintf_internal_r+0x117c>
 800d298:	373ff404 	addi	fp,r6,-48
 800d29c:	102b883a 	mov	r21,r2
 800d2a0:	0009883a 	mov	r4,zero
 800d2a4:	a7024536 	bltu	r20,fp,800dbbc <___svfiprintf_internal_r+0x1158>
 800d2a8:	01400284 	movi	r5,10
 800d2ac:	80027c00 	call	80027c0 <__mulsi3>
 800d2b0:	a9800007 	ldb	r6,0(r21)
 800d2b4:	e089883a 	add	r4,fp,r2
 800d2b8:	ad400044 	addi	r21,r21,1
 800d2bc:	373ff404 	addi	fp,r6,-48
 800d2c0:	a73ff92e 	bgeu	r20,fp,800d2a8 <__alt_data_end+0xfc00d2a8>
 800d2c4:	20021316 	blt	r4,zero,800db14 <___svfiprintf_internal_r+0x10b0>
 800d2c8:	d9002015 	stw	r4,128(sp)
 800d2cc:	003e3106 	br	800cb94 <__alt_data_end+0xfc00cb94>
 800d2d0:	84000414 	ori	r16,r16,16
 800d2d4:	80c0080c 	andi	r3,r16,32
 800d2d8:	b811883a 	mov	r8,r23
 800d2dc:	d8802417 	ldw	r2,144(sp)
 800d2e0:	183ebe1e 	bne	r3,zero,800cddc <__alt_data_end+0xfc00cddc>
 800d2e4:	80c0040c 	andi	r3,r16,16
 800d2e8:	18019e1e 	bne	r3,zero,800d964 <___svfiprintf_internal_r+0xf00>
 800d2ec:	80c0100c 	andi	r3,r16,64
 800d2f0:	1801dc26 	beq	r3,zero,800da64 <___svfiprintf_internal_r+0x1000>
 800d2f4:	d8c02417 	ldw	r3,144(sp)
 800d2f8:	1480000b 	ldhu	r18,0(r2)
 800d2fc:	002d883a 	mov	r22,zero
 800d300:	18c00104 	addi	r3,r3,4
 800d304:	d8c02415 	stw	r3,144(sp)
 800d308:	00800044 	movi	r2,1
 800d30c:	9007883a 	mov	r3,r18
 800d310:	003eb906 	br	800cdf8 <__alt_data_end+0xfc00cdf8>
 800d314:	84000414 	ori	r16,r16,16
 800d318:	80c0080c 	andi	r3,r16,32
 800d31c:	b811883a 	mov	r8,r23
 800d320:	d8802417 	ldw	r2,144(sp)
 800d324:	183f101e 	bne	r3,zero,800cf68 <__alt_data_end+0xfc00cf68>
 800d328:	80c0040c 	andi	r3,r16,16
 800d32c:	1801951e 	bne	r3,zero,800d984 <___svfiprintf_internal_r+0xf20>
 800d330:	80c0100c 	andi	r3,r16,64
 800d334:	1801d326 	beq	r3,zero,800da84 <___svfiprintf_internal_r+0x1020>
 800d338:	d9002417 	ldw	r4,144(sp)
 800d33c:	1480000b 	ldhu	r18,0(r2)
 800d340:	002d883a 	mov	r22,zero
 800d344:	21000104 	addi	r4,r4,4
 800d348:	d9002415 	stw	r4,144(sp)
 800d34c:	0005883a 	mov	r2,zero
 800d350:	9007883a 	mov	r3,r18
 800d354:	003ea806 	br	800cdf8 <__alt_data_end+0xfc00cdf8>
 800d358:	d8c01c17 	ldw	r3,112(sp)
 800d35c:	d8801b17 	ldw	r2,108(sp)
 800d360:	d9001d87 	ldb	r4,118(sp)
 800d364:	20000b26 	beq	r4,zero,800d394 <___svfiprintf_internal_r+0x930>
 800d368:	d9001d84 	addi	r4,sp,118
 800d36c:	18c00044 	addi	r3,r3,1
 800d370:	10800044 	addi	r2,r2,1
 800d374:	41000015 	stw	r4,0(r8)
 800d378:	01000044 	movi	r4,1
 800d37c:	41000115 	stw	r4,4(r8)
 800d380:	d8c01c15 	stw	r3,112(sp)
 800d384:	d8801b15 	stw	r2,108(sp)
 800d388:	010001c4 	movi	r4,7
 800d38c:	20813616 	blt	r4,r2,800d868 <___svfiprintf_internal_r+0xe04>
 800d390:	42000204 	addi	r8,r8,8
 800d394:	d9402117 	ldw	r5,132(sp)
 800d398:	28000b26 	beq	r5,zero,800d3c8 <___svfiprintf_internal_r+0x964>
 800d39c:	d9001d04 	addi	r4,sp,116
 800d3a0:	18c00084 	addi	r3,r3,2
 800d3a4:	10800044 	addi	r2,r2,1
 800d3a8:	41000015 	stw	r4,0(r8)
 800d3ac:	01000084 	movi	r4,2
 800d3b0:	41000115 	stw	r4,4(r8)
 800d3b4:	d8c01c15 	stw	r3,112(sp)
 800d3b8:	d8801b15 	stw	r2,108(sp)
 800d3bc:	010001c4 	movi	r4,7
 800d3c0:	20813216 	blt	r4,r2,800d88c <___svfiprintf_internal_r+0xe28>
 800d3c4:	42000204 	addi	r8,r8,8
 800d3c8:	d9402517 	ldw	r5,148(sp)
 800d3cc:	01002004 	movi	r4,128
 800d3d0:	2900ad26 	beq	r5,r4,800d688 <___svfiprintf_internal_r+0xc24>
 800d3d4:	d9002017 	ldw	r4,128(sp)
 800d3d8:	252fc83a 	sub	r23,r4,r20
 800d3dc:	05c0330e 	bge	zero,r23,800d4ac <___svfiprintf_internal_r+0xa48>
 800d3e0:	01c00404 	movi	r7,16
 800d3e4:	3dc1940e 	bge	r7,r23,800da38 <___svfiprintf_internal_r+0xfd4>
 800d3e8:	01020074 	movhi	r4,2049
 800d3ec:	211ba104 	addi	r4,r4,28292
 800d3f0:	d9002115 	stw	r4,132(sp)
 800d3f4:	a809883a 	mov	r4,r21
 800d3f8:	dc002015 	stw	r16,128(sp)
 800d3fc:	a02b883a 	mov	r21,r20
 800d400:	3839883a 	mov	fp,r7
 800d404:	9029883a 	mov	r20,r18
 800d408:	058001c4 	movi	r22,7
 800d40c:	b825883a 	mov	r18,r23
 800d410:	dc002217 	ldw	r16,136(sp)
 800d414:	202f883a 	mov	r23,r4
 800d418:	00000306 	br	800d428 <___svfiprintf_internal_r+0x9c4>
 800d41c:	94bffc04 	addi	r18,r18,-16
 800d420:	42000204 	addi	r8,r8,8
 800d424:	e480110e 	bge	fp,r18,800d46c <___svfiprintf_internal_r+0xa08>
 800d428:	18c00404 	addi	r3,r3,16
 800d42c:	10800044 	addi	r2,r2,1
 800d430:	44c00015 	stw	r19,0(r8)
 800d434:	47000115 	stw	fp,4(r8)
 800d438:	d8c01c15 	stw	r3,112(sp)
 800d43c:	d8801b15 	stw	r2,108(sp)
 800d440:	b0bff60e 	bge	r22,r2,800d41c <__alt_data_end+0xfc00d41c>
 800d444:	8809883a 	mov	r4,r17
 800d448:	800b883a 	mov	r5,r16
 800d44c:	d9801a04 	addi	r6,sp,104
 800d450:	800c89c0 	call	800c89c <__ssprint_r>
 800d454:	10007b1e 	bne	r2,zero,800d644 <___svfiprintf_internal_r+0xbe0>
 800d458:	94bffc04 	addi	r18,r18,-16
 800d45c:	d8c01c17 	ldw	r3,112(sp)
 800d460:	d8801b17 	ldw	r2,108(sp)
 800d464:	d811883a 	mov	r8,sp
 800d468:	e4bfef16 	blt	fp,r18,800d428 <__alt_data_end+0xfc00d428>
 800d46c:	dc002017 	ldw	r16,128(sp)
 800d470:	b809883a 	mov	r4,r23
 800d474:	902f883a 	mov	r23,r18
 800d478:	a025883a 	mov	r18,r20
 800d47c:	a829883a 	mov	r20,r21
 800d480:	202b883a 	mov	r21,r4
 800d484:	d9402117 	ldw	r5,132(sp)
 800d488:	1dc7883a 	add	r3,r3,r23
 800d48c:	10800044 	addi	r2,r2,1
 800d490:	41400015 	stw	r5,0(r8)
 800d494:	45c00115 	stw	r23,4(r8)
 800d498:	d8c01c15 	stw	r3,112(sp)
 800d49c:	d8801b15 	stw	r2,108(sp)
 800d4a0:	010001c4 	movi	r4,7
 800d4a4:	2080d616 	blt	r4,r2,800d800 <___svfiprintf_internal_r+0xd9c>
 800d4a8:	42000204 	addi	r8,r8,8
 800d4ac:	d9002717 	ldw	r4,156(sp)
 800d4b0:	a0c7883a 	add	r3,r20,r3
 800d4b4:	10800044 	addi	r2,r2,1
 800d4b8:	41000015 	stw	r4,0(r8)
 800d4bc:	45000115 	stw	r20,4(r8)
 800d4c0:	d8c01c15 	stw	r3,112(sp)
 800d4c4:	d8801b15 	stw	r2,108(sp)
 800d4c8:	010001c4 	movi	r4,7
 800d4cc:	2080a516 	blt	r4,r2,800d764 <___svfiprintf_internal_r+0xd00>
 800d4d0:	42000204 	addi	r8,r8,8
 800d4d4:	8400010c 	andi	r16,r16,4
 800d4d8:	80002b26 	beq	r16,zero,800d588 <___svfiprintf_internal_r+0xb24>
 800d4dc:	d9402317 	ldw	r5,140(sp)
 800d4e0:	2ca1c83a 	sub	r16,r5,r18
 800d4e4:	0400280e 	bge	zero,r16,800d588 <___svfiprintf_internal_r+0xb24>
 800d4e8:	05000404 	movi	r20,16
 800d4ec:	d8801b17 	ldw	r2,108(sp)
 800d4f0:	a401aa0e 	bge	r20,r16,800db9c <___svfiprintf_internal_r+0x1138>
 800d4f4:	01420074 	movhi	r5,2049
 800d4f8:	295ba504 	addi	r5,r5,28308
 800d4fc:	d9402815 	stw	r5,160(sp)
 800d500:	058001c4 	movi	r22,7
 800d504:	ddc02217 	ldw	r23,136(sp)
 800d508:	00000306 	br	800d518 <___svfiprintf_internal_r+0xab4>
 800d50c:	843ffc04 	addi	r16,r16,-16
 800d510:	42000204 	addi	r8,r8,8
 800d514:	a400130e 	bge	r20,r16,800d564 <___svfiprintf_internal_r+0xb00>
 800d518:	01020074 	movhi	r4,2049
 800d51c:	18c00404 	addi	r3,r3,16
 800d520:	10800044 	addi	r2,r2,1
 800d524:	211ba504 	addi	r4,r4,28308
 800d528:	41000015 	stw	r4,0(r8)
 800d52c:	45000115 	stw	r20,4(r8)
 800d530:	d8c01c15 	stw	r3,112(sp)
 800d534:	d8801b15 	stw	r2,108(sp)
 800d538:	b0bff40e 	bge	r22,r2,800d50c <__alt_data_end+0xfc00d50c>
 800d53c:	8809883a 	mov	r4,r17
 800d540:	b80b883a 	mov	r5,r23
 800d544:	d9801a04 	addi	r6,sp,104
 800d548:	800c89c0 	call	800c89c <__ssprint_r>
 800d54c:	10003d1e 	bne	r2,zero,800d644 <___svfiprintf_internal_r+0xbe0>
 800d550:	843ffc04 	addi	r16,r16,-16
 800d554:	d8c01c17 	ldw	r3,112(sp)
 800d558:	d8801b17 	ldw	r2,108(sp)
 800d55c:	d811883a 	mov	r8,sp
 800d560:	a43fed16 	blt	r20,r16,800d518 <__alt_data_end+0xfc00d518>
 800d564:	d9402817 	ldw	r5,160(sp)
 800d568:	1c07883a 	add	r3,r3,r16
 800d56c:	10800044 	addi	r2,r2,1
 800d570:	41400015 	stw	r5,0(r8)
 800d574:	44000115 	stw	r16,4(r8)
 800d578:	d8c01c15 	stw	r3,112(sp)
 800d57c:	d8801b15 	stw	r2,108(sp)
 800d580:	010001c4 	movi	r4,7
 800d584:	2080e416 	blt	r4,r2,800d918 <___svfiprintf_internal_r+0xeb4>
 800d588:	d8802317 	ldw	r2,140(sp)
 800d58c:	9080010e 	bge	r18,r2,800d594 <___svfiprintf_internal_r+0xb30>
 800d590:	1025883a 	mov	r18,r2
 800d594:	d9002617 	ldw	r4,152(sp)
 800d598:	2489883a 	add	r4,r4,r18
 800d59c:	d9002615 	stw	r4,152(sp)
 800d5a0:	1800781e 	bne	r3,zero,800d784 <___svfiprintf_internal_r+0xd20>
 800d5a4:	a8800007 	ldb	r2,0(r21)
 800d5a8:	d8001b15 	stw	zero,108(sp)
 800d5ac:	d811883a 	mov	r8,sp
 800d5b0:	103d511e 	bne	r2,zero,800caf8 <__alt_data_end+0xfc00caf8>
 800d5b4:	a825883a 	mov	r18,r21
 800d5b8:	003d6806 	br	800cb5c <__alt_data_end+0xfc00cb5c>
 800d5bc:	10803fcc 	andi	r2,r2,255
 800d5c0:	00c00044 	movi	r3,1
 800d5c4:	10fe191e 	bne	r2,r3,800ce2c <__alt_data_end+0xfc00ce2c>
 800d5c8:	b000c826 	beq	r22,zero,800d8ec <___svfiprintf_internal_r+0xe88>
 800d5cc:	df001a04 	addi	fp,sp,104
 800d5d0:	4029883a 	mov	r20,r8
 800d5d4:	9009883a 	mov	r4,r18
 800d5d8:	b00b883a 	mov	r5,r22
 800d5dc:	01800284 	movi	r6,10
 800d5e0:	000f883a 	mov	r7,zero
 800d5e4:	801011c0 	call	801011c <__umoddi3>
 800d5e8:	10800c04 	addi	r2,r2,48
 800d5ec:	e73fffc4 	addi	fp,fp,-1
 800d5f0:	9009883a 	mov	r4,r18
 800d5f4:	b00b883a 	mov	r5,r22
 800d5f8:	01800284 	movi	r6,10
 800d5fc:	000f883a 	mov	r7,zero
 800d600:	e0800005 	stb	r2,0(fp)
 800d604:	800fadc0 	call	800fadc <__udivdi3>
 800d608:	1025883a 	mov	r18,r2
 800d60c:	10c4b03a 	or	r2,r2,r3
 800d610:	182d883a 	mov	r22,r3
 800d614:	103fef1e 	bne	r2,zero,800d5d4 <__alt_data_end+0xfc00d5d4>
 800d618:	d9001e17 	ldw	r4,120(sp)
 800d61c:	a011883a 	mov	r8,r20
 800d620:	df002715 	stw	fp,156(sp)
 800d624:	2729c83a 	sub	r20,r4,fp
 800d628:	00006206 	br	800d7b4 <___svfiprintf_internal_r+0xd50>
 800d62c:	d8801c17 	ldw	r2,112(sp)
 800d630:	10000426 	beq	r2,zero,800d644 <___svfiprintf_internal_r+0xbe0>
 800d634:	d9002917 	ldw	r4,164(sp)
 800d638:	d9402217 	ldw	r5,136(sp)
 800d63c:	d9801a04 	addi	r6,sp,104
 800d640:	800c89c0 	call	800c89c <__ssprint_r>
 800d644:	d9402217 	ldw	r5,136(sp)
 800d648:	2880030b 	ldhu	r2,12(r5)
 800d64c:	1080100c 	andi	r2,r2,64
 800d650:	1000621e 	bne	r2,zero,800d7dc <___svfiprintf_internal_r+0xd78>
 800d654:	d8802617 	ldw	r2,152(sp)
 800d658:	dfc03717 	ldw	ra,220(sp)
 800d65c:	df003617 	ldw	fp,216(sp)
 800d660:	ddc03517 	ldw	r23,212(sp)
 800d664:	dd803417 	ldw	r22,208(sp)
 800d668:	dd403317 	ldw	r21,204(sp)
 800d66c:	dd003217 	ldw	r20,200(sp)
 800d670:	dcc03117 	ldw	r19,196(sp)
 800d674:	dc803017 	ldw	r18,192(sp)
 800d678:	dc402f17 	ldw	r17,188(sp)
 800d67c:	dc002e17 	ldw	r16,184(sp)
 800d680:	dec03804 	addi	sp,sp,224
 800d684:	f800283a 	ret
 800d688:	d9002317 	ldw	r4,140(sp)
 800d68c:	24afc83a 	sub	r23,r4,r18
 800d690:	05ff500e 	bge	zero,r23,800d3d4 <__alt_data_end+0xfc00d3d4>
 800d694:	01c00404 	movi	r7,16
 800d698:	3dc1440e 	bge	r7,r23,800dbac <___svfiprintf_internal_r+0x1148>
 800d69c:	01020074 	movhi	r4,2049
 800d6a0:	211ba104 	addi	r4,r4,28292
 800d6a4:	d9002115 	stw	r4,132(sp)
 800d6a8:	a809883a 	mov	r4,r21
 800d6ac:	dc002515 	stw	r16,148(sp)
 800d6b0:	a02b883a 	mov	r21,r20
 800d6b4:	3839883a 	mov	fp,r7
 800d6b8:	9029883a 	mov	r20,r18
 800d6bc:	058001c4 	movi	r22,7
 800d6c0:	b825883a 	mov	r18,r23
 800d6c4:	dc002217 	ldw	r16,136(sp)
 800d6c8:	202f883a 	mov	r23,r4
 800d6cc:	00000306 	br	800d6dc <___svfiprintf_internal_r+0xc78>
 800d6d0:	94bffc04 	addi	r18,r18,-16
 800d6d4:	42000204 	addi	r8,r8,8
 800d6d8:	e480110e 	bge	fp,r18,800d720 <___svfiprintf_internal_r+0xcbc>
 800d6dc:	18c00404 	addi	r3,r3,16
 800d6e0:	10800044 	addi	r2,r2,1
 800d6e4:	44c00015 	stw	r19,0(r8)
 800d6e8:	47000115 	stw	fp,4(r8)
 800d6ec:	d8c01c15 	stw	r3,112(sp)
 800d6f0:	d8801b15 	stw	r2,108(sp)
 800d6f4:	b0bff60e 	bge	r22,r2,800d6d0 <__alt_data_end+0xfc00d6d0>
 800d6f8:	8809883a 	mov	r4,r17
 800d6fc:	800b883a 	mov	r5,r16
 800d700:	d9801a04 	addi	r6,sp,104
 800d704:	800c89c0 	call	800c89c <__ssprint_r>
 800d708:	103fce1e 	bne	r2,zero,800d644 <__alt_data_end+0xfc00d644>
 800d70c:	94bffc04 	addi	r18,r18,-16
 800d710:	d8c01c17 	ldw	r3,112(sp)
 800d714:	d8801b17 	ldw	r2,108(sp)
 800d718:	d811883a 	mov	r8,sp
 800d71c:	e4bfef16 	blt	fp,r18,800d6dc <__alt_data_end+0xfc00d6dc>
 800d720:	dc002517 	ldw	r16,148(sp)
 800d724:	b809883a 	mov	r4,r23
 800d728:	902f883a 	mov	r23,r18
 800d72c:	a025883a 	mov	r18,r20
 800d730:	a829883a 	mov	r20,r21
 800d734:	202b883a 	mov	r21,r4
 800d738:	d9402117 	ldw	r5,132(sp)
 800d73c:	1dc7883a 	add	r3,r3,r23
 800d740:	10800044 	addi	r2,r2,1
 800d744:	41400015 	stw	r5,0(r8)
 800d748:	45c00115 	stw	r23,4(r8)
 800d74c:	d8c01c15 	stw	r3,112(sp)
 800d750:	d8801b15 	stw	r2,108(sp)
 800d754:	010001c4 	movi	r4,7
 800d758:	2080ae16 	blt	r4,r2,800da14 <___svfiprintf_internal_r+0xfb0>
 800d75c:	42000204 	addi	r8,r8,8
 800d760:	003f1c06 	br	800d3d4 <__alt_data_end+0xfc00d3d4>
 800d764:	d9402217 	ldw	r5,136(sp)
 800d768:	8809883a 	mov	r4,r17
 800d76c:	d9801a04 	addi	r6,sp,104
 800d770:	800c89c0 	call	800c89c <__ssprint_r>
 800d774:	103fb31e 	bne	r2,zero,800d644 <__alt_data_end+0xfc00d644>
 800d778:	d8c01c17 	ldw	r3,112(sp)
 800d77c:	d811883a 	mov	r8,sp
 800d780:	003f5406 	br	800d4d4 <__alt_data_end+0xfc00d4d4>
 800d784:	d9402217 	ldw	r5,136(sp)
 800d788:	8809883a 	mov	r4,r17
 800d78c:	d9801a04 	addi	r6,sp,104
 800d790:	800c89c0 	call	800c89c <__ssprint_r>
 800d794:	103f8326 	beq	r2,zero,800d5a4 <__alt_data_end+0xfc00d5a4>
 800d798:	003faa06 	br	800d644 <__alt_data_end+0xfc00d644>
 800d79c:	10803fcc 	andi	r2,r2,255
 800d7a0:	1000021e 	bne	r2,zero,800d7ac <___svfiprintf_internal_r+0xd48>
 800d7a4:	8080004c 	andi	r2,r16,1
 800d7a8:	1000621e 	bne	r2,zero,800d934 <___svfiprintf_internal_r+0xed0>
 800d7ac:	d8c01a04 	addi	r3,sp,104
 800d7b0:	d8c02715 	stw	r3,156(sp)
 800d7b4:	d9002017 	ldw	r4,128(sp)
 800d7b8:	a025883a 	mov	r18,r20
 800d7bc:	a100010e 	bge	r20,r4,800d7c4 <___svfiprintf_internal_r+0xd60>
 800d7c0:	2025883a 	mov	r18,r4
 800d7c4:	bdc03fcc 	andi	r23,r23,255
 800d7c8:	bdc0201c 	xori	r23,r23,128
 800d7cc:	bdffe004 	addi	r23,r23,-128
 800d7d0:	b83e2026 	beq	r23,zero,800d054 <__alt_data_end+0xfc00d054>
 800d7d4:	94800044 	addi	r18,r18,1
 800d7d8:	003e1e06 	br	800d054 <__alt_data_end+0xfc00d054>
 800d7dc:	00bfffc4 	movi	r2,-1
 800d7e0:	003f9d06 	br	800d658 <__alt_data_end+0xfc00d658>
 800d7e4:	d9402217 	ldw	r5,136(sp)
 800d7e8:	8809883a 	mov	r4,r17
 800d7ec:	d9801a04 	addi	r6,sp,104
 800d7f0:	800c89c0 	call	800c89c <__ssprint_r>
 800d7f4:	103f931e 	bne	r2,zero,800d644 <__alt_data_end+0xfc00d644>
 800d7f8:	d811883a 	mov	r8,sp
 800d7fc:	003cd406 	br	800cb50 <__alt_data_end+0xfc00cb50>
 800d800:	d9402217 	ldw	r5,136(sp)
 800d804:	8809883a 	mov	r4,r17
 800d808:	d9801a04 	addi	r6,sp,104
 800d80c:	800c89c0 	call	800c89c <__ssprint_r>
 800d810:	103f8c1e 	bne	r2,zero,800d644 <__alt_data_end+0xfc00d644>
 800d814:	d8c01c17 	ldw	r3,112(sp)
 800d818:	d8801b17 	ldw	r2,108(sp)
 800d81c:	d811883a 	mov	r8,sp
 800d820:	003f2206 	br	800d4ac <__alt_data_end+0xfc00d4ac>
 800d824:	d9002a17 	ldw	r4,168(sp)
 800d828:	df001a04 	addi	fp,sp,104
 800d82c:	908003cc 	andi	r2,r18,15
 800d830:	b006973a 	slli	r3,r22,28
 800d834:	2085883a 	add	r2,r4,r2
 800d838:	9024d13a 	srli	r18,r18,4
 800d83c:	10800003 	ldbu	r2,0(r2)
 800d840:	b02cd13a 	srli	r22,r22,4
 800d844:	e73fffc4 	addi	fp,fp,-1
 800d848:	1ca4b03a 	or	r18,r3,r18
 800d84c:	e0800005 	stb	r2,0(fp)
 800d850:	9584b03a 	or	r2,r18,r22
 800d854:	103ff51e 	bne	r2,zero,800d82c <__alt_data_end+0xfc00d82c>
 800d858:	d9401e17 	ldw	r5,120(sp)
 800d85c:	df002715 	stw	fp,156(sp)
 800d860:	2f29c83a 	sub	r20,r5,fp
 800d864:	003fd306 	br	800d7b4 <__alt_data_end+0xfc00d7b4>
 800d868:	d9402217 	ldw	r5,136(sp)
 800d86c:	8809883a 	mov	r4,r17
 800d870:	d9801a04 	addi	r6,sp,104
 800d874:	800c89c0 	call	800c89c <__ssprint_r>
 800d878:	103f721e 	bne	r2,zero,800d644 <__alt_data_end+0xfc00d644>
 800d87c:	d8c01c17 	ldw	r3,112(sp)
 800d880:	d8801b17 	ldw	r2,108(sp)
 800d884:	d811883a 	mov	r8,sp
 800d888:	003ec206 	br	800d394 <__alt_data_end+0xfc00d394>
 800d88c:	d9402217 	ldw	r5,136(sp)
 800d890:	8809883a 	mov	r4,r17
 800d894:	d9801a04 	addi	r6,sp,104
 800d898:	800c89c0 	call	800c89c <__ssprint_r>
 800d89c:	103f691e 	bne	r2,zero,800d644 <__alt_data_end+0xfc00d644>
 800d8a0:	d8c01c17 	ldw	r3,112(sp)
 800d8a4:	d8801b17 	ldw	r2,108(sp)
 800d8a8:	d811883a 	mov	r8,sp
 800d8ac:	003ec606 	br	800d3c8 <__alt_data_end+0xfc00d3c8>
 800d8b0:	00800084 	movi	r2,2
 800d8b4:	9586b03a 	or	r3,r18,r22
 800d8b8:	003d4f06 	br	800cdf8 <__alt_data_end+0xfc00cdf8>
 800d8bc:	d9402217 	ldw	r5,136(sp)
 800d8c0:	8809883a 	mov	r4,r17
 800d8c4:	d9801a04 	addi	r6,sp,104
 800d8c8:	800c89c0 	call	800c89c <__ssprint_r>
 800d8cc:	103f5d1e 	bne	r2,zero,800d644 <__alt_data_end+0xfc00d644>
 800d8d0:	d8c01c17 	ldw	r3,112(sp)
 800d8d4:	d8801b17 	ldw	r2,108(sp)
 800d8d8:	d811883a 	mov	r8,sp
 800d8dc:	003ea006 	br	800d360 <__alt_data_end+0xfc00d360>
 800d8e0:	d8801e17 	ldw	r2,120(sp)
 800d8e4:	10e9c83a 	sub	r20,r2,r3
 800d8e8:	003fb206 	br	800d7b4 <__alt_data_end+0xfc00d7b4>
 800d8ec:	00800244 	movi	r2,9
 800d8f0:	14bf3636 	bltu	r2,r18,800d5cc <__alt_data_end+0xfc00d5cc>
 800d8f4:	94800c04 	addi	r18,r18,48
 800d8f8:	d8c019c4 	addi	r3,sp,103
 800d8fc:	dc8019c5 	stb	r18,103(sp)
 800d900:	dd002c17 	ldw	r20,176(sp)
 800d904:	d8c02715 	stw	r3,156(sp)
 800d908:	003faa06 	br	800d7b4 <__alt_data_end+0xfc00d7b4>
 800d90c:	d8802415 	stw	r2,144(sp)
 800d910:	a9800007 	ldb	r6,0(r21)
 800d914:	003c9e06 	br	800cb90 <__alt_data_end+0xfc00cb90>
 800d918:	d9402217 	ldw	r5,136(sp)
 800d91c:	8809883a 	mov	r4,r17
 800d920:	d9801a04 	addi	r6,sp,104
 800d924:	800c89c0 	call	800c89c <__ssprint_r>
 800d928:	103f461e 	bne	r2,zero,800d644 <__alt_data_end+0xfc00d644>
 800d92c:	d8c01c17 	ldw	r3,112(sp)
 800d930:	003f1506 	br	800d588 <__alt_data_end+0xfc00d588>
 800d934:	00800c04 	movi	r2,48
 800d938:	d8c019c4 	addi	r3,sp,103
 800d93c:	d88019c5 	stb	r2,103(sp)
 800d940:	dd002c17 	ldw	r20,176(sp)
 800d944:	d8c02715 	stw	r3,156(sp)
 800d948:	003f9a06 	br	800d7b4 <__alt_data_end+0xfc00d7b4>
 800d94c:	d9002417 	ldw	r4,144(sp)
 800d950:	14800017 	ldw	r18,0(r2)
 800d954:	002d883a 	mov	r22,zero
 800d958:	21000104 	addi	r4,r4,4
 800d95c:	d9002415 	stw	r4,144(sp)
 800d960:	003d1406 	br	800cdb4 <__alt_data_end+0xfc00cdb4>
 800d964:	14800017 	ldw	r18,0(r2)
 800d968:	d8802417 	ldw	r2,144(sp)
 800d96c:	002d883a 	mov	r22,zero
 800d970:	9007883a 	mov	r3,r18
 800d974:	10800104 	addi	r2,r2,4
 800d978:	d8802415 	stw	r2,144(sp)
 800d97c:	00800044 	movi	r2,1
 800d980:	003d1d06 	br	800cdf8 <__alt_data_end+0xfc00cdf8>
 800d984:	d8c02417 	ldw	r3,144(sp)
 800d988:	14800017 	ldw	r18,0(r2)
 800d98c:	002d883a 	mov	r22,zero
 800d990:	18c00104 	addi	r3,r3,4
 800d994:	d8c02415 	stw	r3,144(sp)
 800d998:	0005883a 	mov	r2,zero
 800d99c:	9007883a 	mov	r3,r18
 800d9a0:	003d1506 	br	800cdf8 <__alt_data_end+0xfc00cdf8>
 800d9a4:	1c800017 	ldw	r18,0(r3)
 800d9a8:	d9402417 	ldw	r5,144(sp)
 800d9ac:	902dd7fa 	srai	r22,r18,31
 800d9b0:	29400104 	addi	r5,r5,4
 800d9b4:	d9402415 	stw	r5,144(sp)
 800d9b8:	b005883a 	mov	r2,r22
 800d9bc:	003d8d06 	br	800cff4 <__alt_data_end+0xfc00cff4>
 800d9c0:	d9002417 	ldw	r4,144(sp)
 800d9c4:	d9402617 	ldw	r5,152(sp)
 800d9c8:	20800017 	ldw	r2,0(r4)
 800d9cc:	2807d7fa 	srai	r3,r5,31
 800d9d0:	21000104 	addi	r4,r4,4
 800d9d4:	d9002415 	stw	r4,144(sp)
 800d9d8:	11400015 	stw	r5,0(r2)
 800d9dc:	10c00115 	stw	r3,4(r2)
 800d9e0:	003c4306 	br	800caf0 <__alt_data_end+0xfc00caf0>
 800d9e4:	00800c04 	movi	r2,48
 800d9e8:	d8801d05 	stb	r2,116(sp)
 800d9ec:	d9801d45 	stb	r6,117(sp)
 800d9f0:	84000094 	ori	r16,r16,2
 800d9f4:	00800084 	movi	r2,2
 800d9f8:	003cff06 	br	800cdf8 <__alt_data_end+0xfc00cdf8>
 800d9fc:	a9800007 	ldb	r6,0(r21)
 800da00:	003c6306 	br	800cb90 <__alt_data_end+0xfc00cb90>
 800da04:	ad400044 	addi	r21,r21,1
 800da08:	84000814 	ori	r16,r16,32
 800da0c:	11800047 	ldb	r6,1(r2)
 800da10:	003c5f06 	br	800cb90 <__alt_data_end+0xfc00cb90>
 800da14:	d9402217 	ldw	r5,136(sp)
 800da18:	8809883a 	mov	r4,r17
 800da1c:	d9801a04 	addi	r6,sp,104
 800da20:	800c89c0 	call	800c89c <__ssprint_r>
 800da24:	103f071e 	bne	r2,zero,800d644 <__alt_data_end+0xfc00d644>
 800da28:	d8c01c17 	ldw	r3,112(sp)
 800da2c:	d8801b17 	ldw	r2,108(sp)
 800da30:	d811883a 	mov	r8,sp
 800da34:	003e6706 	br	800d3d4 <__alt_data_end+0xfc00d3d4>
 800da38:	01420074 	movhi	r5,2049
 800da3c:	295ba104 	addi	r5,r5,28292
 800da40:	d9402115 	stw	r5,132(sp)
 800da44:	003e8f06 	br	800d484 <__alt_data_end+0xfc00d484>
 800da48:	1c800017 	ldw	r18,0(r3)
 800da4c:	d8c02417 	ldw	r3,144(sp)
 800da50:	902dd7fa 	srai	r22,r18,31
 800da54:	18c00104 	addi	r3,r3,4
 800da58:	d8c02415 	stw	r3,144(sp)
 800da5c:	b005883a 	mov	r2,r22
 800da60:	003d6406 	br	800cff4 <__alt_data_end+0xfc00cff4>
 800da64:	d9002417 	ldw	r4,144(sp)
 800da68:	14800017 	ldw	r18,0(r2)
 800da6c:	002d883a 	mov	r22,zero
 800da70:	21000104 	addi	r4,r4,4
 800da74:	d9002415 	stw	r4,144(sp)
 800da78:	00800044 	movi	r2,1
 800da7c:	9007883a 	mov	r3,r18
 800da80:	003cdd06 	br	800cdf8 <__alt_data_end+0xfc00cdf8>
 800da84:	d9402417 	ldw	r5,144(sp)
 800da88:	14800017 	ldw	r18,0(r2)
 800da8c:	002d883a 	mov	r22,zero
 800da90:	29400104 	addi	r5,r5,4
 800da94:	d9402415 	stw	r5,144(sp)
 800da98:	0005883a 	mov	r2,zero
 800da9c:	9007883a 	mov	r3,r18
 800daa0:	003cd506 	br	800cdf8 <__alt_data_end+0xfc00cdf8>
 800daa4:	14800017 	ldw	r18,0(r2)
 800daa8:	d8802417 	ldw	r2,144(sp)
 800daac:	002d883a 	mov	r22,zero
 800dab0:	10800104 	addi	r2,r2,4
 800dab4:	d8802415 	stw	r2,144(sp)
 800dab8:	003cbe06 	br	800cdb4 <__alt_data_end+0xfc00cdb4>
 800dabc:	8400100c 	andi	r16,r16,64
 800dac0:	80002b26 	beq	r16,zero,800db70 <___svfiprintf_internal_r+0x110c>
 800dac4:	d9402417 	ldw	r5,144(sp)
 800dac8:	d8c02617 	ldw	r3,152(sp)
 800dacc:	28800017 	ldw	r2,0(r5)
 800dad0:	29400104 	addi	r5,r5,4
 800dad4:	d9402415 	stw	r5,144(sp)
 800dad8:	10c0000d 	sth	r3,0(r2)
 800dadc:	003c0406 	br	800caf0 <__alt_data_end+0xfc00caf0>
 800dae0:	d8c01e17 	ldw	r3,120(sp)
 800dae4:	d9002717 	ldw	r4,156(sp)
 800dae8:	1929c83a 	sub	r20,r3,r4
 800daec:	003f3106 	br	800d7b4 <__alt_data_end+0xfc00d7b4>
 800daf0:	d9002717 	ldw	r4,156(sp)
 800daf4:	ddc02d15 	stw	r23,180(sp)
 800daf8:	8003e140 	call	8003e14 <strlen>
 800dafc:	1029883a 	mov	r20,r2
 800db00:	ddc01d83 	ldbu	r23,118(sp)
 800db04:	dd802415 	stw	r22,144(sp)
 800db08:	d8002015 	stw	zero,128(sp)
 800db0c:	da002d17 	ldw	r8,180(sp)
 800db10:	003f2806 	br	800d7b4 <__alt_data_end+0xfc00d7b4>
 800db14:	013fffc4 	movi	r4,-1
 800db18:	003deb06 	br	800d2c8 <__alt_data_end+0xfc00d2c8>
 800db1c:	dd002017 	ldw	r20,128(sp)
 800db20:	00800184 	movi	r2,6
 800db24:	1500012e 	bgeu	r2,r20,800db2c <___svfiprintf_internal_r+0x10c8>
 800db28:	1029883a 	mov	r20,r2
 800db2c:	a025883a 	mov	r18,r20
 800db30:	a0002916 	blt	r20,zero,800dbd8 <___svfiprintf_internal_r+0x1174>
 800db34:	00c20074 	movhi	r3,2049
 800db38:	18db3d04 	addi	r3,r3,27892
 800db3c:	dd802415 	stw	r22,144(sp)
 800db40:	d8c02715 	stw	r3,156(sp)
 800db44:	003d4206 	br	800d050 <__alt_data_end+0xfc00d050>
 800db48:	04001004 	movi	r16,64
 800db4c:	800b883a 	mov	r5,r16
 800db50:	8002d480 	call	8002d48 <_malloc_r>
 800db54:	d8c02217 	ldw	r3,136(sp)
 800db58:	18800015 	stw	r2,0(r3)
 800db5c:	18800415 	stw	r2,16(r3)
 800db60:	10002b26 	beq	r2,zero,800dc10 <___svfiprintf_internal_r+0x11ac>
 800db64:	d9402217 	ldw	r5,136(sp)
 800db68:	2c000515 	stw	r16,20(r5)
 800db6c:	003bd106 	br	800cab4 <__alt_data_end+0xfc00cab4>
 800db70:	d9002417 	ldw	r4,144(sp)
 800db74:	d9402617 	ldw	r5,152(sp)
 800db78:	20800017 	ldw	r2,0(r4)
 800db7c:	21000104 	addi	r4,r4,4
 800db80:	d9002415 	stw	r4,144(sp)
 800db84:	11400015 	stw	r5,0(r2)
 800db88:	003bd906 	br	800caf0 <__alt_data_end+0xfc00caf0>
 800db8c:	01420074 	movhi	r5,2049
 800db90:	295ba504 	addi	r5,r5,28308
 800db94:	d9402815 	stw	r5,160(sp)
 800db98:	003d6506 	br	800d130 <__alt_data_end+0xfc00d130>
 800db9c:	01020074 	movhi	r4,2049
 800dba0:	211ba504 	addi	r4,r4,28308
 800dba4:	d9002815 	stw	r4,160(sp)
 800dba8:	003e6e06 	br	800d564 <__alt_data_end+0xfc00d564>
 800dbac:	01420074 	movhi	r5,2049
 800dbb0:	295ba104 	addi	r5,r5,28292
 800dbb4:	d9402115 	stw	r5,132(sp)
 800dbb8:	003edf06 	br	800d738 <__alt_data_end+0xfc00d738>
 800dbbc:	d8002015 	stw	zero,128(sp)
 800dbc0:	003bf406 	br	800cb94 <__alt_data_end+0xfc00cb94>
 800dbc4:	dd002017 	ldw	r20,128(sp)
 800dbc8:	ddc01d83 	ldbu	r23,118(sp)
 800dbcc:	dd802415 	stw	r22,144(sp)
 800dbd0:	d8002015 	stw	zero,128(sp)
 800dbd4:	003ef706 	br	800d7b4 <__alt_data_end+0xfc00d7b4>
 800dbd8:	0025883a 	mov	r18,zero
 800dbdc:	003fd506 	br	800db34 <__alt_data_end+0xfc00db34>
 800dbe0:	d8c02417 	ldw	r3,144(sp)
 800dbe4:	a809883a 	mov	r4,r21
 800dbe8:	102b883a 	mov	r21,r2
 800dbec:	18c00017 	ldw	r3,0(r3)
 800dbf0:	d8c02015 	stw	r3,128(sp)
 800dbf4:	d8c02417 	ldw	r3,144(sp)
 800dbf8:	d8802017 	ldw	r2,128(sp)
 800dbfc:	19400104 	addi	r5,r3,4
 800dc00:	d9402415 	stw	r5,144(sp)
 800dc04:	10000716 	blt	r2,zero,800dc24 <___svfiprintf_internal_r+0x11c0>
 800dc08:	21800047 	ldb	r6,1(r4)
 800dc0c:	003be006 	br	800cb90 <__alt_data_end+0xfc00cb90>
 800dc10:	d9002917 	ldw	r4,164(sp)
 800dc14:	00800304 	movi	r2,12
 800dc18:	20800015 	stw	r2,0(r4)
 800dc1c:	00bfffc4 	movi	r2,-1
 800dc20:	003e8d06 	br	800d658 <__alt_data_end+0xfc00d658>
 800dc24:	00ffffc4 	movi	r3,-1
 800dc28:	d8c02015 	stw	r3,128(sp)
 800dc2c:	21800047 	ldb	r6,1(r4)
 800dc30:	003bd706 	br	800cb90 <__alt_data_end+0xfc00cb90>

0800dc34 <__sprint_r.part.0>:
 800dc34:	28801917 	ldw	r2,100(r5)
 800dc38:	defff604 	addi	sp,sp,-40
 800dc3c:	dd400515 	stw	r21,20(sp)
 800dc40:	dcc00315 	stw	r19,12(sp)
 800dc44:	dfc00915 	stw	ra,36(sp)
 800dc48:	df000815 	stw	fp,32(sp)
 800dc4c:	ddc00715 	stw	r23,28(sp)
 800dc50:	dd800615 	stw	r22,24(sp)
 800dc54:	dd000415 	stw	r20,16(sp)
 800dc58:	dc800215 	stw	r18,8(sp)
 800dc5c:	dc400115 	stw	r17,4(sp)
 800dc60:	dc000015 	stw	r16,0(sp)
 800dc64:	1088000c 	andi	r2,r2,8192
 800dc68:	2827883a 	mov	r19,r5
 800dc6c:	302b883a 	mov	r21,r6
 800dc70:	10002d26 	beq	r2,zero,800dd28 <__sprint_r.part.0+0xf4>
 800dc74:	30800217 	ldw	r2,8(r6)
 800dc78:	35800017 	ldw	r22,0(r6)
 800dc7c:	10002826 	beq	r2,zero,800dd20 <__sprint_r.part.0+0xec>
 800dc80:	2029883a 	mov	r20,r4
 800dc84:	b5c00104 	addi	r23,r22,4
 800dc88:	04bfffc4 	movi	r18,-1
 800dc8c:	bc400017 	ldw	r17,0(r23)
 800dc90:	b4000017 	ldw	r16,0(r22)
 800dc94:	0039883a 	mov	fp,zero
 800dc98:	8822d0ba 	srli	r17,r17,2
 800dc9c:	04400316 	blt	zero,r17,800dcac <__sprint_r.part.0+0x78>
 800dca0:	00001706 	br	800dd00 <__sprint_r.part.0+0xcc>
 800dca4:	84000104 	addi	r16,r16,4
 800dca8:	8f001526 	beq	r17,fp,800dd00 <__sprint_r.part.0+0xcc>
 800dcac:	81400017 	ldw	r5,0(r16)
 800dcb0:	a009883a 	mov	r4,r20
 800dcb4:	980d883a 	mov	r6,r19
 800dcb8:	800f42c0 	call	800f42c <_fputwc_r>
 800dcbc:	e7000044 	addi	fp,fp,1
 800dcc0:	14bff81e 	bne	r2,r18,800dca4 <__alt_data_end+0xfc00dca4>
 800dcc4:	9005883a 	mov	r2,r18
 800dcc8:	a8000215 	stw	zero,8(r21)
 800dccc:	a8000115 	stw	zero,4(r21)
 800dcd0:	dfc00917 	ldw	ra,36(sp)
 800dcd4:	df000817 	ldw	fp,32(sp)
 800dcd8:	ddc00717 	ldw	r23,28(sp)
 800dcdc:	dd800617 	ldw	r22,24(sp)
 800dce0:	dd400517 	ldw	r21,20(sp)
 800dce4:	dd000417 	ldw	r20,16(sp)
 800dce8:	dcc00317 	ldw	r19,12(sp)
 800dcec:	dc800217 	ldw	r18,8(sp)
 800dcf0:	dc400117 	ldw	r17,4(sp)
 800dcf4:	dc000017 	ldw	r16,0(sp)
 800dcf8:	dec00a04 	addi	sp,sp,40
 800dcfc:	f800283a 	ret
 800dd00:	a8c00217 	ldw	r3,8(r21)
 800dd04:	8c63883a 	add	r17,r17,r17
 800dd08:	8c63883a 	add	r17,r17,r17
 800dd0c:	1c45c83a 	sub	r2,r3,r17
 800dd10:	a8800215 	stw	r2,8(r21)
 800dd14:	b5800204 	addi	r22,r22,8
 800dd18:	bdc00204 	addi	r23,r23,8
 800dd1c:	103fdb1e 	bne	r2,zero,800dc8c <__alt_data_end+0xfc00dc8c>
 800dd20:	0005883a 	mov	r2,zero
 800dd24:	003fe806 	br	800dcc8 <__alt_data_end+0xfc00dcc8>
 800dd28:	800a4dc0 	call	800a4dc <__sfvwrite_r>
 800dd2c:	003fe606 	br	800dcc8 <__alt_data_end+0xfc00dcc8>

0800dd30 <__sprint_r>:
 800dd30:	30c00217 	ldw	r3,8(r6)
 800dd34:	18000126 	beq	r3,zero,800dd3c <__sprint_r+0xc>
 800dd38:	800dc341 	jmpi	800dc34 <__sprint_r.part.0>
 800dd3c:	30000115 	stw	zero,4(r6)
 800dd40:	0005883a 	mov	r2,zero
 800dd44:	f800283a 	ret

0800dd48 <___vfiprintf_internal_r>:
 800dd48:	defeca04 	addi	sp,sp,-1240
 800dd4c:	dcc12f15 	stw	r19,1212(sp)
 800dd50:	dfc13515 	stw	ra,1236(sp)
 800dd54:	df013415 	stw	fp,1232(sp)
 800dd58:	ddc13315 	stw	r23,1228(sp)
 800dd5c:	dd813215 	stw	r22,1224(sp)
 800dd60:	dd413115 	stw	r21,1220(sp)
 800dd64:	dd013015 	stw	r20,1216(sp)
 800dd68:	dc812e15 	stw	r18,1208(sp)
 800dd6c:	dc412d15 	stw	r17,1204(sp)
 800dd70:	dc012c15 	stw	r16,1200(sp)
 800dd74:	d9012115 	stw	r4,1156(sp)
 800dd78:	d9412015 	stw	r5,1152(sp)
 800dd7c:	d9c12315 	stw	r7,1164(sp)
 800dd80:	3027883a 	mov	r19,r6
 800dd84:	20000226 	beq	r4,zero,800dd90 <___vfiprintf_internal_r+0x48>
 800dd88:	20800e17 	ldw	r2,56(r4)
 800dd8c:	1000f726 	beq	r2,zero,800e16c <___vfiprintf_internal_r+0x424>
 800dd90:	d8812017 	ldw	r2,1152(sp)
 800dd94:	10c0030b 	ldhu	r3,12(r2)
 800dd98:	1908000c 	andi	r4,r3,8192
 800dd9c:	1805883a 	mov	r2,r3
 800dda0:	2000081e 	bne	r4,zero,800ddc4 <___vfiprintf_internal_r+0x7c>
 800dda4:	d9412017 	ldw	r5,1152(sp)
 800dda8:	18880014 	ori	r2,r3,8192
 800ddac:	00f7ffc4 	movi	r3,-8193
 800ddb0:	29001917 	ldw	r4,100(r5)
 800ddb4:	2880030d 	sth	r2,12(r5)
 800ddb8:	20c8703a 	and	r4,r4,r3
 800ddbc:	29001915 	stw	r4,100(r5)
 800ddc0:	1007883a 	mov	r3,r2
 800ddc4:	1100020c 	andi	r4,r2,8
 800ddc8:	2000a726 	beq	r4,zero,800e068 <___vfiprintf_internal_r+0x320>
 800ddcc:	d9412017 	ldw	r5,1152(sp)
 800ddd0:	29000417 	ldw	r4,16(r5)
 800ddd4:	2000a426 	beq	r4,zero,800e068 <___vfiprintf_internal_r+0x320>
 800ddd8:	1080068c 	andi	r2,r2,26
 800dddc:	01000284 	movi	r4,10
 800dde0:	1100ab26 	beq	r2,r4,800e090 <___vfiprintf_internal_r+0x348>
 800dde4:	d9010a04 	addi	r4,sp,1064
 800dde8:	d94109c4 	addi	r5,sp,1063
 800ddec:	07020074 	movhi	fp,2049
 800ddf0:	04420074 	movhi	r17,2049
 800ddf4:	2145c83a 	sub	r2,r4,r5
 800ddf8:	e71bad04 	addi	fp,fp,28340
 800ddfc:	8c5ba904 	addi	r17,r17,28324
 800de00:	d9011e15 	stw	r4,1144(sp)
 800de04:	d9411f15 	stw	r5,1148(sp)
 800de08:	dec11a15 	stw	sp,1128(sp)
 800de0c:	d8011c15 	stw	zero,1136(sp)
 800de10:	d8011b15 	stw	zero,1132(sp)
 800de14:	d8012715 	stw	zero,1180(sp)
 800de18:	d8012515 	stw	zero,1172(sp)
 800de1c:	d811883a 	mov	r8,sp
 800de20:	d8812815 	stw	r2,1184(sp)
 800de24:	982f883a 	mov	r23,r19
 800de28:	b8800007 	ldb	r2,0(r23)
 800de2c:	1003b026 	beq	r2,zero,800ecf0 <___vfiprintf_internal_r+0xfa8>
 800de30:	01000944 	movi	r4,37
 800de34:	1103ae26 	beq	r2,r4,800ecf0 <___vfiprintf_internal_r+0xfa8>
 800de38:	b805883a 	mov	r2,r23
 800de3c:	00000106 	br	800de44 <___vfiprintf_internal_r+0xfc>
 800de40:	19000326 	beq	r3,r4,800de50 <___vfiprintf_internal_r+0x108>
 800de44:	10800044 	addi	r2,r2,1
 800de48:	10c00007 	ldb	r3,0(r2)
 800de4c:	183ffc1e 	bne	r3,zero,800de40 <__alt_data_end+0xfc00de40>
 800de50:	15e1c83a 	sub	r16,r2,r23
 800de54:	1029883a 	mov	r20,r2
 800de58:	80001026 	beq	r16,zero,800de9c <___vfiprintf_internal_r+0x154>
 800de5c:	d8c11c17 	ldw	r3,1136(sp)
 800de60:	d8811b17 	ldw	r2,1132(sp)
 800de64:	45c00015 	stw	r23,0(r8)
 800de68:	80c7883a 	add	r3,r16,r3
 800de6c:	10800044 	addi	r2,r2,1
 800de70:	44000115 	stw	r16,4(r8)
 800de74:	d8c11c15 	stw	r3,1136(sp)
 800de78:	d8811b15 	stw	r2,1132(sp)
 800de7c:	010001c4 	movi	r4,7
 800de80:	2080740e 	bge	r4,r2,800e054 <___vfiprintf_internal_r+0x30c>
 800de84:	1803a71e 	bne	r3,zero,800ed24 <___vfiprintf_internal_r+0xfdc>
 800de88:	d8c12517 	ldw	r3,1172(sp)
 800de8c:	d8011b15 	stw	zero,1132(sp)
 800de90:	d811883a 	mov	r8,sp
 800de94:	1c07883a 	add	r3,r3,r16
 800de98:	d8c12515 	stw	r3,1172(sp)
 800de9c:	a0800007 	ldb	r2,0(r20)
 800dea0:	1002bf26 	beq	r2,zero,800e9a0 <___vfiprintf_internal_r+0xc58>
 800dea4:	a5c00044 	addi	r23,r20,1
 800dea8:	a1800047 	ldb	r6,1(r20)
 800deac:	d8011d85 	stb	zero,1142(sp)
 800deb0:	d8012205 	stb	zero,1160(sp)
 800deb4:	043fffc4 	movi	r16,-1
 800deb8:	d8012415 	stw	zero,1168(sp)
 800debc:	0025883a 	mov	r18,zero
 800dec0:	05001604 	movi	r20,88
 800dec4:	05400244 	movi	r21,9
 800dec8:	4027883a 	mov	r19,r8
 800decc:	bdc00044 	addi	r23,r23,1
 800ded0:	30bff804 	addi	r2,r6,-32
 800ded4:	a0825636 	bltu	r20,r2,800e830 <___vfiprintf_internal_r+0xae8>
 800ded8:	100490ba 	slli	r2,r2,2
 800dedc:	01020074 	movhi	r4,2049
 800dee0:	2137bc04 	addi	r4,r4,-8464
 800dee4:	1105883a 	add	r2,r2,r4
 800dee8:	10800017 	ldw	r2,0(r2)
 800deec:	1000683a 	jmp	r2
 800def0:	0800e7c0 	call	800e7c <__reset-0x77ff184>
 800def4:	0800e830 	cmpltui	zero,at,928
 800def8:	0800e830 	cmpltui	zero,at,928
 800defc:	0800e824 	muli	zero,at,928
 800df00:	0800e830 	cmpltui	zero,at,928
 800df04:	0800e830 	cmpltui	zero,at,928
 800df08:	0800e830 	cmpltui	zero,at,928
 800df0c:	0800e830 	cmpltui	zero,at,928
 800df10:	0800e830 	cmpltui	zero,at,928
 800df14:	0800e830 	cmpltui	zero,at,928
 800df18:	0800e5b0 	cmpltui	zero,at,918
 800df1c:	0800e7d8 	cmpnei	zero,at,927
 800df20:	0800e830 	cmpltui	zero,at,928
 800df24:	0800e184 	addi	zero,at,902
 800df28:	0800e5d4 	ori	zero,at,919
 800df2c:	0800e830 	cmpltui	zero,at,928
 800df30:	0800e190 	cmplti	zero,at,902
 800df34:	0800e19c 	xori	zero,at,902
 800df38:	0800e19c 	xori	zero,at,902
 800df3c:	0800e19c 	xori	zero,at,902
 800df40:	0800e19c 	xori	zero,at,902
 800df44:	0800e19c 	xori	zero,at,902
 800df48:	0800e19c 	xori	zero,at,902
 800df4c:	0800e19c 	xori	zero,at,902
 800df50:	0800e19c 	xori	zero,at,902
 800df54:	0800e19c 	xori	zero,at,902
 800df58:	0800e830 	cmpltui	zero,at,928
 800df5c:	0800e830 	cmpltui	zero,at,928
 800df60:	0800e830 	cmpltui	zero,at,928
 800df64:	0800e830 	cmpltui	zero,at,928
 800df68:	0800e830 	cmpltui	zero,at,928
 800df6c:	0800e830 	cmpltui	zero,at,928
 800df70:	0800e830 	cmpltui	zero,at,928
 800df74:	0800e830 	cmpltui	zero,at,928
 800df78:	0800e830 	cmpltui	zero,at,928
 800df7c:	0800e830 	cmpltui	zero,at,928
 800df80:	0800e1dc 	xori	zero,at,903
 800df84:	0800e830 	cmpltui	zero,at,928
 800df88:	0800e830 	cmpltui	zero,at,928
 800df8c:	0800e830 	cmpltui	zero,at,928
 800df90:	0800e830 	cmpltui	zero,at,928
 800df94:	0800e830 	cmpltui	zero,at,928
 800df98:	0800e830 	cmpltui	zero,at,928
 800df9c:	0800e830 	cmpltui	zero,at,928
 800dfa0:	0800e830 	cmpltui	zero,at,928
 800dfa4:	0800e830 	cmpltui	zero,at,928
 800dfa8:	0800e830 	cmpltui	zero,at,928
 800dfac:	0800e4cc 	andi	zero,at,915
 800dfb0:	0800e830 	cmpltui	zero,at,928
 800dfb4:	0800e830 	cmpltui	zero,at,928
 800dfb8:	0800e830 	cmpltui	zero,at,928
 800dfbc:	0800e830 	cmpltui	zero,at,928
 800dfc0:	0800e830 	cmpltui	zero,at,928
 800dfc4:	0800e50c 	andi	zero,at,916
 800dfc8:	0800e830 	cmpltui	zero,at,928
 800dfcc:	0800e830 	cmpltui	zero,at,928
 800dfd0:	0800e550 	cmplti	zero,at,917
 800dfd4:	0800e830 	cmpltui	zero,at,928
 800dfd8:	0800e830 	cmpltui	zero,at,928
 800dfdc:	0800e830 	cmpltui	zero,at,928
 800dfe0:	0800e830 	cmpltui	zero,at,928
 800dfe4:	0800e830 	cmpltui	zero,at,928
 800dfe8:	0800e830 	cmpltui	zero,at,928
 800dfec:	0800e830 	cmpltui	zero,at,928
 800dff0:	0800e830 	cmpltui	zero,at,928
 800dff4:	0800e830 	cmpltui	zero,at,928
 800dff8:	0800e830 	cmpltui	zero,at,928
 800dffc:	0800e498 	cmpnei	zero,at,914
 800e000:	0800e7e8 	cmpgeui	zero,at,927
 800e004:	0800e830 	cmpltui	zero,at,928
 800e008:	0800e830 	cmpltui	zero,at,928
 800e00c:	0800e830 	cmpltui	zero,at,928
 800e010:	0800e624 	muli	zero,at,920
 800e014:	0800e7e8 	cmpgeui	zero,at,927
 800e018:	0800e830 	cmpltui	zero,at,928
 800e01c:	0800e830 	cmpltui	zero,at,928
 800e020:	0800e53c 	xorhi	zero,at,916
 800e024:	0800e830 	cmpltui	zero,at,928
 800e028:	0800e788 	cmpgei	zero,at,926
 800e02c:	0800e710 	cmplti	zero,at,924
 800e030:	0800e744 	addi	zero,at,925
 800e034:	0800e630 	cmpltui	zero,at,920
 800e038:	0800e830 	cmpltui	zero,at,928
 800e03c:	0800e63c 	xorhi	zero,at,920
 800e040:	0800e830 	cmpltui	zero,at,928
 800e044:	0800e698 	cmpnei	zero,at,922
 800e048:	0800e830 	cmpltui	zero,at,928
 800e04c:	0800e830 	cmpltui	zero,at,928
 800e050:	0800e6cc 	andi	zero,at,923
 800e054:	42000204 	addi	r8,r8,8
 800e058:	d8c12517 	ldw	r3,1172(sp)
 800e05c:	1c07883a 	add	r3,r3,r16
 800e060:	d8c12515 	stw	r3,1172(sp)
 800e064:	003f8d06 	br	800de9c <__alt_data_end+0xfc00de9c>
 800e068:	d9012117 	ldw	r4,1156(sp)
 800e06c:	d9412017 	ldw	r5,1152(sp)
 800e070:	800803c0 	call	800803c <__swsetup_r>
 800e074:	1000301e 	bne	r2,zero,800e138 <___vfiprintf_internal_r+0x3f0>
 800e078:	d8812017 	ldw	r2,1152(sp)
 800e07c:	01000284 	movi	r4,10
 800e080:	10c0030b 	ldhu	r3,12(r2)
 800e084:	1805883a 	mov	r2,r3
 800e088:	1080068c 	andi	r2,r2,26
 800e08c:	113f551e 	bne	r2,r4,800dde4 <__alt_data_end+0xfc00dde4>
 800e090:	d9012017 	ldw	r4,1152(sp)
 800e094:	2080038b 	ldhu	r2,14(r4)
 800e098:	113fffcc 	andi	r4,r2,65535
 800e09c:	2120001c 	xori	r4,r4,32768
 800e0a0:	21200004 	addi	r4,r4,-32768
 800e0a4:	203f4f16 	blt	r4,zero,800dde4 <__alt_data_end+0xfc00dde4>
 800e0a8:	d9412017 	ldw	r5,1152(sp)
 800e0ac:	d9012117 	ldw	r4,1156(sp)
 800e0b0:	d9c12317 	ldw	r7,1164(sp)
 800e0b4:	2b001917 	ldw	r12,100(r5)
 800e0b8:	2ac00717 	ldw	r11,28(r5)
 800e0bc:	2a800917 	ldw	r10,36(r5)
 800e0c0:	02010004 	movi	r8,1024
 800e0c4:	18ffff4c 	andi	r3,r3,65533
 800e0c8:	da0b883a 	add	r5,sp,r8
 800e0cc:	980d883a 	mov	r6,r19
 800e0d0:	d8c1030d 	sth	r3,1036(sp)
 800e0d4:	db011915 	stw	r12,1124(sp)
 800e0d8:	d881038d 	sth	r2,1038(sp)
 800e0dc:	dac10715 	stw	r11,1052(sp)
 800e0e0:	da810915 	stw	r10,1060(sp)
 800e0e4:	dec10015 	stw	sp,1024(sp)
 800e0e8:	dec10415 	stw	sp,1040(sp)
 800e0ec:	da010215 	stw	r8,1032(sp)
 800e0f0:	da010515 	stw	r8,1044(sp)
 800e0f4:	d8010615 	stw	zero,1048(sp)
 800e0f8:	800dd480 	call	800dd48 <___vfiprintf_internal_r>
 800e0fc:	1021883a 	mov	r16,r2
 800e100:	10000416 	blt	r2,zero,800e114 <___vfiprintf_internal_r+0x3cc>
 800e104:	d9012117 	ldw	r4,1156(sp)
 800e108:	d9410004 	addi	r5,sp,1024
 800e10c:	8009abc0 	call	8009abc <_fflush_r>
 800e110:	10040f1e 	bne	r2,zero,800f150 <___vfiprintf_internal_r+0x1408>
 800e114:	d881030b 	ldhu	r2,1036(sp)
 800e118:	1080100c 	andi	r2,r2,64
 800e11c:	10000426 	beq	r2,zero,800e130 <___vfiprintf_internal_r+0x3e8>
 800e120:	d8c12017 	ldw	r3,1152(sp)
 800e124:	1880030b 	ldhu	r2,12(r3)
 800e128:	10801014 	ori	r2,r2,64
 800e12c:	1880030d 	sth	r2,12(r3)
 800e130:	8005883a 	mov	r2,r16
 800e134:	00000106 	br	800e13c <___vfiprintf_internal_r+0x3f4>
 800e138:	00bfffc4 	movi	r2,-1
 800e13c:	dfc13517 	ldw	ra,1236(sp)
 800e140:	df013417 	ldw	fp,1232(sp)
 800e144:	ddc13317 	ldw	r23,1228(sp)
 800e148:	dd813217 	ldw	r22,1224(sp)
 800e14c:	dd413117 	ldw	r21,1220(sp)
 800e150:	dd013017 	ldw	r20,1216(sp)
 800e154:	dcc12f17 	ldw	r19,1212(sp)
 800e158:	dc812e17 	ldw	r18,1208(sp)
 800e15c:	dc412d17 	ldw	r17,1204(sp)
 800e160:	dc012c17 	ldw	r16,1200(sp)
 800e164:	dec13604 	addi	sp,sp,1240
 800e168:	f800283a 	ret
 800e16c:	800a0780 	call	800a078 <__sinit>
 800e170:	003f0706 	br	800dd90 <__alt_data_end+0xfc00dd90>
 800e174:	d8c12417 	ldw	r3,1168(sp)
 800e178:	d8812315 	stw	r2,1164(sp)
 800e17c:	00c7c83a 	sub	r3,zero,r3
 800e180:	d8c12415 	stw	r3,1168(sp)
 800e184:	94800114 	ori	r18,r18,4
 800e188:	b9800007 	ldb	r6,0(r23)
 800e18c:	003f4f06 	br	800decc <__alt_data_end+0xfc00decc>
 800e190:	94802014 	ori	r18,r18,128
 800e194:	b9800007 	ldb	r6,0(r23)
 800e198:	003f4c06 	br	800decc <__alt_data_end+0xfc00decc>
 800e19c:	dc012615 	stw	r16,1176(sp)
 800e1a0:	d8012415 	stw	zero,1168(sp)
 800e1a4:	35bff404 	addi	r22,r6,-48
 800e1a8:	0009883a 	mov	r4,zero
 800e1ac:	b821883a 	mov	r16,r23
 800e1b0:	01400284 	movi	r5,10
 800e1b4:	80027c00 	call	80027c0 <__mulsi3>
 800e1b8:	81800007 	ldb	r6,0(r16)
 800e1bc:	1589883a 	add	r4,r2,r22
 800e1c0:	bdc00044 	addi	r23,r23,1
 800e1c4:	35bff404 	addi	r22,r6,-48
 800e1c8:	b821883a 	mov	r16,r23
 800e1cc:	adbff82e 	bgeu	r21,r22,800e1b0 <__alt_data_end+0xfc00e1b0>
 800e1d0:	d9012415 	stw	r4,1168(sp)
 800e1d4:	dc012617 	ldw	r16,1176(sp)
 800e1d8:	003f3d06 	br	800ded0 <__alt_data_end+0xfc00ded0>
 800e1dc:	d8c12203 	ldbu	r3,1160(sp)
 800e1e0:	94800414 	ori	r18,r18,16
 800e1e4:	9080080c 	andi	r2,r18,32
 800e1e8:	d8c11d85 	stb	r3,1142(sp)
 800e1ec:	9811883a 	mov	r8,r19
 800e1f0:	d8c12317 	ldw	r3,1164(sp)
 800e1f4:	10018226 	beq	r2,zero,800e800 <___vfiprintf_internal_r+0xab8>
 800e1f8:	d9012317 	ldw	r4,1164(sp)
 800e1fc:	18800117 	ldw	r2,4(r3)
 800e200:	1cc00017 	ldw	r19,0(r3)
 800e204:	21000204 	addi	r4,r4,8
 800e208:	d9012315 	stw	r4,1164(sp)
 800e20c:	102b883a 	mov	r21,r2
 800e210:	10030016 	blt	r2,zero,800ee14 <___vfiprintf_internal_r+0x10cc>
 800e214:	dd811d83 	ldbu	r22,1142(sp)
 800e218:	8029883a 	mov	r20,r16
 800e21c:	00800044 	movi	r2,1
 800e220:	9d46b03a 	or	r3,r19,r21
 800e224:	80000216 	blt	r16,zero,800e230 <___vfiprintf_internal_r+0x4e8>
 800e228:	013fdfc4 	movi	r4,-129
 800e22c:	9124703a 	and	r18,r18,r4
 800e230:	1801b41e 	bne	r3,zero,800e904 <___vfiprintf_internal_r+0xbbc>
 800e234:	80028126 	beq	r16,zero,800ec3c <___vfiprintf_internal_r+0xef4>
 800e238:	10803fcc 	andi	r2,r2,255
 800e23c:	00c00044 	movi	r3,1
 800e240:	10c1d126 	beq	r2,r3,800e988 <___vfiprintf_internal_r+0xc40>
 800e244:	00c00084 	movi	r3,2
 800e248:	10c28626 	beq	r2,r3,800ec64 <___vfiprintf_internal_r+0xf1c>
 800e24c:	d8c10a04 	addi	r3,sp,1064
 800e250:	9808d0fa 	srli	r4,r19,3
 800e254:	a80a977a 	slli	r5,r21,29
 800e258:	a82ad0fa 	srli	r21,r21,3
 800e25c:	9cc001cc 	andi	r19,r19,7
 800e260:	98800c04 	addi	r2,r19,48
 800e264:	18ffffc4 	addi	r3,r3,-1
 800e268:	2926b03a 	or	r19,r5,r4
 800e26c:	18800005 	stb	r2,0(r3)
 800e270:	9d48b03a 	or	r4,r19,r21
 800e274:	203ff61e 	bne	r4,zero,800e250 <__alt_data_end+0xfc00e250>
 800e278:	9100004c 	andi	r4,r18,1
 800e27c:	d8c12215 	stw	r3,1160(sp)
 800e280:	2002b31e 	bne	r4,zero,800ed50 <___vfiprintf_internal_r+0x1008>
 800e284:	d9411e17 	ldw	r5,1144(sp)
 800e288:	28e9c83a 	sub	r20,r5,r3
 800e28c:	a02b883a 	mov	r21,r20
 800e290:	a400010e 	bge	r20,r16,800e298 <___vfiprintf_internal_r+0x550>
 800e294:	802b883a 	mov	r21,r16
 800e298:	b5803fcc 	andi	r22,r22,255
 800e29c:	b580201c 	xori	r22,r22,128
 800e2a0:	b5bfe004 	addi	r22,r22,-128
 800e2a4:	b0000126 	beq	r22,zero,800e2ac <___vfiprintf_internal_r+0x564>
 800e2a8:	ad400044 	addi	r21,r21,1
 800e2ac:	9280008c 	andi	r10,r18,2
 800e2b0:	50000126 	beq	r10,zero,800e2b8 <___vfiprintf_internal_r+0x570>
 800e2b4:	ad400084 	addi	r21,r21,2
 800e2b8:	9580210c 	andi	r22,r18,132
 800e2bc:	b001751e 	bne	r22,zero,800e894 <___vfiprintf_internal_r+0xb4c>
 800e2c0:	d9012417 	ldw	r4,1168(sp)
 800e2c4:	2567c83a 	sub	r19,r4,r21
 800e2c8:	04c1720e 	bge	zero,r19,800e894 <___vfiprintf_internal_r+0xb4c>
 800e2cc:	01c00404 	movi	r7,16
 800e2d0:	d8c11c17 	ldw	r3,1136(sp)
 800e2d4:	3cc36b0e 	bge	r7,r19,800f084 <___vfiprintf_internal_r+0x133c>
 800e2d8:	00820074 	movhi	r2,2049
 800e2dc:	109bad04 	addi	r2,r2,28340
 800e2e0:	dc012915 	stw	r16,1188(sp)
 800e2e4:	d9011b17 	ldw	r4,1132(sp)
 800e2e8:	9821883a 	mov	r16,r19
 800e2ec:	d8812615 	stw	r2,1176(sp)
 800e2f0:	030001c4 	movi	r12,7
 800e2f4:	5027883a 	mov	r19,r10
 800e2f8:	00000506 	br	800e310 <___vfiprintf_internal_r+0x5c8>
 800e2fc:	21400084 	addi	r5,r4,2
 800e300:	42000204 	addi	r8,r8,8
 800e304:	1009883a 	mov	r4,r2
 800e308:	843ffc04 	addi	r16,r16,-16
 800e30c:	3c000d0e 	bge	r7,r16,800e344 <___vfiprintf_internal_r+0x5fc>
 800e310:	18c00404 	addi	r3,r3,16
 800e314:	20800044 	addi	r2,r4,1
 800e318:	47000015 	stw	fp,0(r8)
 800e31c:	41c00115 	stw	r7,4(r8)
 800e320:	d8c11c15 	stw	r3,1136(sp)
 800e324:	d8811b15 	stw	r2,1132(sp)
 800e328:	60bff40e 	bge	r12,r2,800e2fc <__alt_data_end+0xfc00e2fc>
 800e32c:	18014b1e 	bne	r3,zero,800e85c <___vfiprintf_internal_r+0xb14>
 800e330:	843ffc04 	addi	r16,r16,-16
 800e334:	0009883a 	mov	r4,zero
 800e338:	01400044 	movi	r5,1
 800e33c:	d811883a 	mov	r8,sp
 800e340:	3c3ff316 	blt	r7,r16,800e310 <__alt_data_end+0xfc00e310>
 800e344:	9815883a 	mov	r10,r19
 800e348:	8027883a 	mov	r19,r16
 800e34c:	dc012917 	ldw	r16,1188(sp)
 800e350:	d9012617 	ldw	r4,1176(sp)
 800e354:	98c7883a 	add	r3,r19,r3
 800e358:	44c00115 	stw	r19,4(r8)
 800e35c:	41000015 	stw	r4,0(r8)
 800e360:	d8c11c15 	stw	r3,1136(sp)
 800e364:	d9411b15 	stw	r5,1132(sp)
 800e368:	008001c4 	movi	r2,7
 800e36c:	11425116 	blt	r2,r5,800ecb4 <___vfiprintf_internal_r+0xf6c>
 800e370:	d9011d87 	ldb	r4,1142(sp)
 800e374:	42000204 	addi	r8,r8,8
 800e378:	28800044 	addi	r2,r5,1
 800e37c:	20014a1e 	bne	r4,zero,800e8a8 <___vfiprintf_internal_r+0xb60>
 800e380:	50000c26 	beq	r10,zero,800e3b4 <___vfiprintf_internal_r+0x66c>
 800e384:	d9011d04 	addi	r4,sp,1140
 800e388:	18c00084 	addi	r3,r3,2
 800e38c:	41000015 	stw	r4,0(r8)
 800e390:	01000084 	movi	r4,2
 800e394:	41000115 	stw	r4,4(r8)
 800e398:	d8c11c15 	stw	r3,1136(sp)
 800e39c:	d8811b15 	stw	r2,1132(sp)
 800e3a0:	010001c4 	movi	r4,7
 800e3a4:	20822016 	blt	r4,r2,800ec28 <___vfiprintf_internal_r+0xee0>
 800e3a8:	100b883a 	mov	r5,r2
 800e3ac:	42000204 	addi	r8,r8,8
 800e3b0:	10800044 	addi	r2,r2,1
 800e3b4:	01002004 	movi	r4,128
 800e3b8:	b101de26 	beq	r22,r4,800eb34 <___vfiprintf_internal_r+0xdec>
 800e3bc:	8521c83a 	sub	r16,r16,r20
 800e3c0:	0400230e 	bge	zero,r16,800e450 <___vfiprintf_internal_r+0x708>
 800e3c4:	04c00404 	movi	r19,16
 800e3c8:	9c030d0e 	bge	r19,r16,800f000 <___vfiprintf_internal_r+0x12b8>
 800e3cc:	00820074 	movhi	r2,2049
 800e3d0:	109ba904 	addi	r2,r2,28324
 800e3d4:	d8812615 	stw	r2,1176(sp)
 800e3d8:	058001c4 	movi	r22,7
 800e3dc:	00000506 	br	800e3f4 <___vfiprintf_internal_r+0x6ac>
 800e3e0:	28800084 	addi	r2,r5,2
 800e3e4:	42000204 	addi	r8,r8,8
 800e3e8:	200b883a 	mov	r5,r4
 800e3ec:	843ffc04 	addi	r16,r16,-16
 800e3f0:	9c000d0e 	bge	r19,r16,800e428 <___vfiprintf_internal_r+0x6e0>
 800e3f4:	18c00404 	addi	r3,r3,16
 800e3f8:	29000044 	addi	r4,r5,1
 800e3fc:	44400015 	stw	r17,0(r8)
 800e400:	44c00115 	stw	r19,4(r8)
 800e404:	d8c11c15 	stw	r3,1136(sp)
 800e408:	d9011b15 	stw	r4,1132(sp)
 800e40c:	b13ff40e 	bge	r22,r4,800e3e0 <__alt_data_end+0xfc00e3e0>
 800e410:	1801321e 	bne	r3,zero,800e8dc <___vfiprintf_internal_r+0xb94>
 800e414:	843ffc04 	addi	r16,r16,-16
 800e418:	000b883a 	mov	r5,zero
 800e41c:	00800044 	movi	r2,1
 800e420:	d811883a 	mov	r8,sp
 800e424:	9c3ff316 	blt	r19,r16,800e3f4 <__alt_data_end+0xfc00e3f4>
 800e428:	d9012617 	ldw	r4,1176(sp)
 800e42c:	1c07883a 	add	r3,r3,r16
 800e430:	44000115 	stw	r16,4(r8)
 800e434:	41000015 	stw	r4,0(r8)
 800e438:	d8c11c15 	stw	r3,1136(sp)
 800e43c:	d8811b15 	stw	r2,1132(sp)
 800e440:	010001c4 	movi	r4,7
 800e444:	20816216 	blt	r4,r2,800e9d0 <___vfiprintf_internal_r+0xc88>
 800e448:	42000204 	addi	r8,r8,8
 800e44c:	10800044 	addi	r2,r2,1
 800e450:	d9012217 	ldw	r4,1160(sp)
 800e454:	1d07883a 	add	r3,r3,r20
 800e458:	45000115 	stw	r20,4(r8)
 800e45c:	41000015 	stw	r4,0(r8)
 800e460:	d8c11c15 	stw	r3,1136(sp)
 800e464:	d8811b15 	stw	r2,1132(sp)
 800e468:	010001c4 	movi	r4,7
 800e46c:	2081610e 	bge	r4,r2,800e9f4 <___vfiprintf_internal_r+0xcac>
 800e470:	1802211e 	bne	r3,zero,800ecf8 <___vfiprintf_internal_r+0xfb0>
 800e474:	d8011b15 	stw	zero,1132(sp)
 800e478:	9480010c 	andi	r18,r18,4
 800e47c:	9002171e 	bne	r18,zero,800ecdc <___vfiprintf_internal_r+0xf94>
 800e480:	d9412417 	ldw	r5,1168(sp)
 800e484:	a9433716 	blt	r21,r5,800f164 <___vfiprintf_internal_r+0x141c>
 800e488:	d8812517 	ldw	r2,1172(sp)
 800e48c:	1545883a 	add	r2,r2,r21
 800e490:	d8812515 	stw	r2,1172(sp)
 800e494:	00019a06 	br	800eb00 <___vfiprintf_internal_r+0xdb8>
 800e498:	d8c12317 	ldw	r3,1164(sp)
 800e49c:	05400044 	movi	r21,1
 800e4a0:	9811883a 	mov	r8,r19
 800e4a4:	18800017 	ldw	r2,0(r3)
 800e4a8:	18c00104 	addi	r3,r3,4
 800e4ac:	d8c12315 	stw	r3,1164(sp)
 800e4b0:	d8c10004 	addi	r3,sp,1024
 800e4b4:	d8011d85 	stb	zero,1142(sp)
 800e4b8:	d8810005 	stb	r2,1024(sp)
 800e4bc:	a829883a 	mov	r20,r21
 800e4c0:	d8c12215 	stw	r3,1160(sp)
 800e4c4:	0021883a 	mov	r16,zero
 800e4c8:	003f7806 	br	800e2ac <__alt_data_end+0xfc00e2ac>
 800e4cc:	94800414 	ori	r18,r18,16
 800e4d0:	9080080c 	andi	r2,r18,32
 800e4d4:	9811883a 	mov	r8,r19
 800e4d8:	10009026 	beq	r2,zero,800e71c <___vfiprintf_internal_r+0x9d4>
 800e4dc:	d8812317 	ldw	r2,1164(sp)
 800e4e0:	d8c12317 	ldw	r3,1164(sp)
 800e4e4:	14c00017 	ldw	r19,0(r2)
 800e4e8:	15400117 	ldw	r21,4(r2)
 800e4ec:	18c00204 	addi	r3,r3,8
 800e4f0:	d8c12315 	stw	r3,1164(sp)
 800e4f4:	0005883a 	mov	r2,zero
 800e4f8:	9d46b03a 	or	r3,r19,r21
 800e4fc:	d8011d85 	stb	zero,1142(sp)
 800e500:	8029883a 	mov	r20,r16
 800e504:	002d883a 	mov	r22,zero
 800e508:	003f4606 	br	800e224 <__alt_data_end+0xfc00e224>
 800e50c:	94800414 	ori	r18,r18,16
 800e510:	9080080c 	andi	r2,r18,32
 800e514:	9811883a 	mov	r8,r19
 800e518:	10006226 	beq	r2,zero,800e6a4 <___vfiprintf_internal_r+0x95c>
 800e51c:	d9012317 	ldw	r4,1164(sp)
 800e520:	00800044 	movi	r2,1
 800e524:	24c00017 	ldw	r19,0(r4)
 800e528:	25400117 	ldw	r21,4(r4)
 800e52c:	21000204 	addi	r4,r4,8
 800e530:	d9012315 	stw	r4,1164(sp)
 800e534:	9d46b03a 	or	r3,r19,r21
 800e538:	003ff006 	br	800e4fc <__alt_data_end+0xfc00e4fc>
 800e53c:	b9800007 	ldb	r6,0(r23)
 800e540:	00801b04 	movi	r2,108
 800e544:	3082b226 	beq	r6,r2,800f010 <___vfiprintf_internal_r+0x12c8>
 800e548:	94800414 	ori	r18,r18,16
 800e54c:	003e5f06 	br	800decc <__alt_data_end+0xfc00decc>
 800e550:	d8c12203 	ldbu	r3,1160(sp)
 800e554:	01020074 	movhi	r4,2049
 800e558:	211b3304 	addi	r4,r4,27852
 800e55c:	d8c11d85 	stb	r3,1142(sp)
 800e560:	d9012715 	stw	r4,1180(sp)
 800e564:	90c0080c 	andi	r3,r18,32
 800e568:	9811883a 	mov	r8,r19
 800e56c:	d8812317 	ldw	r2,1164(sp)
 800e570:	18005f26 	beq	r3,zero,800e6f0 <___vfiprintf_internal_r+0x9a8>
 800e574:	d9012317 	ldw	r4,1164(sp)
 800e578:	14c00017 	ldw	r19,0(r2)
 800e57c:	15400117 	ldw	r21,4(r2)
 800e580:	21000204 	addi	r4,r4,8
 800e584:	d9012315 	stw	r4,1164(sp)
 800e588:	9080004c 	andi	r2,r18,1
 800e58c:	1001e226 	beq	r2,zero,800ed18 <___vfiprintf_internal_r+0xfd0>
 800e590:	9d46b03a 	or	r3,r19,r21
 800e594:	18024e26 	beq	r3,zero,800eed0 <___vfiprintf_internal_r+0x1188>
 800e598:	00800c04 	movi	r2,48
 800e59c:	d8811d05 	stb	r2,1140(sp)
 800e5a0:	d9811d45 	stb	r6,1141(sp)
 800e5a4:	94800094 	ori	r18,r18,2
 800e5a8:	00800084 	movi	r2,2
 800e5ac:	003fd306 	br	800e4fc <__alt_data_end+0xfc00e4fc>
 800e5b0:	d9012317 	ldw	r4,1164(sp)
 800e5b4:	d9412317 	ldw	r5,1164(sp)
 800e5b8:	21000017 	ldw	r4,0(r4)
 800e5bc:	28800104 	addi	r2,r5,4
 800e5c0:	d9012415 	stw	r4,1168(sp)
 800e5c4:	203eeb16 	blt	r4,zero,800e174 <__alt_data_end+0xfc00e174>
 800e5c8:	d8812315 	stw	r2,1164(sp)
 800e5cc:	b9800007 	ldb	r6,0(r23)
 800e5d0:	003e3e06 	br	800decc <__alt_data_end+0xfc00decc>
 800e5d4:	b9800007 	ldb	r6,0(r23)
 800e5d8:	01000a84 	movi	r4,42
 800e5dc:	b8800044 	addi	r2,r23,1
 800e5e0:	3102d226 	beq	r6,r4,800f12c <___vfiprintf_internal_r+0x13e4>
 800e5e4:	35bff404 	addi	r22,r6,-48
 800e5e8:	102f883a 	mov	r23,r2
 800e5ec:	0021883a 	mov	r16,zero
 800e5f0:	adbe3736 	bltu	r21,r22,800ded0 <__alt_data_end+0xfc00ded0>
 800e5f4:	0009883a 	mov	r4,zero
 800e5f8:	01400284 	movi	r5,10
 800e5fc:	80027c00 	call	80027c0 <__mulsi3>
 800e600:	b9800007 	ldb	r6,0(r23)
 800e604:	b089883a 	add	r4,r22,r2
 800e608:	bdc00044 	addi	r23,r23,1
 800e60c:	35bff404 	addi	r22,r6,-48
 800e610:	adbff92e 	bgeu	r21,r22,800e5f8 <__alt_data_end+0xfc00e5f8>
 800e614:	2021883a 	mov	r16,r4
 800e618:	203e2d0e 	bge	r4,zero,800ded0 <__alt_data_end+0xfc00ded0>
 800e61c:	043fffc4 	movi	r16,-1
 800e620:	003e2b06 	br	800ded0 <__alt_data_end+0xfc00ded0>
 800e624:	94801014 	ori	r18,r18,64
 800e628:	b9800007 	ldb	r6,0(r23)
 800e62c:	003e2706 	br	800decc <__alt_data_end+0xfc00decc>
 800e630:	94800814 	ori	r18,r18,32
 800e634:	b9800007 	ldb	r6,0(r23)
 800e638:	003e2406 	br	800decc <__alt_data_end+0xfc00decc>
 800e63c:	d9412317 	ldw	r5,1164(sp)
 800e640:	d8812317 	ldw	r2,1164(sp)
 800e644:	d8011d85 	stb	zero,1142(sp)
 800e648:	29400017 	ldw	r5,0(r5)
 800e64c:	9811883a 	mov	r8,r19
 800e650:	14c00104 	addi	r19,r2,4
 800e654:	d9412215 	stw	r5,1160(sp)
 800e658:	28029026 	beq	r5,zero,800f09c <___vfiprintf_internal_r+0x1354>
 800e65c:	d9012217 	ldw	r4,1160(sp)
 800e660:	80027616 	blt	r16,zero,800f03c <___vfiprintf_internal_r+0x12f4>
 800e664:	000b883a 	mov	r5,zero
 800e668:	800d883a 	mov	r6,r16
 800e66c:	da012a15 	stw	r8,1192(sp)
 800e670:	800ad880 	call	800ad88 <memchr>
 800e674:	da012a17 	ldw	r8,1192(sp)
 800e678:	1002a026 	beq	r2,zero,800f0fc <___vfiprintf_internal_r+0x13b4>
 800e67c:	d8c12217 	ldw	r3,1160(sp)
 800e680:	10e9c83a 	sub	r20,r2,r3
 800e684:	85023816 	blt	r16,r20,800ef68 <___vfiprintf_internal_r+0x1220>
 800e688:	dd811d83 	ldbu	r22,1142(sp)
 800e68c:	dcc12315 	stw	r19,1164(sp)
 800e690:	0021883a 	mov	r16,zero
 800e694:	003efd06 	br	800e28c <__alt_data_end+0xfc00e28c>
 800e698:	9080080c 	andi	r2,r18,32
 800e69c:	9811883a 	mov	r8,r19
 800e6a0:	103f9e1e 	bne	r2,zero,800e51c <__alt_data_end+0xfc00e51c>
 800e6a4:	9080040c 	andi	r2,r18,16
 800e6a8:	10021726 	beq	r2,zero,800ef08 <___vfiprintf_internal_r+0x11c0>
 800e6ac:	d9412317 	ldw	r5,1164(sp)
 800e6b0:	002b883a 	mov	r21,zero
 800e6b4:	00800044 	movi	r2,1
 800e6b8:	2cc00017 	ldw	r19,0(r5)
 800e6bc:	29400104 	addi	r5,r5,4
 800e6c0:	d9412315 	stw	r5,1164(sp)
 800e6c4:	9807883a 	mov	r3,r19
 800e6c8:	003f8c06 	br	800e4fc <__alt_data_end+0xfc00e4fc>
 800e6cc:	d8c12203 	ldbu	r3,1160(sp)
 800e6d0:	01020074 	movhi	r4,2049
 800e6d4:	211b3804 	addi	r4,r4,27872
 800e6d8:	d8c11d85 	stb	r3,1142(sp)
 800e6dc:	d9012715 	stw	r4,1180(sp)
 800e6e0:	90c0080c 	andi	r3,r18,32
 800e6e4:	9811883a 	mov	r8,r19
 800e6e8:	d8812317 	ldw	r2,1164(sp)
 800e6ec:	183fa11e 	bne	r3,zero,800e574 <__alt_data_end+0xfc00e574>
 800e6f0:	90c0040c 	andi	r3,r18,16
 800e6f4:	1801e526 	beq	r3,zero,800ee8c <___vfiprintf_internal_r+0x1144>
 800e6f8:	d9412317 	ldw	r5,1164(sp)
 800e6fc:	14c00017 	ldw	r19,0(r2)
 800e700:	002b883a 	mov	r21,zero
 800e704:	29400104 	addi	r5,r5,4
 800e708:	d9412315 	stw	r5,1164(sp)
 800e70c:	003f9e06 	br	800e588 <__alt_data_end+0xfc00e588>
 800e710:	9080080c 	andi	r2,r18,32
 800e714:	9811883a 	mov	r8,r19
 800e718:	103f701e 	bne	r2,zero,800e4dc <__alt_data_end+0xfc00e4dc>
 800e71c:	9080040c 	andi	r2,r18,16
 800e720:	1001ef26 	beq	r2,zero,800eee0 <___vfiprintf_internal_r+0x1198>
 800e724:	d9012317 	ldw	r4,1164(sp)
 800e728:	002b883a 	mov	r21,zero
 800e72c:	0005883a 	mov	r2,zero
 800e730:	24c00017 	ldw	r19,0(r4)
 800e734:	21000104 	addi	r4,r4,4
 800e738:	d9012315 	stw	r4,1164(sp)
 800e73c:	9807883a 	mov	r3,r19
 800e740:	003f6e06 	br	800e4fc <__alt_data_end+0xfc00e4fc>
 800e744:	d8c12317 	ldw	r3,1164(sp)
 800e748:	9811883a 	mov	r8,r19
 800e74c:	00800c04 	movi	r2,48
 800e750:	1cc00017 	ldw	r19,0(r3)
 800e754:	01020074 	movhi	r4,2049
 800e758:	18c00104 	addi	r3,r3,4
 800e75c:	d8811d05 	stb	r2,1140(sp)
 800e760:	211b3804 	addi	r4,r4,27872
 800e764:	00801e04 	movi	r2,120
 800e768:	d8811d45 	stb	r2,1141(sp)
 800e76c:	d8c12315 	stw	r3,1164(sp)
 800e770:	002b883a 	mov	r21,zero
 800e774:	94800094 	ori	r18,r18,2
 800e778:	d9012715 	stw	r4,1180(sp)
 800e77c:	00800084 	movi	r2,2
 800e780:	9807883a 	mov	r3,r19
 800e784:	003f5d06 	br	800e4fc <__alt_data_end+0xfc00e4fc>
 800e788:	d8c12203 	ldbu	r3,1160(sp)
 800e78c:	9080080c 	andi	r2,r18,32
 800e790:	9811883a 	mov	r8,r19
 800e794:	d8c11d85 	stb	r3,1142(sp)
 800e798:	1001b126 	beq	r2,zero,800ee60 <___vfiprintf_internal_r+0x1118>
 800e79c:	d9012317 	ldw	r4,1164(sp)
 800e7a0:	d9412517 	ldw	r5,1172(sp)
 800e7a4:	20800017 	ldw	r2,0(r4)
 800e7a8:	2807d7fa 	srai	r3,r5,31
 800e7ac:	21000104 	addi	r4,r4,4
 800e7b0:	d9012315 	stw	r4,1164(sp)
 800e7b4:	11400015 	stw	r5,0(r2)
 800e7b8:	10c00115 	stw	r3,4(r2)
 800e7bc:	003d9a06 	br	800de28 <__alt_data_end+0xfc00de28>
 800e7c0:	d8812207 	ldb	r2,1160(sp)
 800e7c4:	1001c41e 	bne	r2,zero,800eed8 <___vfiprintf_internal_r+0x1190>
 800e7c8:	00c00804 	movi	r3,32
 800e7cc:	d8c12205 	stb	r3,1160(sp)
 800e7d0:	b9800007 	ldb	r6,0(r23)
 800e7d4:	003dbd06 	br	800decc <__alt_data_end+0xfc00decc>
 800e7d8:	00c00ac4 	movi	r3,43
 800e7dc:	d8c12205 	stb	r3,1160(sp)
 800e7e0:	b9800007 	ldb	r6,0(r23)
 800e7e4:	003db906 	br	800decc <__alt_data_end+0xfc00decc>
 800e7e8:	d8c12203 	ldbu	r3,1160(sp)
 800e7ec:	9080080c 	andi	r2,r18,32
 800e7f0:	9811883a 	mov	r8,r19
 800e7f4:	d8c11d85 	stb	r3,1142(sp)
 800e7f8:	d8c12317 	ldw	r3,1164(sp)
 800e7fc:	103e7e1e 	bne	r2,zero,800e1f8 <__alt_data_end+0xfc00e1f8>
 800e800:	9080040c 	andi	r2,r18,16
 800e804:	1001a926 	beq	r2,zero,800eeac <___vfiprintf_internal_r+0x1164>
 800e808:	1cc00017 	ldw	r19,0(r3)
 800e80c:	d9412317 	ldw	r5,1164(sp)
 800e810:	982bd7fa 	srai	r21,r19,31
 800e814:	29400104 	addi	r5,r5,4
 800e818:	d9412315 	stw	r5,1164(sp)
 800e81c:	a805883a 	mov	r2,r21
 800e820:	003e7b06 	br	800e210 <__alt_data_end+0xfc00e210>
 800e824:	94800054 	ori	r18,r18,1
 800e828:	b9800007 	ldb	r6,0(r23)
 800e82c:	003da706 	br	800decc <__alt_data_end+0xfc00decc>
 800e830:	d8c12203 	ldbu	r3,1160(sp)
 800e834:	9811883a 	mov	r8,r19
 800e838:	d8c11d85 	stb	r3,1142(sp)
 800e83c:	30005826 	beq	r6,zero,800e9a0 <___vfiprintf_internal_r+0xc58>
 800e840:	05400044 	movi	r21,1
 800e844:	d8c10004 	addi	r3,sp,1024
 800e848:	d9810005 	stb	r6,1024(sp)
 800e84c:	d8011d85 	stb	zero,1142(sp)
 800e850:	a829883a 	mov	r20,r21
 800e854:	d8c12215 	stw	r3,1160(sp)
 800e858:	003f1a06 	br	800e4c4 <__alt_data_end+0xfc00e4c4>
 800e85c:	d9012117 	ldw	r4,1156(sp)
 800e860:	d9412017 	ldw	r5,1152(sp)
 800e864:	d9811a04 	addi	r6,sp,1128
 800e868:	d9c12a15 	stw	r7,1192(sp)
 800e86c:	db012b15 	stw	r12,1196(sp)
 800e870:	800dc340 	call	800dc34 <__sprint_r.part.0>
 800e874:	d9c12a17 	ldw	r7,1192(sp)
 800e878:	db012b17 	ldw	r12,1196(sp)
 800e87c:	10004e1e 	bne	r2,zero,800e9b8 <___vfiprintf_internal_r+0xc70>
 800e880:	d9011b17 	ldw	r4,1132(sp)
 800e884:	d8c11c17 	ldw	r3,1136(sp)
 800e888:	d811883a 	mov	r8,sp
 800e88c:	21400044 	addi	r5,r4,1
 800e890:	003e9d06 	br	800e308 <__alt_data_end+0xfc00e308>
 800e894:	d9411b17 	ldw	r5,1132(sp)
 800e898:	d8c11c17 	ldw	r3,1136(sp)
 800e89c:	28800044 	addi	r2,r5,1
 800e8a0:	d9011d87 	ldb	r4,1142(sp)
 800e8a4:	203eb626 	beq	r4,zero,800e380 <__alt_data_end+0xfc00e380>
 800e8a8:	01000044 	movi	r4,1
 800e8ac:	d9411d84 	addi	r5,sp,1142
 800e8b0:	1907883a 	add	r3,r3,r4
 800e8b4:	41400015 	stw	r5,0(r8)
 800e8b8:	41000115 	stw	r4,4(r8)
 800e8bc:	d8c11c15 	stw	r3,1136(sp)
 800e8c0:	d8811b15 	stw	r2,1132(sp)
 800e8c4:	014001c4 	movi	r5,7
 800e8c8:	2880ce16 	blt	r5,r2,800ec04 <___vfiprintf_internal_r+0xebc>
 800e8cc:	100b883a 	mov	r5,r2
 800e8d0:	42000204 	addi	r8,r8,8
 800e8d4:	10800044 	addi	r2,r2,1
 800e8d8:	003ea906 	br	800e380 <__alt_data_end+0xfc00e380>
 800e8dc:	d9012117 	ldw	r4,1156(sp)
 800e8e0:	d9412017 	ldw	r5,1152(sp)
 800e8e4:	d9811a04 	addi	r6,sp,1128
 800e8e8:	800dc340 	call	800dc34 <__sprint_r.part.0>
 800e8ec:	1000321e 	bne	r2,zero,800e9b8 <___vfiprintf_internal_r+0xc70>
 800e8f0:	d9411b17 	ldw	r5,1132(sp)
 800e8f4:	d8c11c17 	ldw	r3,1136(sp)
 800e8f8:	d811883a 	mov	r8,sp
 800e8fc:	28800044 	addi	r2,r5,1
 800e900:	003eba06 	br	800e3ec <__alt_data_end+0xfc00e3ec>
 800e904:	10803fcc 	andi	r2,r2,255
 800e908:	00c00044 	movi	r3,1
 800e90c:	10fe4d1e 	bne	r2,r3,800e244 <__alt_data_end+0xfc00e244>
 800e910:	a800021e 	bne	r21,zero,800e91c <___vfiprintf_internal_r+0xbd4>
 800e914:	00800244 	movi	r2,9
 800e918:	14c01b2e 	bgeu	r2,r19,800e988 <___vfiprintf_internal_r+0xc40>
 800e91c:	dc012215 	stw	r16,1160(sp)
 800e920:	dd010a04 	addi	r20,sp,1064
 800e924:	a821883a 	mov	r16,r21
 800e928:	402b883a 	mov	r21,r8
 800e92c:	9809883a 	mov	r4,r19
 800e930:	800b883a 	mov	r5,r16
 800e934:	01800284 	movi	r6,10
 800e938:	000f883a 	mov	r7,zero
 800e93c:	801011c0 	call	801011c <__umoddi3>
 800e940:	10800c04 	addi	r2,r2,48
 800e944:	a53fffc4 	addi	r20,r20,-1
 800e948:	9809883a 	mov	r4,r19
 800e94c:	800b883a 	mov	r5,r16
 800e950:	01800284 	movi	r6,10
 800e954:	000f883a 	mov	r7,zero
 800e958:	a0800005 	stb	r2,0(r20)
 800e95c:	800fadc0 	call	800fadc <__udivdi3>
 800e960:	1027883a 	mov	r19,r2
 800e964:	10c4b03a 	or	r2,r2,r3
 800e968:	1821883a 	mov	r16,r3
 800e96c:	103fef1e 	bne	r2,zero,800e92c <__alt_data_end+0xfc00e92c>
 800e970:	d9011e17 	ldw	r4,1144(sp)
 800e974:	dc012217 	ldw	r16,1160(sp)
 800e978:	a811883a 	mov	r8,r21
 800e97c:	dd012215 	stw	r20,1160(sp)
 800e980:	2529c83a 	sub	r20,r4,r20
 800e984:	003e4106 	br	800e28c <__alt_data_end+0xfc00e28c>
 800e988:	9cc00c04 	addi	r19,r19,48
 800e98c:	d8c109c4 	addi	r3,sp,1063
 800e990:	dcc109c5 	stb	r19,1063(sp)
 800e994:	dd012817 	ldw	r20,1184(sp)
 800e998:	d8c12215 	stw	r3,1160(sp)
 800e99c:	003e3b06 	br	800e28c <__alt_data_end+0xfc00e28c>
 800e9a0:	d8811c17 	ldw	r2,1136(sp)
 800e9a4:	10000426 	beq	r2,zero,800e9b8 <___vfiprintf_internal_r+0xc70>
 800e9a8:	d9012117 	ldw	r4,1156(sp)
 800e9ac:	d9412017 	ldw	r5,1152(sp)
 800e9b0:	d9811a04 	addi	r6,sp,1128
 800e9b4:	800dc340 	call	800dc34 <__sprint_r.part.0>
 800e9b8:	d9412017 	ldw	r5,1152(sp)
 800e9bc:	2880030b 	ldhu	r2,12(r5)
 800e9c0:	1080100c 	andi	r2,r2,64
 800e9c4:	103ddc1e 	bne	r2,zero,800e138 <__alt_data_end+0xfc00e138>
 800e9c8:	d8812517 	ldw	r2,1172(sp)
 800e9cc:	003ddb06 	br	800e13c <__alt_data_end+0xfc00e13c>
 800e9d0:	1801061e 	bne	r3,zero,800edec <___vfiprintf_internal_r+0x10a4>
 800e9d4:	d8c12217 	ldw	r3,1160(sp)
 800e9d8:	00800044 	movi	r2,1
 800e9dc:	dd000115 	stw	r20,4(sp)
 800e9e0:	d8c00015 	stw	r3,0(sp)
 800e9e4:	dd011c15 	stw	r20,1136(sp)
 800e9e8:	d8811b15 	stw	r2,1132(sp)
 800e9ec:	a007883a 	mov	r3,r20
 800e9f0:	d811883a 	mov	r8,sp
 800e9f4:	42000204 	addi	r8,r8,8
 800e9f8:	9480010c 	andi	r18,r18,4
 800e9fc:	90003426 	beq	r18,zero,800ead0 <___vfiprintf_internal_r+0xd88>
 800ea00:	d9412417 	ldw	r5,1168(sp)
 800ea04:	2d65c83a 	sub	r18,r5,r21
 800ea08:	0480310e 	bge	zero,r18,800ead0 <___vfiprintf_internal_r+0xd88>
 800ea0c:	04000404 	movi	r16,16
 800ea10:	8481ad0e 	bge	r16,r18,800f0c8 <___vfiprintf_internal_r+0x1380>
 800ea14:	01420074 	movhi	r5,2049
 800ea18:	295bad04 	addi	r5,r5,28340
 800ea1c:	d9011b17 	ldw	r4,1132(sp)
 800ea20:	d9412615 	stw	r5,1176(sp)
 800ea24:	04c001c4 	movi	r19,7
 800ea28:	dd012117 	ldw	r20,1156(sp)
 800ea2c:	dd812017 	ldw	r22,1152(sp)
 800ea30:	00000506 	br	800ea48 <___vfiprintf_internal_r+0xd00>
 800ea34:	21400084 	addi	r5,r4,2
 800ea38:	42000204 	addi	r8,r8,8
 800ea3c:	1009883a 	mov	r4,r2
 800ea40:	94bffc04 	addi	r18,r18,-16
 800ea44:	84800d0e 	bge	r16,r18,800ea7c <___vfiprintf_internal_r+0xd34>
 800ea48:	18c00404 	addi	r3,r3,16
 800ea4c:	20800044 	addi	r2,r4,1
 800ea50:	47000015 	stw	fp,0(r8)
 800ea54:	44000115 	stw	r16,4(r8)
 800ea58:	d8c11c15 	stw	r3,1136(sp)
 800ea5c:	d8811b15 	stw	r2,1132(sp)
 800ea60:	98bff40e 	bge	r19,r2,800ea34 <__alt_data_end+0xfc00ea34>
 800ea64:	1800291e 	bne	r3,zero,800eb0c <___vfiprintf_internal_r+0xdc4>
 800ea68:	94bffc04 	addi	r18,r18,-16
 800ea6c:	0009883a 	mov	r4,zero
 800ea70:	01400044 	movi	r5,1
 800ea74:	d811883a 	mov	r8,sp
 800ea78:	84bff316 	blt	r16,r18,800ea48 <__alt_data_end+0xfc00ea48>
 800ea7c:	d8812617 	ldw	r2,1176(sp)
 800ea80:	1c87883a 	add	r3,r3,r18
 800ea84:	44800115 	stw	r18,4(r8)
 800ea88:	40800015 	stw	r2,0(r8)
 800ea8c:	d8c11c15 	stw	r3,1136(sp)
 800ea90:	d9411b15 	stw	r5,1132(sp)
 800ea94:	008001c4 	movi	r2,7
 800ea98:	11400d0e 	bge	r2,r5,800ead0 <___vfiprintf_internal_r+0xd88>
 800ea9c:	1800061e 	bne	r3,zero,800eab8 <___vfiprintf_internal_r+0xd70>
 800eaa0:	d8c12417 	ldw	r3,1168(sp)
 800eaa4:	a8c12e16 	blt	r21,r3,800ef60 <___vfiprintf_internal_r+0x1218>
 800eaa8:	d9012517 	ldw	r4,1172(sp)
 800eaac:	2549883a 	add	r4,r4,r21
 800eab0:	d9012515 	stw	r4,1172(sp)
 800eab4:	00001206 	br	800eb00 <___vfiprintf_internal_r+0xdb8>
 800eab8:	d9012117 	ldw	r4,1156(sp)
 800eabc:	d9412017 	ldw	r5,1152(sp)
 800eac0:	d9811a04 	addi	r6,sp,1128
 800eac4:	800dc340 	call	800dc34 <__sprint_r.part.0>
 800eac8:	103fbb1e 	bne	r2,zero,800e9b8 <__alt_data_end+0xfc00e9b8>
 800eacc:	d8c11c17 	ldw	r3,1136(sp)
 800ead0:	d8812417 	ldw	r2,1168(sp)
 800ead4:	a880010e 	bge	r21,r2,800eadc <___vfiprintf_internal_r+0xd94>
 800ead8:	102b883a 	mov	r21,r2
 800eadc:	d9012517 	ldw	r4,1172(sp)
 800eae0:	2549883a 	add	r4,r4,r21
 800eae4:	d9012515 	stw	r4,1172(sp)
 800eae8:	18000526 	beq	r3,zero,800eb00 <___vfiprintf_internal_r+0xdb8>
 800eaec:	d9012117 	ldw	r4,1156(sp)
 800eaf0:	d9412017 	ldw	r5,1152(sp)
 800eaf4:	d9811a04 	addi	r6,sp,1128
 800eaf8:	800dc340 	call	800dc34 <__sprint_r.part.0>
 800eafc:	103fae1e 	bne	r2,zero,800e9b8 <__alt_data_end+0xfc00e9b8>
 800eb00:	d8011b15 	stw	zero,1132(sp)
 800eb04:	d811883a 	mov	r8,sp
 800eb08:	003cc706 	br	800de28 <__alt_data_end+0xfc00de28>
 800eb0c:	a009883a 	mov	r4,r20
 800eb10:	b00b883a 	mov	r5,r22
 800eb14:	d9811a04 	addi	r6,sp,1128
 800eb18:	800dc340 	call	800dc34 <__sprint_r.part.0>
 800eb1c:	103fa61e 	bne	r2,zero,800e9b8 <__alt_data_end+0xfc00e9b8>
 800eb20:	d9011b17 	ldw	r4,1132(sp)
 800eb24:	d8c11c17 	ldw	r3,1136(sp)
 800eb28:	d811883a 	mov	r8,sp
 800eb2c:	21400044 	addi	r5,r4,1
 800eb30:	003fc306 	br	800ea40 <__alt_data_end+0xfc00ea40>
 800eb34:	d9012417 	ldw	r4,1168(sp)
 800eb38:	256dc83a 	sub	r22,r4,r21
 800eb3c:	05be1f0e 	bge	zero,r22,800e3bc <__alt_data_end+0xfc00e3bc>
 800eb40:	04c00404 	movi	r19,16
 800eb44:	9d81720e 	bge	r19,r22,800f110 <___vfiprintf_internal_r+0x13c8>
 800eb48:	00820074 	movhi	r2,2049
 800eb4c:	109ba904 	addi	r2,r2,28324
 800eb50:	d8812615 	stw	r2,1176(sp)
 800eb54:	028001c4 	movi	r10,7
 800eb58:	00000506 	br	800eb70 <___vfiprintf_internal_r+0xe28>
 800eb5c:	29000084 	addi	r4,r5,2
 800eb60:	42000204 	addi	r8,r8,8
 800eb64:	100b883a 	mov	r5,r2
 800eb68:	b5bffc04 	addi	r22,r22,-16
 800eb6c:	9d800d0e 	bge	r19,r22,800eba4 <___vfiprintf_internal_r+0xe5c>
 800eb70:	18c00404 	addi	r3,r3,16
 800eb74:	28800044 	addi	r2,r5,1
 800eb78:	44400015 	stw	r17,0(r8)
 800eb7c:	44c00115 	stw	r19,4(r8)
 800eb80:	d8c11c15 	stw	r3,1136(sp)
 800eb84:	d8811b15 	stw	r2,1132(sp)
 800eb88:	50bff40e 	bge	r10,r2,800eb5c <__alt_data_end+0xfc00eb5c>
 800eb8c:	1800111e 	bne	r3,zero,800ebd4 <___vfiprintf_internal_r+0xe8c>
 800eb90:	b5bffc04 	addi	r22,r22,-16
 800eb94:	000b883a 	mov	r5,zero
 800eb98:	01000044 	movi	r4,1
 800eb9c:	d811883a 	mov	r8,sp
 800eba0:	9dbff316 	blt	r19,r22,800eb70 <__alt_data_end+0xfc00eb70>
 800eba4:	d9412617 	ldw	r5,1176(sp)
 800eba8:	1d87883a 	add	r3,r3,r22
 800ebac:	45800115 	stw	r22,4(r8)
 800ebb0:	41400015 	stw	r5,0(r8)
 800ebb4:	d8c11c15 	stw	r3,1136(sp)
 800ebb8:	d9011b15 	stw	r4,1132(sp)
 800ebbc:	008001c4 	movi	r2,7
 800ebc0:	11008516 	blt	r2,r4,800edd8 <___vfiprintf_internal_r+0x1090>
 800ebc4:	42000204 	addi	r8,r8,8
 800ebc8:	20800044 	addi	r2,r4,1
 800ebcc:	200b883a 	mov	r5,r4
 800ebd0:	003dfa06 	br	800e3bc <__alt_data_end+0xfc00e3bc>
 800ebd4:	d9012117 	ldw	r4,1156(sp)
 800ebd8:	d9412017 	ldw	r5,1152(sp)
 800ebdc:	d9811a04 	addi	r6,sp,1128
 800ebe0:	da812a15 	stw	r10,1192(sp)
 800ebe4:	800dc340 	call	800dc34 <__sprint_r.part.0>
 800ebe8:	da812a17 	ldw	r10,1192(sp)
 800ebec:	103f721e 	bne	r2,zero,800e9b8 <__alt_data_end+0xfc00e9b8>
 800ebf0:	d9411b17 	ldw	r5,1132(sp)
 800ebf4:	d8c11c17 	ldw	r3,1136(sp)
 800ebf8:	d811883a 	mov	r8,sp
 800ebfc:	29000044 	addi	r4,r5,1
 800ec00:	003fd906 	br	800eb68 <__alt_data_end+0xfc00eb68>
 800ec04:	1800681e 	bne	r3,zero,800eda8 <___vfiprintf_internal_r+0x1060>
 800ec08:	50004d26 	beq	r10,zero,800ed40 <___vfiprintf_internal_r+0xff8>
 800ec0c:	d8811d04 	addi	r2,sp,1140
 800ec10:	00c00084 	movi	r3,2
 800ec14:	d8800015 	stw	r2,0(sp)
 800ec18:	d8c00115 	stw	r3,4(sp)
 800ec1c:	2005883a 	mov	r2,r4
 800ec20:	d811883a 	mov	r8,sp
 800ec24:	003de006 	br	800e3a8 <__alt_data_end+0xfc00e3a8>
 800ec28:	1800551e 	bne	r3,zero,800ed80 <___vfiprintf_internal_r+0x1038>
 800ec2c:	000b883a 	mov	r5,zero
 800ec30:	00800044 	movi	r2,1
 800ec34:	d811883a 	mov	r8,sp
 800ec38:	003dde06 	br	800e3b4 <__alt_data_end+0xfc00e3b4>
 800ec3c:	10803fcc 	andi	r2,r2,255
 800ec40:	1000191e 	bne	r2,zero,800eca8 <___vfiprintf_internal_r+0xf60>
 800ec44:	9080004c 	andi	r2,r18,1
 800ec48:	10001726 	beq	r2,zero,800eca8 <___vfiprintf_internal_r+0xf60>
 800ec4c:	00800c04 	movi	r2,48
 800ec50:	d8c109c4 	addi	r3,sp,1063
 800ec54:	d88109c5 	stb	r2,1063(sp)
 800ec58:	dd012817 	ldw	r20,1184(sp)
 800ec5c:	d8c12215 	stw	r3,1160(sp)
 800ec60:	003d8a06 	br	800e28c <__alt_data_end+0xfc00e28c>
 800ec64:	d9012717 	ldw	r4,1180(sp)
 800ec68:	dd010a04 	addi	r20,sp,1064
 800ec6c:	988003cc 	andi	r2,r19,15
 800ec70:	a806973a 	slli	r3,r21,28
 800ec74:	2085883a 	add	r2,r4,r2
 800ec78:	9826d13a 	srli	r19,r19,4
 800ec7c:	10800003 	ldbu	r2,0(r2)
 800ec80:	a82ad13a 	srli	r21,r21,4
 800ec84:	a53fffc4 	addi	r20,r20,-1
 800ec88:	1ce6b03a 	or	r19,r3,r19
 800ec8c:	a0800005 	stb	r2,0(r20)
 800ec90:	9d44b03a 	or	r2,r19,r21
 800ec94:	103ff51e 	bne	r2,zero,800ec6c <__alt_data_end+0xfc00ec6c>
 800ec98:	d9411e17 	ldw	r5,1144(sp)
 800ec9c:	dd012215 	stw	r20,1160(sp)
 800eca0:	2d29c83a 	sub	r20,r5,r20
 800eca4:	003d7906 	br	800e28c <__alt_data_end+0xfc00e28c>
 800eca8:	d8c10a04 	addi	r3,sp,1064
 800ecac:	d8c12215 	stw	r3,1160(sp)
 800ecb0:	003d7606 	br	800e28c <__alt_data_end+0xfc00e28c>
 800ecb4:	18009e1e 	bne	r3,zero,800ef30 <___vfiprintf_internal_r+0x11e8>
 800ecb8:	d8811d87 	ldb	r2,1142(sp)
 800ecbc:	10005f26 	beq	r2,zero,800ee3c <___vfiprintf_internal_r+0x10f4>
 800ecc0:	00c00044 	movi	r3,1
 800ecc4:	d9011d84 	addi	r4,sp,1142
 800ecc8:	1805883a 	mov	r2,r3
 800eccc:	d9000015 	stw	r4,0(sp)
 800ecd0:	d8c00115 	stw	r3,4(sp)
 800ecd4:	d811883a 	mov	r8,sp
 800ecd8:	003efc06 	br	800e8cc <__alt_data_end+0xfc00e8cc>
 800ecdc:	d9412417 	ldw	r5,1168(sp)
 800ece0:	d811883a 	mov	r8,sp
 800ece4:	2d65c83a 	sub	r18,r5,r21
 800ece8:	04bf4816 	blt	zero,r18,800ea0c <__alt_data_end+0xfc00ea0c>
 800ecec:	003f6c06 	br	800eaa0 <__alt_data_end+0xfc00eaa0>
 800ecf0:	b829883a 	mov	r20,r23
 800ecf4:	003c6906 	br	800de9c <__alt_data_end+0xfc00de9c>
 800ecf8:	d9012117 	ldw	r4,1156(sp)
 800ecfc:	d9412017 	ldw	r5,1152(sp)
 800ed00:	d9811a04 	addi	r6,sp,1128
 800ed04:	800dc340 	call	800dc34 <__sprint_r.part.0>
 800ed08:	103f2b1e 	bne	r2,zero,800e9b8 <__alt_data_end+0xfc00e9b8>
 800ed0c:	d8c11c17 	ldw	r3,1136(sp)
 800ed10:	d811883a 	mov	r8,sp
 800ed14:	003f3806 	br	800e9f8 <__alt_data_end+0xfc00e9f8>
 800ed18:	00800084 	movi	r2,2
 800ed1c:	9d46b03a 	or	r3,r19,r21
 800ed20:	003df606 	br	800e4fc <__alt_data_end+0xfc00e4fc>
 800ed24:	d9012117 	ldw	r4,1156(sp)
 800ed28:	d9412017 	ldw	r5,1152(sp)
 800ed2c:	d9811a04 	addi	r6,sp,1128
 800ed30:	800dc340 	call	800dc34 <__sprint_r.part.0>
 800ed34:	103f201e 	bne	r2,zero,800e9b8 <__alt_data_end+0xfc00e9b8>
 800ed38:	d811883a 	mov	r8,sp
 800ed3c:	003cc606 	br	800e058 <__alt_data_end+0xfc00e058>
 800ed40:	000b883a 	mov	r5,zero
 800ed44:	2005883a 	mov	r2,r4
 800ed48:	d811883a 	mov	r8,sp
 800ed4c:	003d9906 	br	800e3b4 <__alt_data_end+0xfc00e3b4>
 800ed50:	10803fcc 	andi	r2,r2,255
 800ed54:	1080201c 	xori	r2,r2,128
 800ed58:	10bfe004 	addi	r2,r2,-128
 800ed5c:	01000c04 	movi	r4,48
 800ed60:	1100b226 	beq	r2,r4,800f02c <___vfiprintf_internal_r+0x12e4>
 800ed64:	d9412217 	ldw	r5,1160(sp)
 800ed68:	d8811e17 	ldw	r2,1144(sp)
 800ed6c:	193fffc5 	stb	r4,-1(r3)
 800ed70:	297fffc4 	addi	r5,r5,-1
 800ed74:	d9412215 	stw	r5,1160(sp)
 800ed78:	1169c83a 	sub	r20,r2,r5
 800ed7c:	003d4306 	br	800e28c <__alt_data_end+0xfc00e28c>
 800ed80:	d9012117 	ldw	r4,1156(sp)
 800ed84:	d9412017 	ldw	r5,1152(sp)
 800ed88:	d9811a04 	addi	r6,sp,1128
 800ed8c:	800dc340 	call	800dc34 <__sprint_r.part.0>
 800ed90:	103f091e 	bne	r2,zero,800e9b8 <__alt_data_end+0xfc00e9b8>
 800ed94:	d9411b17 	ldw	r5,1132(sp)
 800ed98:	d8c11c17 	ldw	r3,1136(sp)
 800ed9c:	d811883a 	mov	r8,sp
 800eda0:	28800044 	addi	r2,r5,1
 800eda4:	003d8306 	br	800e3b4 <__alt_data_end+0xfc00e3b4>
 800eda8:	d9012117 	ldw	r4,1156(sp)
 800edac:	d9412017 	ldw	r5,1152(sp)
 800edb0:	d9811a04 	addi	r6,sp,1128
 800edb4:	da812a15 	stw	r10,1192(sp)
 800edb8:	800dc340 	call	800dc34 <__sprint_r.part.0>
 800edbc:	da812a17 	ldw	r10,1192(sp)
 800edc0:	103efd1e 	bne	r2,zero,800e9b8 <__alt_data_end+0xfc00e9b8>
 800edc4:	d9411b17 	ldw	r5,1132(sp)
 800edc8:	d8c11c17 	ldw	r3,1136(sp)
 800edcc:	d811883a 	mov	r8,sp
 800edd0:	28800044 	addi	r2,r5,1
 800edd4:	003d6a06 	br	800e380 <__alt_data_end+0xfc00e380>
 800edd8:	1800a01e 	bne	r3,zero,800f05c <___vfiprintf_internal_r+0x1314>
 800eddc:	000b883a 	mov	r5,zero
 800ede0:	00800044 	movi	r2,1
 800ede4:	d811883a 	mov	r8,sp
 800ede8:	003d7406 	br	800e3bc <__alt_data_end+0xfc00e3bc>
 800edec:	d9012117 	ldw	r4,1156(sp)
 800edf0:	d9412017 	ldw	r5,1152(sp)
 800edf4:	d9811a04 	addi	r6,sp,1128
 800edf8:	800dc340 	call	800dc34 <__sprint_r.part.0>
 800edfc:	103eee1e 	bne	r2,zero,800e9b8 <__alt_data_end+0xfc00e9b8>
 800ee00:	d8811b17 	ldw	r2,1132(sp)
 800ee04:	d8c11c17 	ldw	r3,1136(sp)
 800ee08:	d811883a 	mov	r8,sp
 800ee0c:	10800044 	addi	r2,r2,1
 800ee10:	003d8f06 	br	800e450 <__alt_data_end+0xfc00e450>
 800ee14:	04e7c83a 	sub	r19,zero,r19
 800ee18:	9804c03a 	cmpne	r2,r19,zero
 800ee1c:	056bc83a 	sub	r21,zero,r21
 800ee20:	a8abc83a 	sub	r21,r21,r2
 800ee24:	05800b44 	movi	r22,45
 800ee28:	dd811d85 	stb	r22,1142(sp)
 800ee2c:	8029883a 	mov	r20,r16
 800ee30:	00800044 	movi	r2,1
 800ee34:	9d46b03a 	or	r3,r19,r21
 800ee38:	003cfa06 	br	800e224 <__alt_data_end+0xfc00e224>
 800ee3c:	000b883a 	mov	r5,zero
 800ee40:	00800044 	movi	r2,1
 800ee44:	d811883a 	mov	r8,sp
 800ee48:	503d5a26 	beq	r10,zero,800e3b4 <__alt_data_end+0xfc00e3b4>
 800ee4c:	00c00084 	movi	r3,2
 800ee50:	d9011d04 	addi	r4,sp,1140
 800ee54:	d9000015 	stw	r4,0(sp)
 800ee58:	d8c00115 	stw	r3,4(sp)
 800ee5c:	003d5206 	br	800e3a8 <__alt_data_end+0xfc00e3a8>
 800ee60:	9080040c 	andi	r2,r18,16
 800ee64:	1000421e 	bne	r2,zero,800ef70 <___vfiprintf_internal_r+0x1228>
 800ee68:	9480100c 	andi	r18,r18,64
 800ee6c:	90009c26 	beq	r18,zero,800f0e0 <___vfiprintf_internal_r+0x1398>
 800ee70:	d9412317 	ldw	r5,1164(sp)
 800ee74:	d8c12517 	ldw	r3,1172(sp)
 800ee78:	28800017 	ldw	r2,0(r5)
 800ee7c:	29400104 	addi	r5,r5,4
 800ee80:	d9412315 	stw	r5,1164(sp)
 800ee84:	10c0000d 	sth	r3,0(r2)
 800ee88:	003be706 	br	800de28 <__alt_data_end+0xfc00de28>
 800ee8c:	90c0100c 	andi	r3,r18,64
 800ee90:	18003e26 	beq	r3,zero,800ef8c <___vfiprintf_internal_r+0x1244>
 800ee94:	d8c12317 	ldw	r3,1164(sp)
 800ee98:	14c0000b 	ldhu	r19,0(r2)
 800ee9c:	002b883a 	mov	r21,zero
 800eea0:	18c00104 	addi	r3,r3,4
 800eea4:	d8c12315 	stw	r3,1164(sp)
 800eea8:	003db706 	br	800e588 <__alt_data_end+0xfc00e588>
 800eeac:	9080100c 	andi	r2,r18,64
 800eeb0:	10004c26 	beq	r2,zero,800efe4 <___vfiprintf_internal_r+0x129c>
 800eeb4:	1cc0000f 	ldh	r19,0(r3)
 800eeb8:	d8812317 	ldw	r2,1164(sp)
 800eebc:	982bd7fa 	srai	r21,r19,31
 800eec0:	10800104 	addi	r2,r2,4
 800eec4:	d8812315 	stw	r2,1164(sp)
 800eec8:	a805883a 	mov	r2,r21
 800eecc:	003cd006 	br	800e210 <__alt_data_end+0xfc00e210>
 800eed0:	00800084 	movi	r2,2
 800eed4:	003d8906 	br	800e4fc <__alt_data_end+0xfc00e4fc>
 800eed8:	b9800007 	ldb	r6,0(r23)
 800eedc:	003bfb06 	br	800decc <__alt_data_end+0xfc00decc>
 800eee0:	9080100c 	andi	r2,r18,64
 800eee4:	10003726 	beq	r2,zero,800efc4 <___vfiprintf_internal_r+0x127c>
 800eee8:	d9412317 	ldw	r5,1164(sp)
 800eeec:	002b883a 	mov	r21,zero
 800eef0:	0005883a 	mov	r2,zero
 800eef4:	2cc0000b 	ldhu	r19,0(r5)
 800eef8:	29400104 	addi	r5,r5,4
 800eefc:	d9412315 	stw	r5,1164(sp)
 800ef00:	9807883a 	mov	r3,r19
 800ef04:	003d7d06 	br	800e4fc <__alt_data_end+0xfc00e4fc>
 800ef08:	9080100c 	andi	r2,r18,64
 800ef0c:	10002526 	beq	r2,zero,800efa4 <___vfiprintf_internal_r+0x125c>
 800ef10:	d8812317 	ldw	r2,1164(sp)
 800ef14:	002b883a 	mov	r21,zero
 800ef18:	14c0000b 	ldhu	r19,0(r2)
 800ef1c:	10800104 	addi	r2,r2,4
 800ef20:	d8812315 	stw	r2,1164(sp)
 800ef24:	9807883a 	mov	r3,r19
 800ef28:	00800044 	movi	r2,1
 800ef2c:	003d7306 	br	800e4fc <__alt_data_end+0xfc00e4fc>
 800ef30:	d9012117 	ldw	r4,1156(sp)
 800ef34:	d9412017 	ldw	r5,1152(sp)
 800ef38:	d9811a04 	addi	r6,sp,1128
 800ef3c:	da812a15 	stw	r10,1192(sp)
 800ef40:	800dc340 	call	800dc34 <__sprint_r.part.0>
 800ef44:	da812a17 	ldw	r10,1192(sp)
 800ef48:	103e9b1e 	bne	r2,zero,800e9b8 <__alt_data_end+0xfc00e9b8>
 800ef4c:	d9411b17 	ldw	r5,1132(sp)
 800ef50:	d8c11c17 	ldw	r3,1136(sp)
 800ef54:	d811883a 	mov	r8,sp
 800ef58:	28800044 	addi	r2,r5,1
 800ef5c:	003e5006 	br	800e8a0 <__alt_data_end+0xfc00e8a0>
 800ef60:	182b883a 	mov	r21,r3
 800ef64:	003ed006 	br	800eaa8 <__alt_data_end+0xfc00eaa8>
 800ef68:	8029883a 	mov	r20,r16
 800ef6c:	003dc606 	br	800e688 <__alt_data_end+0xfc00e688>
 800ef70:	d8c12317 	ldw	r3,1164(sp)
 800ef74:	d9012517 	ldw	r4,1172(sp)
 800ef78:	18800017 	ldw	r2,0(r3)
 800ef7c:	18c00104 	addi	r3,r3,4
 800ef80:	d8c12315 	stw	r3,1164(sp)
 800ef84:	11000015 	stw	r4,0(r2)
 800ef88:	003ba706 	br	800de28 <__alt_data_end+0xfc00de28>
 800ef8c:	d9012317 	ldw	r4,1164(sp)
 800ef90:	14c00017 	ldw	r19,0(r2)
 800ef94:	002b883a 	mov	r21,zero
 800ef98:	21000104 	addi	r4,r4,4
 800ef9c:	d9012315 	stw	r4,1164(sp)
 800efa0:	003d7906 	br	800e588 <__alt_data_end+0xfc00e588>
 800efa4:	d8c12317 	ldw	r3,1164(sp)
 800efa8:	002b883a 	mov	r21,zero
 800efac:	00800044 	movi	r2,1
 800efb0:	1cc00017 	ldw	r19,0(r3)
 800efb4:	18c00104 	addi	r3,r3,4
 800efb8:	d8c12315 	stw	r3,1164(sp)
 800efbc:	9807883a 	mov	r3,r19
 800efc0:	003d4e06 	br	800e4fc <__alt_data_end+0xfc00e4fc>
 800efc4:	d8812317 	ldw	r2,1164(sp)
 800efc8:	002b883a 	mov	r21,zero
 800efcc:	14c00017 	ldw	r19,0(r2)
 800efd0:	10800104 	addi	r2,r2,4
 800efd4:	d8812315 	stw	r2,1164(sp)
 800efd8:	9807883a 	mov	r3,r19
 800efdc:	0005883a 	mov	r2,zero
 800efe0:	003d4606 	br	800e4fc <__alt_data_end+0xfc00e4fc>
 800efe4:	1cc00017 	ldw	r19,0(r3)
 800efe8:	d8c12317 	ldw	r3,1164(sp)
 800efec:	982bd7fa 	srai	r21,r19,31
 800eff0:	18c00104 	addi	r3,r3,4
 800eff4:	d8c12315 	stw	r3,1164(sp)
 800eff8:	a805883a 	mov	r2,r21
 800effc:	003c8406 	br	800e210 <__alt_data_end+0xfc00e210>
 800f000:	01020074 	movhi	r4,2049
 800f004:	211ba904 	addi	r4,r4,28324
 800f008:	d9012615 	stw	r4,1176(sp)
 800f00c:	003d0606 	br	800e428 <__alt_data_end+0xfc00e428>
 800f010:	b9800043 	ldbu	r6,1(r23)
 800f014:	94800814 	ori	r18,r18,32
 800f018:	bdc00044 	addi	r23,r23,1
 800f01c:	31803fcc 	andi	r6,r6,255
 800f020:	3180201c 	xori	r6,r6,128
 800f024:	31bfe004 	addi	r6,r6,-128
 800f028:	003ba806 	br	800decc <__alt_data_end+0xfc00decc>
 800f02c:	d8811e17 	ldw	r2,1144(sp)
 800f030:	d8c12217 	ldw	r3,1160(sp)
 800f034:	10e9c83a 	sub	r20,r2,r3
 800f038:	003c9406 	br	800e28c <__alt_data_end+0xfc00e28c>
 800f03c:	da012a15 	stw	r8,1192(sp)
 800f040:	8003e140 	call	8003e14 <strlen>
 800f044:	1029883a 	mov	r20,r2
 800f048:	dd811d83 	ldbu	r22,1142(sp)
 800f04c:	dcc12315 	stw	r19,1164(sp)
 800f050:	0021883a 	mov	r16,zero
 800f054:	da012a17 	ldw	r8,1192(sp)
 800f058:	003c8c06 	br	800e28c <__alt_data_end+0xfc00e28c>
 800f05c:	d9012117 	ldw	r4,1156(sp)
 800f060:	d9412017 	ldw	r5,1152(sp)
 800f064:	d9811a04 	addi	r6,sp,1128
 800f068:	800dc340 	call	800dc34 <__sprint_r.part.0>
 800f06c:	103e521e 	bne	r2,zero,800e9b8 <__alt_data_end+0xfc00e9b8>
 800f070:	d9411b17 	ldw	r5,1132(sp)
 800f074:	d8c11c17 	ldw	r3,1136(sp)
 800f078:	d811883a 	mov	r8,sp
 800f07c:	28800044 	addi	r2,r5,1
 800f080:	003cce06 	br	800e3bc <__alt_data_end+0xfc00e3bc>
 800f084:	01420074 	movhi	r5,2049
 800f088:	295bad04 	addi	r5,r5,28340
 800f08c:	d9412615 	stw	r5,1176(sp)
 800f090:	d9411b17 	ldw	r5,1132(sp)
 800f094:	29400044 	addi	r5,r5,1
 800f098:	003cad06 	br	800e350 <__alt_data_end+0xfc00e350>
 800f09c:	00800184 	movi	r2,6
 800f0a0:	1400012e 	bgeu	r2,r16,800f0a8 <___vfiprintf_internal_r+0x1360>
 800f0a4:	1021883a 	mov	r16,r2
 800f0a8:	8029883a 	mov	r20,r16
 800f0ac:	802b883a 	mov	r21,r16
 800f0b0:	80001c16 	blt	r16,zero,800f124 <___vfiprintf_internal_r+0x13dc>
 800f0b4:	00c20074 	movhi	r3,2049
 800f0b8:	18db3d04 	addi	r3,r3,27892
 800f0bc:	dcc12315 	stw	r19,1164(sp)
 800f0c0:	d8c12215 	stw	r3,1160(sp)
 800f0c4:	003cff06 	br	800e4c4 <__alt_data_end+0xfc00e4c4>
 800f0c8:	d9411b17 	ldw	r5,1132(sp)
 800f0cc:	00820074 	movhi	r2,2049
 800f0d0:	109bad04 	addi	r2,r2,28340
 800f0d4:	d8812615 	stw	r2,1176(sp)
 800f0d8:	29400044 	addi	r5,r5,1
 800f0dc:	003e6706 	br	800ea7c <__alt_data_end+0xfc00ea7c>
 800f0e0:	d9012317 	ldw	r4,1164(sp)
 800f0e4:	d9412517 	ldw	r5,1172(sp)
 800f0e8:	20800017 	ldw	r2,0(r4)
 800f0ec:	21000104 	addi	r4,r4,4
 800f0f0:	d9012315 	stw	r4,1164(sp)
 800f0f4:	11400015 	stw	r5,0(r2)
 800f0f8:	003b4b06 	br	800de28 <__alt_data_end+0xfc00de28>
 800f0fc:	8029883a 	mov	r20,r16
 800f100:	dd811d83 	ldbu	r22,1142(sp)
 800f104:	dcc12315 	stw	r19,1164(sp)
 800f108:	0021883a 	mov	r16,zero
 800f10c:	003c5f06 	br	800e28c <__alt_data_end+0xfc00e28c>
 800f110:	01020074 	movhi	r4,2049
 800f114:	211ba904 	addi	r4,r4,28324
 800f118:	d9012615 	stw	r4,1176(sp)
 800f11c:	1009883a 	mov	r4,r2
 800f120:	003ea006 	br	800eba4 <__alt_data_end+0xfc00eba4>
 800f124:	002b883a 	mov	r21,zero
 800f128:	003fe206 	br	800f0b4 <__alt_data_end+0xfc00f0b4>
 800f12c:	d9412317 	ldw	r5,1164(sp)
 800f130:	b807883a 	mov	r3,r23
 800f134:	102f883a 	mov	r23,r2
 800f138:	2c000017 	ldw	r16,0(r5)
 800f13c:	29000104 	addi	r4,r5,4
 800f140:	d9012315 	stw	r4,1164(sp)
 800f144:	80000416 	blt	r16,zero,800f158 <___vfiprintf_internal_r+0x1410>
 800f148:	19800047 	ldb	r6,1(r3)
 800f14c:	003b5f06 	br	800decc <__alt_data_end+0xfc00decc>
 800f150:	043fffc4 	movi	r16,-1
 800f154:	003bef06 	br	800e114 <__alt_data_end+0xfc00e114>
 800f158:	043fffc4 	movi	r16,-1
 800f15c:	19800047 	ldb	r6,1(r3)
 800f160:	003b5a06 	br	800decc <__alt_data_end+0xfc00decc>
 800f164:	282b883a 	mov	r21,r5
 800f168:	003cc706 	br	800e488 <__alt_data_end+0xfc00e488>

0800f16c <__vfiprintf_internal>:
 800f16c:	2007883a 	mov	r3,r4
 800f170:	010200b4 	movhi	r4,2050
 800f174:	21231904 	addi	r4,r4,-29596
 800f178:	21000017 	ldw	r4,0(r4)
 800f17c:	2805883a 	mov	r2,r5
 800f180:	300f883a 	mov	r7,r6
 800f184:	180b883a 	mov	r5,r3
 800f188:	100d883a 	mov	r6,r2
 800f18c:	800dd481 	jmpi	800dd48 <___vfiprintf_internal_r>

0800f190 <_write_r>:
 800f190:	defffd04 	addi	sp,sp,-12
 800f194:	dc000015 	stw	r16,0(sp)
 800f198:	040200b4 	movhi	r16,2050
 800f19c:	dc400115 	stw	r17,4(sp)
 800f1a0:	842a4d04 	addi	r16,r16,-22220
 800f1a4:	2023883a 	mov	r17,r4
 800f1a8:	2809883a 	mov	r4,r5
 800f1ac:	300b883a 	mov	r5,r6
 800f1b0:	380d883a 	mov	r6,r7
 800f1b4:	dfc00215 	stw	ra,8(sp)
 800f1b8:	80000015 	stw	zero,0(r16)
 800f1bc:	8013b280 	call	8013b28 <write>
 800f1c0:	00ffffc4 	movi	r3,-1
 800f1c4:	10c00526 	beq	r2,r3,800f1dc <_write_r+0x4c>
 800f1c8:	dfc00217 	ldw	ra,8(sp)
 800f1cc:	dc400117 	ldw	r17,4(sp)
 800f1d0:	dc000017 	ldw	r16,0(sp)
 800f1d4:	dec00304 	addi	sp,sp,12
 800f1d8:	f800283a 	ret
 800f1dc:	80c00017 	ldw	r3,0(r16)
 800f1e0:	183ff926 	beq	r3,zero,800f1c8 <__alt_data_end+0xfc00f1c8>
 800f1e4:	88c00015 	stw	r3,0(r17)
 800f1e8:	003ff706 	br	800f1c8 <__alt_data_end+0xfc00f1c8>

0800f1ec <_close_r>:
 800f1ec:	defffd04 	addi	sp,sp,-12
 800f1f0:	dc000015 	stw	r16,0(sp)
 800f1f4:	040200b4 	movhi	r16,2050
 800f1f8:	dc400115 	stw	r17,4(sp)
 800f1fc:	842a4d04 	addi	r16,r16,-22220
 800f200:	2023883a 	mov	r17,r4
 800f204:	2809883a 	mov	r4,r5
 800f208:	dfc00215 	stw	ra,8(sp)
 800f20c:	80000015 	stw	zero,0(r16)
 800f210:	80130b00 	call	80130b0 <close>
 800f214:	00ffffc4 	movi	r3,-1
 800f218:	10c00526 	beq	r2,r3,800f230 <_close_r+0x44>
 800f21c:	dfc00217 	ldw	ra,8(sp)
 800f220:	dc400117 	ldw	r17,4(sp)
 800f224:	dc000017 	ldw	r16,0(sp)
 800f228:	dec00304 	addi	sp,sp,12
 800f22c:	f800283a 	ret
 800f230:	80c00017 	ldw	r3,0(r16)
 800f234:	183ff926 	beq	r3,zero,800f21c <__alt_data_end+0xfc00f21c>
 800f238:	88c00015 	stw	r3,0(r17)
 800f23c:	003ff706 	br	800f21c <__alt_data_end+0xfc00f21c>

0800f240 <_calloc_r>:
 800f240:	defffe04 	addi	sp,sp,-8
 800f244:	dc000015 	stw	r16,0(sp)
 800f248:	2021883a 	mov	r16,r4
 800f24c:	2809883a 	mov	r4,r5
 800f250:	300b883a 	mov	r5,r6
 800f254:	dfc00115 	stw	ra,4(sp)
 800f258:	80027c00 	call	80027c0 <__mulsi3>
 800f25c:	8009883a 	mov	r4,r16
 800f260:	100b883a 	mov	r5,r2
 800f264:	8002d480 	call	8002d48 <_malloc_r>
 800f268:	1021883a 	mov	r16,r2
 800f26c:	10002826 	beq	r2,zero,800f310 <_calloc_r+0xd0>
 800f270:	11bfff17 	ldw	r6,-4(r2)
 800f274:	00bfff04 	movi	r2,-4
 800f278:	00c00904 	movi	r3,36
 800f27c:	308c703a 	and	r6,r6,r2
 800f280:	308d883a 	add	r6,r6,r2
 800f284:	19801436 	bltu	r3,r6,800f2d8 <_calloc_r+0x98>
 800f288:	008004c4 	movi	r2,19
 800f28c:	11800936 	bltu	r2,r6,800f2b4 <_calloc_r+0x74>
 800f290:	8005883a 	mov	r2,r16
 800f294:	10000015 	stw	zero,0(r2)
 800f298:	10000115 	stw	zero,4(r2)
 800f29c:	10000215 	stw	zero,8(r2)
 800f2a0:	8005883a 	mov	r2,r16
 800f2a4:	dfc00117 	ldw	ra,4(sp)
 800f2a8:	dc000017 	ldw	r16,0(sp)
 800f2ac:	dec00204 	addi	sp,sp,8
 800f2b0:	f800283a 	ret
 800f2b4:	80000015 	stw	zero,0(r16)
 800f2b8:	80000115 	stw	zero,4(r16)
 800f2bc:	008006c4 	movi	r2,27
 800f2c0:	11800d2e 	bgeu	r2,r6,800f2f8 <_calloc_r+0xb8>
 800f2c4:	80000215 	stw	zero,8(r16)
 800f2c8:	80000315 	stw	zero,12(r16)
 800f2cc:	30c00c26 	beq	r6,r3,800f300 <_calloc_r+0xc0>
 800f2d0:	80800404 	addi	r2,r16,16
 800f2d4:	003fef06 	br	800f294 <__alt_data_end+0xfc00f294>
 800f2d8:	8009883a 	mov	r4,r16
 800f2dc:	000b883a 	mov	r5,zero
 800f2e0:	80034f00 	call	80034f0 <memset>
 800f2e4:	8005883a 	mov	r2,r16
 800f2e8:	dfc00117 	ldw	ra,4(sp)
 800f2ec:	dc000017 	ldw	r16,0(sp)
 800f2f0:	dec00204 	addi	sp,sp,8
 800f2f4:	f800283a 	ret
 800f2f8:	80800204 	addi	r2,r16,8
 800f2fc:	003fe506 	br	800f294 <__alt_data_end+0xfc00f294>
 800f300:	80000415 	stw	zero,16(r16)
 800f304:	80800604 	addi	r2,r16,24
 800f308:	80000515 	stw	zero,20(r16)
 800f30c:	003fe106 	br	800f294 <__alt_data_end+0xfc00f294>
 800f310:	0005883a 	mov	r2,zero
 800f314:	003fe306 	br	800f2a4 <__alt_data_end+0xfc00f2a4>

0800f318 <_fclose_r>:
 800f318:	28003226 	beq	r5,zero,800f3e4 <_fclose_r+0xcc>
 800f31c:	defffc04 	addi	sp,sp,-16
 800f320:	dc400115 	stw	r17,4(sp)
 800f324:	2023883a 	mov	r17,r4
 800f328:	dc000015 	stw	r16,0(sp)
 800f32c:	dfc00315 	stw	ra,12(sp)
 800f330:	dc800215 	stw	r18,8(sp)
 800f334:	2821883a 	mov	r16,r5
 800f338:	800a0880 	call	800a088 <__sfp_lock_acquire>
 800f33c:	88000226 	beq	r17,zero,800f348 <_fclose_r+0x30>
 800f340:	88800e17 	ldw	r2,56(r17)
 800f344:	10002926 	beq	r2,zero,800f3ec <_fclose_r+0xd4>
 800f348:	8080030f 	ldh	r2,12(r16)
 800f34c:	10002226 	beq	r2,zero,800f3d8 <_fclose_r+0xc0>
 800f350:	8809883a 	mov	r4,r17
 800f354:	800b883a 	mov	r5,r16
 800f358:	8009abc0 	call	8009abc <_fflush_r>
 800f35c:	1025883a 	mov	r18,r2
 800f360:	80800b17 	ldw	r2,44(r16)
 800f364:	10000426 	beq	r2,zero,800f378 <_fclose_r+0x60>
 800f368:	81400717 	ldw	r5,28(r16)
 800f36c:	8809883a 	mov	r4,r17
 800f370:	103ee83a 	callr	r2
 800f374:	10002616 	blt	r2,zero,800f410 <_fclose_r+0xf8>
 800f378:	8080030b 	ldhu	r2,12(r16)
 800f37c:	1080200c 	andi	r2,r2,128
 800f380:	10001f1e 	bne	r2,zero,800f400 <_fclose_r+0xe8>
 800f384:	81400c17 	ldw	r5,48(r16)
 800f388:	28000526 	beq	r5,zero,800f3a0 <_fclose_r+0x88>
 800f38c:	80801004 	addi	r2,r16,64
 800f390:	28800226 	beq	r5,r2,800f39c <_fclose_r+0x84>
 800f394:	8809883a 	mov	r4,r17
 800f398:	800a1ec0 	call	800a1ec <_free_r>
 800f39c:	80000c15 	stw	zero,48(r16)
 800f3a0:	81401117 	ldw	r5,68(r16)
 800f3a4:	28000326 	beq	r5,zero,800f3b4 <_fclose_r+0x9c>
 800f3a8:	8809883a 	mov	r4,r17
 800f3ac:	800a1ec0 	call	800a1ec <_free_r>
 800f3b0:	80001115 	stw	zero,68(r16)
 800f3b4:	8000030d 	sth	zero,12(r16)
 800f3b8:	800a08c0 	call	800a08c <__sfp_lock_release>
 800f3bc:	9005883a 	mov	r2,r18
 800f3c0:	dfc00317 	ldw	ra,12(sp)
 800f3c4:	dc800217 	ldw	r18,8(sp)
 800f3c8:	dc400117 	ldw	r17,4(sp)
 800f3cc:	dc000017 	ldw	r16,0(sp)
 800f3d0:	dec00404 	addi	sp,sp,16
 800f3d4:	f800283a 	ret
 800f3d8:	800a08c0 	call	800a08c <__sfp_lock_release>
 800f3dc:	0005883a 	mov	r2,zero
 800f3e0:	003ff706 	br	800f3c0 <__alt_data_end+0xfc00f3c0>
 800f3e4:	0005883a 	mov	r2,zero
 800f3e8:	f800283a 	ret
 800f3ec:	8809883a 	mov	r4,r17
 800f3f0:	800a0780 	call	800a078 <__sinit>
 800f3f4:	8080030f 	ldh	r2,12(r16)
 800f3f8:	103fd51e 	bne	r2,zero,800f350 <__alt_data_end+0xfc00f350>
 800f3fc:	003ff606 	br	800f3d8 <__alt_data_end+0xfc00f3d8>
 800f400:	81400417 	ldw	r5,16(r16)
 800f404:	8809883a 	mov	r4,r17
 800f408:	800a1ec0 	call	800a1ec <_free_r>
 800f40c:	003fdd06 	br	800f384 <__alt_data_end+0xfc00f384>
 800f410:	04bfffc4 	movi	r18,-1
 800f414:	003fd806 	br	800f378 <__alt_data_end+0xfc00f378>

0800f418 <fclose>:
 800f418:	008200b4 	movhi	r2,2050
 800f41c:	10a31904 	addi	r2,r2,-29596
 800f420:	200b883a 	mov	r5,r4
 800f424:	11000017 	ldw	r4,0(r2)
 800f428:	800f3181 	jmpi	800f318 <_fclose_r>

0800f42c <_fputwc_r>:
 800f42c:	3080030b 	ldhu	r2,12(r6)
 800f430:	defff804 	addi	sp,sp,-32
 800f434:	dcc00415 	stw	r19,16(sp)
 800f438:	dc800315 	stw	r18,12(sp)
 800f43c:	dc000115 	stw	r16,4(sp)
 800f440:	dfc00715 	stw	ra,28(sp)
 800f444:	dd400615 	stw	r21,24(sp)
 800f448:	dd000515 	stw	r20,20(sp)
 800f44c:	dc400215 	stw	r17,8(sp)
 800f450:	10c8000c 	andi	r3,r2,8192
 800f454:	3021883a 	mov	r16,r6
 800f458:	2027883a 	mov	r19,r4
 800f45c:	2825883a 	mov	r18,r5
 800f460:	1800051e 	bne	r3,zero,800f478 <_fputwc_r+0x4c>
 800f464:	30c01917 	ldw	r3,100(r6)
 800f468:	10880014 	ori	r2,r2,8192
 800f46c:	3080030d 	sth	r2,12(r6)
 800f470:	18880014 	ori	r2,r3,8192
 800f474:	30801915 	stw	r2,100(r6)
 800f478:	800ab780 	call	800ab78 <__locale_mb_cur_max>
 800f47c:	00c00044 	movi	r3,1
 800f480:	10c03e26 	beq	r2,r3,800f57c <_fputwc_r+0x150>
 800f484:	9809883a 	mov	r4,r19
 800f488:	d80b883a 	mov	r5,sp
 800f48c:	900d883a 	mov	r6,r18
 800f490:	81c01704 	addi	r7,r16,92
 800f494:	800f8dc0 	call	800f8dc <_wcrtomb_r>
 800f498:	1029883a 	mov	r20,r2
 800f49c:	00bfffc4 	movi	r2,-1
 800f4a0:	a0802026 	beq	r20,r2,800f524 <_fputwc_r+0xf8>
 800f4a4:	d9400003 	ldbu	r5,0(sp)
 800f4a8:	a0001c26 	beq	r20,zero,800f51c <_fputwc_r+0xf0>
 800f4ac:	0023883a 	mov	r17,zero
 800f4b0:	05400284 	movi	r21,10
 800f4b4:	00000906 	br	800f4dc <_fputwc_r+0xb0>
 800f4b8:	80800017 	ldw	r2,0(r16)
 800f4bc:	11400005 	stb	r5,0(r2)
 800f4c0:	80c00017 	ldw	r3,0(r16)
 800f4c4:	18c00044 	addi	r3,r3,1
 800f4c8:	80c00015 	stw	r3,0(r16)
 800f4cc:	8c400044 	addi	r17,r17,1
 800f4d0:	dc45883a 	add	r2,sp,r17
 800f4d4:	8d00112e 	bgeu	r17,r20,800f51c <_fputwc_r+0xf0>
 800f4d8:	11400003 	ldbu	r5,0(r2)
 800f4dc:	80c00217 	ldw	r3,8(r16)
 800f4e0:	18ffffc4 	addi	r3,r3,-1
 800f4e4:	80c00215 	stw	r3,8(r16)
 800f4e8:	183ff30e 	bge	r3,zero,800f4b8 <__alt_data_end+0xfc00f4b8>
 800f4ec:	80800617 	ldw	r2,24(r16)
 800f4f0:	18801916 	blt	r3,r2,800f558 <_fputwc_r+0x12c>
 800f4f4:	80800017 	ldw	r2,0(r16)
 800f4f8:	11400005 	stb	r5,0(r2)
 800f4fc:	80800017 	ldw	r2,0(r16)
 800f500:	10c00003 	ldbu	r3,0(r2)
 800f504:	10800044 	addi	r2,r2,1
 800f508:	1d402326 	beq	r3,r21,800f598 <_fputwc_r+0x16c>
 800f50c:	80800015 	stw	r2,0(r16)
 800f510:	8c400044 	addi	r17,r17,1
 800f514:	dc45883a 	add	r2,sp,r17
 800f518:	8d3fef36 	bltu	r17,r20,800f4d8 <__alt_data_end+0xfc00f4d8>
 800f51c:	9005883a 	mov	r2,r18
 800f520:	00000406 	br	800f534 <_fputwc_r+0x108>
 800f524:	80c0030b 	ldhu	r3,12(r16)
 800f528:	a005883a 	mov	r2,r20
 800f52c:	18c01014 	ori	r3,r3,64
 800f530:	80c0030d 	sth	r3,12(r16)
 800f534:	dfc00717 	ldw	ra,28(sp)
 800f538:	dd400617 	ldw	r21,24(sp)
 800f53c:	dd000517 	ldw	r20,20(sp)
 800f540:	dcc00417 	ldw	r19,16(sp)
 800f544:	dc800317 	ldw	r18,12(sp)
 800f548:	dc400217 	ldw	r17,8(sp)
 800f54c:	dc000117 	ldw	r16,4(sp)
 800f550:	dec00804 	addi	sp,sp,32
 800f554:	f800283a 	ret
 800f558:	9809883a 	mov	r4,r19
 800f55c:	29403fcc 	andi	r5,r5,255
 800f560:	800d883a 	mov	r6,r16
 800f564:	800f76c0 	call	800f76c <__swbuf_r>
 800f568:	10bfffe0 	cmpeqi	r2,r2,-1
 800f56c:	10803fcc 	andi	r2,r2,255
 800f570:	103fd626 	beq	r2,zero,800f4cc <__alt_data_end+0xfc00f4cc>
 800f574:	00bfffc4 	movi	r2,-1
 800f578:	003fee06 	br	800f534 <__alt_data_end+0xfc00f534>
 800f57c:	90ffffc4 	addi	r3,r18,-1
 800f580:	01003f84 	movi	r4,254
 800f584:	20ffbf36 	bltu	r4,r3,800f484 <__alt_data_end+0xfc00f484>
 800f588:	900b883a 	mov	r5,r18
 800f58c:	dc800005 	stb	r18,0(sp)
 800f590:	1029883a 	mov	r20,r2
 800f594:	003fc506 	br	800f4ac <__alt_data_end+0xfc00f4ac>
 800f598:	9809883a 	mov	r4,r19
 800f59c:	a80b883a 	mov	r5,r21
 800f5a0:	800d883a 	mov	r6,r16
 800f5a4:	800f76c0 	call	800f76c <__swbuf_r>
 800f5a8:	10bfffe0 	cmpeqi	r2,r2,-1
 800f5ac:	003fef06 	br	800f56c <__alt_data_end+0xfc00f56c>

0800f5b0 <fputwc>:
 800f5b0:	defffc04 	addi	sp,sp,-16
 800f5b4:	dc000115 	stw	r16,4(sp)
 800f5b8:	040200b4 	movhi	r16,2050
 800f5bc:	84231904 	addi	r16,r16,-29596
 800f5c0:	dc400215 	stw	r17,8(sp)
 800f5c4:	2023883a 	mov	r17,r4
 800f5c8:	81000017 	ldw	r4,0(r16)
 800f5cc:	dfc00315 	stw	ra,12(sp)
 800f5d0:	280d883a 	mov	r6,r5
 800f5d4:	20000626 	beq	r4,zero,800f5f0 <fputwc+0x40>
 800f5d8:	20800e17 	ldw	r2,56(r4)
 800f5dc:	1000041e 	bne	r2,zero,800f5f0 <fputwc+0x40>
 800f5e0:	d9400015 	stw	r5,0(sp)
 800f5e4:	800a0780 	call	800a078 <__sinit>
 800f5e8:	81000017 	ldw	r4,0(r16)
 800f5ec:	d9800017 	ldw	r6,0(sp)
 800f5f0:	880b883a 	mov	r5,r17
 800f5f4:	dfc00317 	ldw	ra,12(sp)
 800f5f8:	dc400217 	ldw	r17,8(sp)
 800f5fc:	dc000117 	ldw	r16,4(sp)
 800f600:	dec00404 	addi	sp,sp,16
 800f604:	800f42c1 	jmpi	800f42c <_fputwc_r>

0800f608 <_fstat_r>:
 800f608:	defffd04 	addi	sp,sp,-12
 800f60c:	dc000015 	stw	r16,0(sp)
 800f610:	040200b4 	movhi	r16,2050
 800f614:	dc400115 	stw	r17,4(sp)
 800f618:	842a4d04 	addi	r16,r16,-22220
 800f61c:	2023883a 	mov	r17,r4
 800f620:	2809883a 	mov	r4,r5
 800f624:	300b883a 	mov	r5,r6
 800f628:	dfc00215 	stw	ra,8(sp)
 800f62c:	80000015 	stw	zero,0(r16)
 800f630:	80132380 	call	8013238 <fstat>
 800f634:	00ffffc4 	movi	r3,-1
 800f638:	10c00526 	beq	r2,r3,800f650 <_fstat_r+0x48>
 800f63c:	dfc00217 	ldw	ra,8(sp)
 800f640:	dc400117 	ldw	r17,4(sp)
 800f644:	dc000017 	ldw	r16,0(sp)
 800f648:	dec00304 	addi	sp,sp,12
 800f64c:	f800283a 	ret
 800f650:	80c00017 	ldw	r3,0(r16)
 800f654:	183ff926 	beq	r3,zero,800f63c <__alt_data_end+0xfc00f63c>
 800f658:	88c00015 	stw	r3,0(r17)
 800f65c:	003ff706 	br	800f63c <__alt_data_end+0xfc00f63c>

0800f660 <_isatty_r>:
 800f660:	defffd04 	addi	sp,sp,-12
 800f664:	dc000015 	stw	r16,0(sp)
 800f668:	040200b4 	movhi	r16,2050
 800f66c:	dc400115 	stw	r17,4(sp)
 800f670:	842a4d04 	addi	r16,r16,-22220
 800f674:	2023883a 	mov	r17,r4
 800f678:	2809883a 	mov	r4,r5
 800f67c:	dfc00215 	stw	ra,8(sp)
 800f680:	80000015 	stw	zero,0(r16)
 800f684:	80133600 	call	8013360 <isatty>
 800f688:	00ffffc4 	movi	r3,-1
 800f68c:	10c00526 	beq	r2,r3,800f6a4 <_isatty_r+0x44>
 800f690:	dfc00217 	ldw	ra,8(sp)
 800f694:	dc400117 	ldw	r17,4(sp)
 800f698:	dc000017 	ldw	r16,0(sp)
 800f69c:	dec00304 	addi	sp,sp,12
 800f6a0:	f800283a 	ret
 800f6a4:	80c00017 	ldw	r3,0(r16)
 800f6a8:	183ff926 	beq	r3,zero,800f690 <__alt_data_end+0xfc00f690>
 800f6ac:	88c00015 	stw	r3,0(r17)
 800f6b0:	003ff706 	br	800f690 <__alt_data_end+0xfc00f690>

0800f6b4 <_lseek_r>:
 800f6b4:	defffd04 	addi	sp,sp,-12
 800f6b8:	dc000015 	stw	r16,0(sp)
 800f6bc:	040200b4 	movhi	r16,2050
 800f6c0:	dc400115 	stw	r17,4(sp)
 800f6c4:	842a4d04 	addi	r16,r16,-22220
 800f6c8:	2023883a 	mov	r17,r4
 800f6cc:	2809883a 	mov	r4,r5
 800f6d0:	300b883a 	mov	r5,r6
 800f6d4:	380d883a 	mov	r6,r7
 800f6d8:	dfc00215 	stw	ra,8(sp)
 800f6dc:	80000015 	stw	zero,0(r16)
 800f6e0:	80136c00 	call	80136c0 <lseek>
 800f6e4:	00ffffc4 	movi	r3,-1
 800f6e8:	10c00526 	beq	r2,r3,800f700 <_lseek_r+0x4c>
 800f6ec:	dfc00217 	ldw	ra,8(sp)
 800f6f0:	dc400117 	ldw	r17,4(sp)
 800f6f4:	dc000017 	ldw	r16,0(sp)
 800f6f8:	dec00304 	addi	sp,sp,12
 800f6fc:	f800283a 	ret
 800f700:	80c00017 	ldw	r3,0(r16)
 800f704:	183ff926 	beq	r3,zero,800f6ec <__alt_data_end+0xfc00f6ec>
 800f708:	88c00015 	stw	r3,0(r17)
 800f70c:	003ff706 	br	800f6ec <__alt_data_end+0xfc00f6ec>

0800f710 <_read_r>:
 800f710:	defffd04 	addi	sp,sp,-12
 800f714:	dc000015 	stw	r16,0(sp)
 800f718:	040200b4 	movhi	r16,2050
 800f71c:	dc400115 	stw	r17,4(sp)
 800f720:	842a4d04 	addi	r16,r16,-22220
 800f724:	2023883a 	mov	r17,r4
 800f728:	2809883a 	mov	r4,r5
 800f72c:	300b883a 	mov	r5,r6
 800f730:	380d883a 	mov	r6,r7
 800f734:	dfc00215 	stw	ra,8(sp)
 800f738:	80000015 	stw	zero,0(r16)
 800f73c:	80138a40 	call	80138a4 <read>
 800f740:	00ffffc4 	movi	r3,-1
 800f744:	10c00526 	beq	r2,r3,800f75c <_read_r+0x4c>
 800f748:	dfc00217 	ldw	ra,8(sp)
 800f74c:	dc400117 	ldw	r17,4(sp)
 800f750:	dc000017 	ldw	r16,0(sp)
 800f754:	dec00304 	addi	sp,sp,12
 800f758:	f800283a 	ret
 800f75c:	80c00017 	ldw	r3,0(r16)
 800f760:	183ff926 	beq	r3,zero,800f748 <__alt_data_end+0xfc00f748>
 800f764:	88c00015 	stw	r3,0(r17)
 800f768:	003ff706 	br	800f748 <__alt_data_end+0xfc00f748>

0800f76c <__swbuf_r>:
 800f76c:	defffc04 	addi	sp,sp,-16
 800f770:	dc800215 	stw	r18,8(sp)
 800f774:	dc400115 	stw	r17,4(sp)
 800f778:	dc000015 	stw	r16,0(sp)
 800f77c:	dfc00315 	stw	ra,12(sp)
 800f780:	2025883a 	mov	r18,r4
 800f784:	2823883a 	mov	r17,r5
 800f788:	3021883a 	mov	r16,r6
 800f78c:	20000226 	beq	r4,zero,800f798 <__swbuf_r+0x2c>
 800f790:	20800e17 	ldw	r2,56(r4)
 800f794:	10004126 	beq	r2,zero,800f89c <__swbuf_r+0x130>
 800f798:	80c00617 	ldw	r3,24(r16)
 800f79c:	8180030b 	ldhu	r6,12(r16)
 800f7a0:	80c00215 	stw	r3,8(r16)
 800f7a4:	30c0020c 	andi	r3,r6,8
 800f7a8:	18003526 	beq	r3,zero,800f880 <__swbuf_r+0x114>
 800f7ac:	80c00417 	ldw	r3,16(r16)
 800f7b0:	18003326 	beq	r3,zero,800f880 <__swbuf_r+0x114>
 800f7b4:	3088000c 	andi	r2,r6,8192
 800f7b8:	8c403fcc 	andi	r17,r17,255
 800f7bc:	10001726 	beq	r2,zero,800f81c <__swbuf_r+0xb0>
 800f7c0:	80800017 	ldw	r2,0(r16)
 800f7c4:	81000517 	ldw	r4,20(r16)
 800f7c8:	10c7c83a 	sub	r3,r2,r3
 800f7cc:	19001d0e 	bge	r3,r4,800f844 <__swbuf_r+0xd8>
 800f7d0:	18c00044 	addi	r3,r3,1
 800f7d4:	81400217 	ldw	r5,8(r16)
 800f7d8:	11000044 	addi	r4,r2,1
 800f7dc:	81000015 	stw	r4,0(r16)
 800f7e0:	297fffc4 	addi	r5,r5,-1
 800f7e4:	81400215 	stw	r5,8(r16)
 800f7e8:	14400005 	stb	r17,0(r2)
 800f7ec:	80800517 	ldw	r2,20(r16)
 800f7f0:	10c01d26 	beq	r2,r3,800f868 <__swbuf_r+0xfc>
 800f7f4:	8080030b 	ldhu	r2,12(r16)
 800f7f8:	1080004c 	andi	r2,r2,1
 800f7fc:	1000181e 	bne	r2,zero,800f860 <__swbuf_r+0xf4>
 800f800:	8805883a 	mov	r2,r17
 800f804:	dfc00317 	ldw	ra,12(sp)
 800f808:	dc800217 	ldw	r18,8(sp)
 800f80c:	dc400117 	ldw	r17,4(sp)
 800f810:	dc000017 	ldw	r16,0(sp)
 800f814:	dec00404 	addi	sp,sp,16
 800f818:	f800283a 	ret
 800f81c:	81001917 	ldw	r4,100(r16)
 800f820:	00b7ffc4 	movi	r2,-8193
 800f824:	31880014 	ori	r6,r6,8192
 800f828:	2084703a 	and	r2,r4,r2
 800f82c:	80801915 	stw	r2,100(r16)
 800f830:	80800017 	ldw	r2,0(r16)
 800f834:	81000517 	ldw	r4,20(r16)
 800f838:	8180030d 	sth	r6,12(r16)
 800f83c:	10c7c83a 	sub	r3,r2,r3
 800f840:	193fe316 	blt	r3,r4,800f7d0 <__alt_data_end+0xfc00f7d0>
 800f844:	9009883a 	mov	r4,r18
 800f848:	800b883a 	mov	r5,r16
 800f84c:	8009abc0 	call	8009abc <_fflush_r>
 800f850:	1000091e 	bne	r2,zero,800f878 <__swbuf_r+0x10c>
 800f854:	80800017 	ldw	r2,0(r16)
 800f858:	00c00044 	movi	r3,1
 800f85c:	003fdd06 	br	800f7d4 <__alt_data_end+0xfc00f7d4>
 800f860:	00800284 	movi	r2,10
 800f864:	88bfe61e 	bne	r17,r2,800f800 <__alt_data_end+0xfc00f800>
 800f868:	9009883a 	mov	r4,r18
 800f86c:	800b883a 	mov	r5,r16
 800f870:	8009abc0 	call	8009abc <_fflush_r>
 800f874:	103fe226 	beq	r2,zero,800f800 <__alt_data_end+0xfc00f800>
 800f878:	00bfffc4 	movi	r2,-1
 800f87c:	003fe106 	br	800f804 <__alt_data_end+0xfc00f804>
 800f880:	9009883a 	mov	r4,r18
 800f884:	800b883a 	mov	r5,r16
 800f888:	800803c0 	call	800803c <__swsetup_r>
 800f88c:	1000051e 	bne	r2,zero,800f8a4 <__swbuf_r+0x138>
 800f890:	8180030b 	ldhu	r6,12(r16)
 800f894:	80c00417 	ldw	r3,16(r16)
 800f898:	003fc606 	br	800f7b4 <__alt_data_end+0xfc00f7b4>
 800f89c:	800a0780 	call	800a078 <__sinit>
 800f8a0:	003fbd06 	br	800f798 <__alt_data_end+0xfc00f798>
 800f8a4:	80c0030b 	ldhu	r3,12(r16)
 800f8a8:	00bfffc4 	movi	r2,-1
 800f8ac:	18c01014 	ori	r3,r3,64
 800f8b0:	80c0030d 	sth	r3,12(r16)
 800f8b4:	00c00244 	movi	r3,9
 800f8b8:	90c00015 	stw	r3,0(r18)
 800f8bc:	003fd106 	br	800f804 <__alt_data_end+0xfc00f804>

0800f8c0 <__swbuf>:
 800f8c0:	00c200b4 	movhi	r3,2050
 800f8c4:	18e31904 	addi	r3,r3,-29596
 800f8c8:	2005883a 	mov	r2,r4
 800f8cc:	19000017 	ldw	r4,0(r3)
 800f8d0:	280d883a 	mov	r6,r5
 800f8d4:	100b883a 	mov	r5,r2
 800f8d8:	800f76c1 	jmpi	800f76c <__swbuf_r>

0800f8dc <_wcrtomb_r>:
 800f8dc:	defff604 	addi	sp,sp,-40
 800f8e0:	008200b4 	movhi	r2,2050
 800f8e4:	dc800815 	stw	r18,32(sp)
 800f8e8:	dc400715 	stw	r17,28(sp)
 800f8ec:	dc000615 	stw	r16,24(sp)
 800f8f0:	10a31b04 	addi	r2,r2,-29588
 800f8f4:	dfc00915 	stw	ra,36(sp)
 800f8f8:	2021883a 	mov	r16,r4
 800f8fc:	3823883a 	mov	r17,r7
 800f900:	14800017 	ldw	r18,0(r2)
 800f904:	28001426 	beq	r5,zero,800f958 <_wcrtomb_r+0x7c>
 800f908:	d9400415 	stw	r5,16(sp)
 800f90c:	d9800515 	stw	r6,20(sp)
 800f910:	800ab6c0 	call	800ab6c <__locale_charset>
 800f914:	d9400417 	ldw	r5,16(sp)
 800f918:	d9800517 	ldw	r6,20(sp)
 800f91c:	8009883a 	mov	r4,r16
 800f920:	dc400015 	stw	r17,0(sp)
 800f924:	100f883a 	mov	r7,r2
 800f928:	903ee83a 	callr	r18
 800f92c:	00ffffc4 	movi	r3,-1
 800f930:	10c0031e 	bne	r2,r3,800f940 <_wcrtomb_r+0x64>
 800f934:	88000015 	stw	zero,0(r17)
 800f938:	00c02284 	movi	r3,138
 800f93c:	80c00015 	stw	r3,0(r16)
 800f940:	dfc00917 	ldw	ra,36(sp)
 800f944:	dc800817 	ldw	r18,32(sp)
 800f948:	dc400717 	ldw	r17,28(sp)
 800f94c:	dc000617 	ldw	r16,24(sp)
 800f950:	dec00a04 	addi	sp,sp,40
 800f954:	f800283a 	ret
 800f958:	800ab6c0 	call	800ab6c <__locale_charset>
 800f95c:	8009883a 	mov	r4,r16
 800f960:	dc400015 	stw	r17,0(sp)
 800f964:	d9400104 	addi	r5,sp,4
 800f968:	000d883a 	mov	r6,zero
 800f96c:	100f883a 	mov	r7,r2
 800f970:	903ee83a 	callr	r18
 800f974:	003fed06 	br	800f92c <__alt_data_end+0xfc00f92c>

0800f978 <wcrtomb>:
 800f978:	defff504 	addi	sp,sp,-44
 800f97c:	dc400515 	stw	r17,20(sp)
 800f980:	dc000415 	stw	r16,16(sp)
 800f984:	dfc00a15 	stw	ra,40(sp)
 800f988:	dd400915 	stw	r21,36(sp)
 800f98c:	dd000815 	stw	r20,32(sp)
 800f990:	dcc00715 	stw	r19,28(sp)
 800f994:	dc800615 	stw	r18,24(sp)
 800f998:	2021883a 	mov	r16,r4
 800f99c:	3023883a 	mov	r17,r6
 800f9a0:	20001d26 	beq	r4,zero,800fa18 <wcrtomb+0xa0>
 800f9a4:	048200b4 	movhi	r18,2050
 800f9a8:	94a31904 	addi	r18,r18,-29596
 800f9ac:	008200b4 	movhi	r2,2050
 800f9b0:	95400017 	ldw	r21,0(r18)
 800f9b4:	10a31b04 	addi	r2,r2,-29588
 800f9b8:	15000017 	ldw	r20,0(r2)
 800f9bc:	2827883a 	mov	r19,r5
 800f9c0:	800ab6c0 	call	800ab6c <__locale_charset>
 800f9c4:	a809883a 	mov	r4,r21
 800f9c8:	dc400015 	stw	r17,0(sp)
 800f9cc:	800b883a 	mov	r5,r16
 800f9d0:	980d883a 	mov	r6,r19
 800f9d4:	100f883a 	mov	r7,r2
 800f9d8:	a03ee83a 	callr	r20
 800f9dc:	00ffffc4 	movi	r3,-1
 800f9e0:	10c0041e 	bne	r2,r3,800f9f4 <wcrtomb+0x7c>
 800f9e4:	90c00017 	ldw	r3,0(r18)
 800f9e8:	01002284 	movi	r4,138
 800f9ec:	88000015 	stw	zero,0(r17)
 800f9f0:	19000015 	stw	r4,0(r3)
 800f9f4:	dfc00a17 	ldw	ra,40(sp)
 800f9f8:	dd400917 	ldw	r21,36(sp)
 800f9fc:	dd000817 	ldw	r20,32(sp)
 800fa00:	dcc00717 	ldw	r19,28(sp)
 800fa04:	dc800617 	ldw	r18,24(sp)
 800fa08:	dc400517 	ldw	r17,20(sp)
 800fa0c:	dc000417 	ldw	r16,16(sp)
 800fa10:	dec00b04 	addi	sp,sp,44
 800fa14:	f800283a 	ret
 800fa18:	048200b4 	movhi	r18,2050
 800fa1c:	94a31904 	addi	r18,r18,-29596
 800fa20:	008200b4 	movhi	r2,2050
 800fa24:	94c00017 	ldw	r19,0(r18)
 800fa28:	10a31b04 	addi	r2,r2,-29588
 800fa2c:	14000017 	ldw	r16,0(r2)
 800fa30:	800ab6c0 	call	800ab6c <__locale_charset>
 800fa34:	9809883a 	mov	r4,r19
 800fa38:	dc400015 	stw	r17,0(sp)
 800fa3c:	d9400104 	addi	r5,sp,4
 800fa40:	000d883a 	mov	r6,zero
 800fa44:	100f883a 	mov	r7,r2
 800fa48:	803ee83a 	callr	r16
 800fa4c:	003fe306 	br	800f9dc <__alt_data_end+0xfc00f9dc>

0800fa50 <__ascii_wctomb>:
 800fa50:	28000526 	beq	r5,zero,800fa68 <__ascii_wctomb+0x18>
 800fa54:	00803fc4 	movi	r2,255
 800fa58:	11800536 	bltu	r2,r6,800fa70 <__ascii_wctomb+0x20>
 800fa5c:	29800005 	stb	r6,0(r5)
 800fa60:	00800044 	movi	r2,1
 800fa64:	f800283a 	ret
 800fa68:	0005883a 	mov	r2,zero
 800fa6c:	f800283a 	ret
 800fa70:	00802284 	movi	r2,138
 800fa74:	20800015 	stw	r2,0(r4)
 800fa78:	00bfffc4 	movi	r2,-1
 800fa7c:	f800283a 	ret

0800fa80 <_wctomb_r>:
 800fa80:	008200b4 	movhi	r2,2050
 800fa84:	defff904 	addi	sp,sp,-28
 800fa88:	10a31b04 	addi	r2,r2,-29588
 800fa8c:	dfc00615 	stw	ra,24(sp)
 800fa90:	dc400515 	stw	r17,20(sp)
 800fa94:	dc000415 	stw	r16,16(sp)
 800fa98:	3823883a 	mov	r17,r7
 800fa9c:	14000017 	ldw	r16,0(r2)
 800faa0:	d9000115 	stw	r4,4(sp)
 800faa4:	d9400215 	stw	r5,8(sp)
 800faa8:	d9800315 	stw	r6,12(sp)
 800faac:	800ab6c0 	call	800ab6c <__locale_charset>
 800fab0:	d9000117 	ldw	r4,4(sp)
 800fab4:	d9400217 	ldw	r5,8(sp)
 800fab8:	d9800317 	ldw	r6,12(sp)
 800fabc:	dc400015 	stw	r17,0(sp)
 800fac0:	100f883a 	mov	r7,r2
 800fac4:	803ee83a 	callr	r16
 800fac8:	dfc00617 	ldw	ra,24(sp)
 800facc:	dc400517 	ldw	r17,20(sp)
 800fad0:	dc000417 	ldw	r16,16(sp)
 800fad4:	dec00704 	addi	sp,sp,28
 800fad8:	f800283a 	ret

0800fadc <__udivdi3>:
 800fadc:	defff504 	addi	sp,sp,-44
 800fae0:	dcc00415 	stw	r19,16(sp)
 800fae4:	dc000115 	stw	r16,4(sp)
 800fae8:	dfc00a15 	stw	ra,40(sp)
 800faec:	df000915 	stw	fp,36(sp)
 800faf0:	ddc00815 	stw	r23,32(sp)
 800faf4:	dd800715 	stw	r22,28(sp)
 800faf8:	dd400615 	stw	r21,24(sp)
 800fafc:	dd000515 	stw	r20,20(sp)
 800fb00:	dc800315 	stw	r18,12(sp)
 800fb04:	dc400215 	stw	r17,8(sp)
 800fb08:	2027883a 	mov	r19,r4
 800fb0c:	2821883a 	mov	r16,r5
 800fb10:	3800471e 	bne	r7,zero,800fc30 <__udivdi3+0x154>
 800fb14:	3025883a 	mov	r18,r6
 800fb18:	2023883a 	mov	r17,r4
 800fb1c:	2980592e 	bgeu	r5,r6,800fc84 <__udivdi3+0x1a8>
 800fb20:	00bfffd4 	movui	r2,65535
 800fb24:	2829883a 	mov	r20,r5
 800fb28:	1180b236 	bltu	r2,r6,800fdf4 <__udivdi3+0x318>
 800fb2c:	00803fc4 	movi	r2,255
 800fb30:	1181622e 	bgeu	r2,r6,80100bc <__udivdi3+0x5e0>
 800fb34:	00800204 	movi	r2,8
 800fb38:	1007883a 	mov	r3,r2
 800fb3c:	3084d83a 	srl	r2,r6,r2
 800fb40:	01020074 	movhi	r4,2049
 800fb44:	211bb104 	addi	r4,r4,28356
 800fb48:	2085883a 	add	r2,r4,r2
 800fb4c:	11000003 	ldbu	r4,0(r2)
 800fb50:	20c9883a 	add	r4,r4,r3
 800fb54:	00c00804 	movi	r3,32
 800fb58:	1907c83a 	sub	r3,r3,r4
 800fb5c:	18000526 	beq	r3,zero,800fb74 <__udivdi3+0x98>
 800fb60:	80e0983a 	sll	r16,r16,r3
 800fb64:	9908d83a 	srl	r4,r19,r4
 800fb68:	30e4983a 	sll	r18,r6,r3
 800fb6c:	98e2983a 	sll	r17,r19,r3
 800fb70:	8128b03a 	or	r20,r16,r4
 800fb74:	902ad43a 	srli	r21,r18,16
 800fb78:	a009883a 	mov	r4,r20
 800fb7c:	95bfffcc 	andi	r22,r18,65535
 800fb80:	a80b883a 	mov	r5,r21
 800fb84:	801085c0 	call	801085c <__umodsi3>
 800fb88:	a009883a 	mov	r4,r20
 800fb8c:	a80b883a 	mov	r5,r21
 800fb90:	102f883a 	mov	r23,r2
 800fb94:	80108540 	call	8010854 <__udivsi3>
 800fb98:	1009883a 	mov	r4,r2
 800fb9c:	b00b883a 	mov	r5,r22
 800fba0:	1021883a 	mov	r16,r2
 800fba4:	80027c00 	call	80027c0 <__mulsi3>
 800fba8:	b82e943a 	slli	r23,r23,16
 800fbac:	8808d43a 	srli	r4,r17,16
 800fbb0:	b906b03a 	or	r3,r23,r4
 800fbb4:	1880052e 	bgeu	r3,r2,800fbcc <__udivdi3+0xf0>
 800fbb8:	1c87883a 	add	r3,r3,r18
 800fbbc:	813fffc4 	addi	r4,r16,-1
 800fbc0:	1c800136 	bltu	r3,r18,800fbc8 <__udivdi3+0xec>
 800fbc4:	18815236 	bltu	r3,r2,8010110 <__udivdi3+0x634>
 800fbc8:	2021883a 	mov	r16,r4
 800fbcc:	18a7c83a 	sub	r19,r3,r2
 800fbd0:	9809883a 	mov	r4,r19
 800fbd4:	a80b883a 	mov	r5,r21
 800fbd8:	801085c0 	call	801085c <__umodsi3>
 800fbdc:	1029883a 	mov	r20,r2
 800fbe0:	9809883a 	mov	r4,r19
 800fbe4:	a80b883a 	mov	r5,r21
 800fbe8:	a028943a 	slli	r20,r20,16
 800fbec:	80108540 	call	8010854 <__udivsi3>
 800fbf0:	1009883a 	mov	r4,r2
 800fbf4:	b00b883a 	mov	r5,r22
 800fbf8:	8c7fffcc 	andi	r17,r17,65535
 800fbfc:	1027883a 	mov	r19,r2
 800fc00:	a462b03a 	or	r17,r20,r17
 800fc04:	80027c00 	call	80027c0 <__mulsi3>
 800fc08:	8880052e 	bgeu	r17,r2,800fc20 <__udivdi3+0x144>
 800fc0c:	8ca3883a 	add	r17,r17,r18
 800fc10:	98ffffc4 	addi	r3,r19,-1
 800fc14:	8c811036 	bltu	r17,r18,8010058 <__udivdi3+0x57c>
 800fc18:	88810f2e 	bgeu	r17,r2,8010058 <__udivdi3+0x57c>
 800fc1c:	9cffff84 	addi	r19,r19,-2
 800fc20:	8020943a 	slli	r16,r16,16
 800fc24:	0007883a 	mov	r3,zero
 800fc28:	9c04b03a 	or	r2,r19,r16
 800fc2c:	00006006 	br	800fdb0 <__udivdi3+0x2d4>
 800fc30:	29c05d36 	bltu	r5,r7,800fda8 <__udivdi3+0x2cc>
 800fc34:	00bfffd4 	movui	r2,65535
 800fc38:	11c0692e 	bgeu	r2,r7,800fde0 <__udivdi3+0x304>
 800fc3c:	00804034 	movhi	r2,256
 800fc40:	10bfffc4 	addi	r2,r2,-1
 800fc44:	11c10e2e 	bgeu	r2,r7,8010080 <__udivdi3+0x5a4>
 800fc48:	01400604 	movi	r5,24
 800fc4c:	2811883a 	mov	r8,r5
 800fc50:	394ad83a 	srl	r5,r7,r5
 800fc54:	00820074 	movhi	r2,2049
 800fc58:	109bb104 	addi	r2,r2,28356
 800fc5c:	114b883a 	add	r5,r2,r5
 800fc60:	29400003 	ldbu	r5,0(r5)
 800fc64:	00c00804 	movi	r3,32
 800fc68:	2a0b883a 	add	r5,r5,r8
 800fc6c:	196fc83a 	sub	r23,r3,r5
 800fc70:	b8006b1e 	bne	r23,zero,800fe20 <__udivdi3+0x344>
 800fc74:	3c011436 	bltu	r7,r16,80100c8 <__udivdi3+0x5ec>
 800fc78:	9985403a 	cmpgeu	r2,r19,r6
 800fc7c:	0007883a 	mov	r3,zero
 800fc80:	00004b06 	br	800fdb0 <__udivdi3+0x2d4>
 800fc84:	3000041e 	bne	r6,zero,800fc98 <__udivdi3+0x1bc>
 800fc88:	01000044 	movi	r4,1
 800fc8c:	000b883a 	mov	r5,zero
 800fc90:	80108540 	call	8010854 <__udivsi3>
 800fc94:	1025883a 	mov	r18,r2
 800fc98:	00bfffd4 	movui	r2,65535
 800fc9c:	14805b2e 	bgeu	r2,r18,800fe0c <__udivdi3+0x330>
 800fca0:	00804034 	movhi	r2,256
 800fca4:	10bfffc4 	addi	r2,r2,-1
 800fca8:	1480fe2e 	bgeu	r2,r18,80100a4 <__udivdi3+0x5c8>
 800fcac:	00800604 	movi	r2,24
 800fcb0:	1007883a 	mov	r3,r2
 800fcb4:	9084d83a 	srl	r2,r18,r2
 800fcb8:	01020074 	movhi	r4,2049
 800fcbc:	211bb104 	addi	r4,r4,28356
 800fcc0:	2085883a 	add	r2,r4,r2
 800fcc4:	11800003 	ldbu	r6,0(r2)
 800fcc8:	01c00804 	movi	r7,32
 800fccc:	30c7883a 	add	r3,r6,r3
 800fcd0:	38cfc83a 	sub	r7,r7,r3
 800fcd4:	3800a71e 	bne	r7,zero,800ff74 <__udivdi3+0x498>
 800fcd8:	9028d43a 	srli	r20,r18,16
 800fcdc:	84a1c83a 	sub	r16,r16,r18
 800fce0:	957fffcc 	andi	r21,r18,65535
 800fce4:	00c00044 	movi	r3,1
 800fce8:	8009883a 	mov	r4,r16
 800fcec:	a00b883a 	mov	r5,r20
 800fcf0:	d8c00015 	stw	r3,0(sp)
 800fcf4:	801085c0 	call	801085c <__umodsi3>
 800fcf8:	8009883a 	mov	r4,r16
 800fcfc:	a00b883a 	mov	r5,r20
 800fd00:	102d883a 	mov	r22,r2
 800fd04:	80108540 	call	8010854 <__udivsi3>
 800fd08:	1009883a 	mov	r4,r2
 800fd0c:	a80b883a 	mov	r5,r21
 800fd10:	1021883a 	mov	r16,r2
 800fd14:	80027c00 	call	80027c0 <__mulsi3>
 800fd18:	b02c943a 	slli	r22,r22,16
 800fd1c:	880ed43a 	srli	r7,r17,16
 800fd20:	d8c00017 	ldw	r3,0(sp)
 800fd24:	b1ccb03a 	or	r6,r22,r7
 800fd28:	3080052e 	bgeu	r6,r2,800fd40 <__udivdi3+0x264>
 800fd2c:	348d883a 	add	r6,r6,r18
 800fd30:	813fffc4 	addi	r4,r16,-1
 800fd34:	34800136 	bltu	r6,r18,800fd3c <__udivdi3+0x260>
 800fd38:	3080f236 	bltu	r6,r2,8010104 <__udivdi3+0x628>
 800fd3c:	2021883a 	mov	r16,r4
 800fd40:	30a7c83a 	sub	r19,r6,r2
 800fd44:	9809883a 	mov	r4,r19
 800fd48:	a00b883a 	mov	r5,r20
 800fd4c:	d8c00015 	stw	r3,0(sp)
 800fd50:	801085c0 	call	801085c <__umodsi3>
 800fd54:	102d883a 	mov	r22,r2
 800fd58:	9809883a 	mov	r4,r19
 800fd5c:	a00b883a 	mov	r5,r20
 800fd60:	b02c943a 	slli	r22,r22,16
 800fd64:	80108540 	call	8010854 <__udivsi3>
 800fd68:	1009883a 	mov	r4,r2
 800fd6c:	a80b883a 	mov	r5,r21
 800fd70:	8c7fffcc 	andi	r17,r17,65535
 800fd74:	1027883a 	mov	r19,r2
 800fd78:	b462b03a 	or	r17,r22,r17
 800fd7c:	80027c00 	call	80027c0 <__mulsi3>
 800fd80:	d8c00017 	ldw	r3,0(sp)
 800fd84:	8880052e 	bgeu	r17,r2,800fd9c <__udivdi3+0x2c0>
 800fd88:	8ca3883a 	add	r17,r17,r18
 800fd8c:	993fffc4 	addi	r4,r19,-1
 800fd90:	8c80af36 	bltu	r17,r18,8010050 <__udivdi3+0x574>
 800fd94:	8880ae2e 	bgeu	r17,r2,8010050 <__udivdi3+0x574>
 800fd98:	9cffff84 	addi	r19,r19,-2
 800fd9c:	8020943a 	slli	r16,r16,16
 800fda0:	9c04b03a 	or	r2,r19,r16
 800fda4:	00000206 	br	800fdb0 <__udivdi3+0x2d4>
 800fda8:	0007883a 	mov	r3,zero
 800fdac:	0005883a 	mov	r2,zero
 800fdb0:	dfc00a17 	ldw	ra,40(sp)
 800fdb4:	df000917 	ldw	fp,36(sp)
 800fdb8:	ddc00817 	ldw	r23,32(sp)
 800fdbc:	dd800717 	ldw	r22,28(sp)
 800fdc0:	dd400617 	ldw	r21,24(sp)
 800fdc4:	dd000517 	ldw	r20,20(sp)
 800fdc8:	dcc00417 	ldw	r19,16(sp)
 800fdcc:	dc800317 	ldw	r18,12(sp)
 800fdd0:	dc400217 	ldw	r17,8(sp)
 800fdd4:	dc000117 	ldw	r16,4(sp)
 800fdd8:	dec00b04 	addi	sp,sp,44
 800fddc:	f800283a 	ret
 800fde0:	00803fc4 	movi	r2,255
 800fde4:	11c0a92e 	bgeu	r2,r7,801008c <__udivdi3+0x5b0>
 800fde8:	01400204 	movi	r5,8
 800fdec:	2811883a 	mov	r8,r5
 800fdf0:	003f9706 	br	800fc50 <__alt_data_end+0xfc00fc50>
 800fdf4:	00804034 	movhi	r2,256
 800fdf8:	10bfffc4 	addi	r2,r2,-1
 800fdfc:	1180a62e 	bgeu	r2,r6,8010098 <__udivdi3+0x5bc>
 800fe00:	00800604 	movi	r2,24
 800fe04:	1007883a 	mov	r3,r2
 800fe08:	003f4c06 	br	800fb3c <__alt_data_end+0xfc00fb3c>
 800fe0c:	00803fc4 	movi	r2,255
 800fe10:	1480a72e 	bgeu	r2,r18,80100b0 <__udivdi3+0x5d4>
 800fe14:	00800204 	movi	r2,8
 800fe18:	1007883a 	mov	r3,r2
 800fe1c:	003fa506 	br	800fcb4 <__alt_data_end+0xfc00fcb4>
 800fe20:	3178d83a 	srl	fp,r6,r5
 800fe24:	3dce983a 	sll	r7,r7,r23
 800fe28:	8168d83a 	srl	r20,r16,r5
 800fe2c:	9950d83a 	srl	r8,r19,r5
 800fe30:	3f38b03a 	or	fp,r7,fp
 800fe34:	e024d43a 	srli	r18,fp,16
 800fe38:	85e0983a 	sll	r16,r16,r23
 800fe3c:	a009883a 	mov	r4,r20
 800fe40:	900b883a 	mov	r5,r18
 800fe44:	8220b03a 	or	r16,r16,r8
 800fe48:	35ea983a 	sll	r21,r6,r23
 800fe4c:	801085c0 	call	801085c <__umodsi3>
 800fe50:	a009883a 	mov	r4,r20
 800fe54:	900b883a 	mov	r5,r18
 800fe58:	1023883a 	mov	r17,r2
 800fe5c:	e5bfffcc 	andi	r22,fp,65535
 800fe60:	80108540 	call	8010854 <__udivsi3>
 800fe64:	1009883a 	mov	r4,r2
 800fe68:	b00b883a 	mov	r5,r22
 800fe6c:	1029883a 	mov	r20,r2
 800fe70:	80027c00 	call	80027c0 <__mulsi3>
 800fe74:	8806943a 	slli	r3,r17,16
 800fe78:	8014d43a 	srli	r10,r16,16
 800fe7c:	1a92b03a 	or	r9,r3,r10
 800fe80:	4880042e 	bgeu	r9,r2,800fe94 <__udivdi3+0x3b8>
 800fe84:	4f13883a 	add	r9,r9,fp
 800fe88:	a0ffffc4 	addi	r3,r20,-1
 800fe8c:	4f00952e 	bgeu	r9,fp,80100e4 <__udivdi3+0x608>
 800fe90:	1829883a 	mov	r20,r3
 800fe94:	48a3c83a 	sub	r17,r9,r2
 800fe98:	8809883a 	mov	r4,r17
 800fe9c:	900b883a 	mov	r5,r18
 800fea0:	801085c0 	call	801085c <__umodsi3>
 800fea4:	8809883a 	mov	r4,r17
 800fea8:	900b883a 	mov	r5,r18
 800feac:	d8800015 	stw	r2,0(sp)
 800feb0:	80108540 	call	8010854 <__udivsi3>
 800feb4:	1009883a 	mov	r4,r2
 800feb8:	b00b883a 	mov	r5,r22
 800febc:	1023883a 	mov	r17,r2
 800fec0:	80027c00 	call	80027c0 <__mulsi3>
 800fec4:	d8c00017 	ldw	r3,0(sp)
 800fec8:	823fffcc 	andi	r8,r16,65535
 800fecc:	1806943a 	slli	r3,r3,16
 800fed0:	1a20b03a 	or	r16,r3,r8
 800fed4:	8080042e 	bgeu	r16,r2,800fee8 <__udivdi3+0x40c>
 800fed8:	8721883a 	add	r16,r16,fp
 800fedc:	88ffffc4 	addi	r3,r17,-1
 800fee0:	87007c2e 	bgeu	r16,fp,80100d4 <__udivdi3+0x5f8>
 800fee4:	1823883a 	mov	r17,r3
 800fee8:	a028943a 	slli	r20,r20,16
 800feec:	acbfffcc 	andi	r18,r21,65535
 800fef0:	900b883a 	mov	r5,r18
 800fef4:	8d28b03a 	or	r20,r17,r20
 800fef8:	a022d43a 	srli	r17,r20,16
 800fefc:	a5bfffcc 	andi	r22,r20,65535
 800ff00:	b009883a 	mov	r4,r22
 800ff04:	a82ad43a 	srli	r21,r21,16
 800ff08:	80a1c83a 	sub	r16,r16,r2
 800ff0c:	80027c00 	call	80027c0 <__mulsi3>
 800ff10:	8809883a 	mov	r4,r17
 800ff14:	900b883a 	mov	r5,r18
 800ff18:	1039883a 	mov	fp,r2
 800ff1c:	80027c00 	call	80027c0 <__mulsi3>
 800ff20:	8809883a 	mov	r4,r17
 800ff24:	a80b883a 	mov	r5,r21
 800ff28:	1025883a 	mov	r18,r2
 800ff2c:	80027c00 	call	80027c0 <__mulsi3>
 800ff30:	b009883a 	mov	r4,r22
 800ff34:	a80b883a 	mov	r5,r21
 800ff38:	1023883a 	mov	r17,r2
 800ff3c:	80027c00 	call	80027c0 <__mulsi3>
 800ff40:	e006d43a 	srli	r3,fp,16
 800ff44:	9085883a 	add	r2,r18,r2
 800ff48:	10c7883a 	add	r3,r2,r3
 800ff4c:	1c80022e 	bgeu	r3,r18,800ff58 <__udivdi3+0x47c>
 800ff50:	00800074 	movhi	r2,1
 800ff54:	88a3883a 	add	r17,r17,r2
 800ff58:	1808d43a 	srli	r4,r3,16
 800ff5c:	8909883a 	add	r4,r17,r4
 800ff60:	81004436 	bltu	r16,r4,8010074 <__udivdi3+0x598>
 800ff64:	81003e26 	beq	r16,r4,8010060 <__udivdi3+0x584>
 800ff68:	a005883a 	mov	r2,r20
 800ff6c:	0007883a 	mov	r3,zero
 800ff70:	003f8f06 	br	800fdb0 <__alt_data_end+0xfc00fdb0>
 800ff74:	91e4983a 	sll	r18,r18,r7
 800ff78:	80eed83a 	srl	r23,r16,r3
 800ff7c:	81cc983a 	sll	r6,r16,r7
 800ff80:	9028d43a 	srli	r20,r18,16
 800ff84:	98c6d83a 	srl	r3,r19,r3
 800ff88:	b809883a 	mov	r4,r23
 800ff8c:	a00b883a 	mov	r5,r20
 800ff90:	30ecb03a 	or	r22,r6,r3
 800ff94:	99e2983a 	sll	r17,r19,r7
 800ff98:	801085c0 	call	801085c <__umodsi3>
 800ff9c:	b809883a 	mov	r4,r23
 800ffa0:	a00b883a 	mov	r5,r20
 800ffa4:	1021883a 	mov	r16,r2
 800ffa8:	957fffcc 	andi	r21,r18,65535
 800ffac:	80108540 	call	8010854 <__udivsi3>
 800ffb0:	a80b883a 	mov	r5,r21
 800ffb4:	1009883a 	mov	r4,r2
 800ffb8:	102f883a 	mov	r23,r2
 800ffbc:	80027c00 	call	80027c0 <__mulsi3>
 800ffc0:	8020943a 	slli	r16,r16,16
 800ffc4:	b00ad43a 	srli	r5,r22,16
 800ffc8:	814cb03a 	or	r6,r16,r5
 800ffcc:	3080062e 	bgeu	r6,r2,800ffe8 <__udivdi3+0x50c>
 800ffd0:	348d883a 	add	r6,r6,r18
 800ffd4:	b8ffffc4 	addi	r3,r23,-1
 800ffd8:	34804836 	bltu	r6,r18,80100fc <__udivdi3+0x620>
 800ffdc:	3080472e 	bgeu	r6,r2,80100fc <__udivdi3+0x620>
 800ffe0:	bdffff84 	addi	r23,r23,-2
 800ffe4:	348d883a 	add	r6,r6,r18
 800ffe8:	30a7c83a 	sub	r19,r6,r2
 800ffec:	9809883a 	mov	r4,r19
 800fff0:	a00b883a 	mov	r5,r20
 800fff4:	801085c0 	call	801085c <__umodsi3>
 800fff8:	9809883a 	mov	r4,r19
 800fffc:	a00b883a 	mov	r5,r20
 8010000:	1039883a 	mov	fp,r2
 8010004:	80108540 	call	8010854 <__udivsi3>
 8010008:	1009883a 	mov	r4,r2
 801000c:	a80b883a 	mov	r5,r21
 8010010:	e038943a 	slli	fp,fp,16
 8010014:	1027883a 	mov	r19,r2
 8010018:	80027c00 	call	80027c0 <__mulsi3>
 801001c:	b1bfffcc 	andi	r6,r22,65535
 8010020:	e18cb03a 	or	r6,fp,r6
 8010024:	3080062e 	bgeu	r6,r2,8010040 <__udivdi3+0x564>
 8010028:	348d883a 	add	r6,r6,r18
 801002c:	98ffffc4 	addi	r3,r19,-1
 8010030:	34803036 	bltu	r6,r18,80100f4 <__udivdi3+0x618>
 8010034:	30802f2e 	bgeu	r6,r2,80100f4 <__udivdi3+0x618>
 8010038:	9cffff84 	addi	r19,r19,-2
 801003c:	348d883a 	add	r6,r6,r18
 8010040:	b82e943a 	slli	r23,r23,16
 8010044:	30a1c83a 	sub	r16,r6,r2
 8010048:	9dc6b03a 	or	r3,r19,r23
 801004c:	003f2606 	br	800fce8 <__alt_data_end+0xfc00fce8>
 8010050:	2027883a 	mov	r19,r4
 8010054:	003f5106 	br	800fd9c <__alt_data_end+0xfc00fd9c>
 8010058:	1827883a 	mov	r19,r3
 801005c:	003ef006 	br	800fc20 <__alt_data_end+0xfc00fc20>
 8010060:	1808943a 	slli	r4,r3,16
 8010064:	9dc6983a 	sll	r3,r19,r23
 8010068:	e73fffcc 	andi	fp,fp,65535
 801006c:	2709883a 	add	r4,r4,fp
 8010070:	193fbd2e 	bgeu	r3,r4,800ff68 <__alt_data_end+0xfc00ff68>
 8010074:	a0bfffc4 	addi	r2,r20,-1
 8010078:	0007883a 	mov	r3,zero
 801007c:	003f4c06 	br	800fdb0 <__alt_data_end+0xfc00fdb0>
 8010080:	01400404 	movi	r5,16
 8010084:	2811883a 	mov	r8,r5
 8010088:	003ef106 	br	800fc50 <__alt_data_end+0xfc00fc50>
 801008c:	000b883a 	mov	r5,zero
 8010090:	0011883a 	mov	r8,zero
 8010094:	003eee06 	br	800fc50 <__alt_data_end+0xfc00fc50>
 8010098:	00800404 	movi	r2,16
 801009c:	1007883a 	mov	r3,r2
 80100a0:	003ea606 	br	800fb3c <__alt_data_end+0xfc00fb3c>
 80100a4:	00800404 	movi	r2,16
 80100a8:	1007883a 	mov	r3,r2
 80100ac:	003f0106 	br	800fcb4 <__alt_data_end+0xfc00fcb4>
 80100b0:	0005883a 	mov	r2,zero
 80100b4:	0007883a 	mov	r3,zero
 80100b8:	003efe06 	br	800fcb4 <__alt_data_end+0xfc00fcb4>
 80100bc:	0005883a 	mov	r2,zero
 80100c0:	0007883a 	mov	r3,zero
 80100c4:	003e9d06 	br	800fb3c <__alt_data_end+0xfc00fb3c>
 80100c8:	0007883a 	mov	r3,zero
 80100cc:	00800044 	movi	r2,1
 80100d0:	003f3706 	br	800fdb0 <__alt_data_end+0xfc00fdb0>
 80100d4:	80bf832e 	bgeu	r16,r2,800fee4 <__alt_data_end+0xfc00fee4>
 80100d8:	8c7fff84 	addi	r17,r17,-2
 80100dc:	8721883a 	add	r16,r16,fp
 80100e0:	003f8106 	br	800fee8 <__alt_data_end+0xfc00fee8>
 80100e4:	48bf6a2e 	bgeu	r9,r2,800fe90 <__alt_data_end+0xfc00fe90>
 80100e8:	a53fff84 	addi	r20,r20,-2
 80100ec:	4f13883a 	add	r9,r9,fp
 80100f0:	003f6806 	br	800fe94 <__alt_data_end+0xfc00fe94>
 80100f4:	1827883a 	mov	r19,r3
 80100f8:	003fd106 	br	8010040 <__alt_data_end+0xfc010040>
 80100fc:	182f883a 	mov	r23,r3
 8010100:	003fb906 	br	800ffe8 <__alt_data_end+0xfc00ffe8>
 8010104:	843fff84 	addi	r16,r16,-2
 8010108:	348d883a 	add	r6,r6,r18
 801010c:	003f0c06 	br	800fd40 <__alt_data_end+0xfc00fd40>
 8010110:	843fff84 	addi	r16,r16,-2
 8010114:	1c87883a 	add	r3,r3,r18
 8010118:	003eac06 	br	800fbcc <__alt_data_end+0xfc00fbcc>

0801011c <__umoddi3>:
 801011c:	defff404 	addi	sp,sp,-48
 8010120:	dd800815 	stw	r22,32(sp)
 8010124:	dc400315 	stw	r17,12(sp)
 8010128:	dc000215 	stw	r16,8(sp)
 801012c:	dfc00b15 	stw	ra,44(sp)
 8010130:	df000a15 	stw	fp,40(sp)
 8010134:	ddc00915 	stw	r23,36(sp)
 8010138:	dd400715 	stw	r21,28(sp)
 801013c:	dd000615 	stw	r20,24(sp)
 8010140:	dcc00515 	stw	r19,20(sp)
 8010144:	dc800415 	stw	r18,16(sp)
 8010148:	2021883a 	mov	r16,r4
 801014c:	2823883a 	mov	r17,r5
 8010150:	282d883a 	mov	r22,r5
 8010154:	38003c1e 	bne	r7,zero,8010248 <__umoddi3+0x12c>
 8010158:	3027883a 	mov	r19,r6
 801015c:	2029883a 	mov	r20,r4
 8010160:	2980522e 	bgeu	r5,r6,80102ac <__umoddi3+0x190>
 8010164:	00bfffd4 	movui	r2,65535
 8010168:	1180a436 	bltu	r2,r6,80103fc <__umoddi3+0x2e0>
 801016c:	00803fc4 	movi	r2,255
 8010170:	11815e2e 	bgeu	r2,r6,80106ec <__umoddi3+0x5d0>
 8010174:	01400204 	movi	r5,8
 8010178:	2805883a 	mov	r2,r5
 801017c:	314ad83a 	srl	r5,r6,r5
 8010180:	00c20074 	movhi	r3,2049
 8010184:	18dbb104 	addi	r3,r3,28356
 8010188:	194b883a 	add	r5,r3,r5
 801018c:	29000003 	ldbu	r4,0(r5)
 8010190:	2089883a 	add	r4,r4,r2
 8010194:	00800804 	movi	r2,32
 8010198:	1105c83a 	sub	r2,r2,r4
 801019c:	10010c26 	beq	r2,zero,80105d0 <__umoddi3+0x4b4>
 80101a0:	88a2983a 	sll	r17,r17,r2
 80101a4:	8108d83a 	srl	r4,r16,r4
 80101a8:	30a6983a 	sll	r19,r6,r2
 80101ac:	80a8983a 	sll	r20,r16,r2
 80101b0:	1025883a 	mov	r18,r2
 80101b4:	892cb03a 	or	r22,r17,r4
 80101b8:	9822d43a 	srli	r17,r19,16
 80101bc:	b009883a 	mov	r4,r22
 80101c0:	9d7fffcc 	andi	r21,r19,65535
 80101c4:	880b883a 	mov	r5,r17
 80101c8:	801085c0 	call	801085c <__umodsi3>
 80101cc:	b009883a 	mov	r4,r22
 80101d0:	880b883a 	mov	r5,r17
 80101d4:	102f883a 	mov	r23,r2
 80101d8:	80108540 	call	8010854 <__udivsi3>
 80101dc:	1009883a 	mov	r4,r2
 80101e0:	a80b883a 	mov	r5,r21
 80101e4:	80027c00 	call	80027c0 <__mulsi3>
 80101e8:	b82e943a 	slli	r23,r23,16
 80101ec:	a008d43a 	srli	r4,r20,16
 80101f0:	b906b03a 	or	r3,r23,r4
 80101f4:	1880042e 	bgeu	r3,r2,8010208 <__umoddi3+0xec>
 80101f8:	1cc7883a 	add	r3,r3,r19
 80101fc:	1cc00236 	bltu	r3,r19,8010208 <__umoddi3+0xec>
 8010200:	1880012e 	bgeu	r3,r2,8010208 <__umoddi3+0xec>
 8010204:	1cc7883a 	add	r3,r3,r19
 8010208:	18a1c83a 	sub	r16,r3,r2
 801020c:	8009883a 	mov	r4,r16
 8010210:	880b883a 	mov	r5,r17
 8010214:	801085c0 	call	801085c <__umodsi3>
 8010218:	8009883a 	mov	r4,r16
 801021c:	880b883a 	mov	r5,r17
 8010220:	102d883a 	mov	r22,r2
 8010224:	80108540 	call	8010854 <__udivsi3>
 8010228:	1009883a 	mov	r4,r2
 801022c:	a80b883a 	mov	r5,r21
 8010230:	b02c943a 	slli	r22,r22,16
 8010234:	80027c00 	call	80027c0 <__mulsi3>
 8010238:	a13fffcc 	andi	r4,r20,65535
 801023c:	b106b03a 	or	r3,r22,r4
 8010240:	1880572e 	bgeu	r3,r2,80103a0 <__umoddi3+0x284>
 8010244:	00005206 	br	8010390 <__umoddi3+0x274>
 8010248:	29c05936 	bltu	r5,r7,80103b0 <__umoddi3+0x294>
 801024c:	00bfffd4 	movui	r2,65535
 8010250:	11c0652e 	bgeu	r2,r7,80103e8 <__umoddi3+0x2cc>
 8010254:	00804034 	movhi	r2,256
 8010258:	10bfffc4 	addi	r2,r2,-1
 801025c:	11c1172e 	bgeu	r2,r7,80106bc <__umoddi3+0x5a0>
 8010260:	01400604 	movi	r5,24
 8010264:	282b883a 	mov	r21,r5
 8010268:	394ad83a 	srl	r5,r7,r5
 801026c:	00c20074 	movhi	r3,2049
 8010270:	18dbb104 	addi	r3,r3,28356
 8010274:	194b883a 	add	r5,r3,r5
 8010278:	28800003 	ldbu	r2,0(r5)
 801027c:	00c00804 	movi	r3,32
 8010280:	156b883a 	add	r21,r2,r21
 8010284:	1d69c83a 	sub	r20,r3,r21
 8010288:	a000671e 	bne	r20,zero,8010428 <__umoddi3+0x30c>
 801028c:	3c400136 	bltu	r7,r17,8010294 <__umoddi3+0x178>
 8010290:	81812336 	bltu	r16,r6,8010720 <__umoddi3+0x604>
 8010294:	8185c83a 	sub	r2,r16,r6
 8010298:	89e3c83a 	sub	r17,r17,r7
 801029c:	8087803a 	cmpltu	r3,r16,r2
 80102a0:	88edc83a 	sub	r22,r17,r3
 80102a4:	b007883a 	mov	r3,r22
 80102a8:	00004306 	br	80103b8 <__umoddi3+0x29c>
 80102ac:	3000041e 	bne	r6,zero,80102c0 <__umoddi3+0x1a4>
 80102b0:	01000044 	movi	r4,1
 80102b4:	000b883a 	mov	r5,zero
 80102b8:	80108540 	call	8010854 <__udivsi3>
 80102bc:	1027883a 	mov	r19,r2
 80102c0:	00bfffd4 	movui	r2,65535
 80102c4:	14c0532e 	bgeu	r2,r19,8010414 <__umoddi3+0x2f8>
 80102c8:	00804034 	movhi	r2,256
 80102cc:	10bfffc4 	addi	r2,r2,-1
 80102d0:	14c1032e 	bgeu	r2,r19,80106e0 <__umoddi3+0x5c4>
 80102d4:	00800604 	movi	r2,24
 80102d8:	1007883a 	mov	r3,r2
 80102dc:	9884d83a 	srl	r2,r19,r2
 80102e0:	01020074 	movhi	r4,2049
 80102e4:	211bb104 	addi	r4,r4,28356
 80102e8:	2085883a 	add	r2,r4,r2
 80102ec:	11000003 	ldbu	r4,0(r2)
 80102f0:	00800804 	movi	r2,32
 80102f4:	20c7883a 	add	r3,r4,r3
 80102f8:	10c5c83a 	sub	r2,r2,r3
 80102fc:	1000b61e 	bne	r2,zero,80105d8 <__umoddi3+0x4bc>
 8010300:	982ad43a 	srli	r21,r19,16
 8010304:	8ce3c83a 	sub	r17,r17,r19
 8010308:	9dbfffcc 	andi	r22,r19,65535
 801030c:	0025883a 	mov	r18,zero
 8010310:	8809883a 	mov	r4,r17
 8010314:	a80b883a 	mov	r5,r21
 8010318:	801085c0 	call	801085c <__umodsi3>
 801031c:	8809883a 	mov	r4,r17
 8010320:	a80b883a 	mov	r5,r21
 8010324:	102f883a 	mov	r23,r2
 8010328:	80108540 	call	8010854 <__udivsi3>
 801032c:	1009883a 	mov	r4,r2
 8010330:	b00b883a 	mov	r5,r22
 8010334:	80027c00 	call	80027c0 <__mulsi3>
 8010338:	b82e943a 	slli	r23,r23,16
 801033c:	a008d43a 	srli	r4,r20,16
 8010340:	b906b03a 	or	r3,r23,r4
 8010344:	1880032e 	bgeu	r3,r2,8010354 <__umoddi3+0x238>
 8010348:	1cc7883a 	add	r3,r3,r19
 801034c:	1cc00136 	bltu	r3,r19,8010354 <__umoddi3+0x238>
 8010350:	1880f136 	bltu	r3,r2,8010718 <__umoddi3+0x5fc>
 8010354:	18a1c83a 	sub	r16,r3,r2
 8010358:	8009883a 	mov	r4,r16
 801035c:	a80b883a 	mov	r5,r21
 8010360:	801085c0 	call	801085c <__umodsi3>
 8010364:	8009883a 	mov	r4,r16
 8010368:	a80b883a 	mov	r5,r21
 801036c:	1023883a 	mov	r17,r2
 8010370:	80108540 	call	8010854 <__udivsi3>
 8010374:	1009883a 	mov	r4,r2
 8010378:	b00b883a 	mov	r5,r22
 801037c:	8822943a 	slli	r17,r17,16
 8010380:	80027c00 	call	80027c0 <__mulsi3>
 8010384:	a13fffcc 	andi	r4,r20,65535
 8010388:	8906b03a 	or	r3,r17,r4
 801038c:	1880042e 	bgeu	r3,r2,80103a0 <__umoddi3+0x284>
 8010390:	1cc7883a 	add	r3,r3,r19
 8010394:	1cc00236 	bltu	r3,r19,80103a0 <__umoddi3+0x284>
 8010398:	1880012e 	bgeu	r3,r2,80103a0 <__umoddi3+0x284>
 801039c:	1cc7883a 	add	r3,r3,r19
 80103a0:	1887c83a 	sub	r3,r3,r2
 80103a4:	1c84d83a 	srl	r2,r3,r18
 80103a8:	0007883a 	mov	r3,zero
 80103ac:	00000206 	br	80103b8 <__umoddi3+0x29c>
 80103b0:	2005883a 	mov	r2,r4
 80103b4:	2807883a 	mov	r3,r5
 80103b8:	dfc00b17 	ldw	ra,44(sp)
 80103bc:	df000a17 	ldw	fp,40(sp)
 80103c0:	ddc00917 	ldw	r23,36(sp)
 80103c4:	dd800817 	ldw	r22,32(sp)
 80103c8:	dd400717 	ldw	r21,28(sp)
 80103cc:	dd000617 	ldw	r20,24(sp)
 80103d0:	dcc00517 	ldw	r19,20(sp)
 80103d4:	dc800417 	ldw	r18,16(sp)
 80103d8:	dc400317 	ldw	r17,12(sp)
 80103dc:	dc000217 	ldw	r16,8(sp)
 80103e0:	dec00c04 	addi	sp,sp,48
 80103e4:	f800283a 	ret
 80103e8:	00803fc4 	movi	r2,255
 80103ec:	11c0b02e 	bgeu	r2,r7,80106b0 <__umoddi3+0x594>
 80103f0:	01400204 	movi	r5,8
 80103f4:	282b883a 	mov	r21,r5
 80103f8:	003f9b06 	br	8010268 <__alt_data_end+0xfc010268>
 80103fc:	00804034 	movhi	r2,256
 8010400:	10bfffc4 	addi	r2,r2,-1
 8010404:	1180b02e 	bgeu	r2,r6,80106c8 <__umoddi3+0x5ac>
 8010408:	01400604 	movi	r5,24
 801040c:	2805883a 	mov	r2,r5
 8010410:	003f5a06 	br	801017c <__alt_data_end+0xfc01017c>
 8010414:	00803fc4 	movi	r2,255
 8010418:	14c0ae2e 	bgeu	r2,r19,80106d4 <__umoddi3+0x5b8>
 801041c:	00800204 	movi	r2,8
 8010420:	1007883a 	mov	r3,r2
 8010424:	003fad06 	br	80102dc <__alt_data_end+0xfc0102dc>
 8010428:	3d0a983a 	sll	r5,r7,r20
 801042c:	356cd83a 	srl	r22,r6,r21
 8010430:	8d78d83a 	srl	fp,r17,r21
 8010434:	8d10983a 	sll	r8,r17,r20
 8010438:	2dacb03a 	or	r22,r5,r22
 801043c:	b02ed43a 	srli	r23,r22,16
 8010440:	8564d83a 	srl	r18,r16,r21
 8010444:	e009883a 	mov	r4,fp
 8010448:	b80b883a 	mov	r5,r23
 801044c:	44a4b03a 	or	r18,r8,r18
 8010450:	3526983a 	sll	r19,r6,r20
 8010454:	801085c0 	call	801085c <__umodsi3>
 8010458:	e009883a 	mov	r4,fp
 801045c:	b80b883a 	mov	r5,r23
 8010460:	b47fffcc 	andi	r17,r22,65535
 8010464:	d8800015 	stw	r2,0(sp)
 8010468:	80108540 	call	8010854 <__udivsi3>
 801046c:	1009883a 	mov	r4,r2
 8010470:	880b883a 	mov	r5,r17
 8010474:	1039883a 	mov	fp,r2
 8010478:	80027c00 	call	80027c0 <__mulsi3>
 801047c:	d9800017 	ldw	r6,0(sp)
 8010480:	9008d43a 	srli	r4,r18,16
 8010484:	8520983a 	sll	r16,r16,r20
 8010488:	300c943a 	slli	r6,r6,16
 801048c:	3106b03a 	or	r3,r6,r4
 8010490:	1880042e 	bgeu	r3,r2,80104a4 <__umoddi3+0x388>
 8010494:	1d87883a 	add	r3,r3,r22
 8010498:	e13fffc4 	addi	r4,fp,-1
 801049c:	1d809a2e 	bgeu	r3,r22,8010708 <__umoddi3+0x5ec>
 80104a0:	2039883a 	mov	fp,r4
 80104a4:	1887c83a 	sub	r3,r3,r2
 80104a8:	1809883a 	mov	r4,r3
 80104ac:	b80b883a 	mov	r5,r23
 80104b0:	d8c00115 	stw	r3,4(sp)
 80104b4:	801085c0 	call	801085c <__umodsi3>
 80104b8:	d8c00117 	ldw	r3,4(sp)
 80104bc:	b80b883a 	mov	r5,r23
 80104c0:	d8800015 	stw	r2,0(sp)
 80104c4:	1809883a 	mov	r4,r3
 80104c8:	80108540 	call	8010854 <__udivsi3>
 80104cc:	880b883a 	mov	r5,r17
 80104d0:	1009883a 	mov	r4,r2
 80104d4:	102f883a 	mov	r23,r2
 80104d8:	80027c00 	call	80027c0 <__mulsi3>
 80104dc:	d9800017 	ldw	r6,0(sp)
 80104e0:	947fffcc 	andi	r17,r18,65535
 80104e4:	300c943a 	slli	r6,r6,16
 80104e8:	3464b03a 	or	r18,r6,r17
 80104ec:	9080042e 	bgeu	r18,r2,8010500 <__umoddi3+0x3e4>
 80104f0:	95a5883a 	add	r18,r18,r22
 80104f4:	b8ffffc4 	addi	r3,r23,-1
 80104f8:	95807f2e 	bgeu	r18,r22,80106f8 <__umoddi3+0x5dc>
 80104fc:	182f883a 	mov	r23,r3
 8010500:	e038943a 	slli	fp,fp,16
 8010504:	980cd43a 	srli	r6,r19,16
 8010508:	98ffffcc 	andi	r3,r19,65535
 801050c:	bf38b03a 	or	fp,r23,fp
 8010510:	e02ed43a 	srli	r23,fp,16
 8010514:	e73fffcc 	andi	fp,fp,65535
 8010518:	180b883a 	mov	r5,r3
 801051c:	e009883a 	mov	r4,fp
 8010520:	d9800015 	stw	r6,0(sp)
 8010524:	d8c00115 	stw	r3,4(sp)
 8010528:	90a5c83a 	sub	r18,r18,r2
 801052c:	80027c00 	call	80027c0 <__mulsi3>
 8010530:	d8c00117 	ldw	r3,4(sp)
 8010534:	b809883a 	mov	r4,r23
 8010538:	1023883a 	mov	r17,r2
 801053c:	180b883a 	mov	r5,r3
 8010540:	80027c00 	call	80027c0 <__mulsi3>
 8010544:	d9800017 	ldw	r6,0(sp)
 8010548:	b809883a 	mov	r4,r23
 801054c:	d8800115 	stw	r2,4(sp)
 8010550:	300b883a 	mov	r5,r6
 8010554:	302f883a 	mov	r23,r6
 8010558:	80027c00 	call	80027c0 <__mulsi3>
 801055c:	e009883a 	mov	r4,fp
 8010560:	b80b883a 	mov	r5,r23
 8010564:	d8800015 	stw	r2,0(sp)
 8010568:	80027c00 	call	80027c0 <__mulsi3>
 801056c:	d8c00117 	ldw	r3,4(sp)
 8010570:	880cd43a 	srli	r6,r17,16
 8010574:	d9c00017 	ldw	r7,0(sp)
 8010578:	1885883a 	add	r2,r3,r2
 801057c:	118d883a 	add	r6,r2,r6
 8010580:	30c0022e 	bgeu	r6,r3,801058c <__umoddi3+0x470>
 8010584:	00800074 	movhi	r2,1
 8010588:	388f883a 	add	r7,r7,r2
 801058c:	3006d43a 	srli	r3,r6,16
 8010590:	300c943a 	slli	r6,r6,16
 8010594:	8c7fffcc 	andi	r17,r17,65535
 8010598:	38c7883a 	add	r3,r7,r3
 801059c:	3463883a 	add	r17,r6,r17
 80105a0:	90c03d36 	bltu	r18,r3,8010698 <__umoddi3+0x57c>
 80105a4:	90c06026 	beq	r18,r3,8010728 <__umoddi3+0x60c>
 80105a8:	90c9c83a 	sub	r4,r18,r3
 80105ac:	880f883a 	mov	r7,r17
 80105b0:	81cfc83a 	sub	r7,r16,r7
 80105b4:	81c7803a 	cmpltu	r3,r16,r7
 80105b8:	20c7c83a 	sub	r3,r4,r3
 80105bc:	1d44983a 	sll	r2,r3,r21
 80105c0:	3d0ed83a 	srl	r7,r7,r20
 80105c4:	1d06d83a 	srl	r3,r3,r20
 80105c8:	11c4b03a 	or	r2,r2,r7
 80105cc:	003f7a06 	br	80103b8 <__alt_data_end+0xfc0103b8>
 80105d0:	0025883a 	mov	r18,zero
 80105d4:	003ef806 	br	80101b8 <__alt_data_end+0xfc0101b8>
 80105d8:	98a6983a 	sll	r19,r19,r2
 80105dc:	88e8d83a 	srl	r20,r17,r3
 80105e0:	80c6d83a 	srl	r3,r16,r3
 80105e4:	982ad43a 	srli	r21,r19,16
 80105e8:	88a2983a 	sll	r17,r17,r2
 80105ec:	a009883a 	mov	r4,r20
 80105f0:	a80b883a 	mov	r5,r21
 80105f4:	88eeb03a 	or	r23,r17,r3
 80105f8:	1025883a 	mov	r18,r2
 80105fc:	801085c0 	call	801085c <__umodsi3>
 8010600:	a009883a 	mov	r4,r20
 8010604:	a80b883a 	mov	r5,r21
 8010608:	1023883a 	mov	r17,r2
 801060c:	9dbfffcc 	andi	r22,r19,65535
 8010610:	80108540 	call	8010854 <__udivsi3>
 8010614:	1009883a 	mov	r4,r2
 8010618:	b00b883a 	mov	r5,r22
 801061c:	80027c00 	call	80027c0 <__mulsi3>
 8010620:	8822943a 	slli	r17,r17,16
 8010624:	b808d43a 	srli	r4,r23,16
 8010628:	84a8983a 	sll	r20,r16,r18
 801062c:	8906b03a 	or	r3,r17,r4
 8010630:	1880042e 	bgeu	r3,r2,8010644 <__umoddi3+0x528>
 8010634:	1cc7883a 	add	r3,r3,r19
 8010638:	1cc00236 	bltu	r3,r19,8010644 <__umoddi3+0x528>
 801063c:	1880012e 	bgeu	r3,r2,8010644 <__umoddi3+0x528>
 8010640:	1cc7883a 	add	r3,r3,r19
 8010644:	18a1c83a 	sub	r16,r3,r2
 8010648:	8009883a 	mov	r4,r16
 801064c:	a80b883a 	mov	r5,r21
 8010650:	801085c0 	call	801085c <__umodsi3>
 8010654:	8009883a 	mov	r4,r16
 8010658:	a80b883a 	mov	r5,r21
 801065c:	1039883a 	mov	fp,r2
 8010660:	80108540 	call	8010854 <__udivsi3>
 8010664:	1009883a 	mov	r4,r2
 8010668:	b00b883a 	mov	r5,r22
 801066c:	80027c00 	call	80027c0 <__mulsi3>
 8010670:	e006943a 	slli	r3,fp,16
 8010674:	b93fffcc 	andi	r4,r23,65535
 8010678:	1906b03a 	or	r3,r3,r4
 801067c:	1880042e 	bgeu	r3,r2,8010690 <__umoddi3+0x574>
 8010680:	1cc7883a 	add	r3,r3,r19
 8010684:	1cc00236 	bltu	r3,r19,8010690 <__umoddi3+0x574>
 8010688:	1880012e 	bgeu	r3,r2,8010690 <__umoddi3+0x574>
 801068c:	1cc7883a 	add	r3,r3,r19
 8010690:	18a3c83a 	sub	r17,r3,r2
 8010694:	003f1e06 	br	8010310 <__alt_data_end+0xfc010310>
 8010698:	8ccfc83a 	sub	r7,r17,r19
 801069c:	1d89c83a 	sub	r4,r3,r22
 80106a0:	89e3803a 	cmpltu	r17,r17,r7
 80106a4:	2463c83a 	sub	r17,r4,r17
 80106a8:	9449c83a 	sub	r4,r18,r17
 80106ac:	003fc006 	br	80105b0 <__alt_data_end+0xfc0105b0>
 80106b0:	000b883a 	mov	r5,zero
 80106b4:	002b883a 	mov	r21,zero
 80106b8:	003eeb06 	br	8010268 <__alt_data_end+0xfc010268>
 80106bc:	01400404 	movi	r5,16
 80106c0:	282b883a 	mov	r21,r5
 80106c4:	003ee806 	br	8010268 <__alt_data_end+0xfc010268>
 80106c8:	01400404 	movi	r5,16
 80106cc:	2805883a 	mov	r2,r5
 80106d0:	003eaa06 	br	801017c <__alt_data_end+0xfc01017c>
 80106d4:	0005883a 	mov	r2,zero
 80106d8:	0007883a 	mov	r3,zero
 80106dc:	003eff06 	br	80102dc <__alt_data_end+0xfc0102dc>
 80106e0:	00800404 	movi	r2,16
 80106e4:	1007883a 	mov	r3,r2
 80106e8:	003efc06 	br	80102dc <__alt_data_end+0xfc0102dc>
 80106ec:	000b883a 	mov	r5,zero
 80106f0:	0005883a 	mov	r2,zero
 80106f4:	003ea106 	br	801017c <__alt_data_end+0xfc01017c>
 80106f8:	90bf802e 	bgeu	r18,r2,80104fc <__alt_data_end+0xfc0104fc>
 80106fc:	bdffff84 	addi	r23,r23,-2
 8010700:	95a5883a 	add	r18,r18,r22
 8010704:	003f7e06 	br	8010500 <__alt_data_end+0xfc010500>
 8010708:	18bf652e 	bgeu	r3,r2,80104a0 <__alt_data_end+0xfc0104a0>
 801070c:	e73fff84 	addi	fp,fp,-2
 8010710:	1d87883a 	add	r3,r3,r22
 8010714:	003f6306 	br	80104a4 <__alt_data_end+0xfc0104a4>
 8010718:	1cc7883a 	add	r3,r3,r19
 801071c:	003f0d06 	br	8010354 <__alt_data_end+0xfc010354>
 8010720:	8005883a 	mov	r2,r16
 8010724:	003edf06 	br	80102a4 <__alt_data_end+0xfc0102a4>
 8010728:	847fdb36 	bltu	r16,r17,8010698 <__alt_data_end+0xfc010698>
 801072c:	880f883a 	mov	r7,r17
 8010730:	0009883a 	mov	r4,zero
 8010734:	003f9e06 	br	80105b0 <__alt_data_end+0xfc0105b0>

08010738 <udivmodsi4>:
 8010738:	2900182e 	bgeu	r5,r4,801079c <udivmodsi4+0x64>
 801073c:	28001716 	blt	r5,zero,801079c <udivmodsi4+0x64>
 8010740:	00800804 	movi	r2,32
 8010744:	00c00044 	movi	r3,1
 8010748:	00000206 	br	8010754 <udivmodsi4+0x1c>
 801074c:	10001126 	beq	r2,zero,8010794 <udivmodsi4+0x5c>
 8010750:	28000516 	blt	r5,zero,8010768 <udivmodsi4+0x30>
 8010754:	294b883a 	add	r5,r5,r5
 8010758:	10bfffc4 	addi	r2,r2,-1
 801075c:	18c7883a 	add	r3,r3,r3
 8010760:	293ffa36 	bltu	r5,r4,801074c <__alt_data_end+0xfc01074c>
 8010764:	18000b26 	beq	r3,zero,8010794 <udivmodsi4+0x5c>
 8010768:	0005883a 	mov	r2,zero
 801076c:	21400236 	bltu	r4,r5,8010778 <udivmodsi4+0x40>
 8010770:	2149c83a 	sub	r4,r4,r5
 8010774:	10c4b03a 	or	r2,r2,r3
 8010778:	1806d07a 	srli	r3,r3,1
 801077c:	280ad07a 	srli	r5,r5,1
 8010780:	183ffa1e 	bne	r3,zero,801076c <__alt_data_end+0xfc01076c>
 8010784:	3000011e 	bne	r6,zero,801078c <udivmodsi4+0x54>
 8010788:	f800283a 	ret
 801078c:	2005883a 	mov	r2,r4
 8010790:	f800283a 	ret
 8010794:	0005883a 	mov	r2,zero
 8010798:	003ffa06 	br	8010784 <__alt_data_end+0xfc010784>
 801079c:	00c00044 	movi	r3,1
 80107a0:	003ff106 	br	8010768 <__alt_data_end+0xfc010768>

080107a4 <__divsi3>:
 80107a4:	defffe04 	addi	sp,sp,-8
 80107a8:	dfc00115 	stw	ra,4(sp)
 80107ac:	dc000015 	stw	r16,0(sp)
 80107b0:	20000b16 	blt	r4,zero,80107e0 <__divsi3+0x3c>
 80107b4:	0021883a 	mov	r16,zero
 80107b8:	28000c16 	blt	r5,zero,80107ec <__divsi3+0x48>
 80107bc:	000d883a 	mov	r6,zero
 80107c0:	80107380 	call	8010738 <udivmodsi4>
 80107c4:	0407c83a 	sub	r3,zero,r16
 80107c8:	1884f03a 	xor	r2,r3,r2
 80107cc:	1405883a 	add	r2,r2,r16
 80107d0:	dfc00117 	ldw	ra,4(sp)
 80107d4:	dc000017 	ldw	r16,0(sp)
 80107d8:	dec00204 	addi	sp,sp,8
 80107dc:	f800283a 	ret
 80107e0:	0109c83a 	sub	r4,zero,r4
 80107e4:	04000044 	movi	r16,1
 80107e8:	283ff40e 	bge	r5,zero,80107bc <__alt_data_end+0xfc0107bc>
 80107ec:	014bc83a 	sub	r5,zero,r5
 80107f0:	8400005c 	xori	r16,r16,1
 80107f4:	003ff106 	br	80107bc <__alt_data_end+0xfc0107bc>

080107f8 <__modsi3>:
 80107f8:	defffd04 	addi	sp,sp,-12
 80107fc:	dfc00215 	stw	ra,8(sp)
 8010800:	dc400115 	stw	r17,4(sp)
 8010804:	dc000015 	stw	r16,0(sp)
 8010808:	20000c16 	blt	r4,zero,801083c <__modsi3+0x44>
 801080c:	0023883a 	mov	r17,zero
 8010810:	0021883a 	mov	r16,zero
 8010814:	28000d16 	blt	r5,zero,801084c <__modsi3+0x54>
 8010818:	01800044 	movi	r6,1
 801081c:	80107380 	call	8010738 <udivmodsi4>
 8010820:	1404f03a 	xor	r2,r2,r16
 8010824:	8885883a 	add	r2,r17,r2
 8010828:	dfc00217 	ldw	ra,8(sp)
 801082c:	dc400117 	ldw	r17,4(sp)
 8010830:	dc000017 	ldw	r16,0(sp)
 8010834:	dec00304 	addi	sp,sp,12
 8010838:	f800283a 	ret
 801083c:	0109c83a 	sub	r4,zero,r4
 8010840:	04400044 	movi	r17,1
 8010844:	043fffc4 	movi	r16,-1
 8010848:	283ff30e 	bge	r5,zero,8010818 <__alt_data_end+0xfc010818>
 801084c:	014bc83a 	sub	r5,zero,r5
 8010850:	003ff106 	br	8010818 <__alt_data_end+0xfc010818>

08010854 <__udivsi3>:
 8010854:	000d883a 	mov	r6,zero
 8010858:	80107381 	jmpi	8010738 <udivmodsi4>

0801085c <__umodsi3>:
 801085c:	01800044 	movi	r6,1
 8010860:	80107381 	jmpi	8010738 <udivmodsi4>

08010864 <__adddf3>:
 8010864:	02000434 	movhi	r8,16
 8010868:	423fffc4 	addi	r8,r8,-1
 801086c:	defffb04 	addi	sp,sp,-20
 8010870:	2a12703a 	and	r9,r5,r8
 8010874:	2806d7fa 	srli	r3,r5,31
 8010878:	3a10703a 	and	r8,r7,r8
 801087c:	3804d53a 	srli	r2,r7,20
 8010880:	3014d77a 	srli	r10,r6,29
 8010884:	dc000015 	stw	r16,0(sp)
 8010888:	481290fa 	slli	r9,r9,3
 801088c:	2820d53a 	srli	r16,r5,20
 8010890:	401090fa 	slli	r8,r8,3
 8010894:	200ad77a 	srli	r5,r4,29
 8010898:	380ed7fa 	srli	r7,r7,31
 801089c:	dc800215 	stw	r18,8(sp)
 80108a0:	dc400115 	stw	r17,4(sp)
 80108a4:	dfc00415 	stw	ra,16(sp)
 80108a8:	dcc00315 	stw	r19,12(sp)
 80108ac:	1c803fcc 	andi	r18,r3,255
 80108b0:	8401ffcc 	andi	r16,r16,2047
 80108b4:	494ab03a 	or	r5,r9,r5
 80108b8:	202290fa 	slli	r17,r4,3
 80108bc:	1081ffcc 	andi	r2,r2,2047
 80108c0:	4290b03a 	or	r8,r8,r10
 80108c4:	300c90fa 	slli	r6,r6,3
 80108c8:	91c07026 	beq	r18,r7,8010a8c <__adddf3+0x228>
 80108cc:	8087c83a 	sub	r3,r16,r2
 80108d0:	00c0b30e 	bge	zero,r3,8010ba0 <__adddf3+0x33c>
 80108d4:	10002a1e 	bne	r2,zero,8010980 <__adddf3+0x11c>
 80108d8:	4184b03a 	or	r2,r8,r6
 80108dc:	1000991e 	bne	r2,zero,8010b44 <__adddf3+0x2e0>
 80108e0:	888001cc 	andi	r2,r17,7
 80108e4:	10005b26 	beq	r2,zero,8010a54 <__adddf3+0x1f0>
 80108e8:	88c003cc 	andi	r3,r17,15
 80108ec:	00800104 	movi	r2,4
 80108f0:	18805826 	beq	r3,r2,8010a54 <__adddf3+0x1f0>
 80108f4:	89800104 	addi	r6,r17,4
 80108f8:	3463803a 	cmpltu	r17,r6,r17
 80108fc:	2c4b883a 	add	r5,r5,r17
 8010900:	2880202c 	andhi	r2,r5,128
 8010904:	9007883a 	mov	r3,r18
 8010908:	3023883a 	mov	r17,r6
 801090c:	10005426 	beq	r2,zero,8010a60 <__adddf3+0x1fc>
 8010910:	84000044 	addi	r16,r16,1
 8010914:	0081ffc4 	movi	r2,2047
 8010918:	8080c126 	beq	r16,r2,8010c20 <__adddf3+0x3bc>
 801091c:	013fe034 	movhi	r4,65408
 8010920:	213fffc4 	addi	r4,r4,-1
 8010924:	290a703a 	and	r5,r5,r4
 8010928:	2804977a 	slli	r2,r5,29
 801092c:	280a927a 	slli	r5,r5,9
 8010930:	8822d0fa 	srli	r17,r17,3
 8010934:	8401ffcc 	andi	r16,r16,2047
 8010938:	2808d33a 	srli	r4,r5,12
 801093c:	1444b03a 	or	r2,r2,r17
 8010940:	8401ffcc 	andi	r16,r16,2047
 8010944:	800a953a 	slli	r5,r16,20
 8010948:	18c03fcc 	andi	r3,r3,255
 801094c:	04000434 	movhi	r16,16
 8010950:	180697fa 	slli	r3,r3,31
 8010954:	843fffc4 	addi	r16,r16,-1
 8010958:	2420703a 	and	r16,r4,r16
 801095c:	8160b03a 	or	r16,r16,r5
 8010960:	80c6b03a 	or	r3,r16,r3
 8010964:	dfc00417 	ldw	ra,16(sp)
 8010968:	dcc00317 	ldw	r19,12(sp)
 801096c:	dc800217 	ldw	r18,8(sp)
 8010970:	dc400117 	ldw	r17,4(sp)
 8010974:	dc000017 	ldw	r16,0(sp)
 8010978:	dec00504 	addi	sp,sp,20
 801097c:	f800283a 	ret
 8010980:	0081ffc4 	movi	r2,2047
 8010984:	80bfd626 	beq	r16,r2,80108e0 <__alt_data_end+0xfc0108e0>
 8010988:	42002034 	orhi	r8,r8,128
 801098c:	00800e04 	movi	r2,56
 8010990:	10c0a616 	blt	r2,r3,8010c2c <__adddf3+0x3c8>
 8010994:	008007c4 	movi	r2,31
 8010998:	10c0c916 	blt	r2,r3,8010cc0 <__adddf3+0x45c>
 801099c:	00800804 	movi	r2,32
 80109a0:	10c5c83a 	sub	r2,r2,r3
 80109a4:	408e983a 	sll	r7,r8,r2
 80109a8:	30c8d83a 	srl	r4,r6,r3
 80109ac:	3084983a 	sll	r2,r6,r2
 80109b0:	40c6d83a 	srl	r3,r8,r3
 80109b4:	390cb03a 	or	r6,r7,r4
 80109b8:	1004c03a 	cmpne	r2,r2,zero
 80109bc:	308cb03a 	or	r6,r6,r2
 80109c0:	898dc83a 	sub	r6,r17,r6
 80109c4:	89a3803a 	cmpltu	r17,r17,r6
 80109c8:	28cbc83a 	sub	r5,r5,r3
 80109cc:	2c4bc83a 	sub	r5,r5,r17
 80109d0:	3023883a 	mov	r17,r6
 80109d4:	2880202c 	andhi	r2,r5,128
 80109d8:	10006d26 	beq	r2,zero,8010b90 <__adddf3+0x32c>
 80109dc:	04c02034 	movhi	r19,128
 80109e0:	9cffffc4 	addi	r19,r19,-1
 80109e4:	2ce6703a 	and	r19,r5,r19
 80109e8:	98007e26 	beq	r19,zero,8010be4 <__adddf3+0x380>
 80109ec:	9809883a 	mov	r4,r19
 80109f0:	8012ffc0 	call	8012ffc <__clzsi2>
 80109f4:	10fffe04 	addi	r3,r2,-8
 80109f8:	010007c4 	movi	r4,31
 80109fc:	20c07f16 	blt	r4,r3,8010bfc <__adddf3+0x398>
 8010a00:	01400a04 	movi	r5,40
 8010a04:	2885c83a 	sub	r2,r5,r2
 8010a08:	888ad83a 	srl	r5,r17,r2
 8010a0c:	98e6983a 	sll	r19,r19,r3
 8010a10:	88e2983a 	sll	r17,r17,r3
 8010a14:	2ce6b03a 	or	r19,r5,r19
 8010a18:	1c007c16 	blt	r3,r16,8010c0c <__adddf3+0x3a8>
 8010a1c:	1c21c83a 	sub	r16,r3,r16
 8010a20:	81400044 	addi	r5,r16,1
 8010a24:	00c007c4 	movi	r3,31
 8010a28:	19409816 	blt	r3,r5,8010c8c <__adddf3+0x428>
 8010a2c:	1c21c83a 	sub	r16,r3,r16
 8010a30:	8c08983a 	sll	r4,r17,r16
 8010a34:	8946d83a 	srl	r3,r17,r5
 8010a38:	9c20983a 	sll	r16,r19,r16
 8010a3c:	2008c03a 	cmpne	r4,r4,zero
 8010a40:	994ad83a 	srl	r5,r19,r5
 8010a44:	1c06b03a 	or	r3,r3,r16
 8010a48:	1922b03a 	or	r17,r3,r4
 8010a4c:	0021883a 	mov	r16,zero
 8010a50:	003fa306 	br	80108e0 <__alt_data_end+0xfc0108e0>
 8010a54:	2880202c 	andhi	r2,r5,128
 8010a58:	9007883a 	mov	r3,r18
 8010a5c:	103fac1e 	bne	r2,zero,8010910 <__alt_data_end+0xfc010910>
 8010a60:	2804977a 	slli	r2,r5,29
 8010a64:	8822d0fa 	srli	r17,r17,3
 8010a68:	0101ffc4 	movi	r4,2047
 8010a6c:	280ad0fa 	srli	r5,r5,3
 8010a70:	1444b03a 	or	r2,r2,r17
 8010a74:	81002c26 	beq	r16,r4,8010b28 <__adddf3+0x2c4>
 8010a78:	8120703a 	and	r16,r16,r4
 8010a7c:	01000434 	movhi	r4,16
 8010a80:	213fffc4 	addi	r4,r4,-1
 8010a84:	2908703a 	and	r4,r5,r4
 8010a88:	003fad06 	br	8010940 <__alt_data_end+0xfc010940>
 8010a8c:	8089c83a 	sub	r4,r16,r2
 8010a90:	01006a0e 	bge	zero,r4,8010c3c <__adddf3+0x3d8>
 8010a94:	10003326 	beq	r2,zero,8010b64 <__adddf3+0x300>
 8010a98:	0081ffc4 	movi	r2,2047
 8010a9c:	80bf9026 	beq	r16,r2,80108e0 <__alt_data_end+0xfc0108e0>
 8010aa0:	42002034 	orhi	r8,r8,128
 8010aa4:	00800e04 	movi	r2,56
 8010aa8:	1100b116 	blt	r2,r4,8010d70 <__adddf3+0x50c>
 8010aac:	008007c4 	movi	r2,31
 8010ab0:	1100e216 	blt	r2,r4,8010e3c <__adddf3+0x5d8>
 8010ab4:	00800804 	movi	r2,32
 8010ab8:	1105c83a 	sub	r2,r2,r4
 8010abc:	4092983a 	sll	r9,r8,r2
 8010ac0:	310ed83a 	srl	r7,r6,r4
 8010ac4:	3084983a 	sll	r2,r6,r2
 8010ac8:	4110d83a 	srl	r8,r8,r4
 8010acc:	49ccb03a 	or	r6,r9,r7
 8010ad0:	1004c03a 	cmpne	r2,r2,zero
 8010ad4:	308cb03a 	or	r6,r6,r2
 8010ad8:	344d883a 	add	r6,r6,r17
 8010adc:	3463803a 	cmpltu	r17,r6,r17
 8010ae0:	414b883a 	add	r5,r8,r5
 8010ae4:	2c4b883a 	add	r5,r5,r17
 8010ae8:	3023883a 	mov	r17,r6
 8010aec:	2880202c 	andhi	r2,r5,128
 8010af0:	10002726 	beq	r2,zero,8010b90 <__adddf3+0x32c>
 8010af4:	84000044 	addi	r16,r16,1
 8010af8:	0081ffc4 	movi	r2,2047
 8010afc:	8080ae26 	beq	r16,r2,8010db8 <__adddf3+0x554>
 8010b00:	00bfe034 	movhi	r2,65408
 8010b04:	10bfffc4 	addi	r2,r2,-1
 8010b08:	288a703a 	and	r5,r5,r2
 8010b0c:	880cd07a 	srli	r6,r17,1
 8010b10:	280897fa 	slli	r4,r5,31
 8010b14:	88c0004c 	andi	r3,r17,1
 8010b18:	30e2b03a 	or	r17,r6,r3
 8010b1c:	280ad07a 	srli	r5,r5,1
 8010b20:	8922b03a 	or	r17,r17,r4
 8010b24:	003f6e06 	br	80108e0 <__alt_data_end+0xfc0108e0>
 8010b28:	1148b03a 	or	r4,r2,r5
 8010b2c:	20003c26 	beq	r4,zero,8010c20 <__adddf3+0x3bc>
 8010b30:	29000234 	orhi	r4,r5,8
 8010b34:	01400434 	movhi	r5,16
 8010b38:	297fffc4 	addi	r5,r5,-1
 8010b3c:	2148703a 	and	r4,r4,r5
 8010b40:	003f7f06 	br	8010940 <__alt_data_end+0xfc010940>
 8010b44:	18ffffc4 	addi	r3,r3,-1
 8010b48:	18004d1e 	bne	r3,zero,8010c80 <__adddf3+0x41c>
 8010b4c:	898dc83a 	sub	r6,r17,r6
 8010b50:	89a3803a 	cmpltu	r17,r17,r6
 8010b54:	2a0bc83a 	sub	r5,r5,r8
 8010b58:	2c4bc83a 	sub	r5,r5,r17
 8010b5c:	3023883a 	mov	r17,r6
 8010b60:	003f9c06 	br	80109d4 <__alt_data_end+0xfc0109d4>
 8010b64:	4184b03a 	or	r2,r8,r6
 8010b68:	103f5d26 	beq	r2,zero,80108e0 <__alt_data_end+0xfc0108e0>
 8010b6c:	213fffc4 	addi	r4,r4,-1
 8010b70:	203fd926 	beq	r4,zero,8010ad8 <__alt_data_end+0xfc010ad8>
 8010b74:	0081ffc4 	movi	r2,2047
 8010b78:	80bfca1e 	bne	r16,r2,8010aa4 <__alt_data_end+0xfc010aa4>
 8010b7c:	003f5806 	br	80108e0 <__alt_data_end+0xfc0108e0>
 8010b80:	10c8b03a 	or	r4,r2,r3
 8010b84:	20008b26 	beq	r4,zero,8010db4 <__adddf3+0x550>
 8010b88:	100b883a 	mov	r5,r2
 8010b8c:	1823883a 	mov	r17,r3
 8010b90:	888001cc 	andi	r2,r17,7
 8010b94:	103f541e 	bne	r2,zero,80108e8 <__alt_data_end+0xfc0108e8>
 8010b98:	9007883a 	mov	r3,r18
 8010b9c:	003fb006 	br	8010a60 <__alt_data_end+0xfc010a60>
 8010ba0:	1800531e 	bne	r3,zero,8010cf0 <__adddf3+0x48c>
 8010ba4:	80800044 	addi	r2,r16,1
 8010ba8:	1081ffcc 	andi	r2,r2,2047
 8010bac:	00c00044 	movi	r3,1
 8010bb0:	1880990e 	bge	r3,r2,8010e18 <__adddf3+0x5b4>
 8010bb4:	8985c83a 	sub	r2,r17,r6
 8010bb8:	8887803a 	cmpltu	r3,r17,r2
 8010bbc:	2a27c83a 	sub	r19,r5,r8
 8010bc0:	98e7c83a 	sub	r19,r19,r3
 8010bc4:	98c0202c 	andhi	r3,r19,128
 8010bc8:	18006226 	beq	r3,zero,8010d54 <__adddf3+0x4f0>
 8010bcc:	3463c83a 	sub	r17,r6,r17
 8010bd0:	4151c83a 	sub	r8,r8,r5
 8010bd4:	344d803a 	cmpltu	r6,r6,r17
 8010bd8:	41a7c83a 	sub	r19,r8,r6
 8010bdc:	3825883a 	mov	r18,r7
 8010be0:	983f821e 	bne	r19,zero,80109ec <__alt_data_end+0xfc0109ec>
 8010be4:	8809883a 	mov	r4,r17
 8010be8:	8012ffc0 	call	8012ffc <__clzsi2>
 8010bec:	10800804 	addi	r2,r2,32
 8010bf0:	10fffe04 	addi	r3,r2,-8
 8010bf4:	010007c4 	movi	r4,31
 8010bf8:	20ff810e 	bge	r4,r3,8010a00 <__alt_data_end+0xfc010a00>
 8010bfc:	14fff604 	addi	r19,r2,-40
 8010c00:	8ce6983a 	sll	r19,r17,r19
 8010c04:	0023883a 	mov	r17,zero
 8010c08:	1c3f840e 	bge	r3,r16,8010a1c <__alt_data_end+0xfc010a1c>
 8010c0c:	017fe034 	movhi	r5,65408
 8010c10:	297fffc4 	addi	r5,r5,-1
 8010c14:	80e1c83a 	sub	r16,r16,r3
 8010c18:	994a703a 	and	r5,r19,r5
 8010c1c:	003f3006 	br	80108e0 <__alt_data_end+0xfc0108e0>
 8010c20:	0009883a 	mov	r4,zero
 8010c24:	0005883a 	mov	r2,zero
 8010c28:	003f4506 	br	8010940 <__alt_data_end+0xfc010940>
 8010c2c:	418cb03a 	or	r6,r8,r6
 8010c30:	300cc03a 	cmpne	r6,r6,zero
 8010c34:	0007883a 	mov	r3,zero
 8010c38:	003f6106 	br	80109c0 <__alt_data_end+0xfc0109c0>
 8010c3c:	2000921e 	bne	r4,zero,8010e88 <__adddf3+0x624>
 8010c40:	80800044 	addi	r2,r16,1
 8010c44:	11c1ffcc 	andi	r7,r2,2047
 8010c48:	01000044 	movi	r4,1
 8010c4c:	21c0610e 	bge	r4,r7,8010dd4 <__adddf3+0x570>
 8010c50:	0101ffc4 	movi	r4,2047
 8010c54:	1100a326 	beq	r2,r4,8010ee4 <__adddf3+0x680>
 8010c58:	344d883a 	add	r6,r6,r17
 8010c5c:	3463803a 	cmpltu	r17,r6,r17
 8010c60:	414b883a 	add	r5,r8,r5
 8010c64:	2c4b883a 	add	r5,r5,r17
 8010c68:	282297fa 	slli	r17,r5,31
 8010c6c:	300cd07a 	srli	r6,r6,1
 8010c70:	280ad07a 	srli	r5,r5,1
 8010c74:	1021883a 	mov	r16,r2
 8010c78:	89a2b03a 	or	r17,r17,r6
 8010c7c:	003f1806 	br	80108e0 <__alt_data_end+0xfc0108e0>
 8010c80:	0081ffc4 	movi	r2,2047
 8010c84:	80bf411e 	bne	r16,r2,801098c <__alt_data_end+0xfc01098c>
 8010c88:	003f1506 	br	80108e0 <__alt_data_end+0xfc0108e0>
 8010c8c:	80bff844 	addi	r2,r16,-31
 8010c90:	00c00804 	movi	r3,32
 8010c94:	9884d83a 	srl	r2,r19,r2
 8010c98:	28c04a26 	beq	r5,r3,8010dc4 <__adddf3+0x560>
 8010c9c:	00c00fc4 	movi	r3,63
 8010ca0:	1c21c83a 	sub	r16,r3,r16
 8010ca4:	9c26983a 	sll	r19,r19,r16
 8010ca8:	9c62b03a 	or	r17,r19,r17
 8010cac:	8822c03a 	cmpne	r17,r17,zero
 8010cb0:	88a2b03a 	or	r17,r17,r2
 8010cb4:	000b883a 	mov	r5,zero
 8010cb8:	0021883a 	mov	r16,zero
 8010cbc:	003fb406 	br	8010b90 <__alt_data_end+0xfc010b90>
 8010cc0:	18bff804 	addi	r2,r3,-32
 8010cc4:	01000804 	movi	r4,32
 8010cc8:	4084d83a 	srl	r2,r8,r2
 8010ccc:	19003f26 	beq	r3,r4,8010dcc <__adddf3+0x568>
 8010cd0:	01001004 	movi	r4,64
 8010cd4:	20c7c83a 	sub	r3,r4,r3
 8010cd8:	40d0983a 	sll	r8,r8,r3
 8010cdc:	418cb03a 	or	r6,r8,r6
 8010ce0:	300cc03a 	cmpne	r6,r6,zero
 8010ce4:	308cb03a 	or	r6,r6,r2
 8010ce8:	0007883a 	mov	r3,zero
 8010cec:	003f3406 	br	80109c0 <__alt_data_end+0xfc0109c0>
 8010cf0:	80002326 	beq	r16,zero,8010d80 <__adddf3+0x51c>
 8010cf4:	0101ffc4 	movi	r4,2047
 8010cf8:	11005e26 	beq	r2,r4,8010e74 <__adddf3+0x610>
 8010cfc:	00c7c83a 	sub	r3,zero,r3
 8010d00:	29402034 	orhi	r5,r5,128
 8010d04:	01000e04 	movi	r4,56
 8010d08:	20c07216 	blt	r4,r3,8010ed4 <__adddf3+0x670>
 8010d0c:	010007c4 	movi	r4,31
 8010d10:	20c0ce16 	blt	r4,r3,801104c <__adddf3+0x7e8>
 8010d14:	01000804 	movi	r4,32
 8010d18:	20c9c83a 	sub	r4,r4,r3
 8010d1c:	2914983a 	sll	r10,r5,r4
 8010d20:	88d2d83a 	srl	r9,r17,r3
 8010d24:	8908983a 	sll	r4,r17,r4
 8010d28:	28c6d83a 	srl	r3,r5,r3
 8010d2c:	5262b03a 	or	r17,r10,r9
 8010d30:	2008c03a 	cmpne	r4,r4,zero
 8010d34:	8922b03a 	or	r17,r17,r4
 8010d38:	3463c83a 	sub	r17,r6,r17
 8010d3c:	40c7c83a 	sub	r3,r8,r3
 8010d40:	344d803a 	cmpltu	r6,r6,r17
 8010d44:	198bc83a 	sub	r5,r3,r6
 8010d48:	1021883a 	mov	r16,r2
 8010d4c:	3825883a 	mov	r18,r7
 8010d50:	003f2006 	br	80109d4 <__alt_data_end+0xfc0109d4>
 8010d54:	9886b03a 	or	r3,r19,r2
 8010d58:	1800141e 	bne	r3,zero,8010dac <__adddf3+0x548>
 8010d5c:	0007883a 	mov	r3,zero
 8010d60:	000b883a 	mov	r5,zero
 8010d64:	0023883a 	mov	r17,zero
 8010d68:	0021883a 	mov	r16,zero
 8010d6c:	003f3c06 	br	8010a60 <__alt_data_end+0xfc010a60>
 8010d70:	418cb03a 	or	r6,r8,r6
 8010d74:	300cc03a 	cmpne	r6,r6,zero
 8010d78:	0011883a 	mov	r8,zero
 8010d7c:	003f5606 	br	8010ad8 <__alt_data_end+0xfc010ad8>
 8010d80:	2c48b03a 	or	r4,r5,r17
 8010d84:	20003b26 	beq	r4,zero,8010e74 <__adddf3+0x610>
 8010d88:	00c6303a 	nor	r3,zero,r3
 8010d8c:	1800371e 	bne	r3,zero,8010e6c <__adddf3+0x608>
 8010d90:	3463c83a 	sub	r17,r6,r17
 8010d94:	414bc83a 	sub	r5,r8,r5
 8010d98:	344d803a 	cmpltu	r6,r6,r17
 8010d9c:	298bc83a 	sub	r5,r5,r6
 8010da0:	1021883a 	mov	r16,r2
 8010da4:	3825883a 	mov	r18,r7
 8010da8:	003f0a06 	br	80109d4 <__alt_data_end+0xfc0109d4>
 8010dac:	1023883a 	mov	r17,r2
 8010db0:	003f0d06 	br	80109e8 <__alt_data_end+0xfc0109e8>
 8010db4:	0007883a 	mov	r3,zero
 8010db8:	000b883a 	mov	r5,zero
 8010dbc:	0023883a 	mov	r17,zero
 8010dc0:	003f2706 	br	8010a60 <__alt_data_end+0xfc010a60>
 8010dc4:	0027883a 	mov	r19,zero
 8010dc8:	003fb706 	br	8010ca8 <__alt_data_end+0xfc010ca8>
 8010dcc:	0011883a 	mov	r8,zero
 8010dd0:	003fc206 	br	8010cdc <__alt_data_end+0xfc010cdc>
 8010dd4:	2c44b03a 	or	r2,r5,r17
 8010dd8:	8000871e 	bne	r16,zero,8010ff8 <__adddf3+0x794>
 8010ddc:	1000b126 	beq	r2,zero,80110a4 <__adddf3+0x840>
 8010de0:	4184b03a 	or	r2,r8,r6
 8010de4:	103ebe26 	beq	r2,zero,80108e0 <__alt_data_end+0xfc0108e0>
 8010de8:	3445883a 	add	r2,r6,r17
 8010dec:	1463803a 	cmpltu	r17,r2,r17
 8010df0:	414b883a 	add	r5,r8,r5
 8010df4:	2c4b883a 	add	r5,r5,r17
 8010df8:	28c0202c 	andhi	r3,r5,128
 8010dfc:	1023883a 	mov	r17,r2
 8010e00:	183f6326 	beq	r3,zero,8010b90 <__alt_data_end+0xfc010b90>
 8010e04:	00bfe034 	movhi	r2,65408
 8010e08:	10bfffc4 	addi	r2,r2,-1
 8010e0c:	2021883a 	mov	r16,r4
 8010e10:	288a703a 	and	r5,r5,r2
 8010e14:	003eb206 	br	80108e0 <__alt_data_end+0xfc0108e0>
 8010e18:	2c44b03a 	or	r2,r5,r17
 8010e1c:	8000251e 	bne	r16,zero,8010eb4 <__adddf3+0x650>
 8010e20:	10004b1e 	bne	r2,zero,8010f50 <__adddf3+0x6ec>
 8010e24:	4184b03a 	or	r2,r8,r6
 8010e28:	103fe226 	beq	r2,zero,8010db4 <__alt_data_end+0xfc010db4>
 8010e2c:	400b883a 	mov	r5,r8
 8010e30:	3023883a 	mov	r17,r6
 8010e34:	3825883a 	mov	r18,r7
 8010e38:	003ea906 	br	80108e0 <__alt_data_end+0xfc0108e0>
 8010e3c:	20bff804 	addi	r2,r4,-32
 8010e40:	01c00804 	movi	r7,32
 8010e44:	4084d83a 	srl	r2,r8,r2
 8010e48:	21c07e26 	beq	r4,r7,8011044 <__adddf3+0x7e0>
 8010e4c:	01c01004 	movi	r7,64
 8010e50:	3909c83a 	sub	r4,r7,r4
 8010e54:	4110983a 	sll	r8,r8,r4
 8010e58:	418cb03a 	or	r6,r8,r6
 8010e5c:	300cc03a 	cmpne	r6,r6,zero
 8010e60:	308cb03a 	or	r6,r6,r2
 8010e64:	0011883a 	mov	r8,zero
 8010e68:	003f1b06 	br	8010ad8 <__alt_data_end+0xfc010ad8>
 8010e6c:	0101ffc4 	movi	r4,2047
 8010e70:	113fa41e 	bne	r2,r4,8010d04 <__alt_data_end+0xfc010d04>
 8010e74:	400b883a 	mov	r5,r8
 8010e78:	3023883a 	mov	r17,r6
 8010e7c:	1021883a 	mov	r16,r2
 8010e80:	3825883a 	mov	r18,r7
 8010e84:	003e9606 	br	80108e0 <__alt_data_end+0xfc0108e0>
 8010e88:	80001a1e 	bne	r16,zero,8010ef4 <__adddf3+0x690>
 8010e8c:	2c4eb03a 	or	r7,r5,r17
 8010e90:	38005526 	beq	r7,zero,8010fe8 <__adddf3+0x784>
 8010e94:	0108303a 	nor	r4,zero,r4
 8010e98:	2000511e 	bne	r4,zero,8010fe0 <__adddf3+0x77c>
 8010e9c:	89a3883a 	add	r17,r17,r6
 8010ea0:	414b883a 	add	r5,r8,r5
 8010ea4:	898d803a 	cmpltu	r6,r17,r6
 8010ea8:	298b883a 	add	r5,r5,r6
 8010eac:	1021883a 	mov	r16,r2
 8010eb0:	003f0e06 	br	8010aec <__alt_data_end+0xfc010aec>
 8010eb4:	1000341e 	bne	r2,zero,8010f88 <__adddf3+0x724>
 8010eb8:	4184b03a 	or	r2,r8,r6
 8010ebc:	10006f26 	beq	r2,zero,801107c <__adddf3+0x818>
 8010ec0:	400b883a 	mov	r5,r8
 8010ec4:	3023883a 	mov	r17,r6
 8010ec8:	3825883a 	mov	r18,r7
 8010ecc:	0401ffc4 	movi	r16,2047
 8010ed0:	003e8306 	br	80108e0 <__alt_data_end+0xfc0108e0>
 8010ed4:	2c62b03a 	or	r17,r5,r17
 8010ed8:	8822c03a 	cmpne	r17,r17,zero
 8010edc:	0007883a 	mov	r3,zero
 8010ee0:	003f9506 	br	8010d38 <__alt_data_end+0xfc010d38>
 8010ee4:	1021883a 	mov	r16,r2
 8010ee8:	000b883a 	mov	r5,zero
 8010eec:	0023883a 	mov	r17,zero
 8010ef0:	003edb06 	br	8010a60 <__alt_data_end+0xfc010a60>
 8010ef4:	01c1ffc4 	movi	r7,2047
 8010ef8:	11c03b26 	beq	r2,r7,8010fe8 <__adddf3+0x784>
 8010efc:	0109c83a 	sub	r4,zero,r4
 8010f00:	29402034 	orhi	r5,r5,128
 8010f04:	01c00e04 	movi	r7,56
 8010f08:	39006216 	blt	r7,r4,8011094 <__adddf3+0x830>
 8010f0c:	01c007c4 	movi	r7,31
 8010f10:	39006b16 	blt	r7,r4,80110c0 <__adddf3+0x85c>
 8010f14:	01c00804 	movi	r7,32
 8010f18:	390fc83a 	sub	r7,r7,r4
 8010f1c:	29d4983a 	sll	r10,r5,r7
 8010f20:	8912d83a 	srl	r9,r17,r4
 8010f24:	89ce983a 	sll	r7,r17,r7
 8010f28:	2908d83a 	srl	r4,r5,r4
 8010f2c:	5262b03a 	or	r17,r10,r9
 8010f30:	380ac03a 	cmpne	r5,r7,zero
 8010f34:	8962b03a 	or	r17,r17,r5
 8010f38:	89a3883a 	add	r17,r17,r6
 8010f3c:	2211883a 	add	r8,r4,r8
 8010f40:	898d803a 	cmpltu	r6,r17,r6
 8010f44:	418b883a 	add	r5,r8,r6
 8010f48:	1021883a 	mov	r16,r2
 8010f4c:	003ee706 	br	8010aec <__alt_data_end+0xfc010aec>
 8010f50:	4184b03a 	or	r2,r8,r6
 8010f54:	103e6226 	beq	r2,zero,80108e0 <__alt_data_end+0xfc0108e0>
 8010f58:	8987c83a 	sub	r3,r17,r6
 8010f5c:	88c9803a 	cmpltu	r4,r17,r3
 8010f60:	2a05c83a 	sub	r2,r5,r8
 8010f64:	1105c83a 	sub	r2,r2,r4
 8010f68:	1100202c 	andhi	r4,r2,128
 8010f6c:	203f0426 	beq	r4,zero,8010b80 <__alt_data_end+0xfc010b80>
 8010f70:	3463c83a 	sub	r17,r6,r17
 8010f74:	414bc83a 	sub	r5,r8,r5
 8010f78:	344d803a 	cmpltu	r6,r6,r17
 8010f7c:	298bc83a 	sub	r5,r5,r6
 8010f80:	3825883a 	mov	r18,r7
 8010f84:	003e5606 	br	80108e0 <__alt_data_end+0xfc0108e0>
 8010f88:	4184b03a 	or	r2,r8,r6
 8010f8c:	10002b26 	beq	r2,zero,801103c <__adddf3+0x7d8>
 8010f90:	2804d0fa 	srli	r2,r5,3
 8010f94:	8822d0fa 	srli	r17,r17,3
 8010f98:	280a977a 	slli	r5,r5,29
 8010f9c:	10c0022c 	andhi	r3,r2,8
 8010fa0:	2c62b03a 	or	r17,r5,r17
 8010fa4:	18000826 	beq	r3,zero,8010fc8 <__adddf3+0x764>
 8010fa8:	4008d0fa 	srli	r4,r8,3
 8010fac:	20c0022c 	andhi	r3,r4,8
 8010fb0:	1800051e 	bne	r3,zero,8010fc8 <__adddf3+0x764>
 8010fb4:	300cd0fa 	srli	r6,r6,3
 8010fb8:	4010977a 	slli	r8,r8,29
 8010fbc:	2005883a 	mov	r2,r4
 8010fc0:	3825883a 	mov	r18,r7
 8010fc4:	41a2b03a 	or	r17,r8,r6
 8010fc8:	880ad77a 	srli	r5,r17,29
 8010fcc:	100490fa 	slli	r2,r2,3
 8010fd0:	882290fa 	slli	r17,r17,3
 8010fd4:	0401ffc4 	movi	r16,2047
 8010fd8:	288ab03a 	or	r5,r5,r2
 8010fdc:	003e4006 	br	80108e0 <__alt_data_end+0xfc0108e0>
 8010fe0:	01c1ffc4 	movi	r7,2047
 8010fe4:	11ffc71e 	bne	r2,r7,8010f04 <__alt_data_end+0xfc010f04>
 8010fe8:	400b883a 	mov	r5,r8
 8010fec:	3023883a 	mov	r17,r6
 8010ff0:	1021883a 	mov	r16,r2
 8010ff4:	003e3a06 	br	80108e0 <__alt_data_end+0xfc0108e0>
 8010ff8:	10002d26 	beq	r2,zero,80110b0 <__adddf3+0x84c>
 8010ffc:	4184b03a 	or	r2,r8,r6
 8011000:	10000e26 	beq	r2,zero,801103c <__adddf3+0x7d8>
 8011004:	2804d0fa 	srli	r2,r5,3
 8011008:	8822d0fa 	srli	r17,r17,3
 801100c:	280a977a 	slli	r5,r5,29
 8011010:	10c0022c 	andhi	r3,r2,8
 8011014:	2c62b03a 	or	r17,r5,r17
 8011018:	183feb26 	beq	r3,zero,8010fc8 <__alt_data_end+0xfc010fc8>
 801101c:	4008d0fa 	srli	r4,r8,3
 8011020:	20c0022c 	andhi	r3,r4,8
 8011024:	183fe81e 	bne	r3,zero,8010fc8 <__alt_data_end+0xfc010fc8>
 8011028:	300cd0fa 	srli	r6,r6,3
 801102c:	4010977a 	slli	r8,r8,29
 8011030:	2005883a 	mov	r2,r4
 8011034:	41a2b03a 	or	r17,r8,r6
 8011038:	003fe306 	br	8010fc8 <__alt_data_end+0xfc010fc8>
 801103c:	0401ffc4 	movi	r16,2047
 8011040:	003e2706 	br	80108e0 <__alt_data_end+0xfc0108e0>
 8011044:	0011883a 	mov	r8,zero
 8011048:	003f8306 	br	8010e58 <__alt_data_end+0xfc010e58>
 801104c:	193ff804 	addi	r4,r3,-32
 8011050:	02400804 	movi	r9,32
 8011054:	2908d83a 	srl	r4,r5,r4
 8011058:	1a402526 	beq	r3,r9,80110f0 <__adddf3+0x88c>
 801105c:	02401004 	movi	r9,64
 8011060:	48c7c83a 	sub	r3,r9,r3
 8011064:	28ca983a 	sll	r5,r5,r3
 8011068:	2c62b03a 	or	r17,r5,r17
 801106c:	8822c03a 	cmpne	r17,r17,zero
 8011070:	8922b03a 	or	r17,r17,r4
 8011074:	0007883a 	mov	r3,zero
 8011078:	003f2f06 	br	8010d38 <__alt_data_end+0xfc010d38>
 801107c:	01402034 	movhi	r5,128
 8011080:	0007883a 	mov	r3,zero
 8011084:	297fffc4 	addi	r5,r5,-1
 8011088:	047ffe04 	movi	r17,-8
 801108c:	0401ffc4 	movi	r16,2047
 8011090:	003e7306 	br	8010a60 <__alt_data_end+0xfc010a60>
 8011094:	2c62b03a 	or	r17,r5,r17
 8011098:	8822c03a 	cmpne	r17,r17,zero
 801109c:	0009883a 	mov	r4,zero
 80110a0:	003fa506 	br	8010f38 <__alt_data_end+0xfc010f38>
 80110a4:	400b883a 	mov	r5,r8
 80110a8:	3023883a 	mov	r17,r6
 80110ac:	003e0c06 	br	80108e0 <__alt_data_end+0xfc0108e0>
 80110b0:	400b883a 	mov	r5,r8
 80110b4:	3023883a 	mov	r17,r6
 80110b8:	0401ffc4 	movi	r16,2047
 80110bc:	003e0806 	br	80108e0 <__alt_data_end+0xfc0108e0>
 80110c0:	21fff804 	addi	r7,r4,-32
 80110c4:	02400804 	movi	r9,32
 80110c8:	29ced83a 	srl	r7,r5,r7
 80110cc:	22400a26 	beq	r4,r9,80110f8 <__adddf3+0x894>
 80110d0:	02401004 	movi	r9,64
 80110d4:	4909c83a 	sub	r4,r9,r4
 80110d8:	290a983a 	sll	r5,r5,r4
 80110dc:	2c62b03a 	or	r17,r5,r17
 80110e0:	8822c03a 	cmpne	r17,r17,zero
 80110e4:	89e2b03a 	or	r17,r17,r7
 80110e8:	0009883a 	mov	r4,zero
 80110ec:	003f9206 	br	8010f38 <__alt_data_end+0xfc010f38>
 80110f0:	000b883a 	mov	r5,zero
 80110f4:	003fdc06 	br	8011068 <__alt_data_end+0xfc011068>
 80110f8:	000b883a 	mov	r5,zero
 80110fc:	003ff706 	br	80110dc <__alt_data_end+0xfc0110dc>

08011100 <__divdf3>:
 8011100:	defff004 	addi	sp,sp,-64
 8011104:	dc800815 	stw	r18,32(sp)
 8011108:	2824d53a 	srli	r18,r5,20
 801110c:	dd800c15 	stw	r22,48(sp)
 8011110:	282cd7fa 	srli	r22,r5,31
 8011114:	dc000615 	stw	r16,24(sp)
 8011118:	04000434 	movhi	r16,16
 801111c:	df000e15 	stw	fp,56(sp)
 8011120:	dd000a15 	stw	r20,40(sp)
 8011124:	dcc00915 	stw	r19,36(sp)
 8011128:	dc400715 	stw	r17,28(sp)
 801112c:	843fffc4 	addi	r16,r16,-1
 8011130:	dfc00f15 	stw	ra,60(sp)
 8011134:	ddc00d15 	stw	r23,52(sp)
 8011138:	dd400b15 	stw	r21,44(sp)
 801113c:	9481ffcc 	andi	r18,r18,2047
 8011140:	2029883a 	mov	r20,r4
 8011144:	2027883a 	mov	r19,r4
 8011148:	2c22703a 	and	r17,r5,r16
 801114c:	b7003fcc 	andi	fp,r22,255
 8011150:	90005e26 	beq	r18,zero,80112cc <__divdf3+0x1cc>
 8011154:	0081ffc4 	movi	r2,2047
 8011158:	90803526 	beq	r18,r2,8011230 <__divdf3+0x130>
 801115c:	8c000434 	orhi	r16,r17,16
 8011160:	2004d77a 	srli	r2,r4,29
 8011164:	802090fa 	slli	r16,r16,3
 8011168:	202690fa 	slli	r19,r4,3
 801116c:	94bf0044 	addi	r18,r18,-1023
 8011170:	80a2b03a 	or	r17,r16,r2
 8011174:	0029883a 	mov	r20,zero
 8011178:	0011883a 	mov	r8,zero
 801117c:	380ad53a 	srli	r5,r7,20
 8011180:	382ed7fa 	srli	r23,r7,31
 8011184:	04000434 	movhi	r16,16
 8011188:	843fffc4 	addi	r16,r16,-1
 801118c:	2941ffcc 	andi	r5,r5,2047
 8011190:	302b883a 	mov	r21,r6
 8011194:	3c20703a 	and	r16,r7,r16
 8011198:	ba403fcc 	andi	r9,r23,255
 801119c:	28006726 	beq	r5,zero,801133c <__divdf3+0x23c>
 80111a0:	0081ffc4 	movi	r2,2047
 80111a4:	28805f26 	beq	r5,r2,8011324 <__divdf3+0x224>
 80111a8:	84000434 	orhi	r16,r16,16
 80111ac:	3004d77a 	srli	r2,r6,29
 80111b0:	802090fa 	slli	r16,r16,3
 80111b4:	302a90fa 	slli	r21,r6,3
 80111b8:	297f0044 	addi	r5,r5,-1023
 80111bc:	80a0b03a 	or	r16,r16,r2
 80111c0:	000f883a 	mov	r7,zero
 80111c4:	3d06b03a 	or	r3,r7,r20
 80111c8:	180690ba 	slli	r3,r3,2
 80111cc:	00820074 	movhi	r2,2049
 80111d0:	10847c04 	addi	r2,r2,4592
 80111d4:	1885883a 	add	r2,r3,r2
 80111d8:	10800017 	ldw	r2,0(r2)
 80111dc:	b5c8f03a 	xor	r4,r22,r23
 80111e0:	200d883a 	mov	r6,r4
 80111e4:	25003fcc 	andi	r20,r4,255
 80111e8:	9165c83a 	sub	r18,r18,r5
 80111ec:	1000683a 	jmp	r2
 80111f0:	08011438 	rdprs	zero,at,1104
 80111f4:	08011268 	cmpgeui	zero,at,1097
 80111f8:	080113fc 	xorhi	zero,at,1103
 80111fc:	0801124c 	andi	zero,at,1097
 8011200:	080113fc 	xorhi	zero,at,1103
 8011204:	080113d0 	cmplti	zero,at,1103
 8011208:	080113fc 	xorhi	zero,at,1103
 801120c:	0801124c 	andi	zero,at,1097
 8011210:	08011268 	cmpgeui	zero,at,1097
 8011214:	08011268 	cmpgeui	zero,at,1097
 8011218:	080113d0 	cmplti	zero,at,1103
 801121c:	0801124c 	andi	zero,at,1097
 8011220:	0801125c 	xori	zero,at,1097
 8011224:	0801125c 	xori	zero,at,1097
 8011228:	0801125c 	xori	zero,at,1097
 801122c:	0801140c 	andi	zero,at,1104
 8011230:	8904b03a 	or	r2,r17,r4
 8011234:	1000631e 	bne	r2,zero,80113c4 <__divdf3+0x2c4>
 8011238:	05000204 	movi	r20,8
 801123c:	0023883a 	mov	r17,zero
 8011240:	0027883a 	mov	r19,zero
 8011244:	02000084 	movi	r8,2
 8011248:	003fcc06 	br	801117c <__alt_data_end+0xfc01117c>
 801124c:	8023883a 	mov	r17,r16
 8011250:	a827883a 	mov	r19,r21
 8011254:	4839883a 	mov	fp,r9
 8011258:	3811883a 	mov	r8,r7
 801125c:	00800084 	movi	r2,2
 8011260:	4081531e 	bne	r8,r2,80117b0 <__divdf3+0x6b0>
 8011264:	e029883a 	mov	r20,fp
 8011268:	a180004c 	andi	r6,r20,1
 801126c:	0201ffc4 	movi	r8,2047
 8011270:	000b883a 	mov	r5,zero
 8011274:	0027883a 	mov	r19,zero
 8011278:	4010953a 	slli	r8,r8,20
 801127c:	30c03fcc 	andi	r3,r6,255
 8011280:	04000434 	movhi	r16,16
 8011284:	180697fa 	slli	r3,r3,31
 8011288:	843fffc4 	addi	r16,r16,-1
 801128c:	2c20703a 	and	r16,r5,r16
 8011290:	8220b03a 	or	r16,r16,r8
 8011294:	80c6b03a 	or	r3,r16,r3
 8011298:	9805883a 	mov	r2,r19
 801129c:	dfc00f17 	ldw	ra,60(sp)
 80112a0:	df000e17 	ldw	fp,56(sp)
 80112a4:	ddc00d17 	ldw	r23,52(sp)
 80112a8:	dd800c17 	ldw	r22,48(sp)
 80112ac:	dd400b17 	ldw	r21,44(sp)
 80112b0:	dd000a17 	ldw	r20,40(sp)
 80112b4:	dcc00917 	ldw	r19,36(sp)
 80112b8:	dc800817 	ldw	r18,32(sp)
 80112bc:	dc400717 	ldw	r17,28(sp)
 80112c0:	dc000617 	ldw	r16,24(sp)
 80112c4:	dec01004 	addi	sp,sp,64
 80112c8:	f800283a 	ret
 80112cc:	8904b03a 	or	r2,r17,r4
 80112d0:	10003726 	beq	r2,zero,80113b0 <__divdf3+0x2b0>
 80112d4:	88014d26 	beq	r17,zero,801180c <__divdf3+0x70c>
 80112d8:	8809883a 	mov	r4,r17
 80112dc:	d9800215 	stw	r6,8(sp)
 80112e0:	d9c00515 	stw	r7,20(sp)
 80112e4:	8012ffc0 	call	8012ffc <__clzsi2>
 80112e8:	d9800217 	ldw	r6,8(sp)
 80112ec:	d9c00517 	ldw	r7,20(sp)
 80112f0:	1007883a 	mov	r3,r2
 80112f4:	01000a04 	movi	r4,40
 80112f8:	1cfffe04 	addi	r19,r3,-8
 80112fc:	20c9c83a 	sub	r4,r4,r3
 8011300:	8cca983a 	sll	r5,r17,r19
 8011304:	a108d83a 	srl	r4,r20,r4
 8011308:	a4e6983a 	sll	r19,r20,r19
 801130c:	2162b03a 	or	r17,r4,r5
 8011310:	04bf0344 	movi	r18,-1011
 8011314:	90e5c83a 	sub	r18,r18,r3
 8011318:	0029883a 	mov	r20,zero
 801131c:	0011883a 	mov	r8,zero
 8011320:	003f9606 	br	801117c <__alt_data_end+0xfc01117c>
 8011324:	8184b03a 	or	r2,r16,r6
 8011328:	10001f1e 	bne	r2,zero,80113a8 <__divdf3+0x2a8>
 801132c:	0021883a 	mov	r16,zero
 8011330:	002b883a 	mov	r21,zero
 8011334:	01c00084 	movi	r7,2
 8011338:	003fa206 	br	80111c4 <__alt_data_end+0xfc0111c4>
 801133c:	8184b03a 	or	r2,r16,r6
 8011340:	10001526 	beq	r2,zero,8011398 <__divdf3+0x298>
 8011344:	80013d26 	beq	r16,zero,801183c <__divdf3+0x73c>
 8011348:	8009883a 	mov	r4,r16
 801134c:	d9800215 	stw	r6,8(sp)
 8011350:	da000315 	stw	r8,12(sp)
 8011354:	da400415 	stw	r9,16(sp)
 8011358:	8012ffc0 	call	8012ffc <__clzsi2>
 801135c:	d9800217 	ldw	r6,8(sp)
 8011360:	da000317 	ldw	r8,12(sp)
 8011364:	da400417 	ldw	r9,16(sp)
 8011368:	1007883a 	mov	r3,r2
 801136c:	01000a04 	movi	r4,40
 8011370:	1d7ffe04 	addi	r21,r3,-8
 8011374:	20c9c83a 	sub	r4,r4,r3
 8011378:	8560983a 	sll	r16,r16,r21
 801137c:	3108d83a 	srl	r4,r6,r4
 8011380:	356a983a 	sll	r21,r6,r21
 8011384:	2420b03a 	or	r16,r4,r16
 8011388:	017f0344 	movi	r5,-1011
 801138c:	28cbc83a 	sub	r5,r5,r3
 8011390:	000f883a 	mov	r7,zero
 8011394:	003f8b06 	br	80111c4 <__alt_data_end+0xfc0111c4>
 8011398:	0021883a 	mov	r16,zero
 801139c:	002b883a 	mov	r21,zero
 80113a0:	01c00044 	movi	r7,1
 80113a4:	003f8706 	br	80111c4 <__alt_data_end+0xfc0111c4>
 80113a8:	01c000c4 	movi	r7,3
 80113ac:	003f8506 	br	80111c4 <__alt_data_end+0xfc0111c4>
 80113b0:	05000104 	movi	r20,4
 80113b4:	0023883a 	mov	r17,zero
 80113b8:	0027883a 	mov	r19,zero
 80113bc:	02000044 	movi	r8,1
 80113c0:	003f6e06 	br	801117c <__alt_data_end+0xfc01117c>
 80113c4:	05000304 	movi	r20,12
 80113c8:	020000c4 	movi	r8,3
 80113cc:	003f6b06 	br	801117c <__alt_data_end+0xfc01117c>
 80113d0:	01400434 	movhi	r5,16
 80113d4:	000d883a 	mov	r6,zero
 80113d8:	297fffc4 	addi	r5,r5,-1
 80113dc:	04ffffc4 	movi	r19,-1
 80113e0:	0201ffc4 	movi	r8,2047
 80113e4:	003fa406 	br	8011278 <__alt_data_end+0xfc011278>
 80113e8:	043f0084 	movi	r16,-1022
 80113ec:	84a1c83a 	sub	r16,r16,r18
 80113f0:	00800e04 	movi	r2,56
 80113f4:	14014d0e 	bge	r2,r16,801192c <__divdf3+0x82c>
 80113f8:	a180004c 	andi	r6,r20,1
 80113fc:	0011883a 	mov	r8,zero
 8011400:	000b883a 	mov	r5,zero
 8011404:	0027883a 	mov	r19,zero
 8011408:	003f9b06 	br	8011278 <__alt_data_end+0xfc011278>
 801140c:	8880022c 	andhi	r2,r17,8
 8011410:	1000f026 	beq	r2,zero,80117d4 <__divdf3+0x6d4>
 8011414:	8080022c 	andhi	r2,r16,8
 8011418:	1000ee1e 	bne	r2,zero,80117d4 <__divdf3+0x6d4>
 801141c:	00800434 	movhi	r2,16
 8011420:	81400234 	orhi	r5,r16,8
 8011424:	10bfffc4 	addi	r2,r2,-1
 8011428:	b80d883a 	mov	r6,r23
 801142c:	288a703a 	and	r5,r5,r2
 8011430:	a827883a 	mov	r19,r21
 8011434:	003fea06 	br	80113e0 <__alt_data_end+0xfc0113e0>
 8011438:	84411c36 	bltu	r16,r17,80118ac <__divdf3+0x7ac>
 801143c:	8c011a26 	beq	r17,r16,80118a8 <__divdf3+0x7a8>
 8011440:	94bfffc4 	addi	r18,r18,-1
 8011444:	dcc00015 	stw	r19,0(sp)
 8011448:	8811883a 	mov	r8,r17
 801144c:	002d883a 	mov	r22,zero
 8011450:	a80cd63a 	srli	r6,r21,24
 8011454:	8020923a 	slli	r16,r16,8
 8011458:	a82a923a 	slli	r21,r21,8
 801145c:	4009883a 	mov	r4,r8
 8011460:	342eb03a 	or	r23,r6,r16
 8011464:	dd400115 	stw	r21,4(sp)
 8011468:	b82ad43a 	srli	r21,r23,16
 801146c:	da000315 	stw	r8,12(sp)
 8011470:	bcffffcc 	andi	r19,r23,65535
 8011474:	a80b883a 	mov	r5,r21
 8011478:	80108540 	call	8010854 <__udivsi3>
 801147c:	1009883a 	mov	r4,r2
 8011480:	980b883a 	mov	r5,r19
 8011484:	1023883a 	mov	r17,r2
 8011488:	80027c00 	call	80027c0 <__mulsi3>
 801148c:	da000317 	ldw	r8,12(sp)
 8011490:	a80b883a 	mov	r5,r21
 8011494:	1039883a 	mov	fp,r2
 8011498:	4009883a 	mov	r4,r8
 801149c:	801085c0 	call	801085c <__umodsi3>
 80114a0:	d8c00017 	ldw	r3,0(sp)
 80114a4:	1004943a 	slli	r2,r2,16
 80114a8:	1810d43a 	srli	r8,r3,16
 80114ac:	120eb03a 	or	r7,r2,r8
 80114b0:	3f00062e 	bgeu	r7,fp,80114cc <__divdf3+0x3cc>
 80114b4:	3dcf883a 	add	r7,r7,r23
 80114b8:	88bfffc4 	addi	r2,r17,-1
 80114bc:	3dc10a36 	bltu	r7,r23,80118e8 <__divdf3+0x7e8>
 80114c0:	3f01092e 	bgeu	r7,fp,80118e8 <__divdf3+0x7e8>
 80114c4:	8c7fff84 	addi	r17,r17,-2
 80114c8:	3dcf883a 	add	r7,r7,r23
 80114cc:	3f39c83a 	sub	fp,r7,fp
 80114d0:	e009883a 	mov	r4,fp
 80114d4:	a80b883a 	mov	r5,r21
 80114d8:	80108540 	call	8010854 <__udivsi3>
 80114dc:	1009883a 	mov	r4,r2
 80114e0:	980b883a 	mov	r5,r19
 80114e4:	1021883a 	mov	r16,r2
 80114e8:	80027c00 	call	80027c0 <__mulsi3>
 80114ec:	e009883a 	mov	r4,fp
 80114f0:	a80b883a 	mov	r5,r21
 80114f4:	d8800315 	stw	r2,12(sp)
 80114f8:	801085c0 	call	801085c <__umodsi3>
 80114fc:	d9000017 	ldw	r4,0(sp)
 8011500:	1004943a 	slli	r2,r2,16
 8011504:	da000317 	ldw	r8,12(sp)
 8011508:	20ffffcc 	andi	r3,r4,65535
 801150c:	10ceb03a 	or	r7,r2,r3
 8011510:	3a00062e 	bgeu	r7,r8,801152c <__divdf3+0x42c>
 8011514:	3dcf883a 	add	r7,r7,r23
 8011518:	80bfffc4 	addi	r2,r16,-1
 801151c:	3dc0f036 	bltu	r7,r23,80118e0 <__divdf3+0x7e0>
 8011520:	3a00ef2e 	bgeu	r7,r8,80118e0 <__divdf3+0x7e0>
 8011524:	843fff84 	addi	r16,r16,-2
 8011528:	3dcf883a 	add	r7,r7,r23
 801152c:	d8c00117 	ldw	r3,4(sp)
 8011530:	8822943a 	slli	r17,r17,16
 8011534:	3a0fc83a 	sub	r7,r7,r8
 8011538:	1806d43a 	srli	r3,r3,16
 801153c:	8462b03a 	or	r17,r16,r17
 8011540:	8affffcc 	andi	r11,r17,65535
 8011544:	d8c00015 	stw	r3,0(sp)
 8011548:	d8c00117 	ldw	r3,4(sp)
 801154c:	8820d43a 	srli	r16,r17,16
 8011550:	5809883a 	mov	r4,r11
 8011554:	1f3fffcc 	andi	fp,r3,65535
 8011558:	e00b883a 	mov	r5,fp
 801155c:	d9c00515 	stw	r7,20(sp)
 8011560:	dac00215 	stw	r11,8(sp)
 8011564:	80027c00 	call	80027c0 <__mulsi3>
 8011568:	8009883a 	mov	r4,r16
 801156c:	e00b883a 	mov	r5,fp
 8011570:	d8800415 	stw	r2,16(sp)
 8011574:	80027c00 	call	80027c0 <__mulsi3>
 8011578:	d9400017 	ldw	r5,0(sp)
 801157c:	8009883a 	mov	r4,r16
 8011580:	d8800315 	stw	r2,12(sp)
 8011584:	80027c00 	call	80027c0 <__mulsi3>
 8011588:	dac00217 	ldw	r11,8(sp)
 801158c:	d9400017 	ldw	r5,0(sp)
 8011590:	d8800215 	stw	r2,8(sp)
 8011594:	5809883a 	mov	r4,r11
 8011598:	80027c00 	call	80027c0 <__mulsi3>
 801159c:	da400417 	ldw	r9,16(sp)
 80115a0:	da800317 	ldw	r10,12(sp)
 80115a4:	d9c00517 	ldw	r7,20(sp)
 80115a8:	480ad43a 	srli	r5,r9,16
 80115ac:	5085883a 	add	r2,r10,r2
 80115b0:	db000217 	ldw	r12,8(sp)
 80115b4:	1151883a 	add	r8,r2,r5
 80115b8:	4280022e 	bgeu	r8,r10,80115c4 <__divdf3+0x4c4>
 80115bc:	00800074 	movhi	r2,1
 80115c0:	6099883a 	add	r12,r12,r2
 80115c4:	400ad43a 	srli	r5,r8,16
 80115c8:	4010943a 	slli	r8,r8,16
 80115cc:	4c3fffcc 	andi	r16,r9,65535
 80115d0:	6149883a 	add	r4,r12,r5
 80115d4:	4411883a 	add	r8,r8,r16
 80115d8:	3900a736 	bltu	r7,r4,8011878 <__divdf3+0x778>
 80115dc:	3900c426 	beq	r7,r4,80118f0 <__divdf3+0x7f0>
 80115e0:	3909c83a 	sub	r4,r7,r4
 80115e4:	b221c83a 	sub	r16,r22,r8
 80115e8:	b42d803a 	cmpltu	r22,r22,r16
 80115ec:	25adc83a 	sub	r22,r4,r22
 80115f0:	b5c0c626 	beq	r22,r23,801190c <__divdf3+0x80c>
 80115f4:	b009883a 	mov	r4,r22
 80115f8:	a80b883a 	mov	r5,r21
 80115fc:	80108540 	call	8010854 <__udivsi3>
 8011600:	1009883a 	mov	r4,r2
 8011604:	980b883a 	mov	r5,r19
 8011608:	d8800315 	stw	r2,12(sp)
 801160c:	80027c00 	call	80027c0 <__mulsi3>
 8011610:	a80b883a 	mov	r5,r21
 8011614:	b009883a 	mov	r4,r22
 8011618:	d8800415 	stw	r2,16(sp)
 801161c:	801085c0 	call	801085c <__umodsi3>
 8011620:	1004943a 	slli	r2,r2,16
 8011624:	800ed43a 	srli	r7,r16,16
 8011628:	da400417 	ldw	r9,16(sp)
 801162c:	da000317 	ldw	r8,12(sp)
 8011630:	11cab03a 	or	r5,r2,r7
 8011634:	2a40062e 	bgeu	r5,r9,8011650 <__divdf3+0x550>
 8011638:	2dcb883a 	add	r5,r5,r23
 801163c:	40bfffc4 	addi	r2,r8,-1
 8011640:	2dc0b436 	bltu	r5,r23,8011914 <__divdf3+0x814>
 8011644:	2a40b32e 	bgeu	r5,r9,8011914 <__divdf3+0x814>
 8011648:	423fff84 	addi	r8,r8,-2
 801164c:	2dcb883a 	add	r5,r5,r23
 8011650:	2a6dc83a 	sub	r22,r5,r9
 8011654:	b009883a 	mov	r4,r22
 8011658:	a80b883a 	mov	r5,r21
 801165c:	da000315 	stw	r8,12(sp)
 8011660:	80108540 	call	8010854 <__udivsi3>
 8011664:	980b883a 	mov	r5,r19
 8011668:	1009883a 	mov	r4,r2
 801166c:	d8800415 	stw	r2,16(sp)
 8011670:	80027c00 	call	80027c0 <__mulsi3>
 8011674:	b009883a 	mov	r4,r22
 8011678:	a80b883a 	mov	r5,r21
 801167c:	1027883a 	mov	r19,r2
 8011680:	801085c0 	call	801085c <__umodsi3>
 8011684:	1004943a 	slli	r2,r2,16
 8011688:	843fffcc 	andi	r16,r16,65535
 801168c:	da000317 	ldw	r8,12(sp)
 8011690:	140eb03a 	or	r7,r2,r16
 8011694:	da400417 	ldw	r9,16(sp)
 8011698:	3cc0062e 	bgeu	r7,r19,80116b4 <__divdf3+0x5b4>
 801169c:	3dcf883a 	add	r7,r7,r23
 80116a0:	48bfffc4 	addi	r2,r9,-1
 80116a4:	3dc09d36 	bltu	r7,r23,801191c <__divdf3+0x81c>
 80116a8:	3cc09c2e 	bgeu	r7,r19,801191c <__divdf3+0x81c>
 80116ac:	4a7fff84 	addi	r9,r9,-2
 80116b0:	3dcf883a 	add	r7,r7,r23
 80116b4:	4010943a 	slli	r8,r8,16
 80116b8:	3cebc83a 	sub	r21,r7,r19
 80116bc:	e00b883a 	mov	r5,fp
 80116c0:	4a26b03a 	or	r19,r9,r8
 80116c4:	99ffffcc 	andi	r7,r19,65535
 80116c8:	9820d43a 	srli	r16,r19,16
 80116cc:	3809883a 	mov	r4,r7
 80116d0:	d9c00515 	stw	r7,20(sp)
 80116d4:	80027c00 	call	80027c0 <__mulsi3>
 80116d8:	8009883a 	mov	r4,r16
 80116dc:	e00b883a 	mov	r5,fp
 80116e0:	102d883a 	mov	r22,r2
 80116e4:	80027c00 	call	80027c0 <__mulsi3>
 80116e8:	d9400017 	ldw	r5,0(sp)
 80116ec:	8009883a 	mov	r4,r16
 80116f0:	1039883a 	mov	fp,r2
 80116f4:	80027c00 	call	80027c0 <__mulsi3>
 80116f8:	d9c00517 	ldw	r7,20(sp)
 80116fc:	d9400017 	ldw	r5,0(sp)
 8011700:	1021883a 	mov	r16,r2
 8011704:	3809883a 	mov	r4,r7
 8011708:	80027c00 	call	80027c0 <__mulsi3>
 801170c:	b008d43a 	srli	r4,r22,16
 8011710:	e085883a 	add	r2,fp,r2
 8011714:	1109883a 	add	r4,r2,r4
 8011718:	2700022e 	bgeu	r4,fp,8011724 <__divdf3+0x624>
 801171c:	00800074 	movhi	r2,1
 8011720:	80a1883a 	add	r16,r16,r2
 8011724:	200ad43a 	srli	r5,r4,16
 8011728:	2008943a 	slli	r4,r4,16
 801172c:	b5bfffcc 	andi	r22,r22,65535
 8011730:	8145883a 	add	r2,r16,r5
 8011734:	2589883a 	add	r4,r4,r22
 8011738:	a8802c36 	bltu	r21,r2,80117ec <__divdf3+0x6ec>
 801173c:	a880a426 	beq	r21,r2,80119d0 <__divdf3+0x8d0>
 8011740:	9cc00054 	ori	r19,r19,1
 8011744:	9200ffc4 	addi	r8,r18,1023
 8011748:	023f270e 	bge	zero,r8,80113e8 <__alt_data_end+0xfc0113e8>
 801174c:	988001cc 	andi	r2,r19,7
 8011750:	10000726 	beq	r2,zero,8011770 <__divdf3+0x670>
 8011754:	990003cc 	andi	r4,r19,15
 8011758:	00800104 	movi	r2,4
 801175c:	20800426 	beq	r4,r2,8011770 <__divdf3+0x670>
 8011760:	9885883a 	add	r2,r19,r2
 8011764:	14e7803a 	cmpltu	r19,r2,r19
 8011768:	8ce3883a 	add	r17,r17,r19
 801176c:	1027883a 	mov	r19,r2
 8011770:	8880402c 	andhi	r2,r17,256
 8011774:	10000426 	beq	r2,zero,8011788 <__divdf3+0x688>
 8011778:	00bfc034 	movhi	r2,65280
 801177c:	10bfffc4 	addi	r2,r2,-1
 8011780:	92010004 	addi	r8,r18,1024
 8011784:	88a2703a 	and	r17,r17,r2
 8011788:	0081ff84 	movi	r2,2046
 801178c:	123eb616 	blt	r2,r8,8011268 <__alt_data_end+0xfc011268>
 8011790:	9826d0fa 	srli	r19,r19,3
 8011794:	8804977a 	slli	r2,r17,29
 8011798:	8820927a 	slli	r16,r17,9
 801179c:	4201ffcc 	andi	r8,r8,2047
 80117a0:	14e6b03a 	or	r19,r2,r19
 80117a4:	800ad33a 	srli	r5,r16,12
 80117a8:	a180004c 	andi	r6,r20,1
 80117ac:	003eb206 	br	8011278 <__alt_data_end+0xfc011278>
 80117b0:	008000c4 	movi	r2,3
 80117b4:	4080ac26 	beq	r8,r2,8011a68 <__divdf3+0x968>
 80117b8:	00800044 	movi	r2,1
 80117bc:	4080591e 	bne	r8,r2,8011924 <__divdf3+0x824>
 80117c0:	e00d883a 	mov	r6,fp
 80117c4:	0011883a 	mov	r8,zero
 80117c8:	000b883a 	mov	r5,zero
 80117cc:	0027883a 	mov	r19,zero
 80117d0:	003ea906 	br	8011278 <__alt_data_end+0xfc011278>
 80117d4:	00800434 	movhi	r2,16
 80117d8:	89400234 	orhi	r5,r17,8
 80117dc:	10bfffc4 	addi	r2,r2,-1
 80117e0:	b00d883a 	mov	r6,r22
 80117e4:	288a703a 	and	r5,r5,r2
 80117e8:	003efd06 	br	80113e0 <__alt_data_end+0xfc0113e0>
 80117ec:	adcf883a 	add	r7,r21,r23
 80117f0:	997fffc4 	addi	r5,r19,-1
 80117f4:	3dc0412e 	bgeu	r7,r23,80118fc <__divdf3+0x7fc>
 80117f8:	2827883a 	mov	r19,r5
 80117fc:	38bfd01e 	bne	r7,r2,8011740 <__alt_data_end+0xfc011740>
 8011800:	d8c00117 	ldw	r3,4(sp)
 8011804:	193fce1e 	bne	r3,r4,8011740 <__alt_data_end+0xfc011740>
 8011808:	003fce06 	br	8011744 <__alt_data_end+0xfc011744>
 801180c:	d9800215 	stw	r6,8(sp)
 8011810:	d9c00515 	stw	r7,20(sp)
 8011814:	8012ffc0 	call	8012ffc <__clzsi2>
 8011818:	10c00804 	addi	r3,r2,32
 801181c:	010009c4 	movi	r4,39
 8011820:	d9800217 	ldw	r6,8(sp)
 8011824:	d9c00517 	ldw	r7,20(sp)
 8011828:	20feb20e 	bge	r4,r3,80112f4 <__alt_data_end+0xfc0112f4>
 801182c:	117ffe04 	addi	r5,r2,-8
 8011830:	a162983a 	sll	r17,r20,r5
 8011834:	0027883a 	mov	r19,zero
 8011838:	003eb506 	br	8011310 <__alt_data_end+0xfc011310>
 801183c:	3009883a 	mov	r4,r6
 8011840:	d9800215 	stw	r6,8(sp)
 8011844:	da000315 	stw	r8,12(sp)
 8011848:	da400415 	stw	r9,16(sp)
 801184c:	8012ffc0 	call	8012ffc <__clzsi2>
 8011850:	10c00804 	addi	r3,r2,32
 8011854:	010009c4 	movi	r4,39
 8011858:	d9800217 	ldw	r6,8(sp)
 801185c:	da000317 	ldw	r8,12(sp)
 8011860:	da400417 	ldw	r9,16(sp)
 8011864:	20fec10e 	bge	r4,r3,801136c <__alt_data_end+0xfc01136c>
 8011868:	10bffe04 	addi	r2,r2,-8
 801186c:	a8a0983a 	sll	r16,r21,r2
 8011870:	002b883a 	mov	r21,zero
 8011874:	003ec406 	br	8011388 <__alt_data_end+0xfc011388>
 8011878:	d8c00117 	ldw	r3,4(sp)
 801187c:	b0ed883a 	add	r22,r22,r3
 8011880:	b0c5803a 	cmpltu	r2,r22,r3
 8011884:	15c5883a 	add	r2,r2,r23
 8011888:	11cf883a 	add	r7,r2,r7
 801188c:	88bfffc4 	addi	r2,r17,-1
 8011890:	b9c00d2e 	bgeu	r23,r7,80118c8 <__divdf3+0x7c8>
 8011894:	39003f36 	bltu	r7,r4,8011994 <__divdf3+0x894>
 8011898:	21c06a26 	beq	r4,r7,8011a44 <__divdf3+0x944>
 801189c:	3909c83a 	sub	r4,r7,r4
 80118a0:	1023883a 	mov	r17,r2
 80118a4:	003f4f06 	br	80115e4 <__alt_data_end+0xfc0115e4>
 80118a8:	9d7ee536 	bltu	r19,r21,8011440 <__alt_data_end+0xfc011440>
 80118ac:	982ed07a 	srli	r23,r19,1
 80118b0:	880497fa 	slli	r2,r17,31
 80118b4:	8810d07a 	srli	r8,r17,1
 80118b8:	982c97fa 	slli	r22,r19,31
 80118bc:	b884b03a 	or	r2,r23,r2
 80118c0:	d8800015 	stw	r2,0(sp)
 80118c4:	003ee206 	br	8011450 <__alt_data_end+0xfc011450>
 80118c8:	3dfff41e 	bne	r7,r23,801189c <__alt_data_end+0xfc01189c>
 80118cc:	d8c00117 	ldw	r3,4(sp)
 80118d0:	b0fff02e 	bgeu	r22,r3,8011894 <__alt_data_end+0xfc011894>
 80118d4:	b909c83a 	sub	r4,r23,r4
 80118d8:	1023883a 	mov	r17,r2
 80118dc:	003f4106 	br	80115e4 <__alt_data_end+0xfc0115e4>
 80118e0:	1021883a 	mov	r16,r2
 80118e4:	003f1106 	br	801152c <__alt_data_end+0xfc01152c>
 80118e8:	1023883a 	mov	r17,r2
 80118ec:	003ef706 	br	80114cc <__alt_data_end+0xfc0114cc>
 80118f0:	b23fe136 	bltu	r22,r8,8011878 <__alt_data_end+0xfc011878>
 80118f4:	0009883a 	mov	r4,zero
 80118f8:	003f3a06 	br	80115e4 <__alt_data_end+0xfc0115e4>
 80118fc:	38802c36 	bltu	r7,r2,80119b0 <__divdf3+0x8b0>
 8011900:	11c05326 	beq	r2,r7,8011a50 <__divdf3+0x950>
 8011904:	2827883a 	mov	r19,r5
 8011908:	003f8d06 	br	8011740 <__alt_data_end+0xfc011740>
 801190c:	04ffffc4 	movi	r19,-1
 8011910:	003f8c06 	br	8011744 <__alt_data_end+0xfc011744>
 8011914:	1011883a 	mov	r8,r2
 8011918:	003f4d06 	br	8011650 <__alt_data_end+0xfc011650>
 801191c:	1013883a 	mov	r9,r2
 8011920:	003f6406 	br	80116b4 <__alt_data_end+0xfc0116b4>
 8011924:	e029883a 	mov	r20,fp
 8011928:	003f8606 	br	8011744 <__alt_data_end+0xfc011744>
 801192c:	008007c4 	movi	r2,31
 8011930:	14002a16 	blt	r2,r16,80119dc <__divdf3+0x8dc>
 8011934:	91410784 	addi	r5,r18,1054
 8011938:	9c0cd83a 	srl	r6,r19,r16
 801193c:	8948983a 	sll	r4,r17,r5
 8011940:	9944983a 	sll	r2,r19,r5
 8011944:	8c20d83a 	srl	r16,r17,r16
 8011948:	3108b03a 	or	r4,r6,r4
 801194c:	1004c03a 	cmpne	r2,r2,zero
 8011950:	2084b03a 	or	r2,r4,r2
 8011954:	110001cc 	andi	r4,r2,7
 8011958:	20000726 	beq	r4,zero,8011978 <__divdf3+0x878>
 801195c:	114003cc 	andi	r5,r2,15
 8011960:	01000104 	movi	r4,4
 8011964:	29000426 	beq	r5,r4,8011978 <__divdf3+0x878>
 8011968:	11000104 	addi	r4,r2,4
 801196c:	2085803a 	cmpltu	r2,r4,r2
 8011970:	80a1883a 	add	r16,r16,r2
 8011974:	2005883a 	mov	r2,r4
 8011978:	8100202c 	andhi	r4,r16,128
 801197c:	20002d26 	beq	r4,zero,8011a34 <__divdf3+0x934>
 8011980:	a180004c 	andi	r6,r20,1
 8011984:	02000044 	movi	r8,1
 8011988:	000b883a 	mov	r5,zero
 801198c:	0027883a 	mov	r19,zero
 8011990:	003e3906 	br	8011278 <__alt_data_end+0xfc011278>
 8011994:	d8c00117 	ldw	r3,4(sp)
 8011998:	8c7fff84 	addi	r17,r17,-2
 801199c:	b0ed883a 	add	r22,r22,r3
 80119a0:	b0c5803a 	cmpltu	r2,r22,r3
 80119a4:	15c5883a 	add	r2,r2,r23
 80119a8:	11cf883a 	add	r7,r2,r7
 80119ac:	003f0c06 	br	80115e0 <__alt_data_end+0xfc0115e0>
 80119b0:	d8c00117 	ldw	r3,4(sp)
 80119b4:	997fff84 	addi	r5,r19,-2
 80119b8:	18d1883a 	add	r8,r3,r3
 80119bc:	40c7803a 	cmpltu	r3,r8,r3
 80119c0:	1dcd883a 	add	r6,r3,r23
 80119c4:	398f883a 	add	r7,r7,r6
 80119c8:	da000115 	stw	r8,4(sp)
 80119cc:	003f8a06 	br	80117f8 <__alt_data_end+0xfc0117f8>
 80119d0:	203f861e 	bne	r4,zero,80117ec <__alt_data_end+0xfc0117ec>
 80119d4:	d8000115 	stw	zero,4(sp)
 80119d8:	003f8906 	br	8011800 <__alt_data_end+0xfc011800>
 80119dc:	00bef884 	movi	r2,-1054
 80119e0:	1485c83a 	sub	r2,r2,r18
 80119e4:	01000804 	movi	r4,32
 80119e8:	8884d83a 	srl	r2,r17,r2
 80119ec:	81001c26 	beq	r16,r4,8011a60 <__divdf3+0x960>
 80119f0:	91010f84 	addi	r4,r18,1086
 80119f4:	8908983a 	sll	r4,r17,r4
 80119f8:	24c8b03a 	or	r4,r4,r19
 80119fc:	2008c03a 	cmpne	r4,r4,zero
 8011a00:	2084b03a 	or	r2,r4,r2
 8011a04:	140001cc 	andi	r16,r2,7
 8011a08:	8000061e 	bne	r16,zero,8011a24 <__divdf3+0x924>
 8011a0c:	000b883a 	mov	r5,zero
 8011a10:	1004d0fa 	srli	r2,r2,3
 8011a14:	a180004c 	andi	r6,r20,1
 8011a18:	0011883a 	mov	r8,zero
 8011a1c:	1426b03a 	or	r19,r2,r16
 8011a20:	003e1506 	br	8011278 <__alt_data_end+0xfc011278>
 8011a24:	114003cc 	andi	r5,r2,15
 8011a28:	01000104 	movi	r4,4
 8011a2c:	0021883a 	mov	r16,zero
 8011a30:	293fcd1e 	bne	r5,r4,8011968 <__alt_data_end+0xfc011968>
 8011a34:	800a927a 	slli	r5,r16,9
 8011a38:	8020977a 	slli	r16,r16,29
 8011a3c:	280ad33a 	srli	r5,r5,12
 8011a40:	003ff306 	br	8011a10 <__alt_data_end+0xfc011a10>
 8011a44:	b23fd336 	bltu	r22,r8,8011994 <__alt_data_end+0xfc011994>
 8011a48:	1023883a 	mov	r17,r2
 8011a4c:	003fa906 	br	80118f4 <__alt_data_end+0xfc0118f4>
 8011a50:	d8c00117 	ldw	r3,4(sp)
 8011a54:	193fd636 	bltu	r3,r4,80119b0 <__alt_data_end+0xfc0119b0>
 8011a58:	2827883a 	mov	r19,r5
 8011a5c:	003f6806 	br	8011800 <__alt_data_end+0xfc011800>
 8011a60:	0009883a 	mov	r4,zero
 8011a64:	003fe406 	br	80119f8 <__alt_data_end+0xfc0119f8>
 8011a68:	00800434 	movhi	r2,16
 8011a6c:	89400234 	orhi	r5,r17,8
 8011a70:	10bfffc4 	addi	r2,r2,-1
 8011a74:	e00d883a 	mov	r6,fp
 8011a78:	288a703a 	and	r5,r5,r2
 8011a7c:	003e5806 	br	80113e0 <__alt_data_end+0xfc0113e0>

08011a80 <__eqdf2>:
 8011a80:	2804d53a 	srli	r2,r5,20
 8011a84:	3806d53a 	srli	r3,r7,20
 8011a88:	02000434 	movhi	r8,16
 8011a8c:	423fffc4 	addi	r8,r8,-1
 8011a90:	1081ffcc 	andi	r2,r2,2047
 8011a94:	0241ffc4 	movi	r9,2047
 8011a98:	2a14703a 	and	r10,r5,r8
 8011a9c:	18c1ffcc 	andi	r3,r3,2047
 8011aa0:	3a10703a 	and	r8,r7,r8
 8011aa4:	280ad7fa 	srli	r5,r5,31
 8011aa8:	380ed7fa 	srli	r7,r7,31
 8011aac:	12400f26 	beq	r2,r9,8011aec <__eqdf2+0x6c>
 8011ab0:	0241ffc4 	movi	r9,2047
 8011ab4:	1a400326 	beq	r3,r9,8011ac4 <__eqdf2+0x44>
 8011ab8:	10c00526 	beq	r2,r3,8011ad0 <__eqdf2+0x50>
 8011abc:	00800044 	movi	r2,1
 8011ac0:	f800283a 	ret
 8011ac4:	4192b03a 	or	r9,r8,r6
 8011ac8:	483ffc1e 	bne	r9,zero,8011abc <__alt_data_end+0xfc011abc>
 8011acc:	10fffb1e 	bne	r2,r3,8011abc <__alt_data_end+0xfc011abc>
 8011ad0:	523ffa1e 	bne	r10,r8,8011abc <__alt_data_end+0xfc011abc>
 8011ad4:	21bff91e 	bne	r4,r6,8011abc <__alt_data_end+0xfc011abc>
 8011ad8:	29c00826 	beq	r5,r7,8011afc <__eqdf2+0x7c>
 8011adc:	103ff71e 	bne	r2,zero,8011abc <__alt_data_end+0xfc011abc>
 8011ae0:	5104b03a 	or	r2,r10,r4
 8011ae4:	1004c03a 	cmpne	r2,r2,zero
 8011ae8:	f800283a 	ret
 8011aec:	5112b03a 	or	r9,r10,r4
 8011af0:	483fef26 	beq	r9,zero,8011ab0 <__alt_data_end+0xfc011ab0>
 8011af4:	00800044 	movi	r2,1
 8011af8:	f800283a 	ret
 8011afc:	0005883a 	mov	r2,zero
 8011b00:	f800283a 	ret

08011b04 <__gedf2>:
 8011b04:	2804d53a 	srli	r2,r5,20
 8011b08:	3806d53a 	srli	r3,r7,20
 8011b0c:	02000434 	movhi	r8,16
 8011b10:	423fffc4 	addi	r8,r8,-1
 8011b14:	0241ffc4 	movi	r9,2047
 8011b18:	1081ffcc 	andi	r2,r2,2047
 8011b1c:	2a14703a 	and	r10,r5,r8
 8011b20:	1a46703a 	and	r3,r3,r9
 8011b24:	3a10703a 	and	r8,r7,r8
 8011b28:	280ad7fa 	srli	r5,r5,31
 8011b2c:	380ed7fa 	srli	r7,r7,31
 8011b30:	12400b26 	beq	r2,r9,8011b60 <__gedf2+0x5c>
 8011b34:	1a401626 	beq	r3,r9,8011b90 <__gedf2+0x8c>
 8011b38:	10000c1e 	bne	r2,zero,8011b6c <__gedf2+0x68>
 8011b3c:	5112b03a 	or	r9,r10,r4
 8011b40:	4813003a 	cmpeq	r9,r9,zero
 8011b44:	4817883a 	mov	r11,r9
 8011b48:	18000c1e 	bne	r3,zero,8011b7c <__gedf2+0x78>
 8011b4c:	4198b03a 	or	r12,r8,r6
 8011b50:	60000a1e 	bne	r12,zero,8011b7c <__gedf2+0x78>
 8011b54:	48001326 	beq	r9,zero,8011ba4 <__gedf2+0xa0>
 8011b58:	0005883a 	mov	r2,zero
 8011b5c:	f800283a 	ret
 8011b60:	5112b03a 	or	r9,r10,r4
 8011b64:	4800191e 	bne	r9,zero,8011bcc <__gedf2+0xc8>
 8011b68:	18800926 	beq	r3,r2,8011b90 <__gedf2+0x8c>
 8011b6c:	18000b1e 	bne	r3,zero,8011b9c <__gedf2+0x98>
 8011b70:	4192b03a 	or	r9,r8,r6
 8011b74:	0017883a 	mov	r11,zero
 8011b78:	48000a26 	beq	r9,zero,8011ba4 <__gedf2+0xa0>
 8011b7c:	39c03fcc 	andi	r7,r7,255
 8011b80:	58000726 	beq	r11,zero,8011ba0 <__gedf2+0x9c>
 8011b84:	3800081e 	bne	r7,zero,8011ba8 <__gedf2+0xa4>
 8011b88:	00bfffc4 	movi	r2,-1
 8011b8c:	f800283a 	ret
 8011b90:	4192b03a 	or	r9,r8,r6
 8011b94:	48000d1e 	bne	r9,zero,8011bcc <__gedf2+0xc8>
 8011b98:	103fe826 	beq	r2,zero,8011b3c <__alt_data_end+0xfc011b3c>
 8011b9c:	39c03fcc 	andi	r7,r7,255
 8011ba0:	29c00326 	beq	r5,r7,8011bb0 <__gedf2+0xac>
 8011ba4:	283ff81e 	bne	r5,zero,8011b88 <__alt_data_end+0xfc011b88>
 8011ba8:	00800044 	movi	r2,1
 8011bac:	f800283a 	ret
 8011bb0:	18bffc16 	blt	r3,r2,8011ba4 <__alt_data_end+0xfc011ba4>
 8011bb4:	10c00316 	blt	r2,r3,8011bc4 <__gedf2+0xc0>
 8011bb8:	42bffa36 	bltu	r8,r10,8011ba4 <__alt_data_end+0xfc011ba4>
 8011bbc:	52000526 	beq	r10,r8,8011bd4 <__gedf2+0xd0>
 8011bc0:	523fe52e 	bgeu	r10,r8,8011b58 <__alt_data_end+0xfc011b58>
 8011bc4:	283ff026 	beq	r5,zero,8011b88 <__alt_data_end+0xfc011b88>
 8011bc8:	003ff706 	br	8011ba8 <__alt_data_end+0xfc011ba8>
 8011bcc:	00bfff84 	movi	r2,-2
 8011bd0:	f800283a 	ret
 8011bd4:	313ff336 	bltu	r6,r4,8011ba4 <__alt_data_end+0xfc011ba4>
 8011bd8:	21bfdf2e 	bgeu	r4,r6,8011b58 <__alt_data_end+0xfc011b58>
 8011bdc:	283fea26 	beq	r5,zero,8011b88 <__alt_data_end+0xfc011b88>
 8011be0:	003ff106 	br	8011ba8 <__alt_data_end+0xfc011ba8>

08011be4 <__ledf2>:
 8011be4:	2804d53a 	srli	r2,r5,20
 8011be8:	3810d53a 	srli	r8,r7,20
 8011bec:	00c00434 	movhi	r3,16
 8011bf0:	18ffffc4 	addi	r3,r3,-1
 8011bf4:	0241ffc4 	movi	r9,2047
 8011bf8:	1081ffcc 	andi	r2,r2,2047
 8011bfc:	28d4703a 	and	r10,r5,r3
 8011c00:	4250703a 	and	r8,r8,r9
 8011c04:	38c6703a 	and	r3,r7,r3
 8011c08:	280ad7fa 	srli	r5,r5,31
 8011c0c:	380ed7fa 	srli	r7,r7,31
 8011c10:	12400b26 	beq	r2,r9,8011c40 <__ledf2+0x5c>
 8011c14:	42401926 	beq	r8,r9,8011c7c <__ledf2+0x98>
 8011c18:	10000c1e 	bne	r2,zero,8011c4c <__ledf2+0x68>
 8011c1c:	5112b03a 	or	r9,r10,r4
 8011c20:	4813003a 	cmpeq	r9,r9,zero
 8011c24:	4817883a 	mov	r11,r9
 8011c28:	40000f26 	beq	r8,zero,8011c68 <__ledf2+0x84>
 8011c2c:	39c03fcc 	andi	r7,r7,255
 8011c30:	58001826 	beq	r11,zero,8011c94 <__ledf2+0xb0>
 8011c34:	38000a1e 	bne	r7,zero,8011c60 <__ledf2+0x7c>
 8011c38:	00bfffc4 	movi	r2,-1
 8011c3c:	f800283a 	ret
 8011c40:	5112b03a 	or	r9,r10,r4
 8011c44:	48000f1e 	bne	r9,zero,8011c84 <__ledf2+0xa0>
 8011c48:	40800c26 	beq	r8,r2,8011c7c <__ledf2+0x98>
 8011c4c:	4000101e 	bne	r8,zero,8011c90 <__ledf2+0xac>
 8011c50:	1992b03a 	or	r9,r3,r6
 8011c54:	0017883a 	mov	r11,zero
 8011c58:	483ff41e 	bne	r9,zero,8011c2c <__alt_data_end+0xfc011c2c>
 8011c5c:	283ff61e 	bne	r5,zero,8011c38 <__alt_data_end+0xfc011c38>
 8011c60:	00800044 	movi	r2,1
 8011c64:	f800283a 	ret
 8011c68:	1998b03a 	or	r12,r3,r6
 8011c6c:	603fef1e 	bne	r12,zero,8011c2c <__alt_data_end+0xfc011c2c>
 8011c70:	483ffa26 	beq	r9,zero,8011c5c <__alt_data_end+0xfc011c5c>
 8011c74:	0005883a 	mov	r2,zero
 8011c78:	f800283a 	ret
 8011c7c:	1992b03a 	or	r9,r3,r6
 8011c80:	48000226 	beq	r9,zero,8011c8c <__ledf2+0xa8>
 8011c84:	00800084 	movi	r2,2
 8011c88:	f800283a 	ret
 8011c8c:	103fe326 	beq	r2,zero,8011c1c <__alt_data_end+0xfc011c1c>
 8011c90:	39c03fcc 	andi	r7,r7,255
 8011c94:	29fff11e 	bne	r5,r7,8011c5c <__alt_data_end+0xfc011c5c>
 8011c98:	40bff016 	blt	r8,r2,8011c5c <__alt_data_end+0xfc011c5c>
 8011c9c:	12000316 	blt	r2,r8,8011cac <__ledf2+0xc8>
 8011ca0:	1abfee36 	bltu	r3,r10,8011c5c <__alt_data_end+0xfc011c5c>
 8011ca4:	50c00326 	beq	r10,r3,8011cb4 <__ledf2+0xd0>
 8011ca8:	50fff22e 	bgeu	r10,r3,8011c74 <__alt_data_end+0xfc011c74>
 8011cac:	283fe226 	beq	r5,zero,8011c38 <__alt_data_end+0xfc011c38>
 8011cb0:	003feb06 	br	8011c60 <__alt_data_end+0xfc011c60>
 8011cb4:	313fe936 	bltu	r6,r4,8011c5c <__alt_data_end+0xfc011c5c>
 8011cb8:	21bfee2e 	bgeu	r4,r6,8011c74 <__alt_data_end+0xfc011c74>
 8011cbc:	283fde26 	beq	r5,zero,8011c38 <__alt_data_end+0xfc011c38>
 8011cc0:	003fe706 	br	8011c60 <__alt_data_end+0xfc011c60>

08011cc4 <__muldf3>:
 8011cc4:	deffee04 	addi	sp,sp,-72
 8011cc8:	dd000c15 	stw	r20,48(sp)
 8011ccc:	2828d53a 	srli	r20,r5,20
 8011cd0:	dd400d15 	stw	r21,52(sp)
 8011cd4:	282ad7fa 	srli	r21,r5,31
 8011cd8:	dc000815 	stw	r16,32(sp)
 8011cdc:	04000434 	movhi	r16,16
 8011ce0:	ddc00f15 	stw	r23,60(sp)
 8011ce4:	dcc00b15 	stw	r19,44(sp)
 8011ce8:	dc800a15 	stw	r18,40(sp)
 8011cec:	843fffc4 	addi	r16,r16,-1
 8011cf0:	dfc01115 	stw	ra,68(sp)
 8011cf4:	df001015 	stw	fp,64(sp)
 8011cf8:	dd800e15 	stw	r22,56(sp)
 8011cfc:	dc400915 	stw	r17,36(sp)
 8011d00:	a501ffcc 	andi	r20,r20,2047
 8011d04:	2025883a 	mov	r18,r4
 8011d08:	202f883a 	mov	r23,r4
 8011d0c:	2c20703a 	and	r16,r5,r16
 8011d10:	a827883a 	mov	r19,r21
 8011d14:	aa403fcc 	andi	r9,r21,255
 8011d18:	a0005926 	beq	r20,zero,8011e80 <__muldf3+0x1bc>
 8011d1c:	0081ffc4 	movi	r2,2047
 8011d20:	a0803426 	beq	r20,r2,8011df4 <__muldf3+0x130>
 8011d24:	84000434 	orhi	r16,r16,16
 8011d28:	2004d77a 	srli	r2,r4,29
 8011d2c:	802090fa 	slli	r16,r16,3
 8011d30:	202e90fa 	slli	r23,r4,3
 8011d34:	a53f0044 	addi	r20,r20,-1023
 8011d38:	80a0b03a 	or	r16,r16,r2
 8011d3c:	000b883a 	mov	r5,zero
 8011d40:	0039883a 	mov	fp,zero
 8011d44:	3806d53a 	srli	r3,r7,20
 8011d48:	382cd7fa 	srli	r22,r7,31
 8011d4c:	00800434 	movhi	r2,16
 8011d50:	10bfffc4 	addi	r2,r2,-1
 8011d54:	18c1ffcc 	andi	r3,r3,2047
 8011d58:	3025883a 	mov	r18,r6
 8011d5c:	38a2703a 	and	r17,r7,r2
 8011d60:	b2803fcc 	andi	r10,r22,255
 8011d64:	18006426 	beq	r3,zero,8011ef8 <__muldf3+0x234>
 8011d68:	0081ffc4 	movi	r2,2047
 8011d6c:	18805c26 	beq	r3,r2,8011ee0 <__muldf3+0x21c>
 8011d70:	8c400434 	orhi	r17,r17,16
 8011d74:	3004d77a 	srli	r2,r6,29
 8011d78:	882290fa 	slli	r17,r17,3
 8011d7c:	302490fa 	slli	r18,r6,3
 8011d80:	18ff0044 	addi	r3,r3,-1023
 8011d84:	88a2b03a 	or	r17,r17,r2
 8011d88:	000f883a 	mov	r7,zero
 8011d8c:	394ab03a 	or	r5,r7,r5
 8011d90:	280a90ba 	slli	r5,r5,2
 8011d94:	00820074 	movhi	r2,2049
 8011d98:	10876d04 	addi	r2,r2,7604
 8011d9c:	288b883a 	add	r5,r5,r2
 8011da0:	28800017 	ldw	r2,0(r5)
 8011da4:	a0c7883a 	add	r3,r20,r3
 8011da8:	b54cf03a 	xor	r6,r22,r21
 8011dac:	1a000044 	addi	r8,r3,1
 8011db0:	1000683a 	jmp	r2
 8011db4:	08011ff8 	rdprs	zero,at,1151
 8011db8:	08011fe4 	muli	zero,at,1151
 8011dbc:	08011fe4 	muli	zero,at,1151
 8011dc0:	08011fd0 	cmplti	zero,at,1151
 8011dc4:	08011e10 	cmplti	zero,at,1144
 8011dc8:	08011e10 	cmplti	zero,at,1144
 8011dcc:	08011fb8 	rdprs	zero,at,1150
 8011dd0:	08011fd0 	cmplti	zero,at,1151
 8011dd4:	08011e10 	cmplti	zero,at,1144
 8011dd8:	08011fb8 	rdprs	zero,at,1150
 8011ddc:	08011e10 	cmplti	zero,at,1144
 8011de0:	08011fd0 	cmplti	zero,at,1151
 8011de4:	08011e14 	ori	zero,at,1144
 8011de8:	08011e14 	ori	zero,at,1144
 8011dec:	08011e14 	ori	zero,at,1144
 8011df0:	08012334 	orhi	zero,at,1164
 8011df4:	8104b03a 	or	r2,r16,r4
 8011df8:	10006c1e 	bne	r2,zero,8011fac <__muldf3+0x2e8>
 8011dfc:	01400204 	movi	r5,8
 8011e00:	0021883a 	mov	r16,zero
 8011e04:	002f883a 	mov	r23,zero
 8011e08:	07000084 	movi	fp,2
 8011e0c:	003fcd06 	br	8011d44 <__alt_data_end+0xfc011d44>
 8011e10:	3013883a 	mov	r9,r6
 8011e14:	00800084 	movi	r2,2
 8011e18:	e080501e 	bne	fp,r2,8011f5c <__muldf3+0x298>
 8011e1c:	4cc0004c 	andi	r19,r9,1
 8011e20:	0101ffc4 	movi	r4,2047
 8011e24:	0021883a 	mov	r16,zero
 8011e28:	002f883a 	mov	r23,zero
 8011e2c:	2008953a 	slli	r4,r4,20
 8011e30:	98c03fcc 	andi	r3,r19,255
 8011e34:	04400434 	movhi	r17,16
 8011e38:	8c7fffc4 	addi	r17,r17,-1
 8011e3c:	180697fa 	slli	r3,r3,31
 8011e40:	8460703a 	and	r16,r16,r17
 8011e44:	8120b03a 	or	r16,r16,r4
 8011e48:	80c6b03a 	or	r3,r16,r3
 8011e4c:	b805883a 	mov	r2,r23
 8011e50:	dfc01117 	ldw	ra,68(sp)
 8011e54:	df001017 	ldw	fp,64(sp)
 8011e58:	ddc00f17 	ldw	r23,60(sp)
 8011e5c:	dd800e17 	ldw	r22,56(sp)
 8011e60:	dd400d17 	ldw	r21,52(sp)
 8011e64:	dd000c17 	ldw	r20,48(sp)
 8011e68:	dcc00b17 	ldw	r19,44(sp)
 8011e6c:	dc800a17 	ldw	r18,40(sp)
 8011e70:	dc400917 	ldw	r17,36(sp)
 8011e74:	dc000817 	ldw	r16,32(sp)
 8011e78:	dec01204 	addi	sp,sp,72
 8011e7c:	f800283a 	ret
 8011e80:	8104b03a 	or	r2,r16,r4
 8011e84:	10004426 	beq	r2,zero,8011f98 <__muldf3+0x2d4>
 8011e88:	80014b26 	beq	r16,zero,80123b8 <__muldf3+0x6f4>
 8011e8c:	8009883a 	mov	r4,r16
 8011e90:	d9800715 	stw	r6,28(sp)
 8011e94:	d9c00215 	stw	r7,8(sp)
 8011e98:	da400415 	stw	r9,16(sp)
 8011e9c:	8012ffc0 	call	8012ffc <__clzsi2>
 8011ea0:	d9800717 	ldw	r6,28(sp)
 8011ea4:	d9c00217 	ldw	r7,8(sp)
 8011ea8:	da400417 	ldw	r9,16(sp)
 8011eac:	1007883a 	mov	r3,r2
 8011eb0:	01000a04 	movi	r4,40
 8011eb4:	1dfffe04 	addi	r23,r3,-8
 8011eb8:	20c9c83a 	sub	r4,r4,r3
 8011ebc:	85e0983a 	sll	r16,r16,r23
 8011ec0:	9108d83a 	srl	r4,r18,r4
 8011ec4:	95ee983a 	sll	r23,r18,r23
 8011ec8:	2420b03a 	or	r16,r4,r16
 8011ecc:	053f0344 	movi	r20,-1011
 8011ed0:	a0e9c83a 	sub	r20,r20,r3
 8011ed4:	000b883a 	mov	r5,zero
 8011ed8:	0039883a 	mov	fp,zero
 8011edc:	003f9906 	br	8011d44 <__alt_data_end+0xfc011d44>
 8011ee0:	8984b03a 	or	r2,r17,r6
 8011ee4:	10002a1e 	bne	r2,zero,8011f90 <__muldf3+0x2cc>
 8011ee8:	0023883a 	mov	r17,zero
 8011eec:	0025883a 	mov	r18,zero
 8011ef0:	01c00084 	movi	r7,2
 8011ef4:	003fa506 	br	8011d8c <__alt_data_end+0xfc011d8c>
 8011ef8:	8984b03a 	or	r2,r17,r6
 8011efc:	10002026 	beq	r2,zero,8011f80 <__muldf3+0x2bc>
 8011f00:	88011c26 	beq	r17,zero,8012374 <__muldf3+0x6b0>
 8011f04:	8809883a 	mov	r4,r17
 8011f08:	d9400215 	stw	r5,8(sp)
 8011f0c:	d9800715 	stw	r6,28(sp)
 8011f10:	da400415 	stw	r9,16(sp)
 8011f14:	da800315 	stw	r10,12(sp)
 8011f18:	8012ffc0 	call	8012ffc <__clzsi2>
 8011f1c:	d9400217 	ldw	r5,8(sp)
 8011f20:	d9800717 	ldw	r6,28(sp)
 8011f24:	da400417 	ldw	r9,16(sp)
 8011f28:	da800317 	ldw	r10,12(sp)
 8011f2c:	1007883a 	mov	r3,r2
 8011f30:	01000a04 	movi	r4,40
 8011f34:	1cbffe04 	addi	r18,r3,-8
 8011f38:	20c9c83a 	sub	r4,r4,r3
 8011f3c:	8ca2983a 	sll	r17,r17,r18
 8011f40:	3108d83a 	srl	r4,r6,r4
 8011f44:	34a4983a 	sll	r18,r6,r18
 8011f48:	2462b03a 	or	r17,r4,r17
 8011f4c:	00bf0344 	movi	r2,-1011
 8011f50:	10c7c83a 	sub	r3,r2,r3
 8011f54:	000f883a 	mov	r7,zero
 8011f58:	003f8c06 	br	8011d8c <__alt_data_end+0xfc011d8c>
 8011f5c:	008000c4 	movi	r2,3
 8011f60:	e0816d26 	beq	fp,r2,8012518 <__muldf3+0x854>
 8011f64:	00800044 	movi	r2,1
 8011f68:	e081321e 	bne	fp,r2,8012434 <__muldf3+0x770>
 8011f6c:	48a6703a 	and	r19,r9,r2
 8011f70:	0009883a 	mov	r4,zero
 8011f74:	0021883a 	mov	r16,zero
 8011f78:	002f883a 	mov	r23,zero
 8011f7c:	003fab06 	br	8011e2c <__alt_data_end+0xfc011e2c>
 8011f80:	0023883a 	mov	r17,zero
 8011f84:	0025883a 	mov	r18,zero
 8011f88:	01c00044 	movi	r7,1
 8011f8c:	003f7f06 	br	8011d8c <__alt_data_end+0xfc011d8c>
 8011f90:	01c000c4 	movi	r7,3
 8011f94:	003f7d06 	br	8011d8c <__alt_data_end+0xfc011d8c>
 8011f98:	01400104 	movi	r5,4
 8011f9c:	0021883a 	mov	r16,zero
 8011fa0:	002f883a 	mov	r23,zero
 8011fa4:	07000044 	movi	fp,1
 8011fa8:	003f6606 	br	8011d44 <__alt_data_end+0xfc011d44>
 8011fac:	01400304 	movi	r5,12
 8011fb0:	070000c4 	movi	fp,3
 8011fb4:	003f6306 	br	8011d44 <__alt_data_end+0xfc011d44>
 8011fb8:	04000434 	movhi	r16,16
 8011fbc:	0027883a 	mov	r19,zero
 8011fc0:	843fffc4 	addi	r16,r16,-1
 8011fc4:	05ffffc4 	movi	r23,-1
 8011fc8:	0101ffc4 	movi	r4,2047
 8011fcc:	003f9706 	br	8011e2c <__alt_data_end+0xfc011e2c>
 8011fd0:	8821883a 	mov	r16,r17
 8011fd4:	902f883a 	mov	r23,r18
 8011fd8:	5013883a 	mov	r9,r10
 8011fdc:	3839883a 	mov	fp,r7
 8011fe0:	003f8c06 	br	8011e14 <__alt_data_end+0xfc011e14>
 8011fe4:	8821883a 	mov	r16,r17
 8011fe8:	902f883a 	mov	r23,r18
 8011fec:	3013883a 	mov	r9,r6
 8011ff0:	3839883a 	mov	fp,r7
 8011ff4:	003f8706 	br	8011e14 <__alt_data_end+0xfc011e14>
 8011ff8:	b82ad43a 	srli	r21,r23,16
 8011ffc:	9038d43a 	srli	fp,r18,16
 8012000:	bdffffcc 	andi	r23,r23,65535
 8012004:	94bfffcc 	andi	r18,r18,65535
 8012008:	9009883a 	mov	r4,r18
 801200c:	b80b883a 	mov	r5,r23
 8012010:	d8c00515 	stw	r3,20(sp)
 8012014:	d9800715 	stw	r6,28(sp)
 8012018:	da000615 	stw	r8,24(sp)
 801201c:	80027c00 	call	80027c0 <__mulsi3>
 8012020:	9009883a 	mov	r4,r18
 8012024:	a80b883a 	mov	r5,r21
 8012028:	1029883a 	mov	r20,r2
 801202c:	80027c00 	call	80027c0 <__mulsi3>
 8012030:	e009883a 	mov	r4,fp
 8012034:	a80b883a 	mov	r5,r21
 8012038:	102d883a 	mov	r22,r2
 801203c:	80027c00 	call	80027c0 <__mulsi3>
 8012040:	e009883a 	mov	r4,fp
 8012044:	b80b883a 	mov	r5,r23
 8012048:	1027883a 	mov	r19,r2
 801204c:	80027c00 	call	80027c0 <__mulsi3>
 8012050:	a008d43a 	srli	r4,r20,16
 8012054:	b085883a 	add	r2,r22,r2
 8012058:	d8c00517 	ldw	r3,20(sp)
 801205c:	110f883a 	add	r7,r2,r4
 8012060:	d9800717 	ldw	r6,28(sp)
 8012064:	da000617 	ldw	r8,24(sp)
 8012068:	3d80022e 	bgeu	r7,r22,8012074 <__muldf3+0x3b0>
 801206c:	00800074 	movhi	r2,1
 8012070:	98a7883a 	add	r19,r19,r2
 8012074:	3804943a 	slli	r2,r7,16
 8012078:	380ed43a 	srli	r7,r7,16
 801207c:	882cd43a 	srli	r22,r17,16
 8012080:	a53fffcc 	andi	r20,r20,65535
 8012084:	8c7fffcc 	andi	r17,r17,65535
 8012088:	1529883a 	add	r20,r2,r20
 801208c:	8809883a 	mov	r4,r17
 8012090:	b80b883a 	mov	r5,r23
 8012094:	d8c00515 	stw	r3,20(sp)
 8012098:	d9800715 	stw	r6,28(sp)
 801209c:	da000615 	stw	r8,24(sp)
 80120a0:	d9c00015 	stw	r7,0(sp)
 80120a4:	dd000115 	stw	r20,4(sp)
 80120a8:	80027c00 	call	80027c0 <__mulsi3>
 80120ac:	a80b883a 	mov	r5,r21
 80120b0:	8809883a 	mov	r4,r17
 80120b4:	d8800415 	stw	r2,16(sp)
 80120b8:	80027c00 	call	80027c0 <__mulsi3>
 80120bc:	a80b883a 	mov	r5,r21
 80120c0:	b009883a 	mov	r4,r22
 80120c4:	1029883a 	mov	r20,r2
 80120c8:	80027c00 	call	80027c0 <__mulsi3>
 80120cc:	b009883a 	mov	r4,r22
 80120d0:	b80b883a 	mov	r5,r23
 80120d4:	102b883a 	mov	r21,r2
 80120d8:	80027c00 	call	80027c0 <__mulsi3>
 80120dc:	da400417 	ldw	r9,16(sp)
 80120e0:	a085883a 	add	r2,r20,r2
 80120e4:	d8c00517 	ldw	r3,20(sp)
 80120e8:	4808d43a 	srli	r4,r9,16
 80120ec:	d9800717 	ldw	r6,28(sp)
 80120f0:	da000617 	ldw	r8,24(sp)
 80120f4:	1109883a 	add	r4,r2,r4
 80120f8:	2500022e 	bgeu	r4,r20,8012104 <__muldf3+0x440>
 80120fc:	00800074 	movhi	r2,1
 8012100:	a8ab883a 	add	r21,r21,r2
 8012104:	200e943a 	slli	r7,r4,16
 8012108:	2004d43a 	srli	r2,r4,16
 801210c:	802ed43a 	srli	r23,r16,16
 8012110:	843fffcc 	andi	r16,r16,65535
 8012114:	4d3fffcc 	andi	r20,r9,65535
 8012118:	9009883a 	mov	r4,r18
 801211c:	800b883a 	mov	r5,r16
 8012120:	3d29883a 	add	r20,r7,r20
 8012124:	d8c00515 	stw	r3,20(sp)
 8012128:	d9800715 	stw	r6,28(sp)
 801212c:	da000615 	stw	r8,24(sp)
 8012130:	a8ab883a 	add	r21,r21,r2
 8012134:	80027c00 	call	80027c0 <__mulsi3>
 8012138:	9009883a 	mov	r4,r18
 801213c:	b80b883a 	mov	r5,r23
 8012140:	d8800315 	stw	r2,12(sp)
 8012144:	80027c00 	call	80027c0 <__mulsi3>
 8012148:	e009883a 	mov	r4,fp
 801214c:	b80b883a 	mov	r5,r23
 8012150:	1025883a 	mov	r18,r2
 8012154:	80027c00 	call	80027c0 <__mulsi3>
 8012158:	e009883a 	mov	r4,fp
 801215c:	800b883a 	mov	r5,r16
 8012160:	d8800215 	stw	r2,8(sp)
 8012164:	80027c00 	call	80027c0 <__mulsi3>
 8012168:	da800317 	ldw	r10,12(sp)
 801216c:	d9400017 	ldw	r5,0(sp)
 8012170:	9085883a 	add	r2,r18,r2
 8012174:	5008d43a 	srli	r4,r10,16
 8012178:	a153883a 	add	r9,r20,r5
 801217c:	d8c00517 	ldw	r3,20(sp)
 8012180:	1109883a 	add	r4,r2,r4
 8012184:	d9800717 	ldw	r6,28(sp)
 8012188:	da000617 	ldw	r8,24(sp)
 801218c:	dac00217 	ldw	r11,8(sp)
 8012190:	2480022e 	bgeu	r4,r18,801219c <__muldf3+0x4d8>
 8012194:	00800074 	movhi	r2,1
 8012198:	5897883a 	add	r11,r11,r2
 801219c:	200e943a 	slli	r7,r4,16
 80121a0:	2038d43a 	srli	fp,r4,16
 80121a4:	52bfffcc 	andi	r10,r10,65535
 80121a8:	3a8f883a 	add	r7,r7,r10
 80121ac:	8809883a 	mov	r4,r17
 80121b0:	800b883a 	mov	r5,r16
 80121b4:	d8c00515 	stw	r3,20(sp)
 80121b8:	d9800715 	stw	r6,28(sp)
 80121bc:	d9c00215 	stw	r7,8(sp)
 80121c0:	da000615 	stw	r8,24(sp)
 80121c4:	da400415 	stw	r9,16(sp)
 80121c8:	5f39883a 	add	fp,r11,fp
 80121cc:	80027c00 	call	80027c0 <__mulsi3>
 80121d0:	8809883a 	mov	r4,r17
 80121d4:	b80b883a 	mov	r5,r23
 80121d8:	1025883a 	mov	r18,r2
 80121dc:	80027c00 	call	80027c0 <__mulsi3>
 80121e0:	b009883a 	mov	r4,r22
 80121e4:	b80b883a 	mov	r5,r23
 80121e8:	d8800315 	stw	r2,12(sp)
 80121ec:	80027c00 	call	80027c0 <__mulsi3>
 80121f0:	b009883a 	mov	r4,r22
 80121f4:	800b883a 	mov	r5,r16
 80121f8:	1023883a 	mov	r17,r2
 80121fc:	80027c00 	call	80027c0 <__mulsi3>
 8012200:	da800317 	ldw	r10,12(sp)
 8012204:	9008d43a 	srli	r4,r18,16
 8012208:	d8c00517 	ldw	r3,20(sp)
 801220c:	5085883a 	add	r2,r10,r2
 8012210:	1109883a 	add	r4,r2,r4
 8012214:	d9800717 	ldw	r6,28(sp)
 8012218:	d9c00217 	ldw	r7,8(sp)
 801221c:	da000617 	ldw	r8,24(sp)
 8012220:	da400417 	ldw	r9,16(sp)
 8012224:	2280022e 	bgeu	r4,r10,8012230 <__muldf3+0x56c>
 8012228:	00800074 	movhi	r2,1
 801222c:	88a3883a 	add	r17,r17,r2
 8012230:	2004943a 	slli	r2,r4,16
 8012234:	94bfffcc 	andi	r18,r18,65535
 8012238:	4ce7883a 	add	r19,r9,r19
 801223c:	14a5883a 	add	r18,r2,r18
 8012240:	9d29803a 	cmpltu	r20,r19,r20
 8012244:	9565883a 	add	r18,r18,r21
 8012248:	9505883a 	add	r2,r18,r20
 801224c:	99e7883a 	add	r19,r19,r7
 8012250:	99cf803a 	cmpltu	r7,r19,r7
 8012254:	e08b883a 	add	r5,fp,r2
 8012258:	2008d43a 	srli	r4,r4,16
 801225c:	29ef883a 	add	r23,r5,r7
 8012260:	1529803a 	cmpltu	r20,r2,r20
 8012264:	956b803a 	cmpltu	r21,r18,r21
 8012268:	b9cf803a 	cmpltu	r7,r23,r7
 801226c:	a564b03a 	or	r18,r20,r21
 8012270:	2f39803a 	cmpltu	fp,r5,fp
 8012274:	9125883a 	add	r18,r18,r4
 8012278:	3f38b03a 	or	fp,r7,fp
 801227c:	9725883a 	add	r18,r18,fp
 8012280:	9804927a 	slli	r2,r19,9
 8012284:	9463883a 	add	r17,r18,r17
 8012288:	d9000117 	ldw	r4,4(sp)
 801228c:	b820d5fa 	srli	r16,r23,23
 8012290:	8822927a 	slli	r17,r17,9
 8012294:	9826d5fa 	srli	r19,r19,23
 8012298:	1104b03a 	or	r2,r2,r4
 801229c:	b82e927a 	slli	r23,r23,9
 80122a0:	1004c03a 	cmpne	r2,r2,zero
 80122a4:	8c20b03a 	or	r16,r17,r16
 80122a8:	14e6b03a 	or	r19,r2,r19
 80122ac:	8080402c 	andhi	r2,r16,256
 80122b0:	9deeb03a 	or	r23,r19,r23
 80122b4:	10000726 	beq	r2,zero,80122d4 <__muldf3+0x610>
 80122b8:	b804d07a 	srli	r2,r23,1
 80122bc:	800697fa 	slli	r3,r16,31
 80122c0:	bdc0004c 	andi	r23,r23,1
 80122c4:	8020d07a 	srli	r16,r16,1
 80122c8:	b8aeb03a 	or	r23,r23,r2
 80122cc:	b8eeb03a 	or	r23,r23,r3
 80122d0:	4007883a 	mov	r3,r8
 80122d4:	1900ffc4 	addi	r4,r3,1023
 80122d8:	01004d0e 	bge	zero,r4,8012410 <__muldf3+0x74c>
 80122dc:	b88001cc 	andi	r2,r23,7
 80122e0:	10000726 	beq	r2,zero,8012300 <__muldf3+0x63c>
 80122e4:	b94003cc 	andi	r5,r23,15
 80122e8:	00800104 	movi	r2,4
 80122ec:	28800426 	beq	r5,r2,8012300 <__muldf3+0x63c>
 80122f0:	b885883a 	add	r2,r23,r2
 80122f4:	15ef803a 	cmpltu	r23,r2,r23
 80122f8:	85e1883a 	add	r16,r16,r23
 80122fc:	102f883a 	mov	r23,r2
 8012300:	8080402c 	andhi	r2,r16,256
 8012304:	10000426 	beq	r2,zero,8012318 <__muldf3+0x654>
 8012308:	00bfc034 	movhi	r2,65280
 801230c:	10bfffc4 	addi	r2,r2,-1
 8012310:	19010004 	addi	r4,r3,1024
 8012314:	80a0703a 	and	r16,r16,r2
 8012318:	0081ff84 	movi	r2,2046
 801231c:	1100340e 	bge	r2,r4,80123f0 <__muldf3+0x72c>
 8012320:	34c0004c 	andi	r19,r6,1
 8012324:	0101ffc4 	movi	r4,2047
 8012328:	0021883a 	mov	r16,zero
 801232c:	002f883a 	mov	r23,zero
 8012330:	003ebe06 	br	8011e2c <__alt_data_end+0xfc011e2c>
 8012334:	8080022c 	andhi	r2,r16,8
 8012338:	10000926 	beq	r2,zero,8012360 <__muldf3+0x69c>
 801233c:	8880022c 	andhi	r2,r17,8
 8012340:	1000071e 	bne	r2,zero,8012360 <__muldf3+0x69c>
 8012344:	00800434 	movhi	r2,16
 8012348:	8c000234 	orhi	r16,r17,8
 801234c:	10bfffc4 	addi	r2,r2,-1
 8012350:	b027883a 	mov	r19,r22
 8012354:	80a0703a 	and	r16,r16,r2
 8012358:	902f883a 	mov	r23,r18
 801235c:	003f1a06 	br	8011fc8 <__alt_data_end+0xfc011fc8>
 8012360:	00800434 	movhi	r2,16
 8012364:	84000234 	orhi	r16,r16,8
 8012368:	10bfffc4 	addi	r2,r2,-1
 801236c:	80a0703a 	and	r16,r16,r2
 8012370:	003f1506 	br	8011fc8 <__alt_data_end+0xfc011fc8>
 8012374:	3009883a 	mov	r4,r6
 8012378:	d9400215 	stw	r5,8(sp)
 801237c:	d9800715 	stw	r6,28(sp)
 8012380:	da400415 	stw	r9,16(sp)
 8012384:	da800315 	stw	r10,12(sp)
 8012388:	8012ffc0 	call	8012ffc <__clzsi2>
 801238c:	10c00804 	addi	r3,r2,32
 8012390:	010009c4 	movi	r4,39
 8012394:	d9400217 	ldw	r5,8(sp)
 8012398:	d9800717 	ldw	r6,28(sp)
 801239c:	da400417 	ldw	r9,16(sp)
 80123a0:	da800317 	ldw	r10,12(sp)
 80123a4:	20fee20e 	bge	r4,r3,8011f30 <__alt_data_end+0xfc011f30>
 80123a8:	147ffe04 	addi	r17,r2,-8
 80123ac:	9462983a 	sll	r17,r18,r17
 80123b0:	0025883a 	mov	r18,zero
 80123b4:	003ee506 	br	8011f4c <__alt_data_end+0xfc011f4c>
 80123b8:	d9800715 	stw	r6,28(sp)
 80123bc:	d9c00215 	stw	r7,8(sp)
 80123c0:	da400415 	stw	r9,16(sp)
 80123c4:	8012ffc0 	call	8012ffc <__clzsi2>
 80123c8:	10c00804 	addi	r3,r2,32
 80123cc:	010009c4 	movi	r4,39
 80123d0:	d9800717 	ldw	r6,28(sp)
 80123d4:	d9c00217 	ldw	r7,8(sp)
 80123d8:	da400417 	ldw	r9,16(sp)
 80123dc:	20feb40e 	bge	r4,r3,8011eb0 <__alt_data_end+0xfc011eb0>
 80123e0:	143ffe04 	addi	r16,r2,-8
 80123e4:	9420983a 	sll	r16,r18,r16
 80123e8:	002f883a 	mov	r23,zero
 80123ec:	003eb706 	br	8011ecc <__alt_data_end+0xfc011ecc>
 80123f0:	8004977a 	slli	r2,r16,29
 80123f4:	b82ed0fa 	srli	r23,r23,3
 80123f8:	8020927a 	slli	r16,r16,9
 80123fc:	2101ffcc 	andi	r4,r4,2047
 8012400:	15eeb03a 	or	r23,r2,r23
 8012404:	8020d33a 	srli	r16,r16,12
 8012408:	34c0004c 	andi	r19,r6,1
 801240c:	003e8706 	br	8011e2c <__alt_data_end+0xfc011e2c>
 8012410:	00bf0084 	movi	r2,-1022
 8012414:	10c5c83a 	sub	r2,r2,r3
 8012418:	01000e04 	movi	r4,56
 801241c:	2080080e 	bge	r4,r2,8012440 <__muldf3+0x77c>
 8012420:	34c0004c 	andi	r19,r6,1
 8012424:	0009883a 	mov	r4,zero
 8012428:	0021883a 	mov	r16,zero
 801242c:	002f883a 	mov	r23,zero
 8012430:	003e7e06 	br	8011e2c <__alt_data_end+0xfc011e2c>
 8012434:	4007883a 	mov	r3,r8
 8012438:	480d883a 	mov	r6,r9
 801243c:	003fa506 	br	80122d4 <__alt_data_end+0xfc0122d4>
 8012440:	010007c4 	movi	r4,31
 8012444:	20801816 	blt	r4,r2,80124a8 <__muldf3+0x7e4>
 8012448:	18c10784 	addi	r3,r3,1054
 801244c:	80c8983a 	sll	r4,r16,r3
 8012450:	b88ad83a 	srl	r5,r23,r2
 8012454:	b8c6983a 	sll	r3,r23,r3
 8012458:	80a0d83a 	srl	r16,r16,r2
 801245c:	2908b03a 	or	r4,r5,r4
 8012460:	1804c03a 	cmpne	r2,r3,zero
 8012464:	2088b03a 	or	r4,r4,r2
 8012468:	208001cc 	andi	r2,r4,7
 801246c:	10000726 	beq	r2,zero,801248c <__muldf3+0x7c8>
 8012470:	20c003cc 	andi	r3,r4,15
 8012474:	00800104 	movi	r2,4
 8012478:	18800426 	beq	r3,r2,801248c <__muldf3+0x7c8>
 801247c:	20c00104 	addi	r3,r4,4
 8012480:	1905803a 	cmpltu	r2,r3,r4
 8012484:	80a1883a 	add	r16,r16,r2
 8012488:	1809883a 	mov	r4,r3
 801248c:	8080202c 	andhi	r2,r16,128
 8012490:	10001b26 	beq	r2,zero,8012500 <__muldf3+0x83c>
 8012494:	34c0004c 	andi	r19,r6,1
 8012498:	01000044 	movi	r4,1
 801249c:	0021883a 	mov	r16,zero
 80124a0:	002f883a 	mov	r23,zero
 80124a4:	003e6106 	br	8011e2c <__alt_data_end+0xfc011e2c>
 80124a8:	013ef884 	movi	r4,-1054
 80124ac:	20c9c83a 	sub	r4,r4,r3
 80124b0:	01400804 	movi	r5,32
 80124b4:	8108d83a 	srl	r4,r16,r4
 80124b8:	11401526 	beq	r2,r5,8012510 <__muldf3+0x84c>
 80124bc:	18c10f84 	addi	r3,r3,1086
 80124c0:	80e0983a 	sll	r16,r16,r3
 80124c4:	85eeb03a 	or	r23,r16,r23
 80124c8:	b804c03a 	cmpne	r2,r23,zero
 80124cc:	1108b03a 	or	r4,r2,r4
 80124d0:	20c001cc 	andi	r3,r4,7
 80124d4:	1800061e 	bne	r3,zero,80124f0 <__muldf3+0x82c>
 80124d8:	0021883a 	mov	r16,zero
 80124dc:	202ed0fa 	srli	r23,r4,3
 80124e0:	34c0004c 	andi	r19,r6,1
 80124e4:	0009883a 	mov	r4,zero
 80124e8:	b8eeb03a 	or	r23,r23,r3
 80124ec:	003e4f06 	br	8011e2c <__alt_data_end+0xfc011e2c>
 80124f0:	20c003cc 	andi	r3,r4,15
 80124f4:	00800104 	movi	r2,4
 80124f8:	0021883a 	mov	r16,zero
 80124fc:	18bfdf1e 	bne	r3,r2,801247c <__alt_data_end+0xfc01247c>
 8012500:	8004927a 	slli	r2,r16,9
 8012504:	8006977a 	slli	r3,r16,29
 8012508:	1020d33a 	srli	r16,r2,12
 801250c:	003ff306 	br	80124dc <__alt_data_end+0xfc0124dc>
 8012510:	0021883a 	mov	r16,zero
 8012514:	003feb06 	br	80124c4 <__alt_data_end+0xfc0124c4>
 8012518:	00800434 	movhi	r2,16
 801251c:	84000234 	orhi	r16,r16,8
 8012520:	10bfffc4 	addi	r2,r2,-1
 8012524:	4cc0004c 	andi	r19,r9,1
 8012528:	80a0703a 	and	r16,r16,r2
 801252c:	003ea606 	br	8011fc8 <__alt_data_end+0xfc011fc8>

08012530 <__subdf3>:
 8012530:	00c00434 	movhi	r3,16
 8012534:	18ffffc4 	addi	r3,r3,-1
 8012538:	defffb04 	addi	sp,sp,-20
 801253c:	28d2703a 	and	r9,r5,r3
 8012540:	3814d53a 	srli	r10,r7,20
 8012544:	38c6703a 	and	r3,r7,r3
 8012548:	3004d77a 	srli	r2,r6,29
 801254c:	dc800215 	stw	r18,8(sp)
 8012550:	dc000015 	stw	r16,0(sp)
 8012554:	2824d7fa 	srli	r18,r5,31
 8012558:	2820d53a 	srli	r16,r5,20
 801255c:	481290fa 	slli	r9,r9,3
 8012560:	200ad77a 	srli	r5,r4,29
 8012564:	180690fa 	slli	r3,r3,3
 8012568:	dc400115 	stw	r17,4(sp)
 801256c:	dfc00415 	stw	ra,16(sp)
 8012570:	202290fa 	slli	r17,r4,3
 8012574:	dcc00315 	stw	r19,12(sp)
 8012578:	5281ffcc 	andi	r10,r10,2047
 801257c:	0101ffc4 	movi	r4,2047
 8012580:	9011883a 	mov	r8,r18
 8012584:	8401ffcc 	andi	r16,r16,2047
 8012588:	94803fcc 	andi	r18,r18,255
 801258c:	494ab03a 	or	r5,r9,r5
 8012590:	380ed7fa 	srli	r7,r7,31
 8012594:	1886b03a 	or	r3,r3,r2
 8012598:	300c90fa 	slli	r6,r6,3
 801259c:	51009026 	beq	r10,r4,80127e0 <__subdf3+0x2b0>
 80125a0:	39c0005c 	xori	r7,r7,1
 80125a4:	8285c83a 	sub	r2,r16,r10
 80125a8:	91c06f26 	beq	r18,r7,8012768 <__subdf3+0x238>
 80125ac:	0080b10e 	bge	zero,r2,8012874 <__subdf3+0x344>
 80125b0:	50002a1e 	bne	r10,zero,801265c <__subdf3+0x12c>
 80125b4:	1988b03a 	or	r4,r3,r6
 80125b8:	2000941e 	bne	r4,zero,801280c <__subdf3+0x2dc>
 80125bc:	888001cc 	andi	r2,r17,7
 80125c0:	10005b26 	beq	r2,zero,8012730 <__subdf3+0x200>
 80125c4:	88c003cc 	andi	r3,r17,15
 80125c8:	00800104 	movi	r2,4
 80125cc:	18805826 	beq	r3,r2,8012730 <__subdf3+0x200>
 80125d0:	88c00104 	addi	r3,r17,4
 80125d4:	1c63803a 	cmpltu	r17,r3,r17
 80125d8:	2c4b883a 	add	r5,r5,r17
 80125dc:	2880202c 	andhi	r2,r5,128
 80125e0:	9200004c 	andi	r8,r18,1
 80125e4:	1823883a 	mov	r17,r3
 80125e8:	10005426 	beq	r2,zero,801273c <__subdf3+0x20c>
 80125ec:	84000044 	addi	r16,r16,1
 80125f0:	0081ffc4 	movi	r2,2047
 80125f4:	8080bf26 	beq	r16,r2,80128f4 <__subdf3+0x3c4>
 80125f8:	013fe034 	movhi	r4,65408
 80125fc:	213fffc4 	addi	r4,r4,-1
 8012600:	290a703a 	and	r5,r5,r4
 8012604:	2804977a 	slli	r2,r5,29
 8012608:	280a927a 	slli	r5,r5,9
 801260c:	8822d0fa 	srli	r17,r17,3
 8012610:	8401ffcc 	andi	r16,r16,2047
 8012614:	2808d33a 	srli	r4,r5,12
 8012618:	1444b03a 	or	r2,r2,r17
 801261c:	8401ffcc 	andi	r16,r16,2047
 8012620:	800a953a 	slli	r5,r16,20
 8012624:	40c03fcc 	andi	r3,r8,255
 8012628:	04000434 	movhi	r16,16
 801262c:	180697fa 	slli	r3,r3,31
 8012630:	843fffc4 	addi	r16,r16,-1
 8012634:	2420703a 	and	r16,r4,r16
 8012638:	8160b03a 	or	r16,r16,r5
 801263c:	80c6b03a 	or	r3,r16,r3
 8012640:	dfc00417 	ldw	ra,16(sp)
 8012644:	dcc00317 	ldw	r19,12(sp)
 8012648:	dc800217 	ldw	r18,8(sp)
 801264c:	dc400117 	ldw	r17,4(sp)
 8012650:	dc000017 	ldw	r16,0(sp)
 8012654:	dec00504 	addi	sp,sp,20
 8012658:	f800283a 	ret
 801265c:	0101ffc4 	movi	r4,2047
 8012660:	813fd626 	beq	r16,r4,80125bc <__alt_data_end+0xfc0125bc>
 8012664:	18c02034 	orhi	r3,r3,128
 8012668:	01000e04 	movi	r4,56
 801266c:	2080a416 	blt	r4,r2,8012900 <__subdf3+0x3d0>
 8012670:	010007c4 	movi	r4,31
 8012674:	2080c716 	blt	r4,r2,8012994 <__subdf3+0x464>
 8012678:	01000804 	movi	r4,32
 801267c:	2089c83a 	sub	r4,r4,r2
 8012680:	1910983a 	sll	r8,r3,r4
 8012684:	308ed83a 	srl	r7,r6,r2
 8012688:	3108983a 	sll	r4,r6,r4
 801268c:	1884d83a 	srl	r2,r3,r2
 8012690:	41ccb03a 	or	r6,r8,r7
 8012694:	2008c03a 	cmpne	r4,r4,zero
 8012698:	310cb03a 	or	r6,r6,r4
 801269c:	898dc83a 	sub	r6,r17,r6
 80126a0:	89a3803a 	cmpltu	r17,r17,r6
 80126a4:	288bc83a 	sub	r5,r5,r2
 80126a8:	2c4bc83a 	sub	r5,r5,r17
 80126ac:	3023883a 	mov	r17,r6
 80126b0:	2880202c 	andhi	r2,r5,128
 80126b4:	10006b26 	beq	r2,zero,8012864 <__subdf3+0x334>
 80126b8:	04c02034 	movhi	r19,128
 80126bc:	9cffffc4 	addi	r19,r19,-1
 80126c0:	2ce6703a 	and	r19,r5,r19
 80126c4:	98007c26 	beq	r19,zero,80128b8 <__subdf3+0x388>
 80126c8:	9809883a 	mov	r4,r19
 80126cc:	8012ffc0 	call	8012ffc <__clzsi2>
 80126d0:	10fffe04 	addi	r3,r2,-8
 80126d4:	010007c4 	movi	r4,31
 80126d8:	20c07d16 	blt	r4,r3,80128d0 <__subdf3+0x3a0>
 80126dc:	01400a04 	movi	r5,40
 80126e0:	2885c83a 	sub	r2,r5,r2
 80126e4:	888ad83a 	srl	r5,r17,r2
 80126e8:	98e6983a 	sll	r19,r19,r3
 80126ec:	88e2983a 	sll	r17,r17,r3
 80126f0:	2ce6b03a 	or	r19,r5,r19
 80126f4:	1c007a16 	blt	r3,r16,80128e0 <__subdf3+0x3b0>
 80126f8:	1c21c83a 	sub	r16,r3,r16
 80126fc:	81400044 	addi	r5,r16,1
 8012700:	00c007c4 	movi	r3,31
 8012704:	19409616 	blt	r3,r5,8012960 <__subdf3+0x430>
 8012708:	1c21c83a 	sub	r16,r3,r16
 801270c:	8c08983a 	sll	r4,r17,r16
 8012710:	8946d83a 	srl	r3,r17,r5
 8012714:	9c20983a 	sll	r16,r19,r16
 8012718:	2008c03a 	cmpne	r4,r4,zero
 801271c:	994ad83a 	srl	r5,r19,r5
 8012720:	1c06b03a 	or	r3,r3,r16
 8012724:	1922b03a 	or	r17,r3,r4
 8012728:	0021883a 	mov	r16,zero
 801272c:	003fa306 	br	80125bc <__alt_data_end+0xfc0125bc>
 8012730:	2880202c 	andhi	r2,r5,128
 8012734:	9200004c 	andi	r8,r18,1
 8012738:	103fac1e 	bne	r2,zero,80125ec <__alt_data_end+0xfc0125ec>
 801273c:	2804977a 	slli	r2,r5,29
 8012740:	8822d0fa 	srli	r17,r17,3
 8012744:	00c1ffc4 	movi	r3,2047
 8012748:	280ad0fa 	srli	r5,r5,3
 801274c:	1444b03a 	or	r2,r2,r17
 8012750:	80c02726 	beq	r16,r3,80127f0 <__subdf3+0x2c0>
 8012754:	01000434 	movhi	r4,16
 8012758:	213fffc4 	addi	r4,r4,-1
 801275c:	80e0703a 	and	r16,r16,r3
 8012760:	2908703a 	and	r4,r5,r4
 8012764:	003fad06 	br	801261c <__alt_data_end+0xfc01261c>
 8012768:	0080690e 	bge	zero,r2,8012910 <__subdf3+0x3e0>
 801276c:	50002f26 	beq	r10,zero,801282c <__subdf3+0x2fc>
 8012770:	0101ffc4 	movi	r4,2047
 8012774:	813f9126 	beq	r16,r4,80125bc <__alt_data_end+0xfc0125bc>
 8012778:	18c02034 	orhi	r3,r3,128
 801277c:	01000e04 	movi	r4,56
 8012780:	2080b00e 	bge	r4,r2,8012a44 <__subdf3+0x514>
 8012784:	198cb03a 	or	r6,r3,r6
 8012788:	300ec03a 	cmpne	r7,r6,zero
 801278c:	0005883a 	mov	r2,zero
 8012790:	3c4f883a 	add	r7,r7,r17
 8012794:	3c63803a 	cmpltu	r17,r7,r17
 8012798:	114b883a 	add	r5,r2,r5
 801279c:	2c4b883a 	add	r5,r5,r17
 80127a0:	3823883a 	mov	r17,r7
 80127a4:	2880202c 	andhi	r2,r5,128
 80127a8:	10002e26 	beq	r2,zero,8012864 <__subdf3+0x334>
 80127ac:	84000044 	addi	r16,r16,1
 80127b0:	0081ffc4 	movi	r2,2047
 80127b4:	8080de26 	beq	r16,r2,8012b30 <__subdf3+0x600>
 80127b8:	00bfe034 	movhi	r2,65408
 80127bc:	10bfffc4 	addi	r2,r2,-1
 80127c0:	288a703a 	and	r5,r5,r2
 80127c4:	880cd07a 	srli	r6,r17,1
 80127c8:	280897fa 	slli	r4,r5,31
 80127cc:	88c0004c 	andi	r3,r17,1
 80127d0:	30e2b03a 	or	r17,r6,r3
 80127d4:	280ad07a 	srli	r5,r5,1
 80127d8:	8922b03a 	or	r17,r17,r4
 80127dc:	003f7706 	br	80125bc <__alt_data_end+0xfc0125bc>
 80127e0:	1984b03a 	or	r2,r3,r6
 80127e4:	103f6e26 	beq	r2,zero,80125a0 <__alt_data_end+0xfc0125a0>
 80127e8:	39c03fcc 	andi	r7,r7,255
 80127ec:	003f6d06 	br	80125a4 <__alt_data_end+0xfc0125a4>
 80127f0:	1146b03a 	or	r3,r2,r5
 80127f4:	18003f26 	beq	r3,zero,80128f4 <__subdf3+0x3c4>
 80127f8:	00c00434 	movhi	r3,16
 80127fc:	29000234 	orhi	r4,r5,8
 8012800:	18ffffc4 	addi	r3,r3,-1
 8012804:	20c8703a 	and	r4,r4,r3
 8012808:	003f8406 	br	801261c <__alt_data_end+0xfc01261c>
 801280c:	10bfffc4 	addi	r2,r2,-1
 8012810:	1000501e 	bne	r2,zero,8012954 <__subdf3+0x424>
 8012814:	898fc83a 	sub	r7,r17,r6
 8012818:	89e3803a 	cmpltu	r17,r17,r7
 801281c:	28cbc83a 	sub	r5,r5,r3
 8012820:	2c4bc83a 	sub	r5,r5,r17
 8012824:	3823883a 	mov	r17,r7
 8012828:	003fa106 	br	80126b0 <__alt_data_end+0xfc0126b0>
 801282c:	1988b03a 	or	r4,r3,r6
 8012830:	203f6226 	beq	r4,zero,80125bc <__alt_data_end+0xfc0125bc>
 8012834:	10bfffc4 	addi	r2,r2,-1
 8012838:	10009b1e 	bne	r2,zero,8012aa8 <__subdf3+0x578>
 801283c:	344d883a 	add	r6,r6,r17
 8012840:	3463803a 	cmpltu	r17,r6,r17
 8012844:	194b883a 	add	r5,r3,r5
 8012848:	2c4b883a 	add	r5,r5,r17
 801284c:	3023883a 	mov	r17,r6
 8012850:	003fd406 	br	80127a4 <__alt_data_end+0xfc0127a4>
 8012854:	1106b03a 	or	r3,r2,r4
 8012858:	1800b426 	beq	r3,zero,8012b2c <__subdf3+0x5fc>
 801285c:	100b883a 	mov	r5,r2
 8012860:	2023883a 	mov	r17,r4
 8012864:	888001cc 	andi	r2,r17,7
 8012868:	103f561e 	bne	r2,zero,80125c4 <__alt_data_end+0xfc0125c4>
 801286c:	9200004c 	andi	r8,r18,1
 8012870:	003fb206 	br	801273c <__alt_data_end+0xfc01273c>
 8012874:	1000531e 	bne	r2,zero,80129c4 <__subdf3+0x494>
 8012878:	80800044 	addi	r2,r16,1
 801287c:	1081ffcc 	andi	r2,r2,2047
 8012880:	01000044 	movi	r4,1
 8012884:	2080a00e 	bge	r4,r2,8012b08 <__subdf3+0x5d8>
 8012888:	8985c83a 	sub	r2,r17,r6
 801288c:	8889803a 	cmpltu	r4,r17,r2
 8012890:	28e7c83a 	sub	r19,r5,r3
 8012894:	9927c83a 	sub	r19,r19,r4
 8012898:	9900202c 	andhi	r4,r19,128
 801289c:	20006226 	beq	r4,zero,8012a28 <__subdf3+0x4f8>
 80128a0:	3463c83a 	sub	r17,r6,r17
 80128a4:	194bc83a 	sub	r5,r3,r5
 80128a8:	344d803a 	cmpltu	r6,r6,r17
 80128ac:	29a7c83a 	sub	r19,r5,r6
 80128b0:	3825883a 	mov	r18,r7
 80128b4:	983f841e 	bne	r19,zero,80126c8 <__alt_data_end+0xfc0126c8>
 80128b8:	8809883a 	mov	r4,r17
 80128bc:	8012ffc0 	call	8012ffc <__clzsi2>
 80128c0:	10800804 	addi	r2,r2,32
 80128c4:	10fffe04 	addi	r3,r2,-8
 80128c8:	010007c4 	movi	r4,31
 80128cc:	20ff830e 	bge	r4,r3,80126dc <__alt_data_end+0xfc0126dc>
 80128d0:	14fff604 	addi	r19,r2,-40
 80128d4:	8ce6983a 	sll	r19,r17,r19
 80128d8:	0023883a 	mov	r17,zero
 80128dc:	1c3f860e 	bge	r3,r16,80126f8 <__alt_data_end+0xfc0126f8>
 80128e0:	017fe034 	movhi	r5,65408
 80128e4:	297fffc4 	addi	r5,r5,-1
 80128e8:	80e1c83a 	sub	r16,r16,r3
 80128ec:	994a703a 	and	r5,r19,r5
 80128f0:	003f3206 	br	80125bc <__alt_data_end+0xfc0125bc>
 80128f4:	0009883a 	mov	r4,zero
 80128f8:	0005883a 	mov	r2,zero
 80128fc:	003f4706 	br	801261c <__alt_data_end+0xfc01261c>
 8012900:	198cb03a 	or	r6,r3,r6
 8012904:	300cc03a 	cmpne	r6,r6,zero
 8012908:	0005883a 	mov	r2,zero
 801290c:	003f6306 	br	801269c <__alt_data_end+0xfc01269c>
 8012910:	10009d1e 	bne	r2,zero,8012b88 <__subdf3+0x658>
 8012914:	81c00044 	addi	r7,r16,1
 8012918:	3881ffcc 	andi	r2,r7,2047
 801291c:	02400044 	movi	r9,1
 8012920:	4880680e 	bge	r9,r2,8012ac4 <__subdf3+0x594>
 8012924:	0081ffc4 	movi	r2,2047
 8012928:	3880ae26 	beq	r7,r2,8012be4 <__subdf3+0x6b4>
 801292c:	344d883a 	add	r6,r6,r17
 8012930:	3463803a 	cmpltu	r17,r6,r17
 8012934:	194b883a 	add	r5,r3,r5
 8012938:	2c4b883a 	add	r5,r5,r17
 801293c:	282297fa 	slli	r17,r5,31
 8012940:	300cd07a 	srli	r6,r6,1
 8012944:	280ad07a 	srli	r5,r5,1
 8012948:	3821883a 	mov	r16,r7
 801294c:	89a2b03a 	or	r17,r17,r6
 8012950:	003f1a06 	br	80125bc <__alt_data_end+0xfc0125bc>
 8012954:	0101ffc4 	movi	r4,2047
 8012958:	813f431e 	bne	r16,r4,8012668 <__alt_data_end+0xfc012668>
 801295c:	003f1706 	br	80125bc <__alt_data_end+0xfc0125bc>
 8012960:	80bff844 	addi	r2,r16,-31
 8012964:	00c00804 	movi	r3,32
 8012968:	9884d83a 	srl	r2,r19,r2
 801296c:	28c05126 	beq	r5,r3,8012ab4 <__subdf3+0x584>
 8012970:	00c00fc4 	movi	r3,63
 8012974:	1c21c83a 	sub	r16,r3,r16
 8012978:	9c26983a 	sll	r19,r19,r16
 801297c:	9c62b03a 	or	r17,r19,r17
 8012980:	8822c03a 	cmpne	r17,r17,zero
 8012984:	88a2b03a 	or	r17,r17,r2
 8012988:	000b883a 	mov	r5,zero
 801298c:	0021883a 	mov	r16,zero
 8012990:	003fb406 	br	8012864 <__alt_data_end+0xfc012864>
 8012994:	113ff804 	addi	r4,r2,-32
 8012998:	01c00804 	movi	r7,32
 801299c:	1908d83a 	srl	r4,r3,r4
 80129a0:	11c04626 	beq	r2,r7,8012abc <__subdf3+0x58c>
 80129a4:	01c01004 	movi	r7,64
 80129a8:	3885c83a 	sub	r2,r7,r2
 80129ac:	1884983a 	sll	r2,r3,r2
 80129b0:	118cb03a 	or	r6,r2,r6
 80129b4:	300cc03a 	cmpne	r6,r6,zero
 80129b8:	310cb03a 	or	r6,r6,r4
 80129bc:	0005883a 	mov	r2,zero
 80129c0:	003f3606 	br	801269c <__alt_data_end+0xfc01269c>
 80129c4:	80002b26 	beq	r16,zero,8012a74 <__subdf3+0x544>
 80129c8:	0101ffc4 	movi	r4,2047
 80129cc:	51006926 	beq	r10,r4,8012b74 <__subdf3+0x644>
 80129d0:	0085c83a 	sub	r2,zero,r2
 80129d4:	29402034 	orhi	r5,r5,128
 80129d8:	01000e04 	movi	r4,56
 80129dc:	20807d16 	blt	r4,r2,8012bd4 <__subdf3+0x6a4>
 80129e0:	010007c4 	movi	r4,31
 80129e4:	2080d916 	blt	r4,r2,8012d4c <__subdf3+0x81c>
 80129e8:	01000804 	movi	r4,32
 80129ec:	2089c83a 	sub	r4,r4,r2
 80129f0:	2912983a 	sll	r9,r5,r4
 80129f4:	8890d83a 	srl	r8,r17,r2
 80129f8:	8908983a 	sll	r4,r17,r4
 80129fc:	2884d83a 	srl	r2,r5,r2
 8012a00:	4a22b03a 	or	r17,r9,r8
 8012a04:	2008c03a 	cmpne	r4,r4,zero
 8012a08:	8922b03a 	or	r17,r17,r4
 8012a0c:	3463c83a 	sub	r17,r6,r17
 8012a10:	1885c83a 	sub	r2,r3,r2
 8012a14:	344d803a 	cmpltu	r6,r6,r17
 8012a18:	118bc83a 	sub	r5,r2,r6
 8012a1c:	5021883a 	mov	r16,r10
 8012a20:	3825883a 	mov	r18,r7
 8012a24:	003f2206 	br	80126b0 <__alt_data_end+0xfc0126b0>
 8012a28:	9886b03a 	or	r3,r19,r2
 8012a2c:	18001c1e 	bne	r3,zero,8012aa0 <__subdf3+0x570>
 8012a30:	0011883a 	mov	r8,zero
 8012a34:	000b883a 	mov	r5,zero
 8012a38:	0023883a 	mov	r17,zero
 8012a3c:	0021883a 	mov	r16,zero
 8012a40:	003f3e06 	br	801273c <__alt_data_end+0xfc01273c>
 8012a44:	010007c4 	movi	r4,31
 8012a48:	20803c16 	blt	r4,r2,8012b3c <__subdf3+0x60c>
 8012a4c:	01000804 	movi	r4,32
 8012a50:	2089c83a 	sub	r4,r4,r2
 8012a54:	1912983a 	sll	r9,r3,r4
 8012a58:	308ed83a 	srl	r7,r6,r2
 8012a5c:	3108983a 	sll	r4,r6,r4
 8012a60:	1884d83a 	srl	r2,r3,r2
 8012a64:	49ceb03a 	or	r7,r9,r7
 8012a68:	2008c03a 	cmpne	r4,r4,zero
 8012a6c:	390eb03a 	or	r7,r7,r4
 8012a70:	003f4706 	br	8012790 <__alt_data_end+0xfc012790>
 8012a74:	2c48b03a 	or	r4,r5,r17
 8012a78:	20003e26 	beq	r4,zero,8012b74 <__subdf3+0x644>
 8012a7c:	0084303a 	nor	r2,zero,r2
 8012a80:	10003a1e 	bne	r2,zero,8012b6c <__subdf3+0x63c>
 8012a84:	3463c83a 	sub	r17,r6,r17
 8012a88:	194bc83a 	sub	r5,r3,r5
 8012a8c:	344d803a 	cmpltu	r6,r6,r17
 8012a90:	298bc83a 	sub	r5,r5,r6
 8012a94:	5021883a 	mov	r16,r10
 8012a98:	3825883a 	mov	r18,r7
 8012a9c:	003f0406 	br	80126b0 <__alt_data_end+0xfc0126b0>
 8012aa0:	1023883a 	mov	r17,r2
 8012aa4:	003f0706 	br	80126c4 <__alt_data_end+0xfc0126c4>
 8012aa8:	0101ffc4 	movi	r4,2047
 8012aac:	813f331e 	bne	r16,r4,801277c <__alt_data_end+0xfc01277c>
 8012ab0:	003ec206 	br	80125bc <__alt_data_end+0xfc0125bc>
 8012ab4:	0027883a 	mov	r19,zero
 8012ab8:	003fb006 	br	801297c <__alt_data_end+0xfc01297c>
 8012abc:	0005883a 	mov	r2,zero
 8012ac0:	003fbb06 	br	80129b0 <__alt_data_end+0xfc0129b0>
 8012ac4:	2c44b03a 	or	r2,r5,r17
 8012ac8:	80008b1e 	bne	r16,zero,8012cf8 <__subdf3+0x7c8>
 8012acc:	1000b526 	beq	r2,zero,8012da4 <__subdf3+0x874>
 8012ad0:	1984b03a 	or	r2,r3,r6
 8012ad4:	103eb926 	beq	r2,zero,80125bc <__alt_data_end+0xfc0125bc>
 8012ad8:	3449883a 	add	r4,r6,r17
 8012adc:	2463803a 	cmpltu	r17,r4,r17
 8012ae0:	194b883a 	add	r5,r3,r5
 8012ae4:	2c4b883a 	add	r5,r5,r17
 8012ae8:	2880202c 	andhi	r2,r5,128
 8012aec:	2023883a 	mov	r17,r4
 8012af0:	103f5c26 	beq	r2,zero,8012864 <__alt_data_end+0xfc012864>
 8012af4:	00bfe034 	movhi	r2,65408
 8012af8:	10bfffc4 	addi	r2,r2,-1
 8012afc:	4821883a 	mov	r16,r9
 8012b00:	288a703a 	and	r5,r5,r2
 8012b04:	003ead06 	br	80125bc <__alt_data_end+0xfc0125bc>
 8012b08:	2c44b03a 	or	r2,r5,r17
 8012b0c:	8000291e 	bne	r16,zero,8012bb4 <__subdf3+0x684>
 8012b10:	10004f1e 	bne	r2,zero,8012c50 <__subdf3+0x720>
 8012b14:	1984b03a 	or	r2,r3,r6
 8012b18:	10000426 	beq	r2,zero,8012b2c <__subdf3+0x5fc>
 8012b1c:	180b883a 	mov	r5,r3
 8012b20:	3023883a 	mov	r17,r6
 8012b24:	3825883a 	mov	r18,r7
 8012b28:	003ea406 	br	80125bc <__alt_data_end+0xfc0125bc>
 8012b2c:	0011883a 	mov	r8,zero
 8012b30:	000b883a 	mov	r5,zero
 8012b34:	0023883a 	mov	r17,zero
 8012b38:	003f0006 	br	801273c <__alt_data_end+0xfc01273c>
 8012b3c:	11fff804 	addi	r7,r2,-32
 8012b40:	19c8d83a 	srl	r4,r3,r7
 8012b44:	01c00804 	movi	r7,32
 8012b48:	11c07e26 	beq	r2,r7,8012d44 <__subdf3+0x814>
 8012b4c:	01c01004 	movi	r7,64
 8012b50:	3885c83a 	sub	r2,r7,r2
 8012b54:	1884983a 	sll	r2,r3,r2
 8012b58:	118cb03a 	or	r6,r2,r6
 8012b5c:	300ec03a 	cmpne	r7,r6,zero
 8012b60:	390eb03a 	or	r7,r7,r4
 8012b64:	0005883a 	mov	r2,zero
 8012b68:	003f0906 	br	8012790 <__alt_data_end+0xfc012790>
 8012b6c:	0101ffc4 	movi	r4,2047
 8012b70:	513f991e 	bne	r10,r4,80129d8 <__alt_data_end+0xfc0129d8>
 8012b74:	180b883a 	mov	r5,r3
 8012b78:	3023883a 	mov	r17,r6
 8012b7c:	5021883a 	mov	r16,r10
 8012b80:	3825883a 	mov	r18,r7
 8012b84:	003e8d06 	br	80125bc <__alt_data_end+0xfc0125bc>
 8012b88:	80001a1e 	bne	r16,zero,8012bf4 <__subdf3+0x6c4>
 8012b8c:	2c48b03a 	or	r4,r5,r17
 8012b90:	20005526 	beq	r4,zero,8012ce8 <__subdf3+0x7b8>
 8012b94:	0084303a 	nor	r2,zero,r2
 8012b98:	1000511e 	bne	r2,zero,8012ce0 <__subdf3+0x7b0>
 8012b9c:	89a3883a 	add	r17,r17,r6
 8012ba0:	194b883a 	add	r5,r3,r5
 8012ba4:	898d803a 	cmpltu	r6,r17,r6
 8012ba8:	298b883a 	add	r5,r5,r6
 8012bac:	5021883a 	mov	r16,r10
 8012bb0:	003efc06 	br	80127a4 <__alt_data_end+0xfc0127a4>
 8012bb4:	1000341e 	bne	r2,zero,8012c88 <__subdf3+0x758>
 8012bb8:	1984b03a 	or	r2,r3,r6
 8012bbc:	10006f26 	beq	r2,zero,8012d7c <__subdf3+0x84c>
 8012bc0:	180b883a 	mov	r5,r3
 8012bc4:	3023883a 	mov	r17,r6
 8012bc8:	3825883a 	mov	r18,r7
 8012bcc:	0401ffc4 	movi	r16,2047
 8012bd0:	003e7a06 	br	80125bc <__alt_data_end+0xfc0125bc>
 8012bd4:	2c62b03a 	or	r17,r5,r17
 8012bd8:	8822c03a 	cmpne	r17,r17,zero
 8012bdc:	0005883a 	mov	r2,zero
 8012be0:	003f8a06 	br	8012a0c <__alt_data_end+0xfc012a0c>
 8012be4:	3821883a 	mov	r16,r7
 8012be8:	000b883a 	mov	r5,zero
 8012bec:	0023883a 	mov	r17,zero
 8012bf0:	003ed206 	br	801273c <__alt_data_end+0xfc01273c>
 8012bf4:	0101ffc4 	movi	r4,2047
 8012bf8:	51003b26 	beq	r10,r4,8012ce8 <__subdf3+0x7b8>
 8012bfc:	0085c83a 	sub	r2,zero,r2
 8012c00:	29402034 	orhi	r5,r5,128
 8012c04:	01000e04 	movi	r4,56
 8012c08:	20806216 	blt	r4,r2,8012d94 <__subdf3+0x864>
 8012c0c:	010007c4 	movi	r4,31
 8012c10:	20806b16 	blt	r4,r2,8012dc0 <__subdf3+0x890>
 8012c14:	01000804 	movi	r4,32
 8012c18:	2089c83a 	sub	r4,r4,r2
 8012c1c:	2912983a 	sll	r9,r5,r4
 8012c20:	888ed83a 	srl	r7,r17,r2
 8012c24:	8908983a 	sll	r4,r17,r4
 8012c28:	2884d83a 	srl	r2,r5,r2
 8012c2c:	49e2b03a 	or	r17,r9,r7
 8012c30:	2008c03a 	cmpne	r4,r4,zero
 8012c34:	8922b03a 	or	r17,r17,r4
 8012c38:	89a3883a 	add	r17,r17,r6
 8012c3c:	10c5883a 	add	r2,r2,r3
 8012c40:	898d803a 	cmpltu	r6,r17,r6
 8012c44:	118b883a 	add	r5,r2,r6
 8012c48:	5021883a 	mov	r16,r10
 8012c4c:	003ed506 	br	80127a4 <__alt_data_end+0xfc0127a4>
 8012c50:	1984b03a 	or	r2,r3,r6
 8012c54:	103e5926 	beq	r2,zero,80125bc <__alt_data_end+0xfc0125bc>
 8012c58:	8989c83a 	sub	r4,r17,r6
 8012c5c:	8911803a 	cmpltu	r8,r17,r4
 8012c60:	28c5c83a 	sub	r2,r5,r3
 8012c64:	1205c83a 	sub	r2,r2,r8
 8012c68:	1200202c 	andhi	r8,r2,128
 8012c6c:	403ef926 	beq	r8,zero,8012854 <__alt_data_end+0xfc012854>
 8012c70:	3463c83a 	sub	r17,r6,r17
 8012c74:	194bc83a 	sub	r5,r3,r5
 8012c78:	344d803a 	cmpltu	r6,r6,r17
 8012c7c:	298bc83a 	sub	r5,r5,r6
 8012c80:	3825883a 	mov	r18,r7
 8012c84:	003e4d06 	br	80125bc <__alt_data_end+0xfc0125bc>
 8012c88:	1984b03a 	or	r2,r3,r6
 8012c8c:	10002b26 	beq	r2,zero,8012d3c <__subdf3+0x80c>
 8012c90:	2808d0fa 	srli	r4,r5,3
 8012c94:	8822d0fa 	srli	r17,r17,3
 8012c98:	280a977a 	slli	r5,r5,29
 8012c9c:	2080022c 	andhi	r2,r4,8
 8012ca0:	2c62b03a 	or	r17,r5,r17
 8012ca4:	10000826 	beq	r2,zero,8012cc8 <__subdf3+0x798>
 8012ca8:	1810d0fa 	srli	r8,r3,3
 8012cac:	4080022c 	andhi	r2,r8,8
 8012cb0:	1000051e 	bne	r2,zero,8012cc8 <__subdf3+0x798>
 8012cb4:	300cd0fa 	srli	r6,r6,3
 8012cb8:	1804977a 	slli	r2,r3,29
 8012cbc:	4009883a 	mov	r4,r8
 8012cc0:	3825883a 	mov	r18,r7
 8012cc4:	11a2b03a 	or	r17,r2,r6
 8012cc8:	880ad77a 	srli	r5,r17,29
 8012ccc:	200890fa 	slli	r4,r4,3
 8012cd0:	882290fa 	slli	r17,r17,3
 8012cd4:	0401ffc4 	movi	r16,2047
 8012cd8:	290ab03a 	or	r5,r5,r4
 8012cdc:	003e3706 	br	80125bc <__alt_data_end+0xfc0125bc>
 8012ce0:	0101ffc4 	movi	r4,2047
 8012ce4:	513fc71e 	bne	r10,r4,8012c04 <__alt_data_end+0xfc012c04>
 8012ce8:	180b883a 	mov	r5,r3
 8012cec:	3023883a 	mov	r17,r6
 8012cf0:	5021883a 	mov	r16,r10
 8012cf4:	003e3106 	br	80125bc <__alt_data_end+0xfc0125bc>
 8012cf8:	10002d26 	beq	r2,zero,8012db0 <__subdf3+0x880>
 8012cfc:	1984b03a 	or	r2,r3,r6
 8012d00:	10000e26 	beq	r2,zero,8012d3c <__subdf3+0x80c>
 8012d04:	2808d0fa 	srli	r4,r5,3
 8012d08:	8822d0fa 	srli	r17,r17,3
 8012d0c:	280a977a 	slli	r5,r5,29
 8012d10:	2080022c 	andhi	r2,r4,8
 8012d14:	2c62b03a 	or	r17,r5,r17
 8012d18:	103feb26 	beq	r2,zero,8012cc8 <__alt_data_end+0xfc012cc8>
 8012d1c:	180ed0fa 	srli	r7,r3,3
 8012d20:	3880022c 	andhi	r2,r7,8
 8012d24:	103fe81e 	bne	r2,zero,8012cc8 <__alt_data_end+0xfc012cc8>
 8012d28:	300cd0fa 	srli	r6,r6,3
 8012d2c:	1804977a 	slli	r2,r3,29
 8012d30:	3809883a 	mov	r4,r7
 8012d34:	11a2b03a 	or	r17,r2,r6
 8012d38:	003fe306 	br	8012cc8 <__alt_data_end+0xfc012cc8>
 8012d3c:	0401ffc4 	movi	r16,2047
 8012d40:	003e1e06 	br	80125bc <__alt_data_end+0xfc0125bc>
 8012d44:	0005883a 	mov	r2,zero
 8012d48:	003f8306 	br	8012b58 <__alt_data_end+0xfc012b58>
 8012d4c:	113ff804 	addi	r4,r2,-32
 8012d50:	02000804 	movi	r8,32
 8012d54:	2908d83a 	srl	r4,r5,r4
 8012d58:	12002526 	beq	r2,r8,8012df0 <__subdf3+0x8c0>
 8012d5c:	02001004 	movi	r8,64
 8012d60:	4085c83a 	sub	r2,r8,r2
 8012d64:	288a983a 	sll	r5,r5,r2
 8012d68:	2c62b03a 	or	r17,r5,r17
 8012d6c:	8822c03a 	cmpne	r17,r17,zero
 8012d70:	8922b03a 	or	r17,r17,r4
 8012d74:	0005883a 	mov	r2,zero
 8012d78:	003f2406 	br	8012a0c <__alt_data_end+0xfc012a0c>
 8012d7c:	01402034 	movhi	r5,128
 8012d80:	0011883a 	mov	r8,zero
 8012d84:	297fffc4 	addi	r5,r5,-1
 8012d88:	047ffe04 	movi	r17,-8
 8012d8c:	0401ffc4 	movi	r16,2047
 8012d90:	003e6a06 	br	801273c <__alt_data_end+0xfc01273c>
 8012d94:	2c62b03a 	or	r17,r5,r17
 8012d98:	8822c03a 	cmpne	r17,r17,zero
 8012d9c:	0005883a 	mov	r2,zero
 8012da0:	003fa506 	br	8012c38 <__alt_data_end+0xfc012c38>
 8012da4:	180b883a 	mov	r5,r3
 8012da8:	3023883a 	mov	r17,r6
 8012dac:	003e0306 	br	80125bc <__alt_data_end+0xfc0125bc>
 8012db0:	180b883a 	mov	r5,r3
 8012db4:	3023883a 	mov	r17,r6
 8012db8:	0401ffc4 	movi	r16,2047
 8012dbc:	003dff06 	br	80125bc <__alt_data_end+0xfc0125bc>
 8012dc0:	113ff804 	addi	r4,r2,-32
 8012dc4:	01c00804 	movi	r7,32
 8012dc8:	2908d83a 	srl	r4,r5,r4
 8012dcc:	11c00a26 	beq	r2,r7,8012df8 <__subdf3+0x8c8>
 8012dd0:	01c01004 	movi	r7,64
 8012dd4:	3885c83a 	sub	r2,r7,r2
 8012dd8:	288a983a 	sll	r5,r5,r2
 8012ddc:	2c62b03a 	or	r17,r5,r17
 8012de0:	8822c03a 	cmpne	r17,r17,zero
 8012de4:	8922b03a 	or	r17,r17,r4
 8012de8:	0005883a 	mov	r2,zero
 8012dec:	003f9206 	br	8012c38 <__alt_data_end+0xfc012c38>
 8012df0:	000b883a 	mov	r5,zero
 8012df4:	003fdc06 	br	8012d68 <__alt_data_end+0xfc012d68>
 8012df8:	000b883a 	mov	r5,zero
 8012dfc:	003ff706 	br	8012ddc <__alt_data_end+0xfc012ddc>

08012e00 <__fixdfsi>:
 8012e00:	2806d53a 	srli	r3,r5,20
 8012e04:	00800434 	movhi	r2,16
 8012e08:	10bfffc4 	addi	r2,r2,-1
 8012e0c:	18c1ffcc 	andi	r3,r3,2047
 8012e10:	0180ff84 	movi	r6,1022
 8012e14:	2884703a 	and	r2,r5,r2
 8012e18:	280ad7fa 	srli	r5,r5,31
 8012e1c:	30c0130e 	bge	r6,r3,8012e6c <__fixdfsi+0x6c>
 8012e20:	01810744 	movi	r6,1053
 8012e24:	30c00d16 	blt	r6,r3,8012e5c <__fixdfsi+0x5c>
 8012e28:	01810cc4 	movi	r6,1075
 8012e2c:	30cdc83a 	sub	r6,r6,r3
 8012e30:	01c007c4 	movi	r7,31
 8012e34:	10800434 	orhi	r2,r2,16
 8012e38:	39800e0e 	bge	r7,r6,8012e74 <__fixdfsi+0x74>
 8012e3c:	010104c4 	movi	r4,1043
 8012e40:	20c7c83a 	sub	r3,r4,r3
 8012e44:	10c6d83a 	srl	r3,r2,r3
 8012e48:	29403fcc 	andi	r5,r5,255
 8012e4c:	0145c83a 	sub	r2,zero,r5
 8012e50:	1884f03a 	xor	r2,r3,r2
 8012e54:	1145883a 	add	r2,r2,r5
 8012e58:	f800283a 	ret
 8012e5c:	00a00034 	movhi	r2,32768
 8012e60:	10bfffc4 	addi	r2,r2,-1
 8012e64:	2885883a 	add	r2,r5,r2
 8012e68:	f800283a 	ret
 8012e6c:	0005883a 	mov	r2,zero
 8012e70:	f800283a 	ret
 8012e74:	18fefb44 	addi	r3,r3,-1043
 8012e78:	2188d83a 	srl	r4,r4,r6
 8012e7c:	10c6983a 	sll	r3,r2,r3
 8012e80:	20c6b03a 	or	r3,r4,r3
 8012e84:	003ff006 	br	8012e48 <__alt_data_end+0xfc012e48>

08012e88 <__floatsidf>:
 8012e88:	defffd04 	addi	sp,sp,-12
 8012e8c:	dc400115 	stw	r17,4(sp)
 8012e90:	dfc00215 	stw	ra,8(sp)
 8012e94:	dc000015 	stw	r16,0(sp)
 8012e98:	2023883a 	mov	r17,r4
 8012e9c:	20001426 	beq	r4,zero,8012ef0 <__floatsidf+0x68>
 8012ea0:	2020d7fa 	srli	r16,r4,31
 8012ea4:	80000126 	beq	r16,zero,8012eac <__floatsidf+0x24>
 8012ea8:	0123c83a 	sub	r17,zero,r4
 8012eac:	8809883a 	mov	r4,r17
 8012eb0:	8012ffc0 	call	8012ffc <__clzsi2>
 8012eb4:	01410784 	movi	r5,1054
 8012eb8:	00c00284 	movi	r3,10
 8012ebc:	288bc83a 	sub	r5,r5,r2
 8012ec0:	18801c16 	blt	r3,r2,8012f34 <__floatsidf+0xac>
 8012ec4:	00c002c4 	movi	r3,11
 8012ec8:	1887c83a 	sub	r3,r3,r2
 8012ecc:	88c8d83a 	srl	r4,r17,r3
 8012ed0:	00c00434 	movhi	r3,16
 8012ed4:	18ffffc4 	addi	r3,r3,-1
 8012ed8:	10800544 	addi	r2,r2,21
 8012edc:	20c8703a 	and	r4,r4,r3
 8012ee0:	8884983a 	sll	r2,r17,r2
 8012ee4:	28c1ffcc 	andi	r3,r5,2047
 8012ee8:	800d883a 	mov	r6,r16
 8012eec:	00000406 	br	8012f00 <__floatsidf+0x78>
 8012ef0:	000d883a 	mov	r6,zero
 8012ef4:	0007883a 	mov	r3,zero
 8012ef8:	0009883a 	mov	r4,zero
 8012efc:	0005883a 	mov	r2,zero
 8012f00:	180a953a 	slli	r5,r3,20
 8012f04:	31803fcc 	andi	r6,r6,255
 8012f08:	00c00434 	movhi	r3,16
 8012f0c:	300c97fa 	slli	r6,r6,31
 8012f10:	18ffffc4 	addi	r3,r3,-1
 8012f14:	20c6703a 	and	r3,r4,r3
 8012f18:	1946b03a 	or	r3,r3,r5
 8012f1c:	1986b03a 	or	r3,r3,r6
 8012f20:	dfc00217 	ldw	ra,8(sp)
 8012f24:	dc400117 	ldw	r17,4(sp)
 8012f28:	dc000017 	ldw	r16,0(sp)
 8012f2c:	dec00304 	addi	sp,sp,12
 8012f30:	f800283a 	ret
 8012f34:	10fffd44 	addi	r3,r2,-11
 8012f38:	88c8983a 	sll	r4,r17,r3
 8012f3c:	00800434 	movhi	r2,16
 8012f40:	10bfffc4 	addi	r2,r2,-1
 8012f44:	2088703a 	and	r4,r4,r2
 8012f48:	28c1ffcc 	andi	r3,r5,2047
 8012f4c:	800d883a 	mov	r6,r16
 8012f50:	0005883a 	mov	r2,zero
 8012f54:	003fea06 	br	8012f00 <__alt_data_end+0xfc012f00>

08012f58 <__floatunsidf>:
 8012f58:	defffe04 	addi	sp,sp,-8
 8012f5c:	dc000015 	stw	r16,0(sp)
 8012f60:	dfc00115 	stw	ra,4(sp)
 8012f64:	2021883a 	mov	r16,r4
 8012f68:	20001026 	beq	r4,zero,8012fac <__floatunsidf+0x54>
 8012f6c:	8012ffc0 	call	8012ffc <__clzsi2>
 8012f70:	01410784 	movi	r5,1054
 8012f74:	100d883a 	mov	r6,r2
 8012f78:	288bc83a 	sub	r5,r5,r2
 8012f7c:	00800284 	movi	r2,10
 8012f80:	11801616 	blt	r2,r6,8012fdc <__floatunsidf+0x84>
 8012f84:	008002c4 	movi	r2,11
 8012f88:	1185c83a 	sub	r2,r2,r6
 8012f8c:	8084d83a 	srl	r2,r16,r2
 8012f90:	00c00434 	movhi	r3,16
 8012f94:	31c00544 	addi	r7,r6,21
 8012f98:	18ffffc4 	addi	r3,r3,-1
 8012f9c:	81e0983a 	sll	r16,r16,r7
 8012fa0:	10cc703a 	and	r6,r2,r3
 8012fa4:	2941ffcc 	andi	r5,r5,2047
 8012fa8:	00000206 	br	8012fb4 <__floatunsidf+0x5c>
 8012fac:	000b883a 	mov	r5,zero
 8012fb0:	000d883a 	mov	r6,zero
 8012fb4:	280a953a 	slli	r5,r5,20
 8012fb8:	00c00434 	movhi	r3,16
 8012fbc:	18ffffc4 	addi	r3,r3,-1
 8012fc0:	30c6703a 	and	r3,r6,r3
 8012fc4:	8005883a 	mov	r2,r16
 8012fc8:	1946b03a 	or	r3,r3,r5
 8012fcc:	dfc00117 	ldw	ra,4(sp)
 8012fd0:	dc000017 	ldw	r16,0(sp)
 8012fd4:	dec00204 	addi	sp,sp,8
 8012fd8:	f800283a 	ret
 8012fdc:	31bffd44 	addi	r6,r6,-11
 8012fe0:	818c983a 	sll	r6,r16,r6
 8012fe4:	00800434 	movhi	r2,16
 8012fe8:	10bfffc4 	addi	r2,r2,-1
 8012fec:	2941ffcc 	andi	r5,r5,2047
 8012ff0:	0021883a 	mov	r16,zero
 8012ff4:	308c703a 	and	r6,r6,r2
 8012ff8:	003fee06 	br	8012fb4 <__alt_data_end+0xfc012fb4>

08012ffc <__clzsi2>:
 8012ffc:	00bfffd4 	movui	r2,65535
 8013000:	11000b36 	bltu	r2,r4,8013030 <__clzsi2+0x34>
 8013004:	00803fc4 	movi	r2,255
 8013008:	1100122e 	bgeu	r2,r4,8013054 <__clzsi2+0x58>
 801300c:	00c00204 	movi	r3,8
 8013010:	01400604 	movi	r5,24
 8013014:	20c8d83a 	srl	r4,r4,r3
 8013018:	00820074 	movhi	r2,2049
 801301c:	109bb104 	addi	r2,r2,28356
 8013020:	1109883a 	add	r4,r2,r4
 8013024:	20800003 	ldbu	r2,0(r4)
 8013028:	2885c83a 	sub	r2,r5,r2
 801302c:	f800283a 	ret
 8013030:	00804034 	movhi	r2,256
 8013034:	10bfffc4 	addi	r2,r2,-1
 8013038:	11000336 	bltu	r2,r4,8013048 <__clzsi2+0x4c>
 801303c:	00c00404 	movi	r3,16
 8013040:	180b883a 	mov	r5,r3
 8013044:	003ff306 	br	8013014 <__alt_data_end+0xfc013014>
 8013048:	00c00604 	movi	r3,24
 801304c:	01400204 	movi	r5,8
 8013050:	003ff006 	br	8013014 <__alt_data_end+0xfc013014>
 8013054:	0007883a 	mov	r3,zero
 8013058:	01400804 	movi	r5,32
 801305c:	003fed06 	br	8013014 <__alt_data_end+0xfc013014>

08013060 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 8013060:	defffe04 	addi	sp,sp,-8
 8013064:	dfc00115 	stw	ra,4(sp)
 8013068:	df000015 	stw	fp,0(sp)
 801306c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 8013070:	008200b4 	movhi	r2,2050
 8013074:	10a32104 	addi	r2,r2,-29564
 8013078:	10800017 	ldw	r2,0(r2)
 801307c:	10000526 	beq	r2,zero,8013094 <alt_get_errno+0x34>
 8013080:	008200b4 	movhi	r2,2050
 8013084:	10a32104 	addi	r2,r2,-29564
 8013088:	10800017 	ldw	r2,0(r2)
 801308c:	103ee83a 	callr	r2
 8013090:	00000206 	br	801309c <alt_get_errno+0x3c>
 8013094:	008200b4 	movhi	r2,2050
 8013098:	10aa4d04 	addi	r2,r2,-22220
}
 801309c:	e037883a 	mov	sp,fp
 80130a0:	dfc00117 	ldw	ra,4(sp)
 80130a4:	df000017 	ldw	fp,0(sp)
 80130a8:	dec00204 	addi	sp,sp,8
 80130ac:	f800283a 	ret

080130b0 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
 80130b0:	defffb04 	addi	sp,sp,-20
 80130b4:	dfc00415 	stw	ra,16(sp)
 80130b8:	df000315 	stw	fp,12(sp)
 80130bc:	df000304 	addi	fp,sp,12
 80130c0:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
 80130c4:	e0bfff17 	ldw	r2,-4(fp)
 80130c8:	10000816 	blt	r2,zero,80130ec <close+0x3c>
 80130cc:	e13fff17 	ldw	r4,-4(fp)
 80130d0:	01400304 	movi	r5,12
 80130d4:	80027c00 	call	80027c0 <__mulsi3>
 80130d8:	1007883a 	mov	r3,r2
 80130dc:	00820074 	movhi	r2,2049
 80130e0:	109e4204 	addi	r2,r2,30984
 80130e4:	1885883a 	add	r2,r3,r2
 80130e8:	00000106 	br	80130f0 <close+0x40>
 80130ec:	0005883a 	mov	r2,zero
 80130f0:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
 80130f4:	e0bffd17 	ldw	r2,-12(fp)
 80130f8:	10001926 	beq	r2,zero,8013160 <close+0xb0>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
 80130fc:	e0bffd17 	ldw	r2,-12(fp)
 8013100:	10800017 	ldw	r2,0(r2)
 8013104:	10800417 	ldw	r2,16(r2)
 8013108:	10000626 	beq	r2,zero,8013124 <close+0x74>
 801310c:	e0bffd17 	ldw	r2,-12(fp)
 8013110:	10800017 	ldw	r2,0(r2)
 8013114:	10800417 	ldw	r2,16(r2)
 8013118:	e13ffd17 	ldw	r4,-12(fp)
 801311c:	103ee83a 	callr	r2
 8013120:	00000106 	br	8013128 <close+0x78>
 8013124:	0005883a 	mov	r2,zero
 8013128:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
 801312c:	e13fff17 	ldw	r4,-4(fp)
 8013130:	80139a80 	call	80139a8 <alt_release_fd>
    if (rval < 0)
 8013134:	e0bffe17 	ldw	r2,-8(fp)
 8013138:	1000070e 	bge	r2,zero,8013158 <close+0xa8>
    {
      ALT_ERRNO = -rval;
 801313c:	80130600 	call	8013060 <alt_get_errno>
 8013140:	1007883a 	mov	r3,r2
 8013144:	e0bffe17 	ldw	r2,-8(fp)
 8013148:	0085c83a 	sub	r2,zero,r2
 801314c:	18800015 	stw	r2,0(r3)
      return -1;
 8013150:	00bfffc4 	movi	r2,-1
 8013154:	00000706 	br	8013174 <close+0xc4>
    }
    return 0;
 8013158:	0005883a 	mov	r2,zero
 801315c:	00000506 	br	8013174 <close+0xc4>
  }
  else
  {
    ALT_ERRNO = EBADFD;
 8013160:	80130600 	call	8013060 <alt_get_errno>
 8013164:	1007883a 	mov	r3,r2
 8013168:	00801444 	movi	r2,81
 801316c:	18800015 	stw	r2,0(r3)
    return -1;
 8013170:	00bfffc4 	movi	r2,-1
  }
}
 8013174:	e037883a 	mov	sp,fp
 8013178:	dfc00117 	ldw	ra,4(sp)
 801317c:	df000017 	ldw	fp,0(sp)
 8013180:	dec00204 	addi	sp,sp,8
 8013184:	f800283a 	ret

08013188 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
 8013188:	defffc04 	addi	sp,sp,-16
 801318c:	df000315 	stw	fp,12(sp)
 8013190:	df000304 	addi	fp,sp,12
 8013194:	e13ffd15 	stw	r4,-12(fp)
 8013198:	e17ffe15 	stw	r5,-8(fp)
 801319c:	e1bfff15 	stw	r6,-4(fp)
  return len;
 80131a0:	e0bfff17 	ldw	r2,-4(fp)
}
 80131a4:	e037883a 	mov	sp,fp
 80131a8:	df000017 	ldw	fp,0(sp)
 80131ac:	dec00104 	addi	sp,sp,4
 80131b0:	f800283a 	ret

080131b4 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
 80131b4:	defffd04 	addi	sp,sp,-12
 80131b8:	df000215 	stw	fp,8(sp)
 80131bc:	df000204 	addi	fp,sp,8
 80131c0:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
 80131c4:	0001883a 	nop
 80131c8:	e0bfff17 	ldw	r2,-4(fp)
 80131cc:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
 80131d0:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
 80131d4:	10000226 	beq	r2,zero,80131e0 <_exit+0x2c>
    ALT_SIM_FAIL();
 80131d8:	002af070 	cmpltui	zero,zero,43969
 80131dc:	00000106 	br	80131e4 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
 80131e0:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
 80131e4:	003fff06 	br	80131e4 <__alt_data_end+0xfc0131e4>

080131e8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 80131e8:	defffe04 	addi	sp,sp,-8
 80131ec:	dfc00115 	stw	ra,4(sp)
 80131f0:	df000015 	stw	fp,0(sp)
 80131f4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 80131f8:	008200b4 	movhi	r2,2050
 80131fc:	10a32104 	addi	r2,r2,-29564
 8013200:	10800017 	ldw	r2,0(r2)
 8013204:	10000526 	beq	r2,zero,801321c <alt_get_errno+0x34>
 8013208:	008200b4 	movhi	r2,2050
 801320c:	10a32104 	addi	r2,r2,-29564
 8013210:	10800017 	ldw	r2,0(r2)
 8013214:	103ee83a 	callr	r2
 8013218:	00000206 	br	8013224 <alt_get_errno+0x3c>
 801321c:	008200b4 	movhi	r2,2050
 8013220:	10aa4d04 	addi	r2,r2,-22220
}
 8013224:	e037883a 	mov	sp,fp
 8013228:	dfc00117 	ldw	ra,4(sp)
 801322c:	df000017 	ldw	fp,0(sp)
 8013230:	dec00204 	addi	sp,sp,8
 8013234:	f800283a 	ret

08013238 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
 8013238:	defffb04 	addi	sp,sp,-20
 801323c:	dfc00415 	stw	ra,16(sp)
 8013240:	df000315 	stw	fp,12(sp)
 8013244:	df000304 	addi	fp,sp,12
 8013248:	e13ffe15 	stw	r4,-8(fp)
 801324c:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 8013250:	e0bffe17 	ldw	r2,-8(fp)
 8013254:	10000816 	blt	r2,zero,8013278 <fstat+0x40>
 8013258:	e13ffe17 	ldw	r4,-8(fp)
 801325c:	01400304 	movi	r5,12
 8013260:	80027c00 	call	80027c0 <__mulsi3>
 8013264:	1007883a 	mov	r3,r2
 8013268:	00820074 	movhi	r2,2049
 801326c:	109e4204 	addi	r2,r2,30984
 8013270:	1885883a 	add	r2,r3,r2
 8013274:	00000106 	br	801327c <fstat+0x44>
 8013278:	0005883a 	mov	r2,zero
 801327c:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
 8013280:	e0bffd17 	ldw	r2,-12(fp)
 8013284:	10001026 	beq	r2,zero,80132c8 <fstat+0x90>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
 8013288:	e0bffd17 	ldw	r2,-12(fp)
 801328c:	10800017 	ldw	r2,0(r2)
 8013290:	10800817 	ldw	r2,32(r2)
 8013294:	10000726 	beq	r2,zero,80132b4 <fstat+0x7c>
    {
      return fd->dev->fstat(fd, st);
 8013298:	e0bffd17 	ldw	r2,-12(fp)
 801329c:	10800017 	ldw	r2,0(r2)
 80132a0:	10800817 	ldw	r2,32(r2)
 80132a4:	e13ffd17 	ldw	r4,-12(fp)
 80132a8:	e17fff17 	ldw	r5,-4(fp)
 80132ac:	103ee83a 	callr	r2
 80132b0:	00000a06 	br	80132dc <fstat+0xa4>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
 80132b4:	e0bfff17 	ldw	r2,-4(fp)
 80132b8:	00c80004 	movi	r3,8192
 80132bc:	10c00115 	stw	r3,4(r2)
      return 0;
 80132c0:	0005883a 	mov	r2,zero
 80132c4:	00000506 	br	80132dc <fstat+0xa4>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 80132c8:	80131e80 	call	80131e8 <alt_get_errno>
 80132cc:	1007883a 	mov	r3,r2
 80132d0:	00801444 	movi	r2,81
 80132d4:	18800015 	stw	r2,0(r3)
    return -1;
 80132d8:	00bfffc4 	movi	r2,-1
  }
}
 80132dc:	e037883a 	mov	sp,fp
 80132e0:	dfc00117 	ldw	ra,4(sp)
 80132e4:	df000017 	ldw	fp,0(sp)
 80132e8:	dec00204 	addi	sp,sp,8
 80132ec:	f800283a 	ret

080132f0 <getpid>:
 *
 * ALT_GETPID is mapped onto the getpid() system call in alt_syscall.h
 */
 
int ALT_GETPID (void)
{
 80132f0:	deffff04 	addi	sp,sp,-4
 80132f4:	df000015 	stw	fp,0(sp)
 80132f8:	d839883a 	mov	fp,sp
  return 0;
 80132fc:	0005883a 	mov	r2,zero
}
 8013300:	e037883a 	mov	sp,fp
 8013304:	df000017 	ldw	fp,0(sp)
 8013308:	dec00104 	addi	sp,sp,4
 801330c:	f800283a 	ret

08013310 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 8013310:	defffe04 	addi	sp,sp,-8
 8013314:	dfc00115 	stw	ra,4(sp)
 8013318:	df000015 	stw	fp,0(sp)
 801331c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 8013320:	008200b4 	movhi	r2,2050
 8013324:	10a32104 	addi	r2,r2,-29564
 8013328:	10800017 	ldw	r2,0(r2)
 801332c:	10000526 	beq	r2,zero,8013344 <alt_get_errno+0x34>
 8013330:	008200b4 	movhi	r2,2050
 8013334:	10a32104 	addi	r2,r2,-29564
 8013338:	10800017 	ldw	r2,0(r2)
 801333c:	103ee83a 	callr	r2
 8013340:	00000206 	br	801334c <alt_get_errno+0x3c>
 8013344:	008200b4 	movhi	r2,2050
 8013348:	10aa4d04 	addi	r2,r2,-22220
}
 801334c:	e037883a 	mov	sp,fp
 8013350:	dfc00117 	ldw	ra,4(sp)
 8013354:	df000017 	ldw	fp,0(sp)
 8013358:	dec00204 	addi	sp,sp,8
 801335c:	f800283a 	ret

08013360 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
 8013360:	deffed04 	addi	sp,sp,-76
 8013364:	dfc01215 	stw	ra,72(sp)
 8013368:	df001115 	stw	fp,68(sp)
 801336c:	df001104 	addi	fp,sp,68
 8013370:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 8013374:	e0bfff17 	ldw	r2,-4(fp)
 8013378:	10000816 	blt	r2,zero,801339c <isatty+0x3c>
 801337c:	e13fff17 	ldw	r4,-4(fp)
 8013380:	01400304 	movi	r5,12
 8013384:	80027c00 	call	80027c0 <__mulsi3>
 8013388:	1007883a 	mov	r3,r2
 801338c:	00820074 	movhi	r2,2049
 8013390:	109e4204 	addi	r2,r2,30984
 8013394:	1885883a 	add	r2,r3,r2
 8013398:	00000106 	br	80133a0 <isatty+0x40>
 801339c:	0005883a 	mov	r2,zero
 80133a0:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
 80133a4:	e0bfef17 	ldw	r2,-68(fp)
 80133a8:	10000e26 	beq	r2,zero,80133e4 <isatty+0x84>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
 80133ac:	e0bfef17 	ldw	r2,-68(fp)
 80133b0:	10800017 	ldw	r2,0(r2)
 80133b4:	10800817 	ldw	r2,32(r2)
 80133b8:	1000021e 	bne	r2,zero,80133c4 <isatty+0x64>
    {
      return 1;
 80133bc:	00800044 	movi	r2,1
 80133c0:	00000d06 	br	80133f8 <isatty+0x98>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
 80133c4:	e0bff004 	addi	r2,fp,-64
 80133c8:	e13fff17 	ldw	r4,-4(fp)
 80133cc:	100b883a 	mov	r5,r2
 80133d0:	80132380 	call	8013238 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
 80133d4:	e0bff117 	ldw	r2,-60(fp)
 80133d8:	10880020 	cmpeqi	r2,r2,8192
 80133dc:	10803fcc 	andi	r2,r2,255
 80133e0:	00000506 	br	80133f8 <isatty+0x98>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 80133e4:	80133100 	call	8013310 <alt_get_errno>
 80133e8:	1007883a 	mov	r3,r2
 80133ec:	00801444 	movi	r2,81
 80133f0:	18800015 	stw	r2,0(r3)
    return 0;
 80133f4:	0005883a 	mov	r2,zero
  }
}
 80133f8:	e037883a 	mov	sp,fp
 80133fc:	dfc00117 	ldw	ra,4(sp)
 8013400:	df000017 	ldw	fp,0(sp)
 8013404:	dec00204 	addi	sp,sp,8
 8013408:	f800283a 	ret

0801340c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 801340c:	defffe04 	addi	sp,sp,-8
 8013410:	dfc00115 	stw	ra,4(sp)
 8013414:	df000015 	stw	fp,0(sp)
 8013418:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 801341c:	008200b4 	movhi	r2,2050
 8013420:	10a32104 	addi	r2,r2,-29564
 8013424:	10800017 	ldw	r2,0(r2)
 8013428:	10000526 	beq	r2,zero,8013440 <alt_get_errno+0x34>
 801342c:	008200b4 	movhi	r2,2050
 8013430:	10a32104 	addi	r2,r2,-29564
 8013434:	10800017 	ldw	r2,0(r2)
 8013438:	103ee83a 	callr	r2
 801343c:	00000206 	br	8013448 <alt_get_errno+0x3c>
 8013440:	008200b4 	movhi	r2,2050
 8013444:	10aa4d04 	addi	r2,r2,-22220
}
 8013448:	e037883a 	mov	sp,fp
 801344c:	dfc00117 	ldw	ra,4(sp)
 8013450:	df000017 	ldw	fp,0(sp)
 8013454:	dec00204 	addi	sp,sp,8
 8013458:	f800283a 	ret

0801345c <kill>:
 *
 * ALT_KILL is mapped onto the kill() system call in alt_syscall.h
 */

int ALT_KILL (int pid, int sig)
{
 801345c:	defffb04 	addi	sp,sp,-20
 8013460:	dfc00415 	stw	ra,16(sp)
 8013464:	df000315 	stw	fp,12(sp)
 8013468:	df000304 	addi	fp,sp,12
 801346c:	e13ffe15 	stw	r4,-8(fp)
 8013470:	e17fff15 	stw	r5,-4(fp)
  int status = 0;
 8013474:	e03ffd15 	stw	zero,-12(fp)

  if (pid <= 0)
 8013478:	e0bffe17 	ldw	r2,-8(fp)
 801347c:	00803116 	blt	zero,r2,8013544 <kill+0xe8>
  {
    switch (sig)
 8013480:	e0bfff17 	ldw	r2,-4(fp)
 8013484:	10800828 	cmpgeui	r2,r2,32
 8013488:	1000291e 	bne	r2,zero,8013530 <kill+0xd4>
 801348c:	e0bfff17 	ldw	r2,-4(fp)
 8013490:	100690ba 	slli	r3,r2,2
 8013494:	00820074 	movhi	r2,2049
 8013498:	108d2a04 	addi	r2,r2,13480
 801349c:	1885883a 	add	r2,r3,r2
 80134a0:	10800017 	ldw	r2,0(r2)
 80134a4:	1000683a 	jmp	r2
 80134a8:	0801353c 	xorhi	zero,at,1236
 80134ac:	08013530 	cmpltui	zero,at,1236
 80134b0:	08013530 	cmpltui	zero,at,1236
 80134b4:	08013528 	cmpgeui	zero,at,1236
 80134b8:	08013528 	cmpgeui	zero,at,1236
 80134bc:	08013528 	cmpgeui	zero,at,1236
 80134c0:	08013528 	cmpgeui	zero,at,1236
 80134c4:	08013530 	cmpltui	zero,at,1236
 80134c8:	08013528 	cmpgeui	zero,at,1236
 80134cc:	08013528 	cmpgeui	zero,at,1236
 80134d0:	08013528 	cmpgeui	zero,at,1236
 80134d4:	08013528 	cmpgeui	zero,at,1236
 80134d8:	08013528 	cmpgeui	zero,at,1236
 80134dc:	08013528 	cmpgeui	zero,at,1236
 80134e0:	08013528 	cmpgeui	zero,at,1236
 80134e4:	08013528 	cmpgeui	zero,at,1236
 80134e8:	0801353c 	xorhi	zero,at,1236
 80134ec:	08013530 	cmpltui	zero,at,1236
 80134f0:	08013530 	cmpltui	zero,at,1236
 80134f4:	08013530 	cmpltui	zero,at,1236
 80134f8:	0801353c 	xorhi	zero,at,1236
 80134fc:	08013530 	cmpltui	zero,at,1236
 8013500:	08013530 	cmpltui	zero,at,1236
 8013504:	08013528 	cmpgeui	zero,at,1236
 8013508:	08013528 	cmpgeui	zero,at,1236
 801350c:	08013528 	cmpgeui	zero,at,1236
 8013510:	08013528 	cmpgeui	zero,at,1236
 8013514:	08013528 	cmpgeui	zero,at,1236
 8013518:	08013530 	cmpltui	zero,at,1236
 801351c:	08013530 	cmpltui	zero,at,1236
 8013520:	08013528 	cmpgeui	zero,at,1236
 8013524:	08013528 	cmpgeui	zero,at,1236
       * The Posix standard defines the default behaviour for all these signals 
       * as being eqivalent to a call to _exit(). No mechanism is provided to 
       * change this behaviour.
       */

      _exit(0);
 8013528:	0009883a 	mov	r4,zero
 801352c:	80131b40 	call	80131b4 <_exit>
      break;
    default:

      /* Tried to send an unsupported signal */

      status = EINVAL;
 8013530:	00800584 	movi	r2,22
 8013534:	e0bffd15 	stw	r2,-12(fp)
 8013538:	00000606 	br	8013554 <kill+0xf8>
    {
    case 0:

      /* The null signal is used to check that a pid is valid. */

      break;
 801353c:	0001883a 	nop
 8013540:	00000406 	br	8013554 <kill+0xf8>

      status = EINVAL;
    }
  }

  else if (pid > 0)
 8013544:	e0bffe17 	ldw	r2,-8(fp)
 8013548:	0080020e 	bge	zero,r2,8013554 <kill+0xf8>
  {
    /* Attempted to signal a non-existant process */

    status = ESRCH;
 801354c:	008000c4 	movi	r2,3
 8013550:	e0bffd15 	stw	r2,-12(fp)
  }

  if (status)
 8013554:	e0bffd17 	ldw	r2,-12(fp)
 8013558:	10000626 	beq	r2,zero,8013574 <kill+0x118>
  {
    ALT_ERRNO = status;
 801355c:	801340c0 	call	801340c <alt_get_errno>
 8013560:	1007883a 	mov	r3,r2
 8013564:	e0bffd17 	ldw	r2,-12(fp)
 8013568:	18800015 	stw	r2,0(r3)
    return -1;
 801356c:	00bfffc4 	movi	r2,-1
 8013570:	00000106 	br	8013578 <kill+0x11c>
  }

  return 0;
 8013574:	0005883a 	mov	r2,zero
}
 8013578:	e037883a 	mov	sp,fp
 801357c:	dfc00117 	ldw	ra,4(sp)
 8013580:	df000017 	ldw	fp,0(sp)
 8013584:	dec00204 	addi	sp,sp,8
 8013588:	f800283a 	ret

0801358c <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
 801358c:	defffc04 	addi	sp,sp,-16
 8013590:	df000315 	stw	fp,12(sp)
 8013594:	df000304 	addi	fp,sp,12
 8013598:	e13ffd15 	stw	r4,-12(fp)
 801359c:	e17ffe15 	stw	r5,-8(fp)
 80135a0:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
 80135a4:	e0fffe17 	ldw	r3,-8(fp)
 80135a8:	e0bffd17 	ldw	r2,-12(fp)
 80135ac:	18800c26 	beq	r3,r2,80135e0 <alt_load_section+0x54>
  {
    while( to != end )
 80135b0:	00000806 	br	80135d4 <alt_load_section+0x48>
    {
      *to++ = *from++;
 80135b4:	e0bffe17 	ldw	r2,-8(fp)
 80135b8:	10c00104 	addi	r3,r2,4
 80135bc:	e0fffe15 	stw	r3,-8(fp)
 80135c0:	e0fffd17 	ldw	r3,-12(fp)
 80135c4:	19000104 	addi	r4,r3,4
 80135c8:	e13ffd15 	stw	r4,-12(fp)
 80135cc:	18c00017 	ldw	r3,0(r3)
 80135d0:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
 80135d4:	e0fffe17 	ldw	r3,-8(fp)
 80135d8:	e0bfff17 	ldw	r2,-4(fp)
 80135dc:	18bff51e 	bne	r3,r2,80135b4 <__alt_data_end+0xfc0135b4>
    {
      *to++ = *from++;
    }
  }
}
 80135e0:	e037883a 	mov	sp,fp
 80135e4:	df000017 	ldw	fp,0(sp)
 80135e8:	dec00104 	addi	sp,sp,4
 80135ec:	f800283a 	ret

080135f0 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
 80135f0:	defffe04 	addi	sp,sp,-8
 80135f4:	dfc00115 	stw	ra,4(sp)
 80135f8:	df000015 	stw	fp,0(sp)
 80135fc:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
 8013600:	010200b4 	movhi	r4,2050
 8013604:	21232a04 	addi	r4,r4,-29528
 8013608:	01420074 	movhi	r5,2049
 801360c:	295c0f04 	addi	r5,r5,28732
 8013610:	018200b4 	movhi	r6,2050
 8013614:	31a32a04 	addi	r6,r6,-29528
 8013618:	801358c0 	call	801358c <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
 801361c:	01020034 	movhi	r4,2048
 8013620:	21000804 	addi	r4,r4,32
 8013624:	01420034 	movhi	r5,2048
 8013628:	29400804 	addi	r5,r5,32
 801362c:	01820034 	movhi	r6,2048
 8013630:	31808c04 	addi	r6,r6,560
 8013634:	801358c0 	call	801358c <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
 8013638:	01020074 	movhi	r4,2049
 801363c:	211a4d04 	addi	r4,r4,26932
 8013640:	01420074 	movhi	r5,2049
 8013644:	295a4d04 	addi	r5,r5,26932
 8013648:	01820074 	movhi	r6,2049
 801364c:	319c0f04 	addi	r6,r6,28732
 8013650:	801358c0 	call	801358c <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
 8013654:	80157dc0 	call	80157dc <alt_dcache_flush_all>
  alt_icache_flush_all();
 8013658:	8015b7c0 	call	8015b7c <alt_icache_flush_all>
}
 801365c:	e037883a 	mov	sp,fp
 8013660:	dfc00117 	ldw	ra,4(sp)
 8013664:	df000017 	ldw	fp,0(sp)
 8013668:	dec00204 	addi	sp,sp,8
 801366c:	f800283a 	ret

08013670 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 8013670:	defffe04 	addi	sp,sp,-8
 8013674:	dfc00115 	stw	ra,4(sp)
 8013678:	df000015 	stw	fp,0(sp)
 801367c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 8013680:	008200b4 	movhi	r2,2050
 8013684:	10a32104 	addi	r2,r2,-29564
 8013688:	10800017 	ldw	r2,0(r2)
 801368c:	10000526 	beq	r2,zero,80136a4 <alt_get_errno+0x34>
 8013690:	008200b4 	movhi	r2,2050
 8013694:	10a32104 	addi	r2,r2,-29564
 8013698:	10800017 	ldw	r2,0(r2)
 801369c:	103ee83a 	callr	r2
 80136a0:	00000206 	br	80136ac <alt_get_errno+0x3c>
 80136a4:	008200b4 	movhi	r2,2050
 80136a8:	10aa4d04 	addi	r2,r2,-22220
}
 80136ac:	e037883a 	mov	sp,fp
 80136b0:	dfc00117 	ldw	ra,4(sp)
 80136b4:	df000017 	ldw	fp,0(sp)
 80136b8:	dec00204 	addi	sp,sp,8
 80136bc:	f800283a 	ret

080136c0 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
 80136c0:	defff904 	addi	sp,sp,-28
 80136c4:	dfc00615 	stw	ra,24(sp)
 80136c8:	df000515 	stw	fp,20(sp)
 80136cc:	df000504 	addi	fp,sp,20
 80136d0:	e13ffd15 	stw	r4,-12(fp)
 80136d4:	e17ffe15 	stw	r5,-8(fp)
 80136d8:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
 80136dc:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 80136e0:	e0bffd17 	ldw	r2,-12(fp)
 80136e4:	10000816 	blt	r2,zero,8013708 <lseek+0x48>
 80136e8:	e13ffd17 	ldw	r4,-12(fp)
 80136ec:	01400304 	movi	r5,12
 80136f0:	80027c00 	call	80027c0 <__mulsi3>
 80136f4:	1007883a 	mov	r3,r2
 80136f8:	00820074 	movhi	r2,2049
 80136fc:	109e4204 	addi	r2,r2,30984
 8013700:	1885883a 	add	r2,r3,r2
 8013704:	00000106 	br	801370c <lseek+0x4c>
 8013708:	0005883a 	mov	r2,zero
 801370c:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
 8013710:	e0bffc17 	ldw	r2,-16(fp)
 8013714:	10001026 	beq	r2,zero,8013758 <lseek+0x98>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
 8013718:	e0bffc17 	ldw	r2,-16(fp)
 801371c:	10800017 	ldw	r2,0(r2)
 8013720:	10800717 	ldw	r2,28(r2)
 8013724:	10000926 	beq	r2,zero,801374c <lseek+0x8c>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
 8013728:	e0bffc17 	ldw	r2,-16(fp)
 801372c:	10800017 	ldw	r2,0(r2)
 8013730:	10800717 	ldw	r2,28(r2)
 8013734:	e13ffc17 	ldw	r4,-16(fp)
 8013738:	e17ffe17 	ldw	r5,-8(fp)
 801373c:	e1bfff17 	ldw	r6,-4(fp)
 8013740:	103ee83a 	callr	r2
 8013744:	e0bffb15 	stw	r2,-20(fp)
 8013748:	00000506 	br	8013760 <lseek+0xa0>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
 801374c:	00bfde84 	movi	r2,-134
 8013750:	e0bffb15 	stw	r2,-20(fp)
 8013754:	00000206 	br	8013760 <lseek+0xa0>
    }
  }
  else  
  {
    rc = -EBADFD;
 8013758:	00bfebc4 	movi	r2,-81
 801375c:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
 8013760:	e0bffb17 	ldw	r2,-20(fp)
 8013764:	1000070e 	bge	r2,zero,8013784 <lseek+0xc4>
  {
    ALT_ERRNO = -rc;
 8013768:	80136700 	call	8013670 <alt_get_errno>
 801376c:	1007883a 	mov	r3,r2
 8013770:	e0bffb17 	ldw	r2,-20(fp)
 8013774:	0085c83a 	sub	r2,zero,r2
 8013778:	18800015 	stw	r2,0(r3)
    rc = -1;
 801377c:	00bfffc4 	movi	r2,-1
 8013780:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
 8013784:	e0bffb17 	ldw	r2,-20(fp)
}
 8013788:	e037883a 	mov	sp,fp
 801378c:	dfc00117 	ldw	ra,4(sp)
 8013790:	df000017 	ldw	fp,0(sp)
 8013794:	dec00204 	addi	sp,sp,8
 8013798:	f800283a 	ret

0801379c <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
 801379c:	defffd04 	addi	sp,sp,-12
 80137a0:	dfc00215 	stw	ra,8(sp)
 80137a4:	df000115 	stw	fp,4(sp)
 80137a8:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
 80137ac:	0009883a 	mov	r4,zero
 80137b0:	8013c600 	call	8013c60 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
 80137b4:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
 80137b8:	8013c940 	call	8013c94 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
 80137bc:	01020074 	movhi	r4,2049
 80137c0:	211bf404 	addi	r4,r4,28624
 80137c4:	01420074 	movhi	r5,2049
 80137c8:	295bf404 	addi	r5,r5,28624
 80137cc:	01820074 	movhi	r6,2049
 80137d0:	319bf404 	addi	r6,r6,28624
 80137d4:	8015c780 	call	8015c78 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
 80137d8:	8015a340 	call	8015a34 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
 80137dc:	01020074 	movhi	r4,2049
 80137e0:	2116a404 	addi	r4,r4,23184
 80137e4:	80165840 	call	8016584 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
 80137e8:	d1274a17 	ldw	r4,-25304(gp)
 80137ec:	d0e74b17 	ldw	r3,-25300(gp)
 80137f0:	d0a74c17 	ldw	r2,-25296(gp)
 80137f4:	180b883a 	mov	r5,r3
 80137f8:	100d883a 	mov	r6,r2
 80137fc:	80008a80 	call	80008a8 <main>
 8013800:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
 8013804:	01000044 	movi	r4,1
 8013808:	80130b00 	call	80130b0 <close>
  exit (result);
 801380c:	e13fff17 	ldw	r4,-4(fp)
 8013810:	80165980 	call	8016598 <exit>

08013814 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
 8013814:	defffe04 	addi	sp,sp,-8
 8013818:	df000115 	stw	fp,4(sp)
 801381c:	df000104 	addi	fp,sp,4
 8013820:	e13fff15 	stw	r4,-4(fp)
}
 8013824:	e037883a 	mov	sp,fp
 8013828:	df000017 	ldw	fp,0(sp)
 801382c:	dec00104 	addi	sp,sp,4
 8013830:	f800283a 	ret

08013834 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
 8013834:	defffe04 	addi	sp,sp,-8
 8013838:	df000115 	stw	fp,4(sp)
 801383c:	df000104 	addi	fp,sp,4
 8013840:	e13fff15 	stw	r4,-4(fp)
}
 8013844:	e037883a 	mov	sp,fp
 8013848:	df000017 	ldw	fp,0(sp)
 801384c:	dec00104 	addi	sp,sp,4
 8013850:	f800283a 	ret

08013854 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 8013854:	defffe04 	addi	sp,sp,-8
 8013858:	dfc00115 	stw	ra,4(sp)
 801385c:	df000015 	stw	fp,0(sp)
 8013860:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 8013864:	008200b4 	movhi	r2,2050
 8013868:	10a32104 	addi	r2,r2,-29564
 801386c:	10800017 	ldw	r2,0(r2)
 8013870:	10000526 	beq	r2,zero,8013888 <alt_get_errno+0x34>
 8013874:	008200b4 	movhi	r2,2050
 8013878:	10a32104 	addi	r2,r2,-29564
 801387c:	10800017 	ldw	r2,0(r2)
 8013880:	103ee83a 	callr	r2
 8013884:	00000206 	br	8013890 <alt_get_errno+0x3c>
 8013888:	008200b4 	movhi	r2,2050
 801388c:	10aa4d04 	addi	r2,r2,-22220
}
 8013890:	e037883a 	mov	sp,fp
 8013894:	dfc00117 	ldw	ra,4(sp)
 8013898:	df000017 	ldw	fp,0(sp)
 801389c:	dec00204 	addi	sp,sp,8
 80138a0:	f800283a 	ret

080138a4 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
 80138a4:	defff904 	addi	sp,sp,-28
 80138a8:	dfc00615 	stw	ra,24(sp)
 80138ac:	df000515 	stw	fp,20(sp)
 80138b0:	df000504 	addi	fp,sp,20
 80138b4:	e13ffd15 	stw	r4,-12(fp)
 80138b8:	e17ffe15 	stw	r5,-8(fp)
 80138bc:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 80138c0:	e0bffd17 	ldw	r2,-12(fp)
 80138c4:	10000816 	blt	r2,zero,80138e8 <read+0x44>
 80138c8:	e13ffd17 	ldw	r4,-12(fp)
 80138cc:	01400304 	movi	r5,12
 80138d0:	80027c00 	call	80027c0 <__mulsi3>
 80138d4:	1007883a 	mov	r3,r2
 80138d8:	00820074 	movhi	r2,2049
 80138dc:	109e4204 	addi	r2,r2,30984
 80138e0:	1885883a 	add	r2,r3,r2
 80138e4:	00000106 	br	80138ec <read+0x48>
 80138e8:	0005883a 	mov	r2,zero
 80138ec:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 80138f0:	e0bffb17 	ldw	r2,-20(fp)
 80138f4:	10002226 	beq	r2,zero,8013980 <read+0xdc>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 80138f8:	e0bffb17 	ldw	r2,-20(fp)
 80138fc:	10800217 	ldw	r2,8(r2)
 8013900:	108000cc 	andi	r2,r2,3
 8013904:	10800060 	cmpeqi	r2,r2,1
 8013908:	1000181e 	bne	r2,zero,801396c <read+0xc8>
        (fd->dev->read))
 801390c:	e0bffb17 	ldw	r2,-20(fp)
 8013910:	10800017 	ldw	r2,0(r2)
 8013914:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 8013918:	10001426 	beq	r2,zero,801396c <read+0xc8>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
 801391c:	e0bffb17 	ldw	r2,-20(fp)
 8013920:	10800017 	ldw	r2,0(r2)
 8013924:	10800517 	ldw	r2,20(r2)
 8013928:	e0ffff17 	ldw	r3,-4(fp)
 801392c:	e13ffb17 	ldw	r4,-20(fp)
 8013930:	e17ffe17 	ldw	r5,-8(fp)
 8013934:	180d883a 	mov	r6,r3
 8013938:	103ee83a 	callr	r2
 801393c:	e0bffc15 	stw	r2,-16(fp)
 8013940:	e0bffc17 	ldw	r2,-16(fp)
 8013944:	1000070e 	bge	r2,zero,8013964 <read+0xc0>
        {
          ALT_ERRNO = -rval;
 8013948:	80138540 	call	8013854 <alt_get_errno>
 801394c:	1007883a 	mov	r3,r2
 8013950:	e0bffc17 	ldw	r2,-16(fp)
 8013954:	0085c83a 	sub	r2,zero,r2
 8013958:	18800015 	stw	r2,0(r3)
          return -1;
 801395c:	00bfffc4 	movi	r2,-1
 8013960:	00000c06 	br	8013994 <read+0xf0>
        }
        return rval;
 8013964:	e0bffc17 	ldw	r2,-16(fp)
 8013968:	00000a06 	br	8013994 <read+0xf0>
      }
      else
      {
        ALT_ERRNO = EACCES;
 801396c:	80138540 	call	8013854 <alt_get_errno>
 8013970:	1007883a 	mov	r3,r2
 8013974:	00800344 	movi	r2,13
 8013978:	18800015 	stw	r2,0(r3)
 801397c:	00000406 	br	8013990 <read+0xec>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
 8013980:	80138540 	call	8013854 <alt_get_errno>
 8013984:	1007883a 	mov	r3,r2
 8013988:	00801444 	movi	r2,81
 801398c:	18800015 	stw	r2,0(r3)
  }
  return -1;
 8013990:	00bfffc4 	movi	r2,-1
}
 8013994:	e037883a 	mov	sp,fp
 8013998:	dfc00117 	ldw	ra,4(sp)
 801399c:	df000017 	ldw	fp,0(sp)
 80139a0:	dec00204 	addi	sp,sp,8
 80139a4:	f800283a 	ret

080139a8 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
 80139a8:	defffc04 	addi	sp,sp,-16
 80139ac:	dfc00315 	stw	ra,12(sp)
 80139b0:	df000215 	stw	fp,8(sp)
 80139b4:	dc000115 	stw	r16,4(sp)
 80139b8:	df000204 	addi	fp,sp,8
 80139bc:	e13ffe15 	stw	r4,-8(fp)
  if (fd > 2)
 80139c0:	e0bffe17 	ldw	r2,-8(fp)
 80139c4:	108000d0 	cmplti	r2,r2,3
 80139c8:	1000111e 	bne	r2,zero,8013a10 <alt_release_fd+0x68>
  {
    alt_fd_list[fd].fd_flags = 0;
 80139cc:	04020074 	movhi	r16,2049
 80139d0:	841e4204 	addi	r16,r16,30984
 80139d4:	e0bffe17 	ldw	r2,-8(fp)
 80139d8:	1009883a 	mov	r4,r2
 80139dc:	01400304 	movi	r5,12
 80139e0:	80027c00 	call	80027c0 <__mulsi3>
 80139e4:	8085883a 	add	r2,r16,r2
 80139e8:	10800204 	addi	r2,r2,8
 80139ec:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
 80139f0:	04020074 	movhi	r16,2049
 80139f4:	841e4204 	addi	r16,r16,30984
 80139f8:	e0bffe17 	ldw	r2,-8(fp)
 80139fc:	1009883a 	mov	r4,r2
 8013a00:	01400304 	movi	r5,12
 8013a04:	80027c00 	call	80027c0 <__mulsi3>
 8013a08:	8085883a 	add	r2,r16,r2
 8013a0c:	10000015 	stw	zero,0(r2)
  }
}
 8013a10:	e6ffff04 	addi	sp,fp,-4
 8013a14:	dfc00217 	ldw	ra,8(sp)
 8013a18:	df000117 	ldw	fp,4(sp)
 8013a1c:	dc000017 	ldw	r16,0(sp)
 8013a20:	dec00304 	addi	sp,sp,12
 8013a24:	f800283a 	ret

08013a28 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
 8013a28:	defff904 	addi	sp,sp,-28
 8013a2c:	df000615 	stw	fp,24(sp)
 8013a30:	df000604 	addi	fp,sp,24
 8013a34:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 8013a38:	0005303a 	rdctl	r2,status
 8013a3c:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 8013a40:	e0fffc17 	ldw	r3,-16(fp)
 8013a44:	00bfff84 	movi	r2,-2
 8013a48:	1884703a 	and	r2,r3,r2
 8013a4c:	1001703a 	wrctl	status,r2
  
  return context;
 8013a50:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
 8013a54:	e0bffa15 	stw	r2,-24(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
 8013a58:	d0a01b17 	ldw	r2,-32660(gp)
 8013a5c:	10c000c4 	addi	r3,r2,3
 8013a60:	00bfff04 	movi	r2,-4
 8013a64:	1884703a 	and	r2,r3,r2
 8013a68:	d0a01b15 	stw	r2,-32660(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
 8013a6c:	d0e01b17 	ldw	r3,-32660(gp)
 8013a70:	e0bfff17 	ldw	r2,-4(fp)
 8013a74:	1887883a 	add	r3,r3,r2
 8013a78:	00830034 	movhi	r2,3072
 8013a7c:	10800004 	addi	r2,r2,0
 8013a80:	10c0062e 	bgeu	r2,r3,8013a9c <sbrk+0x74>
 8013a84:	e0bffa17 	ldw	r2,-24(fp)
 8013a88:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 8013a8c:	e0bffd17 	ldw	r2,-12(fp)
 8013a90:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
 8013a94:	00bfffc4 	movi	r2,-1
 8013a98:	00000b06 	br	8013ac8 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
 8013a9c:	d0a01b17 	ldw	r2,-32660(gp)
 8013aa0:	e0bffb15 	stw	r2,-20(fp)
  heap_end += incr; 
 8013aa4:	d0e01b17 	ldw	r3,-32660(gp)
 8013aa8:	e0bfff17 	ldw	r2,-4(fp)
 8013aac:	1885883a 	add	r2,r3,r2
 8013ab0:	d0a01b15 	stw	r2,-32660(gp)
 8013ab4:	e0bffa17 	ldw	r2,-24(fp)
 8013ab8:	e0bffe15 	stw	r2,-8(fp)
 8013abc:	e0bffe17 	ldw	r2,-8(fp)
 8013ac0:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
 8013ac4:	e0bffb17 	ldw	r2,-20(fp)
} 
 8013ac8:	e037883a 	mov	sp,fp
 8013acc:	df000017 	ldw	fp,0(sp)
 8013ad0:	dec00104 	addi	sp,sp,4
 8013ad4:	f800283a 	ret

08013ad8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 8013ad8:	defffe04 	addi	sp,sp,-8
 8013adc:	dfc00115 	stw	ra,4(sp)
 8013ae0:	df000015 	stw	fp,0(sp)
 8013ae4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 8013ae8:	008200b4 	movhi	r2,2050
 8013aec:	10a32104 	addi	r2,r2,-29564
 8013af0:	10800017 	ldw	r2,0(r2)
 8013af4:	10000526 	beq	r2,zero,8013b0c <alt_get_errno+0x34>
 8013af8:	008200b4 	movhi	r2,2050
 8013afc:	10a32104 	addi	r2,r2,-29564
 8013b00:	10800017 	ldw	r2,0(r2)
 8013b04:	103ee83a 	callr	r2
 8013b08:	00000206 	br	8013b14 <alt_get_errno+0x3c>
 8013b0c:	008200b4 	movhi	r2,2050
 8013b10:	10aa4d04 	addi	r2,r2,-22220
}
 8013b14:	e037883a 	mov	sp,fp
 8013b18:	dfc00117 	ldw	ra,4(sp)
 8013b1c:	df000017 	ldw	fp,0(sp)
 8013b20:	dec00204 	addi	sp,sp,8
 8013b24:	f800283a 	ret

08013b28 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
 8013b28:	defff904 	addi	sp,sp,-28
 8013b2c:	dfc00615 	stw	ra,24(sp)
 8013b30:	df000515 	stw	fp,20(sp)
 8013b34:	df000504 	addi	fp,sp,20
 8013b38:	e13ffd15 	stw	r4,-12(fp)
 8013b3c:	e17ffe15 	stw	r5,-8(fp)
 8013b40:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 8013b44:	e0bffd17 	ldw	r2,-12(fp)
 8013b48:	10000816 	blt	r2,zero,8013b6c <write+0x44>
 8013b4c:	e13ffd17 	ldw	r4,-12(fp)
 8013b50:	01400304 	movi	r5,12
 8013b54:	80027c00 	call	80027c0 <__mulsi3>
 8013b58:	1007883a 	mov	r3,r2
 8013b5c:	00820074 	movhi	r2,2049
 8013b60:	109e4204 	addi	r2,r2,30984
 8013b64:	1885883a 	add	r2,r3,r2
 8013b68:	00000106 	br	8013b70 <write+0x48>
 8013b6c:	0005883a 	mov	r2,zero
 8013b70:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 8013b74:	e0bffb17 	ldw	r2,-20(fp)
 8013b78:	10002126 	beq	r2,zero,8013c00 <write+0xd8>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
 8013b7c:	e0bffb17 	ldw	r2,-20(fp)
 8013b80:	10800217 	ldw	r2,8(r2)
 8013b84:	108000cc 	andi	r2,r2,3
 8013b88:	10001826 	beq	r2,zero,8013bec <write+0xc4>
 8013b8c:	e0bffb17 	ldw	r2,-20(fp)
 8013b90:	10800017 	ldw	r2,0(r2)
 8013b94:	10800617 	ldw	r2,24(r2)
 8013b98:	10001426 	beq	r2,zero,8013bec <write+0xc4>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
 8013b9c:	e0bffb17 	ldw	r2,-20(fp)
 8013ba0:	10800017 	ldw	r2,0(r2)
 8013ba4:	10800617 	ldw	r2,24(r2)
 8013ba8:	e0ffff17 	ldw	r3,-4(fp)
 8013bac:	e13ffb17 	ldw	r4,-20(fp)
 8013bb0:	e17ffe17 	ldw	r5,-8(fp)
 8013bb4:	180d883a 	mov	r6,r3
 8013bb8:	103ee83a 	callr	r2
 8013bbc:	e0bffc15 	stw	r2,-16(fp)
 8013bc0:	e0bffc17 	ldw	r2,-16(fp)
 8013bc4:	1000070e 	bge	r2,zero,8013be4 <write+0xbc>
      {
        ALT_ERRNO = -rval;
 8013bc8:	8013ad80 	call	8013ad8 <alt_get_errno>
 8013bcc:	1007883a 	mov	r3,r2
 8013bd0:	e0bffc17 	ldw	r2,-16(fp)
 8013bd4:	0085c83a 	sub	r2,zero,r2
 8013bd8:	18800015 	stw	r2,0(r3)
        return -1;
 8013bdc:	00bfffc4 	movi	r2,-1
 8013be0:	00000c06 	br	8013c14 <write+0xec>
      }
      return rval;
 8013be4:	e0bffc17 	ldw	r2,-16(fp)
 8013be8:	00000a06 	br	8013c14 <write+0xec>
    }
    else
    {
      ALT_ERRNO = EACCES;
 8013bec:	8013ad80 	call	8013ad8 <alt_get_errno>
 8013bf0:	1007883a 	mov	r3,r2
 8013bf4:	00800344 	movi	r2,13
 8013bf8:	18800015 	stw	r2,0(r3)
 8013bfc:	00000406 	br	8013c10 <write+0xe8>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
 8013c00:	8013ad80 	call	8013ad8 <alt_get_errno>
 8013c04:	1007883a 	mov	r3,r2
 8013c08:	00801444 	movi	r2,81
 8013c0c:	18800015 	stw	r2,0(r3)
  }
  return -1;
 8013c10:	00bfffc4 	movi	r2,-1
}
 8013c14:	e037883a 	mov	sp,fp
 8013c18:	dfc00117 	ldw	ra,4(sp)
 8013c1c:	df000017 	ldw	fp,0(sp)
 8013c20:	dec00204 	addi	sp,sp,8
 8013c24:	f800283a 	ret

08013c28 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
 8013c28:	defffd04 	addi	sp,sp,-12
 8013c2c:	dfc00215 	stw	ra,8(sp)
 8013c30:	df000115 	stw	fp,4(sp)
 8013c34:	df000104 	addi	fp,sp,4
 8013c38:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
 8013c3c:	e13fff17 	ldw	r4,-4(fp)
 8013c40:	014200b4 	movhi	r5,2050
 8013c44:	29631e04 	addi	r5,r5,-29576
 8013c48:	80158480 	call	8015848 <alt_dev_llist_insert>
}
 8013c4c:	e037883a 	mov	sp,fp
 8013c50:	dfc00117 	ldw	ra,4(sp)
 8013c54:	df000017 	ldw	fp,0(sp)
 8013c58:	dec00204 	addi	sp,sp,8
 8013c5c:	f800283a 	ret

08013c60 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
 8013c60:	defffd04 	addi	sp,sp,-12
 8013c64:	dfc00215 	stw	ra,8(sp)
 8013c68:	df000115 	stw	fp,4(sp)
 8013c6c:	df000104 	addi	fp,sp,4
 8013c70:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
 8013c74:	80162e00 	call	80162e0 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
 8013c78:	00800044 	movi	r2,1
 8013c7c:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
 8013c80:	e037883a 	mov	sp,fp
 8013c84:	dfc00117 	ldw	ra,4(sp)
 8013c88:	df000017 	ldw	fp,0(sp)
 8013c8c:	dec00204 	addi	sp,sp,8
 8013c90:	f800283a 	ret

08013c94 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
 8013c94:	defffd04 	addi	sp,sp,-12
 8013c98:	dfc00215 	stw	ra,8(sp)
 8013c9c:	df000115 	stw	fp,4(sp)
 8013ca0:	df000104 	addi	fp,sp,4
    ALTERA_AVALON_DMA_INIT ( DMA_FPGA_TO_HPS, dma_fpga_to_hps);
 8013ca4:	008000c4 	movi	r2,3
 8013ca8:	d8800015 	stw	r2,0(sp)
 8013cac:	01020074 	movhi	r4,2049
 8013cb0:	211ecb04 	addi	r4,r4,31532
 8013cb4:	01420074 	movhi	r5,2049
 8013cb8:	295ed204 	addi	r5,r5,31560
 8013cbc:	01801004 	movi	r6,64
 8013cc0:	000f883a 	mov	r7,zero
 8013cc4:	80148240 	call	8014824 <alt_avalon_dma_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
 8013cc8:	01020074 	movhi	r4,2049
 8013ccc:	211ee304 	addi	r4,r4,31628
 8013cd0:	000b883a 	mov	r5,zero
 8013cd4:	000d883a 	mov	r6,zero
 8013cd8:	8014a300 	call	8014a30 <altera_avalon_jtag_uart_init>
 8013cdc:	01020074 	movhi	r4,2049
 8013ce0:	211ed904 	addi	r4,r4,31588
 8013ce4:	8013c280 	call	8013c28 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID, sysid);
 8013ce8:	0001883a 	nop
    ALTERA_UP_AVALON_RS232_INIT ( BT_RS232_UART, bt_rs232_uart);
 8013cec:	010200b4 	movhi	r4,2050
 8013cf0:	2122f104 	addi	r4,r4,-29756
 8013cf4:	8013c280 	call	8013c28 <alt_dev_reg>
    ALTERA_UP_AVALON_RS232_INIT ( WIFI_RS232_UART, wifi_rs232_uart);
 8013cf8:	010200b4 	movhi	r4,2050
 8013cfc:	2122fc04 	addi	r4,r4,-29712
 8013d00:	8013c280 	call	8013c28 <alt_dev_reg>
}
 8013d04:	e037883a 	mov	sp,fp
 8013d08:	dfc00117 	ldw	ra,4(sp)
 8013d0c:	df000017 	ldw	fp,0(sp)
 8013d10:	dec00204 	addi	sp,sp,8
 8013d14:	f800283a 	ret

08013d18 <alt_dma_txchan_reg>:
/*
 * Register a DMA transmit channel with the system.
 */

static ALT_INLINE int alt_dma_txchan_reg (alt_dma_txchan_dev* dev)
{
 8013d18:	defffd04 	addi	sp,sp,-12
 8013d1c:	dfc00215 	stw	ra,8(sp)
 8013d20:	df000115 	stw	fp,4(sp)
 8013d24:	df000104 	addi	fp,sp,4
 8013d28:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dma_txchan_list;

  return alt_dev_llist_insert((alt_dev_llist*) dev, &alt_dma_txchan_list);
 8013d2c:	e13fff17 	ldw	r4,-4(fp)
 8013d30:	014200b4 	movhi	r5,2050
 8013d34:	29632504 	addi	r5,r5,-29548
 8013d38:	80158480 	call	8015848 <alt_dev_llist_insert>
}
 8013d3c:	e037883a 	mov	sp,fp
 8013d40:	dfc00117 	ldw	ra,4(sp)
 8013d44:	df000017 	ldw	fp,0(sp)
 8013d48:	dec00204 	addi	sp,sp,8
 8013d4c:	f800283a 	ret

08013d50 <alt_dma_rxchan_reg>:
/*
 * Register a DMA receive channel with the system.
 */

static ALT_INLINE int alt_dma_rxchan_reg (alt_dma_rxchan_dev* dev)
{
 8013d50:	defffd04 	addi	sp,sp,-12
 8013d54:	dfc00215 	stw	ra,8(sp)
 8013d58:	df000115 	stw	fp,4(sp)
 8013d5c:	df000104 	addi	fp,sp,4
 8013d60:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dma_rxchan_list;

  return alt_dev_llist_insert((alt_dev_llist*) dev, &alt_dma_rxchan_list);
 8013d64:	e13fff17 	ldw	r4,-4(fp)
 8013d68:	014200b4 	movhi	r5,2050
 8013d6c:	29632304 	addi	r5,r5,-29556
 8013d70:	80158480 	call	8015848 <alt_dev_llist_insert>
}
 8013d74:	e037883a 	mov	sp,fp
 8013d78:	dfc00117 	ldw	ra,4(sp)
 8013d7c:	df000017 	ldw	fp,0(sp)
 8013d80:	dec00204 	addi	sp,sp,8
 8013d84:	f800283a 	ret

08013d88 <alt_avalon_dma_launch_bidir>:
 * both the receive and transmit channels are using incrementing addresses,
 * i.e. both channels are accesing memory rather than devices.
 */

void alt_avalon_dma_launch_bidir (alt_avalon_dma_priv* priv)
{
 8013d88:	defffc04 	addi	sp,sp,-16
 8013d8c:	df000315 	stw	fp,12(sp)
 8013d90:	df000304 	addi	fp,sp,12
 8013d94:	e13fff15 	stw	r4,-4(fp)
  alt_avalon_dma_txslot* tx_slot;
  alt_avalon_dma_rxslot* rx_slot;

  if ((priv->tx_start != priv->tx_end) && (priv->rx_start != priv->rx_end))
 8013d98:	e0bfff17 	ldw	r2,-4(fp)
 8013d9c:	10c00117 	ldw	r3,4(r2)
 8013da0:	e0bfff17 	ldw	r2,-4(fp)
 8013da4:	10800217 	ldw	r2,8(r2)
 8013da8:	18802e26 	beq	r3,r2,8013e64 <alt_avalon_dma_launch_bidir+0xdc>
 8013dac:	e0bfff17 	ldw	r2,-4(fp)
 8013db0:	10c00317 	ldw	r3,12(r2)
 8013db4:	e0bfff17 	ldw	r2,-4(fp)
 8013db8:	10800417 	ldw	r2,16(r2)
 8013dbc:	18802926 	beq	r3,r2,8013e64 <alt_avalon_dma_launch_bidir+0xdc>
  {
    priv->active = 1;
 8013dc0:	e0bfff17 	ldw	r2,-4(fp)
 8013dc4:	00c00044 	movi	r3,1
 8013dc8:	10c00815 	stw	r3,32(r2)

    tx_slot = &priv->tx_buf[priv->tx_start];
 8013dcc:	e0bfff17 	ldw	r2,-4(fp)
 8013dd0:	10800117 	ldw	r2,4(r2)
 8013dd4:	1004913a 	slli	r2,r2,4
 8013dd8:	10800904 	addi	r2,r2,36
 8013ddc:	e0ffff17 	ldw	r3,-4(fp)
 8013de0:	1885883a 	add	r2,r3,r2
 8013de4:	e0bffd15 	stw	r2,-12(fp)
    rx_slot = &priv->rx_buf[priv->rx_start];
 8013de8:	e0bfff17 	ldw	r2,-4(fp)
 8013dec:	10800317 	ldw	r2,12(r2)
 8013df0:	1004913a 	slli	r2,r2,4
 8013df4:	10801904 	addi	r2,r2,100
 8013df8:	e0ffff17 	ldw	r3,-4(fp)
 8013dfc:	1885883a 	add	r2,r3,r2
 8013e00:	e0bffe15 	stw	r2,-8(fp)

    IOWR_ALTERA_AVALON_DMA_RADDRESS (priv->base, (alt_u32) tx_slot->from);
 8013e04:	e0bfff17 	ldw	r2,-4(fp)
 8013e08:	10800017 	ldw	r2,0(r2)
 8013e0c:	10800104 	addi	r2,r2,4
 8013e10:	e0fffd17 	ldw	r3,-12(fp)
 8013e14:	18c00017 	ldw	r3,0(r3)
 8013e18:	10c00035 	stwio	r3,0(r2)
    IOWR_ALTERA_AVALON_DMA_WADDRESS (priv->base, (alt_u32) rx_slot->data);
 8013e1c:	e0bfff17 	ldw	r2,-4(fp)
 8013e20:	10800017 	ldw	r2,0(r2)
 8013e24:	10800204 	addi	r2,r2,8
 8013e28:	e0fffe17 	ldw	r3,-8(fp)
 8013e2c:	18c00017 	ldw	r3,0(r3)
 8013e30:	10c00035 	stwio	r3,0(r2)

    IOWR_ALTERA_AVALON_DMA_LENGTH (priv->base,
 8013e34:	e0bfff17 	ldw	r2,-4(fp)
 8013e38:	10800017 	ldw	r2,0(r2)
 8013e3c:	11000304 	addi	r4,r2,12
 8013e40:	e0bffd17 	ldw	r2,-12(fp)
 8013e44:	11400117 	ldw	r5,4(r2)
 8013e48:	e0bffe17 	ldw	r2,-8(fp)
 8013e4c:	10c00117 	ldw	r3,4(r2)
 8013e50:	2805883a 	mov	r2,r5
 8013e54:	1880012e 	bgeu	r3,r2,8013e5c <alt_avalon_dma_launch_bidir+0xd4>
 8013e58:	1805883a 	mov	r2,r3
 8013e5c:	20800035 	stwio	r2,0(r4)
 8013e60:	00000206 	br	8013e6c <alt_avalon_dma_launch_bidir+0xe4>
       (tx_slot->len > rx_slot->len) ? rx_slot->len : tx_slot->len);
  }
  else
  {
    priv->active = 0;
 8013e64:	e0bfff17 	ldw	r2,-4(fp)
 8013e68:	10000815 	stw	zero,32(r2)
  }
}
 8013e6c:	e037883a 	mov	sp,fp
 8013e70:	df000017 	ldw	fp,0(sp)
 8013e74:	dec00104 	addi	sp,sp,4
 8013e78:	f800283a 	ret

08013e7c <alt_avalon_dma_launch_txonly>:
 * i.e. the receive channel is accessing a single memory location (which is
 * probably a device register).
 */

static void alt_avalon_dma_launch_txonly (alt_avalon_dma_priv* priv)
{
 8013e7c:	defffd04 	addi	sp,sp,-12
 8013e80:	df000215 	stw	fp,8(sp)
 8013e84:	df000204 	addi	fp,sp,8
 8013e88:	e13fff15 	stw	r4,-4(fp)
  alt_avalon_dma_txslot* tx_slot;

  if (priv->tx_start != priv->tx_end)
 8013e8c:	e0bfff17 	ldw	r2,-4(fp)
 8013e90:	10c00117 	ldw	r3,4(r2)
 8013e94:	e0bfff17 	ldw	r2,-4(fp)
 8013e98:	10800217 	ldw	r2,8(r2)
 8013e9c:	18801726 	beq	r3,r2,8013efc <alt_avalon_dma_launch_txonly+0x80>
  {
    priv->active = 1;
 8013ea0:	e0bfff17 	ldw	r2,-4(fp)
 8013ea4:	00c00044 	movi	r3,1
 8013ea8:	10c00815 	stw	r3,32(r2)
    tx_slot      = &priv->tx_buf[priv->tx_start];
 8013eac:	e0bfff17 	ldw	r2,-4(fp)
 8013eb0:	10800117 	ldw	r2,4(r2)
 8013eb4:	1004913a 	slli	r2,r2,4
 8013eb8:	10800904 	addi	r2,r2,36
 8013ebc:	e0ffff17 	ldw	r3,-4(fp)
 8013ec0:	1885883a 	add	r2,r3,r2
 8013ec4:	e0bffe15 	stw	r2,-8(fp)

    IOWR_ALTERA_AVALON_DMA_RADDRESS (priv->base, (alt_u32) tx_slot->from);
 8013ec8:	e0bfff17 	ldw	r2,-4(fp)
 8013ecc:	10800017 	ldw	r2,0(r2)
 8013ed0:	10800104 	addi	r2,r2,4
 8013ed4:	e0fffe17 	ldw	r3,-8(fp)
 8013ed8:	18c00017 	ldw	r3,0(r3)
 8013edc:	10c00035 	stwio	r3,0(r2)
    IOWR_ALTERA_AVALON_DMA_LENGTH (priv->base, tx_slot->len);
 8013ee0:	e0bfff17 	ldw	r2,-4(fp)
 8013ee4:	10800017 	ldw	r2,0(r2)
 8013ee8:	10800304 	addi	r2,r2,12
 8013eec:	e0fffe17 	ldw	r3,-8(fp)
 8013ef0:	18c00117 	ldw	r3,4(r3)
 8013ef4:	10c00035 	stwio	r3,0(r2)
 8013ef8:	00000206 	br	8013f04 <alt_avalon_dma_launch_txonly+0x88>
  }
  else
  {
    priv->active = 0;
 8013efc:	e0bfff17 	ldw	r2,-4(fp)
 8013f00:	10000815 	stw	zero,32(r2)
  }
}
 8013f04:	e037883a 	mov	sp,fp
 8013f08:	df000017 	ldw	fp,0(sp)
 8013f0c:	dec00104 	addi	sp,sp,4
 8013f10:	f800283a 	ret

08013f14 <alt_avalon_dma_launch_rxonly>:
 * i.e. the transmit channel is accessing a single memory location (which is
 * probably a device register).
 */

static void alt_avalon_dma_launch_rxonly (alt_avalon_dma_priv* priv)
{
 8013f14:	defffd04 	addi	sp,sp,-12
 8013f18:	df000215 	stw	fp,8(sp)
 8013f1c:	df000204 	addi	fp,sp,8
 8013f20:	e13fff15 	stw	r4,-4(fp)
  alt_avalon_dma_rxslot* rx_slot;

  if (priv->rx_start != priv->rx_end)
 8013f24:	e0bfff17 	ldw	r2,-4(fp)
 8013f28:	10c00317 	ldw	r3,12(r2)
 8013f2c:	e0bfff17 	ldw	r2,-4(fp)
 8013f30:	10800417 	ldw	r2,16(r2)
 8013f34:	18801726 	beq	r3,r2,8013f94 <alt_avalon_dma_launch_rxonly+0x80>
  {
    priv->active = 1;
 8013f38:	e0bfff17 	ldw	r2,-4(fp)
 8013f3c:	00c00044 	movi	r3,1
 8013f40:	10c00815 	stw	r3,32(r2)
    rx_slot      = &priv->rx_buf[priv->rx_start];
 8013f44:	e0bfff17 	ldw	r2,-4(fp)
 8013f48:	10800317 	ldw	r2,12(r2)
 8013f4c:	1004913a 	slli	r2,r2,4
 8013f50:	10801904 	addi	r2,r2,100
 8013f54:	e0ffff17 	ldw	r3,-4(fp)
 8013f58:	1885883a 	add	r2,r3,r2
 8013f5c:	e0bffe15 	stw	r2,-8(fp)

    IOWR_ALTERA_AVALON_DMA_WADDRESS (priv->base, (alt_u32) rx_slot->data);
 8013f60:	e0bfff17 	ldw	r2,-4(fp)
 8013f64:	10800017 	ldw	r2,0(r2)
 8013f68:	10800204 	addi	r2,r2,8
 8013f6c:	e0fffe17 	ldw	r3,-8(fp)
 8013f70:	18c00017 	ldw	r3,0(r3)
 8013f74:	10c00035 	stwio	r3,0(r2)
    IOWR_ALTERA_AVALON_DMA_LENGTH (priv->base, rx_slot->len);
 8013f78:	e0bfff17 	ldw	r2,-4(fp)
 8013f7c:	10800017 	ldw	r2,0(r2)
 8013f80:	10800304 	addi	r2,r2,12
 8013f84:	e0fffe17 	ldw	r3,-8(fp)
 8013f88:	18c00117 	ldw	r3,4(r3)
 8013f8c:	10c00035 	stwio	r3,0(r2)
 8013f90:	00000206 	br	8013f9c <alt_avalon_dma_launch_rxonly+0x88>
  }
  else
  {
    priv->active = 0;
 8013f94:	e0bfff17 	ldw	r2,-4(fp)
 8013f98:	10000815 	stw	zero,32(r2)
  }
}
 8013f9c:	e037883a 	mov	sp,fp
 8013fa0:	df000017 	ldw	fp,0(sp)
 8013fa4:	dec00104 	addi	sp,sp,4
 8013fa8:	f800283a 	ret

08013fac <alt_avalon_dma_ioctl>:
 * device instance. See alt_dma_dev.h for the meaning of the supported
 * ioctl requests.
 */

static int alt_avalon_dma_ioctl (alt_avalon_dma_priv* priv, int req, void* arg)
{
 8013fac:	defffa04 	addi	sp,sp,-24
 8013fb0:	df000515 	stw	fp,20(sp)
 8013fb4:	df000504 	addi	fp,sp,20
 8013fb8:	e13ffd15 	stw	r4,-12(fp)
 8013fbc:	e17ffe15 	stw	r5,-8(fp)
 8013fc0:	e1bfff15 	stw	r6,-4(fp)
  int     status = 0;
 8013fc4:	e03ffb15 	stw	zero,-20(fp)
   * since it cannot catch concurrent calls to alt_alavalon_dma_prepare()
   * or alt_avalon_dma_send(), but it should at least catch the most
   * common class of problems.
   */

  if ((priv->tx_start != priv->tx_end) ||
 8013fc8:	e0bffd17 	ldw	r2,-12(fp)
 8013fcc:	10c00117 	ldw	r3,4(r2)
 8013fd0:	e0bffd17 	ldw	r2,-12(fp)
 8013fd4:	10800217 	ldw	r2,8(r2)
 8013fd8:	18800a1e 	bne	r3,r2,8014004 <alt_avalon_dma_ioctl+0x58>
      (priv->rx_start != priv->rx_end) ||
 8013fdc:	e0bffd17 	ldw	r2,-12(fp)
 8013fe0:	10c00317 	ldw	r3,12(r2)
 8013fe4:	e0bffd17 	ldw	r2,-12(fp)
 8013fe8:	10800417 	ldw	r2,16(r2)
   * since it cannot catch concurrent calls to alt_alavalon_dma_prepare()
   * or alt_avalon_dma_send(), but it should at least catch the most
   * common class of problems.
   */

  if ((priv->tx_start != priv->tx_end) ||
 8013fec:	1880051e 	bne	r3,r2,8014004 <alt_avalon_dma_ioctl+0x58>
      (priv->rx_start != priv->rx_end) ||
      IORD_ALTERA_AVALON_DMA_LENGTH (priv->base))
 8013ff0:	e0bffd17 	ldw	r2,-12(fp)
 8013ff4:	10800017 	ldw	r2,0(r2)
 8013ff8:	10800304 	addi	r2,r2,12
 8013ffc:	10800037 	ldwio	r2,0(r2)
   * or alt_avalon_dma_send(), but it should at least catch the most
   * common class of problems.
   */

  if ((priv->tx_start != priv->tx_end) ||
      (priv->rx_start != priv->rx_end) ||
 8014000:	10000226 	beq	r2,zero,801400c <alt_avalon_dma_ioctl+0x60>
      IORD_ALTERA_AVALON_DMA_LENGTH (priv->base))
  {
    return -EIO;
 8014004:	00bffec4 	movi	r2,-5
 8014008:	0000b506 	br	80142e0 <alt_avalon_dma_ioctl+0x334>
  }

  /* Now process the ioctl. */

  switch (req)
 801400c:	e0bffe17 	ldw	r2,-8(fp)
 8014010:	108002a8 	cmpgeui	r2,r2,10
 8014014:	1000781e 	bne	r2,zero,80141f8 <alt_avalon_dma_ioctl+0x24c>
 8014018:	e0bffe17 	ldw	r2,-8(fp)
 801401c:	100690ba 	slli	r3,r2,2
 8014020:	00820074 	movhi	r2,2049
 8014024:	10900d04 	addi	r2,r2,16436
 8014028:	1885883a 	add	r2,r3,r2
 801402c:	10800017 	ldw	r2,0(r2)
 8014030:	1000683a 	jmp	r2
 8014034:	080141f8 	rdprs	zero,at,1287
 8014038:	0801405c 	xori	zero,at,1281
 801403c:	080140b4 	orhi	zero,at,1282
 8014040:	080140e0 	cmpeqi	zero,at,1283
 8014044:	08014138 	rdprs	zero,at,1284
 8014048:	08014164 	muli	zero,at,1285
 801404c:	08014180 	call	801418 <__reset-0x77febe8>
 8014050:	080141a0 	cmpeqi	zero,at,1286
 8014054:	080141c0 	call	80141c <__reset-0x77febe4>
 8014058:	080141e0 	cmpeqi	zero,at,1287
  {
  case ALT_DMA_TX_STREAM_ON:
    if (!(priv->flags & ALT_AVALON_DMA_RX_STREAM))
 801405c:	e0bffd17 	ldw	r2,-12(fp)
 8014060:	10800517 	ldw	r2,20(r2)
 8014064:	1080100c 	andi	r2,r2,64
 8014068:	10000f1e 	bne	r2,zero,80140a8 <alt_avalon_dma_ioctl+0xfc>
    {
      IOWR_ALTERA_AVALON_DMA_RADDRESS (priv->base, (alt_u32) arg);
 801406c:	e0bffd17 	ldw	r2,-12(fp)
 8014070:	10800017 	ldw	r2,0(r2)
 8014074:	10800104 	addi	r2,r2,4
 8014078:	e0ffff17 	ldw	r3,-4(fp)
 801407c:	10c00035 	stwio	r3,0(r2)
      priv->flags |= ALT_AVALON_DMA_TX_STREAM;
 8014080:	e0bffd17 	ldw	r2,-12(fp)
 8014084:	10800517 	ldw	r2,20(r2)
 8014088:	10c00814 	ori	r3,r2,32
 801408c:	e0bffd17 	ldw	r2,-12(fp)
 8014090:	10c00515 	stw	r3,20(r2)
      priv->launch = alt_avalon_dma_launch_rxonly;
 8014094:	e0fffd17 	ldw	r3,-12(fp)
 8014098:	00820074 	movhi	r2,2049
 801409c:	108fc504 	addi	r2,r2,16148
 80140a0:	18800715 	stw	r2,28(r3)
    }
    else
    {
      status = -EIO;
    }
    break;
 80140a4:	00005606 	br	8014200 <alt_avalon_dma_ioctl+0x254>
      priv->flags |= ALT_AVALON_DMA_TX_STREAM;
      priv->launch = alt_avalon_dma_launch_rxonly;
    }
    else
    {
      status = -EIO;
 80140a8:	00bffec4 	movi	r2,-5
 80140ac:	e0bffb15 	stw	r2,-20(fp)
    }
    break;
 80140b0:	00005306 	br	8014200 <alt_avalon_dma_ioctl+0x254>
  case ALT_DMA_TX_STREAM_OFF:
    priv->flags &= ~ALT_AVALON_DMA_TX_STREAM;
 80140b4:	e0bffd17 	ldw	r2,-12(fp)
 80140b8:	10c00517 	ldw	r3,20(r2)
 80140bc:	00bff7c4 	movi	r2,-33
 80140c0:	1886703a 	and	r3,r3,r2
 80140c4:	e0bffd17 	ldw	r2,-12(fp)
 80140c8:	10c00515 	stw	r3,20(r2)
    priv->launch = alt_avalon_dma_launch_bidir;
 80140cc:	e0fffd17 	ldw	r3,-12(fp)
 80140d0:	00820074 	movhi	r2,2049
 80140d4:	108f6204 	addi	r2,r2,15752
 80140d8:	18800715 	stw	r2,28(r3)
    break;
 80140dc:	00004806 	br	8014200 <alt_avalon_dma_ioctl+0x254>
  case ALT_DMA_RX_STREAM_ON:
    if (!(priv->flags & ALT_AVALON_DMA_TX_STREAM))
 80140e0:	e0bffd17 	ldw	r2,-12(fp)
 80140e4:	10800517 	ldw	r2,20(r2)
 80140e8:	1080080c 	andi	r2,r2,32
 80140ec:	10000f1e 	bne	r2,zero,801412c <alt_avalon_dma_ioctl+0x180>
    {
      IOWR_ALTERA_AVALON_DMA_WADDRESS (priv->base, (alt_u32) arg);
 80140f0:	e0bffd17 	ldw	r2,-12(fp)
 80140f4:	10800017 	ldw	r2,0(r2)
 80140f8:	10800204 	addi	r2,r2,8
 80140fc:	e0ffff17 	ldw	r3,-4(fp)
 8014100:	10c00035 	stwio	r3,0(r2)
      priv->flags |= ALT_AVALON_DMA_RX_STREAM;
 8014104:	e0bffd17 	ldw	r2,-12(fp)
 8014108:	10800517 	ldw	r2,20(r2)
 801410c:	10c01014 	ori	r3,r2,64
 8014110:	e0bffd17 	ldw	r2,-12(fp)
 8014114:	10c00515 	stw	r3,20(r2)
      priv->launch = alt_avalon_dma_launch_txonly;
 8014118:	e0fffd17 	ldw	r3,-12(fp)
 801411c:	00820074 	movhi	r2,2049
 8014120:	108f9f04 	addi	r2,r2,15996
 8014124:	18800715 	stw	r2,28(r3)
    }
    else
    {
      status = -EIO;
    }
    break;
 8014128:	00003506 	br	8014200 <alt_avalon_dma_ioctl+0x254>
      priv->flags |= ALT_AVALON_DMA_RX_STREAM;
      priv->launch = alt_avalon_dma_launch_txonly;
    }
    else
    {
      status = -EIO;
 801412c:	00bffec4 	movi	r2,-5
 8014130:	e0bffb15 	stw	r2,-20(fp)
    }
    break;
 8014134:	00003206 	br	8014200 <alt_avalon_dma_ioctl+0x254>
  case ALT_DMA_RX_STREAM_OFF:
    priv->flags &= ~ALT_AVALON_DMA_RX_STREAM;
 8014138:	e0bffd17 	ldw	r2,-12(fp)
 801413c:	10c00517 	ldw	r3,20(r2)
 8014140:	00bfefc4 	movi	r2,-65
 8014144:	1886703a 	and	r3,r3,r2
 8014148:	e0bffd17 	ldw	r2,-12(fp)
 801414c:	10c00515 	stw	r3,20(r2)
    priv->launch = alt_avalon_dma_launch_bidir;
 8014150:	e0fffd17 	ldw	r3,-12(fp)
 8014154:	00820074 	movhi	r2,2049
 8014158:	108f6204 	addi	r2,r2,15752
 801415c:	18800715 	stw	r2,28(r3)
    break;
 8014160:	00002706 	br	8014200 <alt_avalon_dma_ioctl+0x254>
  case ALT_DMA_SET_MODE_8:
    priv->flags = (priv->flags & ~ALT_AVALON_DMA_MODE_MSK) |
 8014164:	e0bffd17 	ldw	r2,-12(fp)
 8014168:	10c00517 	ldw	r3,20(r2)
 801416c:	00bffc04 	movi	r2,-16
 8014170:	1886703a 	and	r3,r3,r2
 8014174:	e0bffd17 	ldw	r2,-12(fp)
 8014178:	10c00515 	stw	r3,20(r2)
      ALT_AVALON_DMA_MODE_8;
    break;
 801417c:	00002006 	br	8014200 <alt_avalon_dma_ioctl+0x254>
  case ALT_DMA_SET_MODE_16:
    priv->flags = (priv->flags & ~ALT_AVALON_DMA_MODE_MSK) |
 8014180:	e0bffd17 	ldw	r2,-12(fp)
 8014184:	10c00517 	ldw	r3,20(r2)
 8014188:	00bffc04 	movi	r2,-16
 801418c:	1884703a 	and	r2,r3,r2
 8014190:	10c00054 	ori	r3,r2,1
 8014194:	e0bffd17 	ldw	r2,-12(fp)
 8014198:	10c00515 	stw	r3,20(r2)
      ALT_AVALON_DMA_MODE_16;
    break;
 801419c:	00001806 	br	8014200 <alt_avalon_dma_ioctl+0x254>
  case ALT_DMA_SET_MODE_32:
    priv->flags = (priv->flags & ~ALT_AVALON_DMA_MODE_MSK) |
 80141a0:	e0bffd17 	ldw	r2,-12(fp)
 80141a4:	10c00517 	ldw	r3,20(r2)
 80141a8:	00bffc04 	movi	r2,-16
 80141ac:	1884703a 	and	r2,r3,r2
 80141b0:	10c000d4 	ori	r3,r2,3
 80141b4:	e0bffd17 	ldw	r2,-12(fp)
 80141b8:	10c00515 	stw	r3,20(r2)
      ALT_AVALON_DMA_MODE_32;
    break;
 80141bc:	00001006 	br	8014200 <alt_avalon_dma_ioctl+0x254>
  case ALT_DMA_SET_MODE_64:
    priv->flags = (priv->flags & ~ALT_AVALON_DMA_MODE_MSK) |
 80141c0:	e0bffd17 	ldw	r2,-12(fp)
 80141c4:	10c00517 	ldw	r3,20(r2)
 80141c8:	00bffc04 	movi	r2,-16
 80141cc:	1884703a 	and	r2,r3,r2
 80141d0:	10c001d4 	ori	r3,r2,7
 80141d4:	e0bffd17 	ldw	r2,-12(fp)
 80141d8:	10c00515 	stw	r3,20(r2)
      ALT_AVALON_DMA_MODE_64;
    break;
 80141dc:	00000806 	br	8014200 <alt_avalon_dma_ioctl+0x254>
  case ALT_DMA_SET_MODE_128:
    priv->flags = (priv->flags & ~ALT_AVALON_DMA_MODE_MSK) |
 80141e0:	e0bffd17 	ldw	r2,-12(fp)
 80141e4:	10800517 	ldw	r2,20(r2)
 80141e8:	10c003d4 	ori	r3,r2,15
 80141ec:	e0bffd17 	ldw	r2,-12(fp)
 80141f0:	10c00515 	stw	r3,20(r2)
      ALT_AVALON_DMA_MODE_128;
    break;
 80141f4:	00000206 	br	8014200 <alt_avalon_dma_ioctl+0x254>
  default:
    status = -ENOTTY;
 80141f8:	00bff9c4 	movi	r2,-25
 80141fc:	e0bffb15 	stw	r2,-20(fp)
  }

  if (!status)
 8014200:	e0bffb17 	ldw	r2,-20(fp)
 8014204:	1000351e 	bne	r2,zero,80142dc <alt_avalon_dma_ioctl+0x330>
  {
     switch (priv->flags & ALT_AVALON_DMA_MODE_MSK)
 8014208:	e0bffd17 	ldw	r2,-12(fp)
 801420c:	10800517 	ldw	r2,20(r2)
 8014210:	108003cc 	andi	r2,r2,15
 8014214:	10c00060 	cmpeqi	r3,r2,1
 8014218:	1800091e 	bne	r3,zero,8014240 <alt_avalon_dma_ioctl+0x294>
 801421c:	0080052e 	bgeu	zero,r2,8014234 <alt_avalon_dma_ioctl+0x288>
 8014220:	10c000e0 	cmpeqi	r3,r2,3
 8014224:	1800091e 	bne	r3,zero,801424c <alt_avalon_dma_ioctl+0x2a0>
 8014228:	108001e0 	cmpeqi	r2,r2,7
 801422c:	10000a1e 	bne	r2,zero,8014258 <alt_avalon_dma_ioctl+0x2ac>
 8014230:	00000c06 	br	8014264 <alt_avalon_dma_ioctl+0x2b8>
     {
     case ALT_AVALON_DMA_MODE_8:
       mode = ALTERA_AVALON_DMA_CONTROL_BYTE_MSK;
 8014234:	00800044 	movi	r2,1
 8014238:	e0bffc15 	stw	r2,-16(fp)
       break;
 801423c:	00000b06 	br	801426c <alt_avalon_dma_ioctl+0x2c0>
     case ALT_AVALON_DMA_MODE_16:
       mode = ALTERA_AVALON_DMA_CONTROL_HW_MSK;
 8014240:	00800084 	movi	r2,2
 8014244:	e0bffc15 	stw	r2,-16(fp)
       break;
 8014248:	00000806 	br	801426c <alt_avalon_dma_ioctl+0x2c0>
     case ALT_AVALON_DMA_MODE_32:
       mode = ALTERA_AVALON_DMA_CONTROL_WORD_MSK;
 801424c:	00800104 	movi	r2,4
 8014250:	e0bffc15 	stw	r2,-16(fp)
       break;
 8014254:	00000506 	br	801426c <alt_avalon_dma_ioctl+0x2c0>
     case ALT_AVALON_DMA_MODE_64:
       mode = ALTERA_AVALON_DMA_CONTROL_DWORD_MSK;
 8014258:	00810004 	movi	r2,1024
 801425c:	e0bffc15 	stw	r2,-16(fp)
       break;
 8014260:	00000206 	br	801426c <alt_avalon_dma_ioctl+0x2c0>
     default:
       mode = ALTERA_AVALON_DMA_CONTROL_QWORD_MSK;
 8014264:	00820004 	movi	r2,2048
 8014268:	e0bffc15 	stw	r2,-16(fp)
     }

    if (priv->flags & ALT_AVALON_DMA_TX_STREAM)
 801426c:	e0bffd17 	ldw	r2,-12(fp)
 8014270:	10800517 	ldw	r2,20(r2)
 8014274:	1080080c 	andi	r2,r2,32
 8014278:	10000726 	beq	r2,zero,8014298 <alt_avalon_dma_ioctl+0x2ec>
    {
      IOWR_ALTERA_AVALON_DMA_CONTROL (priv->base,
 801427c:	e0bffd17 	ldw	r2,-12(fp)
 8014280:	10800017 	ldw	r2,0(r2)
 8014284:	10800604 	addi	r2,r2,24
 8014288:	e0fffc17 	ldw	r3,-16(fp)
 801428c:	18c07e14 	ori	r3,r3,504
 8014290:	10c00035 	stwio	r3,0(r2)
 8014294:	00001106 	br	80142dc <alt_avalon_dma_ioctl+0x330>
        ALTERA_AVALON_DMA_CONTROL_REEN_MSK |
        ALTERA_AVALON_DMA_CONTROL_WEEN_MSK |
        ALTERA_AVALON_DMA_CONTROL_LEEN_MSK |
        ALTERA_AVALON_DMA_CONTROL_RCON_MSK);
    }
    else if (priv->flags & ALT_AVALON_DMA_RX_STREAM)
 8014298:	e0bffd17 	ldw	r2,-12(fp)
 801429c:	10800517 	ldw	r2,20(r2)
 80142a0:	1080100c 	andi	r2,r2,64
 80142a4:	10000726 	beq	r2,zero,80142c4 <alt_avalon_dma_ioctl+0x318>
    {
      IOWR_ALTERA_AVALON_DMA_CONTROL (priv->base,
 80142a8:	e0bffd17 	ldw	r2,-12(fp)
 80142ac:	10800017 	ldw	r2,0(r2)
 80142b0:	10800604 	addi	r2,r2,24
 80142b4:	e0fffc17 	ldw	r3,-16(fp)
 80142b8:	18c0be14 	ori	r3,r3,760
 80142bc:	10c00035 	stwio	r3,0(r2)
 80142c0:	00000606 	br	80142dc <alt_avalon_dma_ioctl+0x330>
        ALTERA_AVALON_DMA_CONTROL_LEEN_MSK |
        ALTERA_AVALON_DMA_CONTROL_WCON_MSK);
    }
    else
    {
      IOWR_ALTERA_AVALON_DMA_CONTROL (priv->base,
 80142c4:	e0bffd17 	ldw	r2,-12(fp)
 80142c8:	10800017 	ldw	r2,0(r2)
 80142cc:	10800604 	addi	r2,r2,24
 80142d0:	e0fffc17 	ldw	r3,-16(fp)
 80142d4:	18c03e14 	ori	r3,r3,248
 80142d8:	10c00035 	stwio	r3,0(r2)
        ALTERA_AVALON_DMA_CONTROL_WEEN_MSK      |
        ALTERA_AVALON_DMA_CONTROL_LEEN_MSK);
    }
  }

  return status;
 80142dc:	e0bffb17 	ldw	r2,-20(fp)
}
 80142e0:	e037883a 	mov	sp,fp
 80142e4:	df000017 	ldw	fp,0(sp)
 80142e8:	dec00104 	addi	sp,sp,4
 80142ec:	f800283a 	ret

080142f0 <alt_avalon_dma_tx_ioctl>:
 */

int alt_avalon_dma_tx_ioctl (alt_dma_txchan dma,
           int req,
           void* arg)
{
 80142f0:	defffb04 	addi	sp,sp,-20
 80142f4:	dfc00415 	stw	ra,16(sp)
 80142f8:	df000315 	stw	fp,12(sp)
 80142fc:	df000304 	addi	fp,sp,12
 8014300:	e13ffd15 	stw	r4,-12(fp)
 8014304:	e17ffe15 	stw	r5,-8(fp)
 8014308:	e1bfff15 	stw	r6,-4(fp)
  return alt_avalon_dma_ioctl (((alt_avalon_dma_txchan*) dma)->priv,
 801430c:	e0bffd17 	ldw	r2,-12(fp)
 8014310:	10800617 	ldw	r2,24(r2)
 8014314:	1009883a 	mov	r4,r2
 8014318:	e17ffe17 	ldw	r5,-8(fp)
 801431c:	e1bfff17 	ldw	r6,-4(fp)
 8014320:	8013fac0 	call	8013fac <alt_avalon_dma_ioctl>
             req,
             arg);
}
 8014324:	e037883a 	mov	sp,fp
 8014328:	dfc00117 	ldw	ra,4(sp)
 801432c:	df000017 	ldw	fp,0(sp)
 8014330:	dec00204 	addi	sp,sp,8
 8014334:	f800283a 	ret

08014338 <alt_avalon_dma_rx_ioctl>:
 */

int alt_avalon_dma_rx_ioctl (alt_dma_rxchan dma,
           int req,
           void* arg)
{
 8014338:	defffb04 	addi	sp,sp,-20
 801433c:	dfc00415 	stw	ra,16(sp)
 8014340:	df000315 	stw	fp,12(sp)
 8014344:	df000304 	addi	fp,sp,12
 8014348:	e13ffd15 	stw	r4,-12(fp)
 801434c:	e17ffe15 	stw	r5,-8(fp)
 8014350:	e1bfff15 	stw	r6,-4(fp)
  return alt_avalon_dma_ioctl (((alt_avalon_dma_rxchan*) dma)->priv,
 8014354:	e0bffd17 	ldw	r2,-12(fp)
 8014358:	10800617 	ldw	r2,24(r2)
 801435c:	1009883a 	mov	r4,r2
 8014360:	e17ffe17 	ldw	r5,-8(fp)
 8014364:	e1bfff17 	ldw	r6,-4(fp)
 8014368:	8013fac0 	call	8013fac <alt_avalon_dma_ioctl>
             req,
             arg);
}
 801436c:	e037883a 	mov	sp,fp
 8014370:	dfc00117 	ldw	ra,4(sp)
 8014374:	df000017 	ldw	fp,0(sp)
 8014378:	dec00204 	addi	sp,sp,8
 801437c:	f800283a 	ret

08014380 <alt_avalon_dma_prepare>:
int alt_avalon_dma_prepare (alt_dma_rxchan   dma,
                            void*            data,
                            alt_u32          len,
                            alt_rxchan_done* done,
                            void*            handle)
{
 8014380:	defff404 	addi	sp,sp,-48
 8014384:	dfc00b15 	stw	ra,44(sp)
 8014388:	df000a15 	stw	fp,40(sp)
 801438c:	df000a04 	addi	fp,sp,40
 8014390:	e13ffc15 	stw	r4,-16(fp)
 8014394:	e17ffd15 	stw	r5,-12(fp)
 8014398:	e1bffe15 	stw	r6,-8(fp)
 801439c:	e1ffff15 	stw	r7,-4(fp)
  alt_u32                end;
  alt_u32                next;
  alt_u32                align_mask;
  alt_avalon_dma_priv*   priv;

  priv = ((alt_avalon_dma_rxchan*) dma)->priv;
 80143a0:	e0bffc17 	ldw	r2,-16(fp)
 80143a4:	10800617 	ldw	r2,24(r2)
 80143a8:	e0bff615 	stw	r2,-40(fp)
  /*
   * Ensure that the data is correctly aligned, and that it's not too
   * big for the device.
   */

  align_mask = priv->flags & ALT_AVALON_DMA_MODE_MSK;
 80143ac:	e0bff617 	ldw	r2,-40(fp)
 80143b0:	10800517 	ldw	r2,20(r2)
 80143b4:	108003cc 	andi	r2,r2,15
 80143b8:	e0bff715 	stw	r2,-36(fp)

  if ((((alt_u32) data) & align_mask) || (len & align_mask) ||
 80143bc:	e0fffd17 	ldw	r3,-12(fp)
 80143c0:	e0bff717 	ldw	r2,-36(fp)
 80143c4:	1884703a 	and	r2,r3,r2
 80143c8:	1000081e 	bne	r2,zero,80143ec <alt_avalon_dma_prepare+0x6c>
 80143cc:	e0fffe17 	ldw	r3,-8(fp)
 80143d0:	e0bff717 	ldw	r2,-36(fp)
 80143d4:	1884703a 	and	r2,r3,r2
 80143d8:	1000041e 	bne	r2,zero,80143ec <alt_avalon_dma_prepare+0x6c>
     (len > priv->max_length))
 80143dc:	e0bff617 	ldw	r2,-40(fp)
 80143e0:	10c00617 	ldw	r3,24(r2)
   * big for the device.
   */

  align_mask = priv->flags & ALT_AVALON_DMA_MODE_MSK;

  if ((((alt_u32) data) & align_mask) || (len & align_mask) ||
 80143e4:	e0bffe17 	ldw	r2,-8(fp)
 80143e8:	1880022e 	bgeu	r3,r2,80143f4 <alt_avalon_dma_prepare+0x74>
     (len > priv->max_length))
  {
    return -EINVAL;
 80143ec:	00bffa84 	movi	r2,-22
 80143f0:	00002c06 	br	80144a4 <alt_avalon_dma_prepare+0x124>
  }

  start = priv->rx_start;
 80143f4:	e0bff617 	ldw	r2,-40(fp)
 80143f8:	10800317 	ldw	r2,12(r2)
 80143fc:	e0bff815 	stw	r2,-32(fp)
  end   = priv->rx_end;
 8014400:	e0bff617 	ldw	r2,-40(fp)
 8014404:	10800417 	ldw	r2,16(r2)
 8014408:	e0bff915 	stw	r2,-28(fp)
  slot  = &priv->rx_buf[end];
 801440c:	e0bff917 	ldw	r2,-28(fp)
 8014410:	1004913a 	slli	r2,r2,4
 8014414:	10801904 	addi	r2,r2,100
 8014418:	e0fff617 	ldw	r3,-40(fp)
 801441c:	1885883a 	add	r2,r3,r2
 8014420:	e0bffa15 	stw	r2,-24(fp)

  next  = (end + 1) & ALT_AVALON_DMA_NSLOTS_MSK;
 8014424:	e0bff917 	ldw	r2,-28(fp)
 8014428:	10800044 	addi	r2,r2,1
 801442c:	108000cc 	andi	r2,r2,3
 8014430:	e0bffb15 	stw	r2,-20(fp)

  if (next == start)
 8014434:	e0fffb17 	ldw	r3,-20(fp)
 8014438:	e0bff817 	ldw	r2,-32(fp)
 801443c:	1880021e 	bne	r3,r2,8014448 <alt_avalon_dma_prepare+0xc8>
  {
    return -ENOSPC;
 8014440:	00bff904 	movi	r2,-28
 8014444:	00001706 	br	80144a4 <alt_avalon_dma_prepare+0x124>
  }

  slot->data   = data;
 8014448:	e0bffa17 	ldw	r2,-24(fp)
 801444c:	e0fffd17 	ldw	r3,-12(fp)
 8014450:	10c00015 	stw	r3,0(r2)
  slot->len    = len;
 8014454:	e0bffa17 	ldw	r2,-24(fp)
 8014458:	e0fffe17 	ldw	r3,-8(fp)
 801445c:	10c00115 	stw	r3,4(r2)
  slot->done   = done;
 8014460:	e0bffa17 	ldw	r2,-24(fp)
 8014464:	e0ffff17 	ldw	r3,-4(fp)
 8014468:	10c00215 	stw	r3,8(r2)
  slot->handle = handle;
 801446c:	e0bffa17 	ldw	r2,-24(fp)
 8014470:	e0c00217 	ldw	r3,8(fp)
 8014474:	10c00315 	stw	r3,12(r2)

  priv->rx_end = next;
 8014478:	e0bff617 	ldw	r2,-40(fp)
 801447c:	e0fffb17 	ldw	r3,-20(fp)
 8014480:	10c00415 	stw	r3,16(r2)

  if (!priv->active)
 8014484:	e0bff617 	ldw	r2,-40(fp)
 8014488:	10800817 	ldw	r2,32(r2)
 801448c:	1000041e 	bne	r2,zero,80144a0 <alt_avalon_dma_prepare+0x120>
  {
    priv->launch (priv);
 8014490:	e0bff617 	ldw	r2,-40(fp)
 8014494:	10800717 	ldw	r2,28(r2)
 8014498:	e13ff617 	ldw	r4,-40(fp)
 801449c:	103ee83a 	callr	r2
  }

  return 0;
 80144a0:	0005883a 	mov	r2,zero
}
 80144a4:	e037883a 	mov	sp,fp
 80144a8:	dfc00117 	ldw	ra,4(sp)
 80144ac:	df000017 	ldw	fp,0(sp)
 80144b0:	dec00204 	addi	sp,sp,8
 80144b4:	f800283a 	ret

080144b8 <alt_avalon_dma_space>:
 *
 * A negative value indicates that the value could not be determined.
 */

int alt_avalon_dma_space (alt_dma_txchan dma)
{
 80144b8:	defffb04 	addi	sp,sp,-20
 80144bc:	df000415 	stw	fp,16(sp)
 80144c0:	df000404 	addi	fp,sp,16
 80144c4:	e13fff15 	stw	r4,-4(fp)
  alt_avalon_dma_priv* priv;

  alt_u32 start;
  alt_u32 end;

  priv = ((alt_avalon_dma_txchan*) dma)->priv;
 80144c8:	e0bfff17 	ldw	r2,-4(fp)
 80144cc:	10800617 	ldw	r2,24(r2)
 80144d0:	e0bffc15 	stw	r2,-16(fp)

  start = priv->tx_start;
 80144d4:	e0bffc17 	ldw	r2,-16(fp)
 80144d8:	10800117 	ldw	r2,4(r2)
 80144dc:	e0bffd15 	stw	r2,-12(fp)
  end   = priv->tx_end;
 80144e0:	e0bffc17 	ldw	r2,-16(fp)
 80144e4:	10800217 	ldw	r2,8(r2)
 80144e8:	e0bffe15 	stw	r2,-8(fp)

  return (start > end) ? start - end - 1 :
 80144ec:	e0bffd17 	ldw	r2,-12(fp)
 80144f0:	e0fffe17 	ldw	r3,-8(fp)
 80144f4:	1880052e 	bgeu	r3,r2,801450c <alt_avalon_dma_space+0x54>
 80144f8:	e0fffd17 	ldw	r3,-12(fp)
 80144fc:	e0bffe17 	ldw	r2,-8(fp)
 8014500:	1885c83a 	sub	r2,r3,r2
 8014504:	10bfffc4 	addi	r2,r2,-1
 8014508:	00000406 	br	801451c <alt_avalon_dma_space+0x64>
    ALT_AVALON_DMA_NSLOTS + start - end - 1;
 801450c:	e0fffd17 	ldw	r3,-12(fp)
 8014510:	e0bffe17 	ldw	r2,-8(fp)
 8014514:	1885c83a 	sub	r2,r3,r2
 8014518:	108000c4 	addi	r2,r2,3
}
 801451c:	e037883a 	mov	sp,fp
 8014520:	df000017 	ldw	fp,0(sp)
 8014524:	dec00104 	addi	sp,sp,4
 8014528:	f800283a 	ret

0801452c <alt_avalon_dma_send>:
int alt_avalon_dma_send (alt_dma_txchan   dma,
                         const void*      from,
                         alt_u32          len,
                         alt_txchan_done* done,
                         void*            handle)
{
 801452c:	defff404 	addi	sp,sp,-48
 8014530:	dfc00b15 	stw	ra,44(sp)
 8014534:	df000a15 	stw	fp,40(sp)
 8014538:	df000a04 	addi	fp,sp,40
 801453c:	e13ffc15 	stw	r4,-16(fp)
 8014540:	e17ffd15 	stw	r5,-12(fp)
 8014544:	e1bffe15 	stw	r6,-8(fp)
 8014548:	e1ffff15 	stw	r7,-4(fp)
  alt_u32                end;
  alt_u32                align_mask;
  alt_u32                next;
  alt_avalon_dma_priv*   priv;

  priv = ((alt_avalon_dma_txchan*) dma)->priv;
 801454c:	e0bffc17 	ldw	r2,-16(fp)
 8014550:	10800617 	ldw	r2,24(r2)
 8014554:	e0bff615 	stw	r2,-40(fp)
  /*
   * Ensure that the data is correctly aligned, and not too large
   * for the device
   */

  align_mask = priv->flags & ALT_AVALON_DMA_MODE_MSK;
 8014558:	e0bff617 	ldw	r2,-40(fp)
 801455c:	10800517 	ldw	r2,20(r2)
 8014560:	108003cc 	andi	r2,r2,15
 8014564:	e0bff715 	stw	r2,-36(fp)

  if ((((alt_u32) from) & align_mask) ||
 8014568:	e0fffd17 	ldw	r3,-12(fp)
 801456c:	e0bff717 	ldw	r2,-36(fp)
 8014570:	1884703a 	and	r2,r3,r2
 8014574:	1000081e 	bne	r2,zero,8014598 <alt_avalon_dma_send+0x6c>
        (len & align_mask)            ||
 8014578:	e0fffe17 	ldw	r3,-8(fp)
 801457c:	e0bff717 	ldw	r2,-36(fp)
 8014580:	1884703a 	and	r2,r3,r2
   * for the device
   */

  align_mask = priv->flags & ALT_AVALON_DMA_MODE_MSK;

  if ((((alt_u32) from) & align_mask) ||
 8014584:	1000041e 	bne	r2,zero,8014598 <alt_avalon_dma_send+0x6c>
        (len & align_mask)            ||
        (len > priv->max_length))
 8014588:	e0bff617 	ldw	r2,-40(fp)
 801458c:	10c00617 	ldw	r3,24(r2)
   */

  align_mask = priv->flags & ALT_AVALON_DMA_MODE_MSK;

  if ((((alt_u32) from) & align_mask) ||
        (len & align_mask)            ||
 8014590:	e0bffe17 	ldw	r2,-8(fp)
 8014594:	1880022e 	bgeu	r3,r2,80145a0 <alt_avalon_dma_send+0x74>
        (len > priv->max_length))
  {
    return -EINVAL;
 8014598:	00bffa84 	movi	r2,-22
 801459c:	00002c06 	br	8014650 <alt_avalon_dma_send+0x124>
  }

  start = priv->tx_start;
 80145a0:	e0bff617 	ldw	r2,-40(fp)
 80145a4:	10800117 	ldw	r2,4(r2)
 80145a8:	e0bff815 	stw	r2,-32(fp)
  end   = priv->tx_end;
 80145ac:	e0bff617 	ldw	r2,-40(fp)
 80145b0:	10800217 	ldw	r2,8(r2)
 80145b4:	e0bff915 	stw	r2,-28(fp)
  slot  = &priv->tx_buf[end];
 80145b8:	e0bff917 	ldw	r2,-28(fp)
 80145bc:	1004913a 	slli	r2,r2,4
 80145c0:	10800904 	addi	r2,r2,36
 80145c4:	e0fff617 	ldw	r3,-40(fp)
 80145c8:	1885883a 	add	r2,r3,r2
 80145cc:	e0bffa15 	stw	r2,-24(fp)
  next  = (end + 1) & ALT_AVALON_DMA_NSLOTS_MSK;
 80145d0:	e0bff917 	ldw	r2,-28(fp)
 80145d4:	10800044 	addi	r2,r2,1
 80145d8:	108000cc 	andi	r2,r2,3
 80145dc:	e0bffb15 	stw	r2,-20(fp)

  if (next == start)
 80145e0:	e0fffb17 	ldw	r3,-20(fp)
 80145e4:	e0bff817 	ldw	r2,-32(fp)
 80145e8:	1880021e 	bne	r3,r2,80145f4 <alt_avalon_dma_send+0xc8>
  {
    return -ENOSPC;
 80145ec:	00bff904 	movi	r2,-28
 80145f0:	00001706 	br	8014650 <alt_avalon_dma_send+0x124>
  }

  /* Fill in the descriptor */

  slot->from   = from;
 80145f4:	e0bffa17 	ldw	r2,-24(fp)
 80145f8:	e0fffd17 	ldw	r3,-12(fp)
 80145fc:	10c00015 	stw	r3,0(r2)
  slot->len    = len;
 8014600:	e0bffa17 	ldw	r2,-24(fp)
 8014604:	e0fffe17 	ldw	r3,-8(fp)
 8014608:	10c00115 	stw	r3,4(r2)
  slot->done   = done;
 801460c:	e0bffa17 	ldw	r2,-24(fp)
 8014610:	e0ffff17 	ldw	r3,-4(fp)
 8014614:	10c00215 	stw	r3,8(r2)
  slot->handle = handle;
 8014618:	e0bffa17 	ldw	r2,-24(fp)
 801461c:	e0c00217 	ldw	r3,8(fp)
 8014620:	10c00315 	stw	r3,12(r2)

  priv->tx_end = next;
 8014624:	e0bff617 	ldw	r2,-40(fp)
 8014628:	e0fffb17 	ldw	r3,-20(fp)
 801462c:	10c00215 	stw	r3,8(r2)

  if (!priv->active)
 8014630:	e0bff617 	ldw	r2,-40(fp)
 8014634:	10800817 	ldw	r2,32(r2)
 8014638:	1000041e 	bne	r2,zero,801464c <alt_avalon_dma_send+0x120>
  {
    priv->launch (priv);
 801463c:	e0bff617 	ldw	r2,-40(fp)
 8014640:	10800717 	ldw	r2,28(r2)
 8014644:	e13ff617 	ldw	r4,-40(fp)
 8014648:	103ee83a 	callr	r2
  }

  return 0;
 801464c:	0005883a 	mov	r2,zero
}
 8014650:	e037883a 	mov	sp,fp
 8014654:	dfc00117 	ldw	ra,4(sp)
 8014658:	df000017 	ldw	fp,0(sp)
 801465c:	dec00204 	addi	sp,sp,8
 8014660:	f800283a 	ret

08014664 <alt_avalon_dma_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_dma_irq (void* context)
#else
static void alt_avalon_dma_irq (void* context, alt_u32 id)
#endif
{
 8014664:	defff004 	addi	sp,sp,-64
 8014668:	dfc00f15 	stw	ra,60(sp)
 801466c:	df000e15 	stw	fp,56(sp)
 8014670:	df000e04 	addi	fp,sp,56
 8014674:	e13ffe15 	stw	r4,-8(fp)
 8014678:	e17fff15 	stw	r5,-4(fp)
  alt_avalon_dma_priv* priv = (alt_avalon_dma_priv*) context;
 801467c:	e0bffe17 	ldw	r2,-8(fp)
 8014680:	e0bff215 	stw	r2,-56(fp)
  alt_u32                rx_start;
  int                    stream_tx;
  int                    stream_rx;
  alt_irq_context        cpu_sr;

  stream_tx = priv->flags & ALT_AVALON_DMA_TX_STREAM;
 8014684:	e0bff217 	ldw	r2,-56(fp)
 8014688:	10800517 	ldw	r2,20(r2)
 801468c:	1080080c 	andi	r2,r2,32
 8014690:	e0bff315 	stw	r2,-52(fp)
  stream_rx = priv->flags & ALT_AVALON_DMA_RX_STREAM;
 8014694:	e0bff217 	ldw	r2,-56(fp)
 8014698:	10800517 	ldw	r2,20(r2)
 801469c:	1080100c 	andi	r2,r2,64
 80146a0:	e0bff415 	stw	r2,-48(fp)

  tx_start = priv->tx_start;
 80146a4:	e0bff217 	ldw	r2,-56(fp)
 80146a8:	10800117 	ldw	r2,4(r2)
 80146ac:	e0bff515 	stw	r2,-44(fp)
  rx_start = priv->rx_start;
 80146b0:	e0bff217 	ldw	r2,-56(fp)
 80146b4:	10800317 	ldw	r2,12(r2)
 80146b8:	e0bff615 	stw	r2,-40(fp)

  tx_slot = &priv->tx_buf[tx_start];
 80146bc:	e0bff517 	ldw	r2,-44(fp)
 80146c0:	1004913a 	slli	r2,r2,4
 80146c4:	10800904 	addi	r2,r2,36
 80146c8:	e0fff217 	ldw	r3,-56(fp)
 80146cc:	1885883a 	add	r2,r3,r2
 80146d0:	e0bff715 	stw	r2,-36(fp)
  rx_slot = &priv->rx_buf[rx_start];
 80146d4:	e0bff617 	ldw	r2,-40(fp)
 80146d8:	1004913a 	slli	r2,r2,4
 80146dc:	10801904 	addi	r2,r2,100
 80146e0:	e0fff217 	ldw	r3,-56(fp)
 80146e4:	1885883a 	add	r2,r3,r2
 80146e8:	e0bff815 	stw	r2,-32(fp)

  /* Increment the descriptors */

  if (!stream_tx)
 80146ec:	e0bff317 	ldw	r2,-52(fp)
 80146f0:	1000051e 	bne	r2,zero,8014708 <alt_avalon_dma_irq+0xa4>
  {
    priv->tx_start = (tx_start + 1) & ALT_AVALON_DMA_NSLOTS_MSK;
 80146f4:	e0bff517 	ldw	r2,-44(fp)
 80146f8:	10800044 	addi	r2,r2,1
 80146fc:	10c000cc 	andi	r3,r2,3
 8014700:	e0bff217 	ldw	r2,-56(fp)
 8014704:	10c00115 	stw	r3,4(r2)
  }
  if (!stream_rx)
 8014708:	e0bff417 	ldw	r2,-48(fp)
 801470c:	1000051e 	bne	r2,zero,8014724 <alt_avalon_dma_irq+0xc0>
  {
    priv->rx_start = (rx_start + 1) & ALT_AVALON_DMA_NSLOTS_MSK;
 8014710:	e0bff617 	ldw	r2,-40(fp)
 8014714:	10800044 	addi	r2,r2,1
 8014718:	10c000cc 	andi	r3,r2,3
 801471c:	e0bff217 	ldw	r2,-56(fp)
 8014720:	10c00315 	stw	r3,12(r2)
  }

  /* clear the interrupt */

  IOWR_ALTERA_AVALON_DMA_STATUS (priv->base, 0);
 8014724:	e0bff217 	ldw	r2,-56(fp)
 8014728:	10800017 	ldw	r2,0(r2)
 801472c:	0007883a 	mov	r3,zero
 8014730:	10c00035 	stwio	r3,0(r2)
  
  /* Dummy read to ensure IRQ is cleared prior to ISR completion*/
  IORD_ALTERA_AVALON_DMA_STATUS (priv->base);
 8014734:	e0bff217 	ldw	r2,-56(fp)
 8014738:	10800017 	ldw	r2,0(r2)
 801473c:	10800037 	ldwio	r2,0(r2)

  /* launch the next transaction */

  priv->launch (priv);
 8014740:	e0bff217 	ldw	r2,-56(fp)
 8014744:	10800717 	ldw	r2,28(r2)
 8014748:	e13ff217 	ldw	r4,-56(fp)
 801474c:	103ee83a 	callr	r2
   * Other interrupts are explicitly disabled if callbacks
   * are registered because there is no guarantee that they are 
   * preemption-safe. This allows the DMA driver to support 
   * interrupt preemption.
   */
  if (!stream_tx && tx_slot->done)
 8014750:	e0bff317 	ldw	r2,-52(fp)
 8014754:	1000151e 	bne	r2,zero,80147ac <alt_avalon_dma_irq+0x148>
 8014758:	e0bff717 	ldw	r2,-36(fp)
 801475c:	10800217 	ldw	r2,8(r2)
 8014760:	10001226 	beq	r2,zero,80147ac <alt_avalon_dma_irq+0x148>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 8014764:	0005303a 	rdctl	r2,status
 8014768:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 801476c:	e0fffa17 	ldw	r3,-24(fp)
 8014770:	00bfff84 	movi	r2,-2
 8014774:	1884703a 	and	r2,r3,r2
 8014778:	1001703a 	wrctl	status,r2
  
  return context;
 801477c:	e0bffa17 	ldw	r2,-24(fp)
  {
    cpu_sr = alt_irq_disable_all();
 8014780:	e0bff915 	stw	r2,-28(fp)
    tx_slot->done (tx_slot->handle);
 8014784:	e0bff717 	ldw	r2,-36(fp)
 8014788:	10800217 	ldw	r2,8(r2)
 801478c:	e0fff717 	ldw	r3,-36(fp)
 8014790:	18c00317 	ldw	r3,12(r3)
 8014794:	1809883a 	mov	r4,r3
 8014798:	103ee83a 	callr	r2
 801479c:	e0bff917 	ldw	r2,-28(fp)
 80147a0:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 80147a4:	e0bffb17 	ldw	r2,-20(fp)
 80147a8:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(cpu_sr);
    
  }
  if (!stream_rx && rx_slot->done)
 80147ac:	e0bff417 	ldw	r2,-48(fp)
 80147b0:	1000171e 	bne	r2,zero,8014810 <alt_avalon_dma_irq+0x1ac>
 80147b4:	e0bff817 	ldw	r2,-32(fp)
 80147b8:	10800217 	ldw	r2,8(r2)
 80147bc:	10001426 	beq	r2,zero,8014810 <alt_avalon_dma_irq+0x1ac>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 80147c0:	0005303a 	rdctl	r2,status
 80147c4:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 80147c8:	e0fffc17 	ldw	r3,-16(fp)
 80147cc:	00bfff84 	movi	r2,-2
 80147d0:	1884703a 	and	r2,r3,r2
 80147d4:	1001703a 	wrctl	status,r2
  
  return context;
 80147d8:	e0bffc17 	ldw	r2,-16(fp)
  {
    cpu_sr = alt_irq_disable_all();
 80147dc:	e0bff915 	stw	r2,-28(fp)
    rx_slot->done (rx_slot->handle, rx_slot->data);
 80147e0:	e0bff817 	ldw	r2,-32(fp)
 80147e4:	10800217 	ldw	r2,8(r2)
 80147e8:	e0fff817 	ldw	r3,-32(fp)
 80147ec:	19000317 	ldw	r4,12(r3)
 80147f0:	e0fff817 	ldw	r3,-32(fp)
 80147f4:	18c00017 	ldw	r3,0(r3)
 80147f8:	180b883a 	mov	r5,r3
 80147fc:	103ee83a 	callr	r2
 8014800:	e0bff917 	ldw	r2,-28(fp)
 8014804:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 8014808:	e0bffd17 	ldw	r2,-12(fp)
 801480c:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(cpu_sr);
  }
}
 8014810:	e037883a 	mov	sp,fp
 8014814:	dfc00117 	ldw	ra,4(sp)
 8014818:	df000017 	ldw	fp,0(sp)
 801481c:	dec00204 	addi	sp,sp,8
 8014820:	f800283a 	ret

08014824 <alt_avalon_dma_init>:
void alt_avalon_dma_init (alt_avalon_dma_txchan* tx,
                          alt_avalon_dma_rxchan* rx,
                          void*                  base,
                          alt_u32                ic_id,
                          alt_u32                irq)
{
 8014824:	defffa04 	addi	sp,sp,-24
 8014828:	dfc00515 	stw	ra,20(sp)
 801482c:	df000415 	stw	fp,16(sp)
 8014830:	df000404 	addi	fp,sp,16
 8014834:	e13ffc15 	stw	r4,-16(fp)
 8014838:	e17ffd15 	stw	r5,-12(fp)
 801483c:	e1bffe15 	stw	r6,-8(fp)
 8014840:	e1ffff15 	stw	r7,-4(fp)

  /* Halt any current transactions (reset the device) */
  IOWR_ALTERA_AVALON_DMA_CONTROL (base, ALTERA_AVALON_DMA_CONTROL_SOFTWARERESET_MSK);
 8014844:	e0bffe17 	ldw	r2,-8(fp)
 8014848:	10800604 	addi	r2,r2,24
 801484c:	00c40004 	movi	r3,4096
 8014850:	10c00035 	stwio	r3,0(r2)
  IOWR_ALTERA_AVALON_DMA_CONTROL (base, ALTERA_AVALON_DMA_CONTROL_SOFTWARERESET_MSK);
 8014854:	e0bffe17 	ldw	r2,-8(fp)
 8014858:	10800604 	addi	r2,r2,24
 801485c:	00c40004 	movi	r3,4096
 8014860:	10c00035 	stwio	r3,0(r2)

  /* Set the default mode of the device (32 bit block reads and writes from/to memory). */
  IOWR_ALTERA_AVALON_DMA_CONTROL (base,
 8014864:	e0bffe17 	ldw	r2,-8(fp)
 8014868:	10800604 	addi	r2,r2,24
 801486c:	00c03f04 	movi	r3,252
 8014870:	10c00035 	stwio	r3,0(r2)
                          ALTERA_AVALON_DMA_CONTROL_REEN_MSK      |
                          ALTERA_AVALON_DMA_CONTROL_WEEN_MSK      |
                          ALTERA_AVALON_DMA_CONTROL_LEEN_MSK);

  /* Clear any pending interrupts and the DONE flag */
  IOWR_ALTERA_AVALON_DMA_STATUS (base, 0);
 8014874:	0007883a 	mov	r3,zero
 8014878:	e0bffe17 	ldw	r2,-8(fp)
 801487c:	10c00035 	stwio	r3,0(r2)
   * system.
   */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  if (alt_ic_isr_register(ic_id, irq, alt_avalon_dma_irq, tx->priv, 0x0) >= 0)
#else
  if (alt_irq_register (irq, tx->priv, alt_avalon_dma_irq) >= 0)
 8014880:	e0bffc17 	ldw	r2,-16(fp)
 8014884:	10800617 	ldw	r2,24(r2)
 8014888:	e1000217 	ldw	r4,8(fp)
 801488c:	100b883a 	mov	r5,r2
 8014890:	01820074 	movhi	r6,2049
 8014894:	31919904 	addi	r6,r6,18020
 8014898:	8015cf00 	call	8015cf0 <alt_irq_register>
 801489c:	10000616 	blt	r2,zero,80148b8 <alt_avalon_dma_init+0x94>
#endif  
  {
    alt_dma_txchan_reg (&tx->dev);
 80148a0:	e0bffc17 	ldw	r2,-16(fp)
 80148a4:	1009883a 	mov	r4,r2
 80148a8:	8013d180 	call	8013d18 <alt_dma_txchan_reg>
    alt_dma_rxchan_reg (&rx->dev);
 80148ac:	e0bffd17 	ldw	r2,-12(fp)
 80148b0:	1009883a 	mov	r4,r2
 80148b4:	8013d500 	call	8013d50 <alt_dma_rxchan_reg>
  }
}
 80148b8:	e037883a 	mov	sp,fp
 80148bc:	dfc00117 	ldw	ra,4(sp)
 80148c0:	df000017 	ldw	fp,0(sp)
 80148c4:	dec00204 	addi	sp,sp,8
 80148c8:	f800283a 	ret

080148cc <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
 80148cc:	defffa04 	addi	sp,sp,-24
 80148d0:	dfc00515 	stw	ra,20(sp)
 80148d4:	df000415 	stw	fp,16(sp)
 80148d8:	df000404 	addi	fp,sp,16
 80148dc:	e13ffd15 	stw	r4,-12(fp)
 80148e0:	e17ffe15 	stw	r5,-8(fp)
 80148e4:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 80148e8:	e0bffd17 	ldw	r2,-12(fp)
 80148ec:	10800017 	ldw	r2,0(r2)
 80148f0:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
 80148f4:	e0bffc17 	ldw	r2,-16(fp)
 80148f8:	10c00a04 	addi	r3,r2,40
 80148fc:	e0bffd17 	ldw	r2,-12(fp)
 8014900:	10800217 	ldw	r2,8(r2)
 8014904:	1809883a 	mov	r4,r3
 8014908:	e17ffe17 	ldw	r5,-8(fp)
 801490c:	e1bfff17 	ldw	r6,-4(fp)
 8014910:	100f883a 	mov	r7,r2
 8014914:	8014eec0 	call	8014eec <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
 8014918:	e037883a 	mov	sp,fp
 801491c:	dfc00117 	ldw	ra,4(sp)
 8014920:	df000017 	ldw	fp,0(sp)
 8014924:	dec00204 	addi	sp,sp,8
 8014928:	f800283a 	ret

0801492c <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
 801492c:	defffa04 	addi	sp,sp,-24
 8014930:	dfc00515 	stw	ra,20(sp)
 8014934:	df000415 	stw	fp,16(sp)
 8014938:	df000404 	addi	fp,sp,16
 801493c:	e13ffd15 	stw	r4,-12(fp)
 8014940:	e17ffe15 	stw	r5,-8(fp)
 8014944:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 8014948:	e0bffd17 	ldw	r2,-12(fp)
 801494c:	10800017 	ldw	r2,0(r2)
 8014950:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
 8014954:	e0bffc17 	ldw	r2,-16(fp)
 8014958:	10c00a04 	addi	r3,r2,40
 801495c:	e0bffd17 	ldw	r2,-12(fp)
 8014960:	10800217 	ldw	r2,8(r2)
 8014964:	1809883a 	mov	r4,r3
 8014968:	e17ffe17 	ldw	r5,-8(fp)
 801496c:	e1bfff17 	ldw	r6,-4(fp)
 8014970:	100f883a 	mov	r7,r2
 8014974:	80150f80 	call	80150f8 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
 8014978:	e037883a 	mov	sp,fp
 801497c:	dfc00117 	ldw	ra,4(sp)
 8014980:	df000017 	ldw	fp,0(sp)
 8014984:	dec00204 	addi	sp,sp,8
 8014988:	f800283a 	ret

0801498c <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
 801498c:	defffc04 	addi	sp,sp,-16
 8014990:	dfc00315 	stw	ra,12(sp)
 8014994:	df000215 	stw	fp,8(sp)
 8014998:	df000204 	addi	fp,sp,8
 801499c:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 80149a0:	e0bfff17 	ldw	r2,-4(fp)
 80149a4:	10800017 	ldw	r2,0(r2)
 80149a8:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
 80149ac:	e0bffe17 	ldw	r2,-8(fp)
 80149b0:	10c00a04 	addi	r3,r2,40
 80149b4:	e0bfff17 	ldw	r2,-4(fp)
 80149b8:	10800217 	ldw	r2,8(r2)
 80149bc:	1809883a 	mov	r4,r3
 80149c0:	100b883a 	mov	r5,r2
 80149c4:	8014d980 	call	8014d98 <altera_avalon_jtag_uart_close>
}
 80149c8:	e037883a 	mov	sp,fp
 80149cc:	dfc00117 	ldw	ra,4(sp)
 80149d0:	df000017 	ldw	fp,0(sp)
 80149d4:	dec00204 	addi	sp,sp,8
 80149d8:	f800283a 	ret

080149dc <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
 80149dc:	defffa04 	addi	sp,sp,-24
 80149e0:	dfc00515 	stw	ra,20(sp)
 80149e4:	df000415 	stw	fp,16(sp)
 80149e8:	df000404 	addi	fp,sp,16
 80149ec:	e13ffd15 	stw	r4,-12(fp)
 80149f0:	e17ffe15 	stw	r5,-8(fp)
 80149f4:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
 80149f8:	e0bffd17 	ldw	r2,-12(fp)
 80149fc:	10800017 	ldw	r2,0(r2)
 8014a00:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
 8014a04:	e0bffc17 	ldw	r2,-16(fp)
 8014a08:	10800a04 	addi	r2,r2,40
 8014a0c:	1009883a 	mov	r4,r2
 8014a10:	e17ffe17 	ldw	r5,-8(fp)
 8014a14:	e1bfff17 	ldw	r6,-4(fp)
 8014a18:	8014e000 	call	8014e00 <altera_avalon_jtag_uart_ioctl>
}
 8014a1c:	e037883a 	mov	sp,fp
 8014a20:	dfc00117 	ldw	ra,4(sp)
 8014a24:	df000017 	ldw	fp,0(sp)
 8014a28:	dec00204 	addi	sp,sp,8
 8014a2c:	f800283a 	ret

08014a30 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
 8014a30:	defffb04 	addi	sp,sp,-20
 8014a34:	dfc00415 	stw	ra,16(sp)
 8014a38:	df000315 	stw	fp,12(sp)
 8014a3c:	df000304 	addi	fp,sp,12
 8014a40:	e13ffd15 	stw	r4,-12(fp)
 8014a44:	e17ffe15 	stw	r5,-8(fp)
 8014a48:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 8014a4c:	e0bffd17 	ldw	r2,-12(fp)
 8014a50:	00c00044 	movi	r3,1
 8014a54:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
 8014a58:	e0bffd17 	ldw	r2,-12(fp)
 8014a5c:	10800017 	ldw	r2,0(r2)
 8014a60:	10800104 	addi	r2,r2,4
 8014a64:	1007883a 	mov	r3,r2
 8014a68:	e0bffd17 	ldw	r2,-12(fp)
 8014a6c:	10800817 	ldw	r2,32(r2)
 8014a70:	18800035 	stwio	r2,0(r3)
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
                      sp, NULL);
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
 8014a74:	e0bfff17 	ldw	r2,-4(fp)
 8014a78:	1009883a 	mov	r4,r2
 8014a7c:	e17ffd17 	ldw	r5,-12(fp)
 8014a80:	01820074 	movhi	r6,2049
 8014a84:	3192ba04 	addi	r6,r6,19176
 8014a88:	8015cf00 	call	8015cf0 <alt_irq_register>
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
 8014a8c:	e0bffd17 	ldw	r2,-12(fp)
 8014a90:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
 8014a94:	e0bffd17 	ldw	r2,-12(fp)
 8014a98:	10c00204 	addi	r3,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
 8014a9c:	008200b4 	movhi	r2,2050
 8014aa0:	10aa5504 	addi	r2,r2,-22188
 8014aa4:	10800017 	ldw	r2,0(r2)
 8014aa8:	1809883a 	mov	r4,r3
 8014aac:	100b883a 	mov	r5,r2
 8014ab0:	01820074 	movhi	r6,2049
 8014ab4:	31933c04 	addi	r6,r6,19696
 8014ab8:	e1fffd17 	ldw	r7,-12(fp)
 8014abc:	801569c0 	call	801569c <alt_alarm_start>
 8014ac0:	1000040e 	bge	r2,zero,8014ad4 <altera_avalon_jtag_uart_init+0xa4>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
 8014ac4:	e0fffd17 	ldw	r3,-12(fp)
 8014ac8:	00a00034 	movhi	r2,32768
 8014acc:	10bfffc4 	addi	r2,r2,-1
 8014ad0:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
 8014ad4:	e037883a 	mov	sp,fp
 8014ad8:	dfc00117 	ldw	ra,4(sp)
 8014adc:	df000017 	ldw	fp,0(sp)
 8014ae0:	dec00204 	addi	sp,sp,8
 8014ae4:	f800283a 	ret

08014ae8 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
 8014ae8:	defff704 	addi	sp,sp,-36
 8014aec:	df000815 	stw	fp,32(sp)
 8014af0:	df000804 	addi	fp,sp,32
 8014af4:	e13ffe15 	stw	r4,-8(fp)
 8014af8:	e17fff15 	stw	r5,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
 8014afc:	e0bffe17 	ldw	r2,-8(fp)
 8014b00:	e0bffa15 	stw	r2,-24(fp)
  unsigned int base = sp->base;
 8014b04:	e0bffa17 	ldw	r2,-24(fp)
 8014b08:	10800017 	ldw	r2,0(r2)
 8014b0c:	e0bffb15 	stw	r2,-20(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 8014b10:	e0bffb17 	ldw	r2,-20(fp)
 8014b14:	10800104 	addi	r2,r2,4
 8014b18:	10800037 	ldwio	r2,0(r2)
 8014b1c:	e0bffc15 	stw	r2,-16(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
 8014b20:	e0bffc17 	ldw	r2,-16(fp)
 8014b24:	1080c00c 	andi	r2,r2,768
 8014b28:	1000011e 	bne	r2,zero,8014b30 <altera_avalon_jtag_uart_irq+0x48>
      break;
 8014b2c:	00006c06 	br	8014ce0 <altera_avalon_jtag_uart_irq+0x1f8>

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
 8014b30:	e0bffc17 	ldw	r2,-16(fp)
 8014b34:	1080400c 	andi	r2,r2,256
 8014b38:	10003426 	beq	r2,zero,8014c0c <altera_avalon_jtag_uart_irq+0x124>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
 8014b3c:	00800074 	movhi	r2,1
 8014b40:	e0bff815 	stw	r2,-32(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 8014b44:	e0bffa17 	ldw	r2,-24(fp)
 8014b48:	10800a17 	ldw	r2,40(r2)
 8014b4c:	10800044 	addi	r2,r2,1
 8014b50:	1081ffcc 	andi	r2,r2,2047
 8014b54:	e0bffd15 	stw	r2,-12(fp)
        if (next == sp->rx_out)
 8014b58:	e0bffa17 	ldw	r2,-24(fp)
 8014b5c:	10c00b17 	ldw	r3,44(r2)
 8014b60:	e0bffd17 	ldw	r2,-12(fp)
 8014b64:	1880011e 	bne	r3,r2,8014b6c <altera_avalon_jtag_uart_irq+0x84>
          break;
 8014b68:	00001606 	br	8014bc4 <altera_avalon_jtag_uart_irq+0xdc>

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
 8014b6c:	e0bffb17 	ldw	r2,-20(fp)
 8014b70:	10800037 	ldwio	r2,0(r2)
 8014b74:	e0bff815 	stw	r2,-32(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
 8014b78:	e0bff817 	ldw	r2,-32(fp)
 8014b7c:	10a0000c 	andi	r2,r2,32768
 8014b80:	1000011e 	bne	r2,zero,8014b88 <altera_avalon_jtag_uart_irq+0xa0>
          break;
 8014b84:	00000f06 	br	8014bc4 <altera_avalon_jtag_uart_irq+0xdc>

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
 8014b88:	e0bffa17 	ldw	r2,-24(fp)
 8014b8c:	10800a17 	ldw	r2,40(r2)
 8014b90:	e0fff817 	ldw	r3,-32(fp)
 8014b94:	1809883a 	mov	r4,r3
 8014b98:	e0fffa17 	ldw	r3,-24(fp)
 8014b9c:	1885883a 	add	r2,r3,r2
 8014ba0:	10800e04 	addi	r2,r2,56
 8014ba4:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 8014ba8:	e0bffa17 	ldw	r2,-24(fp)
 8014bac:	10800a17 	ldw	r2,40(r2)
 8014bb0:	10800044 	addi	r2,r2,1
 8014bb4:	10c1ffcc 	andi	r3,r2,2047
 8014bb8:	e0bffa17 	ldw	r2,-24(fp)
 8014bbc:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
 8014bc0:	003fe006 	br	8014b44 <__alt_data_end+0xfc014b44>

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
 8014bc4:	e0bff817 	ldw	r2,-32(fp)
 8014bc8:	10bfffec 	andhi	r2,r2,65535
 8014bcc:	10000f26 	beq	r2,zero,8014c0c <altera_avalon_jtag_uart_irq+0x124>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 8014bd0:	e0bffa17 	ldw	r2,-24(fp)
 8014bd4:	10c00817 	ldw	r3,32(r2)
 8014bd8:	00bfff84 	movi	r2,-2
 8014bdc:	1886703a 	and	r3,r3,r2
 8014be0:	e0bffa17 	ldw	r2,-24(fp)
 8014be4:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
 8014be8:	e0bffb17 	ldw	r2,-20(fp)
 8014bec:	10800104 	addi	r2,r2,4
 8014bf0:	1007883a 	mov	r3,r2
 8014bf4:	e0bffa17 	ldw	r2,-24(fp)
 8014bf8:	10800817 	ldw	r2,32(r2)
 8014bfc:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 8014c00:	e0bffb17 	ldw	r2,-20(fp)
 8014c04:	10800104 	addi	r2,r2,4
 8014c08:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
 8014c0c:	e0bffc17 	ldw	r2,-16(fp)
 8014c10:	1080800c 	andi	r2,r2,512
 8014c14:	10003126 	beq	r2,zero,8014cdc <altera_avalon_jtag_uart_irq+0x1f4>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
 8014c18:	e0bffc17 	ldw	r2,-16(fp)
 8014c1c:	1004d43a 	srli	r2,r2,16
 8014c20:	e0bff915 	stw	r2,-28(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
 8014c24:	00001406 	br	8014c78 <altera_avalon_jtag_uart_irq+0x190>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
 8014c28:	e0bffb17 	ldw	r2,-20(fp)
 8014c2c:	e0fffa17 	ldw	r3,-24(fp)
 8014c30:	18c00d17 	ldw	r3,52(r3)
 8014c34:	e13ffa17 	ldw	r4,-24(fp)
 8014c38:	20c7883a 	add	r3,r4,r3
 8014c3c:	18c20e04 	addi	r3,r3,2104
 8014c40:	18c00003 	ldbu	r3,0(r3)
 8014c44:	18c03fcc 	andi	r3,r3,255
 8014c48:	18c0201c 	xori	r3,r3,128
 8014c4c:	18ffe004 	addi	r3,r3,-128
 8014c50:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 8014c54:	e0bffa17 	ldw	r2,-24(fp)
 8014c58:	10800d17 	ldw	r2,52(r2)
 8014c5c:	10800044 	addi	r2,r2,1
 8014c60:	10c1ffcc 	andi	r3,r2,2047
 8014c64:	e0bffa17 	ldw	r2,-24(fp)
 8014c68:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
 8014c6c:	e0bff917 	ldw	r2,-28(fp)
 8014c70:	10bfffc4 	addi	r2,r2,-1
 8014c74:	e0bff915 	stw	r2,-28(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
 8014c78:	e0bff917 	ldw	r2,-28(fp)
 8014c7c:	10000526 	beq	r2,zero,8014c94 <altera_avalon_jtag_uart_irq+0x1ac>
 8014c80:	e0bffa17 	ldw	r2,-24(fp)
 8014c84:	10c00d17 	ldw	r3,52(r2)
 8014c88:	e0bffa17 	ldw	r2,-24(fp)
 8014c8c:	10800c17 	ldw	r2,48(r2)
 8014c90:	18bfe51e 	bne	r3,r2,8014c28 <__alt_data_end+0xfc014c28>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
 8014c94:	e0bff917 	ldw	r2,-28(fp)
 8014c98:	10001026 	beq	r2,zero,8014cdc <altera_avalon_jtag_uart_irq+0x1f4>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 8014c9c:	e0bffa17 	ldw	r2,-24(fp)
 8014ca0:	10c00817 	ldw	r3,32(r2)
 8014ca4:	00bfff44 	movi	r2,-3
 8014ca8:	1886703a 	and	r3,r3,r2
 8014cac:	e0bffa17 	ldw	r2,-24(fp)
 8014cb0:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 8014cb4:	e0bffa17 	ldw	r2,-24(fp)
 8014cb8:	10800017 	ldw	r2,0(r2)
 8014cbc:	10800104 	addi	r2,r2,4
 8014cc0:	1007883a 	mov	r3,r2
 8014cc4:	e0bffa17 	ldw	r2,-24(fp)
 8014cc8:	10800817 	ldw	r2,32(r2)
 8014ccc:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 8014cd0:	e0bffb17 	ldw	r2,-20(fp)
 8014cd4:	10800104 	addi	r2,r2,4
 8014cd8:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
 8014cdc:	003f8c06 	br	8014b10 <__alt_data_end+0xfc014b10>
}
 8014ce0:	e037883a 	mov	sp,fp
 8014ce4:	df000017 	ldw	fp,0(sp)
 8014ce8:	dec00104 	addi	sp,sp,4
 8014cec:	f800283a 	ret

08014cf0 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
 8014cf0:	defff804 	addi	sp,sp,-32
 8014cf4:	df000715 	stw	fp,28(sp)
 8014cf8:	df000704 	addi	fp,sp,28
 8014cfc:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
 8014d00:	e0bffb17 	ldw	r2,-20(fp)
 8014d04:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
 8014d08:	e0bff917 	ldw	r2,-28(fp)
 8014d0c:	10800017 	ldw	r2,0(r2)
 8014d10:	10800104 	addi	r2,r2,4
 8014d14:	10800037 	ldwio	r2,0(r2)
 8014d18:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
 8014d1c:	e0bffa17 	ldw	r2,-24(fp)
 8014d20:	1081000c 	andi	r2,r2,1024
 8014d24:	10000b26 	beq	r2,zero,8014d54 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
 8014d28:	e0bff917 	ldw	r2,-28(fp)
 8014d2c:	10800017 	ldw	r2,0(r2)
 8014d30:	10800104 	addi	r2,r2,4
 8014d34:	1007883a 	mov	r3,r2
 8014d38:	e0bff917 	ldw	r2,-28(fp)
 8014d3c:	10800817 	ldw	r2,32(r2)
 8014d40:	10810014 	ori	r2,r2,1024
 8014d44:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
 8014d48:	e0bff917 	ldw	r2,-28(fp)
 8014d4c:	10000915 	stw	zero,36(r2)
 8014d50:	00000a06 	br	8014d7c <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
 8014d54:	e0bff917 	ldw	r2,-28(fp)
 8014d58:	10c00917 	ldw	r3,36(r2)
 8014d5c:	00a00034 	movhi	r2,32768
 8014d60:	10bfff04 	addi	r2,r2,-4
 8014d64:	10c00536 	bltu	r2,r3,8014d7c <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
 8014d68:	e0bff917 	ldw	r2,-28(fp)
 8014d6c:	10800917 	ldw	r2,36(r2)
 8014d70:	10c00044 	addi	r3,r2,1
 8014d74:	e0bff917 	ldw	r2,-28(fp)
 8014d78:	10c00915 	stw	r3,36(r2)
 8014d7c:	008200b4 	movhi	r2,2050
 8014d80:	10aa5504 	addi	r2,r2,-22188
 8014d84:	10800017 	ldw	r2,0(r2)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
 8014d88:	e037883a 	mov	sp,fp
 8014d8c:	df000017 	ldw	fp,0(sp)
 8014d90:	dec00104 	addi	sp,sp,4
 8014d94:	f800283a 	ret

08014d98 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
 8014d98:	defffd04 	addi	sp,sp,-12
 8014d9c:	df000215 	stw	fp,8(sp)
 8014da0:	df000204 	addi	fp,sp,8
 8014da4:	e13ffe15 	stw	r4,-8(fp)
 8014da8:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 8014dac:	00000506 	br	8014dc4 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
 8014db0:	e0bfff17 	ldw	r2,-4(fp)
 8014db4:	1090000c 	andi	r2,r2,16384
 8014db8:	10000226 	beq	r2,zero,8014dc4 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
 8014dbc:	00bffd44 	movi	r2,-11
 8014dc0:	00000b06 	br	8014df0 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 8014dc4:	e0bffe17 	ldw	r2,-8(fp)
 8014dc8:	10c00d17 	ldw	r3,52(r2)
 8014dcc:	e0bffe17 	ldw	r2,-8(fp)
 8014dd0:	10800c17 	ldw	r2,48(r2)
 8014dd4:	18800526 	beq	r3,r2,8014dec <altera_avalon_jtag_uart_close+0x54>
 8014dd8:	e0bffe17 	ldw	r2,-8(fp)
 8014ddc:	10c00917 	ldw	r3,36(r2)
 8014de0:	e0bffe17 	ldw	r2,-8(fp)
 8014de4:	10800117 	ldw	r2,4(r2)
 8014de8:	18bff136 	bltu	r3,r2,8014db0 <__alt_data_end+0xfc014db0>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
 8014dec:	0005883a 	mov	r2,zero
}
 8014df0:	e037883a 	mov	sp,fp
 8014df4:	df000017 	ldw	fp,0(sp)
 8014df8:	dec00104 	addi	sp,sp,4
 8014dfc:	f800283a 	ret

08014e00 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
 8014e00:	defffa04 	addi	sp,sp,-24
 8014e04:	df000515 	stw	fp,20(sp)
 8014e08:	df000504 	addi	fp,sp,20
 8014e0c:	e13ffd15 	stw	r4,-12(fp)
 8014e10:	e17ffe15 	stw	r5,-8(fp)
 8014e14:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
 8014e18:	00bff9c4 	movi	r2,-25
 8014e1c:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
 8014e20:	e0bffe17 	ldw	r2,-8(fp)
 8014e24:	10da8060 	cmpeqi	r3,r2,27137
 8014e28:	1800031e 	bne	r3,zero,8014e38 <altera_avalon_jtag_uart_ioctl+0x38>
 8014e2c:	109a80a0 	cmpeqi	r2,r2,27138
 8014e30:	1000191e 	bne	r2,zero,8014e98 <altera_avalon_jtag_uart_ioctl+0x98>
      rc = 0;
    }
    break;

  default:
    break;
 8014e34:	00002806 	br	8014ed8 <altera_avalon_jtag_uart_ioctl+0xd8>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
 8014e38:	e0bffd17 	ldw	r2,-12(fp)
 8014e3c:	10c00117 	ldw	r3,4(r2)
 8014e40:	00a00034 	movhi	r2,32768
 8014e44:	10bfffc4 	addi	r2,r2,-1
 8014e48:	18801226 	beq	r3,r2,8014e94 <altera_avalon_jtag_uart_ioctl+0x94>
    {
      int timeout = *((int *)arg);
 8014e4c:	e0bfff17 	ldw	r2,-4(fp)
 8014e50:	10800017 	ldw	r2,0(r2)
 8014e54:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
 8014e58:	e0bffc17 	ldw	r2,-16(fp)
 8014e5c:	10800090 	cmplti	r2,r2,2
 8014e60:	1000061e 	bne	r2,zero,8014e7c <altera_avalon_jtag_uart_ioctl+0x7c>
 8014e64:	e0fffc17 	ldw	r3,-16(fp)
 8014e68:	00a00034 	movhi	r2,32768
 8014e6c:	10bfffc4 	addi	r2,r2,-1
 8014e70:	18800226 	beq	r3,r2,8014e7c <altera_avalon_jtag_uart_ioctl+0x7c>
 8014e74:	e0bffc17 	ldw	r2,-16(fp)
 8014e78:	00000206 	br	8014e84 <altera_avalon_jtag_uart_ioctl+0x84>
 8014e7c:	00a00034 	movhi	r2,32768
 8014e80:	10bfff84 	addi	r2,r2,-2
 8014e84:	e0fffd17 	ldw	r3,-12(fp)
 8014e88:	18800115 	stw	r2,4(r3)
      rc = 0;
 8014e8c:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
 8014e90:	00001106 	br	8014ed8 <altera_avalon_jtag_uart_ioctl+0xd8>
 8014e94:	00001006 	br	8014ed8 <altera_avalon_jtag_uart_ioctl+0xd8>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
 8014e98:	e0bffd17 	ldw	r2,-12(fp)
 8014e9c:	10c00117 	ldw	r3,4(r2)
 8014ea0:	00a00034 	movhi	r2,32768
 8014ea4:	10bfffc4 	addi	r2,r2,-1
 8014ea8:	18800a26 	beq	r3,r2,8014ed4 <altera_avalon_jtag_uart_ioctl+0xd4>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
 8014eac:	e0bffd17 	ldw	r2,-12(fp)
 8014eb0:	10c00917 	ldw	r3,36(r2)
 8014eb4:	e0bffd17 	ldw	r2,-12(fp)
 8014eb8:	10800117 	ldw	r2,4(r2)
 8014ebc:	1885803a 	cmpltu	r2,r3,r2
 8014ec0:	10c03fcc 	andi	r3,r2,255
 8014ec4:	e0bfff17 	ldw	r2,-4(fp)
 8014ec8:	10c00015 	stw	r3,0(r2)
      rc = 0;
 8014ecc:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
 8014ed0:	00000006 	br	8014ed4 <altera_avalon_jtag_uart_ioctl+0xd4>
 8014ed4:	0001883a 	nop

  default:
    break;
  }

  return rc;
 8014ed8:	e0bffb17 	ldw	r2,-20(fp)
}
 8014edc:	e037883a 	mov	sp,fp
 8014ee0:	df000017 	ldw	fp,0(sp)
 8014ee4:	dec00104 	addi	sp,sp,4
 8014ee8:	f800283a 	ret

08014eec <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
 8014eec:	defff304 	addi	sp,sp,-52
 8014ef0:	dfc00c15 	stw	ra,48(sp)
 8014ef4:	df000b15 	stw	fp,44(sp)
 8014ef8:	df000b04 	addi	fp,sp,44
 8014efc:	e13ffc15 	stw	r4,-16(fp)
 8014f00:	e17ffd15 	stw	r5,-12(fp)
 8014f04:	e1bffe15 	stw	r6,-8(fp)
 8014f08:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
 8014f0c:	e0bffd17 	ldw	r2,-12(fp)
 8014f10:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 8014f14:	00004906 	br	801503c <altera_avalon_jtag_uart_read+0x150>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
 8014f18:	e0bffc17 	ldw	r2,-16(fp)
 8014f1c:	10800a17 	ldw	r2,40(r2)
 8014f20:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
 8014f24:	e0bffc17 	ldw	r2,-16(fp)
 8014f28:	10800b17 	ldw	r2,44(r2)
 8014f2c:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
 8014f30:	e0fff717 	ldw	r3,-36(fp)
 8014f34:	e0bff817 	ldw	r2,-32(fp)
 8014f38:	18800536 	bltu	r3,r2,8014f50 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
 8014f3c:	e0fff717 	ldw	r3,-36(fp)
 8014f40:	e0bff817 	ldw	r2,-32(fp)
 8014f44:	1885c83a 	sub	r2,r3,r2
 8014f48:	e0bff615 	stw	r2,-40(fp)
 8014f4c:	00000406 	br	8014f60 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
 8014f50:	00c20004 	movi	r3,2048
 8014f54:	e0bff817 	ldw	r2,-32(fp)
 8014f58:	1885c83a 	sub	r2,r3,r2
 8014f5c:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
 8014f60:	e0bff617 	ldw	r2,-40(fp)
 8014f64:	1000011e 	bne	r2,zero,8014f6c <altera_avalon_jtag_uart_read+0x80>
        break; /* No more data available */
 8014f68:	00001d06 	br	8014fe0 <altera_avalon_jtag_uart_read+0xf4>

      if (n > space)
 8014f6c:	e0fffe17 	ldw	r3,-8(fp)
 8014f70:	e0bff617 	ldw	r2,-40(fp)
 8014f74:	1880022e 	bgeu	r3,r2,8014f80 <altera_avalon_jtag_uart_read+0x94>
        n = space;
 8014f78:	e0bffe17 	ldw	r2,-8(fp)
 8014f7c:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
 8014f80:	e0bff817 	ldw	r2,-32(fp)
 8014f84:	10800e04 	addi	r2,r2,56
 8014f88:	e0fffc17 	ldw	r3,-16(fp)
 8014f8c:	1885883a 	add	r2,r3,r2
 8014f90:	e13ff517 	ldw	r4,-44(fp)
 8014f94:	100b883a 	mov	r5,r2
 8014f98:	e1bff617 	ldw	r6,-40(fp)
 8014f9c:	800ae700 	call	800ae70 <memcpy>
      ptr   += n;
 8014fa0:	e0fff517 	ldw	r3,-44(fp)
 8014fa4:	e0bff617 	ldw	r2,-40(fp)
 8014fa8:	1885883a 	add	r2,r3,r2
 8014fac:	e0bff515 	stw	r2,-44(fp)
      space -= n;
 8014fb0:	e0fffe17 	ldw	r3,-8(fp)
 8014fb4:	e0bff617 	ldw	r2,-40(fp)
 8014fb8:	1885c83a 	sub	r2,r3,r2
 8014fbc:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 8014fc0:	e0fff817 	ldw	r3,-32(fp)
 8014fc4:	e0bff617 	ldw	r2,-40(fp)
 8014fc8:	1885883a 	add	r2,r3,r2
 8014fcc:	10c1ffcc 	andi	r3,r2,2047
 8014fd0:	e0bffc17 	ldw	r2,-16(fp)
 8014fd4:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
 8014fd8:	e0bffe17 	ldw	r2,-8(fp)
 8014fdc:	00bfce16 	blt	zero,r2,8014f18 <__alt_data_end+0xfc014f18>

    /* If we read any data then return it */
    if (ptr != buffer)
 8014fe0:	e0fff517 	ldw	r3,-44(fp)
 8014fe4:	e0bffd17 	ldw	r2,-12(fp)
 8014fe8:	18800126 	beq	r3,r2,8014ff0 <altera_avalon_jtag_uart_read+0x104>
      break;
 8014fec:	00001506 	br	8015044 <altera_avalon_jtag_uart_read+0x158>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
 8014ff0:	e0bfff17 	ldw	r2,-4(fp)
 8014ff4:	1090000c 	andi	r2,r2,16384
 8014ff8:	10000126 	beq	r2,zero,8015000 <altera_avalon_jtag_uart_read+0x114>
      break;
 8014ffc:	00001106 	br	8015044 <altera_avalon_jtag_uart_read+0x158>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
 8015000:	0001883a 	nop
 8015004:	e0bffc17 	ldw	r2,-16(fp)
 8015008:	10c00a17 	ldw	r3,40(r2)
 801500c:	e0bff717 	ldw	r2,-36(fp)
 8015010:	1880051e 	bne	r3,r2,8015028 <altera_avalon_jtag_uart_read+0x13c>
 8015014:	e0bffc17 	ldw	r2,-16(fp)
 8015018:	10c00917 	ldw	r3,36(r2)
 801501c:	e0bffc17 	ldw	r2,-16(fp)
 8015020:	10800117 	ldw	r2,4(r2)
 8015024:	18bff736 	bltu	r3,r2,8015004 <__alt_data_end+0xfc015004>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
 8015028:	e0bffc17 	ldw	r2,-16(fp)
 801502c:	10c00a17 	ldw	r3,40(r2)
 8015030:	e0bff717 	ldw	r2,-36(fp)
 8015034:	1880011e 	bne	r3,r2,801503c <altera_avalon_jtag_uart_read+0x150>
      break;
 8015038:	00000206 	br	8015044 <altera_avalon_jtag_uart_read+0x158>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 801503c:	e0bffe17 	ldw	r2,-8(fp)
 8015040:	00bfb516 	blt	zero,r2,8014f18 <__alt_data_end+0xfc014f18>
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
 8015044:	e0fff517 	ldw	r3,-44(fp)
 8015048:	e0bffd17 	ldw	r2,-12(fp)
 801504c:	18801826 	beq	r3,r2,80150b0 <altera_avalon_jtag_uart_read+0x1c4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 8015050:	0005303a 	rdctl	r2,status
 8015054:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 8015058:	e0fffa17 	ldw	r3,-24(fp)
 801505c:	00bfff84 	movi	r2,-2
 8015060:	1884703a 	and	r2,r3,r2
 8015064:	1001703a 	wrctl	status,r2
  
  return context;
 8015068:	e0bffa17 	ldw	r2,-24(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
 801506c:	e0bff915 	stw	r2,-28(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 8015070:	e0bffc17 	ldw	r2,-16(fp)
 8015074:	10800817 	ldw	r2,32(r2)
 8015078:	10c00054 	ori	r3,r2,1
 801507c:	e0bffc17 	ldw	r2,-16(fp)
 8015080:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 8015084:	e0bffc17 	ldw	r2,-16(fp)
 8015088:	10800017 	ldw	r2,0(r2)
 801508c:	10800104 	addi	r2,r2,4
 8015090:	1007883a 	mov	r3,r2
 8015094:	e0bffc17 	ldw	r2,-16(fp)
 8015098:	10800817 	ldw	r2,32(r2)
 801509c:	18800035 	stwio	r2,0(r3)
 80150a0:	e0bff917 	ldw	r2,-28(fp)
 80150a4:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 80150a8:	e0bffb17 	ldw	r2,-20(fp)
 80150ac:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
 80150b0:	e0fff517 	ldw	r3,-44(fp)
 80150b4:	e0bffd17 	ldw	r2,-12(fp)
 80150b8:	18800426 	beq	r3,r2,80150cc <altera_avalon_jtag_uart_read+0x1e0>
    return ptr - buffer;
 80150bc:	e0fff517 	ldw	r3,-44(fp)
 80150c0:	e0bffd17 	ldw	r2,-12(fp)
 80150c4:	1885c83a 	sub	r2,r3,r2
 80150c8:	00000606 	br	80150e4 <altera_avalon_jtag_uart_read+0x1f8>
  else if (flags & O_NONBLOCK)
 80150cc:	e0bfff17 	ldw	r2,-4(fp)
 80150d0:	1090000c 	andi	r2,r2,16384
 80150d4:	10000226 	beq	r2,zero,80150e0 <altera_avalon_jtag_uart_read+0x1f4>
    return -EWOULDBLOCK;
 80150d8:	00bffd44 	movi	r2,-11
 80150dc:	00000106 	br	80150e4 <altera_avalon_jtag_uart_read+0x1f8>
  else
    return -EIO;
 80150e0:	00bffec4 	movi	r2,-5
}
 80150e4:	e037883a 	mov	sp,fp
 80150e8:	dfc00117 	ldw	ra,4(sp)
 80150ec:	df000017 	ldw	fp,0(sp)
 80150f0:	dec00204 	addi	sp,sp,8
 80150f4:	f800283a 	ret

080150f8 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
 80150f8:	defff304 	addi	sp,sp,-52
 80150fc:	dfc00c15 	stw	ra,48(sp)
 8015100:	df000b15 	stw	fp,44(sp)
 8015104:	df000b04 	addi	fp,sp,44
 8015108:	e13ffc15 	stw	r4,-16(fp)
 801510c:	e17ffd15 	stw	r5,-12(fp)
 8015110:	e1bffe15 	stw	r6,-8(fp)
 8015114:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
 8015118:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
 801511c:	e0bffd17 	ldw	r2,-12(fp)
 8015120:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 8015124:	00003806 	br	8015208 <altera_avalon_jtag_uart_write+0x110>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
 8015128:	e0bffc17 	ldw	r2,-16(fp)
 801512c:	10800c17 	ldw	r2,48(r2)
 8015130:	e0bff815 	stw	r2,-32(fp)
      out = sp->tx_out;
 8015134:	e0bffc17 	ldw	r2,-16(fp)
 8015138:	10800d17 	ldw	r2,52(r2)
 801513c:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
 8015140:	e0fff817 	ldw	r3,-32(fp)
 8015144:	e0bff517 	ldw	r2,-44(fp)
 8015148:	1880062e 	bgeu	r3,r2,8015164 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
 801514c:	e0fff517 	ldw	r3,-44(fp)
 8015150:	e0bff817 	ldw	r2,-32(fp)
 8015154:	1885c83a 	sub	r2,r3,r2
 8015158:	10bfffc4 	addi	r2,r2,-1
 801515c:	e0bff615 	stw	r2,-40(fp)
 8015160:	00000b06 	br	8015190 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
 8015164:	e0bff517 	ldw	r2,-44(fp)
 8015168:	10000526 	beq	r2,zero,8015180 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
 801516c:	00c20004 	movi	r3,2048
 8015170:	e0bff817 	ldw	r2,-32(fp)
 8015174:	1885c83a 	sub	r2,r3,r2
 8015178:	e0bff615 	stw	r2,-40(fp)
 801517c:	00000406 	br	8015190 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
 8015180:	00c1ffc4 	movi	r3,2047
 8015184:	e0bff817 	ldw	r2,-32(fp)
 8015188:	1885c83a 	sub	r2,r3,r2
 801518c:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
 8015190:	e0bff617 	ldw	r2,-40(fp)
 8015194:	1000011e 	bne	r2,zero,801519c <altera_avalon_jtag_uart_write+0xa4>
        break;
 8015198:	00001d06 	br	8015210 <altera_avalon_jtag_uart_write+0x118>

      if (n > count)
 801519c:	e0fffe17 	ldw	r3,-8(fp)
 80151a0:	e0bff617 	ldw	r2,-40(fp)
 80151a4:	1880022e 	bgeu	r3,r2,80151b0 <altera_avalon_jtag_uart_write+0xb8>
        n = count;
 80151a8:	e0bffe17 	ldw	r2,-8(fp)
 80151ac:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
 80151b0:	e0bff817 	ldw	r2,-32(fp)
 80151b4:	10820e04 	addi	r2,r2,2104
 80151b8:	e0fffc17 	ldw	r3,-16(fp)
 80151bc:	1885883a 	add	r2,r3,r2
 80151c0:	1009883a 	mov	r4,r2
 80151c4:	e17ffd17 	ldw	r5,-12(fp)
 80151c8:	e1bff617 	ldw	r6,-40(fp)
 80151cc:	800ae700 	call	800ae70 <memcpy>
      ptr   += n;
 80151d0:	e0fffd17 	ldw	r3,-12(fp)
 80151d4:	e0bff617 	ldw	r2,-40(fp)
 80151d8:	1885883a 	add	r2,r3,r2
 80151dc:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
 80151e0:	e0fffe17 	ldw	r3,-8(fp)
 80151e4:	e0bff617 	ldw	r2,-40(fp)
 80151e8:	1885c83a 	sub	r2,r3,r2
 80151ec:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 80151f0:	e0fff817 	ldw	r3,-32(fp)
 80151f4:	e0bff617 	ldw	r2,-40(fp)
 80151f8:	1885883a 	add	r2,r3,r2
 80151fc:	10c1ffcc 	andi	r3,r2,2047
 8015200:	e0bffc17 	ldw	r2,-16(fp)
 8015204:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 8015208:	e0bffe17 	ldw	r2,-8(fp)
 801520c:	00bfc616 	blt	zero,r2,8015128 <__alt_data_end+0xfc015128>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 8015210:	0005303a 	rdctl	r2,status
 8015214:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 8015218:	e0fffa17 	ldw	r3,-24(fp)
 801521c:	00bfff84 	movi	r2,-2
 8015220:	1884703a 	and	r2,r3,r2
 8015224:	1001703a 	wrctl	status,r2
  
  return context;
 8015228:	e0bffa17 	ldw	r2,-24(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
 801522c:	e0bff915 	stw	r2,-28(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 8015230:	e0bffc17 	ldw	r2,-16(fp)
 8015234:	10800817 	ldw	r2,32(r2)
 8015238:	10c00094 	ori	r3,r2,2
 801523c:	e0bffc17 	ldw	r2,-16(fp)
 8015240:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 8015244:	e0bffc17 	ldw	r2,-16(fp)
 8015248:	10800017 	ldw	r2,0(r2)
 801524c:	10800104 	addi	r2,r2,4
 8015250:	1007883a 	mov	r3,r2
 8015254:	e0bffc17 	ldw	r2,-16(fp)
 8015258:	10800817 	ldw	r2,32(r2)
 801525c:	18800035 	stwio	r2,0(r3)
 8015260:	e0bff917 	ldw	r2,-28(fp)
 8015264:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 8015268:	e0bffb17 	ldw	r2,-20(fp)
 801526c:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
 8015270:	e0bffe17 	ldw	r2,-8(fp)
 8015274:	0080120e 	bge	zero,r2,80152c0 <altera_avalon_jtag_uart_write+0x1c8>
    {
      if (flags & O_NONBLOCK)
 8015278:	e0bfff17 	ldw	r2,-4(fp)
 801527c:	1090000c 	andi	r2,r2,16384
 8015280:	10000126 	beq	r2,zero,8015288 <altera_avalon_jtag_uart_write+0x190>
        break;
 8015284:	00001006 	br	80152c8 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
 8015288:	0001883a 	nop
 801528c:	e0bffc17 	ldw	r2,-16(fp)
 8015290:	10c00d17 	ldw	r3,52(r2)
 8015294:	e0bff517 	ldw	r2,-44(fp)
 8015298:	1880051e 	bne	r3,r2,80152b0 <altera_avalon_jtag_uart_write+0x1b8>
 801529c:	e0bffc17 	ldw	r2,-16(fp)
 80152a0:	10c00917 	ldw	r3,36(r2)
 80152a4:	e0bffc17 	ldw	r2,-16(fp)
 80152a8:	10800117 	ldw	r2,4(r2)
 80152ac:	18bff736 	bltu	r3,r2,801528c <__alt_data_end+0xfc01528c>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
 80152b0:	e0bffc17 	ldw	r2,-16(fp)
 80152b4:	10800917 	ldw	r2,36(r2)
 80152b8:	10000126 	beq	r2,zero,80152c0 <altera_avalon_jtag_uart_write+0x1c8>
         break;
 80152bc:	00000206 	br	80152c8 <altera_avalon_jtag_uart_write+0x1d0>
    }
  }
  while (count > 0);
 80152c0:	e0bffe17 	ldw	r2,-8(fp)
 80152c4:	00bf9716 	blt	zero,r2,8015124 <__alt_data_end+0xfc015124>
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
 80152c8:	e0fffd17 	ldw	r3,-12(fp)
 80152cc:	e0bff717 	ldw	r2,-36(fp)
 80152d0:	18800426 	beq	r3,r2,80152e4 <altera_avalon_jtag_uart_write+0x1ec>
    return ptr - start;
 80152d4:	e0fffd17 	ldw	r3,-12(fp)
 80152d8:	e0bff717 	ldw	r2,-36(fp)
 80152dc:	1885c83a 	sub	r2,r3,r2
 80152e0:	00000606 	br	80152fc <altera_avalon_jtag_uart_write+0x204>
  else if (flags & O_NONBLOCK)
 80152e4:	e0bfff17 	ldw	r2,-4(fp)
 80152e8:	1090000c 	andi	r2,r2,16384
 80152ec:	10000226 	beq	r2,zero,80152f8 <altera_avalon_jtag_uart_write+0x200>
    return -EWOULDBLOCK;
 80152f0:	00bffd44 	movi	r2,-11
 80152f4:	00000106 	br	80152fc <altera_avalon_jtag_uart_write+0x204>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
 80152f8:	00bffec4 	movi	r2,-5
}
 80152fc:	e037883a 	mov	sp,fp
 8015300:	dfc00117 	ldw	ra,4(sp)
 8015304:	df000017 	ldw	fp,0(sp)
 8015308:	dec00204 	addi	sp,sp,8
 801530c:	f800283a 	ret

08015310 <alt_up_rs232_enable_read_interrupt>:
#include "altera_up_avalon_rs232.h"
#include "altera_up_avalon_rs232_regs.h"


void alt_up_rs232_enable_read_interrupt(alt_up_rs232_dev *rs232)
{
 8015310:	defffd04 	addi	sp,sp,-12
 8015314:	df000215 	stw	fp,8(sp)
 8015318:	df000204 	addi	fp,sp,8
 801531c:	e13fff15 	stw	r4,-4(fp)
	alt_u32 ctrl_reg;
	ctrl_reg = IORD_ALT_UP_RS232_CONTROL(rs232->base); 
 8015320:	e0bfff17 	ldw	r2,-4(fp)
 8015324:	10800a17 	ldw	r2,40(r2)
 8015328:	10800104 	addi	r2,r2,4
 801532c:	10800037 	ldwio	r2,0(r2)
 8015330:	e0bffe15 	stw	r2,-8(fp)
	// set RE to 1 while maintaining other bits the same
	ctrl_reg |= ALT_UP_RS232_CONTROL_RE_MSK;
 8015334:	e0bffe17 	ldw	r2,-8(fp)
 8015338:	10800054 	ori	r2,r2,1
 801533c:	e0bffe15 	stw	r2,-8(fp)
	IOWR_ALT_UP_RS232_CONTROL(rs232->base, ctrl_reg);
 8015340:	e0bfff17 	ldw	r2,-4(fp)
 8015344:	10800a17 	ldw	r2,40(r2)
 8015348:	10800104 	addi	r2,r2,4
 801534c:	1007883a 	mov	r3,r2
 8015350:	e0bffe17 	ldw	r2,-8(fp)
 8015354:	18800035 	stwio	r2,0(r3)
}
 8015358:	e037883a 	mov	sp,fp
 801535c:	df000017 	ldw	fp,0(sp)
 8015360:	dec00104 	addi	sp,sp,4
 8015364:	f800283a 	ret

08015368 <alt_up_rs232_disable_read_interrupt>:

void alt_up_rs232_disable_read_interrupt(alt_up_rs232_dev *rs232)
{
 8015368:	defffd04 	addi	sp,sp,-12
 801536c:	df000215 	stw	fp,8(sp)
 8015370:	df000204 	addi	fp,sp,8
 8015374:	e13fff15 	stw	r4,-4(fp)
	alt_u32 ctrl_reg;
	ctrl_reg = IORD_ALT_UP_RS232_CONTROL(rs232->base); 
 8015378:	e0bfff17 	ldw	r2,-4(fp)
 801537c:	10800a17 	ldw	r2,40(r2)
 8015380:	10800104 	addi	r2,r2,4
 8015384:	10800037 	ldwio	r2,0(r2)
 8015388:	e0bffe15 	stw	r2,-8(fp)
	// set RE to 0 while maintaining other bits the same
	ctrl_reg &= ~ALT_UP_RS232_CONTROL_RE_MSK;
 801538c:	e0fffe17 	ldw	r3,-8(fp)
 8015390:	00bfff84 	movi	r2,-2
 8015394:	1884703a 	and	r2,r3,r2
 8015398:	e0bffe15 	stw	r2,-8(fp)
	IOWR_ALT_UP_RS232_CONTROL(rs232->base, ctrl_reg);
 801539c:	e0bfff17 	ldw	r2,-4(fp)
 80153a0:	10800a17 	ldw	r2,40(r2)
 80153a4:	10800104 	addi	r2,r2,4
 80153a8:	1007883a 	mov	r3,r2
 80153ac:	e0bffe17 	ldw	r2,-8(fp)
 80153b0:	18800035 	stwio	r2,0(r3)
}
 80153b4:	e037883a 	mov	sp,fp
 80153b8:	df000017 	ldw	fp,0(sp)
 80153bc:	dec00104 	addi	sp,sp,4
 80153c0:	f800283a 	ret

080153c4 <alt_up_rs232_get_used_space_in_read_FIFO>:

unsigned alt_up_rs232_get_used_space_in_read_FIFO(alt_up_rs232_dev *rs232)
{
 80153c4:	defffd04 	addi	sp,sp,-12
 80153c8:	df000215 	stw	fp,8(sp)
 80153cc:	df000204 	addi	fp,sp,8
 80153d0:	e13fff15 	stw	r4,-4(fp)
	alt_u16 ravail = 0;
 80153d4:	e03ffe0d 	sth	zero,-8(fp)
	// we can only read the 16 bits for RAVAIL --- a read of DATA will discard the data
//	ravail = IORD_16DIRECT(IOADDR_ALT_UP_RS232_DATA(rs232->base), 2); 
	ravail = IORD_ALT_UP_RS232_RAVAIL(rs232->base); 
 80153d8:	e0bfff17 	ldw	r2,-4(fp)
 80153dc:	10800a17 	ldw	r2,40(r2)
 80153e0:	10800084 	addi	r2,r2,2
 80153e4:	1080002b 	ldhuio	r2,0(r2)
 80153e8:	10bfffcc 	andi	r2,r2,65535
 80153ec:	e0bffe0d 	sth	r2,-8(fp)
//	return ravail;
	return (ravail & ALT_UP_RS232_RAVAIL_MSK) >> ALT_UP_RS232_RAVAIL_OFST;
 80153f0:	e0bffe0b 	ldhu	r2,-8(fp)
}
 80153f4:	e037883a 	mov	sp,fp
 80153f8:	df000017 	ldw	fp,0(sp)
 80153fc:	dec00104 	addi	sp,sp,4
 8015400:	f800283a 	ret

08015404 <alt_up_rs232_get_available_space_in_write_FIFO>:

unsigned alt_up_rs232_get_available_space_in_write_FIFO(alt_up_rs232_dev *rs232)
{
 8015404:	defffd04 	addi	sp,sp,-12
 8015408:	df000215 	stw	fp,8(sp)
 801540c:	df000204 	addi	fp,sp,8
 8015410:	e13fff15 	stw	r4,-4(fp)
	alt_u32 ctrl_reg;
	ctrl_reg = IORD_ALT_UP_RS232_CONTROL(rs232->base); 
 8015414:	e0bfff17 	ldw	r2,-4(fp)
 8015418:	10800a17 	ldw	r2,40(r2)
 801541c:	10800104 	addi	r2,r2,4
 8015420:	10800037 	ldwio	r2,0(r2)
 8015424:	e0bffe15 	stw	r2,-8(fp)
	return (ctrl_reg & ALT_UP_RS232_CONTROL_WSPACE_MSK) >> ALT_UP_RS232_CONTROL_WSPACE_OFST;
 8015428:	e0bffe17 	ldw	r2,-8(fp)
 801542c:	1004d43a 	srli	r2,r2,16
}
 8015430:	e037883a 	mov	sp,fp
 8015434:	df000017 	ldw	fp,0(sp)
 8015438:	dec00104 	addi	sp,sp,4
 801543c:	f800283a 	ret

08015440 <alt_up_rs232_check_parity>:

int alt_up_rs232_check_parity(alt_u32 data_reg)
{
 8015440:	defffd04 	addi	sp,sp,-12
 8015444:	df000215 	stw	fp,8(sp)
 8015448:	df000204 	addi	fp,sp,8
 801544c:	e13fff15 	stw	r4,-4(fp)
	unsigned parity_error = (data_reg & ALT_UP_RS232_DATA_PE_MSK) >> ALT_UP_RS232_DATA_PE_OFST;
 8015450:	e0bfff17 	ldw	r2,-4(fp)
 8015454:	1080800c 	andi	r2,r2,512
 8015458:	1004d27a 	srli	r2,r2,9
 801545c:	e0bffe15 	stw	r2,-8(fp)
	return (parity_error ? -1 : 0);
 8015460:	e0bffe17 	ldw	r2,-8(fp)
 8015464:	10000226 	beq	r2,zero,8015470 <alt_up_rs232_check_parity+0x30>
 8015468:	00bfffc4 	movi	r2,-1
 801546c:	00000106 	br	8015474 <alt_up_rs232_check_parity+0x34>
 8015470:	0005883a 	mov	r2,zero
}
 8015474:	e037883a 	mov	sp,fp
 8015478:	df000017 	ldw	fp,0(sp)
 801547c:	dec00104 	addi	sp,sp,4
 8015480:	f800283a 	ret

08015484 <alt_up_rs232_write_data>:

int alt_up_rs232_write_data(alt_up_rs232_dev *rs232, alt_u8 data)
{
 8015484:	defffd04 	addi	sp,sp,-12
 8015488:	df000215 	stw	fp,8(sp)
 801548c:	df000204 	addi	fp,sp,8
 8015490:	e13ffe15 	stw	r4,-8(fp)
 8015494:	2805883a 	mov	r2,r5
 8015498:	e0bfff05 	stb	r2,-4(fp)
	/*alt_u32 data_reg;
	data_reg = IORD_ALT_UP_RS232_DATA(rs232->base);*/
    
	// we can write directly without thinking about other bit fields for this
	// case ONLY, because only DATA field of the data register is writable
	IOWR_ALT_UP_RS232_DATA(rs232->base, (data>>ALT_UP_RS232_DATA_DATA_OFST) & ALT_UP_RS232_DATA_DATA_MSK);
 801549c:	e0bffe17 	ldw	r2,-8(fp)
 80154a0:	10800a17 	ldw	r2,40(r2)
 80154a4:	1007883a 	mov	r3,r2
 80154a8:	e0bfff03 	ldbu	r2,-4(fp)
 80154ac:	18800035 	stwio	r2,0(r3)
	return 0;
 80154b0:	0005883a 	mov	r2,zero
}
 80154b4:	e037883a 	mov	sp,fp
 80154b8:	df000017 	ldw	fp,0(sp)
 80154bc:	dec00104 	addi	sp,sp,4
 80154c0:	f800283a 	ret

080154c4 <alt_up_rs232_read_data>:

int alt_up_rs232_read_data(alt_up_rs232_dev *rs232, alt_u8 *data, alt_u8 *parity_error)
{
 80154c4:	defffa04 	addi	sp,sp,-24
 80154c8:	dfc00515 	stw	ra,20(sp)
 80154cc:	df000415 	stw	fp,16(sp)
 80154d0:	df000404 	addi	fp,sp,16
 80154d4:	e13ffd15 	stw	r4,-12(fp)
 80154d8:	e17ffe15 	stw	r5,-8(fp)
 80154dc:	e1bfff15 	stw	r6,-4(fp)
	alt_u32 data_reg;
	data_reg = IORD_ALT_UP_RS232_DATA(rs232->base);
 80154e0:	e0bffd17 	ldw	r2,-12(fp)
 80154e4:	10800a17 	ldw	r2,40(r2)
 80154e8:	10800037 	ldwio	r2,0(r2)
 80154ec:	e0bffc15 	stw	r2,-16(fp)
	*data = (data_reg & ALT_UP_RS232_DATA_DATA_MSK) >> ALT_UP_RS232_DATA_DATA_OFST;
 80154f0:	e0bffc17 	ldw	r2,-16(fp)
 80154f4:	1007883a 	mov	r3,r2
 80154f8:	e0bffe17 	ldw	r2,-8(fp)
 80154fc:	10c00005 	stb	r3,0(r2)
	*parity_error = alt_up_rs232_check_parity(data_reg);
 8015500:	e13ffc17 	ldw	r4,-16(fp)
 8015504:	80154400 	call	8015440 <alt_up_rs232_check_parity>
 8015508:	1007883a 	mov	r3,r2
 801550c:	e0bfff17 	ldw	r2,-4(fp)
 8015510:	10c00005 	stb	r3,0(r2)
	return (((data_reg & ALT_UP_RS232_DATA_RVALID_MSK) >> ALT_UP_RS232_DATA_RVALID_OFST) - 1);
 8015514:	e0bffc17 	ldw	r2,-16(fp)
 8015518:	10a0000c 	andi	r2,r2,32768
 801551c:	1004d3fa 	srli	r2,r2,15
 8015520:	10bfffc4 	addi	r2,r2,-1
}
 8015524:	e037883a 	mov	sp,fp
 8015528:	dfc00117 	ldw	ra,4(sp)
 801552c:	df000017 	ldw	fp,0(sp)
 8015530:	dec00204 	addi	sp,sp,8
 8015534:	f800283a 	ret

08015538 <alt_up_rs232_read_fd>:

int alt_up_rs232_read_fd (alt_fd* fd, char* ptr, int len)
{
 8015538:	defff804 	addi	sp,sp,-32
 801553c:	dfc00715 	stw	ra,28(sp)
 8015540:	df000615 	stw	fp,24(sp)
 8015544:	df000604 	addi	fp,sp,24
 8015548:	e13ffd15 	stw	r4,-12(fp)
 801554c:	e17ffe15 	stw	r5,-8(fp)
 8015550:	e1bfff15 	stw	r6,-4(fp)
	alt_up_rs232_dev *rs232 = (alt_up_rs232_dev*)fd->dev;
 8015554:	e0bffd17 	ldw	r2,-12(fp)
 8015558:	10800017 	ldw	r2,0(r2)
 801555c:	e0bffb15 	stw	r2,-20(fp)
	int count = 0;
 8015560:	e03ffa15 	stw	zero,-24(fp)
	alt_u8 parity_error;
	while(len--)
 8015564:	00000e06 	br	80155a0 <alt_up_rs232_read_fd+0x68>
	{
		if (alt_up_rs232_read_data(rs232, (alt_u8 *)ptr++, &parity_error)==0)
 8015568:	e0bffe17 	ldw	r2,-8(fp)
 801556c:	10c00044 	addi	r3,r2,1
 8015570:	e0fffe15 	stw	r3,-8(fp)
 8015574:	e0fffc04 	addi	r3,fp,-16
 8015578:	e13ffb17 	ldw	r4,-20(fp)
 801557c:	100b883a 	mov	r5,r2
 8015580:	180d883a 	mov	r6,r3
 8015584:	80154c40 	call	80154c4 <alt_up_rs232_read_data>
 8015588:	1000041e 	bne	r2,zero,801559c <alt_up_rs232_read_fd+0x64>
			count++;
 801558c:	e0bffa17 	ldw	r2,-24(fp)
 8015590:	10800044 	addi	r2,r2,1
 8015594:	e0bffa15 	stw	r2,-24(fp)
 8015598:	00000106 	br	80155a0 <alt_up_rs232_read_fd+0x68>
		else
			break;
 801559c:	00000406 	br	80155b0 <alt_up_rs232_read_fd+0x78>
int alt_up_rs232_read_fd (alt_fd* fd, char* ptr, int len)
{
	alt_up_rs232_dev *rs232 = (alt_up_rs232_dev*)fd->dev;
	int count = 0;
	alt_u8 parity_error;
	while(len--)
 80155a0:	e0bfff17 	ldw	r2,-4(fp)
 80155a4:	10ffffc4 	addi	r3,r2,-1
 80155a8:	e0ffff15 	stw	r3,-4(fp)
 80155ac:	103fee1e 	bne	r2,zero,8015568 <__alt_data_end+0xfc015568>
		if (alt_up_rs232_read_data(rs232, (alt_u8 *)ptr++, &parity_error)==0)
			count++;
		else
			break;
	}
	return count;
 80155b0:	e0bffa17 	ldw	r2,-24(fp)
}
 80155b4:	e037883a 	mov	sp,fp
 80155b8:	dfc00117 	ldw	ra,4(sp)
 80155bc:	df000017 	ldw	fp,0(sp)
 80155c0:	dec00204 	addi	sp,sp,8
 80155c4:	f800283a 	ret

080155c8 <alt_up_rs232_write_fd>:

int alt_up_rs232_write_fd (alt_fd* fd, const char* ptr, int len)
{
 80155c8:	defff904 	addi	sp,sp,-28
 80155cc:	dfc00615 	stw	ra,24(sp)
 80155d0:	df000515 	stw	fp,20(sp)
 80155d4:	df000504 	addi	fp,sp,20
 80155d8:	e13ffd15 	stw	r4,-12(fp)
 80155dc:	e17ffe15 	stw	r5,-8(fp)
 80155e0:	e1bfff15 	stw	r6,-4(fp)
	alt_up_rs232_dev *rs232 = (alt_up_rs232_dev*)fd->dev;
 80155e4:	e0bffd17 	ldw	r2,-12(fp)
 80155e8:	10800017 	ldw	r2,0(r2)
 80155ec:	e0bffc15 	stw	r2,-16(fp)
	int count = 0;
 80155f0:	e03ffb15 	stw	zero,-20(fp)
	while(len--)
 80155f4:	00000f06 	br	8015634 <alt_up_rs232_write_fd+0x6c>
	{
		if (alt_up_rs232_write_data(rs232, *ptr)==0)
 80155f8:	e0bffe17 	ldw	r2,-8(fp)
 80155fc:	10800003 	ldbu	r2,0(r2)
 8015600:	10803fcc 	andi	r2,r2,255
 8015604:	e13ffc17 	ldw	r4,-16(fp)
 8015608:	100b883a 	mov	r5,r2
 801560c:	80154840 	call	8015484 <alt_up_rs232_write_data>
 8015610:	1000071e 	bne	r2,zero,8015630 <alt_up_rs232_write_fd+0x68>
		{
			count++;
 8015614:	e0bffb17 	ldw	r2,-20(fp)
 8015618:	10800044 	addi	r2,r2,1
 801561c:	e0bffb15 	stw	r2,-20(fp)
			ptr++;
 8015620:	e0bffe17 	ldw	r2,-8(fp)
 8015624:	10800044 	addi	r2,r2,1
 8015628:	e0bffe15 	stw	r2,-8(fp)
 801562c:	00000106 	br	8015634 <alt_up_rs232_write_fd+0x6c>
		}
		else
			break;
 8015630:	00000406 	br	8015644 <alt_up_rs232_write_fd+0x7c>

int alt_up_rs232_write_fd (alt_fd* fd, const char* ptr, int len)
{
	alt_up_rs232_dev *rs232 = (alt_up_rs232_dev*)fd->dev;
	int count = 0;
	while(len--)
 8015634:	e0bfff17 	ldw	r2,-4(fp)
 8015638:	10ffffc4 	addi	r3,r2,-1
 801563c:	e0ffff15 	stw	r3,-4(fp)
 8015640:	103fed1e 	bne	r2,zero,80155f8 <__alt_data_end+0xfc0155f8>
			ptr++;
		}
		else
			break;
	}
	return count;
 8015644:	e0bffb17 	ldw	r2,-20(fp)
}
 8015648:	e037883a 	mov	sp,fp
 801564c:	dfc00117 	ldw	ra,4(sp)
 8015650:	df000017 	ldw	fp,0(sp)
 8015654:	dec00204 	addi	sp,sp,8
 8015658:	f800283a 	ret

0801565c <alt_up_rs232_open_dev>:

alt_up_rs232_dev* alt_up_rs232_open_dev(const char* name)
{
 801565c:	defffc04 	addi	sp,sp,-16
 8015660:	dfc00315 	stw	ra,12(sp)
 8015664:	df000215 	stw	fp,8(sp)
 8015668:	df000204 	addi	fp,sp,8
 801566c:	e13fff15 	stw	r4,-4(fp)
  // find the device from the device list 
  // (see altera_hal/HAL/inc/priv/alt_file.h 
  // and altera_hal/HAL/src/alt_find_dev.c 
  // for details)
  alt_up_rs232_dev *dev = (alt_up_rs232_dev*)alt_find_dev(name, &alt_dev_list);
 8015670:	e13fff17 	ldw	r4,-4(fp)
 8015674:	014200b4 	movhi	r5,2050
 8015678:	29631e04 	addi	r5,r5,-29576
 801567c:	8015aec0 	call	8015aec <alt_find_dev>
 8015680:	e0bffe15 	stw	r2,-8(fp)

  return dev;
 8015684:	e0bffe17 	ldw	r2,-8(fp)
}
 8015688:	e037883a 	mov	sp,fp
 801568c:	dfc00117 	ldw	ra,4(sp)
 8015690:	df000017 	ldw	fp,0(sp)
 8015694:	dec00204 	addi	sp,sp,8
 8015698:	f800283a 	ret

0801569c <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
 801569c:	defff504 	addi	sp,sp,-44
 80156a0:	df000a15 	stw	fp,40(sp)
 80156a4:	df000a04 	addi	fp,sp,40
 80156a8:	e13ffc15 	stw	r4,-16(fp)
 80156ac:	e17ffd15 	stw	r5,-12(fp)
 80156b0:	e1bffe15 	stw	r6,-8(fp)
 80156b4:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
 80156b8:	e03ff615 	stw	zero,-40(fp)
 80156bc:	008200b4 	movhi	r2,2050
 80156c0:	10aa5504 	addi	r2,r2,-22188
 80156c4:	10800017 	ldw	r2,0(r2)
  
  if (alt_ticks_per_second ())
 80156c8:	10003f26 	beq	r2,zero,80157c8 <alt_alarm_start+0x12c>
  {
    if (alarm)
 80156cc:	e0bffc17 	ldw	r2,-16(fp)
 80156d0:	10003b26 	beq	r2,zero,80157c0 <alt_alarm_start+0x124>
    {
      alarm->callback = callback;
 80156d4:	e0bffc17 	ldw	r2,-16(fp)
 80156d8:	e0fffe17 	ldw	r3,-8(fp)
 80156dc:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
 80156e0:	e0bffc17 	ldw	r2,-16(fp)
 80156e4:	e0ffff17 	ldw	r3,-4(fp)
 80156e8:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 80156ec:	0005303a 	rdctl	r2,status
 80156f0:	e0bff815 	stw	r2,-32(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 80156f4:	e0fff817 	ldw	r3,-32(fp)
 80156f8:	00bfff84 	movi	r2,-2
 80156fc:	1884703a 	and	r2,r3,r2
 8015700:	1001703a 	wrctl	status,r2
  
  return context;
 8015704:	e0bff817 	ldw	r2,-32(fp)
 
      irq_context = alt_irq_disable_all ();
 8015708:	e0bff715 	stw	r2,-36(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
 801570c:	008200b4 	movhi	r2,2050
 8015710:	10aa5604 	addi	r2,r2,-22184
 8015714:	10800017 	ldw	r2,0(r2)
      
      current_nticks = alt_nticks();
 8015718:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
 801571c:	e0fffd17 	ldw	r3,-12(fp)
 8015720:	e0bff617 	ldw	r2,-40(fp)
 8015724:	1885883a 	add	r2,r3,r2
 8015728:	10c00044 	addi	r3,r2,1
 801572c:	e0bffc17 	ldw	r2,-16(fp)
 8015730:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
 8015734:	e0bffc17 	ldw	r2,-16(fp)
 8015738:	10c00217 	ldw	r3,8(r2)
 801573c:	e0bff617 	ldw	r2,-40(fp)
 8015740:	1880042e 	bgeu	r3,r2,8015754 <alt_alarm_start+0xb8>
      {
        alarm->rollover = 1;
 8015744:	e0bffc17 	ldw	r2,-16(fp)
 8015748:	00c00044 	movi	r3,1
 801574c:	10c00405 	stb	r3,16(r2)
 8015750:	00000206 	br	801575c <alt_alarm_start+0xc0>
      }
      else
      {
        alarm->rollover = 0;
 8015754:	e0bffc17 	ldw	r2,-16(fp)
 8015758:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
 801575c:	e0fffc17 	ldw	r3,-16(fp)
 8015760:	008200b4 	movhi	r2,2050
 8015764:	10a32804 	addi	r2,r2,-29536
 8015768:	e0bff915 	stw	r2,-28(fp)
 801576c:	e0fffa15 	stw	r3,-24(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 8015770:	e0bffa17 	ldw	r2,-24(fp)
 8015774:	e0fff917 	ldw	r3,-28(fp)
 8015778:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 801577c:	e0bff917 	ldw	r2,-28(fp)
 8015780:	10c00017 	ldw	r3,0(r2)
 8015784:	e0bffa17 	ldw	r2,-24(fp)
 8015788:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 801578c:	e0bff917 	ldw	r2,-28(fp)
 8015790:	10800017 	ldw	r2,0(r2)
 8015794:	e0fffa17 	ldw	r3,-24(fp)
 8015798:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 801579c:	e0bff917 	ldw	r2,-28(fp)
 80157a0:	e0fffa17 	ldw	r3,-24(fp)
 80157a4:	10c00015 	stw	r3,0(r2)
 80157a8:	e0bff717 	ldw	r2,-36(fp)
 80157ac:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 80157b0:	e0bffb17 	ldw	r2,-20(fp)
 80157b4:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
 80157b8:	0005883a 	mov	r2,zero
 80157bc:	00000306 	br	80157cc <alt_alarm_start+0x130>
    }
    else
    {
      return -EINVAL;
 80157c0:	00bffa84 	movi	r2,-22
 80157c4:	00000106 	br	80157cc <alt_alarm_start+0x130>
    }
  }
  else
  {
    return -ENOTSUP;
 80157c8:	00bfde84 	movi	r2,-134
  }
}
 80157cc:	e037883a 	mov	sp,fp
 80157d0:	df000017 	ldw	fp,0(sp)
 80157d4:	dec00104 	addi	sp,sp,4
 80157d8:	f800283a 	ret

080157dc <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
 80157dc:	deffff04 	addi	sp,sp,-4
 80157e0:	df000015 	stw	fp,0(sp)
 80157e4:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
 80157e8:	e037883a 	mov	sp,fp
 80157ec:	df000017 	ldw	fp,0(sp)
 80157f0:	dec00104 	addi	sp,sp,4
 80157f4:	f800283a 	ret

080157f8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 80157f8:	defffe04 	addi	sp,sp,-8
 80157fc:	dfc00115 	stw	ra,4(sp)
 8015800:	df000015 	stw	fp,0(sp)
 8015804:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 8015808:	008200b4 	movhi	r2,2050
 801580c:	10a32104 	addi	r2,r2,-29564
 8015810:	10800017 	ldw	r2,0(r2)
 8015814:	10000526 	beq	r2,zero,801582c <alt_get_errno+0x34>
 8015818:	008200b4 	movhi	r2,2050
 801581c:	10a32104 	addi	r2,r2,-29564
 8015820:	10800017 	ldw	r2,0(r2)
 8015824:	103ee83a 	callr	r2
 8015828:	00000206 	br	8015834 <alt_get_errno+0x3c>
 801582c:	008200b4 	movhi	r2,2050
 8015830:	10aa4d04 	addi	r2,r2,-22220
}
 8015834:	e037883a 	mov	sp,fp
 8015838:	dfc00117 	ldw	ra,4(sp)
 801583c:	df000017 	ldw	fp,0(sp)
 8015840:	dec00204 	addi	sp,sp,8
 8015844:	f800283a 	ret

08015848 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
 8015848:	defffa04 	addi	sp,sp,-24
 801584c:	dfc00515 	stw	ra,20(sp)
 8015850:	df000415 	stw	fp,16(sp)
 8015854:	df000404 	addi	fp,sp,16
 8015858:	e13ffe15 	stw	r4,-8(fp)
 801585c:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
 8015860:	e0bffe17 	ldw	r2,-8(fp)
 8015864:	10000326 	beq	r2,zero,8015874 <alt_dev_llist_insert+0x2c>
 8015868:	e0bffe17 	ldw	r2,-8(fp)
 801586c:	10800217 	ldw	r2,8(r2)
 8015870:	1000061e 	bne	r2,zero,801588c <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
 8015874:	80157f80 	call	80157f8 <alt_get_errno>
 8015878:	1007883a 	mov	r3,r2
 801587c:	00800584 	movi	r2,22
 8015880:	18800015 	stw	r2,0(r3)
    return -EINVAL;
 8015884:	00bffa84 	movi	r2,-22
 8015888:	00001306 	br	80158d8 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
 801588c:	e0bffe17 	ldw	r2,-8(fp)
 8015890:	e0ffff17 	ldw	r3,-4(fp)
 8015894:	e0fffc15 	stw	r3,-16(fp)
 8015898:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 801589c:	e0bffd17 	ldw	r2,-12(fp)
 80158a0:	e0fffc17 	ldw	r3,-16(fp)
 80158a4:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 80158a8:	e0bffc17 	ldw	r2,-16(fp)
 80158ac:	10c00017 	ldw	r3,0(r2)
 80158b0:	e0bffd17 	ldw	r2,-12(fp)
 80158b4:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 80158b8:	e0bffc17 	ldw	r2,-16(fp)
 80158bc:	10800017 	ldw	r2,0(r2)
 80158c0:	e0fffd17 	ldw	r3,-12(fp)
 80158c4:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 80158c8:	e0bffc17 	ldw	r2,-16(fp)
 80158cc:	e0fffd17 	ldw	r3,-12(fp)
 80158d0:	10c00015 	stw	r3,0(r2)

  return 0;  
 80158d4:	0005883a 	mov	r2,zero
}
 80158d8:	e037883a 	mov	sp,fp
 80158dc:	dfc00117 	ldw	ra,4(sp)
 80158e0:	df000017 	ldw	fp,0(sp)
 80158e4:	dec00204 	addi	sp,sp,8
 80158e8:	f800283a 	ret

080158ec <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 80158ec:	defffe04 	addi	sp,sp,-8
 80158f0:	dfc00115 	stw	ra,4(sp)
 80158f4:	df000015 	stw	fp,0(sp)
 80158f8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 80158fc:	008200b4 	movhi	r2,2050
 8015900:	10a32104 	addi	r2,r2,-29564
 8015904:	10800017 	ldw	r2,0(r2)
 8015908:	10000526 	beq	r2,zero,8015920 <alt_get_errno+0x34>
 801590c:	008200b4 	movhi	r2,2050
 8015910:	10a32104 	addi	r2,r2,-29564
 8015914:	10800017 	ldw	r2,0(r2)
 8015918:	103ee83a 	callr	r2
 801591c:	00000206 	br	8015928 <alt_get_errno+0x3c>
 8015920:	008200b4 	movhi	r2,2050
 8015924:	10aa4d04 	addi	r2,r2,-22220
}
 8015928:	e037883a 	mov	sp,fp
 801592c:	dfc00117 	ldw	ra,4(sp)
 8015930:	df000017 	ldw	fp,0(sp)
 8015934:	dec00204 	addi	sp,sp,8
 8015938:	f800283a 	ret

0801593c <alt_dma_rxchan_open>:
 *
 * The return value will be NULL on failure, and non-NULL otherwise. 
 */

alt_dma_rxchan alt_dma_rxchan_open (const char* name)
{
 801593c:	defffc04 	addi	sp,sp,-16
 8015940:	dfc00315 	stw	ra,12(sp)
 8015944:	df000215 	stw	fp,8(sp)
 8015948:	df000204 	addi	fp,sp,8
 801594c:	e13fff15 	stw	r4,-4(fp)
  alt_dma_rxchan dev;

  dev = (alt_dma_rxchan) alt_find_dev (name, &alt_dma_rxchan_list);
 8015950:	e13fff17 	ldw	r4,-4(fp)
 8015954:	d1601c04 	addi	r5,gp,-32656
 8015958:	8015aec0 	call	8015aec <alt_find_dev>
 801595c:	e0bffe15 	stw	r2,-8(fp)

  if (!dev)
 8015960:	e0bffe17 	ldw	r2,-8(fp)
 8015964:	1000041e 	bne	r2,zero,8015978 <alt_dma_rxchan_open+0x3c>
  {
    ALT_ERRNO = ENODEV;
 8015968:	80158ec0 	call	80158ec <alt_get_errno>
 801596c:	1007883a 	mov	r3,r2
 8015970:	008004c4 	movi	r2,19
 8015974:	18800015 	stw	r2,0(r3)
  }

  return dev;
 8015978:	e0bffe17 	ldw	r2,-8(fp)
}
 801597c:	e037883a 	mov	sp,fp
 8015980:	dfc00117 	ldw	ra,4(sp)
 8015984:	df000017 	ldw	fp,0(sp)
 8015988:	dec00204 	addi	sp,sp,8
 801598c:	f800283a 	ret

08015990 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 8015990:	defffe04 	addi	sp,sp,-8
 8015994:	dfc00115 	stw	ra,4(sp)
 8015998:	df000015 	stw	fp,0(sp)
 801599c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 80159a0:	008200b4 	movhi	r2,2050
 80159a4:	10a32104 	addi	r2,r2,-29564
 80159a8:	10800017 	ldw	r2,0(r2)
 80159ac:	10000526 	beq	r2,zero,80159c4 <alt_get_errno+0x34>
 80159b0:	008200b4 	movhi	r2,2050
 80159b4:	10a32104 	addi	r2,r2,-29564
 80159b8:	10800017 	ldw	r2,0(r2)
 80159bc:	103ee83a 	callr	r2
 80159c0:	00000206 	br	80159cc <alt_get_errno+0x3c>
 80159c4:	008200b4 	movhi	r2,2050
 80159c8:	10aa4d04 	addi	r2,r2,-22220
}
 80159cc:	e037883a 	mov	sp,fp
 80159d0:	dfc00117 	ldw	ra,4(sp)
 80159d4:	df000017 	ldw	fp,0(sp)
 80159d8:	dec00204 	addi	sp,sp,8
 80159dc:	f800283a 	ret

080159e0 <alt_dma_txchan_open>:
 *
 * The return value will be NULL on failure, and non-NULL otherwise. 
 */

alt_dma_txchan alt_dma_txchan_open (const char* name)
{
 80159e0:	defffc04 	addi	sp,sp,-16
 80159e4:	dfc00315 	stw	ra,12(sp)
 80159e8:	df000215 	stw	fp,8(sp)
 80159ec:	df000204 	addi	fp,sp,8
 80159f0:	e13fff15 	stw	r4,-4(fp)
  alt_dma_txchan dev;

  dev = (alt_dma_txchan) alt_find_dev (name, &alt_dma_txchan_list);
 80159f4:	e13fff17 	ldw	r4,-4(fp)
 80159f8:	d1601e04 	addi	r5,gp,-32648
 80159fc:	8015aec0 	call	8015aec <alt_find_dev>
 8015a00:	e0bffe15 	stw	r2,-8(fp)

  if (!dev)
 8015a04:	e0bffe17 	ldw	r2,-8(fp)
 8015a08:	1000041e 	bne	r2,zero,8015a1c <alt_dma_txchan_open+0x3c>
  {
    ALT_ERRNO = ENODEV;
 8015a0c:	80159900 	call	8015990 <alt_get_errno>
 8015a10:	1007883a 	mov	r3,r2
 8015a14:	008004c4 	movi	r2,19
 8015a18:	18800015 	stw	r2,0(r3)
  }

  return dev;
 8015a1c:	e0bffe17 	ldw	r2,-8(fp)
}
 8015a20:	e037883a 	mov	sp,fp
 8015a24:	dfc00117 	ldw	ra,4(sp)
 8015a28:	df000017 	ldw	fp,0(sp)
 8015a2c:	dec00204 	addi	sp,sp,8
 8015a30:	f800283a 	ret

08015a34 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
 8015a34:	defffd04 	addi	sp,sp,-12
 8015a38:	dfc00215 	stw	ra,8(sp)
 8015a3c:	df000115 	stw	fp,4(sp)
 8015a40:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 8015a44:	00820074 	movhi	r2,2049
 8015a48:	109a4c04 	addi	r2,r2,26928
 8015a4c:	e0bfff15 	stw	r2,-4(fp)
 8015a50:	00000606 	br	8015a6c <_do_ctors+0x38>
        (*ctor) (); 
 8015a54:	e0bfff17 	ldw	r2,-4(fp)
 8015a58:	10800017 	ldw	r2,0(r2)
 8015a5c:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 8015a60:	e0bfff17 	ldw	r2,-4(fp)
 8015a64:	10bfff04 	addi	r2,r2,-4
 8015a68:	e0bfff15 	stw	r2,-4(fp)
 8015a6c:	e0ffff17 	ldw	r3,-4(fp)
 8015a70:	00820074 	movhi	r2,2049
 8015a74:	109a4d04 	addi	r2,r2,26932
 8015a78:	18bff62e 	bgeu	r3,r2,8015a54 <__alt_data_end+0xfc015a54>
        (*ctor) (); 
}
 8015a7c:	e037883a 	mov	sp,fp
 8015a80:	dfc00117 	ldw	ra,4(sp)
 8015a84:	df000017 	ldw	fp,0(sp)
 8015a88:	dec00204 	addi	sp,sp,8
 8015a8c:	f800283a 	ret

08015a90 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
 8015a90:	defffd04 	addi	sp,sp,-12
 8015a94:	dfc00215 	stw	ra,8(sp)
 8015a98:	df000115 	stw	fp,4(sp)
 8015a9c:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 8015aa0:	00820074 	movhi	r2,2049
 8015aa4:	109a4c04 	addi	r2,r2,26928
 8015aa8:	e0bfff15 	stw	r2,-4(fp)
 8015aac:	00000606 	br	8015ac8 <_do_dtors+0x38>
        (*dtor) (); 
 8015ab0:	e0bfff17 	ldw	r2,-4(fp)
 8015ab4:	10800017 	ldw	r2,0(r2)
 8015ab8:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 8015abc:	e0bfff17 	ldw	r2,-4(fp)
 8015ac0:	10bfff04 	addi	r2,r2,-4
 8015ac4:	e0bfff15 	stw	r2,-4(fp)
 8015ac8:	e0ffff17 	ldw	r3,-4(fp)
 8015acc:	00820074 	movhi	r2,2049
 8015ad0:	109a4d04 	addi	r2,r2,26932
 8015ad4:	18bff62e 	bgeu	r3,r2,8015ab0 <__alt_data_end+0xfc015ab0>
        (*dtor) (); 
}
 8015ad8:	e037883a 	mov	sp,fp
 8015adc:	dfc00117 	ldw	ra,4(sp)
 8015ae0:	df000017 	ldw	fp,0(sp)
 8015ae4:	dec00204 	addi	sp,sp,8
 8015ae8:	f800283a 	ret

08015aec <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
 8015aec:	defffa04 	addi	sp,sp,-24
 8015af0:	dfc00515 	stw	ra,20(sp)
 8015af4:	df000415 	stw	fp,16(sp)
 8015af8:	df000404 	addi	fp,sp,16
 8015afc:	e13ffe15 	stw	r4,-8(fp)
 8015b00:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
 8015b04:	e0bfff17 	ldw	r2,-4(fp)
 8015b08:	10800017 	ldw	r2,0(r2)
 8015b0c:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
 8015b10:	e13ffe17 	ldw	r4,-8(fp)
 8015b14:	8003e140 	call	8003e14 <strlen>
 8015b18:	10800044 	addi	r2,r2,1
 8015b1c:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 8015b20:	00000d06 	br	8015b58 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
 8015b24:	e0bffc17 	ldw	r2,-16(fp)
 8015b28:	10c00217 	ldw	r3,8(r2)
 8015b2c:	e0bffd17 	ldw	r2,-12(fp)
 8015b30:	1809883a 	mov	r4,r3
 8015b34:	e17ffe17 	ldw	r5,-8(fp)
 8015b38:	100d883a 	mov	r6,r2
 8015b3c:	80165d00 	call	80165d0 <memcmp>
 8015b40:	1000021e 	bne	r2,zero,8015b4c <alt_find_dev+0x60>
    {
      /* match found */

      return next;
 8015b44:	e0bffc17 	ldw	r2,-16(fp)
 8015b48:	00000706 	br	8015b68 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
 8015b4c:	e0bffc17 	ldw	r2,-16(fp)
 8015b50:	10800017 	ldw	r2,0(r2)
 8015b54:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 8015b58:	e0fffc17 	ldw	r3,-16(fp)
 8015b5c:	e0bfff17 	ldw	r2,-4(fp)
 8015b60:	18bff01e 	bne	r3,r2,8015b24 <__alt_data_end+0xfc015b24>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
 8015b64:	0005883a 	mov	r2,zero
}
 8015b68:	e037883a 	mov	sp,fp
 8015b6c:	dfc00117 	ldw	ra,4(sp)
 8015b70:	df000017 	ldw	fp,0(sp)
 8015b74:	dec00204 	addi	sp,sp,8
 8015b78:	f800283a 	ret

08015b7c <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
 8015b7c:	deffff04 	addi	sp,sp,-4
 8015b80:	df000015 	stw	fp,0(sp)
 8015b84:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
 8015b88:	e037883a 	mov	sp,fp
 8015b8c:	df000017 	ldw	fp,0(sp)
 8015b90:	dec00104 	addi	sp,sp,4
 8015b94:	f800283a 	ret

08015b98 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
 8015b98:	defff804 	addi	sp,sp,-32
 8015b9c:	dfc00715 	stw	ra,28(sp)
 8015ba0:	df000615 	stw	fp,24(sp)
 8015ba4:	dc000515 	stw	r16,20(sp)
 8015ba8:	df000604 	addi	fp,sp,24
 8015bac:	e13ffb15 	stw	r4,-20(fp)
 8015bb0:	e17ffc15 	stw	r5,-16(fp)
 8015bb4:	e1bffd15 	stw	r6,-12(fp)
 8015bb8:	e1fffe15 	stw	r7,-8(fp)
  int old;

  old = open (name, flags, mode);
 8015bbc:	e13ffc17 	ldw	r4,-16(fp)
 8015bc0:	e17ffd17 	ldw	r5,-12(fp)
 8015bc4:	e1bffe17 	ldw	r6,-8(fp)
 8015bc8:	8015fe40 	call	8015fe4 <open>
 8015bcc:	e0bffa15 	stw	r2,-24(fp)

  if (old >= 0)
 8015bd0:	e0bffa17 	ldw	r2,-24(fp)
 8015bd4:	10002216 	blt	r2,zero,8015c60 <alt_open_fd+0xc8>
  {
    fd->dev      = alt_fd_list[old].dev;
 8015bd8:	04020074 	movhi	r16,2049
 8015bdc:	841e4204 	addi	r16,r16,30984
 8015be0:	e0bffa17 	ldw	r2,-24(fp)
 8015be4:	1009883a 	mov	r4,r2
 8015be8:	01400304 	movi	r5,12
 8015bec:	80027c00 	call	80027c0 <__mulsi3>
 8015bf0:	8085883a 	add	r2,r16,r2
 8015bf4:	10c00017 	ldw	r3,0(r2)
 8015bf8:	e0bffb17 	ldw	r2,-20(fp)
 8015bfc:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
 8015c00:	04020074 	movhi	r16,2049
 8015c04:	841e4204 	addi	r16,r16,30984
 8015c08:	e0bffa17 	ldw	r2,-24(fp)
 8015c0c:	1009883a 	mov	r4,r2
 8015c10:	01400304 	movi	r5,12
 8015c14:	80027c00 	call	80027c0 <__mulsi3>
 8015c18:	8085883a 	add	r2,r16,r2
 8015c1c:	10800104 	addi	r2,r2,4
 8015c20:	10c00017 	ldw	r3,0(r2)
 8015c24:	e0bffb17 	ldw	r2,-20(fp)
 8015c28:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
 8015c2c:	04020074 	movhi	r16,2049
 8015c30:	841e4204 	addi	r16,r16,30984
 8015c34:	e0bffa17 	ldw	r2,-24(fp)
 8015c38:	1009883a 	mov	r4,r2
 8015c3c:	01400304 	movi	r5,12
 8015c40:	80027c00 	call	80027c0 <__mulsi3>
 8015c44:	8085883a 	add	r2,r16,r2
 8015c48:	10800204 	addi	r2,r2,8
 8015c4c:	10c00017 	ldw	r3,0(r2)
 8015c50:	e0bffb17 	ldw	r2,-20(fp)
 8015c54:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
 8015c58:	e13ffa17 	ldw	r4,-24(fp)
 8015c5c:	80139a80 	call	80139a8 <alt_release_fd>
  }
} 
 8015c60:	e6ffff04 	addi	sp,fp,-4
 8015c64:	dfc00217 	ldw	ra,8(sp)
 8015c68:	df000117 	ldw	fp,4(sp)
 8015c6c:	dc000017 	ldw	r16,0(sp)
 8015c70:	dec00304 	addi	sp,sp,12
 8015c74:	f800283a 	ret

08015c78 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
 8015c78:	defffb04 	addi	sp,sp,-20
 8015c7c:	dfc00415 	stw	ra,16(sp)
 8015c80:	df000315 	stw	fp,12(sp)
 8015c84:	df000304 	addi	fp,sp,12
 8015c88:	e13ffd15 	stw	r4,-12(fp)
 8015c8c:	e17ffe15 	stw	r5,-8(fp)
 8015c90:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
 8015c94:	01020074 	movhi	r4,2049
 8015c98:	211e4504 	addi	r4,r4,30996
 8015c9c:	e17ffd17 	ldw	r5,-12(fp)
 8015ca0:	01800044 	movi	r6,1
 8015ca4:	01c07fc4 	movi	r7,511
 8015ca8:	8015b980 	call	8015b98 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
 8015cac:	01020074 	movhi	r4,2049
 8015cb0:	211e4204 	addi	r4,r4,30984
 8015cb4:	e17ffe17 	ldw	r5,-8(fp)
 8015cb8:	000d883a 	mov	r6,zero
 8015cbc:	01c07fc4 	movi	r7,511
 8015cc0:	8015b980 	call	8015b98 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
 8015cc4:	01020074 	movhi	r4,2049
 8015cc8:	211e4804 	addi	r4,r4,31008
 8015ccc:	e17fff17 	ldw	r5,-4(fp)
 8015cd0:	01800044 	movi	r6,1
 8015cd4:	01c07fc4 	movi	r7,511
 8015cd8:	8015b980 	call	8015b98 <alt_open_fd>
}  
 8015cdc:	e037883a 	mov	sp,fp
 8015ce0:	dfc00117 	ldw	ra,4(sp)
 8015ce4:	df000017 	ldw	fp,0(sp)
 8015ce8:	dec00204 	addi	sp,sp,8
 8015cec:	f800283a 	ret

08015cf0 <alt_irq_register>:
 */
 
int alt_irq_register (alt_u32 id, 
                      void* context, 
                      alt_isr_func handler)
{
 8015cf0:	defff004 	addi	sp,sp,-64
 8015cf4:	df000f15 	stw	fp,60(sp)
 8015cf8:	df000f04 	addi	fp,sp,60
 8015cfc:	e13ffd15 	stw	r4,-12(fp)
 8015d00:	e17ffe15 	stw	r5,-8(fp)
 8015d04:	e1bfff15 	stw	r6,-4(fp)
  int rc = -EINVAL;  
 8015d08:	00bffa84 	movi	r2,-22
 8015d0c:	e0bff115 	stw	r2,-60(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
 8015d10:	e0bffd17 	ldw	r2,-12(fp)
 8015d14:	10800828 	cmpgeui	r2,r2,32
 8015d18:	10005c1e 	bne	r2,zero,8015e8c <alt_irq_register+0x19c>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 8015d1c:	0005303a 	rdctl	r2,status
 8015d20:	e0bff315 	stw	r2,-52(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 8015d24:	e0fff317 	ldw	r3,-52(fp)
 8015d28:	00bfff84 	movi	r2,-2
 8015d2c:	1884703a 	and	r2,r3,r2
 8015d30:	1001703a 	wrctl	status,r2
  
  return context;
 8015d34:	e0bff317 	ldw	r2,-52(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all ();
 8015d38:	e0bff215 	stw	r2,-56(fp)

    alt_irq[id].handler = handler;
 8015d3c:	008200b4 	movhi	r2,2050
 8015d40:	10aca204 	addi	r2,r2,-19832
 8015d44:	e0fffd17 	ldw	r3,-12(fp)
 8015d48:	180690fa 	slli	r3,r3,3
 8015d4c:	10c5883a 	add	r2,r2,r3
 8015d50:	e0ffff17 	ldw	r3,-4(fp)
 8015d54:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = context;
 8015d58:	008200b4 	movhi	r2,2050
 8015d5c:	10aca204 	addi	r2,r2,-19832
 8015d60:	e0fffd17 	ldw	r3,-12(fp)
 8015d64:	180690fa 	slli	r3,r3,3
 8015d68:	10c5883a 	add	r2,r2,r3
 8015d6c:	10800104 	addi	r2,r2,4
 8015d70:	e0fffe17 	ldw	r3,-8(fp)
 8015d74:	10c00015 	stw	r3,0(r2)

    rc = (handler) ? alt_irq_enable (id): alt_irq_disable (id);
 8015d78:	e0bfff17 	ldw	r2,-4(fp)
 8015d7c:	10001f26 	beq	r2,zero,8015dfc <alt_irq_register+0x10c>
 8015d80:	e0bffd17 	ldw	r2,-12(fp)
 8015d84:	e0bff415 	stw	r2,-48(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 8015d88:	0005303a 	rdctl	r2,status
 8015d8c:	e0bff515 	stw	r2,-44(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 8015d90:	e0fff517 	ldw	r3,-44(fp)
 8015d94:	00bfff84 	movi	r2,-2
 8015d98:	1884703a 	and	r2,r3,r2
 8015d9c:	1001703a 	wrctl	status,r2
  
  return context;
 8015da0:	e0bff517 	ldw	r2,-44(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 8015da4:	e0bff615 	stw	r2,-40(fp)

  alt_irq_active |= (1 << id);
 8015da8:	e0bff417 	ldw	r2,-48(fp)
 8015dac:	00c00044 	movi	r3,1
 8015db0:	1884983a 	sll	r2,r3,r2
 8015db4:	1007883a 	mov	r3,r2
 8015db8:	008200b4 	movhi	r2,2050
 8015dbc:	10aa5404 	addi	r2,r2,-22192
 8015dc0:	10800017 	ldw	r2,0(r2)
 8015dc4:	1886b03a 	or	r3,r3,r2
 8015dc8:	008200b4 	movhi	r2,2050
 8015dcc:	10aa5404 	addi	r2,r2,-22192
 8015dd0:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 8015dd4:	008200b4 	movhi	r2,2050
 8015dd8:	10aa5404 	addi	r2,r2,-22192
 8015ddc:	10800017 	ldw	r2,0(r2)
 8015de0:	100170fa 	wrctl	ienable,r2
 8015de4:	e0bff617 	ldw	r2,-40(fp)
 8015de8:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 8015dec:	e0bff717 	ldw	r2,-36(fp)
 8015df0:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 8015df4:	0005883a 	mov	r2,zero
 8015df8:	00001f06 	br	8015e78 <alt_irq_register+0x188>
 8015dfc:	e0bffd17 	ldw	r2,-12(fp)
 8015e00:	e0bff815 	stw	r2,-32(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 8015e04:	0005303a 	rdctl	r2,status
 8015e08:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 8015e0c:	e0fff917 	ldw	r3,-28(fp)
 8015e10:	00bfff84 	movi	r2,-2
 8015e14:	1884703a 	and	r2,r3,r2
 8015e18:	1001703a 	wrctl	status,r2
  
  return context;
 8015e1c:	e0bff917 	ldw	r2,-28(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 8015e20:	e0bffa15 	stw	r2,-24(fp)

  alt_irq_active &= ~(1 << id);
 8015e24:	e0bff817 	ldw	r2,-32(fp)
 8015e28:	00c00044 	movi	r3,1
 8015e2c:	1884983a 	sll	r2,r3,r2
 8015e30:	0084303a 	nor	r2,zero,r2
 8015e34:	1007883a 	mov	r3,r2
 8015e38:	008200b4 	movhi	r2,2050
 8015e3c:	10aa5404 	addi	r2,r2,-22192
 8015e40:	10800017 	ldw	r2,0(r2)
 8015e44:	1886703a 	and	r3,r3,r2
 8015e48:	008200b4 	movhi	r2,2050
 8015e4c:	10aa5404 	addi	r2,r2,-22192
 8015e50:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 8015e54:	008200b4 	movhi	r2,2050
 8015e58:	10aa5404 	addi	r2,r2,-22192
 8015e5c:	10800017 	ldw	r2,0(r2)
 8015e60:	100170fa 	wrctl	ienable,r2
 8015e64:	e0bffa17 	ldw	r2,-24(fp)
 8015e68:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 8015e6c:	e0bffb17 	ldw	r2,-20(fp)
 8015e70:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 8015e74:	0005883a 	mov	r2,zero
 8015e78:	e0bff115 	stw	r2,-60(fp)
 8015e7c:	e0bff217 	ldw	r2,-56(fp)
 8015e80:	e0bffc15 	stw	r2,-16(fp)
 8015e84:	e0bffc17 	ldw	r2,-16(fp)
 8015e88:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }
  return rc; 
 8015e8c:	e0bff117 	ldw	r2,-60(fp)
}
 8015e90:	e037883a 	mov	sp,fp
 8015e94:	df000017 	ldw	fp,0(sp)
 8015e98:	dec00104 	addi	sp,sp,4
 8015e9c:	f800283a 	ret

08015ea0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 8015ea0:	defffe04 	addi	sp,sp,-8
 8015ea4:	dfc00115 	stw	ra,4(sp)
 8015ea8:	df000015 	stw	fp,0(sp)
 8015eac:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 8015eb0:	008200b4 	movhi	r2,2050
 8015eb4:	10a32104 	addi	r2,r2,-29564
 8015eb8:	10800017 	ldw	r2,0(r2)
 8015ebc:	10000526 	beq	r2,zero,8015ed4 <alt_get_errno+0x34>
 8015ec0:	008200b4 	movhi	r2,2050
 8015ec4:	10a32104 	addi	r2,r2,-29564
 8015ec8:	10800017 	ldw	r2,0(r2)
 8015ecc:	103ee83a 	callr	r2
 8015ed0:	00000206 	br	8015edc <alt_get_errno+0x3c>
 8015ed4:	008200b4 	movhi	r2,2050
 8015ed8:	10aa4d04 	addi	r2,r2,-22220
}
 8015edc:	e037883a 	mov	sp,fp
 8015ee0:	dfc00117 	ldw	ra,4(sp)
 8015ee4:	df000017 	ldw	fp,0(sp)
 8015ee8:	dec00204 	addi	sp,sp,8
 8015eec:	f800283a 	ret

08015ef0 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
 8015ef0:	defffb04 	addi	sp,sp,-20
 8015ef4:	dfc00415 	stw	ra,16(sp)
 8015ef8:	df000315 	stw	fp,12(sp)
 8015efc:	dc000215 	stw	r16,8(sp)
 8015f00:	df000304 	addi	fp,sp,12
 8015f04:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
 8015f08:	e0bffe17 	ldw	r2,-8(fp)
 8015f0c:	10800217 	ldw	r2,8(r2)
 8015f10:	10d00034 	orhi	r3,r2,16384
 8015f14:	e0bffe17 	ldw	r2,-8(fp)
 8015f18:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 8015f1c:	e03ffd15 	stw	zero,-12(fp)
 8015f20:	00002306 	br	8015fb0 <alt_file_locked+0xc0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 8015f24:	04020074 	movhi	r16,2049
 8015f28:	841e4204 	addi	r16,r16,30984
 8015f2c:	e0bffd17 	ldw	r2,-12(fp)
 8015f30:	1009883a 	mov	r4,r2
 8015f34:	01400304 	movi	r5,12
 8015f38:	80027c00 	call	80027c0 <__mulsi3>
 8015f3c:	8085883a 	add	r2,r16,r2
 8015f40:	10c00017 	ldw	r3,0(r2)
 8015f44:	e0bffe17 	ldw	r2,-8(fp)
 8015f48:	10800017 	ldw	r2,0(r2)
 8015f4c:	1880151e 	bne	r3,r2,8015fa4 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 8015f50:	04020074 	movhi	r16,2049
 8015f54:	841e4204 	addi	r16,r16,30984
 8015f58:	e0bffd17 	ldw	r2,-12(fp)
 8015f5c:	1009883a 	mov	r4,r2
 8015f60:	01400304 	movi	r5,12
 8015f64:	80027c00 	call	80027c0 <__mulsi3>
 8015f68:	8085883a 	add	r2,r16,r2
 8015f6c:	10800204 	addi	r2,r2,8
 8015f70:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 8015f74:	10000b0e 	bge	r2,zero,8015fa4 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
 8015f78:	e13ffd17 	ldw	r4,-12(fp)
 8015f7c:	01400304 	movi	r5,12
 8015f80:	80027c00 	call	80027c0 <__mulsi3>
 8015f84:	1007883a 	mov	r3,r2
 8015f88:	00820074 	movhi	r2,2049
 8015f8c:	109e4204 	addi	r2,r2,30984
 8015f90:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 8015f94:	e0bffe17 	ldw	r2,-8(fp)
 8015f98:	18800226 	beq	r3,r2,8015fa4 <alt_file_locked+0xb4>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
 8015f9c:	00bffcc4 	movi	r2,-13
 8015fa0:	00000a06 	br	8015fcc <alt_file_locked+0xdc>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 8015fa4:	e0bffd17 	ldw	r2,-12(fp)
 8015fa8:	10800044 	addi	r2,r2,1
 8015fac:	e0bffd15 	stw	r2,-12(fp)
 8015fb0:	008200b4 	movhi	r2,2050
 8015fb4:	10a32004 	addi	r2,r2,-29568
 8015fb8:	10800017 	ldw	r2,0(r2)
 8015fbc:	1007883a 	mov	r3,r2
 8015fc0:	e0bffd17 	ldw	r2,-12(fp)
 8015fc4:	18bfd72e 	bgeu	r3,r2,8015f24 <__alt_data_end+0xfc015f24>
    }
  }
  
  /* The device is not locked */
 
  return 0;
 8015fc8:	0005883a 	mov	r2,zero
}
 8015fcc:	e6ffff04 	addi	sp,fp,-4
 8015fd0:	dfc00217 	ldw	ra,8(sp)
 8015fd4:	df000117 	ldw	fp,4(sp)
 8015fd8:	dc000017 	ldw	r16,0(sp)
 8015fdc:	dec00304 	addi	sp,sp,12
 8015fe0:	f800283a 	ret

08015fe4 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
 8015fe4:	defff604 	addi	sp,sp,-40
 8015fe8:	dfc00915 	stw	ra,36(sp)
 8015fec:	df000815 	stw	fp,32(sp)
 8015ff0:	df000804 	addi	fp,sp,32
 8015ff4:	e13ffd15 	stw	r4,-12(fp)
 8015ff8:	e17ffe15 	stw	r5,-8(fp)
 8015ffc:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
 8016000:	00bfffc4 	movi	r2,-1
 8016004:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
 8016008:	00bffb44 	movi	r2,-19
 801600c:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
 8016010:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
 8016014:	e13ffd17 	ldw	r4,-12(fp)
 8016018:	014200b4 	movhi	r5,2050
 801601c:	29631e04 	addi	r5,r5,-29576
 8016020:	8015aec0 	call	8015aec <alt_find_dev>
 8016024:	e0bff815 	stw	r2,-32(fp)
 8016028:	e0bff817 	ldw	r2,-32(fp)
 801602c:	1000051e 	bne	r2,zero,8016044 <open+0x60>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
 8016030:	e13ffd17 	ldw	r4,-12(fp)
 8016034:	80163000 	call	8016300 <alt_find_file>
 8016038:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
 801603c:	00800044 	movi	r2,1
 8016040:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
 8016044:	e0bff817 	ldw	r2,-32(fp)
 8016048:	10002b26 	beq	r2,zero,80160f8 <open+0x114>
  {
    if ((index = alt_get_fd (dev)) < 0)
 801604c:	e13ff817 	ldw	r4,-32(fp)
 8016050:	80164140 	call	8016414 <alt_get_fd>
 8016054:	e0bff915 	stw	r2,-28(fp)
 8016058:	e0bff917 	ldw	r2,-28(fp)
 801605c:	1000030e 	bge	r2,zero,801606c <open+0x88>
    {
      status = index;
 8016060:	e0bff917 	ldw	r2,-28(fp)
 8016064:	e0bffa15 	stw	r2,-24(fp)
 8016068:	00002506 	br	8016100 <open+0x11c>
    }
    else
    {
      fd = &alt_fd_list[index];
 801606c:	e13ff917 	ldw	r4,-28(fp)
 8016070:	01400304 	movi	r5,12
 8016074:	80027c00 	call	80027c0 <__mulsi3>
 8016078:	1007883a 	mov	r3,r2
 801607c:	00820074 	movhi	r2,2049
 8016080:	109e4204 	addi	r2,r2,30984
 8016084:	1885883a 	add	r2,r3,r2
 8016088:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
 801608c:	e0fffe17 	ldw	r3,-8(fp)
 8016090:	00900034 	movhi	r2,16384
 8016094:	10bfffc4 	addi	r2,r2,-1
 8016098:	1886703a 	and	r3,r3,r2
 801609c:	e0bffc17 	ldw	r2,-16(fp)
 80160a0:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
 80160a4:	e0bffb17 	ldw	r2,-20(fp)
 80160a8:	1000051e 	bne	r2,zero,80160c0 <open+0xdc>
 80160ac:	e13ffc17 	ldw	r4,-16(fp)
 80160b0:	8015ef00 	call	8015ef0 <alt_file_locked>
 80160b4:	e0bffa15 	stw	r2,-24(fp)
 80160b8:	e0bffa17 	ldw	r2,-24(fp)
 80160bc:	10001016 	blt	r2,zero,8016100 <open+0x11c>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
 80160c0:	e0bff817 	ldw	r2,-32(fp)
 80160c4:	10800317 	ldw	r2,12(r2)
 80160c8:	10000826 	beq	r2,zero,80160ec <open+0x108>
 80160cc:	e0bff817 	ldw	r2,-32(fp)
 80160d0:	10800317 	ldw	r2,12(r2)
 80160d4:	e13ffc17 	ldw	r4,-16(fp)
 80160d8:	e17ffd17 	ldw	r5,-12(fp)
 80160dc:	e1bffe17 	ldw	r6,-8(fp)
 80160e0:	e1ffff17 	ldw	r7,-4(fp)
 80160e4:	103ee83a 	callr	r2
 80160e8:	00000106 	br	80160f0 <open+0x10c>
 80160ec:	0005883a 	mov	r2,zero
 80160f0:	e0bffa15 	stw	r2,-24(fp)
 80160f4:	00000206 	br	8016100 <open+0x11c>
      }
    }
  }
  else
  {
    status = -ENODEV;
 80160f8:	00bffb44 	movi	r2,-19
 80160fc:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
 8016100:	e0bffa17 	ldw	r2,-24(fp)
 8016104:	1000090e 	bge	r2,zero,801612c <open+0x148>
  {
    alt_release_fd (index);  
 8016108:	e13ff917 	ldw	r4,-28(fp)
 801610c:	80139a80 	call	80139a8 <alt_release_fd>
    ALT_ERRNO = -status;
 8016110:	8015ea00 	call	8015ea0 <alt_get_errno>
 8016114:	1007883a 	mov	r3,r2
 8016118:	e0bffa17 	ldw	r2,-24(fp)
 801611c:	0085c83a 	sub	r2,zero,r2
 8016120:	18800015 	stw	r2,0(r3)
    return -1;
 8016124:	00bfffc4 	movi	r2,-1
 8016128:	00000106 	br	8016130 <open+0x14c>
  }
  
  /* return the reference upon success */

  return index;
 801612c:	e0bff917 	ldw	r2,-28(fp)
}
 8016130:	e037883a 	mov	sp,fp
 8016134:	dfc00117 	ldw	ra,4(sp)
 8016138:	df000017 	ldw	fp,0(sp)
 801613c:	dec00204 	addi	sp,sp,8
 8016140:	f800283a 	ret

08016144 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
 8016144:	defffa04 	addi	sp,sp,-24
 8016148:	df000515 	stw	fp,20(sp)
 801614c:	df000504 	addi	fp,sp,20
 8016150:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 8016154:	0005303a 	rdctl	r2,status
 8016158:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 801615c:	e0fffc17 	ldw	r3,-16(fp)
 8016160:	00bfff84 	movi	r2,-2
 8016164:	1884703a 	and	r2,r3,r2
 8016168:	1001703a 	wrctl	status,r2
  
  return context;
 801616c:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
 8016170:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
 8016174:	e0bfff17 	ldw	r2,-4(fp)
 8016178:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
 801617c:	e0bffd17 	ldw	r2,-12(fp)
 8016180:	10800017 	ldw	r2,0(r2)
 8016184:	e0fffd17 	ldw	r3,-12(fp)
 8016188:	18c00117 	ldw	r3,4(r3)
 801618c:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
 8016190:	e0bffd17 	ldw	r2,-12(fp)
 8016194:	10800117 	ldw	r2,4(r2)
 8016198:	e0fffd17 	ldw	r3,-12(fp)
 801619c:	18c00017 	ldw	r3,0(r3)
 80161a0:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
 80161a4:	e0bffd17 	ldw	r2,-12(fp)
 80161a8:	e0fffd17 	ldw	r3,-12(fp)
 80161ac:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
 80161b0:	e0bffd17 	ldw	r2,-12(fp)
 80161b4:	e0fffd17 	ldw	r3,-12(fp)
 80161b8:	10c00015 	stw	r3,0(r2)
 80161bc:	e0bffb17 	ldw	r2,-20(fp)
 80161c0:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 80161c4:	e0bffe17 	ldw	r2,-8(fp)
 80161c8:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
 80161cc:	e037883a 	mov	sp,fp
 80161d0:	df000017 	ldw	fp,0(sp)
 80161d4:	dec00104 	addi	sp,sp,4
 80161d8:	f800283a 	ret

080161dc <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
 80161dc:	defffb04 	addi	sp,sp,-20
 80161e0:	dfc00415 	stw	ra,16(sp)
 80161e4:	df000315 	stw	fp,12(sp)
 80161e8:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
 80161ec:	d0a02117 	ldw	r2,-32636(gp)
 80161f0:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
 80161f4:	d0a74f17 	ldw	r2,-25284(gp)
 80161f8:	10800044 	addi	r2,r2,1
 80161fc:	d0a74f15 	stw	r2,-25284(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 8016200:	00002e06 	br	80162bc <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
 8016204:	e0bffd17 	ldw	r2,-12(fp)
 8016208:	10800017 	ldw	r2,0(r2)
 801620c:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
 8016210:	e0bffd17 	ldw	r2,-12(fp)
 8016214:	10800403 	ldbu	r2,16(r2)
 8016218:	10803fcc 	andi	r2,r2,255
 801621c:	10000426 	beq	r2,zero,8016230 <alt_tick+0x54>
 8016220:	d0a74f17 	ldw	r2,-25284(gp)
 8016224:	1000021e 	bne	r2,zero,8016230 <alt_tick+0x54>
    {
      alarm->rollover = 0;
 8016228:	e0bffd17 	ldw	r2,-12(fp)
 801622c:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
 8016230:	e0bffd17 	ldw	r2,-12(fp)
 8016234:	10800217 	ldw	r2,8(r2)
 8016238:	d0e74f17 	ldw	r3,-25284(gp)
 801623c:	18801d36 	bltu	r3,r2,80162b4 <alt_tick+0xd8>
 8016240:	e0bffd17 	ldw	r2,-12(fp)
 8016244:	10800403 	ldbu	r2,16(r2)
 8016248:	10803fcc 	andi	r2,r2,255
 801624c:	1000191e 	bne	r2,zero,80162b4 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
 8016250:	e0bffd17 	ldw	r2,-12(fp)
 8016254:	10800317 	ldw	r2,12(r2)
 8016258:	e0fffd17 	ldw	r3,-12(fp)
 801625c:	18c00517 	ldw	r3,20(r3)
 8016260:	1809883a 	mov	r4,r3
 8016264:	103ee83a 	callr	r2
 8016268:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
 801626c:	e0bfff17 	ldw	r2,-4(fp)
 8016270:	1000031e 	bne	r2,zero,8016280 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
 8016274:	e13ffd17 	ldw	r4,-12(fp)
 8016278:	80161440 	call	8016144 <alt_alarm_stop>
 801627c:	00000d06 	br	80162b4 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
 8016280:	e0bffd17 	ldw	r2,-12(fp)
 8016284:	10c00217 	ldw	r3,8(r2)
 8016288:	e0bfff17 	ldw	r2,-4(fp)
 801628c:	1887883a 	add	r3,r3,r2
 8016290:	e0bffd17 	ldw	r2,-12(fp)
 8016294:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
 8016298:	e0bffd17 	ldw	r2,-12(fp)
 801629c:	10c00217 	ldw	r3,8(r2)
 80162a0:	d0a74f17 	ldw	r2,-25284(gp)
 80162a4:	1880032e 	bgeu	r3,r2,80162b4 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
 80162a8:	e0bffd17 	ldw	r2,-12(fp)
 80162ac:	00c00044 	movi	r3,1
 80162b0:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
 80162b4:	e0bffe17 	ldw	r2,-8(fp)
 80162b8:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 80162bc:	e0fffd17 	ldw	r3,-12(fp)
 80162c0:	d0a02104 	addi	r2,gp,-32636
 80162c4:	18bfcf1e 	bne	r3,r2,8016204 <__alt_data_end+0xfc016204>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
 80162c8:	0001883a 	nop
}
 80162cc:	e037883a 	mov	sp,fp
 80162d0:	dfc00117 	ldw	ra,4(sp)
 80162d4:	df000017 	ldw	fp,0(sp)
 80162d8:	dec00204 	addi	sp,sp,8
 80162dc:	f800283a 	ret

080162e0 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
 80162e0:	deffff04 	addi	sp,sp,-4
 80162e4:	df000015 	stw	fp,0(sp)
 80162e8:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
 80162ec:	000170fa 	wrctl	ienable,zero
}
 80162f0:	e037883a 	mov	sp,fp
 80162f4:	df000017 	ldw	fp,0(sp)
 80162f8:	dec00104 	addi	sp,sp,4
 80162fc:	f800283a 	ret

08016300 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
 8016300:	defffb04 	addi	sp,sp,-20
 8016304:	dfc00415 	stw	ra,16(sp)
 8016308:	df000315 	stw	fp,12(sp)
 801630c:	df000304 	addi	fp,sp,12
 8016310:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
 8016314:	008200b4 	movhi	r2,2050
 8016318:	10a31c04 	addi	r2,r2,-29584
 801631c:	10800017 	ldw	r2,0(r2)
 8016320:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 8016324:	00003106 	br	80163ec <alt_find_file+0xec>
  {
    len = strlen(next->name);
 8016328:	e0bffd17 	ldw	r2,-12(fp)
 801632c:	10800217 	ldw	r2,8(r2)
 8016330:	1009883a 	mov	r4,r2
 8016334:	8003e140 	call	8003e14 <strlen>
 8016338:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
 801633c:	e0bffd17 	ldw	r2,-12(fp)
 8016340:	10c00217 	ldw	r3,8(r2)
 8016344:	e0bffe17 	ldw	r2,-8(fp)
 8016348:	10bfffc4 	addi	r2,r2,-1
 801634c:	1885883a 	add	r2,r3,r2
 8016350:	10800003 	ldbu	r2,0(r2)
 8016354:	10803fcc 	andi	r2,r2,255
 8016358:	1080201c 	xori	r2,r2,128
 801635c:	10bfe004 	addi	r2,r2,-128
 8016360:	10800bd8 	cmpnei	r2,r2,47
 8016364:	1000031e 	bne	r2,zero,8016374 <alt_find_file+0x74>
    {
      len -= 1;
 8016368:	e0bffe17 	ldw	r2,-8(fp)
 801636c:	10bfffc4 	addi	r2,r2,-1
 8016370:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 8016374:	e0bffe17 	ldw	r2,-8(fp)
 8016378:	e0ffff17 	ldw	r3,-4(fp)
 801637c:	1885883a 	add	r2,r3,r2
 8016380:	10800003 	ldbu	r2,0(r2)
 8016384:	10803fcc 	andi	r2,r2,255
 8016388:	1080201c 	xori	r2,r2,128
 801638c:	10bfe004 	addi	r2,r2,-128
 8016390:	10800be0 	cmpeqi	r2,r2,47
 8016394:	1000081e 	bne	r2,zero,80163b8 <alt_find_file+0xb8>
 8016398:	e0bffe17 	ldw	r2,-8(fp)
 801639c:	e0ffff17 	ldw	r3,-4(fp)
 80163a0:	1885883a 	add	r2,r3,r2
 80163a4:	10800003 	ldbu	r2,0(r2)
 80163a8:	10803fcc 	andi	r2,r2,255
 80163ac:	1080201c 	xori	r2,r2,128
 80163b0:	10bfe004 	addi	r2,r2,-128
 80163b4:	10000a1e 	bne	r2,zero,80163e0 <alt_find_file+0xe0>
        !memcmp (next->name, name, len))
 80163b8:	e0bffd17 	ldw	r2,-12(fp)
 80163bc:	10c00217 	ldw	r3,8(r2)
 80163c0:	e0bffe17 	ldw	r2,-8(fp)
 80163c4:	1809883a 	mov	r4,r3
 80163c8:	e17fff17 	ldw	r5,-4(fp)
 80163cc:	100d883a 	mov	r6,r2
 80163d0:	80165d00 	call	80165d0 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 80163d4:	1000021e 	bne	r2,zero,80163e0 <alt_find_file+0xe0>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
 80163d8:	e0bffd17 	ldw	r2,-12(fp)
 80163dc:	00000806 	br	8016400 <alt_find_file+0x100>
    }
    next = (alt_dev*) next->llist.next;
 80163e0:	e0bffd17 	ldw	r2,-12(fp)
 80163e4:	10800017 	ldw	r2,0(r2)
 80163e8:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 80163ec:	e0fffd17 	ldw	r3,-12(fp)
 80163f0:	008200b4 	movhi	r2,2050
 80163f4:	10a31c04 	addi	r2,r2,-29584
 80163f8:	18bfcb1e 	bne	r3,r2,8016328 <__alt_data_end+0xfc016328>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
 80163fc:	0005883a 	mov	r2,zero
}
 8016400:	e037883a 	mov	sp,fp
 8016404:	dfc00117 	ldw	ra,4(sp)
 8016408:	df000017 	ldw	fp,0(sp)
 801640c:	dec00204 	addi	sp,sp,8
 8016410:	f800283a 	ret

08016414 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
 8016414:	defffa04 	addi	sp,sp,-24
 8016418:	dfc00515 	stw	ra,20(sp)
 801641c:	df000415 	stw	fp,16(sp)
 8016420:	dc000315 	stw	r16,12(sp)
 8016424:	df000404 	addi	fp,sp,16
 8016428:	e13ffe15 	stw	r4,-8(fp)
  alt_32 i;
  int rc = -EMFILE;
 801642c:	00bffa04 	movi	r2,-24
 8016430:	e0bffd15 	stw	r2,-12(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 8016434:	e03ffc15 	stw	zero,-16(fp)
 8016438:	00002106 	br	80164c0 <alt_get_fd+0xac>
  {
    if (!alt_fd_list[i].dev)
 801643c:	04020074 	movhi	r16,2049
 8016440:	841e4204 	addi	r16,r16,30984
 8016444:	e0bffc17 	ldw	r2,-16(fp)
 8016448:	1009883a 	mov	r4,r2
 801644c:	01400304 	movi	r5,12
 8016450:	80027c00 	call	80027c0 <__mulsi3>
 8016454:	8085883a 	add	r2,r16,r2
 8016458:	10800017 	ldw	r2,0(r2)
 801645c:	1000151e 	bne	r2,zero,80164b4 <alt_get_fd+0xa0>
    {
      alt_fd_list[i].dev = dev;
 8016460:	04020074 	movhi	r16,2049
 8016464:	841e4204 	addi	r16,r16,30984
 8016468:	e0bffc17 	ldw	r2,-16(fp)
 801646c:	1009883a 	mov	r4,r2
 8016470:	01400304 	movi	r5,12
 8016474:	80027c00 	call	80027c0 <__mulsi3>
 8016478:	8085883a 	add	r2,r16,r2
 801647c:	e0fffe17 	ldw	r3,-8(fp)
 8016480:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
 8016484:	008200b4 	movhi	r2,2050
 8016488:	10a32004 	addi	r2,r2,-29568
 801648c:	10c00017 	ldw	r3,0(r2)
 8016490:	e0bffc17 	ldw	r2,-16(fp)
 8016494:	1880040e 	bge	r3,r2,80164a8 <alt_get_fd+0x94>
      {
        alt_max_fd = i;
 8016498:	008200b4 	movhi	r2,2050
 801649c:	10a32004 	addi	r2,r2,-29568
 80164a0:	e0fffc17 	ldw	r3,-16(fp)
 80164a4:	10c00015 	stw	r3,0(r2)
      }
      rc = i;
 80164a8:	e0bffc17 	ldw	r2,-16(fp)
 80164ac:	e0bffd15 	stw	r2,-12(fp)
      goto alt_get_fd_exit;
 80164b0:	00000606 	br	80164cc <alt_get_fd+0xb8>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 80164b4:	e0bffc17 	ldw	r2,-16(fp)
 80164b8:	10800044 	addi	r2,r2,1
 80164bc:	e0bffc15 	stw	r2,-16(fp)
 80164c0:	e0bffc17 	ldw	r2,-16(fp)
 80164c4:	10800810 	cmplti	r2,r2,32
 80164c8:	103fdc1e 	bne	r2,zero,801643c <__alt_data_end+0xfc01643c>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
 80164cc:	e0bffd17 	ldw	r2,-12(fp)
}
 80164d0:	e6ffff04 	addi	sp,fp,-4
 80164d4:	dfc00217 	ldw	ra,8(sp)
 80164d8:	df000117 	ldw	fp,4(sp)
 80164dc:	dc000017 	ldw	r16,0(sp)
 80164e0:	dec00304 	addi	sp,sp,12
 80164e4:	f800283a 	ret

080164e8 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
 80164e8:	defffe04 	addi	sp,sp,-8
 80164ec:	df000115 	stw	fp,4(sp)
 80164f0:	df000104 	addi	fp,sp,4
 80164f4:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
 80164f8:	e0bfff17 	ldw	r2,-4(fp)
 80164fc:	10bffe84 	addi	r2,r2,-6
 8016500:	10c00428 	cmpgeui	r3,r2,16
 8016504:	18001a1e 	bne	r3,zero,8016570 <alt_exception_cause_generated_bad_addr+0x88>
 8016508:	100690ba 	slli	r3,r2,2
 801650c:	00820074 	movhi	r2,2049
 8016510:	10994804 	addi	r2,r2,25888
 8016514:	1885883a 	add	r2,r3,r2
 8016518:	10800017 	ldw	r2,0(r2)
 801651c:	1000683a 	jmp	r2
 8016520:	08016560 	cmpeqi	zero,at,1429
 8016524:	08016560 	cmpeqi	zero,at,1429
 8016528:	08016570 	cmpltui	zero,at,1429
 801652c:	08016570 	cmpltui	zero,at,1429
 8016530:	08016570 	cmpltui	zero,at,1429
 8016534:	08016560 	cmpeqi	zero,at,1429
 8016538:	08016568 	cmpgeui	zero,at,1429
 801653c:	08016570 	cmpltui	zero,at,1429
 8016540:	08016560 	cmpeqi	zero,at,1429
 8016544:	08016560 	cmpeqi	zero,at,1429
 8016548:	08016570 	cmpltui	zero,at,1429
 801654c:	08016560 	cmpeqi	zero,at,1429
 8016550:	08016568 	cmpgeui	zero,at,1429
 8016554:	08016570 	cmpltui	zero,at,1429
 8016558:	08016570 	cmpltui	zero,at,1429
 801655c:	08016560 	cmpeqi	zero,at,1429
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
 8016560:	00800044 	movi	r2,1
 8016564:	00000306 	br	8016574 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
 8016568:	0005883a 	mov	r2,zero
 801656c:	00000106 	br	8016574 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
 8016570:	0005883a 	mov	r2,zero
  }
}
 8016574:	e037883a 	mov	sp,fp
 8016578:	df000017 	ldw	fp,0(sp)
 801657c:	dec00104 	addi	sp,sp,4
 8016580:	f800283a 	ret

08016584 <atexit>:
 8016584:	200b883a 	mov	r5,r4
 8016588:	000d883a 	mov	r6,zero
 801658c:	0009883a 	mov	r4,zero
 8016590:	000f883a 	mov	r7,zero
 8016594:	801664c1 	jmpi	801664c <__register_exitproc>

08016598 <exit>:
 8016598:	defffe04 	addi	sp,sp,-8
 801659c:	000b883a 	mov	r5,zero
 80165a0:	dc000015 	stw	r16,0(sp)
 80165a4:	dfc00115 	stw	ra,4(sp)
 80165a8:	2021883a 	mov	r16,r4
 80165ac:	80167600 	call	8016760 <__call_exitprocs>
 80165b0:	008200b4 	movhi	r2,2050
 80165b4:	10a31804 	addi	r2,r2,-29600
 80165b8:	11000017 	ldw	r4,0(r2)
 80165bc:	20800f17 	ldw	r2,60(r4)
 80165c0:	10000126 	beq	r2,zero,80165c8 <exit+0x30>
 80165c4:	103ee83a 	callr	r2
 80165c8:	8009883a 	mov	r4,r16
 80165cc:	80131b40 	call	80131b4 <_exit>

080165d0 <memcmp>:
 80165d0:	01c000c4 	movi	r7,3
 80165d4:	3980192e 	bgeu	r7,r6,801663c <memcmp+0x6c>
 80165d8:	2144b03a 	or	r2,r4,r5
 80165dc:	11c4703a 	and	r2,r2,r7
 80165e0:	10000f26 	beq	r2,zero,8016620 <memcmp+0x50>
 80165e4:	20800003 	ldbu	r2,0(r4)
 80165e8:	28c00003 	ldbu	r3,0(r5)
 80165ec:	10c0151e 	bne	r2,r3,8016644 <memcmp+0x74>
 80165f0:	31bfff84 	addi	r6,r6,-2
 80165f4:	01ffffc4 	movi	r7,-1
 80165f8:	00000406 	br	801660c <memcmp+0x3c>
 80165fc:	20800003 	ldbu	r2,0(r4)
 8016600:	28c00003 	ldbu	r3,0(r5)
 8016604:	31bfffc4 	addi	r6,r6,-1
 8016608:	10c00e1e 	bne	r2,r3,8016644 <memcmp+0x74>
 801660c:	21000044 	addi	r4,r4,1
 8016610:	29400044 	addi	r5,r5,1
 8016614:	31fff91e 	bne	r6,r7,80165fc <__alt_data_end+0xfc0165fc>
 8016618:	0005883a 	mov	r2,zero
 801661c:	f800283a 	ret
 8016620:	20c00017 	ldw	r3,0(r4)
 8016624:	28800017 	ldw	r2,0(r5)
 8016628:	1880041e 	bne	r3,r2,801663c <memcmp+0x6c>
 801662c:	31bfff04 	addi	r6,r6,-4
 8016630:	21000104 	addi	r4,r4,4
 8016634:	29400104 	addi	r5,r5,4
 8016638:	39bff936 	bltu	r7,r6,8016620 <__alt_data_end+0xfc016620>
 801663c:	303fe91e 	bne	r6,zero,80165e4 <__alt_data_end+0xfc0165e4>
 8016640:	003ff506 	br	8016618 <__alt_data_end+0xfc016618>
 8016644:	10c5c83a 	sub	r2,r2,r3
 8016648:	f800283a 	ret

0801664c <__register_exitproc>:
 801664c:	008200b4 	movhi	r2,2050
 8016650:	defffa04 	addi	sp,sp,-24
 8016654:	10a31804 	addi	r2,r2,-29600
 8016658:	dc000315 	stw	r16,12(sp)
 801665c:	14000017 	ldw	r16,0(r2)
 8016660:	dc400415 	stw	r17,16(sp)
 8016664:	dfc00515 	stw	ra,20(sp)
 8016668:	80805217 	ldw	r2,328(r16)
 801666c:	2023883a 	mov	r17,r4
 8016670:	10003626 	beq	r2,zero,801674c <__register_exitproc+0x100>
 8016674:	10c00117 	ldw	r3,4(r2)
 8016678:	010007c4 	movi	r4,31
 801667c:	20c00e16 	blt	r4,r3,80166b8 <__register_exitproc+0x6c>
 8016680:	1a400044 	addi	r9,r3,1
 8016684:	8800211e 	bne	r17,zero,801670c <__register_exitproc+0xc0>
 8016688:	18c00084 	addi	r3,r3,2
 801668c:	18c7883a 	add	r3,r3,r3
 8016690:	18c7883a 	add	r3,r3,r3
 8016694:	12400115 	stw	r9,4(r2)
 8016698:	10c7883a 	add	r3,r2,r3
 801669c:	19400015 	stw	r5,0(r3)
 80166a0:	0005883a 	mov	r2,zero
 80166a4:	dfc00517 	ldw	ra,20(sp)
 80166a8:	dc400417 	ldw	r17,16(sp)
 80166ac:	dc000317 	ldw	r16,12(sp)
 80166b0:	dec00604 	addi	sp,sp,24
 80166b4:	f800283a 	ret
 80166b8:	00820034 	movhi	r2,2048
 80166bc:	108b4804 	addi	r2,r2,11552
 80166c0:	10002526 	beq	r2,zero,8016758 <__register_exitproc+0x10c>
 80166c4:	01006404 	movi	r4,400
 80166c8:	d9400015 	stw	r5,0(sp)
 80166cc:	d9800115 	stw	r6,4(sp)
 80166d0:	d9c00215 	stw	r7,8(sp)
 80166d4:	8002d200 	call	8002d20 <malloc>
 80166d8:	d9400017 	ldw	r5,0(sp)
 80166dc:	d9800117 	ldw	r6,4(sp)
 80166e0:	d9c00217 	ldw	r7,8(sp)
 80166e4:	10001c26 	beq	r2,zero,8016758 <__register_exitproc+0x10c>
 80166e8:	80c05217 	ldw	r3,328(r16)
 80166ec:	10000115 	stw	zero,4(r2)
 80166f0:	02400044 	movi	r9,1
 80166f4:	10c00015 	stw	r3,0(r2)
 80166f8:	80805215 	stw	r2,328(r16)
 80166fc:	10006215 	stw	zero,392(r2)
 8016700:	10006315 	stw	zero,396(r2)
 8016704:	0007883a 	mov	r3,zero
 8016708:	883fdf26 	beq	r17,zero,8016688 <__alt_data_end+0xfc016688>
 801670c:	18d1883a 	add	r8,r3,r3
 8016710:	4211883a 	add	r8,r8,r8
 8016714:	1211883a 	add	r8,r2,r8
 8016718:	41802215 	stw	r6,136(r8)
 801671c:	01000044 	movi	r4,1
 8016720:	11806217 	ldw	r6,392(r2)
 8016724:	20c8983a 	sll	r4,r4,r3
 8016728:	310cb03a 	or	r6,r6,r4
 801672c:	11806215 	stw	r6,392(r2)
 8016730:	41c04215 	stw	r7,264(r8)
 8016734:	01800084 	movi	r6,2
 8016738:	89bfd31e 	bne	r17,r6,8016688 <__alt_data_end+0xfc016688>
 801673c:	11806317 	ldw	r6,396(r2)
 8016740:	3108b03a 	or	r4,r6,r4
 8016744:	11006315 	stw	r4,396(r2)
 8016748:	003fcf06 	br	8016688 <__alt_data_end+0xfc016688>
 801674c:	80805304 	addi	r2,r16,332
 8016750:	80805215 	stw	r2,328(r16)
 8016754:	003fc706 	br	8016674 <__alt_data_end+0xfc016674>
 8016758:	00bfffc4 	movi	r2,-1
 801675c:	003fd106 	br	80166a4 <__alt_data_end+0xfc0166a4>

08016760 <__call_exitprocs>:
 8016760:	008200b4 	movhi	r2,2050
 8016764:	10a31804 	addi	r2,r2,-29600
 8016768:	10800017 	ldw	r2,0(r2)
 801676c:	defff404 	addi	sp,sp,-48
 8016770:	dd800815 	stw	r22,32(sp)
 8016774:	d8800015 	stw	r2,0(sp)
 8016778:	10805204 	addi	r2,r2,328
 801677c:	dd000615 	stw	r20,24(sp)
 8016780:	dc800415 	stw	r18,16(sp)
 8016784:	dfc00b15 	stw	ra,44(sp)
 8016788:	df000a15 	stw	fp,40(sp)
 801678c:	ddc00915 	stw	r23,36(sp)
 8016790:	dd400715 	stw	r21,28(sp)
 8016794:	dcc00515 	stw	r19,20(sp)
 8016798:	dc400315 	stw	r17,12(sp)
 801679c:	dc000215 	stw	r16,8(sp)
 80167a0:	2025883a 	mov	r18,r4
 80167a4:	2829883a 	mov	r20,r5
 80167a8:	d8800115 	stw	r2,4(sp)
 80167ac:	05bfffc4 	movi	r22,-1
 80167b0:	d8800017 	ldw	r2,0(sp)
 80167b4:	14c05217 	ldw	r19,328(r2)
 80167b8:	98001d26 	beq	r19,zero,8016830 <__call_exitprocs+0xd0>
 80167bc:	dd400117 	ldw	r21,4(sp)
 80167c0:	98800117 	ldw	r2,4(r19)
 80167c4:	173fffc4 	addi	fp,r2,-1
 80167c8:	e0000d16 	blt	fp,zero,8016800 <__call_exitprocs+0xa0>
 80167cc:	14000044 	addi	r16,r2,1
 80167d0:	8421883a 	add	r16,r16,r16
 80167d4:	8421883a 	add	r16,r16,r16
 80167d8:	84402004 	addi	r17,r16,128
 80167dc:	9c63883a 	add	r17,r19,r17
 80167e0:	9c21883a 	add	r16,r19,r16
 80167e4:	a0001e26 	beq	r20,zero,8016860 <__call_exitprocs+0x100>
 80167e8:	80804017 	ldw	r2,256(r16)
 80167ec:	15001c26 	beq	r2,r20,8016860 <__call_exitprocs+0x100>
 80167f0:	e73fffc4 	addi	fp,fp,-1
 80167f4:	843fff04 	addi	r16,r16,-4
 80167f8:	8c7fff04 	addi	r17,r17,-4
 80167fc:	e5bff91e 	bne	fp,r22,80167e4 <__alt_data_end+0xfc0167e4>
 8016800:	00820034 	movhi	r2,2048
 8016804:	108b4d04 	addi	r2,r2,11572
 8016808:	10000926 	beq	r2,zero,8016830 <__call_exitprocs+0xd0>
 801680c:	98800117 	ldw	r2,4(r19)
 8016810:	1000311e 	bne	r2,zero,80168d8 <__call_exitprocs+0x178>
 8016814:	98800017 	ldw	r2,0(r19)
 8016818:	10003426 	beq	r2,zero,80168ec <__call_exitprocs+0x18c>
 801681c:	9809883a 	mov	r4,r19
 8016820:	a8800015 	stw	r2,0(r21)
 8016824:	8002d340 	call	8002d34 <free>
 8016828:	acc00017 	ldw	r19,0(r21)
 801682c:	983fe41e 	bne	r19,zero,80167c0 <__alt_data_end+0xfc0167c0>
 8016830:	dfc00b17 	ldw	ra,44(sp)
 8016834:	df000a17 	ldw	fp,40(sp)
 8016838:	ddc00917 	ldw	r23,36(sp)
 801683c:	dd800817 	ldw	r22,32(sp)
 8016840:	dd400717 	ldw	r21,28(sp)
 8016844:	dd000617 	ldw	r20,24(sp)
 8016848:	dcc00517 	ldw	r19,20(sp)
 801684c:	dc800417 	ldw	r18,16(sp)
 8016850:	dc400317 	ldw	r17,12(sp)
 8016854:	dc000217 	ldw	r16,8(sp)
 8016858:	dec00c04 	addi	sp,sp,48
 801685c:	f800283a 	ret
 8016860:	98800117 	ldw	r2,4(r19)
 8016864:	80c00017 	ldw	r3,0(r16)
 8016868:	10bfffc4 	addi	r2,r2,-1
 801686c:	17001526 	beq	r2,fp,80168c4 <__call_exitprocs+0x164>
 8016870:	80000015 	stw	zero,0(r16)
 8016874:	183fde26 	beq	r3,zero,80167f0 <__alt_data_end+0xfc0167f0>
 8016878:	00800044 	movi	r2,1
 801687c:	1708983a 	sll	r4,r2,fp
 8016880:	98806217 	ldw	r2,392(r19)
 8016884:	9dc00117 	ldw	r23,4(r19)
 8016888:	2084703a 	and	r2,r4,r2
 801688c:	1000061e 	bne	r2,zero,80168a8 <__call_exitprocs+0x148>
 8016890:	183ee83a 	callr	r3
 8016894:	98800117 	ldw	r2,4(r19)
 8016898:	15ffc51e 	bne	r2,r23,80167b0 <__alt_data_end+0xfc0167b0>
 801689c:	a8800017 	ldw	r2,0(r21)
 80168a0:	14ffd326 	beq	r2,r19,80167f0 <__alt_data_end+0xfc0167f0>
 80168a4:	003fc206 	br	80167b0 <__alt_data_end+0xfc0167b0>
 80168a8:	98806317 	ldw	r2,396(r19)
 80168ac:	2084703a 	and	r2,r4,r2
 80168b0:	1000061e 	bne	r2,zero,80168cc <__call_exitprocs+0x16c>
 80168b4:	89400017 	ldw	r5,0(r17)
 80168b8:	9009883a 	mov	r4,r18
 80168bc:	183ee83a 	callr	r3
 80168c0:	003ff406 	br	8016894 <__alt_data_end+0xfc016894>
 80168c4:	9f000115 	stw	fp,4(r19)
 80168c8:	003fea06 	br	8016874 <__alt_data_end+0xfc016874>
 80168cc:	89000017 	ldw	r4,0(r17)
 80168d0:	183ee83a 	callr	r3
 80168d4:	003fef06 	br	8016894 <__alt_data_end+0xfc016894>
 80168d8:	98800017 	ldw	r2,0(r19)
 80168dc:	982b883a 	mov	r21,r19
 80168e0:	1027883a 	mov	r19,r2
 80168e4:	983fb61e 	bne	r19,zero,80167c0 <__alt_data_end+0xfc0167c0>
 80168e8:	003fd106 	br	8016830 <__alt_data_end+0xfc016830>
 80168ec:	0005883a 	mov	r2,zero
 80168f0:	003ffa06 	br	80168dc <__alt_data_end+0xfc0168dc>
 80168f4:	0201ffff 	0x201ffff
 80168f8:	883a0000 	call	883a000 <_gp+0x8193e4>
 80168fc:	010d0bff 	0x10d0bff
 8016900:	01010002 	0x1010002
	...
 801690c:	010d0bff 	0x10d0bff
 8016910:	01010004 	movi	r4,1024
 8016914:	00000100 	call	10 <__reset-0x7fffff0>
 8016918:	00000000 	call	0 <__reset-0x8000000>
 801691c:	01110bff 	0x1110bff
 8016920:	01010004 	movi	r4,1024
 8016924:	7f000105 	stb	fp,4(r15)
 8016928:	007d0000 	call	7d000 <__reset-0x7f83000>
	...
